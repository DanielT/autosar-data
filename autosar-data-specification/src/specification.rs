// This file is @generated

use crate::regex::*;
use crate::*;

#[cfg(feature = "docstrings")]
macro_rules! element {
    ($namepart:ident, $etype:literal, $mult:ident, $ordered:literal, $splittable:literal, $stdrestrict:ident, $docid:expr) => {
        ElementDefinition {
            name: ElementName::$namepart,
            elemtype: $etype,
            multiplicity: ElementMultiplicity::$mult,
            ordered: $ordered,
            splittable: $splittable,
            restrict_std: StdRestrict::$stdrestrict,
            docstring: $docid,
        }
    };
}
#[cfg(not(feature = "docstrings"))]
macro_rules! element {
    ($namepart:ident, $etype:literal, $mult:ident, $ordered:literal, $splittable:literal, $stdrestrict:ident, $docid:expr) => {
        ElementDefinition {
            name: ElementName::$namepart,
            elemtype: $etype,
            multiplicity: ElementMultiplicity::$mult,
            ordered: $ordered,
            splittable: $splittable,
            restrict_std: StdRestrict::$stdrestrict,
        }
    };
}

macro_rules! e {
    ($idx:literal) => {
        SubElement::Element($idx)
    };
}

macro_rules! g {
    ($idx:literal) => {
        SubElement::Group($idx)
    };
}

#[rustfmt::skip]
pub(crate) static CHARACTER_DATA: [CharacterDataSpec; 984] = [
    CharacterDataSpec::Enum{items: &[(EnumItem::AbstractAccessPoint, 0x1fff00), (EnumItem::AsynchronousServerCallPoint, 0x1fff00), (EnumItem::AsynchronousServerCallResultPoint, 0x1fff00), (EnumItem::ExternalTriggeringPointIdent, 0x1fff00), (EnumItem::InternalTriggeringPoint, 0x1fff00), (EnumItem::ModeAccessPointIdent, 0x1fff00), (EnumItem::ModeSwitchPoint, 0x1fff00), (EnumItem::ParameterAccess, 0x1fff00), (EnumItem::ServerCallPoint, 0x1fff00), (EnumItem::SynchronousServerCallPoint, 0x1fff00), (EnumItem::VariableAccess, 0x1fff00)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::AbstractCanCommunicationController, 0x1c0000), (EnumItem::CanCommunicationController, 0x1c0000), (EnumItem::TtcanCommunicationController, 0x1c0000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::AbstractEvent, 0x1fffc0), (EnumItem::AsynchronousServerCallReturnsEvent, 0x1fffc0), (EnumItem::BackgroundEvent, 0x1fffc0), (EnumItem::BswAsynchronousServerCallReturnsEvent, 0x1fffc0), (EnumItem::BswBackgroundEvent, 0x1fffc0), (EnumItem::BswDataReceivedEvent, 0x1fffc0), (EnumItem::BswEvent, 0x1fffc0), (EnumItem::BswExternalTriggerOccurredEvent, 0x1fffc0), (EnumItem::BswInternalTriggerOccurredEvent, 0x1fffc0), (EnumItem::BswInterruptEvent, 0x180000), (EnumItem::BswModeManagerErrorEvent, 0x1fffc0), (EnumItem::BswModeSwitchEvent, 0x1fffc0), (EnumItem::BswModeSwitchedAckEvent, 0x1fffc0), (EnumItem::BswOperationInvokedEvent, 0x1fffc0), (EnumItem::BswOsTaskExecutionEvent, 0x1f0000), (EnumItem::BswScheduleEvent, 0x1fffc0), (EnumItem::BswTimingEvent, 0x1fffc0), (EnumItem::DataReceiveErrorEvent, 0x1fffc0), (EnumItem::DataReceivedEvent, 0x1fffc0), (EnumItem::DataSendCompletedEvent, 0x1fffc0), (EnumItem::DataWriteCompletedEvent, 0x1fffc0), (EnumItem::ExternalTriggerOccurredEvent, 0x1fffc0), (EnumItem::InitEvent, 0x1fffc0), (EnumItem::InternalTriggerOccurredEvent, 0x1fffc0), (EnumItem::ModeSwitchedAckEvent, 0x1fffc0), (EnumItem::OperationInvokedEvent, 0x1fffc0), (EnumItem::OsTaskExecutionEvent, 0x1f0000), (EnumItem::RteEvent, 0x1fffc0), (EnumItem::SwcModeManagerErrorEvent, 0x1fffc0), (EnumItem::SwcModeSwitchEvent, 0x1fffc0), (EnumItem::TimingEvent, 0x1fffc0), (EnumItem::TransformerHardErrorEvent, 0x1fffc0)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::AbstractIamRemoteSubject, 0x1f0000), (EnumItem::IpIamRemoteSubject, 0x1f0000), (EnumItem::IpSecIamRemoteSubject, 0x1f0000), (EnumItem::TlsIamRemoteSubject, 0x1f0000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::AbstractImplementationDataType, 0x1ff000), (EnumItem::CppImplementationDataType, 0x1ff000), (EnumItem::CustomCppImplementationDataType, 0x1fe000), (EnumItem::ImplementationDataType, 0x1fffff), (EnumItem::StdCppImplementationDataType, 0x1fe000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::AbstractImplementationDataTypeElement, 0x1e0000), (EnumItem::CppImplementationDataTypeElement, 0x1e0000), (EnumItem::ImplementationDataTypeElement, 0x1fffff)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::AbstractProvidedPortPrototype, 0x1ffff8), (EnumItem::PPortPrototype, 0x1fffff), (EnumItem::PrPortPrototype, 0x1ffff8)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::RawDataStreamInterface, 0x8000), (EnumItem::AbstractRawDataStreamInterface, 0x1f0000), (EnumItem::Ieee1722RawDataStreamConsumerInterface, 0x100000), (EnumItem::Ieee1722RawDataStreamProducerInterface, 0x100000), (EnumItem::MacLayerRawDataStreamInterface, 0x100000), (EnumItem::RawDataStreamClientInterface, 0x1f0000), (EnumItem::RawDataStreamServerInterface, 0x1f0000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::AbstractRequiredPortPrototype, 0x1ffff8), (EnumItem::PrPortPrototype, 0x1ffff8), (EnumItem::RPortPrototype, 0x1fffff)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::AbstractServiceInstance, 0x1ffff8), (EnumItem::ConsumedServiceInstance, 0x1ffff8), (EnumItem::DdsCpConsumedServiceInstance, 0x180000), (EnumItem::DdsCpProvidedServiceInstance, 0x180000), (EnumItem::DdsCpServiceInstance, 0x180000), (EnumItem::ProvidedServiceInstance, 0x1ffff8)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::AbstractSignalBasedToISignalTriggeringMapping, 0x1f8000), (EnumItem::SignalBasedEventElementToISignalTriggeringMapping, 0x1f8000), (EnumItem::SignalBasedFieldToISignalTriggeringMapping, 0x1f8000), (EnumItem::SignalBasedFireAndForgetMethodToISignalTriggeringMapping, 0x1c0000), (EnumItem::SignalBasedMethodToISignalTriggeringMapping, 0x1f8000), (EnumItem::SignalBasedTriggerToISignalTriggeringMapping, 0x1e0000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::Custom, 0x1fe000), (EnumItem::Modeled, 0x1fe000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::AclObjectSet, 0x1ffff8)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::AclOperation, 0x1ffff8)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::AclRole, 0x1ffff8)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::Dependant, 0x1ffff8), (EnumItem::Descendant, 0x1ffff8), (EnumItem::Explicit, 0x1ffff8)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::ActionItem, 0x1c00), (EnumItem::ApplicationActionItem, 0x1c00), (EnumItem::PlatformActionItem, 0x1c00), (EnumItem::WatchdogActionItem, 0x1c00)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::ActionList, 0x1c00)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::TriggeredOnChange, 0x1c00), (EnumItem::TriggeredOnEvaluation, 0x1c00)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::AdaptiveFirewallModuleInstantiation, 0x1c0000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::AdaptiveFirewallModuleInstantiation, 0x1c0000), (EnumItem::AdaptiveModuleInstantiation, 0x1fe000), (EnumItem::CmModuleInstantiation, 0x100000), (EnumItem::CryptoModuleInstantiation, 0x1f8000), (EnumItem::DeterministicClient, 0x40000), (EnumItem::DeterministicSyncInstantiation, 0x40000), (EnumItem::DeterministicSyncMaster, 0x40000), (EnumItem::DoIpInstantiation, 0x1fe000), (EnumItem::GenericDiagnosticTransportInstantiation, 0x100000), (EnumItem::GenericModuleInstantiation, 0x1fe000), (EnumItem::IamModuleInstantiation, 0x1fc000), (EnumItem::IdsPlatformInstantiation, 0x1f0000), (EnumItem::IdsmModuleInstantiation, 0x1f0000), (EnumItem::LogAndTraceInstantiation, 0x1fe000), (EnumItem::NmInstantiation, 0x1fe000), (EnumItem::NonOsModuleInstantiation, 0x1fe000), (EnumItem::OsModuleInstantiation, 0x1fe000), (EnumItem::SovdGatewayInstantiation, 0x1c0000), (EnumItem::SovdModuleInstantiation, 0x1c0000), (EnumItem::SovdServerInstantiation, 0x1c0000), (EnumItem::StateManagementModuleInstantiation, 0x1c0000), (EnumItem::TimeSyncModuleInstantiation, 0x1fe000), (EnumItem::UcmMasterModuleInstantiation, 0x1c0000), (EnumItem::UcmModuleInstantiation, 0x1fc000), (EnumItem::UcmSubordinateModuleInstantiation, 0x1c0000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::ServiceInstanceToPortPrototypeMapping, 0x1c00), (EnumItem::AdaptivePlatformServiceInstance, 0x1ffe00), (EnumItem::DdsProvidedServiceInstance, 0x1fe000), (EnumItem::DdsRequiredServiceInstance, 0x1fe000), (EnumItem::ProvidedApServiceInstance, 0x1ffe00), (EnumItem::ProvidedDdsServiceInstance, 0x1000), (EnumItem::ProvidedSomeipServiceInstance, 0x1ffe00), (EnumItem::ProvidedUserDefinedServiceInstance, 0x1ffe00), (EnumItem::RequiredApServiceInstance, 0x1ffe00), (EnumItem::RequiredDdsServiceInstance, 0x1000), (EnumItem::RequiredSomeipServiceInstance, 0x1ffe00), (EnumItem::RequiredUserDefinedServiceInstance, 0x1ffe00)]},
    CharacterDataSpec::Pattern{check_fn: validate_regex_1, regex: r"0[xX][0-9a-fA-F]+", max_length: None},
    CharacterDataSpec::Enum{items: &[(EnumItem::AggregationTailoring, 0x1fff00)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::Center, 0x1fffff), (EnumItem::Justify, 0x1fffff), (EnumItem::Left, 0x1fffff), (EnumItem::Right, 0x1fffff)]},
    CharacterDataSpec::Pattern{check_fn: validate_regex_2, regex: r"[1-9][0-9]*|0[xX][0-9a-fA-F]*|0[bB][0-1]+|0[0-7]*|UNSPECIFIED|UNKNOWN|BOOLEAN|PTR", max_length: None},
    CharacterDataSpec::Enum{items: &[(EnumItem::Allocator, 0x1ffc00)]},
    CharacterDataSpec::Pattern{check_fn: validate_regex_3, regex: r"[1-9][0-9]*|0[xX][0-9a-fA-F]+|0[0-7]*|0[bB][0-1]+|ANY|ALL", max_length: None},
    CharacterDataSpec::Pattern{check_fn: validate_regex_4, regex: r"[0-9]+|ANY", max_length: None},
    CharacterDataSpec::Enum{items: &[(EnumItem::ApApplicationEndpoint, 0x1e0000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::ApApplicationError, 0x1fe000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::ApApplicationErrorDomain, 0x1fe000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::ApApplicationErrorSet, 0x1fe000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::ApSomeipTransformationProps, 0x1ffe00)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::Common, 0x1fff00), (EnumItem::PerExecutable, 0x1fff00)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::ApmcChoiceContainerDef, 0x100000), (EnumItem::ApmcContainerDef, 0x100000), (EnumItem::ApmcParamConfContainerDef, 0x100000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::ApmcAbstractForeignReferenceDef, 0x100000), (EnumItem::ApmcAbstractInstanceReferenceDef, 0x100000), (EnumItem::ApmcBooleanParamDef, 0x100000), (EnumItem::ApmcChoiceContainerReferenceDef, 0x100000), (EnumItem::ApmcContainerElementDef, 0x100000), (EnumItem::ApmcContainerReferenceDef, 0x100000), (EnumItem::ApmcEnumerationParamDef, 0x100000), (EnumItem::ApmcFloatParamDef, 0x100000), (EnumItem::ApmcForeignReferenceDef, 0x100000), (EnumItem::ApmcInstanceReferenceDef, 0x100000), (EnumItem::ApmcIntegerParamDef, 0x100000), (EnumItem::ApmcParameterDef, 0x100000), (EnumItem::ApmcReferenceDef, 0x100000), (EnumItem::ApmcStringParamDef, 0x100000), (EnumItem::ApmcUpstreamDocForeignReferenceDef, 0x100000), (EnumItem::ApmcUpstreamDocInstanceReferenceDef, 0x100000), (EnumItem::ApmcUriForeignReferenceDef, 0x100000), (EnumItem::ApmcUriInstanceReferenceDef, 0x100000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::ApmcContainerValue, 0x100000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::ApmcFunctionalClusterDef, 0x100000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::ApmcFunctionalClusterValue, 0x100000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::Restart, 0x1c00), (EnumItem::Terminate, 0x1c00)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::ApplicationArrayElement, 0x1ffffe)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::ApplicationArrayElement, 0x1fffff), (EnumItem::ApplicationAssocMapElement, 0x1ffe00), (EnumItem::ApplicationCompositeElementDataPrototype, 0x1fffff), (EnumItem::ApplicationRecordElement, 0x1fffff)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::ApplicationArrayDataType, 0x1fffff), (EnumItem::ApplicationAssocMapDataType, 0x1ffe00), (EnumItem::ApplicationCompositeDataType, 0x1fffff), (EnumItem::ApplicationDataType, 0x1fffff), (EnumItem::ApplicationDeferredDataType, 0x1f0000), (EnumItem::ApplicationPrimitiveDataType, 0x1fffff), (EnumItem::ApplicationRecordDataType, 0x1fffff)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::ApplicationEndpoint, 0x1ffff8)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::ApplicationError, 0x1fffff)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::ApplicationPartition, 0x1fff00)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::ApplicationPrimitiveDataType, 0x1fffff)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::ApplicationRecordElement, 0x1ffffe)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::AppliedStandard, 0x180000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::AbstractCanCluster, 0x180000), (EnumItem::AbstractCryptoKeySlotInterface, 0x100000), (EnumItem::AbstractCryptoKeySlotToPortPrototypeMapping, 0x100000), (EnumItem::AbstractDoIpPortMapping, 0x100000), (EnumItem::AbstractExecutionContext, 0x1fe000), (EnumItem::AbstractIamRemoteSubject, 0x1f0000), (EnumItem::AbstractImplementationDataType, 0x1ff000), (EnumItem::AbstractRawDataStreamInterface, 0x1f0000), (EnumItem::AbstractSynchronizedTimeBaseInterface, 0x1f0000), (EnumItem::AclObjectSet, 0x1ffc00), (EnumItem::AclOperation, 0x1ffc00), (EnumItem::AclPermission, 0x1ffc00), (EnumItem::AclRole, 0x1ffc00), (EnumItem::AdaptiveApplicationSwComponentType, 0x1ffc00), (EnumItem::AdaptiveAutosarApplication, 0xc00), (EnumItem::AdaptiveFirewallToPortPrototypeMapping, 0x1c0000), (EnumItem::AdaptivePlatformServiceInstance, 0x1ffc00), (EnumItem::AliasNameSet, 0x1ffc00), (EnumItem::Allocator, 0x1ffc00), (EnumItem::ApApplicationError, 0x1fe000), (EnumItem::ApApplicationErrorDomain, 0x1fe000), (EnumItem::ApApplicationErrorSet, 0x1fe000), (EnumItem::ApmcDefinitionCollection, 0x100000), (EnumItem::ApmcFunctionalClusterDef, 0x100000), (EnumItem::ApmcFunctionalClusterValue, 0x100000), (EnumItem::ApmcValueCollection, 0x100000), (EnumItem::ApplicabilityInfoSet, 0x180000), (EnumItem::ApplicationArrayDataType, 0x1ffc00), (EnumItem::ApplicationAssocMapDataType, 0x1ffc00), (EnumItem::ApplicationCompositeDataType, 0x1ffc00), (EnumItem::ApplicationDataType, 0x1ffc00), (EnumItem::ApplicationDeferredDataType, 0x1f0000), (EnumItem::ApplicationInterface, 0x1e0000), (EnumItem::ApplicationPartition, 0x1ffc00), (EnumItem::ApplicationPrimitiveDataType, 0x1ffc00), (EnumItem::ApplicationRecordDataType, 0x1ffc00), (EnumItem::ApplicationSwComponentType, 0x1ffc00), (EnumItem::ArElement, 0x1ffc00), (EnumItem::ArtifactChecksumToCryptoProviderMapping, 0x1e0000), (EnumItem::AtomicSwComponentType, 0x1ffc00), (EnumItem::AutosarDataType, 0x1ffc00), (EnumItem::BaseType, 0x1ffc00), (EnumItem::BlueprintMappingSet, 0x1ffc00), (EnumItem::BswCompositionTiming, 0x1fe000), (EnumItem::BswEntryRelationshipSet, 0x1ffc00), (EnumItem::BswImplementation, 0x1ffc00), (EnumItem::BswModuleDescription, 0x1ffc00), (EnumItem::BswModuleEntry, 0x1ffc00), (EnumItem::BswModuleTiming, 0x1ffc00), (EnumItem::BuildActionManifest, 0x1ffc00), (EnumItem::CalibrationParameterValueSet, 0x1ffc00), (EnumItem::CanCluster, 0x180000), (EnumItem::CanXlProps, 0x1c0000), (EnumItem::ClientIdDefinitionSet, 0x1ffc00), (EnumItem::ClientServerInterface, 0x1ffc00), (EnumItem::ClientServerInterfaceToBswModuleEntryBlueprintMapping, 0x1ffc00), (EnumItem::Collection, 0x1ffc00), (EnumItem::ComCertificateToCryptoCertificateMapping, 0x1f0000), (EnumItem::ComEventGrant, 0x1fc000), (EnumItem::ComEventGrantDesign, 0x1fc000), (EnumItem::ComFieldGrant, 0x1fc000), (EnumItem::ComFieldGrantDesign, 0x1fc000), (EnumItem::ComFindServiceGrant, 0x1fc000), (EnumItem::ComFindServiceGrantDesign, 0x1fc000), (EnumItem::ComGrant, 0x1f0000), (EnumItem::ComGrantDesign, 0x1f0000), (EnumItem::ComKeyToCryptoKeySlotMapping, 0x1f0000), (EnumItem::ComMethodGrant, 0x1fc000), (EnumItem::ComMethodGrantDesign, 0x1fc000), (EnumItem::ComOfferServiceGrant, 0x1fc000), (EnumItem::ComOfferServiceGrantDesign, 0x1fc000), (EnumItem::ComSecOcToCryptoKeySlotMapping, 0x1f0000), (EnumItem::ComTriggerGrant, 0x180000), (EnumItem::ComTriggerGrantDesign, 0x1e0000), (EnumItem::CommunicationCluster, 0x180000), (EnumItem::ComplexDeviceDriverSwComponentType, 0x1ffc00), (EnumItem::CompositeInterface, 0x18000), (EnumItem::CompositionPPortToExecutablePPortMapping, 0x1f8000), (EnumItem::CompositionPortToExecutablePortMapping, 0x1f8000), (EnumItem::CompositionRPortToExecutableRPortMapping, 0x1f8000), (EnumItem::CompositionSwComponentType, 0x1ffc00), (EnumItem::CompuMethod, 0x1ffc00), (EnumItem::ConsistencyNeedsBlueprintSet, 0x1ffc00), (EnumItem::ConstantSpecification, 0x1ffc00), (EnumItem::ConstantSpecificationMappingSet, 0x1ffc00), (EnumItem::ContainerIPdu, 0x180000), (EnumItem::CpSoftwareCluster, 0x1f0000), (EnumItem::CpSoftwareClusterBinaryManifestDescriptor, 0x1f0000), (EnumItem::CpSoftwareClusterMappingSet, 0x1f0000), (EnumItem::CpSoftwareClusterResourcePool, 0x1f0000), (EnumItem::CpSwClusterResourceToDiagDataElemMapping, 0x1e0000), (EnumItem::CpSwClusterResourceToDiagFunctionIdMapping, 0x1e0000), (EnumItem::CpSwClusterToDiagEventMapping, 0x1e0000), (EnumItem::CpSwClusterToDiagRoutineSubfunctionMapping, 0x1e0000), (EnumItem::CppImplementationDataType, 0x1ff000), (EnumItem::CryptoDriver, 0x1c00), (EnumItem::CryptoNeed, 0x1c00), (EnumItem::CryptoCertificateInterface, 0x1f0000), (EnumItem::CryptoCertificateToPortPrototypeMapping, 0x1f0000), (EnumItem::CryptoEllipticCurveProps, 0x1e0000), (EnumItem::CryptoInterface, 0x1f0000), (EnumItem::CryptoKeySlotClientInterface, 0x100000), (EnumItem::CryptoKeySlotInterface, 0x1f0000), (EnumItem::CryptoKeySlotToClientPortPrototypeMapping, 0x100000), (EnumItem::CryptoKeySlotToPortPrototypeMapping, 0x1f0000), (EnumItem::CryptoNeedToPortPrototypeMapping, 0x1fc00), (EnumItem::CryptoKeySlotUsageDesignMapping, 0x100000), (EnumItem::CryptoKeySlotUserDesign, 0x100000), (EnumItem::CryptoKeySlotUserDesignMapping, 0x100000), (EnumItem::CryptoProviderInterface, 0x1f0000), (EnumItem::CryptoProviderToPortPrototypeMapping, 0x1f0000), (EnumItem::CryptoServiceCertificate, 0x1fe000), (EnumItem::CryptoServiceKey, 0x1fe000), (EnumItem::CryptoServicePrimitive, 0x1fe000), (EnumItem::CryptoServiceQueue, 0x1f8000), (EnumItem::CryptoSignatureScheme, 0x1e0000), (EnumItem::CryptoTrustMasterInterface, 0x1f0000), (EnumItem::CustomCppImplementationDataType, 0x1fe000), (EnumItem::DataConstr, 0x1ffc00), (EnumItem::DataExchangePoint, 0x1ffc00), (EnumItem::DataInterface, 0x1ffc00), (EnumItem::DataTransformationSet, 0x1ffc00), (EnumItem::DataTypeMappingSet, 0x1ffc00), (EnumItem::DcmIPdu, 0x180000), (EnumItem::DdsCpConfig, 0x180000), (EnumItem::DdsProvidedServiceInstance, 0x1fe000), (EnumItem::DdsRequiredServiceInstance, 0x1fe000), (EnumItem::DdsSecureComProps, 0x1e0000), (EnumItem::DdsSecureGovernance, 0x1e0000), (EnumItem::DdsServiceInstanceToMachineMapping, 0x1ff000), (EnumItem::DdsServiceInterfaceDeployment, 0x1ff000), (EnumItem::DdsTopicAccessRule, 0x1e0000), (EnumItem::DeterministicClient, 0x7e000), (EnumItem::DeterministicSyncMasterToTimeBaseConsumerMapping, 0x40000), (EnumItem::DiagnosticAbstractAliasEvent, 0x1ffc00), (EnumItem::DiagnosticAbstractDataIdentifier, 0x1ffc00), (EnumItem::DiagnosticAbstractDataIdentifierInterface, 0x1fc000), (EnumItem::DiagnosticAbstractRoutineInterface, 0x1fc000), (EnumItem::DiagnosticAccessPermission, 0x1ffc00), (EnumItem::DiagnosticAging, 0x1ffc00), (EnumItem::DiagnosticAuthRole, 0x1e0000), (EnumItem::DiagnosticAuthTransmitCertificate, 0x180000), (EnumItem::DiagnosticAuthTransmitCertificateMapping, 0x180000), (EnumItem::DiagnosticAuthentication, 0x1e0000), (EnumItem::DiagnosticAuthenticationClass, 0x1e0000), (EnumItem::DiagnosticAuthenticationConfiguration, 0x1e0000), (EnumItem::DiagnosticAuthenticationInterface, 0x1e0000), (EnumItem::DiagnosticAuthenticationPortMapping, 0x1e0000), (EnumItem::DiagnosticClearCondition, 0x1fe000), (EnumItem::DiagnosticClearConditionGroup, 0x1fe000), (EnumItem::DiagnosticClearConditionPortMapping, 0x1fc000), (EnumItem::DiagnosticClearDiagnosticInformation, 0x1ffc00), (EnumItem::DiagnosticClearDiagnosticInformationClass, 0x1ffc00), (EnumItem::DiagnosticClearResetEmissionRelatedInfo, 0x1ffc00), (EnumItem::DiagnosticClearResetEmissionRelatedInfoClass, 0x1ffc00), (EnumItem::DiagnosticComControl, 0x1ffc00), (EnumItem::DiagnosticComControlClass, 0x1ffc00), (EnumItem::DiagnosticComControlInterface, 0x1e0000), (EnumItem::DiagnosticCommonElement, 0x1ffc00), (EnumItem::DiagnosticCondition, 0x1ffc00), (EnumItem::DiagnosticConditionGroup, 0x1ffc00), (EnumItem::DiagnosticConditionInterface, 0x1fc000), (EnumItem::DiagnosticConnection, 0x1ffc00), (EnumItem::DiagnosticContributionSet, 0x1ffc00), (EnumItem::DiagnosticControlDtcSetting, 0x1ffc00), (EnumItem::DiagnosticControlDtcSettingClass, 0x1ffc00), (EnumItem::DiagnosticCustomServiceClass, 0x1ffc00), (EnumItem::DiagnosticCustomServiceInstance, 0x1fe000), (EnumItem::DiagnosticDataByIdentifier, 0x1ffc00), (EnumItem::DiagnosticDataElementInterface, 0x1fc000), (EnumItem::DiagnosticDataIdentifier, 0x1ffc00), (EnumItem::DiagnosticDataIdentifierGenericInterface, 0x1fc000), (EnumItem::DiagnosticDataIdentifierInterface, 0x1fc000), (EnumItem::DiagnosticDataIdentifierSet, 0x1ffc00), (EnumItem::DiagnosticDataPortMapping, 0x1e0000), (EnumItem::DiagnosticDataTransfer, 0x1ffc00), (EnumItem::DiagnosticDataTransferClass, 0x1ffc00), (EnumItem::DiagnosticDeAuthentication, 0x1e0000), (EnumItem::DiagnosticDemProvidedDataMapping, 0x1ffc00), (EnumItem::DiagnosticDoIpActivationLineInterface, 0x1f8000), (EnumItem::DiagnosticDoIpActivationLinePortMapping, 0x100000), (EnumItem::DiagnosticDoIpEntityIdentificationInterface, 0x1c0000), (EnumItem::DiagnosticDoIpEntityIdentificationPortMapping, 0x100000), (EnumItem::DiagnosticDoIpGroupIdentificationInterface, 0x1fc000), (EnumItem::DiagnosticDoIpGroupIdentificationPortMapping, 0x100000), (EnumItem::DiagnosticDoIpPowerModeInterface, 0x1fc000), (EnumItem::DiagnosticDoIpPowerModePortMapping, 0x100000), (EnumItem::DiagnosticDoIpTriggerVehicleAnnouncementInterface, 0x1f8000), (EnumItem::DiagnosticDoIpTriggerVehicleAnnouncementPortMapping, 0x100000), (EnumItem::DiagnosticDownloadInterface, 0x1fc000), (EnumItem::DiagnosticDtcInformationInterface, 0x1fc000), (EnumItem::DiagnosticDynamicDataIdentifier, 0x1ffc00), (EnumItem::DiagnosticDynamicallyDefineDataIdentifier, 0x1ffc00), (EnumItem::DiagnosticDynamicallyDefineDataIdentifierClass, 0x1ffc00), (EnumItem::DiagnosticEcuInstanceProps, 0x1ffc00), (EnumItem::DiagnosticEcuReset, 0x1ffc00), (EnumItem::DiagnosticEcuResetClass, 0x1ffc00), (EnumItem::DiagnosticEcuResetInterface, 0x1f0000), (EnumItem::DiagnosticEnableCondition, 0x1ffc00), (EnumItem::DiagnosticEnableConditionGroup, 0x1ffc00), (EnumItem::DiagnosticEnableConditionPortMapping, 0x1ffc00), (EnumItem::DiagnosticEnvironmentalCondition, 0x1ffc00), (EnumItem::DiagnosticEvent, 0x1ffc00), (EnumItem::DiagnosticEventInterface, 0x1fc000), (EnumItem::DiagnosticEventPortMapping, 0x1ffc00), (EnumItem::DiagnosticEventToDebounceAlgorithmMapping, 0x1ffc00), (EnumItem::DiagnosticEventToEnableConditionGroupMapping, 0x1ffc00), (EnumItem::DiagnosticEventToOperationCycleMapping, 0x1ffc00), (EnumItem::DiagnosticEventToSecurityEventMapping, 0x1f0000), (EnumItem::DiagnosticEventToStorageConditionGroupMapping, 0x1ffc00), (EnumItem::DiagnosticEventToTroubleCodeJ1939Mapping, 0x1fe000), (EnumItem::DiagnosticEventToTroubleCodeUdsMapping, 0x1ffc00), (EnumItem::DiagnosticExtendedDataRecord, 0x1ffc00), (EnumItem::DiagnosticExternalAuthenticationInterface, 0x1e0000), (EnumItem::DiagnosticExternalAuthenticationPortMapping, 0x1e0000), (EnumItem::DiagnosticFimAliasEvent, 0x1ffc00), (EnumItem::DiagnosticFimAliasEventGroup, 0x1ffc00), (EnumItem::DiagnosticFimAliasEventGroupMapping, 0x1ffc00), (EnumItem::DiagnosticFimAliasEventMapping, 0x1ffc00), (EnumItem::DiagnosticFimEventGroup, 0x1ffc00), (EnumItem::DiagnosticFimFunctionMapping, 0x1ffc00), (EnumItem::DiagnosticFreezeFrame, 0x1ffc00), (EnumItem::DiagnosticFunctionIdentifier, 0x1ffc00), (EnumItem::DiagnosticFunctionIdentifierInhibit, 0x1ffc00), (EnumItem::DiagnosticGenericUdsInterface, 0x1fc000), (EnumItem::DiagnosticGenericUdsPortMapping, 0xc000), (EnumItem::DiagnosticIndicator, 0x1ffc00), (EnumItem::DiagnosticIndicatorInterface, 0x1fc000), (EnumItem::DiagnosticIndicatorPortMapping, 0x1fc000), (EnumItem::DiagnosticInfoType, 0x1ffc00), (EnumItem::DiagnosticInhibitSourceEventMapping, 0x1ffc00), (EnumItem::DiagnosticIoControl, 0x1ffc00), (EnumItem::DiagnosticIoControlClass, 0x1ffc00), (EnumItem::DiagnosticIumpr, 0x1ffc00), (EnumItem::DiagnosticIumprDenominatorGroup, 0x1ffc00), (EnumItem::DiagnosticIumprGroup, 0x1ffc00), (EnumItem::DiagnosticIumprToFunctionIdentifierMapping, 0x1e0000), (EnumItem::DiagnosticJ1939ExpandedFreezeFrame, 0x1ffc00), (EnumItem::DiagnosticJ1939FreezeFrame, 0x1ffc00), (EnumItem::DiagnosticJ1939Node, 0x1ffc00), (EnumItem::DiagnosticJ1939Spn, 0x1ffc00), (EnumItem::DiagnosticJ1939SpnMapping, 0x1ffc00), (EnumItem::DiagnosticJ1939SwMapping, 0x1ffc00), (EnumItem::DiagnosticMapping, 0x1ffc00), (EnumItem::DiagnosticMasterToSlaveEventMapping, 0x1f0000), (EnumItem::DiagnosticMasterToSlaveEventMappingSet, 0x1fe000), (EnumItem::DiagnosticMeasurementIdentifier, 0x1ffc00), (EnumItem::DiagnosticMemoryAddressableRangeAccess, 0x1ffc00), (EnumItem::DiagnosticMemoryByAddress, 0x1ffc00), (EnumItem::DiagnosticMemoryDestination, 0x1ffc00), (EnumItem::DiagnosticMemoryDestinationMirror, 0x1ffc00), (EnumItem::DiagnosticMemoryDestinationPortMapping, 0x1fc000), (EnumItem::DiagnosticMemoryDestinationPrimary, 0x1ffc00), (EnumItem::DiagnosticMemoryDestinationUserDefined, 0x1ffc00), (EnumItem::DiagnosticMemoryIdentifier, 0x1ffc00), (EnumItem::DiagnosticMonitorInterface, 0x1fc000), (EnumItem::DiagnosticMonitorPortMapping, 0x1e0000), (EnumItem::DiagnosticMultipleConditionInterface, 0x180000), (EnumItem::DiagnosticMultipleConditionPortMapping, 0x180000), (EnumItem::DiagnosticMultipleEventInterface, 0x180000), (EnumItem::DiagnosticMultipleEventPortMapping, 0x180000), (EnumItem::DiagnosticMultipleMonitorInterface, 0x180000), (EnumItem::DiagnosticMultipleMonitorPortMapping, 0x180000), (EnumItem::DiagnosticMultipleResourceInterface, 0x180000), (EnumItem::DiagnosticMultipleResourcePortMapping, 0x180000), (EnumItem::DiagnosticOperationCycle, 0x1ffc00), (EnumItem::DiagnosticOperationCycleInterface, 0x1fc000), (EnumItem::DiagnosticOperationCyclePortMapping, 0x1ffc00), (EnumItem::DiagnosticParameterIdentifier, 0x1ffc00), (EnumItem::DiagnosticPortInterface, 0x1fc000), (EnumItem::DiagnosticPowertrainFreezeFrame, 0x1ffc00), (EnumItem::DiagnosticProofOfOwnership, 0x1e0000), (EnumItem::DiagnosticProtocol, 0x1ffc00), (EnumItem::DiagnosticProvidedDataMapping, 0x1fc000), (EnumItem::DiagnosticReadDataByIdentifier, 0x1ffc00), (EnumItem::DiagnosticReadDataByIdentifierClass, 0x1ffc00), (EnumItem::DiagnosticReadDataByPeriodicId, 0x1ffc00), (EnumItem::DiagnosticReadDataByPeriodicIdClass, 0x1ffc00), (EnumItem::DiagnosticReadDtcInformation, 0x1ffc00), (EnumItem::DiagnosticReadDtcInformationClass, 0x1ffc00), (EnumItem::DiagnosticReadMemoryByAddress, 0x1ffc00), (EnumItem::DiagnosticReadMemoryByAddressClass, 0x1ffc00), (EnumItem::DiagnosticReadScalingDataByIdentifier, 0x1fe000), (EnumItem::DiagnosticReadScalingDataByIdentifierClass, 0x1fe000), (EnumItem::DiagnosticRequestControlOfOnBoardDevice, 0x1ffc00), (EnumItem::DiagnosticRequestControlOfOnBoardDeviceClass, 0x1ffc00), (EnumItem::DiagnosticRequestCurrentPowertrainData, 0x1ffc00), (EnumItem::DiagnosticRequestCurrentPowertrainDataClass, 0x1ffc00), (EnumItem::DiagnosticRequestDownload, 0x1ffc00), (EnumItem::DiagnosticRequestDownloadClass, 0x1ffc00), (EnumItem::DiagnosticRequestEmissionRelatedDtc, 0x1ffc00), (EnumItem::DiagnosticRequestEmissionRelatedDtcClass, 0x1ffc00), (EnumItem::DiagnosticRequestEmissionRelatedDtcPermanentStatus, 0x1ffc00), (EnumItem::DiagnosticRequestEmissionRelatedDtcPermanentStatusClass, 0x1ffc00), (EnumItem::DiagnosticRequestFileTransfer, 0x1ffc00), (EnumItem::DiagnosticRequestFileTransferClass, 0x1ffc00), (EnumItem::DiagnosticRequestFileTransferInterface, 0x1c0000), (EnumItem::DiagnosticRequestOnBoardMonitoringTestResults, 0x1ffc00), (EnumItem::DiagnosticRequestOnBoardMonitoringTestResultsClass, 0x1ffc00), (EnumItem::DiagnosticRequestPowertrainFreezeFrameData, 0x1ffc00), (EnumItem::DiagnosticRequestPowertrainFreezeFrameDataClass, 0x1ffc00), (EnumItem::DiagnosticRequestUpload, 0x1ffc00), (EnumItem::DiagnosticRequestUploadClass, 0x1ffc00), (EnumItem::DiagnosticRequestVehicleInfo, 0x1ffc00), (EnumItem::DiagnosticRequestVehicleInfoClass, 0x1ffc00), (EnumItem::DiagnosticResponseOnEvent, 0x1ffc00), (EnumItem::DiagnosticResponseOnEventClass, 0x1ffc00), (EnumItem::DiagnosticRoutine, 0x1ffc00), (EnumItem::DiagnosticRoutineControl, 0x1ffc00), (EnumItem::DiagnosticRoutineControlClass, 0x1ffc00), (EnumItem::DiagnosticRoutineGenericInterface, 0x1fc000), (EnumItem::DiagnosticRoutineInterface, 0x1fc000), (EnumItem::DiagnosticSecureCodingMapping, 0x180000), (EnumItem::DiagnosticSecurityAccess, 0x1ffc00), (EnumItem::DiagnosticSecurityAccessClass, 0x1ffc00), (EnumItem::DiagnosticSecurityEventReportingModeMapping, 0x1f0000), (EnumItem::DiagnosticSecurityLevel, 0x1ffc00), (EnumItem::DiagnosticSecurityLevelInterface, 0x1fc000), (EnumItem::DiagnosticSecurityLevelPortMapping, 0x1fc000), (EnumItem::DiagnosticServiceClass, 0x1ffc00), (EnumItem::DiagnosticServiceDataIdentifierMapping, 0x2000), (EnumItem::DiagnosticServiceDataIdentifierPortMapping, 0x1c000), (EnumItem::DiagnosticServiceDataMapping, 0x1ffc00), (EnumItem::DiagnosticServiceGenericMapping, 0x1f0000), (EnumItem::DiagnosticServiceInstance, 0x1ffc00), (EnumItem::DiagnosticServiceSwMapping, 0x1ffc00), (EnumItem::DiagnosticServiceTable, 0x1ffc00), (EnumItem::DiagnosticServiceValidationInterface, 0x1fc000), (EnumItem::DiagnosticServiceValidationMapping, 0x1e0000), (EnumItem::DiagnosticSession, 0x1ffc00), (EnumItem::DiagnosticSessionControl, 0x1ffc00), (EnumItem::DiagnosticSessionControlClass, 0x1ffc00), (EnumItem::DiagnosticSoftwareClusterProps, 0x3fc00), (EnumItem::DiagnosticSovdAuthorizationInterface, 0x1c0000), (EnumItem::DiagnosticSovdAuthorizationPortMapping, 0x1c0000), (EnumItem::DiagnosticSovdBulkData, 0x180000), (EnumItem::DiagnosticSovdBulkDataInterface, 0x180000), (EnumItem::DiagnosticSovdBulkDataPortMapping, 0x180000), (EnumItem::DiagnosticSovdConfiguration, 0x180000), (EnumItem::DiagnosticSovdConfigurationBulkData, 0x180000), (EnumItem::DiagnosticSovdConfigurationDataIdentifierMapping, 0x180000), (EnumItem::DiagnosticSovdConfigurationInterface, 0x180000), (EnumItem::DiagnosticSovdConfigurationParameter, 0x180000), (EnumItem::DiagnosticSovdConfigurationPortMapping, 0x180000), (EnumItem::DiagnosticSovdFaultMemoryAccess, 0x100000), (EnumItem::DiagnosticSovdLock, 0x1c0000), (EnumItem::DiagnosticSovdLog, 0x180000), (EnumItem::DiagnosticSovdMethod, 0x180000), (EnumItem::DiagnosticSovdPortInterface, 0x1c0000), (EnumItem::DiagnosticSovdProximityChallengeInterface, 0x1c0000), (EnumItem::DiagnosticSovdProximityChallengePortMapping, 0x1c0000), (EnumItem::DiagnosticSovdServiceInstance, 0x180000), (EnumItem::DiagnosticSovdServiceValidationInterface, 0x180000), (EnumItem::DiagnosticSovdServiceValidationPortMapping, 0x180000), (EnumItem::DiagnosticSovdUpdate, 0x180000), (EnumItem::DiagnosticSovdUpdateInterface, 0x180000), (EnumItem::DiagnosticSovdUpdatePortMapping, 0x180000), (EnumItem::DiagnosticStorageCondition, 0x1ffc00), (EnumItem::DiagnosticStorageConditionGroup, 0x1ffc00), (EnumItem::DiagnosticStorageConditionPortMapping, 0x1ffc00), (EnumItem::DiagnosticSwMapping, 0x1ffc00), (EnumItem::DiagnosticTestResult, 0x1ffc00), (EnumItem::DiagnosticTestRoutineIdentifier, 0x1ffc00), (EnumItem::DiagnosticTransferExit, 0x1ffc00), (EnumItem::DiagnosticTransferExitClass, 0x1ffc00), (EnumItem::DiagnosticTransmitCertificateInterface, 0x100000), (EnumItem::DiagnosticTroubleCode, 0x1ffc00), (EnumItem::DiagnosticTroubleCodeGroup, 0x1ffc00), (EnumItem::DiagnosticTroubleCodeJ1939, 0x1ffc00), (EnumItem::DiagnosticTroubleCodeObd, 0x1ffc00), (EnumItem::DiagnosticTroubleCodeProps, 0x1ffc00), (EnumItem::DiagnosticTroubleCodeUds, 0x1ffc00), (EnumItem::DiagnosticTroubleCodeUdsToClearConditionGroupMapping, 0x1fe000), (EnumItem::DiagnosticTroubleCodeUdsToTroubleCodeObdMapping, 0x1ffc00), (EnumItem::DiagnosticUploadDownloadPortMapping, 0xc000), (EnumItem::DiagnosticUploadInterface, 0x1fc000), (EnumItem::DiagnosticVerifyCertificateBidirectional, 0x1e0000), (EnumItem::DiagnosticVerifyCertificateUnidirectional, 0x1e0000), (EnumItem::DiagnosticWriteDataByIdentifier, 0x1ffc00), (EnumItem::DiagnosticWriteDataByIdentifierClass, 0x1ffc00), (EnumItem::DiagnosticWriteMemoryByAddress, 0x1ffc00), (EnumItem::DiagnosticWriteMemoryByAddressClass, 0x1ffc00), (EnumItem::DltLogChannelDesign, 0x10000), (EnumItem::DltLogChannelDesignToProcessDesignMapping, 0x10000), (EnumItem::DltLogChannelToProcessMapping, 0x10000), (EnumItem::DltApplicationToProcessMapping, 0x1e0000), (EnumItem::DltContext, 0x1e0000), (EnumItem::DltEcu, 0x1e0000), (EnumItem::DltLogSink, 0x1e0000), (EnumItem::DltLogSinkToPortPrototypeMapping, 0x1e0000), (EnumItem::Documentation, 0x1ffc00), (EnumItem::E2EProfileCompatibilityProps, 0x1f0000), (EnumItem::E2EProfileConfigurationSet, 0x1ffc00), (EnumItem::EcuAbstractionSwComponentType, 0x1ffc00), (EnumItem::EcuTiming, 0x1ffc00), (EnumItem::EcucDefinitionCollection, 0x1ffc00), (EnumItem::EcucDestinationUriDefSet, 0x1ffc00), (EnumItem::EcucModuleConfigurationValues, 0x1ffc00), (EnumItem::EcucModuleDef, 0x1ffc00), (EnumItem::EcucValueCollection, 0x1ffc00), (EnumItem::EndToEndProtectionSet, 0x1ffc00), (EnumItem::EthIpProps, 0x1f0000), (EnumItem::EthTcpIpIcmpProps, 0x1f0000), (EnumItem::EthTcpIpProps, 0x1f0000), (EnumItem::EthernetCluster, 0x180000), (EnumItem::EthernetMacRawDataStreamMapping, 0x100000), (EnumItem::EthernetRawDataStreamClientMapping, 0x1e0000), (EnumItem::EthernetRawDataStreamGrant, 0x1f8000), (EnumItem::EthernetRawDataStreamMapping, 0x1f8000), (EnumItem::EthernetRawDataStreamServerMapping, 0x1e0000), (EnumItem::EvaluatedVariantSet, 0x1ffc00), (EnumItem::Executable, 0x1ffc00), (EnumItem::ExecutableGroup, 0x1000), (EnumItem::ExecutableTiming, 0x1f0000), (EnumItem::FirewallRule, 0x1c0000), (EnumItem::FirewallStateSwitchInterface, 0x1c0000), (EnumItem::FlatMap, 0x1ffc00), (EnumItem::FlexrayCluster, 0x180000), (EnumItem::FmFeature, 0x1ffc00), (EnumItem::FmFeatureMap, 0x1ffc00), (EnumItem::FmFeatureModel, 0x1ffc00), (EnumItem::FmFeatureSelectionSet, 0x1ffc00), (EnumItem::FunctionGroupPortMapping, 0x100000), (EnumItem::FunctionGroupSet, 0x1f0000), (EnumItem::FunctionalClusterInteractsWithDiagnosticEventMapping, 0x100000), (EnumItem::FunctionalClusterInteractsWithFunctionalClusterMapping, 0x1f0000), (EnumItem::FunctionalClusterInteractsWithPersistencyDeploymentMapping, 0x1c0000), (EnumItem::FunctionalClusterToSecurityEventDefinitionMapping, 0x180000), (EnumItem::GeneralPurposeConnection, 0x1ff800), (EnumItem::GeneralPurposeIPdu, 0x180000), (EnumItem::GeneralPurposePdu, 0x180000), (EnumItem::GenericTpConnection, 0x100000), (EnumItem::GlobalTimeDomain, 0x180000), (EnumItem::Grant, 0x1fc000), (EnumItem::GrantDesign, 0x1fc000), (EnumItem::HwCategory, 0x1ffc00), (EnumItem::HwElement, 0x1ffc00), (EnumItem::HwType, 0x1ffc00), (EnumItem::IPdu, 0x180000), (EnumItem::IPv6ExtHeaderFilterSet, 0x1ffc00), (EnumItem::ISignal, 0x180000), (EnumItem::ISignalGroup, 0x180000), (EnumItem::ISignalIPdu, 0x180000), (EnumItem::IdsCommonElement, 0x1f0000), (EnumItem::IdsDesign, 0x1f0000), (EnumItem::IdsMapping, 0x1f0000), (EnumItem::IdsmAbstractPortInterface, 0x180000), (EnumItem::IdsmContextProviderInterface, 0x180000), (EnumItem::IdsmContextProviderMapping, 0x180000), (EnumItem::IdsmInstance, 0x1f0000), (EnumItem::IdsmProperties, 0x1f0000), (EnumItem::IdsmQualifiedEventReceiverInterface, 0x100000), (EnumItem::IdsmQualifiedEventReceiverMapping, 0x100000), (EnumItem::IdsmReportingModeProviderInterface, 0x100000), (EnumItem::IdsmReportingModeProviderMapping, 0x100000), (EnumItem::IdsmTimestampProviderInterface, 0x180000), (EnumItem::IdsmTimestampProviderMapping, 0x180000), (EnumItem::Ieee1722AcfBusPartRawDataStreamConsumerMapping, 0x100000), (EnumItem::Ieee1722AcfBusRawDataStreamConsumerMapping, 0x100000), (EnumItem::Ieee1722RawDataStreamConsumerInterface, 0x100000), (EnumItem::Ieee1722RawDataStreamConsumerMapping, 0x100000), (EnumItem::Ieee1722RawDataStreamMapping, 0x100000), (EnumItem::Ieee1722RawDataStreamProducerInterface, 0x100000), (EnumItem::Ieee1722RawDataStreamProducerMapping, 0x100000), (EnumItem::Ieee1722TpAafConnection, 0x180000), (EnumItem::Ieee1722TpAcfConnection, 0x180000), (EnumItem::Ieee1722TpAvConnection, 0x180000), (EnumItem::Ieee1722TpConnection, 0x180000), (EnumItem::Ieee1722TpCrfConnection, 0x180000), (EnumItem::Ieee1722TpIidcConnection, 0x180000), (EnumItem::Ieee1722TpRvfConnection, 0x180000), (EnumItem::Implementation, 0x1ffc00), (EnumItem::ImplementationDataType, 0x1ffc00), (EnumItem::ImplementationDataTypeElementExtension, 0x1c00), (EnumItem::ImplementationDataTypeExtension, 0x1c00), (EnumItem::InterfaceMappingSet, 0x1fc00), (EnumItem::ImpositionTimeDefinitionGroup, 0x180000), (EnumItem::InterfaceMapping, 0x1e0000), (EnumItem::InterpolationRoutineMappingSet, 0x1ffc00), (EnumItem::IpIamRemoteSubject, 0x1f0000), (EnumItem::IpSecConfigProps, 0x1f8000), (EnumItem::IpSecIamRemoteSubject, 0x1f0000), (EnumItem::J1939Cluster, 0x180000), (EnumItem::J1939ControllerApplication, 0x1ffc00), (EnumItem::J1939DcmIPdu, 0x180000), (EnumItem::J1939ProtectedIPdu, 0x100000), (EnumItem::KeywordSet, 0x1ffc00), (EnumItem::LifeCycleInfoSet, 0x1ffc00), (EnumItem::LifeCycleStateDefinitionGroup, 0x1ffc00), (EnumItem::LinCluster, 0x180000), (EnumItem::LogAndTraceInterface, 0x1e0000), (EnumItem::LogAndTraceMessageCollectionSet, 0x1e0000), (EnumItem::LtMessageCollectionToPortPrototypeMapping, 0x1c0000), (EnumItem::MacLayerRawDataStreamInterface, 0x100000), (EnumItem::MacSecGlobalKayProps, 0x1c0000), (EnumItem::MacSecParticipantSet, 0x1c0000), (EnumItem::Machine, 0x1ffc00), (EnumItem::MachineDesign, 0x180000), (EnumItem::MachineTiming, 0x1f0000), (EnumItem::McFunction, 0x1ffc00), (EnumItem::McGroup, 0x1fe000), (EnumItem::ModeDeclarationGroup, 0x1ffc00), (EnumItem::ModeDeclarationMappingSet, 0x1ffc00), (EnumItem::ModeSwitchInterface, 0x1ffc00), (EnumItem::MultiplexedIPdu, 0x180000), (EnumItem::NPdu, 0x180000), (EnumItem::NetworkHandlePortMapping, 0x180000), (EnumItem::NetworkManagementPortInterface, 0x180000), (EnumItem::NmConfig, 0x180000), (EnumItem::NmHandleToFunctionGroupStateMapping, 0x1e0000), (EnumItem::NmInteractsWithSmMapping, 0x180000), (EnumItem::NmPdu, 0x180000), (EnumItem::NvBlockSwComponentType, 0x1ffc00), (EnumItem::NvDataInterface, 0x1ffc00), (EnumItem::OsTaskProxy, 0x1e0000), (EnumItem::ParameterInterface, 0x1ffc00), (EnumItem::ParameterSwComponentType, 0x1ffc00), (EnumItem::Pdu, 0x180000), (EnumItem::PersistencyDeployment, 0x1fe000), (EnumItem::PersistencyFile, 0xfc00), (EnumItem::PersistencyFileArray, 0xfc00), (EnumItem::PersistencyFileProxyInterface, 0xfc00), (EnumItem::PersistencyFileProxyToFileMapping, 0xc00), (EnumItem::PersistencyDeploymentElementToCryptoKeySlotMapping, 0x1f0000), (EnumItem::PersistencyDeploymentToCryptoKeySlotMapping, 0x1f0000), (EnumItem::PersistencyDeploymentToDltLogChannelMapping, 0x10000), (EnumItem::PersistencyDeploymentToDltLogSinkMapping, 0x1e0000), (EnumItem::PersistencyFileStorage, 0x1f0000), (EnumItem::PersistencyFileStorageInterface, 0x1f0000), (EnumItem::PersistencyInterface, 0x1ffc00), (EnumItem::PersistencyKeyValueDatabase, 0xfc00), (EnumItem::PersistencyKeyValueDatabaseInterface, 0xfc00), (EnumItem::PersistencyPortPrototypeToFileArrayMapping, 0xf000), (EnumItem::PersistencyPortPrototypeToKeyValueDatabaseMapping, 0xfc00), (EnumItem::PersistencyKeyValueStorage, 0x1f0000), (EnumItem::PersistencyKeyValueStorageInterface, 0x1f0000), (EnumItem::PersistencyPortPrototypeToDeploymentMapping, 0x1f0000), (EnumItem::PersistencyPortPrototypeToFileStorageMapping, 0x1f0000), (EnumItem::PersistencyPortPrototypeToKeyValueStorageMapping, 0x1f0000), (EnumItem::PhmAbstractRecoveryNotificationInterface, 0x1f0000), (EnumItem::PhmContributionToMachineMapping, 0x1ffc00), (EnumItem::PhmHealthChannelInterface, 0x1ff000), (EnumItem::PhmHealthChannelRecoveryNotificationInterface, 0x1f0000), (EnumItem::PhmRecoveryActionInterface, 0x1f8000), (EnumItem::PhmSupervisedEntityInterface, 0x1ff000), (EnumItem::PhmSupervisionRecoveryNotificationInterface, 0x1f0000), (EnumItem::PhysicalDimension, 0x1ffc00), (EnumItem::PhysicalDimensionMappingSet, 0x1ffc00), (EnumItem::PlatformHealthManagementContribution, 0x1ffc00), (EnumItem::PlatformHealthManagementInterface, 0x1ff000), (EnumItem::PlatformModuleEndpointConfiguration, 0x1f0000), (EnumItem::PlatformModuleEthernetEndpointConfiguration, 0x1f0000), (EnumItem::PortInterface, 0x1ffc00), (EnumItem::PortInterfaceMappingSet, 0x1ffc00), (EnumItem::PortInterfaceToDataTypeMapping, 0x1ffc00), (EnumItem::PortPrototypeBlueprint, 0x1ffc00), (EnumItem::PostBuildVariantCriterion, 0x1ffc00), (EnumItem::PostBuildVariantCriterionValueSet, 0x1ffc00), (EnumItem::PredefinedVariant, 0x1ffc00), (EnumItem::Process, 0x1ffc00), (EnumItem::ProcessDesign, 0x1ff000), (EnumItem::ProcessDesignToMachineDesignMappingSet, 0x1c000), (EnumItem::ProcessDesignToMachineDesignMapping, 0x1e0000), (EnumItem::ProcessExecutionError, 0x1f0000), (EnumItem::ProcessToMachineMappingSet, 0x1ffc00), (EnumItem::ProvidedApServiceInstance, 0x1ffc00), (EnumItem::ProvidedDdsServiceInstance, 0x1000), (EnumItem::ProvidedServiceInstanceToSwClusterDesignPPortPrototypeMapping, 0x1f8000), (EnumItem::ProvidedSomeipServiceInstance, 0x1ffc00), (EnumItem::ProvidedUserDefinedServiceInstance, 0x1ffc00), (EnumItem::RapidPrototypingScenario, 0x1ffc00), (EnumItem::RawDataStreamClientInterface, 0x1f0000), (EnumItem::RawDataStreamDeployment, 0x1f8000), (EnumItem::RawDataStreamGrant, 0x1f8000), (EnumItem::RawDataStreamGrantDesign, 0x1f8000), (EnumItem::RawDataStreamInterface, 0x8000), (EnumItem::RawDataStreamMapping, 0x1f8000), (EnumItem::RecoveryViaApplicationActionToClientServerOperationMapping, 0x8000), (EnumItem::RawDataStreamServerInterface, 0x1f0000), (EnumItem::RecoveryNotification, 0x1c0000), (EnumItem::RecoveryNotificationToPPortPrototypeMapping, 0x1f0000), (EnumItem::RequiredApServiceInstance, 0x1ffc00), (EnumItem::RequiredDdsServiceInstance, 0x1000), (EnumItem::RequiredServiceInstanceToSwClusterDesignRPortPrototypeMapping, 0x1f8000), (EnumItem::RequiredSomeipServiceInstance, 0x1ffc00), (EnumItem::RequiredUserDefinedServiceInstance, 0x1ffc00), (EnumItem::RestHttpPortPrototypeMapping, 0x1fc00), (EnumItem::RestServiceInterface, 0x1fc00), (EnumItem::SdgDef, 0x1ffc00), (EnumItem::SecureComPropsSet, 0x1fc00), (EnumItem::SecOcSecureComProps, 0x1e0000), (EnumItem::SecureComProps, 0x1e0000), (EnumItem::SecuredIPdu, 0x180000), (EnumItem::SecurityEventContextDataDefinition, 0x100000), (EnumItem::SecurityEventContextMapping, 0x1f0000), (EnumItem::SecurityEventContextMappingApplication, 0x1f0000), (EnumItem::SecurityEventContextMappingBswModule, 0x1f0000), (EnumItem::SecurityEventContextMappingCommConnector, 0x1f0000), (EnumItem::SecurityEventContextMappingFunctionalCluster, 0x1f0000), (EnumItem::SecurityEventDefinition, 0x1f0000), (EnumItem::SecurityEventFilterChain, 0x1f0000), (EnumItem::SecurityEventMapping, 0x1f0000), (EnumItem::SecurityEventReportInstanceDefinition, 0x100000), (EnumItem::SecurityEventReportInstanceValue, 0x100000), (EnumItem::SecurityEventReportInterface, 0x1f0000), (EnumItem::SecurityEventReportToSecurityEventDefinitionMapping, 0x1f0000), (EnumItem::SenderReceiverInterface, 0x1ffc00), (EnumItem::SensorActuatorSwComponentType, 0x1ffc00), (EnumItem::SerializationTechnology, 0x1ffc00), (EnumItem::ServiceInstanceToMachineMapping, 0x1ffc00), (EnumItem::ServiceInstanceToPortPrototypeMapping, 0x1ffc00), (EnumItem::ServiceInstanceToSignalMappingSet, 0x1fc00), (EnumItem::ServiceInstanceToSignalMapping, 0x1e0000), (EnumItem::ServiceInstanceToSwClusterDesignPortPrototypeMapping, 0x1f8000), (EnumItem::ServiceInterface, 0x1ffc00), (EnumItem::ServiceInterfaceDeployment, 0x1ffc00), (EnumItem::ServiceInterfaceMappingSet, 0x1fc00), (EnumItem::ServiceInterfaceElementMapping, 0x1e0000), (EnumItem::ServiceInterfaceEventMapping, 0x1e0000), (EnumItem::ServiceInterfaceFieldMapping, 0x1e0000), (EnumItem::ServiceInterfaceMethodMapping, 0x1e0000), (EnumItem::ServiceInterfacePedigree, 0x1f8000), (EnumItem::ServiceInterfaceTriggerMapping, 0x1e0000), (EnumItem::ServiceProxySwComponentType, 0x1ffc00), (EnumItem::ServiceSwComponentType, 0x1ffc00), (EnumItem::SignalBasedServiceInterfaceDeployment, 0x7c00), (EnumItem::ServiceTiming, 0x1f0000), (EnumItem::SignalServiceTranslationPropsSet, 0x1f8000), (EnumItem::SoftwareActivationDependency, 0x8000), (EnumItem::SmInteractsWithNmMapping, 0x180000), (EnumItem::SocketConnectionIpduIdentifierSet, 0x180000), (EnumItem::SoftwareCluster, 0x1ffc00), (EnumItem::SoftwareClusterRequirement, 0xc00), (EnumItem::SoftwareClusterDesign, 0x1ff000), (EnumItem::SoftwareClusterDiagnosticDeploymentProps, 0x1c0000), (EnumItem::SoftwarePackage, 0x1fc000), (EnumItem::SomeipDataPrototypeTransformationProps, 0x1ffc00), (EnumItem::SomeipRemoteMulticastConfig, 0x1c0000), (EnumItem::SomeipRemoteUnicastConfig, 0x1c0000), (EnumItem::SomeipSdClientEventGroupTimingConfig, 0x1fe000), (EnumItem::SomeipSdClientServiceInstanceConfig, 0x1fe000), (EnumItem::SomeipSdServerEventGroupTimingConfig, 0x1fe000), (EnumItem::SomeipSdServerServiceInstanceConfig, 0x1fe000), (EnumItem::SomeipServiceInstanceToMachineMapping, 0x1ffc00), (EnumItem::SomeipServiceInterfaceDeployment, 0x1ffc00), (EnumItem::StartupConfig, 0x1e0000), (EnumItem::StartupConfigSet, 0x3fc00), (EnumItem::StateClientInterface, 0x100000), (EnumItem::StateDependentFirewall, 0x1c0000), (EnumItem::StateManagemenPhmErrorInterface, 0xc0000), (EnumItem::StateManagementDiagTriggerInterface, 0x1c0000), (EnumItem::StateManagementEmErrorInterface, 0x1c0000), (EnumItem::StateManagementErrorInterface, 0x1c0000), (EnumItem::StateManagementFunctionGroupSwitchNotificationInterface, 0x1c0000), (EnumItem::StateManagementNotificationInterface, 0x1c0000), (EnumItem::StateManagementPhmErrorInterface, 0x100000), (EnumItem::StateManagementPortInterface, 0x1c0000), (EnumItem::StateManagementRequestInterface, 0x1c0000), (EnumItem::StateManagementTriggerInterface, 0x1c0000), (EnumItem::StdCppImplementationDataType, 0x1fe000), (EnumItem::SwAddrMethod, 0x1ffc00), (EnumItem::SwAxisType, 0x1ffc00), (EnumItem::SwBaseType, 0x1ffc00), (EnumItem::SwComponentMappingConstraints, 0x1e0000), (EnumItem::SwComponentType, 0x1ffc00), (EnumItem::SwRecordLayout, 0x1ffc00), (EnumItem::SwSystemconst, 0x1ffc00), (EnumItem::SwSystemconstantValueSet, 0x1ffc00), (EnumItem::SwcBswMapping, 0x1ffc00), (EnumItem::SwcImplementation, 0x1ffc00), (EnumItem::SwcTiming, 0x1ffc00), (EnumItem::SynchronizedTimeBaseConsumerInterface, 0x1f0000), (EnumItem::SynchronizedTimeBaseProviderInterface, 0x1f0000), (EnumItem::System, 0x1ffc00), (EnumItem::SystemSignal, 0x1ffc00), (EnumItem::SystemSignalGroup, 0x1ffc00), (EnumItem::SystemTiming, 0x1ffc00), (EnumItem::TcpOptionFilterSet, 0x1ffc00), (EnumItem::TdCpSoftwareClusterMappingSet, 0x1f0000), (EnumItem::TimeBaseProviderToPersistencyMapping, 0x1f0000), (EnumItem::TimeSyncPortPrototypeToTimeBaseMapping, 0x1ff000), (EnumItem::TimeSynchronizationInterface, 0xf000), (EnumItem::TimeSynchronizationMasterInterface, 0xf000), (EnumItem::TimeSynchronizationPureLocalInterface, 0xf000), (EnumItem::TimeSynchronizationSlaveInterface, 0xf000), (EnumItem::TimingExtension, 0x1ffc00), (EnumItem::TlsConnectionGroup, 0x1e0000), (EnumItem::TlsIamRemoteSubject, 0x1f0000), (EnumItem::TlsSecureComProps, 0x1e0000), (EnumItem::TlvDataIdDefinitionSet, 0x1f8000), (EnumItem::TransformationPropsSet, 0x1ffc00), (EnumItem::TransformationPropsToServiceInterfaceElementMappingSet, 0x1fc00), (EnumItem::TransformationPropsToServiceInterfaceElementMapping, 0x1e0000), (EnumItem::TriggerInterface, 0x1ffc00), (EnumItem::TtcanCluster, 0x180000), (EnumItem::UcmToTimeBaseResourceMapping, 0x1c0000), (EnumItem::Unit, 0x1ffc00), (EnumItem::UnitGroup, 0x1ffc00), (EnumItem::UploadableDeploymentElement, 0x180000), (EnumItem::UploadableDesignElement, 0x180000), (EnumItem::UploadableExclusivePackageElement, 0x1f0000), (EnumItem::UploadablePackageElement, 0x1ffc00), (EnumItem::UserDefinedCluster, 0x180000), (EnumItem::UserDefinedIPdu, 0x180000), (EnumItem::UserDefinedPdu, 0x180000), (EnumItem::UserDefinedServiceInstanceToMachineMapping, 0x1ffc00), (EnumItem::UserDefinedServiceInterfaceDeployment, 0x1ffc00), (EnumItem::VehiclePackage, 0x1f8000), (EnumItem::VfbTiming, 0x1ffc00), (EnumItem::ViewMapSet, 0x1ffc00), (EnumItem::XcpPdu, 0x180000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::ArPackage, 0x1fffff)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::Nohref, 0x1fffff)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::Circle, 0x1fffff), (EnumItem::Default, 0x1fffff), (EnumItem::Poly, 0x1fffff), (EnumItem::Rect, 0x1fffff)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::ArgumentDataPrototype, 0x1fffff)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::In, 0x1fffff), (EnumItem::Inout, 0x1fffff), (EnumItem::Out, 0x1fffff)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::PayloadAsArray, 0x1f0000), (EnumItem::PayloadAsPointerToArray, 0x1f0000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::AllIndicesDifferentArraySize, 0x1fffc0), (EnumItem::AllIndicesSameArraySize, 0x1fffc0), (EnumItem::InheritedFromArrayElementTypeSize, 0x1fffc0)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::FixedSize, 0x1fffff), (EnumItem::VariableSize, 0x1fffff)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::ArtifactChecksum, 0x1e0000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::AsynchronousServerCallPoint, 0x1fffff)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::AsynchronousServerCallResultPoint, 0x1fffff)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::AbstractCryptoKeySlotInterface, 0x100000), (EnumItem::AbstractImplementationDataType, 0x1ff000), (EnumItem::AbstractRawDataStreamInterface, 0x1f0000), (EnumItem::AbstractSynchronizedTimeBaseInterface, 0x1f0000), (EnumItem::AclObjectSet, 0x1ffff8), (EnumItem::AclOperation, 0x1ffff8), (EnumItem::AclPermission, 0x1ffff8), (EnumItem::AclRole, 0x1ffff8), (EnumItem::AdaptiveApplicationSwComponentType, 0x1ffe00), (EnumItem::AliasNameSet, 0x1ffffc), (EnumItem::ApmcDefinitionCollection, 0x100000), (EnumItem::ApmcFunctionalClusterDef, 0x100000), (EnumItem::ApplicationArrayDataType, 0x1ffffc), (EnumItem::ApplicationAssocMapDataType, 0x1ffe00), (EnumItem::ApplicationCompositeDataType, 0x1ffffc), (EnumItem::ApplicationDataType, 0x1ffffc), (EnumItem::ApplicationDeferredDataType, 0x1f0000), (EnumItem::ApplicationInterface, 0x1e0000), (EnumItem::ApplicationPrimitiveDataType, 0x1ffffc), (EnumItem::ApplicationRecordDataType, 0x1ffffc), (EnumItem::ApplicationSwComponentType, 0x1ffffc), (EnumItem::ArPackage, 0x1ffffc), (EnumItem::AtomicSwComponentType, 0x1ffffc), (EnumItem::AtpBlueprint, 0x1ffffc), (EnumItem::BswEntryRelationshipSet, 0x1fff00), (EnumItem::BswModuleDescription, 0x1ffffc), (EnumItem::BswModuleEntry, 0x1ffffc), (EnumItem::BuildAction, 0x1ffff8), (EnumItem::BuildActionEntity, 0x1ffff8), (EnumItem::BuildActionEnvironment, 0x1ffff8), (EnumItem::BuildActionManifest, 0x1ffff8), (EnumItem::ClientServerInterface, 0x1ffffc), (EnumItem::ClientServerInterfaceMapping, 0x1ffff8), (EnumItem::ClientServerInterfaceToBswModuleEntryBlueprintMapping, 0x1fff00), (EnumItem::ComplexDeviceDriverSwComponentType, 0x1ffffc), (EnumItem::CompositeInterface, 0x18000), (EnumItem::CompositionSwComponentType, 0x1ffffc), (EnumItem::CompuMethod, 0x1ffffc), (EnumItem::ConsistencyNeeds, 0x1ffff8), (EnumItem::CppImplementationDataType, 0x1ff000), (EnumItem::CryptoNeed, 0x1c00), (EnumItem::CryptoCertificateInterface, 0x1f0000), (EnumItem::CryptoInterface, 0x1f0000), (EnumItem::CryptoKeySlotClientInterface, 0x100000), (EnumItem::CryptoKeySlotInterface, 0x1f0000), (EnumItem::CryptoProviderInterface, 0x1f0000), (EnumItem::CryptoTrustMasterInterface, 0x1f0000), (EnumItem::CustomCppImplementationDataType, 0x1fe000), (EnumItem::DataConstr, 0x1ffffc), (EnumItem::DataInterface, 0x1ffffc), (EnumItem::DataTypeMappingSet, 0x1ffffc), (EnumItem::DiagnosticAbstractDataIdentifierInterface, 0x1fc000), (EnumItem::DiagnosticAbstractRoutineInterface, 0x1fc000), (EnumItem::DiagnosticAuthenticationInterface, 0x1e0000), (EnumItem::DiagnosticComControlInterface, 0x1e0000), (EnumItem::DiagnosticConditionInterface, 0x1fc000), (EnumItem::DiagnosticDataElementInterface, 0x1fc000), (EnumItem::DiagnosticDataIdentifierGenericInterface, 0x1fc000), (EnumItem::DiagnosticDataIdentifierInterface, 0x1fc000), (EnumItem::DiagnosticDoIpActivationLineInterface, 0x1f8000), (EnumItem::DiagnosticDoIpEntityIdentificationInterface, 0x1c0000), (EnumItem::DiagnosticDoIpGroupIdentificationInterface, 0x1fc000), (EnumItem::DiagnosticDoIpPowerModeInterface, 0x1fc000), (EnumItem::DiagnosticDoIpTriggerVehicleAnnouncementInterface, 0x1f8000), (EnumItem::DiagnosticDownloadInterface, 0x1fc000), (EnumItem::DiagnosticDtcInformationInterface, 0x1fc000), (EnumItem::DiagnosticEcuResetInterface, 0x1f0000), (EnumItem::DiagnosticEventInterface, 0x1fc000), (EnumItem::DiagnosticExternalAuthenticationInterface, 0x1e0000), (EnumItem::DiagnosticGenericUdsInterface, 0x1fc000), (EnumItem::DiagnosticIndicatorInterface, 0x1fc000), (EnumItem::DiagnosticMonitorInterface, 0x1fc000), (EnumItem::DiagnosticMultipleConditionInterface, 0x180000), (EnumItem::DiagnosticMultipleEventInterface, 0x180000), (EnumItem::DiagnosticMultipleMonitorInterface, 0x180000), (EnumItem::DiagnosticMultipleResourceInterface, 0x180000), (EnumItem::DiagnosticOperationCycleInterface, 0x1fc000), (EnumItem::DiagnosticPortInterface, 0x1fc000), (EnumItem::DiagnosticRequestFileTransferInterface, 0x1c0000), (EnumItem::DiagnosticRoutineGenericInterface, 0x1fc000), (EnumItem::DiagnosticRoutineInterface, 0x1fc000), (EnumItem::DiagnosticSecurityLevelInterface, 0x1fc000), (EnumItem::DiagnosticServiceValidationInterface, 0x1fc000), (EnumItem::DiagnosticSovdAuthorizationInterface, 0x1c0000), (EnumItem::DiagnosticSovdBulkDataInterface, 0x180000), (EnumItem::DiagnosticSovdConfigurationInterface, 0x180000), (EnumItem::DiagnosticSovdPortInterface, 0x1c0000), (EnumItem::DiagnosticSovdProximityChallengeInterface, 0x1c0000), (EnumItem::DiagnosticSovdServiceValidationInterface, 0x180000), (EnumItem::DiagnosticSovdUpdateInterface, 0x180000), (EnumItem::DiagnosticTransmitCertificateInterface, 0x100000), (EnumItem::DiagnosticUploadInterface, 0x1fc000), (EnumItem::EcuAbstractionSwComponentType, 0x1ffffc), (EnumItem::EcucDefinitionCollection, 0x1ffffc), (EnumItem::EcucDestinationUriDefSet, 0x1fffc0), (EnumItem::EcucModuleDef, 0x1ffffc), (EnumItem::FirewallStateSwitchInterface, 0x1c0000), (EnumItem::FlatMap, 0x1ffffc), (EnumItem::IdsmAbstractPortInterface, 0x180000), (EnumItem::IdsmContextProviderInterface, 0x180000), (EnumItem::IdsmQualifiedEventReceiverInterface, 0x100000), (EnumItem::IdsmReportingModeProviderInterface, 0x100000), (EnumItem::IdsmTimestampProviderInterface, 0x180000), (EnumItem::Ieee1722RawDataStreamConsumerInterface, 0x100000), (EnumItem::Ieee1722RawDataStreamProducerInterface, 0x100000), (EnumItem::ImplementationDataType, 0x1ffffc), (EnumItem::ImpositionTime, 0x180000), (EnumItem::ImpositionTimeDefinitionGroup, 0x180000), (EnumItem::KeywordSet, 0x1ffff8), (EnumItem::LifeCycleState, 0x1ffff8), (EnumItem::LifeCycleStateDefinitionGroup, 0x1ffff8), (EnumItem::LogAndTraceInterface, 0x1e0000), (EnumItem::MacLayerRawDataStreamInterface, 0x100000), (EnumItem::ModeDeclarationGroup, 0x1ffffc), (EnumItem::ModeInterfaceMapping, 0x1ffff8), (EnumItem::ModeSwitchInterface, 0x1ffffc), (EnumItem::NetworkManagementPortInterface, 0x180000), (EnumItem::NvBlockSwComponentType, 0x1ffffc), (EnumItem::NvDataInterface, 0x1ffffc), (EnumItem::ParameterInterface, 0x1ffffc), (EnumItem::ParameterSwComponentType, 0x1ffffc), (EnumItem::PersistencyFileProxyInterface, 0xfc00), (EnumItem::PersistencyFileStorageInterface, 0x1f0000), (EnumItem::PersistencyInterface, 0x1ffc00), (EnumItem::PersistencyKeyValueDatabaseInterface, 0xfc00), (EnumItem::PersistencyKeyValueStorageInterface, 0x1f0000), (EnumItem::PhmAbstractRecoveryNotificationInterface, 0x1f0000), (EnumItem::PhmHealthChannelInterface, 0x1ff000), (EnumItem::PhmHealthChannelRecoveryNotificationInterface, 0x1f0000), (EnumItem::PhmRecoveryActionInterface, 0x1f8000), (EnumItem::PhmSupervisedEntityInterface, 0x1ff000), (EnumItem::PhmSupervisionRecoveryNotificationInterface, 0x1f0000), (EnumItem::PlatformHealthManagementInterface, 0x1ff000), (EnumItem::PortInterface, 0x1ffffc), (EnumItem::PortInterfaceMapping, 0x1ffff8), (EnumItem::PortInterfaceMappingSet, 0x1ffff8), (EnumItem::PortPrototypeBlueprint, 0x1ffffc), (EnumItem::RawDataStreamInterface, 0x8000), (EnumItem::RawDataStreamClientInterface, 0x1f0000), (EnumItem::RawDataStreamServerInterface, 0x1f0000), (EnumItem::RestAbstractEndpoint, 0x1fc00), (EnumItem::RestEndpointDelete, 0x1fc00), (EnumItem::RestEndpointGet, 0x1fc00), (EnumItem::RestEndpointPost, 0x1fc00), (EnumItem::RestEndpointPut, 0x1fc00), (EnumItem::RestServiceInterface, 0x1fc00), (EnumItem::SecurityEventReportInterface, 0x1f0000), (EnumItem::SenderReceiverInterface, 0x1ffffc), (EnumItem::SensorActuatorSwComponentType, 0x1ffffc), (EnumItem::ServiceInterface, 0x1ffe00), (EnumItem::ServiceInterfaceMapping, 0x1e0000), (EnumItem::ServiceProxySwComponentType, 0x1ffffc), (EnumItem::ServiceSwComponentType, 0x1ffffc), (EnumItem::StateManagemenPhmErrorInterface, 0xc0000), (EnumItem::StateClientInterface, 0x100000), (EnumItem::StateManagementDiagTriggerInterface, 0x1c0000), (EnumItem::StateManagementEmErrorInterface, 0x1c0000), (EnumItem::StateManagementErrorInterface, 0x1c0000), (EnumItem::StateManagementFunctionGroupSwitchNotificationInterface, 0x1c0000), (EnumItem::StateManagementNotificationInterface, 0x1c0000), (EnumItem::StateManagementPhmErrorInterface, 0x100000), (EnumItem::StateManagementPortInterface, 0x1c0000), (EnumItem::StateManagementRequestInterface, 0x1c0000), (EnumItem::StateManagementTriggerInterface, 0x1c0000), (EnumItem::StdCppImplementationDataType, 0x1fe000), (EnumItem::SwAddrMethod, 0x1ffff8), (EnumItem::SwBaseType, 0x1ffffc), (EnumItem::SwComponentType, 0x1ffffc), (EnumItem::TimeSynchronizationInterface, 0xf000), (EnumItem::TimeSynchronizationMasterInterface, 0xf000), (EnumItem::TimeSynchronizationPureLocalInterface, 0xf000), (EnumItem::TimeSynchronizationSlaveInterface, 0xf000), (EnumItem::SynchronizedTimeBaseConsumerInterface, 0x1f0000), (EnumItem::SynchronizedTimeBaseProviderInterface, 0x1f0000), (EnumItem::TriggerInterface, 0x1ffffc), (EnumItem::TriggerInterfaceMapping, 0x1ffff8), (EnumItem::VariableAndParameterInterfaceMapping, 0x1ffff8), (EnumItem::VfbTiming, 0x1ffff8)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::AbstractCryptoKeySlotInterface, 0x100000), (EnumItem::AbstractImplementationDataType, 0x1ff000), (EnumItem::AbstractProvidedPortPrototype, 0x1ffff8), (EnumItem::AbstractRawDataStreamInterface, 0x1f0000), (EnumItem::AbstractRequiredPortPrototype, 0x1ffff8), (EnumItem::AbstractSynchronizedTimeBaseInterface, 0x1f0000), (EnumItem::AclObjectSet, 0x1ffff8), (EnumItem::AclOperation, 0x1ffff8), (EnumItem::AclPermission, 0x1ffff8), (EnumItem::AclRole, 0x1ffff8), (EnumItem::AdaptiveApplicationSwComponentType, 0x1ffe00), (EnumItem::AliasNameSet, 0x1ffffc), (EnumItem::ApmcDefinitionCollection, 0x100000), (EnumItem::ApmcFunctionalClusterDef, 0x100000), (EnumItem::ApplicationArrayDataType, 0x1ffffc), (EnumItem::ApplicationAssocMapDataType, 0x1ffe00), (EnumItem::ApplicationCompositeDataType, 0x1ffffc), (EnumItem::ApplicationDataType, 0x1ffffc), (EnumItem::ApplicationDeferredDataType, 0x1f0000), (EnumItem::ApplicationInterface, 0x1e0000), (EnumItem::ApplicationPrimitiveDataType, 0x1ffffc), (EnumItem::ApplicationRecordDataType, 0x1ffffc), (EnumItem::ApplicationSwComponentType, 0x1ffffc), (EnumItem::ArPackage, 0x1ffffc), (EnumItem::AtomicSwComponentType, 0x1ffffc), (EnumItem::AtpBlueprintable, 0x1ffffc), (EnumItem::BswEntryRelationshipSet, 0x1fff00), (EnumItem::BswModuleDescription, 0x1ffffc), (EnumItem::BswModuleEntry, 0x1ffffc), (EnumItem::BuildAction, 0x1ffff8), (EnumItem::BuildActionEntity, 0x1ffff8), (EnumItem::BuildActionEnvironment, 0x1ffff8), (EnumItem::BuildActionManifest, 0x1ffff8), (EnumItem::ClientServerInterface, 0x1ffffc), (EnumItem::ClientServerInterfaceMapping, 0x1ffff8), (EnumItem::ComplexDeviceDriverSwComponentType, 0x1ffffc), (EnumItem::CompositeInterface, 0x18000), (EnumItem::CompositionSwComponentType, 0x1ffffc), (EnumItem::CompuMethod, 0x1ffffc), (EnumItem::ConsistencyNeeds, 0x1ffff8), (EnumItem::CppImplementationDataType, 0x1ff000), (EnumItem::CryptoNeed, 0x1c00), (EnumItem::CryptoCertificateInterface, 0x1f0000), (EnumItem::CryptoInterface, 0x1f0000), (EnumItem::CryptoKeySlotClientInterface, 0x100000), (EnumItem::CryptoKeySlotInterface, 0x1f0000), (EnumItem::CryptoProviderInterface, 0x1f0000), (EnumItem::CryptoTrustMasterInterface, 0x1f0000), (EnumItem::CustomCppImplementationDataType, 0x1fe000), (EnumItem::DataConstr, 0x1ffffc), (EnumItem::DataInterface, 0x1ffffc), (EnumItem::DataTypeMappingSet, 0x1ffffc), (EnumItem::DiagnosticAbstractDataIdentifierInterface, 0x1fc000), (EnumItem::DiagnosticAbstractRoutineInterface, 0x1fc000), (EnumItem::DiagnosticAuthenticationInterface, 0x1e0000), (EnumItem::DiagnosticComControlInterface, 0x1e0000), (EnumItem::DiagnosticConditionInterface, 0x1fc000), (EnumItem::DiagnosticDataElementInterface, 0x1fc000), (EnumItem::DiagnosticDataIdentifierGenericInterface, 0x1fc000), (EnumItem::DiagnosticDataIdentifierInterface, 0x1fc000), (EnumItem::DiagnosticDoIpActivationLineInterface, 0x1f8000), (EnumItem::DiagnosticDoIpEntityIdentificationInterface, 0x1c0000), (EnumItem::DiagnosticDoIpGroupIdentificationInterface, 0x1fc000), (EnumItem::DiagnosticDoIpPowerModeInterface, 0x1fc000), (EnumItem::DiagnosticDoIpTriggerVehicleAnnouncementInterface, 0x1f8000), (EnumItem::DiagnosticDownloadInterface, 0x1fc000), (EnumItem::DiagnosticDtcInformationInterface, 0x1fc000), (EnumItem::DiagnosticEcuResetInterface, 0x1f0000), (EnumItem::DiagnosticEventInterface, 0x1fc000), (EnumItem::DiagnosticExternalAuthenticationInterface, 0x1e0000), (EnumItem::DiagnosticGenericUdsInterface, 0x1fc000), (EnumItem::DiagnosticIndicatorInterface, 0x1fc000), (EnumItem::DiagnosticMonitorInterface, 0x1fc000), (EnumItem::DiagnosticMultipleConditionInterface, 0x180000), (EnumItem::DiagnosticMultipleEventInterface, 0x180000), (EnumItem::DiagnosticMultipleMonitorInterface, 0x180000), (EnumItem::DiagnosticMultipleResourceInterface, 0x180000), (EnumItem::DiagnosticOperationCycleInterface, 0x1fc000), (EnumItem::DiagnosticPortInterface, 0x1fc000), (EnumItem::DiagnosticRequestFileTransferInterface, 0x1c0000), (EnumItem::DiagnosticRoutineGenericInterface, 0x1fc000), (EnumItem::DiagnosticRoutineInterface, 0x1fc000), (EnumItem::DiagnosticSecurityLevelInterface, 0x1fc000), (EnumItem::DiagnosticServiceValidationInterface, 0x1fc000), (EnumItem::DiagnosticSovdAuthorizationInterface, 0x1c0000), (EnumItem::DiagnosticSovdBulkDataInterface, 0x180000), (EnumItem::DiagnosticSovdConfigurationInterface, 0x180000), (EnumItem::DiagnosticSovdPortInterface, 0x1c0000), (EnumItem::DiagnosticSovdProximityChallengeInterface, 0x1c0000), (EnumItem::DiagnosticSovdServiceValidationInterface, 0x180000), (EnumItem::DiagnosticSovdUpdateInterface, 0x180000), (EnumItem::DiagnosticTransmitCertificateInterface, 0x100000), (EnumItem::DiagnosticUploadInterface, 0x1fc000), (EnumItem::EcuAbstractionSwComponentType, 0x1ffffc), (EnumItem::EcucDefinitionCollection, 0x1ffffc), (EnumItem::EcucDestinationUriDefSet, 0x1fffc0), (EnumItem::EcucModuleDef, 0x1ffffc), (EnumItem::FirewallStateSwitchInterface, 0x1c0000), (EnumItem::FlatMap, 0x1ffffc), (EnumItem::IdsmAbstractPortInterface, 0x180000), (EnumItem::IdsmContextProviderInterface, 0x180000), (EnumItem::IdsmQualifiedEventReceiverInterface, 0x100000), (EnumItem::IdsmReportingModeProviderInterface, 0x100000), (EnumItem::IdsmTimestampProviderInterface, 0x180000), (EnumItem::Ieee1722RawDataStreamConsumerInterface, 0x100000), (EnumItem::Ieee1722RawDataStreamProducerInterface, 0x100000), (EnumItem::ImplementationDataType, 0x1ffffc), (EnumItem::ImpositionTime, 0x180000), (EnumItem::ImpositionTimeDefinitionGroup, 0x180000), (EnumItem::KeywordSet, 0x1ffff8), (EnumItem::LifeCycleState, 0x1ffff8), (EnumItem::LifeCycleStateDefinitionGroup, 0x1ffff8), (EnumItem::LogAndTraceInterface, 0x1e0000), (EnumItem::MacLayerRawDataStreamInterface, 0x100000), (EnumItem::ModeDeclarationGroup, 0x1ffffc), (EnumItem::ModeInterfaceMapping, 0x1ffff8), (EnumItem::ModeSwitchInterface, 0x1ffffc), (EnumItem::NetworkManagementPortInterface, 0x180000), (EnumItem::NvBlockSwComponentType, 0x1ffffc), (EnumItem::NvDataInterface, 0x1ffffc), (EnumItem::PPortPrototype, 0x1ffffc), (EnumItem::ParameterInterface, 0x1ffffc), (EnumItem::ParameterSwComponentType, 0x1ffffc), (EnumItem::PersistencyFileProxyInterface, 0xfc00), (EnumItem::PersistencyFileStorageInterface, 0x1f0000), (EnumItem::PersistencyInterface, 0x1ffc00), (EnumItem::PersistencyKeyValueDatabaseInterface, 0xfc00), (EnumItem::PersistencyKeyValueStorageInterface, 0x1f0000), (EnumItem::PhmAbstractRecoveryNotificationInterface, 0x1f0000), (EnumItem::PhmHealthChannelInterface, 0x1ff000), (EnumItem::PhmHealthChannelRecoveryNotificationInterface, 0x1f0000), (EnumItem::PhmRecoveryActionInterface, 0x1f8000), (EnumItem::PhmSupervisedEntityInterface, 0x1ff000), (EnumItem::PhmSupervisionRecoveryNotificationInterface, 0x1f0000), (EnumItem::PlatformHealthManagementInterface, 0x1ff000), (EnumItem::PortInterface, 0x1ffffc), (EnumItem::PortInterfaceMapping, 0x1ffff8), (EnumItem::PortInterfaceMappingSet, 0x1ffff8), (EnumItem::PortPrototype, 0x1ffffc), (EnumItem::PrPortPrototype, 0x1ffff8), (EnumItem::RPortPrototype, 0x1ffffc), (EnumItem::RawDataStreamInterface, 0x8000), (EnumItem::RawDataStreamClientInterface, 0x1f0000), (EnumItem::RawDataStreamServerInterface, 0x1f0000), (EnumItem::RestAbstractEndpoint, 0x1fc00), (EnumItem::RestEndpointDelete, 0x1fc00), (EnumItem::RestEndpointGet, 0x1fc00), (EnumItem::RestEndpointPost, 0x1fc00), (EnumItem::RestEndpointPut, 0x1fc00), (EnumItem::RestServiceInterface, 0x1fc00), (EnumItem::SecurityEventReportInterface, 0x1f0000), (EnumItem::SenderReceiverInterface, 0x1ffffc), (EnumItem::SensorActuatorSwComponentType, 0x1ffffc), (EnumItem::ServiceInterface, 0x1ffe00), (EnumItem::ServiceInterfaceMapping, 0x1e0000), (EnumItem::ServiceProxySwComponentType, 0x1ffffc), (EnumItem::ServiceSwComponentType, 0x1ffffc), (EnumItem::StateManagemenPhmErrorInterface, 0xc0000), (EnumItem::StateClientInterface, 0x100000), (EnumItem::StateManagementDiagTriggerInterface, 0x1c0000), (EnumItem::StateManagementEmErrorInterface, 0x1c0000), (EnumItem::StateManagementErrorInterface, 0x1c0000), (EnumItem::StateManagementFunctionGroupSwitchNotificationInterface, 0x1c0000), (EnumItem::StateManagementNotificationInterface, 0x1c0000), (EnumItem::StateManagementPhmErrorInterface, 0x100000), (EnumItem::StateManagementPortInterface, 0x1c0000), (EnumItem::StateManagementRequestInterface, 0x1c0000), (EnumItem::StateManagementTriggerInterface, 0x1c0000), (EnumItem::StdCppImplementationDataType, 0x1fe000), (EnumItem::SwAddrMethod, 0x1ffff8), (EnumItem::SwBaseType, 0x1ffffc), (EnumItem::SwComponentType, 0x1ffffc), (EnumItem::TimeSynchronizationInterface, 0xf000), (EnumItem::TimeSynchronizationMasterInterface, 0xf000), (EnumItem::TimeSynchronizationPureLocalInterface, 0xf000), (EnumItem::TimeSynchronizationSlaveInterface, 0xf000), (EnumItem::SynchronizedTimeBaseConsumerInterface, 0x1f0000), (EnumItem::SynchronizedTimeBaseProviderInterface, 0x1f0000), (EnumItem::TriggerInterface, 0x1ffffc), (EnumItem::TriggerInterfaceMapping, 0x1ffff8), (EnumItem::VariableAndParameterInterfaceMapping, 0x1ffff8), (EnumItem::VfbTiming, 0x1ffff8)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::AtpDefinition, 0x1ffff8), (EnumItem::EcucAbstractExternalReferenceDef, 0x1fff00), (EnumItem::EcucAbstractInternalReferenceDef, 0x1fff00), (EnumItem::EcucAbstractReferenceDef, 0x1ffff8), (EnumItem::EcucAbstractStringParamDef, 0x1ffff8), (EnumItem::EcucAddInfoParamDef, 0x1ffff8), (EnumItem::EcucBooleanParamDef, 0x1ffff8), (EnumItem::EcucChoiceContainerDef, 0x1ffff8), (EnumItem::EcucChoiceReferenceDef, 0x1ffff8), (EnumItem::EcucCommonAttributes, 0x1ffff8), (EnumItem::EcucContainerDef, 0x1ffff8), (EnumItem::EcucDefinitionElement, 0x1ffff8), (EnumItem::EcucEnumerationParamDef, 0x1ffff8), (EnumItem::EcucFloatParamDef, 0x1ffff8), (EnumItem::EcucForeignReferenceDef, 0x1ffff8), (EnumItem::EcucFunctionNameDef, 0x1ffff8), (EnumItem::EcucInstanceReferenceDef, 0x1ffff8), (EnumItem::EcucIntegerParamDef, 0x1ffff8), (EnumItem::EcucLinkerSymbolDef, 0x1ffff8), (EnumItem::EcucModuleDef, 0x1ffff8), (EnumItem::EcucMultilineStringParamDef, 0x1ffff8), (EnumItem::EcucParamConfContainerDef, 0x1ffff8), (EnumItem::EcucParameterDef, 0x1ffff8), (EnumItem::EcucReferenceDef, 0x1ffff8), (EnumItem::EcucStringParamDef, 0x1ffff8), (EnumItem::EcucSymbolicNameReferenceDef, 0x1ffff8), (EnumItem::EcucUriReferenceDef, 0x1fffc0), (EnumItem::HwCategory, 0x1ffff8), (EnumItem::PostBuildVariantCriterion, 0x1ffff8), (EnumItem::SwSystemconst, 0x1ffff8)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::AbstractAccessPoint, 0x1fff00), (EnumItem::AbstractImplementationDataTypeElement, 0x1fe000), (EnumItem::AbstractProvidedPortPrototype, 0x1ffff8), (EnumItem::AbstractRequiredPortPrototype, 0x1ffff8), (EnumItem::AdaptiveFirewallModuleInstantiation, 0x1c0000), (EnumItem::AdaptiveModuleInstantiation, 0x1c0000), (EnumItem::ApplicationArrayElement, 0x1fffff), (EnumItem::ApplicationAssocMapElement, 0x1ffe00), (EnumItem::ApplicationCompositeElementDataPrototype, 0x1fffff), (EnumItem::ApplicationRecordElement, 0x1fffff), (EnumItem::ArgumentDataPrototype, 0x1fffff), (EnumItem::AssemblySwConnector, 0x1fffff), (EnumItem::AsynchronousServerCallPoint, 0x1ffff8), (EnumItem::AsynchronousServerCallResultPoint, 0x1ffff8), (EnumItem::AsynchronousServerCallReturnsEvent, 0x1ffffc), (EnumItem::AtpFeature, 0x1fffff), (EnumItem::AtpPrototype, 0x1fffff), (EnumItem::AtpStructureElement, 0x1fffff), (EnumItem::AutosarDataPrototype, 0x1fffff), (EnumItem::BackgroundEvent, 0x1ffffc), (EnumItem::BswInternalBehavior, 0x1fffff), (EnumItem::BswModuleDescription, 0x1fffff), (EnumItem::BswServiceDependencyIdent, 0x1fffc0), (EnumItem::BulkNvDataDescriptor, 0x1f8000), (EnumItem::ClientServerOperation, 0x1fffff), (EnumItem::CmModuleInstantiation, 0x100000), (EnumItem::CppImplementationDataTypeElement, 0x1ff000), (EnumItem::CryptoModuleInstantiation, 0x1c0000), (EnumItem::DataPrototype, 0x1fffff), (EnumItem::DataPrototypeGroup, 0x1ffff8), (EnumItem::DataReceiveErrorEvent, 0x1ffffc), (EnumItem::DataReceivedEvent, 0x1ffffc), (EnumItem::DataSendCompletedEvent, 0x1ffffc), (EnumItem::DataWriteCompletedEvent, 0x1ffffc), (EnumItem::DelegationSwConnector, 0x1fffff), (EnumItem::DeterministicClient, 0x40000), (EnumItem::DeterministicSyncInstantiation, 0x40000), (EnumItem::DeterministicSyncMaster, 0x40000), (EnumItem::DiagnosticParameterIdent, 0x1c0000), (EnumItem::DoIpInstantiation, 0x1c0000), (EnumItem::ExternalTriggerOccurredEvent, 0x1ffffc), (EnumItem::ExternalTriggeringPointIdent, 0x1ffff0), (EnumItem::Field, 0x1ffe00), (EnumItem::GenericDiagnosticTransportInstantiation, 0x100000), (EnumItem::GenericModuleInstantiation, 0x1c0000), (EnumItem::IamModuleInstantiation, 0x1c0000), (EnumItem::IdentCaption, 0x1ffff8), (EnumItem::IdsPlatformInstantiation, 0x1c0000), (EnumItem::IdsmModuleInstantiation, 0x1c0000), (EnumItem::ImplementationDataTypeElement, 0x1fff00), (EnumItem::InitEvent, 0x1ffff8), (EnumItem::InternalBehavior, 0x1fffff), (EnumItem::InternalTriggerOccurredEvent, 0x1ffffc), (EnumItem::InternalTriggeringPoint, 0x1ffff8), (EnumItem::LogAndTraceInstantiation, 0x1c0000), (EnumItem::Machine, 0x1ffe00), (EnumItem::MachineDesign, 0x1ff000), (EnumItem::ModeAccessPointIdent, 0x1ffff0), (EnumItem::ModeDeclaration, 0x1fffff), (EnumItem::ModeDeclarationGroupPrototype, 0x1fffff), (EnumItem::ModeDeclarationMapping, 0x1ffff8), (EnumItem::ModeSwitchPoint, 0x1ffff8), (EnumItem::ModeSwitchedAckEvent, 0x1ffffc), (EnumItem::ModeTransition, 0x1ffff8), (EnumItem::NmInstantiation, 0x1c0000), (EnumItem::NonOsModuleInstantiation, 0x1c0000), (EnumItem::NvBlockDescriptor, 0x1fffc0), (EnumItem::OperationInvokedEvent, 0x1ffffc), (EnumItem::OsModuleInstantiation, 0x1c0000), (EnumItem::OsTaskExecutionEvent, 0x1f0000), (EnumItem::PPortPrototype, 0x1fffff), (EnumItem::ParameterAccess, 0x1ffff8), (EnumItem::ParameterDataPrototype, 0x1fffff), (EnumItem::PortBlueprint, 0x1), (EnumItem::PassThroughSwConnector, 0x1ffff8), (EnumItem::PerInstanceMemory, 0x1ffffc), (EnumItem::PersistencyDataElement, 0x1ff000), (EnumItem::PhmCheckpoint, 0x1ff000), (EnumItem::PhmHealthChannelStatus, 0x1ff000), (EnumItem::PortGroup, 0x1fffff), (EnumItem::PortPrototype, 0x1fffff), (EnumItem::PortPrototypeBlueprint, 0x1ffffe), (EnumItem::PrPortPrototype, 0x1ffff8), (EnumItem::RPortPrototype, 0x1fffff), (EnumItem::RestAbstractNumericalPropertyDef, 0x1fc00), (EnumItem::RestAbstractPropertyDef, 0x1fc00), (EnumItem::RestArrayPropertyDef, 0x1fc00), (EnumItem::RestBooleanPropertyDef, 0x1fc00), (EnumItem::RestIntegerPropertyDef, 0x1fc00), (EnumItem::RestNumberPropertyDef, 0x1fc00), (EnumItem::RestObjectRef, 0x1fc00), (EnumItem::RestPrimitivePropertyDef, 0x1fc00), (EnumItem::RestStringPropertyDef, 0x1fc00), (EnumItem::RootSwClusterDesignComponentPrototype, 0x1f8000), (EnumItem::RootSwComponentPrototype, 0x1ffe00), (EnumItem::RootSwCompositionPrototype, 0x1fffff), (EnumItem::RteEvent, 0x1ffffc), (EnumItem::RunnableEntity, 0x1ffffc), (EnumItem::RunnableEntityGroup, 0x1ffff8), (EnumItem::ServerCallPoint, 0x1ffff8), (EnumItem::SovdGatewayInstantiation, 0x1c0000), (EnumItem::SovdModuleInstantiation, 0x1c0000), (EnumItem::SovdServerInstantiation, 0x1c0000), (EnumItem::StateManagementModuleInstantiation, 0x1c0000), (EnumItem::SwComponentPrototype, 0x1fffff), (EnumItem::SwConnector, 0x1fffff), (EnumItem::SwcBswMapping, 0x1fffff), (EnumItem::SwcInternalBehavior, 0x1fffff), (EnumItem::SwcModeManagerErrorEvent, 0x1ffff8), (EnumItem::SwcModeSwitchEvent, 0x1ffffc), (EnumItem::SwcServiceDependency, 0x1ffffc), (EnumItem::SynchronousServerCallPoint, 0x1ffff8), (EnumItem::System, 0x1fffff), (EnumItem::TimeSyncModuleInstantiation, 0x1c0000), (EnumItem::TimingEvent, 0x1ffffc), (EnumItem::TransformerHardErrorEvent, 0x1fffc0), (EnumItem::TransportLayerIndependentInstanceId, 0x200), (EnumItem::Trigger, 0x1fffff), (EnumItem::UcmMasterModuleInstantiation, 0x1c0000), (EnumItem::UcmModuleInstantiation, 0x1c0000), (EnumItem::UcmSubordinateModuleInstantiation, 0x1c0000), (EnumItem::VariableAccess, 0x1ffff8), (EnumItem::VariableDataPrototype, 0x1fffff)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::RefAll, 0x1ffff8), (EnumItem::RefNonStandard, 0x1ffff8), (EnumItem::RefNone, 0x1ffff8)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::ArgumentDataPrototype, 0x1fffff), (EnumItem::AutosarDataPrototype, 0x1fffff), (EnumItem::Field, 0x1ffe00), (EnumItem::ParameterDataPrototype, 0x1fffff), (EnumItem::PersistencyDataElement, 0x1ff000), (EnumItem::VariableDataPrototype, 0x1fffff)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::AbstractImplementationDataType, 0x1ff000), (EnumItem::ApplicationArrayDataType, 0x1fffff), (EnumItem::ApplicationAssocMapDataType, 0x1ffe00), (EnumItem::ApplicationCompositeDataType, 0x1fffff), (EnumItem::ApplicationDataType, 0x1fffff), (EnumItem::ApplicationDeferredDataType, 0x1f0000), (EnumItem::ApplicationPrimitiveDataType, 0x1fffff), (EnumItem::ApplicationRecordDataType, 0x1fffff), (EnumItem::AutosarDataType, 0x1fffff), (EnumItem::CppImplementationDataType, 0x1ff000), (EnumItem::CustomCppImplementationDataType, 0x1fe000), (EnumItem::ImplementationDataType, 0x1fffff), (EnumItem::StdCppImplementationDataType, 0x1fe000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::AutosarOperationArgumentInstance, 0x1ffffc)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::AutosarVariableInstance, 0x1ffffc)]},
    CharacterDataSpec::Pattern{check_fn: validate_regex_5, regex: r"[0-9]+|STRING|ARRAY", max_length: None},
    CharacterDataSpec::Enum{items: &[(EnumItem::BinaryManifestResourceDefinition, 0x1f0000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::CodeGenerationTime, 0x1fffff), (EnumItem::LinkTime, 0x1fffff), (EnumItem::PreCompileTime, 0x1fffff), (EnumItem::SystemDesignTime, 0x1fffff)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::BlockState, 0x1f0000)]},
    CharacterDataSpec::Pattern{check_fn: validate_regex_6, regex: r"0|1|true|false", max_length: None},
    CharacterDataSpec::Enum{items: &[(EnumItem::BswAsynchronousServerCallPoint, 0x1ffff8)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::BswAsynchronousServerCallResultPoint, 0x1ffff8)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::Callback, 0x1fffff), (EnumItem::Callout, 0x1fff00), (EnumItem::Interrupt, 0x1fffff), (EnumItem::Regular, 0x1fffff), (EnumItem::Scheduled, 0x1fffff)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::BswDistinguishedPartition, 0x1ffff8)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::Abstract, 0x1fff00), (EnumItem::Concrete, 0x1fff00)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::DerivedFrom, 0x1fff00)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::Hook, 0x1fffff), (EnumItem::InterruptCat1, 0x1fffff), (EnumItem::InterruptCat2, 0x1fffff), (EnumItem::Task, 0x1fffff), (EnumItem::Unspecified, 0x1fffff)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::BswImplementation, 0x1fffff)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::BswInternalBehavior, 0x1fffff)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::BswInternalTriggeringPoint, 0x1fffff)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::Cat1, 0x1fffff), (EnumItem::Cat2, 0x1fffff)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::BswModuleClientServerEntry, 0x1ffff8)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::BswModuleDescription, 0x1fffff)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::BswCalledEntity, 0x1fffff), (EnumItem::BswInterruptEntity, 0x1fffff), (EnumItem::BswModuleEntity, 0x1fffff), (EnumItem::BswSchedulableEntity, 0x1fffff)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::BswModuleEntry, 0x1fffff)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::BswSchedulerNamePrefix, 0x1ffffc)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::BswServiceDependencyIdent, 0x1fffc0)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::BuildAction, 0x1ffff8)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::BuildActionEnvironment, 0x1ffff8)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::BuildActionManifest, 0x1ffff8)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::BuildTypeDebug, 0x1ffe00), (EnumItem::BuildTypeRelease, 0x1ffe00)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::MostSignificantByteFirst, 0x1fffff), (EnumItem::MostSignificantByteLast, 0x1fffff), (EnumItem::Opaque, 0x1fffff)]},
    CharacterDataSpec::Pattern{check_fn: validate_regex_7, regex: r"[a-zA-Z_][a-zA-Z0-9_]*", max_length: None},
    CharacterDataSpec::Enum{items: &[(EnumItem::CalibrationParameterValueSet, 0x1fffff)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::ComAxis, 0x1fffff), (EnumItem::Comaxis, 0x1ffffc), (EnumItem::CurveAxis, 0x1fffff), (EnumItem::Curveaxis, 0x1ffffc), (EnumItem::FixAxis, 0x1fffff), (EnumItem::Fixaxis, 0x1ffffc), (EnumItem::ResAxis, 0x1fffff), (EnumItem::Resaxis, 0x1ffffc), (EnumItem::StdAxis, 0x1fffff), (EnumItem::Stdaxis, 0x1ffffc)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::Extended, 0x1fffff), (EnumItem::Standard, 0x1fffff)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::Any, 0x1fffc0), (EnumItem::Can20, 0x1fffc0), (EnumItem::CanFd, 0x1fffc0)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::CanFrameTriggering, 0x1fe000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::Can20, 0x1fffc0), (EnumItem::CanFd, 0x1fffc0)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::CanNmCluster, 0x1fffff)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::CanTpAddress, 0x1fffff)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::Extended, 0x1fffff), (EnumItem::Mixed, 0x1fffff), (EnumItem::Mixed29Bit, 0x1ffff8), (EnumItem::Normalfixed, 0x1ffff8), (EnumItem::Standard, 0x1fffff)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::CanTpChannel, 0x1fffff)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::FullDuplexMode, 0x1fffff), (EnumItem::HalfDuplexMode, 0x1fffff)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::CanTpNode, 0x1fffff)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::CanXlProps, 0x1c0000)]},
    CharacterDataSpec::Pattern{check_fn: validate_regex_8, regex: r"[a-zA-Z][a-zA-Z0-9_]*", max_length: None},
    CharacterDataSpec::Enum{items: &[(EnumItem::Break, 0x1fffff), (EnumItem::NoBreak, 0x1fffff)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::CheckpointTransition, 0x1ffc00)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::WillCall, 0xfc00), (EnumItem::WontCall, 0xfc00)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::ClientIdDefinitionSet, 0x1fffc0)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::WillCall, 0x1f0000), (EnumItem::WontCall, 0x1f0000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::ClientServerInterface, 0x1fff00)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::ClientServerOperation, 0x1fffff)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::AbstractCanCluster, 0x1fffff), (EnumItem::AbstractCryptoKeySlotInterface, 0x100000), (EnumItem::AbstractCryptoKeySlotToPortPrototypeMapping, 0x100000), (EnumItem::AbstractDoIpPortMapping, 0x100000), (EnumItem::AbstractEthernetFrame, 0x1fff00), (EnumItem::AbstractExecutionContext, 0x1fe000), (EnumItem::AbstractIamRemoteSubject, 0x1f0000), (EnumItem::AbstractImplementationDataType, 0x1ff000), (EnumItem::AbstractRawDataStreamInterface, 0x1f0000), (EnumItem::AbstractSynchronizedTimeBaseInterface, 0x1f0000), (EnumItem::AclObjectSet, 0x1ffff8), (EnumItem::AclOperation, 0x1ffff8), (EnumItem::AclPermission, 0x1ffff8), (EnumItem::AclRole, 0x1ffff8), (EnumItem::AdaptiveApplicationSwComponentType, 0x1ffe00), (EnumItem::AdaptiveAutosarApplication, 0xe00), (EnumItem::AdaptiveFirewallToPortPrototypeMapping, 0x1c0000), (EnumItem::AdaptivePlatformServiceInstance, 0x1ffe00), (EnumItem::AliasNameSet, 0x1fffff), (EnumItem::Allocator, 0x1ffc00), (EnumItem::ApApplicationError, 0x1fe000), (EnumItem::ApApplicationErrorDomain, 0x1fe000), (EnumItem::ApApplicationErrorSet, 0x1fe000), (EnumItem::ApmcDefinitionCollection, 0x100000), (EnumItem::ApmcFunctionalClusterDef, 0x100000), (EnumItem::ApmcFunctionalClusterValue, 0x100000), (EnumItem::ApmcValueCollection, 0x100000), (EnumItem::ApplicabilityInfoSet, 0x180000), (EnumItem::ApplicationArrayDataType, 0x1fffff), (EnumItem::ApplicationAssocMapDataType, 0x1ffe00), (EnumItem::ApplicationCompositeDataType, 0x1fffff), (EnumItem::ApplicationDataType, 0x1fffff), (EnumItem::ApplicationDeferredDataType, 0x1f0000), (EnumItem::ApplicationInterface, 0x1e0000), (EnumItem::ApplicationPartition, 0x1fff00), (EnumItem::ApplicationPrimitiveDataType, 0x1fffff), (EnumItem::ApplicationRecordDataType, 0x1fffff), (EnumItem::ApplicationSwComponentType, 0x1fffff), (EnumItem::ArElement, 0x1fffff), (EnumItem::ArPackage, 0x1fffff), (EnumItem::ArtifactChecksumToCryptoProviderMapping, 0x1e0000), (EnumItem::AtomicSwComponentType, 0x1fffff), (EnumItem::AutosarDataType, 0x1fffff), (EnumItem::BaseType, 0x1fffff), (EnumItem::BlueprintMappingSet, 0x1fffff), (EnumItem::BswCompositionTiming, 0x1fe000), (EnumItem::BswEntryRelationshipSet, 0x1fff00), (EnumItem::BswImplementation, 0x1fffff), (EnumItem::BswModuleDescription, 0x1fffff), (EnumItem::BswModuleEntry, 0x1fffff), (EnumItem::BswModuleTiming, 0x1fffff), (EnumItem::BuildActionManifest, 0x1ffff8), (EnumItem::BusMirrorChannelMapping, 0x1fe000), (EnumItem::BusMirrorChannelMappingCan, 0x1fe000), (EnumItem::BusMirrorChannelMappingFlexray, 0x1fe000), (EnumItem::BusMirrorChannelMappingIp, 0x1fe000), (EnumItem::BusMirrorChannelMappingUserDefined, 0x1fe000), (EnumItem::CalibrationParameterValueSet, 0x1fffff), (EnumItem::CanCluster, 0x1fffff), (EnumItem::CanFrame, 0x1fffff), (EnumItem::CanTpConfig, 0x1fffff), (EnumItem::CanXlProps, 0x1c0000), (EnumItem::ClientIdDefinitionSet, 0x1fffc0), (EnumItem::ClientServerInterface, 0x1fffff), (EnumItem::ClientServerInterfaceToBswModuleEntryBlueprintMapping, 0x1fff00), (EnumItem::CollectableElement, 0x1fffff), (EnumItem::Collection, 0x1fffff), (EnumItem::ComCertificateToCryptoCertificateMapping, 0x1f0000), (EnumItem::ComEventGrant, 0x1fc000), (EnumItem::ComEventGrantDesign, 0x1fc000), (EnumItem::ComFieldGrant, 0x1fc000), (EnumItem::ComFieldGrantDesign, 0x1fc000), (EnumItem::ComFindServiceGrant, 0x1fc000), (EnumItem::ComFindServiceGrantDesign, 0x1fc000), (EnumItem::ComGrant, 0x1f0000), (EnumItem::ComGrantDesign, 0x1f0000), (EnumItem::ComKeyToCryptoKeySlotMapping, 0x1f0000), (EnumItem::ComMethodGrant, 0x1fc000), (EnumItem::ComMethodGrantDesign, 0x1fc000), (EnumItem::ComOfferServiceGrant, 0x1fc000), (EnumItem::ComOfferServiceGrantDesign, 0x1fc000), (EnumItem::ComSecOcToCryptoKeySlotMapping, 0x1f0000), (EnumItem::ComTriggerGrant, 0x180000), (EnumItem::ComTriggerGrantDesign, 0x1e0000), (EnumItem::CommunicationCluster, 0x1fffff), (EnumItem::ComplexDeviceDriverSwComponentType, 0x1fffff), (EnumItem::CompositeInterface, 0x18000), (EnumItem::CompositionPPortToExecutablePPortMapping, 0x1f8000), (EnumItem::CompositionPortToExecutablePortMapping, 0x1f8000), (EnumItem::CompositionRPortToExecutableRPortMapping, 0x1f8000), (EnumItem::CompositionSwComponentType, 0x1fffff), (EnumItem::CompuMethod, 0x1fffff), (EnumItem::ConsistencyNeedsBlueprintSet, 0x1ffff8), (EnumItem::ConstantSpecification, 0x1fffff), (EnumItem::ConstantSpecificationMappingSet, 0x1fffff), (EnumItem::ConsumedProvidedServiceInstanceGroup, 0x1f8000), (EnumItem::ContainerIPdu, 0x1fffc0), (EnumItem::CouplingElement, 0x1ffff8), (EnumItem::CpSoftwareCluster, 0x1f0000), (EnumItem::CpSoftwareClusterBinaryManifestDescriptor, 0x1f0000), (EnumItem::CpSoftwareClusterMappingSet, 0x1f0000), (EnumItem::CpSoftwareClusterResourcePool, 0x1f0000), (EnumItem::CpSwClusterResourceToDiagDataElemMapping, 0x1e0000), (EnumItem::CpSwClusterResourceToDiagFunctionIdMapping, 0x1e0000), (EnumItem::CpSwClusterToDiagEventMapping, 0x1e0000), (EnumItem::CpSwClusterToDiagRoutineSubfunctionMapping, 0x1e0000), (EnumItem::CppImplementationDataType, 0x1ff000), (EnumItem::CryptoDriver, 0x1c00), (EnumItem::CryptoNeed, 0x1c00), (EnumItem::CryptoCertificateInterface, 0x1f0000), (EnumItem::CryptoCertificateToPortPrototypeMapping, 0x1f0000), (EnumItem::CryptoEllipticCurveProps, 0x1e0000), (EnumItem::CryptoInterface, 0x1f0000), (EnumItem::CryptoKeySlotClientInterface, 0x100000), (EnumItem::CryptoKeySlotInterface, 0x1f0000), (EnumItem::CryptoKeySlotToClientPortPrototypeMapping, 0x100000), (EnumItem::CryptoKeySlotToPortPrototypeMapping, 0x1f0000), (EnumItem::CryptoNeedToPortPrototypeMapping, 0x1fc00), (EnumItem::CryptoKeySlotUsageDesignMapping, 0x100000), (EnumItem::CryptoKeySlotUserDesign, 0x100000), (EnumItem::CryptoKeySlotUserDesignMapping, 0x100000), (EnumItem::CryptoProviderInterface, 0x1f0000), (EnumItem::CryptoProviderToPortPrototypeMapping, 0x1f0000), (EnumItem::CryptoServiceCertificate, 0x1fe000), (EnumItem::CryptoServiceKey, 0x1fe000), (EnumItem::CryptoServicePrimitive, 0x1fe000), (EnumItem::CryptoServiceQueue, 0x1f8000), (EnumItem::CryptoSignatureScheme, 0x1e0000), (EnumItem::CryptoTrustMasterInterface, 0x1f0000), (EnumItem::CustomCppImplementationDataType, 0x1fe000), (EnumItem::DataConstr, 0x1fffff), (EnumItem::DataExchangePoint, 0x1fff00), (EnumItem::DataInterface, 0x1fffff), (EnumItem::DataTransformationSet, 0x1fffc0), (EnumItem::DataTypeMappingSet, 0x1fffff), (EnumItem::DcmIPdu, 0x1fffff), (EnumItem::DdsCpConfig, 0x180000), (EnumItem::DdsProvidedServiceInstance, 0x1fe000), (EnumItem::DdsRequiredServiceInstance, 0x1fe000), (EnumItem::DdsSecureComProps, 0x1e0000), (EnumItem::DdsSecureGovernance, 0x1e0000), (EnumItem::DdsServiceInstanceToMachineMapping, 0x1ff000), (EnumItem::DdsServiceInterfaceDeployment, 0x1ff000), (EnumItem::DdsTopicAccessRule, 0x1e0000), (EnumItem::DeterministicClient, 0x7e000), (EnumItem::DeterministicSyncMasterToTimeBaseConsumerMapping, 0x40000), (EnumItem::DiagnosticAbstractAliasEvent, 0x1fff00), (EnumItem::DiagnosticAbstractDataIdentifier, 0x1fffc0), (EnumItem::DiagnosticAbstractDataIdentifierInterface, 0x1fc000), (EnumItem::DiagnosticAbstractRoutineInterface, 0x1fc000), (EnumItem::DiagnosticAccessPermission, 0x1fffc0), (EnumItem::DiagnosticAging, 0x1fffc0), (EnumItem::DiagnosticAuthRole, 0x1e0000), (EnumItem::DiagnosticAuthTransmitCertificate, 0x180000), (EnumItem::DiagnosticAuthTransmitCertificateMapping, 0x180000), (EnumItem::DiagnosticAuthentication, 0x1e0000), (EnumItem::DiagnosticAuthenticationClass, 0x1e0000), (EnumItem::DiagnosticAuthenticationConfiguration, 0x1e0000), (EnumItem::DiagnosticAuthenticationInterface, 0x1e0000), (EnumItem::DiagnosticAuthenticationPortMapping, 0x1e0000), (EnumItem::DiagnosticClearCondition, 0x1fe000), (EnumItem::DiagnosticClearConditionGroup, 0x1fe000), (EnumItem::DiagnosticClearConditionPortMapping, 0x1fc000), (EnumItem::DiagnosticClearDiagnosticInformation, 0x1fffc0), (EnumItem::DiagnosticClearDiagnosticInformationClass, 0x1fffc0), (EnumItem::DiagnosticClearResetEmissionRelatedInfo, 0x1fff00), (EnumItem::DiagnosticClearResetEmissionRelatedInfoClass, 0x1fff00), (EnumItem::DiagnosticComControl, 0x1fffc0), (EnumItem::DiagnosticComControlClass, 0x1fffc0), (EnumItem::DiagnosticComControlInterface, 0x1e0000), (EnumItem::DiagnosticCommonElement, 0x1fffc0), (EnumItem::DiagnosticCondition, 0x1fffc0), (EnumItem::DiagnosticConditionGroup, 0x1fffc0), (EnumItem::DiagnosticConditionInterface, 0x1fc000), (EnumItem::DiagnosticConnection, 0x1fffc0), (EnumItem::DiagnosticContributionSet, 0x1fffc0), (EnumItem::DiagnosticControlDtcSetting, 0x1fffc0), (EnumItem::DiagnosticControlDtcSettingClass, 0x1fffc0), (EnumItem::DiagnosticCustomServiceClass, 0x1fffc0), (EnumItem::DiagnosticCustomServiceInstance, 0x1fe000), (EnumItem::DiagnosticDataByIdentifier, 0x1fffc0), (EnumItem::DiagnosticDataElementInterface, 0x1fc000), (EnumItem::DiagnosticDataIdentifier, 0x1fffc0), (EnumItem::DiagnosticDataIdentifierGenericInterface, 0x1fc000), (EnumItem::DiagnosticDataIdentifierInterface, 0x1fc000), (EnumItem::DiagnosticDataIdentifierSet, 0x1fffc0), (EnumItem::DiagnosticDataPortMapping, 0x1e0000), (EnumItem::DiagnosticDataTransfer, 0x1fffc0), (EnumItem::DiagnosticDataTransferClass, 0x1fffc0), (EnumItem::DiagnosticDeAuthentication, 0x1e0000), (EnumItem::DiagnosticDemProvidedDataMapping, 0x1fffc0), (EnumItem::DiagnosticDoIpActivationLineInterface, 0x1f8000), (EnumItem::DiagnosticDoIpActivationLinePortMapping, 0x100000), (EnumItem::DiagnosticDoIpEntityIdentificationInterface, 0x1c0000), (EnumItem::DiagnosticDoIpEntityIdentificationPortMapping, 0x100000), (EnumItem::DiagnosticDoIpGroupIdentificationInterface, 0x1fc000), (EnumItem::DiagnosticDoIpGroupIdentificationPortMapping, 0x100000), (EnumItem::DiagnosticDoIpPowerModeInterface, 0x1fc000), (EnumItem::DiagnosticDoIpPowerModePortMapping, 0x100000), (EnumItem::DiagnosticDoIpTriggerVehicleAnnouncementInterface, 0x1f8000), (EnumItem::DiagnosticDoIpTriggerVehicleAnnouncementPortMapping, 0x100000), (EnumItem::DiagnosticDownloadInterface, 0x1fc000), (EnumItem::DiagnosticDtcInformationInterface, 0x1fc000), (EnumItem::DiagnosticDynamicDataIdentifier, 0x1fffc0), (EnumItem::DiagnosticDynamicallyDefineDataIdentifier, 0x1fffc0), (EnumItem::DiagnosticDynamicallyDefineDataIdentifierClass, 0x1fffc0), (EnumItem::DiagnosticEcuInstanceProps, 0x1fff00), (EnumItem::DiagnosticEcuReset, 0x1fffc0), (EnumItem::DiagnosticEcuResetClass, 0x1fffc0), (EnumItem::DiagnosticEcuResetInterface, 0x1f0000), (EnumItem::DiagnosticEnableCondition, 0x1fffc0), (EnumItem::DiagnosticEnableConditionGroup, 0x1fffc0), (EnumItem::DiagnosticEnableConditionPortMapping, 0x1fffc0), (EnumItem::DiagnosticEnvironmentalCondition, 0x1fff00), (EnumItem::DiagnosticEvent, 0x1fffc0), (EnumItem::DiagnosticEventInterface, 0x1fc000), (EnumItem::DiagnosticEventPortMapping, 0x1fffc0), (EnumItem::DiagnosticEventToDebounceAlgorithmMapping, 0x1fffc0), (EnumItem::DiagnosticEventToEnableConditionGroupMapping, 0x1fffc0), (EnumItem::DiagnosticEventToOperationCycleMapping, 0x1fffc0), (EnumItem::DiagnosticEventToSecurityEventMapping, 0x1f0000), (EnumItem::DiagnosticEventToStorageConditionGroupMapping, 0x1fffc0), (EnumItem::DiagnosticEventToTroubleCodeJ1939Mapping, 0x1fe000), (EnumItem::DiagnosticEventToTroubleCodeUdsMapping, 0x1fffc0), (EnumItem::DiagnosticExtendedDataRecord, 0x1fffc0), (EnumItem::DiagnosticExternalAuthenticationInterface, 0x1e0000), (EnumItem::DiagnosticExternalAuthenticationPortMapping, 0x1e0000), (EnumItem::DiagnosticFimAliasEvent, 0x1fff00), (EnumItem::DiagnosticFimAliasEventGroup, 0x1fff00), (EnumItem::DiagnosticFimAliasEventGroupMapping, 0x1fff00), (EnumItem::DiagnosticFimAliasEventMapping, 0x1fff00), (EnumItem::DiagnosticFimEventGroup, 0x1fff00), (EnumItem::DiagnosticFimFunctionMapping, 0x1fff00), (EnumItem::DiagnosticFreezeFrame, 0x1fffc0), (EnumItem::DiagnosticFunctionIdentifier, 0x1fff00), (EnumItem::DiagnosticFunctionIdentifierInhibit, 0x1fff00), (EnumItem::DiagnosticGenericUdsInterface, 0x1fc000), (EnumItem::DiagnosticGenericUdsPortMapping, 0xc000), (EnumItem::DiagnosticIndicator, 0x1fffc0), (EnumItem::DiagnosticIndicatorInterface, 0x1fc000), (EnumItem::DiagnosticIndicatorPortMapping, 0x1fc000), (EnumItem::DiagnosticInfoType, 0x1fff00), (EnumItem::DiagnosticInhibitSourceEventMapping, 0x1fff00), (EnumItem::DiagnosticIoControl, 0x1fffc0), (EnumItem::DiagnosticIoControlClass, 0x1fffc0), (EnumItem::DiagnosticIumpr, 0x1fff00), (EnumItem::DiagnosticIumprDenominatorGroup, 0x1fff00), (EnumItem::DiagnosticIumprGroup, 0x1fff00), (EnumItem::DiagnosticIumprToFunctionIdentifierMapping, 0x1e0000), (EnumItem::DiagnosticJ1939ExpandedFreezeFrame, 0x1fff00), (EnumItem::DiagnosticJ1939FreezeFrame, 0x1fff00), (EnumItem::DiagnosticJ1939Node, 0x1fff00), (EnumItem::DiagnosticJ1939Spn, 0x1fff00), (EnumItem::DiagnosticJ1939SpnMapping, 0x1fff00), (EnumItem::DiagnosticJ1939SwMapping, 0x1fff00), (EnumItem::DiagnosticMapping, 0x1fffc0), (EnumItem::DiagnosticMasterToSlaveEventMapping, 0x1f0000), (EnumItem::DiagnosticMasterToSlaveEventMappingSet, 0x1fe000), (EnumItem::DiagnosticMeasurementIdentifier, 0x1fff00), (EnumItem::DiagnosticMemoryAddressableRangeAccess, 0x1fffc0), (EnumItem::DiagnosticMemoryByAddress, 0x1fffc0), (EnumItem::DiagnosticMemoryDestination, 0x1fffc0), (EnumItem::DiagnosticMemoryDestinationMirror, 0x1fffc0), (EnumItem::DiagnosticMemoryDestinationPortMapping, 0x1fc000), (EnumItem::DiagnosticMemoryDestinationPrimary, 0x1fffc0), (EnumItem::DiagnosticMemoryDestinationUserDefined, 0x1fffc0), (EnumItem::DiagnosticMemoryIdentifier, 0x1fffc0), (EnumItem::DiagnosticMonitorInterface, 0x1fc000), (EnumItem::DiagnosticMonitorPortMapping, 0x1e0000), (EnumItem::DiagnosticMultipleConditionInterface, 0x180000), (EnumItem::DiagnosticMultipleConditionPortMapping, 0x180000), (EnumItem::DiagnosticMultipleEventInterface, 0x180000), (EnumItem::DiagnosticMultipleEventPortMapping, 0x180000), (EnumItem::DiagnosticMultipleMonitorInterface, 0x180000), (EnumItem::DiagnosticMultipleMonitorPortMapping, 0x180000), (EnumItem::DiagnosticMultipleResourceInterface, 0x180000), (EnumItem::DiagnosticMultipleResourcePortMapping, 0x180000), (EnumItem::DiagnosticOperationCycle, 0x1fffc0), (EnumItem::DiagnosticOperationCycleInterface, 0x1fc000), (EnumItem::DiagnosticOperationCyclePortMapping, 0x1fffc0), (EnumItem::DiagnosticParameterIdentifier, 0x1fff00), (EnumItem::DiagnosticPortInterface, 0x1fc000), (EnumItem::DiagnosticPowertrainFreezeFrame, 0x1fff00), (EnumItem::DiagnosticProofOfOwnership, 0x1e0000), (EnumItem::DiagnosticProtocol, 0x1fff00), (EnumItem::DiagnosticProvidedDataMapping, 0x1fc000), (EnumItem::DiagnosticReadDataByIdentifier, 0x1fffc0), (EnumItem::DiagnosticReadDataByIdentifierClass, 0x1fffc0), (EnumItem::DiagnosticReadDataByPeriodicId, 0x1fffc0), (EnumItem::DiagnosticReadDataByPeriodicIdClass, 0x1fffc0), (EnumItem::DiagnosticReadDtcInformation, 0x1fffc0), (EnumItem::DiagnosticReadDtcInformationClass, 0x1fffc0), (EnumItem::DiagnosticReadMemoryByAddress, 0x1fffc0), (EnumItem::DiagnosticReadMemoryByAddressClass, 0x1fffc0), (EnumItem::DiagnosticReadScalingDataByIdentifier, 0x1fe000), (EnumItem::DiagnosticReadScalingDataByIdentifierClass, 0x1fe000), (EnumItem::DiagnosticRequestControlOfOnBoardDevice, 0x1fff00), (EnumItem::DiagnosticRequestControlOfOnBoardDeviceClass, 0x1fff00), (EnumItem::DiagnosticRequestCurrentPowertrainData, 0x1fff00), (EnumItem::DiagnosticRequestCurrentPowertrainDataClass, 0x1fff00), (EnumItem::DiagnosticRequestDownload, 0x1fffc0), (EnumItem::DiagnosticRequestDownloadClass, 0x1fffc0), (EnumItem::DiagnosticRequestEmissionRelatedDtc, 0x1fff00), (EnumItem::DiagnosticRequestEmissionRelatedDtcClass, 0x1fff00), (EnumItem::DiagnosticRequestEmissionRelatedDtcPermanentStatus, 0x1fff00), (EnumItem::DiagnosticRequestEmissionRelatedDtcPermanentStatusClass, 0x1fff00), (EnumItem::DiagnosticRequestFileTransfer, 0x1fffc0), (EnumItem::DiagnosticRequestFileTransferClass, 0x1fffc0), (EnumItem::DiagnosticRequestFileTransferInterface, 0x1c0000), (EnumItem::DiagnosticRequestOnBoardMonitoringTestResults, 0x1fff00), (EnumItem::DiagnosticRequestOnBoardMonitoringTestResultsClass, 0x1fff00), (EnumItem::DiagnosticRequestPowertrainFreezeFrameData, 0x1fff00), (EnumItem::DiagnosticRequestPowertrainFreezeFrameDataClass, 0x1fff00), (EnumItem::DiagnosticRequestUpload, 0x1fffc0), (EnumItem::DiagnosticRequestUploadClass, 0x1fffc0), (EnumItem::DiagnosticRequestVehicleInfo, 0x1fff00), (EnumItem::DiagnosticRequestVehicleInfoClass, 0x1fff00), (EnumItem::DiagnosticResponseOnEvent, 0x1fffc0), (EnumItem::DiagnosticResponseOnEventClass, 0x1fffc0), (EnumItem::DiagnosticRoutine, 0x1fffc0), (EnumItem::DiagnosticRoutineControl, 0x1fffc0), (EnumItem::DiagnosticRoutineControlClass, 0x1fffc0), (EnumItem::DiagnosticRoutineGenericInterface, 0x1fc000), (EnumItem::DiagnosticRoutineInterface, 0x1fc000), (EnumItem::DiagnosticSecureCodingMapping, 0x180000), (EnumItem::DiagnosticSecurityAccess, 0x1fffc0), (EnumItem::DiagnosticSecurityAccessClass, 0x1fffc0), (EnumItem::DiagnosticSecurityEventReportingModeMapping, 0x1f0000), (EnumItem::DiagnosticSecurityLevel, 0x1fffc0), (EnumItem::DiagnosticSecurityLevelInterface, 0x1fc000), (EnumItem::DiagnosticSecurityLevelPortMapping, 0x1fc000), (EnumItem::DiagnosticServiceClass, 0x1fffc0), (EnumItem::DiagnosticServiceDataIdentifierMapping, 0x2000), (EnumItem::DiagnosticServiceDataIdentifierPortMapping, 0x1c000), (EnumItem::DiagnosticServiceDataMapping, 0x1fffc0), (EnumItem::DiagnosticServiceGenericMapping, 0x1f0000), (EnumItem::DiagnosticServiceInstance, 0x1fffc0), (EnumItem::DiagnosticServiceSwMapping, 0x1fffc0), (EnumItem::DiagnosticServiceTable, 0x1fffc0), (EnumItem::DiagnosticServiceValidationInterface, 0x1fc000), (EnumItem::DiagnosticServiceValidationMapping, 0x1e0000), (EnumItem::DiagnosticSession, 0x1fffc0), (EnumItem::DiagnosticSessionControl, 0x1fffc0), (EnumItem::DiagnosticSessionControlClass, 0x1fffc0), (EnumItem::DiagnosticSoftwareClusterProps, 0x3fc00), (EnumItem::DiagnosticSovdAuthorizationInterface, 0x1c0000), (EnumItem::DiagnosticSovdAuthorizationPortMapping, 0x1c0000), (EnumItem::DiagnosticSovdBulkData, 0x180000), (EnumItem::DiagnosticSovdBulkDataInterface, 0x180000), (EnumItem::DiagnosticSovdBulkDataPortMapping, 0x180000), (EnumItem::DiagnosticSovdConfiguration, 0x180000), (EnumItem::DiagnosticSovdConfigurationBulkData, 0x180000), (EnumItem::DiagnosticSovdConfigurationDataIdentifierMapping, 0x180000), (EnumItem::DiagnosticSovdConfigurationInterface, 0x180000), (EnumItem::DiagnosticSovdConfigurationParameter, 0x180000), (EnumItem::DiagnosticSovdConfigurationPortMapping, 0x180000), (EnumItem::DiagnosticSovdFaultMemoryAccess, 0x100000), (EnumItem::DiagnosticSovdLock, 0x1c0000), (EnumItem::DiagnosticSovdLog, 0x180000), (EnumItem::DiagnosticSovdMethod, 0x180000), (EnumItem::DiagnosticSovdPortInterface, 0x1c0000), (EnumItem::DiagnosticSovdProximityChallengeInterface, 0x1c0000), (EnumItem::DiagnosticSovdProximityChallengePortMapping, 0x1c0000), (EnumItem::DiagnosticSovdServiceInstance, 0x180000), (EnumItem::DiagnosticSovdServiceValidationInterface, 0x180000), (EnumItem::DiagnosticSovdServiceValidationPortMapping, 0x180000), (EnumItem::DiagnosticSovdUpdate, 0x180000), (EnumItem::DiagnosticSovdUpdateInterface, 0x180000), (EnumItem::DiagnosticSovdUpdatePortMapping, 0x180000), (EnumItem::DiagnosticStorageCondition, 0x1fffc0), (EnumItem::DiagnosticStorageConditionGroup, 0x1fffc0), (EnumItem::DiagnosticStorageConditionPortMapping, 0x1fffc0), (EnumItem::DiagnosticSwMapping, 0x1fffc0), (EnumItem::DiagnosticTestResult, 0x1fff00), (EnumItem::DiagnosticTestRoutineIdentifier, 0x1fff00), (EnumItem::DiagnosticTransferExit, 0x1fffc0), (EnumItem::DiagnosticTransferExitClass, 0x1fffc0), (EnumItem::DiagnosticTransmitCertificateInterface, 0x100000), (EnumItem::DiagnosticTroubleCode, 0x1fffc0), (EnumItem::DiagnosticTroubleCodeGroup, 0x1fffc0), (EnumItem::DiagnosticTroubleCodeJ1939, 0x1fffc0), (EnumItem::DiagnosticTroubleCodeObd, 0x1fffc0), (EnumItem::DiagnosticTroubleCodeProps, 0x1fffc0), (EnumItem::DiagnosticTroubleCodeUds, 0x1fffc0), (EnumItem::DiagnosticTroubleCodeUdsToClearConditionGroupMapping, 0x1fe000), (EnumItem::DiagnosticTroubleCodeUdsToTroubleCodeObdMapping, 0x1fff00), (EnumItem::DiagnosticUploadDownloadPortMapping, 0xc000), (EnumItem::DiagnosticUploadInterface, 0x1fc000), (EnumItem::DiagnosticVerifyCertificateBidirectional, 0x1e0000), (EnumItem::DiagnosticVerifyCertificateUnidirectional, 0x1e0000), (EnumItem::DiagnosticWriteDataByIdentifier, 0x1fffc0), (EnumItem::DiagnosticWriteDataByIdentifierClass, 0x1fffc0), (EnumItem::DiagnosticWriteMemoryByAddress, 0x1fffc0), (EnumItem::DiagnosticWriteMemoryByAddressClass, 0x1fffc0), (EnumItem::DltLogChannelDesign, 0x10000), (EnumItem::DltLogChannelDesignToProcessDesignMapping, 0x10000), (EnumItem::DltLogChannelToProcessMapping, 0x10000), (EnumItem::DltApplicationToProcessMapping, 0x1e0000), (EnumItem::DltContext, 0x1e0000), (EnumItem::DltEcu, 0x1e0000), (EnumItem::DltLogSink, 0x1e0000), (EnumItem::DltLogSinkToPortPrototypeMapping, 0x1e0000), (EnumItem::DltMessageCollectionSet, 0x1f8000), (EnumItem::DoIpTpConfig, 0x1fff80), (EnumItem::Documentation, 0x1fffff), (EnumItem::E2EProfileCompatibilityProps, 0x1f0000), (EnumItem::E2EProfileConfigurationSet, 0x1ffc00), (EnumItem::EcuAbstractionSwComponentType, 0x1fffff), (EnumItem::EcuInstance, 0x1fffff), (EnumItem::EcuTiming, 0x1fffff), (EnumItem::EcucDefinitionCollection, 0x1fffff), (EnumItem::EcucDestinationUriDefSet, 0x1fffc0), (EnumItem::EcucModuleConfigurationValues, 0x1fffff), (EnumItem::EcucModuleDef, 0x1fffff), (EnumItem::EcucValueCollection, 0x1fffff), (EnumItem::EndToEndProtectionSet, 0x1fffff), (EnumItem::EnumerationMappingTable, 0x1fff00), (EnumItem::EthIpProps, 0x1f0000), (EnumItem::EthTcpIpIcmpProps, 0x1f0000), (EnumItem::EthTcpIpProps, 0x1f0000), (EnumItem::EthTpConfig, 0x1fe000), (EnumItem::EthernetCluster, 0x1fffff), (EnumItem::EthernetFrame, 0x1fffff), (EnumItem::EthernetMacRawDataStreamMapping, 0x100000), (EnumItem::EthernetRawDataStreamClientMapping, 0x1e0000), (EnumItem::EthernetRawDataStreamGrant, 0x1f8000), (EnumItem::EthernetRawDataStreamMapping, 0x1f8000), (EnumItem::EthernetRawDataStreamServerMapping, 0x1e0000), (EnumItem::EthernetWakeupSleepOnDatalineConfigSet, 0x1f0000), (EnumItem::EvaluatedVariantSet, 0x1fffff), (EnumItem::Executable, 0x1ffe00), (EnumItem::ExecutableGroup, 0x1000), (EnumItem::ExecutableTiming, 0x1f0000), (EnumItem::FibexElement, 0x1fffff), (EnumItem::FirewallRule, 0x1c0000), (EnumItem::FirewallStateSwitchInterface, 0x1c0000), (EnumItem::FlatMap, 0x1fffff), (EnumItem::FlexrayArTpConfig, 0x1ffffc), (EnumItem::FlexrayCluster, 0x1fffff), (EnumItem::FlexrayFrame, 0x1fffff), (EnumItem::FlexrayTpConfig, 0x1fffff), (EnumItem::FmFeature, 0x1ffff8), (EnumItem::FmFeatureMap, 0x1ffff8), (EnumItem::FmFeatureModel, 0x1ffff8), (EnumItem::FmFeatureSelectionSet, 0x1ffff8), (EnumItem::Frame, 0x1fffff), (EnumItem::FunctionGroupPortMapping, 0x100000), (EnumItem::FunctionGroupSet, 0x1f0000), (EnumItem::FunctionalClusterInteractsWithDiagnosticEventMapping, 0x100000), (EnumItem::FunctionalClusterInteractsWithFunctionalClusterMapping, 0x1f0000), (EnumItem::FunctionalClusterInteractsWithPersistencyDeploymentMapping, 0x1c0000), (EnumItem::FunctionalClusterToSecurityEventDefinitionMapping, 0x180000), (EnumItem::Gateway, 0x1fffff), (EnumItem::GeneralPurposeConnection, 0x1ff800), (EnumItem::GeneralPurposeIPdu, 0x1ffff0), (EnumItem::GeneralPurposePdu, 0x1ffff0), (EnumItem::GenericEthernetFrame, 0x1fffc0), (EnumItem::GenericTpConnection, 0x100000), (EnumItem::GlobalTimeDomain, 0x1fffc0), (EnumItem::Grant, 0x1fc000), (EnumItem::GrantDesign, 0x1fc000), (EnumItem::HwCategory, 0x1fffff), (EnumItem::HwElement, 0x1fffff), (EnumItem::HwType, 0x1fffff), (EnumItem::IPdu, 0x1fffff), (EnumItem::IPv6ExtHeaderFilterSet, 0x1fff00), (EnumItem::ISignal, 0x1fffff), (EnumItem::ISignalGroup, 0x1fffff), (EnumItem::ISignalIPdu, 0x1fffff), (EnumItem::ISignalIPduGroup, 0x1fffff), (EnumItem::IdsCommonElement, 0x1f0000), (EnumItem::IdsDesign, 0x1f0000), (EnumItem::IdsMapping, 0x1f0000), (EnumItem::IdsmAbstractPortInterface, 0x180000), (EnumItem::IdsmContextProviderInterface, 0x180000), (EnumItem::IdsmContextProviderMapping, 0x180000), (EnumItem::IdsmInstance, 0x1f0000), (EnumItem::IdsmProperties, 0x1f0000), (EnumItem::IdsmQualifiedEventReceiverInterface, 0x100000), (EnumItem::IdsmQualifiedEventReceiverMapping, 0x100000), (EnumItem::IdsmReportingModeProviderInterface, 0x100000), (EnumItem::IdsmReportingModeProviderMapping, 0x100000), (EnumItem::IdsmTimestampProviderInterface, 0x180000), (EnumItem::IdsmTimestampProviderMapping, 0x180000), (EnumItem::Ieee1722AcfBusPartRawDataStreamConsumerMapping, 0x100000), (EnumItem::Ieee1722AcfBusRawDataStreamConsumerMapping, 0x100000), (EnumItem::Ieee1722RawDataStreamConsumerInterface, 0x100000), (EnumItem::Ieee1722RawDataStreamConsumerMapping, 0x100000), (EnumItem::Ieee1722RawDataStreamMapping, 0x100000), (EnumItem::Ieee1722RawDataStreamProducerInterface, 0x100000), (EnumItem::Ieee1722RawDataStreamProducerMapping, 0x100000), (EnumItem::Ieee1722TpAafConnection, 0x180000), (EnumItem::Ieee1722TpAcfConnection, 0x180000), (EnumItem::Ieee1722TpAvConnection, 0x180000), (EnumItem::Ieee1722TpConfig, 0x180000), (EnumItem::Ieee1722TpConnection, 0x180000), (EnumItem::Ieee1722TpCrfConnection, 0x180000), (EnumItem::Ieee1722TpEthernetFrame, 0x1fffc0), (EnumItem::Ieee1722TpIidcConnection, 0x180000), (EnumItem::Ieee1722TpRvfConnection, 0x180000), (EnumItem::Implementation, 0x1fffff), (EnumItem::ImplementationDataType, 0x1fffff), (EnumItem::ImplementationDataTypeElementExtension, 0x1c00), (EnumItem::ImplementationDataTypeExtension, 0x1c00), (EnumItem::InterfaceMappingSet, 0x1fc00), (EnumItem::ImpositionTimeDefinitionGroup, 0x180000), (EnumItem::InterfaceMapping, 0x1e0000), (EnumItem::InterpolationRoutineMappingSet, 0x1fffff), (EnumItem::IpIamRemoteSubject, 0x1f0000), (EnumItem::IpSecConfigProps, 0x1f8000), (EnumItem::IpSecIamRemoteSubject, 0x1f0000), (EnumItem::J1939Cluster, 0x1ffff8), (EnumItem::J1939ControllerApplication, 0x1fff00), (EnumItem::J1939DcmIPdu, 0x1ffff8), (EnumItem::J1939ProtectedIPdu, 0x100000), (EnumItem::J1939TpConfig, 0x1fffff), (EnumItem::KeywordSet, 0x1fffff), (EnumItem::LifeCycleInfoSet, 0x1ffff8), (EnumItem::LifeCycleStateDefinitionGroup, 0x1ffff8), (EnumItem::LinCluster, 0x1fffff), (EnumItem::LinEventTriggeredFrame, 0x1fffff), (EnumItem::LinFrame, 0x1fffff), (EnumItem::LinSporadicFrame, 0x1fffff), (EnumItem::LinTpConfig, 0x1fffff), (EnumItem::LinUnconditionalFrame, 0x1fffff), (EnumItem::LogAndTraceInterface, 0x1e0000), (EnumItem::LogAndTraceMessageCollectionSet, 0x1e0000), (EnumItem::LtMessageCollectionToPortPrototypeMapping, 0x1c0000), (EnumItem::MacLayerRawDataStreamInterface, 0x100000), (EnumItem::MacSecGlobalKayProps, 0x1c0000), (EnumItem::MacSecParticipantSet, 0x1c0000), (EnumItem::Machine, 0x1ffe00), (EnumItem::MachineDesign, 0x1ff000), (EnumItem::MachineTiming, 0x1f0000), (EnumItem::McFunction, 0x1ffff8), (EnumItem::McGroup, 0x1fe000), (EnumItem::ModeDeclarationGroup, 0x1fffff), (EnumItem::ModeDeclarationMappingSet, 0x1ffff8), (EnumItem::ModeSwitchInterface, 0x1fffff), (EnumItem::MultiplexedIPdu, 0x1fffff), (EnumItem::NPdu, 0x1fffff), (EnumItem::NetworkHandlePortMapping, 0x180000), (EnumItem::NetworkManagementPortInterface, 0x180000), (EnumItem::NmConfig, 0x1fffff), (EnumItem::NmHandleToFunctionGroupStateMapping, 0x1e0000), (EnumItem::NmInteractsWithSmMapping, 0x180000), (EnumItem::NmPdu, 0x1fffff), (EnumItem::NvBlockSwComponentType, 0x1fffff), (EnumItem::NvDataInterface, 0x1fffff), (EnumItem::OsTaskProxy, 0x1e0000), (EnumItem::PackageableElement, 0x1fffff), (EnumItem::ParameterInterface, 0x1fffff), (EnumItem::ParameterSwComponentType, 0x1fffff), (EnumItem::Pdu, 0x1fffff), (EnumItem::PdurIPduGroup, 0x1fffff), (EnumItem::PersistencyDeployment, 0x1fe000), (EnumItem::PersistencyFile, 0xfc00), (EnumItem::PersistencyFileArray, 0xfc00), (EnumItem::PersistencyFileProxyInterface, 0xfc00), (EnumItem::PersistencyFileProxyToFileMapping, 0xc00), (EnumItem::PersistencyDeploymentElementToCryptoKeySlotMapping, 0x1f0000), (EnumItem::PersistencyDeploymentToCryptoKeySlotMapping, 0x1f0000), (EnumItem::PersistencyDeploymentToDltLogChannelMapping, 0x10000), (EnumItem::PersistencyDeploymentToDltLogSinkMapping, 0x1e0000), (EnumItem::PersistencyFileStorage, 0x1f0000), (EnumItem::PersistencyFileStorageInterface, 0x1f0000), (EnumItem::PersistencyInterface, 0x1ffc00), (EnumItem::PersistencyKeyValueDatabase, 0xfc00), (EnumItem::PersistencyKeyValueDatabaseInterface, 0xfc00), (EnumItem::PersistencyPortPrototypeToFileArrayMapping, 0xf000), (EnumItem::PersistencyPortPrototypeToKeyValueDatabaseMapping, 0xfc00), (EnumItem::PersistencyKeyValueStorage, 0x1f0000), (EnumItem::PersistencyKeyValueStorageInterface, 0x1f0000), (EnumItem::PersistencyPortPrototypeToDeploymentMapping, 0x1f0000), (EnumItem::PersistencyPortPrototypeToFileStorageMapping, 0x1f0000), (EnumItem::PersistencyPortPrototypeToKeyValueStorageMapping, 0x1f0000), (EnumItem::PhmAbstractRecoveryNotificationInterface, 0x1f0000), (EnumItem::PhmContributionToMachineMapping, 0x1ffc00), (EnumItem::PhmHealthChannelInterface, 0x1ff000), (EnumItem::PhmHealthChannelRecoveryNotificationInterface, 0x1f0000), (EnumItem::PhmRecoveryActionInterface, 0x1f8000), (EnumItem::PhmSupervisedEntityInterface, 0x1ff000), (EnumItem::PhmSupervisionRecoveryNotificationInterface, 0x1f0000), (EnumItem::PhysicalDimension, 0x1fffff), (EnumItem::PortBlueprint, 0x1), (EnumItem::PhysicalDimensionMappingSet, 0x1ffff8), (EnumItem::PlatformHealthManagementContribution, 0x1ffc00), (EnumItem::PlatformHealthManagementInterface, 0x1ff000), (EnumItem::PlatformModuleEndpointConfiguration, 0x1f0000), (EnumItem::PlatformModuleEthernetEndpointConfiguration, 0x1f0000), (EnumItem::PortInterface, 0x1fffff), (EnumItem::PortInterfaceMappingSet, 0x1fffff), (EnumItem::PortInterfaceToDataTypeMapping, 0x1ffe00), (EnumItem::PortPrototypeBlueprint, 0x1ffffe), (EnumItem::PostBuildVariantCriterion, 0x1fffff), (EnumItem::PostBuildVariantCriterionValueSet, 0x1fffff), (EnumItem::PredefinedVariant, 0x1fffff), (EnumItem::Process, 0x1ffe00), (EnumItem::ProcessDesign, 0x1ff000), (EnumItem::ProcessDesignToMachineDesignMappingSet, 0x1c000), (EnumItem::ProcessDesignToMachineDesignMapping, 0x1e0000), (EnumItem::ProcessExecutionError, 0x1f0000), (EnumItem::ProcessToMachineMappingSet, 0x1ffc00), (EnumItem::ProvidedApServiceInstance, 0x1ffe00), (EnumItem::ProvidedDdsServiceInstance, 0x1000), (EnumItem::ProvidedServiceInstanceToSwClusterDesignPPortPrototypeMapping, 0x1f8000), (EnumItem::ProvidedSomeipServiceInstance, 0x1ffe00), (EnumItem::ProvidedUserDefinedServiceInstance, 0x1ffe00), (EnumItem::RapidPrototypingScenario, 0x1ffff8), (EnumItem::RawDataStreamClientInterface, 0x1f0000), (EnumItem::RawDataStreamDeployment, 0x1f8000), (EnumItem::RawDataStreamGrant, 0x1f8000), (EnumItem::RawDataStreamGrantDesign, 0x1f8000), (EnumItem::RawDataStreamInterface, 0x8000), (EnumItem::RawDataStreamMapping, 0x1f8000), (EnumItem::RecoveryViaApplicationActionToClientServerOperationMapping, 0x8000), (EnumItem::RawDataStreamServerInterface, 0x1f0000), (EnumItem::RecoveryNotification, 0x1c0000), (EnumItem::RecoveryNotificationToPPortPrototypeMapping, 0x1f0000), (EnumItem::RequiredApServiceInstance, 0x1ffe00), (EnumItem::RequiredDdsServiceInstance, 0x1000), (EnumItem::RequiredServiceInstanceToSwClusterDesignRPortPrototypeMapping, 0x1f8000), (EnumItem::RequiredSomeipServiceInstance, 0x1ffe00), (EnumItem::RequiredUserDefinedServiceInstance, 0x1ffe00), (EnumItem::RestHttpPortPrototypeMapping, 0x1fc00), (EnumItem::RestServiceInterface, 0x1fc00), (EnumItem::SdgDef, 0x1fff00), (EnumItem::SecureComPropsSet, 0x1fc00), (EnumItem::SecOcSecureComProps, 0x1e0000), (EnumItem::SecureComProps, 0x1e0000), (EnumItem::SecureCommunicationPropsSet, 0x1fff00), (EnumItem::SecuredIPdu, 0x1fffc0), (EnumItem::SecurityEventContextDataDefinition, 0x100000), (EnumItem::SecurityEventContextMapping, 0x1f0000), (EnumItem::SecurityEventContextMappingApplication, 0x1f0000), (EnumItem::SecurityEventContextMappingBswModule, 0x1f0000), (EnumItem::SecurityEventContextMappingCommConnector, 0x1f0000), (EnumItem::SecurityEventContextMappingFunctionalCluster, 0x1f0000), (EnumItem::SecurityEventDefinition, 0x1f0000), (EnumItem::SecurityEventFilterChain, 0x1f0000), (EnumItem::SecurityEventMapping, 0x1f0000), (EnumItem::SecurityEventReportInstanceDefinition, 0x100000), (EnumItem::SecurityEventReportInstanceValue, 0x100000), (EnumItem::SecurityEventReportInterface, 0x1f0000), (EnumItem::SecurityEventReportToSecurityEventDefinitionMapping, 0x1f0000), (EnumItem::SenderReceiverInterface, 0x1fffff), (EnumItem::SensorActuatorSwComponentType, 0x1fffff), (EnumItem::SerializationTechnology, 0x1ffff8), (EnumItem::ServiceInstanceToApplicationEndpointMapping, 0x200), (EnumItem::ServiceInstanceCollectionSet, 0x1f8000), (EnumItem::ServiceInstanceToMachineMapping, 0x1ffe00), (EnumItem::ServiceInstanceToPortPrototypeMapping, 0x1ffc00), (EnumItem::ServiceInstanceToSignalMappingSet, 0x1fc00), (EnumItem::ServiceInstanceToSignalMapping, 0x1e0000), (EnumItem::ServiceInstanceToSwClusterDesignPortPrototypeMapping, 0x1f8000), (EnumItem::ServiceInterface, 0x1ffe00), (EnumItem::ServiceInterfaceDeployment, 0x1ffe00), (EnumItem::ServiceInterfaceMappingSet, 0x1fe00), (EnumItem::ServiceInterfaceElementMapping, 0x1e0000), (EnumItem::ServiceInterfaceEventMapping, 0x1e0000), (EnumItem::ServiceInterfaceFieldMapping, 0x1e0000), (EnumItem::ServiceInterfaceMethodMapping, 0x1e0000), (EnumItem::ServiceInterfacePedigree, 0x1f8000), (EnumItem::ServiceInterfaceTriggerMapping, 0x1e0000), (EnumItem::ServiceProxySwComponentType, 0x1fffff), (EnumItem::ServiceSwComponentType, 0x1fffff), (EnumItem::SignalBasedServiceInterfaceDeployment, 0x7c00), (EnumItem::ServiceTiming, 0x1f0000), (EnumItem::SignalServiceTranslationPropsSet, 0x1f8000), (EnumItem::SmInteractsWithNmMapping, 0x180000), (EnumItem::SoAdRoutingGroup, 0x1ffff8), (EnumItem::SocketConnectionIpduIdentifierSet, 0x1f8000), (EnumItem::SoftwareActivationDependency, 0x8000), (EnumItem::SoftwareCluster, 0x1ffc00), (EnumItem::SoftwareClusterRequirement, 0xc00), (EnumItem::SoftwareClusterDesign, 0x1ff000), (EnumItem::SoftwareClusterDiagnosticDeploymentProps, 0x1c0000), (EnumItem::SoftwarePackage, 0x1fc000), (EnumItem::SomeipDataPrototypeTransformationProps, 0x1ffe00), (EnumItem::SomeipRemoteMulticastConfig, 0x1c0000), (EnumItem::SomeipRemoteUnicastConfig, 0x1c0000), (EnumItem::SomeipSdClientEventGroupTimingConfig, 0x1fe000), (EnumItem::SomeipSdClientServiceInstanceConfig, 0x1fe000), (EnumItem::SomeipSdServerEventGroupTimingConfig, 0x1fe000), (EnumItem::SomeipSdServerServiceInstanceConfig, 0x1fe000), (EnumItem::SomeipServiceInstanceToMachineMapping, 0x1ffe00), (EnumItem::SomeipServiceInterface, 0x200), (EnumItem::SomeipServiceInterfaceDeployment, 0x1ffc00), (EnumItem::SomeipTpConfig, 0x1fff00), (EnumItem::StartupConfig, 0x1e0000), (EnumItem::StartupConfigSet, 0x3fe00), (EnumItem::StateClientInterface, 0x100000), (EnumItem::StateDependentFirewall, 0x1c0000), (EnumItem::StateManagemenPhmErrorInterface, 0xc0000), (EnumItem::StateManagementDiagTriggerInterface, 0x1c0000), (EnumItem::StateManagementEmErrorInterface, 0x1c0000), (EnumItem::StateManagementErrorInterface, 0x1c0000), (EnumItem::StateManagementFunctionGroupSwitchNotificationInterface, 0x1c0000), (EnumItem::StateManagementNotificationInterface, 0x1c0000), (EnumItem::StateManagementPhmErrorInterface, 0x100000), (EnumItem::StateManagementPortInterface, 0x1c0000), (EnumItem::StateManagementRequestInterface, 0x1c0000), (EnumItem::StateManagementTriggerInterface, 0x1c0000), (EnumItem::StdCppImplementationDataType, 0x1fe000), (EnumItem::SwAddrMethod, 0x1fffff), (EnumItem::SwAxisType, 0x1fffff), (EnumItem::SwBaseType, 0x1fffff), (EnumItem::SwClassInstance, 0x1), (EnumItem::SwCodeSyntax, 0x1), (EnumItem::SwComponentMappingConstraints, 0x1e0000), (EnumItem::SwComponentType, 0x1fffff), (EnumItem::SwMcBaseType, 0x1), (EnumItem::SwRecordLayout, 0x1fffff), (EnumItem::SwSystemconst, 0x1fffff), (EnumItem::SwSystemconstantValueSet, 0x1fffff), (EnumItem::SwcBswMapping, 0x1fffff), (EnumItem::SwcImplementation, 0x1fffff), (EnumItem::SwcTiming, 0x1fffff), (EnumItem::SynchronizedTimeBaseConsumerInterface, 0x1f0000), (EnumItem::SynchronizedTimeBaseProviderInterface, 0x1f0000), (EnumItem::System, 0x1fffff), (EnumItem::SystemSignal, 0x1fffff), (EnumItem::SystemSignalGroup, 0x1fffff), (EnumItem::SystemTiming, 0x1fffff), (EnumItem::TcpOptionFilterSet, 0x1fff00), (EnumItem::TdCpSoftwareClusterMappingSet, 0x1f0000), (EnumItem::TimeBaseProviderToPersistencyMapping, 0x1f0000), (EnumItem::TimeSyncPortPrototypeToTimeBaseMapping, 0x1ff000), (EnumItem::TimeSynchronizationInterface, 0xf000), (EnumItem::TimeSynchronizationMasterInterface, 0xf000), (EnumItem::TimeSynchronizationPureLocalInterface, 0xf000), (EnumItem::TimeSynchronizationSlaveInterface, 0xf000), (EnumItem::TimingExtension, 0x1fffff), (EnumItem::TlsConnectionGroup, 0x1e0000), (EnumItem::TlsIamRemoteSubject, 0x1f0000), (EnumItem::TlsSecureComProps, 0x1e0000), (EnumItem::TlvDataIdDefinitionSet, 0x1f8000), (EnumItem::TpConfig, 0x1fffff), (EnumItem::TransformationPropsSet, 0x1fff00), (EnumItem::TransformationPropsToServiceInterfaceMappingSet, 0x200), (EnumItem::TransportLayerIndependentIdCollectionSet, 0x200), (EnumItem::TransformationPropsToServiceInterfaceElementMappingSet, 0x1fc00), (EnumItem::TransformationPropsToServiceInterfaceElementMapping, 0x1e0000), (EnumItem::TriggerInterface, 0x1fffff), (EnumItem::TtcanCluster, 0x1fffff), (EnumItem::UcmToTimeBaseResourceMapping, 0x1c0000), (EnumItem::Unit, 0x1fffff), (EnumItem::UnitGroup, 0x1ffffe), (EnumItem::UploadableDeploymentElement, 0x180000), (EnumItem::UploadableDesignElement, 0x180000), (EnumItem::UploadableExclusivePackageElement, 0x1f0000), (EnumItem::UploadablePackageElement, 0x1ffc00), (EnumItem::UserDefinedCluster, 0x1ffff8), (EnumItem::UserDefinedEthernetFrame, 0x1fffc0), (EnumItem::UserDefinedIPdu, 0x1ffffc), (EnumItem::UserDefinedPdu, 0x1ffffc), (EnumItem::UserDefinedServiceInstanceToMachineMapping, 0x1ffe00), (EnumItem::UserDefinedServiceInterfaceDeployment, 0x1ffe00), (EnumItem::VehiclePackage, 0x1f8000), (EnumItem::VfbTiming, 0x1fffff), (EnumItem::ViewMapSet, 0x1ffff8), (EnumItem::XcpPdu, 0x1fffff)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::Collection, 0x1ffff8)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::ComEventGrantDesign, 0x1fc000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::ComFieldGrantDesign, 0x1fc000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::ComFindServiceGrantDesign, 0x1fc000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::ComMethodGrantDesign, 0x1fc000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::ComOfferServiceGrantDesign, 0x1fc000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::ComTriggerGrantDesign, 0x180000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::CommandLineLongForm, 0xfe00), (EnumItem::CommandLineShortForm, 0xfe00), (EnumItem::CommandLineSimpleForm, 0xfe00)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::AbstractCanCluster, 0x1fffff), (EnumItem::CanCluster, 0x1fffff), (EnumItem::CommunicationCluster, 0x1fffff), (EnumItem::EthernetCluster, 0x1fffff), (EnumItem::FlexrayCluster, 0x1fffff), (EnumItem::J1939Cluster, 0x1ffff8), (EnumItem::LinCluster, 0x1fffff), (EnumItem::TtcanCluster, 0x1fffff), (EnumItem::UserDefinedCluster, 0x1ffff8)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::AbstractCanCommunicationConnector, 0x1fffff), (EnumItem::CanCommunicationConnector, 0x1fffff), (EnumItem::CommunicationConnector, 0x1fffff), (EnumItem::EthernetCommunicationConnector, 0x1fffff), (EnumItem::FlexrayCommunicationConnector, 0x1fffff), (EnumItem::LinCommunicationConnector, 0x1fffff), (EnumItem::TtcanCommunicationConnector, 0x1fffff), (EnumItem::UserDefinedCommunicationConnector, 0x1ffff8)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::AbstractCanCommunicationController, 0x1fffff), (EnumItem::CanCommunicationController, 0x1fffff), (EnumItem::CommunicationController, 0x1fffff), (EnumItem::EthernetCommunicationController, 0x1fffff), (EnumItem::FlexrayCommunicationController, 0x1fffff), (EnumItem::LinCommunicationController, 0x1fffff), (EnumItem::LinMaster, 0x1fffff), (EnumItem::LinSlave, 0x1fffff), (EnumItem::TtcanCommunicationController, 0x1fffff), (EnumItem::UserDefinedCommunicationController, 0x1ffff8)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::In, 0x1fffff), (EnumItem::Out, 0x1fffff)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::CompositionSwComponentType, 0x1fffff)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::CompuMethod, 0x1fffff)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::ConstantSpecification, 0x1fffff)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::ConstantSpecificationMappingSet, 0x1fffff)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::ConsumedEventGroup, 0x1ffff8)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::ConsumedProvidedServiceInstanceGroup, 0x1f8000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::ConsumedServiceInstance, 0x1f8000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::LastIsBest, 0x1fffc0), (EnumItem::Queued, 0x1fffc0)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::LongHeader, 0x1fffc0), (EnumItem::NoHeader, 0x1ff800), (EnumItem::ShortHeader, 0x1fffc0)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::DefaultTrigger, 0x1fffc0), (EnumItem::FirstContainedTrigger, 0x1fffc0)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::Hub, 0x1ffff8), (EnumItem::Router, 0x1ffff8), (EnumItem::Switch, 0x1ffff8)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::CouplingPort, 0x1ffff8)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::CouplingPortAsynchronousTrafficShaper, 0x180000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::CouplingPortFifo, 0x1fffc0)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::BlockSource, 0x1fff00), (EnumItem::DropFrame, 0x1fff00)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::HostPort, 0x1fff00), (EnumItem::StandardPort, 0x1fff00), (EnumItem::UpLinkPort, 0x1fff00)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::CouplingPortScheduler, 0x1fffc0)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::CouplingPortFifo, 0x1fffc0), (EnumItem::CouplingPortScheduler, 0x1fffc0), (EnumItem::CouplingPortShaper, 0x1fffc0), (EnumItem::CouplingPortStructuralElement, 0x1fffc0)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::CpSoftwareCluster, 0x1f0000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::CpSoftwareClusterCommunicationResource, 0x1f0000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::CpSoftwareClusterCommunicationResource, 0x1f0000), (EnumItem::CpSoftwareClusterResource, 0x1f0000), (EnumItem::CpSoftwareClusterServiceResource, 0x1f0000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::CpSoftwareClusterServiceResource, 0x1f0000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::CppImplementationDataType, 0x1ff000), (EnumItem::CustomCppImplementationDataType, 0x1fe000), (EnumItem::StdCppImplementationDataType, 0x1fe000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::CppImplementationDataType, 0x1fe000), (EnumItem::CppImplementationDataTypeContextTarget, 0x1fe000), (EnumItem::CppImplementationDataTypeElement, 0x1fe000), (EnumItem::CustomCppImplementationDataType, 0x1fe000), (EnumItem::StdCppImplementationDataType, 0x1fe000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::CppImplementationDataTypeElement, 0x1e000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::CryptoCertificate, 0x1f0000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::Ecc, 0x1fe000), (EnumItem::Rsa, 0x1fe000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::Cvc, 0x1fe000), (EnumItem::X509, 0x1fe000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::CryptoEllipticCurveProps, 0x1e0000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::CryptoJob, 0x1c00)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::CryptoKeySlot, 0x1f9c00)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::CryptoKeySlotDesign, 0x100000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::Application, 0x1f0000), (EnumItem::Machine, 0x1f0000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::CryptoKeySlotUsageDesign, 0x100000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::Encryption, 0x1f0000), (EnumItem::Verification, 0x1f0000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::CryptoKeySlotUserDesign, 0x100000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::CryptoNeed, 0x1c00)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::PrivateKey, 0x1f0000), (EnumItem::PublicKey, 0x1f0000), (EnumItem::SecretSeed, 0x1f0000), (EnumItem::Signature, 0x1f0000), (EnumItem::SymmetricKey, 0x1f0000), (EnumItem::Undefined, 0x1f0000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::CryptoPrimitive, 0x1c00)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::CryptoProvider, 0x1f0000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::CryptoServiceCertificate, 0x1fe000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::CryptoServiceKey, 0x1fe000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::KeyDerivation, 0x1fe000), (EnumItem::KeyStorage, 0x1fe000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::CryptoServicePrimitive, 0x1fe000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::CryptoServiceQueue, 0x1f8000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::CryptoSignatureScheme, 0x1e0000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::ApplicationOnly, 0x1fff80), (EnumItem::Autonomous, 0x1fff80)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::CycleRepetition1, 0x1fffff), (EnumItem::CycleRepetition10, 0x1fffff), (EnumItem::CycleRepetition16, 0x1fffff), (EnumItem::CycleRepetition2, 0x1fffff), (EnumItem::CycleRepetition20, 0x1fffff), (EnumItem::CycleRepetition32, 0x1fffff), (EnumItem::CycleRepetition4, 0x1fffff), (EnumItem::CycleRepetition40, 0x1fffff), (EnumItem::CycleRepetition5, 0x1fffff), (EnumItem::CycleRepetition50, 0x1fffff), (EnumItem::CycleRepetition64, 0x1fffff), (EnumItem::CycleRepetition8, 0x1fffff)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::ConsistencyMechanismRequired, 0x1c0000), (EnumItem::NoConsistencyMechanism, 0x1c0000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::DataConstr, 0x1fffff)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::Agreed, 0x1fff00), (EnumItem::Consumer, 0x1fff00), (EnumItem::Producer, 0x1fff00)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::Always, 0x1fffff), (EnumItem::MaskedNewDiffersMaskedOld, 0x1fffff), (EnumItem::MaskedNewDiffersX, 0x1fffff), (EnumItem::MaskedNewEqualsMaskedOld, 0x2), (EnumItem::MaskedNewEqualsX, 0x1ffffe), (EnumItem::Never, 0x1fffff), (EnumItem::MasekdNewEqualsX, 0x1), (EnumItem::NewIsDifferent, 0x3), (EnumItem::MasekdNewEqualsMaskedOld, 0x1), (EnumItem::NewIsEqual, 0x3), (EnumItem::NewIsGreater, 0x3), (EnumItem::NewIsGreaterOrEqual, 0x3), (EnumItem::NewIsLess, 0x3), (EnumItem::NewIsLessOrEqual, 0x3), (EnumItem::NewIsOutside, 0x1fffff), (EnumItem::NewIsWithin, 0x1fffff), (EnumItem::OneEveryN, 0x1fffff)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::AbstractClassTailoring, 0x1fff00), (EnumItem::AggregationTailoring, 0x1fff00), (EnumItem::AttributeTailoring, 0x1fff00), (EnumItem::ConcreteClassTailoring, 0x1fff00), (EnumItem::ConstraintTailoring, 0x1fff00), (EnumItem::DataFormatElementReference, 0x1fff00), (EnumItem::DataFormatElementScope, 0x1fff00), (EnumItem::PrimitiveAttributeTailoring, 0x1fff00), (EnumItem::ReferenceTailoring, 0x1fff00), (EnumItem::SdgTailoring, 0x1fff00)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::All16Bit, 0x1fffc0), (EnumItem::Alternating8Bit, 0x1fffc0), (EnumItem::Lower12Bit, 0x1fffc0), (EnumItem::Lower8Bit, 0x1fffc0)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::Max, 0x1fffff), (EnumItem::Min, 0x1fffff), (EnumItem::None, 0x1fffff)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::ApplicationArrayElement, 0x1fffff), (EnumItem::ApplicationAssocMapElement, 0x1ffe00), (EnumItem::ApplicationCompositeElementDataPrototype, 0x1fffff), (EnumItem::ApplicationRecordElement, 0x1fffff), (EnumItem::ArgumentDataPrototype, 0x1fffff), (EnumItem::AutosarDataPrototype, 0x1fffff), (EnumItem::DataPrototype, 0x1fffff), (EnumItem::Field, 0x1ffe00), (EnumItem::ParameterDataPrototype, 0x1fffff), (EnumItem::PersistencyDataElement, 0x1ff000), (EnumItem::VariableDataPrototype, 0x1fffff)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::DataPrototypeGroup, 0x1ffff8)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::DataTransformation, 0x1fffc0)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::NoTransformerErrorHandling, 0x1fffc0), (EnumItem::TransformerErrorHandling, 0x1fffc0)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::AsymmetricFromByteArray, 0x1fff00), (EnumItem::AsymmetricToByteArray, 0x1fff00), (EnumItem::Symmetric, 0x1fff00)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::NoTransformerStatusForwarding, 0x1f8000), (EnumItem::TransformerStatusForwarding, 0x1f8000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::DataTypeMappingSet, 0x1fffff)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::DdsService, 0x180000), (EnumItem::DdsSignal, 0x180000), (EnumItem::Legacy, 0x1fffff), (EnumItem::NetworkRepresentationFromComSpec, 0x1fffff), (EnumItem::Override, 0x1fffff), (EnumItem::PortInterfaceDefinition, 0x1fffff), (EnumItem::TransformingISignal, 0x1fff80)]},
    CharacterDataSpec::Pattern{check_fn: validate_regex_9, regex: r"([0-9]{4}-[0-9]{2}-[0-9]{2})(T[0-9]{2}:[0-9]{2}:[0-9]{2}(Z|([+\-][0-9]{2}:[0-9]{2})))?", max_length: None},
    CharacterDataSpec::Enum{items: &[(EnumItem::DdsCpPartition, 0x180000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::DdsCpQosProfile, 0x180000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::DdsCpTopic, 0x180000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::ByReceptionTimestamp, 0x180000), (EnumItem::BySourceTimestamp, 0x180000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::Persistent, 0x180000), (EnumItem::Transient, 0x180000), (EnumItem::TransientLocal, 0x180000), (EnumItem::Volatile, 0x180000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::KeepAll, 0x180000), (EnumItem::KeepLast, 0x180000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::KeepAll, 0x180000), (EnumItem::KeepLast, 0x180000)]},
    CharacterDataSpec::Pattern{check_fn: validate_regex_10, regex: r"[a-zA-Z][a-zA-Z0-9-]*", max_length: None},
    CharacterDataSpec::Enum{items: &[(EnumItem::Automatic, 0x180000), (EnumItem::ManualByParticipant, 0x180000), (EnumItem::ManualByTopic, 0x180000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::Exclusive, 0x180000), (EnumItem::Shared, 0x180000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::EncryptAndSign, 0x1e0000), (EnumItem::EncryptAndSignWithOriginAuthentication, 0x1e0000), (EnumItem::None, 0x1e0000), (EnumItem::Sign, 0x1e0000), (EnumItem::SignWithOriginAuthentication, 0x1e0000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::BestEffort, 0x180000), (EnumItem::Reliable, 0x180000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::DdsRpcServiceDeployment, 0xe000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::DdsSecureComProps, 0x1e0000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::DdsSecureGovernance, 0x1e0000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::DomainParticipantUserDataQos, 0x1e0000), (EnumItem::Topic, 0x1e0000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::InstanceId, 0x1e0000), (EnumItem::Partition, 0x1e0000), (EnumItem::TopicPrefix, 0x1e0000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::DdsTopicAccessRule, 0x1e0000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::DefaultIfRevisionUpdate, 0x1fff00), (EnumItem::DefaultIfUndefined, 0x1fff00), (EnumItem::NoDefault, 0x1fff00)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::DependencyOnArtifact, 0x1fffff)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::Build, 0x1fffff), (EnumItem::Codegeneration, 0x1fffff), (EnumItem::Compile, 0x1fffff), (EnumItem::Execute, 0x1fffff), (EnumItem::Link, 0x1fffff)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::DeterministicClient, 0x3e000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::DeterministicSyncMaster, 0x40000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::DiagRequest, 0x1fffff), (EnumItem::DiagResponse, 0x1fffff)]},
    CharacterDataSpec::Pattern{check_fn: validate_regex_11, regex: r"[0-9a-zA-Z_\-]+", max_length: None},
    CharacterDataSpec::Enum{items: &[(EnumItem::DiagnosticAbstractDataIdentifier, 0x1fff00), (EnumItem::DiagnosticDataIdentifier, 0x1fffc0), (EnumItem::DiagnosticDynamicDataIdentifier, 0x1fff00)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::DiagnosticAccessPermission, 0x1fffc0)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::AccesPerrmissionServiceClass, 0x1fffc0), (EnumItem::AccessPermissionInstanceOverridesClass, 0x1fffc0), (EnumItem::AccessPermissionServiceClass, 0x1fff80), (EnumItem::AccessPermissionServiceInstance, 0x1fffc0)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::DiagnosticAging, 0x1fffc0)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::AfterSales, 0x1fffff), (EnumItem::Aftermaket, 0x1fffff), (EnumItem::Aftermarket, 0x1ffffc), (EnumItem::Development, 0x1fffff), (EnumItem::Manufacturing, 0x1fffff), (EnumItem::Supplier, 0x1fffff)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::DiagnosticAuthRole, 0x1e0000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::DiagnosticAuthTransmitCertificateEvaluation, 0x180000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::DiagnosticAuthTransmitCertificate, 0x180000), (EnumItem::DiagnosticAuthentication, 0x1e0000), (EnumItem::DiagnosticAuthenticationConfiguration, 0x1e0000), (EnumItem::DiagnosticDeAuthentication, 0x1e0000), (EnumItem::DiagnosticProofOfOwnership, 0x1e0000), (EnumItem::DiagnosticVerifyCertificateBidirectional, 0x1e0000), (EnumItem::DiagnosticVerifyCertificateUnidirectional, 0x1e0000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::DiagnosticAuthenticationClass, 0x1e0000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::DiagnosticClearCondition, 0x1fe000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::DiagnosticClearConditionGroup, 0x1fe000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::DiagnosticClearDiagnosticInformationClass, 0x1fffc0)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::AllSupportedDtcs, 0x1fffc0), (EnumItem::ClearAllDtcs, 0x1fffc0)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::Finish, 0x1c0000), (EnumItem::Start, 0x1c0000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::NoStatusByteChange, 0x1f0000), (EnumItem::OnlyThisCycleAndReadiness, 0x1f0000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::NoStatusByteChange, 0x1fffc0), (EnumItem::OnlyThisCycleAndReadiness, 0x1fffc0)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::DiagnosticClearResetEmissionRelatedInfoClass, 0x1fff00)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::DiagnosticComControlClass, 0x1fffc0)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::AbstractDoIpPortMapping, 0x100000), (EnumItem::CpSwClusterResourceToDiagDataElemMapping, 0x1e0000), (EnumItem::CpSwClusterResourceToDiagFunctionIdMapping, 0x1e0000), (EnumItem::CpSwClusterToDiagEventMapping, 0x1e0000), (EnumItem::CpSwClusterToDiagRoutineSubfunctionMapping, 0x1e0000), (EnumItem::DiagnosticAbstractAliasEvent, 0x1fff00), (EnumItem::DiagnosticAbstractDataIdentifier, 0x1fffc0), (EnumItem::DiagnosticAccessPermission, 0x1fffc0), (EnumItem::DiagnosticAging, 0x1fffc0), (EnumItem::DiagnosticAuthRole, 0x1e0000), (EnumItem::DiagnosticAuthTransmitCertificate, 0x180000), (EnumItem::DiagnosticAuthTransmitCertificateMapping, 0x180000), (EnumItem::DiagnosticAuthentication, 0x1e0000), (EnumItem::DiagnosticAuthenticationClass, 0x1e0000), (EnumItem::DiagnosticAuthenticationConfiguration, 0x1e0000), (EnumItem::DiagnosticAuthenticationPortMapping, 0x1e0000), (EnumItem::DiagnosticClearCondition, 0x1fe000), (EnumItem::DiagnosticClearConditionGroup, 0x1fe000), (EnumItem::DiagnosticClearConditionPortMapping, 0x1fc000), (EnumItem::DiagnosticClearDiagnosticInformation, 0x1fffc0), (EnumItem::DiagnosticClearDiagnosticInformationClass, 0x1fffc0), (EnumItem::DiagnosticClearResetEmissionRelatedInfo, 0x1fff00), (EnumItem::DiagnosticClearResetEmissionRelatedInfoClass, 0x1fff00), (EnumItem::DiagnosticComControl, 0x1fffc0), (EnumItem::DiagnosticComControlClass, 0x1fffc0), (EnumItem::DiagnosticCommonElement, 0x1fffc0), (EnumItem::DiagnosticCondition, 0x1fffc0), (EnumItem::DiagnosticConditionGroup, 0x1fffc0), (EnumItem::DiagnosticControlDtcSetting, 0x1fffc0), (EnumItem::DiagnosticControlDtcSettingClass, 0x1fffc0), (EnumItem::DiagnosticCustomServiceClass, 0x1fffc0), (EnumItem::DiagnosticCustomServiceInstance, 0x1fe000), (EnumItem::DiagnosticDataByIdentifier, 0x1fffc0), (EnumItem::DiagnosticDataIdentifier, 0x1fffc0), (EnumItem::DiagnosticDataIdentifierSet, 0x1fffc0), (EnumItem::DiagnosticDataPortMapping, 0x1e0000), (EnumItem::DiagnosticDataTransfer, 0x1fffc0), (EnumItem::DiagnosticDataTransferClass, 0x1fffc0), (EnumItem::DiagnosticDeAuthentication, 0x1e0000), (EnumItem::DiagnosticDemProvidedDataMapping, 0x1fffc0), (EnumItem::DiagnosticDoIpActivationLinePortMapping, 0x100000), (EnumItem::DiagnosticDoIpEntityIdentificationPortMapping, 0x100000), (EnumItem::DiagnosticDoIpGroupIdentificationPortMapping, 0x100000), (EnumItem::DiagnosticDoIpPowerModePortMapping, 0x100000), (EnumItem::DiagnosticDoIpTriggerVehicleAnnouncementPortMapping, 0x100000), (EnumItem::DiagnosticDynamicDataIdentifier, 0x1fffc0), (EnumItem::DiagnosticDynamicallyDefineDataIdentifier, 0x1fffc0), (EnumItem::DiagnosticDynamicallyDefineDataIdentifierClass, 0x1fffc0), (EnumItem::DiagnosticEcuInstanceProps, 0x1fff00), (EnumItem::DiagnosticEcuReset, 0x1fffc0), (EnumItem::DiagnosticEcuResetClass, 0x1fffc0), (EnumItem::DiagnosticEnableCondition, 0x1fffc0), (EnumItem::DiagnosticEnableConditionGroup, 0x1fffc0), (EnumItem::DiagnosticEnableConditionPortMapping, 0x1fffc0), (EnumItem::DiagnosticEnvironmentalCondition, 0x1fff00), (EnumItem::DiagnosticEvent, 0x1fffc0), (EnumItem::DiagnosticEventPortMapping, 0x1fffc0), (EnumItem::DiagnosticEventToDebounceAlgorithmMapping, 0x1fffc0), (EnumItem::DiagnosticEventToEnableConditionGroupMapping, 0x1fffc0), (EnumItem::DiagnosticEventToOperationCycleMapping, 0x1fffc0), (EnumItem::DiagnosticEventToSecurityEventMapping, 0x1f0000), (EnumItem::DiagnosticEventToStorageConditionGroupMapping, 0x1fffc0), (EnumItem::DiagnosticEventToTroubleCodeJ1939Mapping, 0x1fe000), (EnumItem::DiagnosticEventToTroubleCodeUdsMapping, 0x1fffc0), (EnumItem::DiagnosticExtendedDataRecord, 0x1fffc0), (EnumItem::DiagnosticExternalAuthenticationPortMapping, 0x1e0000), (EnumItem::DiagnosticFimAliasEvent, 0x1fff00), (EnumItem::DiagnosticFimAliasEventGroup, 0x1fff00), (EnumItem::DiagnosticFimAliasEventGroupMapping, 0x1fff00), (EnumItem::DiagnosticFimAliasEventMapping, 0x1fff00), (EnumItem::DiagnosticFimEventGroup, 0x1fff00), (EnumItem::DiagnosticFimFunctionMapping, 0x1fff00), (EnumItem::DiagnosticFreezeFrame, 0x1fffc0), (EnumItem::DiagnosticFunctionIdentifier, 0x1fff00), (EnumItem::DiagnosticFunctionIdentifierInhibit, 0x1fff00), (EnumItem::DiagnosticGenericUdsPortMapping, 0xc000), (EnumItem::DiagnosticIndicator, 0x1fffc0), (EnumItem::DiagnosticIndicatorPortMapping, 0x1fc000), (EnumItem::DiagnosticInfoType, 0x1fff00), (EnumItem::DiagnosticInhibitSourceEventMapping, 0x1fff00), (EnumItem::DiagnosticIoControl, 0x1fffc0), (EnumItem::DiagnosticIoControlClass, 0x1fffc0), (EnumItem::DiagnosticIumpr, 0x1fff00), (EnumItem::DiagnosticIumprDenominatorGroup, 0x1fff00), (EnumItem::DiagnosticIumprGroup, 0x1fff00), (EnumItem::DiagnosticIumprToFunctionIdentifierMapping, 0x1e0000), (EnumItem::DiagnosticJ1939ExpandedFreezeFrame, 0x1fff00), (EnumItem::DiagnosticJ1939FreezeFrame, 0x1fff00), (EnumItem::DiagnosticJ1939Node, 0x1fff00), (EnumItem::DiagnosticJ1939Spn, 0x1fff00), (EnumItem::DiagnosticJ1939SpnMapping, 0x1fff00), (EnumItem::DiagnosticJ1939SwMapping, 0x1fff00), (EnumItem::DiagnosticMapping, 0x1fffc0), (EnumItem::DiagnosticMasterToSlaveEventMapping, 0x1f0000), (EnumItem::DiagnosticMeasurementIdentifier, 0x1fff00), (EnumItem::DiagnosticMemoryAddressableRangeAccess, 0x1fffc0), (EnumItem::DiagnosticMemoryByAddress, 0x1fffc0), (EnumItem::DiagnosticMemoryDestination, 0x1fffc0), (EnumItem::DiagnosticMemoryDestinationMirror, 0x1fffc0), (EnumItem::DiagnosticMemoryDestinationPortMapping, 0x1fc000), (EnumItem::DiagnosticMemoryDestinationPrimary, 0x1fffc0), (EnumItem::DiagnosticMemoryDestinationUserDefined, 0x1fffc0), (EnumItem::DiagnosticMemoryIdentifier, 0x1fffc0), (EnumItem::DiagnosticMonitorPortMapping, 0x1e0000), (EnumItem::DiagnosticMultipleConditionPortMapping, 0x180000), (EnumItem::DiagnosticMultipleEventPortMapping, 0x180000), (EnumItem::DiagnosticMultipleMonitorPortMapping, 0x180000), (EnumItem::DiagnosticMultipleResourcePortMapping, 0x180000), (EnumItem::DiagnosticOperationCycle, 0x1fffc0), (EnumItem::DiagnosticOperationCyclePortMapping, 0x1fffc0), (EnumItem::DiagnosticParameterIdentifier, 0x1fff00), (EnumItem::DiagnosticPowertrainFreezeFrame, 0x1fff00), (EnumItem::DiagnosticProofOfOwnership, 0x1e0000), (EnumItem::DiagnosticProtocol, 0x1fff00), (EnumItem::DiagnosticProvidedDataMapping, 0x1fc000), (EnumItem::DiagnosticReadDataByIdentifier, 0x1fffc0), (EnumItem::DiagnosticReadDataByIdentifierClass, 0x1fffc0), (EnumItem::DiagnosticReadDataByPeriodicId, 0x1fffc0), (EnumItem::DiagnosticReadDataByPeriodicIdClass, 0x1fffc0), (EnumItem::DiagnosticReadDtcInformation, 0x1fffc0), (EnumItem::DiagnosticReadDtcInformationClass, 0x1fffc0), (EnumItem::DiagnosticReadMemoryByAddress, 0x1fffc0), (EnumItem::DiagnosticReadMemoryByAddressClass, 0x1fffc0), (EnumItem::DiagnosticReadScalingDataByIdentifier, 0x1fe000), (EnumItem::DiagnosticReadScalingDataByIdentifierClass, 0x1fe000), (EnumItem::DiagnosticRequestControlOfOnBoardDevice, 0x1fff00), (EnumItem::DiagnosticRequestControlOfOnBoardDeviceClass, 0x1fff00), (EnumItem::DiagnosticRequestCurrentPowertrainData, 0x1fff00), (EnumItem::DiagnosticRequestCurrentPowertrainDataClass, 0x1fff00), (EnumItem::DiagnosticRequestDownload, 0x1fffc0), (EnumItem::DiagnosticRequestDownloadClass, 0x1fffc0), (EnumItem::DiagnosticRequestEmissionRelatedDtc, 0x1fff00), (EnumItem::DiagnosticRequestEmissionRelatedDtcClass, 0x1fff00), (EnumItem::DiagnosticRequestEmissionRelatedDtcPermanentStatus, 0x1fff00), (EnumItem::DiagnosticRequestEmissionRelatedDtcPermanentStatusClass, 0x1fff00), (EnumItem::DiagnosticRequestFileTransfer, 0x1fffc0), (EnumItem::DiagnosticRequestFileTransferClass, 0x1fffc0), (EnumItem::DiagnosticRequestOnBoardMonitoringTestResults, 0x1fff00), (EnumItem::DiagnosticRequestOnBoardMonitoringTestResultsClass, 0x1fff00), (EnumItem::DiagnosticRequestPowertrainFreezeFrameData, 0x1fff00), (EnumItem::DiagnosticRequestPowertrainFreezeFrameDataClass, 0x1fff00), (EnumItem::DiagnosticRequestUpload, 0x1fffc0), (EnumItem::DiagnosticRequestUploadClass, 0x1fffc0), (EnumItem::DiagnosticRequestVehicleInfo, 0x1fff00), (EnumItem::DiagnosticRequestVehicleInfoClass, 0x1fff00), (EnumItem::DiagnosticResponseOnEvent, 0x1fffc0), (EnumItem::DiagnosticResponseOnEventClass, 0x1fffc0), (EnumItem::DiagnosticRoutine, 0x1fffc0), (EnumItem::DiagnosticRoutineControl, 0x1fffc0), (EnumItem::DiagnosticRoutineControlClass, 0x1fffc0), (EnumItem::DiagnosticSecureCodingMapping, 0x180000), (EnumItem::DiagnosticSecurityAccess, 0x1fffc0), (EnumItem::DiagnosticSecurityAccessClass, 0x1fffc0), (EnumItem::DiagnosticSecurityEventReportingModeMapping, 0x1f0000), (EnumItem::DiagnosticSecurityLevel, 0x1fffc0), (EnumItem::DiagnosticSecurityLevelPortMapping, 0x1fc000), (EnumItem::DiagnosticServiceClass, 0x1fffc0), (EnumItem::DiagnosticServiceDataIdentifierMapping, 0x2000), (EnumItem::DiagnosticServiceDataIdentifierPortMapping, 0x1c000), (EnumItem::DiagnosticServiceDataMapping, 0x1fffc0), (EnumItem::DiagnosticServiceGenericMapping, 0x1f0000), (EnumItem::DiagnosticServiceInstance, 0x1fffc0), (EnumItem::DiagnosticServiceSwMapping, 0x1fffc0), (EnumItem::DiagnosticServiceTable, 0x1fffc0), (EnumItem::DiagnosticServiceValidationMapping, 0x1e0000), (EnumItem::DiagnosticSession, 0x1fffc0), (EnumItem::DiagnosticSessionControl, 0x1fffc0), (EnumItem::DiagnosticSessionControlClass, 0x1fffc0), (EnumItem::DiagnosticSoftwareClusterProps, 0x3fc00), (EnumItem::DiagnosticSovdAuthorizationPortMapping, 0x1c0000), (EnumItem::DiagnosticSovdBulkData, 0x180000), (EnumItem::DiagnosticSovdBulkDataPortMapping, 0x180000), (EnumItem::DiagnosticSovdConfiguration, 0x180000), (EnumItem::DiagnosticSovdConfigurationBulkData, 0x180000), (EnumItem::DiagnosticSovdConfigurationDataIdentifierMapping, 0x180000), (EnumItem::DiagnosticSovdConfigurationParameter, 0x180000), (EnumItem::DiagnosticSovdConfigurationPortMapping, 0x180000), (EnumItem::DiagnosticSovdFaultMemoryAccess, 0x100000), (EnumItem::DiagnosticSovdLock, 0x1c0000), (EnumItem::DiagnosticSovdLog, 0x180000), (EnumItem::DiagnosticSovdMethod, 0x180000), (EnumItem::DiagnosticSovdProximityChallengePortMapping, 0x1c0000), (EnumItem::DiagnosticSovdServiceInstance, 0x180000), (EnumItem::DiagnosticSovdServiceValidationPortMapping, 0x180000), (EnumItem::DiagnosticSovdUpdate, 0x180000), (EnumItem::DiagnosticSovdUpdatePortMapping, 0x180000), (EnumItem::DiagnosticStorageCondition, 0x1fffc0), (EnumItem::DiagnosticStorageConditionGroup, 0x1fffc0), (EnumItem::DiagnosticStorageConditionPortMapping, 0x1fffc0), (EnumItem::DiagnosticSwMapping, 0x1fffc0), (EnumItem::DiagnosticTestResult, 0x1fff00), (EnumItem::DiagnosticTestRoutineIdentifier, 0x1fff00), (EnumItem::DiagnosticTransferExit, 0x1fffc0), (EnumItem::DiagnosticTransferExitClass, 0x1fffc0), (EnumItem::DiagnosticTroubleCode, 0x1fffc0), (EnumItem::DiagnosticTroubleCodeGroup, 0x1fffc0), (EnumItem::DiagnosticTroubleCodeJ1939, 0x1fffc0), (EnumItem::DiagnosticTroubleCodeObd, 0x1fffc0), (EnumItem::DiagnosticTroubleCodeProps, 0x1fffc0), (EnumItem::DiagnosticTroubleCodeUds, 0x1fffc0), (EnumItem::DiagnosticTroubleCodeUdsToClearConditionGroupMapping, 0x1fe000), (EnumItem::DiagnosticTroubleCodeUdsToTroubleCodeObdMapping, 0x1fff00), (EnumItem::DiagnosticUploadDownloadPortMapping, 0xc000), (EnumItem::DiagnosticVerifyCertificateBidirectional, 0x1e0000), (EnumItem::DiagnosticVerifyCertificateUnidirectional, 0x1e0000), (EnumItem::DiagnosticWriteDataByIdentifier, 0x1fffc0), (EnumItem::DiagnosticWriteDataByIdentifierClass, 0x1fffc0), (EnumItem::DiagnosticWriteMemoryByAddress, 0x1fffc0), (EnumItem::DiagnosticWriteMemoryByAddressClass, 0x1fffc0)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::IsEqual, 0x1fff00), (EnumItem::IsGreaterOrEqual, 0x1fff00), (EnumItem::IsGreaterThan, 0x1fff00), (EnumItem::IsLessOrEqual, 0x1fff00), (EnumItem::IsLessThan, 0x1fff00), (EnumItem::IsNotEqual, 0x1fff00)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::DiagnosticClearCondition, 0x180000), (EnumItem::DiagnosticCondition, 0x180000), (EnumItem::DiagnosticEnableCondition, 0x180000), (EnumItem::DiagnosticStorageCondition, 0x180000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::BlinkMode, 0x1fffc0), (EnumItem::BlinkOrContinuousOnMode, 0x1fffc0), (EnumItem::ContinuousOnMode, 0x1fffc0), (EnumItem::FastFlashingMode, 0x1fffc0), (EnumItem::SlowFlashingMode, 0x1fffc0)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::DiagnosticConnection, 0x1fffc0)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::DiagnosticContributionSet, 0x1ffc00)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::DiagnosticControlDtcSettingClass, 0x1fffc0)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::DiagnosticCustomServiceClass, 0x1fe000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::CaptureAsynchronouslyToReporting, 0x1fffc0), (EnumItem::CaptureSynchronouslyToReporting, 0x1fffc0)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::DiagnosticDataElement, 0x1fffc0)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::DiagnosticDataIdentifier, 0x1fffc0)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::DiagnosticDataIdentifierSet, 0x1fffc0)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::DiagnosticDataTransferClass, 0x1fffc0)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::DiagnosticDebounceAlgorithmProps, 0x1fffc0)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::_500Miles, 0x1fe000), (EnumItem::Coldstart, 0x1fe000), (EnumItem::Csers, 0x1c0000), (EnumItem::Evap, 0x1fe000), (EnumItem::Evappurgeflow, 0x180000), (EnumItem::Individual, 0x1fe000), (EnumItem::Obd, 0x1fe000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::DiagnosticDynamicDataIdentifier, 0x1fffc0)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::DiagnosticDynamicallyDefineDataIdentifierClass, 0x1fffc0)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::ClearDynamicallyDefineDataIdentifier, 0x1fff00), (EnumItem::DefineByIdentifier, 0x1fff00), (EnumItem::DefineByMemoryAddress, 0x1fff00)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::DiagnosticEcuResetClass, 0x1fffc0)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::DiagnosticEnableCondition, 0x1fffc0)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::DiagnosticEnableConditionGroup, 0x1fffc0)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::DiagnosticEnvBswModeElement, 0x1fff00), (EnumItem::DiagnosticEnvModeElement, 0x1fff00), (EnumItem::DiagnosticEnvSwcModeElement, 0x1fff00)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::DiagnosticEnvironmentalCondition, 0x1fff00)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::DiagnosticEvent, 0x1fffc0)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::Always, 0x1fffc0), (EnumItem::Never, 0x1fffc0), (EnumItem::RequiresCallbackExecution, 0x1fffc0)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::EventCombinationOnRetrieval, 0x1e0000), (EnumItem::EventCombinationOnStorage, 0x1e0000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::ReportingInChronlogicalOrderOldestFirst, 0x1e0000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::Full, 0x1fffc0), (EnumItem::None, 0x1fffc0), (EnumItem::PrioOcc, 0x1fffc0)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::Bsw, 0x1fffc0), (EnumItem::Swc, 0x1fffc0)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::DiagnosticEventNeeds, 0x1fffff)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::EventWindowCurrentAndFollowingCycle, 0x1fffc0), (EnumItem::EventWindowCurrentCycle, 0x1fffc0), (EnumItem::EventWindowInfinite, 0x1fffc0), (EnumItem::InfiniteTimeToResponse, 0x1e0000), (EnumItem::PowerWindowTime, 0x1e0000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::DiagnosticExtendedDataRecord, 0x1fffc0)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::DiagnosticFimAliasEvent, 0x1fff00)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::DiagnosticFimAliasEventGroup, 0x1fff00)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::DiagnosticFimEventGroup, 0x1fff00)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::DiagnosticFreezeFrame, 0x1fffc0)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::DiagnosticFunctionIdentifier, 0x1fff00)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::DiagnosticFunctionInhibitSource, 0x1fff00)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::NonVolatile, 0x1fffc0), (EnumItem::Volatile, 0x1fffc0)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::DiagnosticIndicator, 0x1fffc0)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::AmberWarning, 0x1fe000), (EnumItem::Malfunction, 0x1fe000), (EnumItem::ProtectLamp, 0x1fe000), (EnumItem::RedStopLamp, 0x1fe000), (EnumItem::Warning, 0x1fe000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::DiagnosticInfoType, 0x1fff00)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::LastFailed, 0x1fff00), (EnumItem::NotTested, 0x1fff00), (EnumItem::Tested, 0x1fff00), (EnumItem::TestedAndFailed, 0x1fff00)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::ReturnOnEventCleared, 0x1fffc0), (EnumItem::ReturnOnEventStopped, 0x1fffc0)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::DiagnosticIoControlClass, 0x1fffc0)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::DiagnosticIumpr, 0x1fff00)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::ApiBased, 0x1e0000), (EnumItem::ObserverBased, 0x1e0000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::DiagnosticJ1939Node, 0x1fff00)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::DiagnosticJ1939Spn, 0x1fff00)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::NoBoot, 0x1fffc0), (EnumItem::OemBoot, 0x1fffc0), (EnumItem::OemBootRespApp, 0x1fff00), (EnumItem::SystemSupplierBoot, 0x1fffc0), (EnumItem::SystemSupplierBootRespApp, 0x1fff00)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::LogicalAnd, 0x1fff00), (EnumItem::LogicalOr, 0x1fff00)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::DiagnosticMeasurementIdentifier, 0x1fff00)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::DiagnosticMemoryDestination, 0x1fffc0), (EnumItem::DiagnosticMemoryDestinationMirror, 0x1fffc0), (EnumItem::DiagnosticMemoryDestinationPrimary, 0x1fffc0), (EnumItem::DiagnosticMemoryDestinationUserDefined, 0x1fffc0)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::Confirmed, 0x1fffc0), (EnumItem::FdcThreshold, 0x1fffc0), (EnumItem::Pending, 0x1fffc0), (EnumItem::TestFailed, 0x1fffc0)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::DiagnosticMemoryIdentifier, 0x1fffc0)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::Always, 0x1fe000), (EnumItem::Steady, 0x1fe000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::MasterEcu, 0x1fff00), (EnumItem::NoObdSupport, 0x1fff00), (EnumItem::PrimaryEcu, 0x1fff00), (EnumItem::SecondaryEcu, 0x1fff00)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::ConfirmedDtcBit, 0x1fffc0), (EnumItem::TestFailedBit, 0x1fffc0)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::DiagnosticOperationCycle, 0x1fffc0)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::Ignition, 0x1fffc0), (EnumItem::ObdDrivingCycle, 0x1fffc0), (EnumItem::Other, 0x1fffc0), (EnumItem::Power, 0x1fffc0), (EnumItem::Time, 0x1fffc0), (EnumItem::Warmup, 0x1fffc0)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::DiagnosticParameterElement, 0x1c0000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::DiagnosticParameterIdent, 0x1c0000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::DiagnosticParameterIdentifier, 0x1fff00)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::PeriodicRateFast, 0x1fff00), (EnumItem::PeriodicRateMedium, 0x1fff00), (EnumItem::PeriodicRateSlow, 0x1fff00)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::DiagnosticPowertrainFreezeFrame, 0x1fff00)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::ProcessingStyleAsynchronous, 0x1fffc0), (EnumItem::ProcessingStyleAsynchronousWithError, 0x1fff00), (EnumItem::ProcessingStyleSynchronous, 0x1fffc0)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::DiagnosticReadDataByIdentifierClass, 0x1fffc0)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::DiagnosticReadDataByPeriodicIdClass, 0x1fffc0)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::DiagnosticReadDtcInformationClass, 0x1fffc0)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::DiagnosticReadMemoryByAddressClass, 0x1fffc0)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::DiagnosticReadScalingDataByIdentifierClass, 0x1fe000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::Confirmed, 0x1fffc0), (EnumItem::Custom, 0x1fe000), (EnumItem::FdcThreshold, 0x1fffc0), (EnumItem::Pending, 0x1fffc0), (EnumItem::TestFailed, 0x1fffc0), (EnumItem::TestFailedThisOperationCycle, 0x1f0000), (EnumItem::TestPassed, 0x1c0000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::DiagnosticRequestControlOfOnBoardDeviceClass, 0x1fff00)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::DiagnosticRequestCurrentPowertrainDataClass, 0x1fff00)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::DiagnosticRequestDownloadClass, 0x1fffc0)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::DiagnosticRequestEmissionRelatedDtcClass, 0x1fff00)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::DiagnosticRequestEmissionRelatedDtcPermanentStatusClass, 0x1fff00)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::DiagnosticRequestFileTransferClass, 0x1fffc0)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::DiagnosticRequestOnBoardMonitoringTestResultsClass, 0x1fff00)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::DiagnosticRequestPowertrainFreezeFrameDataClass, 0x1fff00)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::DiagnosticRequestUploadClass, 0x1fffc0)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::DiagnosticRequestVehicleInfoClass, 0x1fff00)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::Clear, 0x1fe000), (EnumItem::OnChangeOfDataIdentifier, 0x1e0000), (EnumItem::OnComparisonOfValues, 0x1e0000), (EnumItem::OnDtcStatusChange, 0x1e0000), (EnumItem::Report, 0x1fe000), (EnumItem::ReportDtcRecordInformationOnDtcStatusChange, 0x1e0000), (EnumItem::ReportMostRecentDtcOnStatusChange, 0x1e0000), (EnumItem::Start, 0x1fe000), (EnumItem::Stop, 0x1fe000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::DiagnosticResponseOnEventClass, 0x1fffc0)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::RespondAfterReset, 0x1fffc0), (EnumItem::RespondBeforeReset, 0x1fffc0)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::DiagnosticRoutine, 0x1fffc0)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::DiagnosticRoutineControlClass, 0x1fffc0)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::DiagnosticRequestRoutineResults, 0x1e0000), (EnumItem::DiagnosticRoutineSubfunction, 0x1e0000), (EnumItem::DiagnosticStartRoutine, 0x1e0000), (EnumItem::DiagnosticStopRoutine, 0x1e0000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::Asynchronous, 0x1fffff), (EnumItem::Synchronous, 0x1fffff)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::DiagnosticSecurityAccessClass, 0x1fffc0)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::DiagnosticSecurityLevel, 0x1fffc0)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::DiagnosticAuthTransmitCertificate, 0x180000), (EnumItem::DiagnosticAuthentication, 0x1e0000), (EnumItem::DiagnosticAuthenticationConfiguration, 0x1e0000), (EnumItem::DiagnosticClearDiagnosticInformation, 0x1fffc0), (EnumItem::DiagnosticClearResetEmissionRelatedInfo, 0x1fff00), (EnumItem::DiagnosticComControl, 0x1fffc0), (EnumItem::DiagnosticControlDtcSetting, 0x1fffc0), (EnumItem::DiagnosticCustomServiceInstance, 0x1fe000), (EnumItem::DiagnosticDataByIdentifier, 0x1fffc0), (EnumItem::DiagnosticDataTransfer, 0x1fffc0), (EnumItem::DiagnosticDeAuthentication, 0x1e0000), (EnumItem::DiagnosticDynamicallyDefineDataIdentifier, 0x1fffc0), (EnumItem::DiagnosticEcuReset, 0x1fffc0), (EnumItem::DiagnosticIoControl, 0x1fffc0), (EnumItem::DiagnosticMemoryAddressableRangeAccess, 0x1fffc0), (EnumItem::DiagnosticMemoryByAddress, 0x1fffc0), (EnumItem::DiagnosticProofOfOwnership, 0x1e0000), (EnumItem::DiagnosticReadDataByIdentifier, 0x1fffc0), (EnumItem::DiagnosticReadDataByPeriodicId, 0x1fffc0), (EnumItem::DiagnosticReadDtcInformation, 0x1fffc0), (EnumItem::DiagnosticReadMemoryByAddress, 0x1fffc0), (EnumItem::DiagnosticReadScalingDataByIdentifier, 0x1fe000), (EnumItem::DiagnosticRequestControlOfOnBoardDevice, 0x1fff00), (EnumItem::DiagnosticRequestCurrentPowertrainData, 0x1fff00), (EnumItem::DiagnosticRequestDownload, 0x1fffc0), (EnumItem::DiagnosticRequestEmissionRelatedDtc, 0x1fff00), (EnumItem::DiagnosticRequestEmissionRelatedDtcPermanentStatus, 0x1fff00), (EnumItem::DiagnosticRequestFileTransfer, 0x1fffc0), (EnumItem::DiagnosticRequestOnBoardMonitoringTestResults, 0x1fff00), (EnumItem::DiagnosticRequestPowertrainFreezeFrameData, 0x1fff00), (EnumItem::DiagnosticRequestUpload, 0x1fffc0), (EnumItem::DiagnosticRequestVehicleInfo, 0x1fff00), (EnumItem::DiagnosticResponseOnEvent, 0x1fffc0), (EnumItem::DiagnosticRoutineControl, 0x1fffc0), (EnumItem::DiagnosticSecurityAccess, 0x1fffc0), (EnumItem::DiagnosticServiceInstance, 0x1fffc0), (EnumItem::DiagnosticSessionControl, 0x1fffc0), (EnumItem::DiagnosticTransferExit, 0x1fffc0), (EnumItem::DiagnosticVerifyCertificateBidirectional, 0x1e0000), (EnumItem::DiagnosticVerifyCertificateUnidirectional, 0x1e0000), (EnumItem::DiagnosticWriteDataByIdentifier, 0x1fffc0), (EnumItem::DiagnosticWriteMemoryByAddress, 0x1fffc0)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::RequestCallbackTypeManufacturer, 0x1fffc0), (EnumItem::RequestCallbackTypeSupplier, 0x1fffc0)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::DiagnosticServiceTable, 0x1fffc0)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::DiagnosticServiceValidationMapping, 0x1e0000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::DiagnosticSession, 0x1fffc0)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::DiagnosticSessionControlClass, 0x1fffc0)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::Fault, 0x1fffc0), (EnumItem::Occurence, 0x1fffc0)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::DiagnosticSovdBulkData, 0x180000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::DiagnosticSovdConfiguration, 0x180000), (EnumItem::DiagnosticSovdConfigurationBulkData, 0x180000), (EnumItem::DiagnosticSovdConfigurationParameter, 0x180000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::DiagnosticSovdConfigurationParameter, 0x180000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::DiagnosticSovdLock, 0x1c0000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::DiagnosticSovdMethod, 0x180000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::DiagnosticSovdServiceValidationPortMapping, 0x180000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::DiagnosticSovdUpdate, 0x180000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::DiagnosticStartRoutine, 0x180000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::StatusBitAgingAndDisplacement, 0x1fffc0), (EnumItem::StatusBitNormal, 0x1fffc0)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::DiagnosticStorageCondition, 0x1fffc0)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::DiagnosticStorageConditionGroup, 0x1fffc0)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::All, 0x1fe000), (EnumItem::NoStoreEvent, 0x1fe000), (EnumItem::StoreEvent, 0x1fe000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::DiagnosticTestResult, 0x1fff00)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::DiagnosticTestRoutineIdentifier, 0x1fff00)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::DiagnosticTransferExitClass, 0x1fffc0)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::DiagnosticTroubleCode, 0x1fffc0), (EnumItem::DiagnosticTroubleCodeJ1939, 0x1fffc0), (EnumItem::DiagnosticTroubleCodeObd, 0x1fffc0), (EnumItem::DiagnosticTroubleCodeUds, 0x1fffc0)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::DiagnosticTroubleCodeJ1939, 0x1fe000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::ServiceOnly, 0x1fff00), (EnumItem::Standard, 0x1fff00)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::DiagnosticTroubleCodeObd, 0x1fff00)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::DiagnosticTroubleCodeProps, 0x1fffc0)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::DiagnosticTroubleCodeUds, 0x1fffc0)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::Iso11992_4, 0x1fffc0), (EnumItem::Iso14229_1, 0x1fffc0), (EnumItem::Iso15031_6, 0x1fffc0), (EnumItem::SaeJ1939_73, 0x1fffc0), (EnumItem::SaeJ2012Da, 0x1fffc0)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::Calculated, 0x1fffc0), (EnumItem::Configured, 0x1fffc0)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::ReadOnly, 0x1fffff), (EnumItem::ReadWrite, 0x1fffff), (EnumItem::WriteOnly, 0x1fffc0)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::DiagnosticValueNeeds, 0x1fff80)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::DiagnosticWriteDataByIdentifier, 0x180000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::DiagnosticWriteDataByIdentifierClass, 0x1fffc0)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::DiagnosticWriteMemoryByAddressClass, 0x1fffc0)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::Bonjour, 0x1ffff8), (EnumItem::Dlna, 0x1ffff8), (EnumItem::Slp, 0x1ffff8), (EnumItem::Someip, 0x1ffff8), (EnumItem::Ssdp, 0x1ffff8)]},
    CharacterDataSpec::Pattern{check_fn: validate_regex_12, regex: r"%[ \-+#]?[0-9]*(\.[0-9]+)?[bBdiouxXfeEgGcs]", max_length: None},
    CharacterDataSpec::Enum{items: &[(EnumItem::PresentationContinuous, 0x1fe000), (EnumItem::PresentationDiscrete, 0x1fe000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::DltApplication, 0x1e0000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::DltContext, 0x1e0000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::DefaultTraceStateDisabled, 0x1e0000), (EnumItem::DefaultTraceStateEnabled, 0x1e0000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::DltEcu, 0x1e0000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::DltLogChannel, 0x10000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::DltLogChannelDesign, 0x10000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::DltLogSink, 0x1e0000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::DltMessage, 0x1f8000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::EidUseApi, 0x1c0000), (EnumItem::EidUseConfigValue, 0x1c0000), (EnumItem::EidUseMac, 0x1c0000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::EdgeNode, 0x1ffff8), (EnumItem::Gateway, 0x1ffff8), (EnumItem::Node, 0x1ffff8)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::DoIpFunctionalClusterDesign, 0x100000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::DoIpLogicAddress, 0x1fff80)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::DoIpLogicTargetAddressProps, 0x1f0000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::DoIpLogicalAddress, 0x100000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::DoIpNetworkConfigurationDesign, 0x100000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::DoIpRoutingActivation, 0x1f0000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::DoIpTpConfig, 0x1f8000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::Documentation, 0x1fff00)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::J1939, 0x1ffff0), (EnumItem::Obd, 0x1ffff0), (EnumItem::Uds, 0x1ffff0)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::EmissionRelatedDtc, 0x1fffff), (EnumItem::NonEmmissionRelatedDtc, 0x1fffff)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::E2EProfileCompatibilityProps, 0x1f0000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::E2EProfileConfiguration, 0x1ffc00)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::Bold, 0x1fffff), (EnumItem::Bolditalic, 0x1fffff), (EnumItem::Italic, 0x1fffff), (EnumItem::Plain, 0x1fffff)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::Default, 0x1fffff), (EnumItem::Mono, 0x1fffff)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::EcuInstance, 0x1fffff)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::EcuPartition, 0x1fffff)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::EcucAbstractExternalReferenceDef, 0x1fff00), (EnumItem::EcucAbstractInternalReferenceDef, 0x1fff00), (EnumItem::EcucAbstractReferenceDef, 0x1fffff), (EnumItem::EcucChoiceReferenceDef, 0x1fffff), (EnumItem::EcucForeignReferenceDef, 0x1fffff), (EnumItem::EcucInstanceReferenceDef, 0x1fffff), (EnumItem::EcucReferenceDef, 0x1fffff), (EnumItem::EcucSymbolicNameReferenceDef, 0x1fffff), (EnumItem::EcucUriReferenceDef, 0x1fffc0)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::LtAffectsPb, 0x1fffff), (EnumItem::NoAffect, 0x1fffff), (EnumItem::PcAffectsLt, 0x1fffff), (EnumItem::PcAffectsLtAndPb, 0x1fffff), (EnumItem::PcAffectsPb, 0x1fffff)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::EcucAbstractExternalReferenceDef, 0x1fff00), (EnumItem::EcucAbstractInternalReferenceDef, 0x1fff00), (EnumItem::EcucAbstractReferenceDef, 0x1fffff), (EnumItem::EcucAbstractStringParamDef, 0x1fffff), (EnumItem::EcucAddInfoParamDef, 0x1fffff), (EnumItem::EcucBooleanParamDef, 0x1fffff), (EnumItem::EcucChoiceReferenceDef, 0x1fffff), (EnumItem::EcucCommonAttributes, 0x1fffff), (EnumItem::EcucEnumerationParamDef, 0x1fffff), (EnumItem::EcucFloatParamDef, 0x1fffff), (EnumItem::EcucForeignReferenceDef, 0x1fffff), (EnumItem::EcucFunctionNameDef, 0x1fffff), (EnumItem::EcucInstanceReferenceDef, 0x1fffff), (EnumItem::EcucIntegerParamDef, 0x1fffff), (EnumItem::EcucLinkerSymbolDef, 0x1fffff), (EnumItem::EcucMultilineStringParamDef, 0x1fffff), (EnumItem::EcucParameterDef, 0x1fffff), (EnumItem::EcucReferenceDef, 0x1fffff), (EnumItem::EcucStringParamDef, 0x1fffff), (EnumItem::EcucSymbolicNameReferenceDef, 0x1fffff), (EnumItem::EcucUriReferenceDef, 0x1fffc0)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::Link, 0x1fffff), (EnumItem::PostBuild, 0x1fffff), (EnumItem::PreCompile, 0x1fffff), (EnumItem::PublishedInformation, 0x1fffff)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::PreconfiguredConfiguration, 0x1fffff), (EnumItem::RecommendedConfiguration, 0x1fffff), (EnumItem::VariantLinkTime, 0x1fffff), (EnumItem::VariantPostBuild, 0x1fffff), (EnumItem::VariantPostBuildLoadable, 0x1ffffc), (EnumItem::VariantPostBuildSelectable, 0x1ffffc), (EnumItem::VariantPreCompile, 0x1fffff)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::EcucChoiceContainerDef, 0x1fffff), (EnumItem::EcucContainerDef, 0x1fffff), (EnumItem::EcucParamConfContainerDef, 0x1fffff)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::EcucContainerValue, 0x1fe000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::EcucAbstractExternalReferenceDef, 0x1fff00), (EnumItem::EcucAbstractInternalReferenceDef, 0x1fff00), (EnumItem::EcucAbstractReferenceDef, 0x1fffff), (EnumItem::EcucAbstractStringParamDef, 0x1fffff), (EnumItem::EcucAddInfoParamDef, 0x1fffff), (EnumItem::EcucBooleanParamDef, 0x1fffff), (EnumItem::EcucChoiceContainerDef, 0x1fffff), (EnumItem::EcucChoiceReferenceDef, 0x1fffff), (EnumItem::EcucCommonAttributes, 0x1fffff), (EnumItem::EcucContainerDef, 0x1fffff), (EnumItem::EcucDefinitionElement, 0x1fffff), (EnumItem::EcucEnumerationParamDef, 0x1fffff), (EnumItem::EcucFloatParamDef, 0x1fffff), (EnumItem::EcucForeignReferenceDef, 0x1fffff), (EnumItem::EcucFunctionNameDef, 0x1fffff), (EnumItem::EcucInstanceReferenceDef, 0x1fffff), (EnumItem::EcucIntegerParamDef, 0x1fffff), (EnumItem::EcucLinkerSymbolDef, 0x1fffff), (EnumItem::EcucModuleDef, 0x1fffff), (EnumItem::EcucMultilineStringParamDef, 0x1fffff), (EnumItem::EcucParamConfContainerDef, 0x1fffff), (EnumItem::EcucParameterDef, 0x1fffff), (EnumItem::EcucReferenceDef, 0x1fffff), (EnumItem::EcucStringParamDef, 0x1fffff), (EnumItem::EcucSymbolicNameReferenceDef, 0x1fffff), (EnumItem::EcucUriReferenceDef, 0x1fffc0)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::EcucDestinationUriDef, 0x1fffc0)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::LeafOfTargetContainer, 0x1fffc0), (EnumItem::TargetContainer, 0x1fffc0), (EnumItem::VertexOfTargetContainer, 0x1fffc0)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::EcucModuleConfigurationValues, 0x1fffff)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::EcucModuleDef, 0x1fffff)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::EcucParamConfContainerDef, 0x1fffff)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::EcucAbstractStringParamDef, 0x1fffff), (EnumItem::EcucAddInfoParamDef, 0x1fffff), (EnumItem::EcucBooleanParamDef, 0x1fffff), (EnumItem::EcucEnumerationParamDef, 0x1fffff), (EnumItem::EcucFloatParamDef, 0x1fffff), (EnumItem::EcucFunctionNameDef, 0x1fffff), (EnumItem::EcucIntegerParamDef, 0x1fffff), (EnumItem::EcucLinkerSymbolDef, 0x1fffff), (EnumItem::EcucMultilineStringParamDef, 0x1fffff), (EnumItem::EcucParameterDef, 0x1fffff), (EnumItem::EcucStringParamDef, 0x1fffff)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::EcucQueryExpression, 0x1), (EnumItem::EcucQuery, 0x1ffffe)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::Ecu, 0x1ffff8), (EnumItem::Local, 0x1ffff8)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::EcucValueCollection, 0x1fffff)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::PreR4_2, 0x1fffc0), (EnumItem::R4_2, 0x1fffc0)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::CaptureAsynchronousToReporting, 0x1fffc0), (EnumItem::CaptureSynchronousToReporting, 0x1fffc0)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::EocEventRef, 0x1fffc0), (EnumItem::EocExecutableEntityRef, 0x1fffff), (EnumItem::EocExecutableEntityRefAbstract, 0x1ffff8), (EnumItem::EocExecutableEntityRefGroup, 0x1ffff8)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::EocExecutableEntityRefGroup, 0x1fe000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::Ieee802_1as, 0x1fff00), (EnumItem::Ieee802_1asAutosar, 0x1fff00)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::EthIpProps, 0x1f0000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::EthTcpIpIcmpProps, 0x1f0000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::EthTcpIpProps, 0x1f0000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::EthernetCluster, 0x1ffff8)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::EthernetCommunicationConnector, 0x1fffff)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::Auto, 0x1fffc0), (EnumItem::Master, 0x1fffc0), (EnumItem::Slave, 0x1fffc0)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::Express, 0x100000), (EnumItem::Preemptable, 0x100000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::DeficitRoundRobin, 0x1fffc0), (EnumItem::EnhancedTrafficShaper, 0x100000), (EnumItem::StrictPriority, 0x1fffc0), (EnumItem::WeightedRoundRobin, 0x1fffc0)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::XMii, 0x1fff00), (EnumItem::XgMii, 0x1fff00), (EnumItem::XxgMii, 0x1fff00)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::EthernetPhysicalChannel, 0x1ffff8)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::_10000baseT1, 0x100000), (EnumItem::_1000baseT, 0x1fff00), (EnumItem::_1000baseT1, 0x1fff00), (EnumItem::_100baseT1, 0x1fff00), (EnumItem::_100baseTx, 0x1fff00), (EnumItem::_10baseT1s, 0x1f0000), (EnumItem::_2500baseT1, 0x100000), (EnumItem::_5000baseT1, 0x100000), (EnumItem::BaseT, 0x1fffc0), (EnumItem::BroadRReach, 0x1fffc0), (EnumItem::Ieee802_11p, 0x1fff00), (EnumItem::Rtpge, 0x1fffc0), (EnumItem::XMii, 0x1fff80), (EnumItem::XMmi, 0x1fffc0)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::EthernetRawDataStreamClientMapping, 0x1e0000), (EnumItem::EthernetRawDataStreamMapping, 0x1f8000), (EnumItem::EthernetRawDataStreamServerMapping, 0x1e0000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::NotSent, 0x1fffc0), (EnumItem::SentTagged, 0x1fffc0), (EnumItem::SentUntagged, 0x1fffc0)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::DropUntagged, 0x1fff00), (EnumItem::ForwardAsIs, 0x1fff00)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::EthernetWakeupSleepOnDatalineConfig, 0x1f0000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::EventAcceptanceDisabled, 0x1ffff0), (EnumItem::EventAcceptanceEnabled, 0x1ffff0)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::ActivationAndTriggerUnicast, 0x1ffff0), (EnumItem::ActivationMulticast, 0x1ffff0), (EnumItem::ActivationUnicast, 0x1ffff0), (EnumItem::TriggerUnicast, 0x1ffff0)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::EventHandler, 0x1ffff8)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::MultipleOccurrences, 0x1ffff8), (EnumItem::SingleOccurrence, 0x1ffff8)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::ExclusiveArea, 0x1fffff)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::ExclusiveAreaNestingOrder, 0x1ffff8)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::Executable, 0x1ffe00)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::BswCalledEntity, 0x1fffff), (EnumItem::BswInterruptEntity, 0x1fffff), (EnumItem::BswModuleEntity, 0x1fffff), (EnumItem::BswSchedulableEntity, 0x1fffff), (EnumItem::ExecutableEntity, 0x1fffff), (EnumItem::RunnableEntity, 0x1fffff)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::ExecutableEntityActivationReason, 0x1ffff8)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::HierarchicalEoc, 0x1fffc0), (EnumItem::OrdinaryEoc, 0x1fffc0), (EnumItem::RepetitiveEoc, 0x1fffc0)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::DoesNotReportExecutionState, 0x1f8000), (EnumItem::ReportsExecutionState, 0x1f8000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::Gross, 0x1ffffc), (EnumItem::Net, 0x1ffffc)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::AbstractCanCluster, 0x1fffff), (EnumItem::AbstractEthernetFrame, 0x1fff00), (EnumItem::BusMirrorChannelMapping, 0x1fe000), (EnumItem::BusMirrorChannelMappingCan, 0x1fe000), (EnumItem::BusMirrorChannelMappingFlexray, 0x1fe000), (EnumItem::BusMirrorChannelMappingIp, 0x1fe000), (EnumItem::BusMirrorChannelMappingUserDefined, 0x1fe000), (EnumItem::CanCluster, 0x1fffff), (EnumItem::CanFrame, 0x1fffff), (EnumItem::CanTpConfig, 0x1fffff), (EnumItem::CommunicationCluster, 0x1fffff), (EnumItem::ConsumedProvidedServiceInstanceGroup, 0x1f8000), (EnumItem::ContainerIPdu, 0x1fffc0), (EnumItem::CouplingElement, 0x1ffff8), (EnumItem::DcmIPdu, 0x1fffff), (EnumItem::DltMessageCollectionSet, 0x1f8000), (EnumItem::DoIpTpConfig, 0x1fff80), (EnumItem::EcuInstance, 0x1fffff), (EnumItem::EthTpConfig, 0x1fe000), (EnumItem::EthernetCluster, 0x1fffff), (EnumItem::EthernetFrame, 0x1fffff), (EnumItem::EthernetWakeupSleepOnDatalineConfigSet, 0x1f0000), (EnumItem::FibexElement, 0x1fffff), (EnumItem::FlexrayArTpConfig, 0x1ffffc), (EnumItem::FlexrayCluster, 0x1fffff), (EnumItem::FlexrayFrame, 0x1fffff), (EnumItem::FlexrayTpConfig, 0x1fffff), (EnumItem::Frame, 0x1fffff), (EnumItem::Gateway, 0x1fffff), (EnumItem::GeneralPurposeIPdu, 0x1ffff0), (EnumItem::GeneralPurposePdu, 0x1ffff0), (EnumItem::GenericEthernetFrame, 0x1fffc0), (EnumItem::GlobalTimeDomain, 0x1fffc0), (EnumItem::IPdu, 0x1fffff), (EnumItem::ISignal, 0x1fffff), (EnumItem::ISignalGroup, 0x1fffff), (EnumItem::ISignalIPdu, 0x1fffff), (EnumItem::ISignalIPduGroup, 0x1fffff), (EnumItem::Ieee1722TpConfig, 0x180000), (EnumItem::Ieee1722TpEthernetFrame, 0x1fffc0), (EnumItem::J1939Cluster, 0x1ffff8), (EnumItem::J1939DcmIPdu, 0x1ffff8), (EnumItem::J1939ProtectedIPdu, 0x100000), (EnumItem::J1939TpConfig, 0x1fffff), (EnumItem::LinCluster, 0x1fffff), (EnumItem::LinEventTriggeredFrame, 0x1fffff), (EnumItem::LinFrame, 0x1fffff), (EnumItem::LinSporadicFrame, 0x1fffff), (EnumItem::LinTpConfig, 0x1fffff), (EnumItem::LinUnconditionalFrame, 0x1fffff), (EnumItem::MachineDesign, 0x1ff000), (EnumItem::MultiplexedIPdu, 0x1fffff), (EnumItem::NPdu, 0x1fffff), (EnumItem::NmConfig, 0x1fffff), (EnumItem::NmPdu, 0x1fffff), (EnumItem::Pdu, 0x1fffff), (EnumItem::PdurIPduGroup, 0x1fffff), (EnumItem::SecureCommunicationPropsSet, 0x1fff00), (EnumItem::SecuredIPdu, 0x1fffc0), (EnumItem::ServiceInstanceCollectionSet, 0x1f8000), (EnumItem::SoAdRoutingGroup, 0x1ffff8), (EnumItem::SocketConnectionIpduIdentifierSet, 0x1f8000), (EnumItem::SomeipTpConfig, 0x1fff00), (EnumItem::TpConfig, 0x1fffff), (EnumItem::TtcanCluster, 0x1fffff), (EnumItem::UserDefinedCluster, 0x1ffff8), (EnumItem::UserDefinedEthernetFrame, 0x1fffc0), (EnumItem::UserDefinedIPdu, 0x1ffffc), (EnumItem::UserDefinedPdu, 0x1ffffc), (EnumItem::XcpPdu, 0x1fffff)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::Field, 0x1ffe00)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::Getter, 0x1fc000), (EnumItem::GetterSetter, 0x1fc000), (EnumItem::Setter, 0x1fc000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::DebounceData, 0x1fffff), (EnumItem::RawData, 0x1fffff), (EnumItem::WaitTimeDate, 0x1fffff)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::Allow, 0x1c0000), (EnumItem::Block, 0x1c0000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::FirewallRule, 0x1c0000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::FlatInstanceDescriptor, 0x1fffff)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::FlatMap, 0x1fffff)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::FlexrayArTpNode, 0x1ffffc)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::ChannelA, 0x1fffff), (EnumItem::ChannelB, 0x1fffff)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::FlexrayCluster, 0x1fffff)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::FlexrayCommunicationConnector, 0x1ffffc)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::FlexrayNmCluster, 0x1fffff)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::ScheduleVariant1, 0x1fffff), (EnumItem::ScheduleVariant2, 0x1fffff), (EnumItem::ScheduleVariant3, 0x1fffff), (EnumItem::ScheduleVariant4, 0x1fffff), (EnumItem::ScheduleVariant5, 0x1fffff), (EnumItem::ScheduleVariant6, 0x1fffff), (EnumItem::ScheduleVariant7, 0x1fffff)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::FlexrayPhysicalChannel, 0x1fffff)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::FlexrayTpConnectionControl, 0x1fffff)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::FlexrayTpNode, 0x1fffff)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::FlexrayTpPduPool, 0x1fffff)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::Float, 0x1fffff), (EnumItem::NoFloat, 0x1fffff)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::ColorAware, 0x180000), (EnumItem::ColorBlind, 0x180000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::FmAttributeDef, 0x1ffff8)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::FmFeature, 0x1ffff8)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::FmFeatureModel, 0x1ffff8)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::FmFeatureSelectionSet, 0x1ffff8)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::Deselected, 0x1ffff8), (EnumItem::Selected, 0x1ffff8), (EnumItem::Undecided, 0x1ffff8)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::AckWithRt, 0x1ffffc), (EnumItem::AckWithoutRt, 0x1ffffc), (EnumItem::NoAck, 0x1ffffc)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::AbstractEthernetFrame, 0x1fff00), (EnumItem::CanFrame, 0x1fffff), (EnumItem::EthernetFrame, 0x1fffff), (EnumItem::FlexrayFrame, 0x1fffff), (EnumItem::Frame, 0x1fffff), (EnumItem::GenericEthernetFrame, 0x1fffc0), (EnumItem::Ieee1722TpEthernetFrame, 0x1fffc0), (EnumItem::LinEventTriggeredFrame, 0x1fffff), (EnumItem::LinFrame, 0x1fffff), (EnumItem::LinSporadicFrame, 0x1fffff), (EnumItem::LinUnconditionalFrame, 0x1fffff), (EnumItem::UserDefinedEthernetFrame, 0x1fffc0)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::All, 0x1fffff), (EnumItem::Bottom, 0x1fffff), (EnumItem::None, 0x1fffff), (EnumItem::Sides, 0x1fffff), (EnumItem::Top, 0x1fffff), (EnumItem::Topbot, 0x1fffff)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::FramePort, 0x1fffff)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::CanFrameTriggering, 0x1fffff), (EnumItem::EthernetFrameTriggering, 0x1fffff), (EnumItem::FlexrayFrameTriggering, 0x1fffff), (EnumItem::FrameTriggering, 0x1fffff), (EnumItem::LinFrameTriggering, 0x1fffff)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::BlueprintDerivationTime, 0x1fff00), (EnumItem::CodeGenerationTime, 0x1fff00), (EnumItem::LinkTime, 0x1fff00), (EnumItem::PostBuild, 0x1fff00), (EnumItem::PreCompileTime, 0x1fff00), (EnumItem::SystemDesignTime, 0x1fff00)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::FunctionInhibitionNeeds, 0x1fffff)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::Read, 0x1c0000), (EnumItem::ReadWrite, 0x1c0000), (EnumItem::Write, 0x1c0000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::GeneralPurposePdu, 0x1fffc0)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::GenericTpConnection, 0x100000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::GlobalSupervisionEntity, 0xc00), (EnumItem::AliveSupervision, 0xe000), (EnumItem::DeadlineSupervision, 0xe000), (EnumItem::GlobalSupervision, 0x1ff000), (EnumItem::LocalSupervision, 0xe000), (EnumItem::LogicalSupervision, 0xe000), (EnumItem::PhmSupervision, 0xe000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::CrcNotSupported, 0x1fffc0), (EnumItem::CrcSupported, 0x1fffc0)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::CrcIgnored, 0x1fffc0), (EnumItem::CrcNotValidated, 0x1fffc0), (EnumItem::CrcOptional, 0x1fff00), (EnumItem::CrcValidated, 0x1fffc0)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::GlobalTimeDomain, 0x1fffc0)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::IcvNotSupported, 0x1c0000), (EnumItem::IcvSupported, 0x1c0000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::IcvIgnored, 0x1c0000), (EnumItem::IcvNotVerified, 0x1c0000), (EnumItem::IcvOptional, 0x1c0000), (EnumItem::IcvVerified, 0x1c0000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::GlobalTimeCanMaster, 0x1fffc0), (EnumItem::GlobalTimeEthMaster, 0x1fffc0), (EnumItem::GlobalTimeFrMaster, 0x1fffc0), (EnumItem::GlobalTimeMaster, 0x1fffc0), (EnumItem::UserDefinedGlobalTimeMaster, 0x1fff00)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::Dynamic, 0x180000), (EnumItem::TimeMaster, 0x180000), (EnumItem::TimeSlave, 0x180000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::GlobalTimeCanSlave, 0x1fffc0), (EnumItem::GlobalTimeEthSlave, 0x1fffc0), (EnumItem::GlobalTimeFrSlave, 0x1fffc0), (EnumItem::GlobalTimeSlave, 0x1fffc0), (EnumItem::UserDefinedGlobalTimeSlave, 0x1fff00)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::ComEventGrant, 0x1fc000), (EnumItem::ComFieldGrant, 0x1fc000), (EnumItem::ComFindServiceGrant, 0x1fc000), (EnumItem::ComGrant, 0x1f0000), (EnumItem::ComMethodGrant, 0x1fc000), (EnumItem::ComOfferServiceGrant, 0x1fc000), (EnumItem::ComTriggerGrant, 0x180000), (EnumItem::EthernetRawDataStreamGrant, 0x1f8000), (EnumItem::Grant, 0x1fc000), (EnumItem::RawDataStreamGrant, 0x1f8000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::AsIs, 0x1fffff), (EnumItem::FitToPage, 0x1fffff), (EnumItem::FitToText, 0x1fffff), (EnumItem::LimitToPage, 0x1fffff), (EnumItem::LimitToText, 0x1fffff), (EnumItem::Rotate180, 0x1fffff), (EnumItem::Rotate180LimitToText, 0x1fffff), (EnumItem::Rotate90Ccw, 0x1fffff), (EnumItem::Rotate90CcwFitToText, 0x1fffff), (EnumItem::Rotate90CcwLimitToText, 0x1fffff), (EnumItem::Rotate90Cw, 0x1fffff), (EnumItem::Rotate90CwFitToText, 0x1fffff), (EnumItem::Rotate90CwLimitToText, 0x1fffff)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::Bmp, 0x1fffc0), (EnumItem::Eps, 0x1fffff), (EnumItem::Gif, 0x1fffff), (EnumItem::Jpg, 0x1fffff), (EnumItem::Pdf, 0x1fffc0), (EnumItem::Png, 0x1fffc0), (EnumItem::Svg, 0x1fffff), (EnumItem::Tiff, 0x1fffc0)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::DontInvalidate, 0x1fffff), (EnumItem::ExternalReplacement, 0x1fffc0), (EnumItem::Keep, 0x1fffff), (EnumItem::Replace, 0x1fffff)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::Default, 0x1fffff), (EnumItem::ExternalReplacement, 0x1ffffc), (EnumItem::Ignore, 0x1fffff), (EnumItem::Invalid, 0x1fffff), (EnumItem::None, 0x1fffff), (EnumItem::Saturate, 0x1fffff)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::Indicate, 0x1ffffc), (EnumItem::Silent, 0x1ffffc)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::CanBeTerminated, 0x1fffff), (EnumItem::CanBeTerminatedAndRestarted, 0x1fffff), (EnumItem::NoSupport, 0x1fffff)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::None, 0x1fffff), (EnumItem::Replace, 0x1fffff), (EnumItem::ReplaceByTimeoutSubstitutionValue, 0x1fff00)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::Equal, 0xf000), (EnumItem::NotEqual, 0xf000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::Equal, 0xc00), (EnumItem::NotEqual, 0xc00)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::IsExpired, 0xfc00), (EnumItem::IsFailed, 0xfc00), (EnumItem::IsOk, 0xfc00), (EnumItem::IsStopped, 0xfc00)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::HealthChannel, 0xfc00), (EnumItem::HealthChannelExternalMode, 0xc00), (EnumItem::HealthChannelExternalStatus, 0xf000), (EnumItem::HealthChannelSupervision, 0xfc00)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::Deflate, 0x1f000), (EnumItem::Gzip, 0x1f000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::HwAttributeDef, 0x1fffff)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::HwCategory, 0x1fffff)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::HwDescriptionEntity, 0x1ffffc), (EnumItem::HwElement, 0x1fffff), (EnumItem::HwPin, 0x1ffffc), (EnumItem::HwPinGroup, 0x1ffffc), (EnumItem::HwType, 0x1ffffc)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::HwElement, 0x1fffff)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::HwPin, 0x1fffff)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::HwPinGroup, 0x1fffff)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::HwType, 0x1fffff)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::ContainerIPdu, 0x1fffc0), (EnumItem::DcmIPdu, 0x1fffff), (EnumItem::GeneralPurposeIPdu, 0x1ffff0), (EnumItem::IPdu, 0x1fffff), (EnumItem::ISignalIPdu, 0x1fffff), (EnumItem::J1939DcmIPdu, 0x1ffff8), (EnumItem::J1939ProtectedIPdu, 0x100000), (EnumItem::MultiplexedIPdu, 0x1fffff), (EnumItem::NPdu, 0x1fffff), (EnumItem::SecuredIPdu, 0x1fffc0), (EnumItem::UserDefinedIPdu, 0x1ffffc), (EnumItem::XcpPdu, 0x1ffff8)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::IPduPort, 0x1fffff)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::Deferred, 0x1fffe0), (EnumItem::Immediate, 0x1fffe0)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::IPduTriggering, 0x1)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::Clear, 0x1f8000), (EnumItem::Restart, 0x1f8000), (EnumItem::Trap, 0x1f8000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::Ah, 0x1f8000), (EnumItem::Esp, 0x1f8000), (EnumItem::None, 0x1f8000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::Any, 0x1f8000), (EnumItem::Icmp, 0x1f8000), (EnumItem::Tcp, 0x1f8000), (EnumItem::Udp, 0x1f8000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::Transport, 0x1f8000), (EnumItem::Tunnel, 0x1f8000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::Drop, 0x1f8000), (EnumItem::Ipsec, 0x1f8000), (EnumItem::Passthrough, 0x1f8000), (EnumItem::Reject, 0x1f8000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::IPv6ExtHeaderFilterList, 0x1fff00)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::ISignal, 0x1fffff)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::ISignalGroup, 0x1fffff)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::ISignalIPdu, 0x1fffff)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::ISignalIPduGroup, 0x1fffff)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::ISignalPort, 0x1fffff)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::ISignalToIPduMapping, 0x1fffff)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::ISignalTriggering, 0x1fffff)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::Array, 0x1fff00), (EnumItem::Primitive, 0x1fff00)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::AbstractAccessPoint, 0x1fff00), (EnumItem::AbstractCanCluster, 0x1fffff), (EnumItem::AbstractCanCommunicationConnector, 0x1fffff), (EnumItem::AbstractCanCommunicationController, 0x1fffff), (EnumItem::AbstractCanPhysicalChannel, 0x1fffff), (EnumItem::AbstractClassTailoring, 0x1fff00), (EnumItem::AbstractCryptoKeySlotInterface, 0x100000), (EnumItem::AbstractCryptoKeySlotToPortPrototypeMapping, 0x100000), (EnumItem::AbstractDoIpLogicAddressProps, 0x1f0000), (EnumItem::AbstractDoIpPortMapping, 0x100000), (EnumItem::AbstractEthernetFrame, 0x1fff00), (EnumItem::AbstractEvent, 0x1ffff8), (EnumItem::AbstractExecutionContext, 0x1fe000), (EnumItem::AbstractFunctionalClusterDesign, 0x100000), (EnumItem::AbstractIamRemoteSubject, 0x1f0000), (EnumItem::AbstractImplementationDataType, 0x1ff000), (EnumItem::AbstractImplementationDataTypeElement, 0x1fe000), (EnumItem::AbstractProvidedPortPrototype, 0x1ffff8), (EnumItem::AbstractRawDataStreamInterface, 0x1f0000), (EnumItem::AbstractRequiredPortPrototype, 0x1ffff8), (EnumItem::AbstractSecurityEventFilter, 0x1f0000), (EnumItem::AbstractSecurityIdsmInstanceFilter, 0x1f0000), (EnumItem::AbstractServiceInstance, 0x1ffff8), (EnumItem::AbstractSignalBasedToISignalTriggeringMapping, 0x1f8000), (EnumItem::AbstractSynchronizedTimeBaseInterface, 0x1f0000), (EnumItem::AclObjectSet, 0x1ffff8), (EnumItem::AclOperation, 0x1ffff8), (EnumItem::AclPermission, 0x1ffff8), (EnumItem::AclRole, 0x1ffff8), (EnumItem::Action, 0x1c00), (EnumItem::ActionItem, 0x1c00), (EnumItem::ActionList, 0x1c00), (EnumItem::AdaptiveApplicationSwComponentType, 0x1ffe00), (EnumItem::AdaptiveAutosarApplication, 0xe00), (EnumItem::AdaptiveFirewallModuleInstantiation, 0x1c0000), (EnumItem::AdaptiveFirewallToPortPrototypeMapping, 0x1c0000), (EnumItem::AdaptiveModuleInstantiation, 0x1ffe00), (EnumItem::AdaptivePlatformServiceInstance, 0x1ffe00), (EnumItem::AdaptiveSwcInternalBehavior, 0x1ffc00), (EnumItem::AgeConstraint, 0x1ffffc), (EnumItem::AggregationTailoring, 0x1fff00), (EnumItem::AliasNameSet, 0x1fffff), (EnumItem::AliveSupervision, 0x1ffc00), (EnumItem::Allocator, 0x1ffc00), (EnumItem::AnalyzedExecutionTime, 0x1fffff), (EnumItem::ApApplicationEndpoint, 0x1e0000), (EnumItem::ApApplicationError, 0x1fe000), (EnumItem::ApApplicationErrorDomain, 0x1fe000), (EnumItem::ApApplicationErrorSet, 0x1fe000), (EnumItem::ApSomeipTransformationProps, 0x1ffe00), (EnumItem::ApplicationActionItem, 0x1c00), (EnumItem::ApmcAbstractDefinition, 0x100000), (EnumItem::ApmcAbstractForeignReferenceDef, 0x100000), (EnumItem::ApmcAbstractInstanceReferenceDef, 0x100000), (EnumItem::ApmcAbstractInstanceReferenceValue, 0x100000), (EnumItem::ApmcAbstractReferenceValue, 0x100000), (EnumItem::ApmcBooleanParamDef, 0x100000), (EnumItem::ApmcChoiceContainerDef, 0x100000), (EnumItem::ApmcChoiceContainerReferenceDef, 0x100000), (EnumItem::ApmcConfigurationElementDef, 0x100000), (EnumItem::ApmcContainerDef, 0x100000), (EnumItem::ApmcContainerElementDef, 0x100000), (EnumItem::ApmcContainerElementValue, 0x100000), (EnumItem::ApmcContainerReferenceDef, 0x100000), (EnumItem::ApmcContainerReferenceValue, 0x100000), (EnumItem::ApmcContainerValue, 0x100000), (EnumItem::ApmcDefinitionCollection, 0x100000), (EnumItem::ApmcEnumerationLiteralDef, 0x100000), (EnumItem::ApmcEnumerationParamDef, 0x100000), (EnumItem::ApmcFloatParamDef, 0x100000), (EnumItem::ApmcForeignReferenceDef, 0x100000), (EnumItem::ApmcForeignReferenceValue, 0x100000), (EnumItem::ApmcFunctionalClusterDef, 0x100000), (EnumItem::ApmcFunctionalClusterValue, 0x100000), (EnumItem::ApmcInstanceReferenceDef, 0x100000), (EnumItem::ApmcInstanceReferenceValue, 0x100000), (EnumItem::ApmcIntegerParamDef, 0x100000), (EnumItem::ApmcNumericalParamValue, 0x100000), (EnumItem::ApmcParamConfContainerDef, 0x100000), (EnumItem::ApmcParameterDef, 0x100000), (EnumItem::ApmcParameterValue, 0x100000), (EnumItem::ApmcReferenceDef, 0x100000), (EnumItem::ApmcReferenceValue, 0x100000), (EnumItem::ApmcStringParamDef, 0x100000), (EnumItem::ApmcTextualParamValue, 0x100000), (EnumItem::ApmcUpstreamDocForeignReferenceDef, 0x100000), (EnumItem::ApmcUpstreamDocForeignReferenceValue, 0x100000), (EnumItem::ApmcUpstreamDocInstanceReferenceDef, 0x100000), (EnumItem::ApmcUpstreamDocInstanceReferenceValue, 0x100000), (EnumItem::ApmcUriForeignReferenceDef, 0x100000), (EnumItem::ApmcUriForeignReferenceValue, 0x100000), (EnumItem::ApmcUriInstanceReferenceDef, 0x100000), (EnumItem::ApmcUriInstanceReferenceValue, 0x100000), (EnumItem::ApmcValueCollection, 0x100000), (EnumItem::AppOsTaskProxyToEcuTaskProxyMapping, 0x1e0000), (EnumItem::ApplicabilityInfoSet, 0x180000), (EnumItem::ApplicationArrayDataType, 0x1fffff), (EnumItem::ApplicationArrayElement, 0x1fffff), (EnumItem::ApplicationAssocMapDataType, 0x1ffe00), (EnumItem::ApplicationAssocMapElement, 0x1ffe00), (EnumItem::ApplicationCompositeDataType, 0x1fffff), (EnumItem::ApplicationCompositeElementDataPrototype, 0x1fffff), (EnumItem::ApplicationDataType, 0x1fffff), (EnumItem::ApplicationDeferredDataType, 0x1f0000), (EnumItem::ApplicationEndpoint, 0x1ffff8), (EnumItem::ApplicationError, 0x1fffff), (EnumItem::ApplicationModeRequestPhmActionItem, 0xe000), (EnumItem::ApplicationInterface, 0x1e0000), (EnumItem::ApplicationPartition, 0x1fff00), (EnumItem::ApplicationPartitionToEcuPartitionMapping, 0x1fff00), (EnumItem::ApplicationPrimitiveDataType, 0x1fffff), (EnumItem::ApplicationRecordDataType, 0x1fffff), (EnumItem::ApplicationRecordElement, 0x1fffff), (EnumItem::ApplicationSwComponentType, 0x1fffff), (EnumItem::AppliedStandard, 0x180000), (EnumItem::ArElement, 0x1fffff), (EnumItem::ArPackage, 0x1fffff), (EnumItem::ArbitraryEventTriggering, 0x1fffff), (EnumItem::Arbitration, 0x1c00), (EnumItem::ArgumentDataPrototype, 0x1fffff), (EnumItem::ArtifactChecksum, 0x1e0000), (EnumItem::ArtifactChecksumToCryptoProviderMapping, 0x1e0000), (EnumItem::ArtifactLocator, 0x1c0000), (EnumItem::AssemblySwConnector, 0x1fffff), (EnumItem::AsynchronousServerCallPoint, 0x1fffff), (EnumItem::AsynchronousServerCallResultPoint, 0x1fffff), (EnumItem::AsynchronousServerCallReturnsEvent, 0x1fffff), (EnumItem::AtomicSwComponentType, 0x1fffff), (EnumItem::AtpBlueprint, 0x1ffffe), (EnumItem::AtpBlueprintable, 0x1ffffe), (EnumItem::AtpClassifier, 0x1fffff), (EnumItem::AtpFeature, 0x1fffff), (EnumItem::AtpPrototype, 0x1fffff), (EnumItem::AtpStructureElement, 0x1fffff), (EnumItem::AtpType, 0x1fffff), (EnumItem::AttributeTailoring, 0x1fff00), (EnumItem::AutosarDataPrototype, 0x1fffff), (EnumItem::AutosarDataType, 0x1fffff), (EnumItem::AutosarOperationArgumentInstance, 0x1ffffc), (EnumItem::AutosarVariableInstance, 0x1ffffc), (EnumItem::BackgroundEvent, 0x1fffff), (EnumItem::BaseType, 0x1fffff), (EnumItem::BinaryManifestAddressableObject, 0x1f0000), (EnumItem::BinaryManifestItem, 0x1f0000), (EnumItem::BinaryManifestItemDefinition, 0x1f0000), (EnumItem::BinaryManifestMetaDataField, 0x1f0000), (EnumItem::BinaryManifestProvideResource, 0x1f0000), (EnumItem::BinaryManifestRequireResource, 0x1f0000), (EnumItem::BinaryManifestResource, 0x1f0000), (EnumItem::BinaryManifestResourceDefinition, 0x1f0000), (EnumItem::BlockState, 0x1f0000), (EnumItem::BlueprintMappingSet, 0x1fffff), (EnumItem::BswAsynchronousServerCallReturnsEvent, 0x1ffff8), (EnumItem::BswBackgroundEvent, 0x1fffff), (EnumItem::BswCalledEntity, 0x1fffff), (EnumItem::BswCompositionTiming, 0x1fe000), (EnumItem::BswDataReceivedEvent, 0x1ffff8), (EnumItem::BswDebugInfo, 0x1fffff), (EnumItem::BswEntryRelationshipSet, 0x1fff00), (EnumItem::BswEvent, 0x1fffff), (EnumItem::BswExternalTriggerOccurredEvent, 0x1fffff), (EnumItem::BswImplementation, 0x1fffff), (EnumItem::BswInternalBehavior, 0x1fffff), (EnumItem::BswInternalTriggerOccurredEvent, 0x1fffff), (EnumItem::BswInternalTriggeringPoint, 0x1fffff), (EnumItem::BswInterruptEntity, 0x1fffff), (EnumItem::BswInterruptEvent, 0x180000), (EnumItem::BswMgrNeeds, 0x1ffffc), (EnumItem::BswModeManagerErrorEvent, 0x1ffff8), (EnumItem::BswModeSwitchEvent, 0x1fffff), (EnumItem::BswModeSwitchedAckEvent, 0x1fffff), (EnumItem::BswModuleDependency, 0x1fffff), (EnumItem::BswModuleDescription, 0x1fffff), (EnumItem::BswModuleEntity, 0x1fffff), (EnumItem::BswModuleEntry, 0x1fffff), (EnumItem::BswModuleTiming, 0x1fffff), (EnumItem::BswOperationInvokedEvent, 0x1ffff8), (EnumItem::BswOsTaskExecutionEvent, 0x1f0000), (EnumItem::BswSchedulableEntity, 0x1fffff), (EnumItem::BswScheduleEvent, 0x1ffff8), (EnumItem::BswServiceDependencyIdent, 0x1fffc0), (EnumItem::BswTimingEvent, 0x1fffff), (EnumItem::BuildAction, 0x1ffff8), (EnumItem::BuildActionEntity, 0x1ffff8), (EnumItem::BuildActionEnvironment, 0x1ffff8), (EnumItem::BuildActionManifest, 0x1ffff8), (EnumItem::BulkNvDataDescriptor, 0x1f8000), (EnumItem::BurstPatternEventTriggering, 0x1fffff), (EnumItem::BusMirrorChannelMapping, 0x1fe000), (EnumItem::BusMirrorChannelMappingCan, 0x1fe000), (EnumItem::BusMirrorChannelMappingFlexray, 0x1fe000), (EnumItem::BusMirrorChannelMappingIp, 0x1fe000), (EnumItem::BusMirrorChannelMappingUserDefined, 0x1fe000), (EnumItem::CalibrationParameterValueSet, 0x1fffff), (EnumItem::CanCluster, 0x1fffff), (EnumItem::CanCommunicationConnector, 0x1fffff), (EnumItem::CanCommunicationController, 0x1fffff), (EnumItem::CanFrame, 0x1fffff), (EnumItem::CanFrameTriggering, 0x1fffff), (EnumItem::CanNmCluster, 0x1fffff), (EnumItem::CanNmNode, 0x1fffff), (EnumItem::CanPhysicalChannel, 0x1fffff), (EnumItem::CanTpAddress, 0x1ffffe), (EnumItem::CanTpChannel, 0x1ffffe), (EnumItem::CanTpConfig, 0x1fffff), (EnumItem::CanTpNode, 0x1fffff), (EnumItem::CanXlProps, 0x1c0000), (EnumItem::Chapter, 0x1fffff), (EnumItem::ChargeManagerNeeds, 0x100000), (EnumItem::CheckpointTransition, 0x1ffc00), (EnumItem::ClassContentConditional, 0x1fff00), (EnumItem::ClientIdDefinition, 0x1fffc0), (EnumItem::ClientIdDefinitionSet, 0x1fffc0), (EnumItem::ClientServerInterface, 0x1fffff), (EnumItem::ClientServerInterfaceMapping, 0x1fffff), (EnumItem::ClientServerInterfaceToBswModuleEntryBlueprintMapping, 0x1fff00), (EnumItem::ClientServerOperation, 0x1fffff), (EnumItem::CmModuleInstantiation, 0x100000), (EnumItem::Code, 0x1fffff), (EnumItem::CollectableElement, 0x1fffff), (EnumItem::Collection, 0x1fffff), (EnumItem::ComCertificateToCryptoCertificateMapping, 0x1f0000), (EnumItem::ComEventGrant, 0x1fc000), (EnumItem::ComEventGrantDesign, 0x1fc000), (EnumItem::ComFieldGrant, 0x1fc000), (EnumItem::ComFieldGrantDesign, 0x1fc000), (EnumItem::ComFindServiceGrant, 0x1fc000), (EnumItem::ComFindServiceGrantDesign, 0x1fc000), (EnumItem::ComGrant, 0x1f0000), (EnumItem::ComGrantDesign, 0x1f0000), (EnumItem::ComKeyToCryptoKeySlotMapping, 0x1f0000), (EnumItem::ComManagementMapping, 0x1fe000), (EnumItem::ComMethodGrant, 0x1fc000), (EnumItem::ComMethodGrantDesign, 0x1fc000), (EnumItem::ComMgrUserNeeds, 0x1fffff), (EnumItem::ComOfferServiceGrant, 0x1fc000), (EnumItem::ComOfferServiceGrantDesign, 0x1fc000), (EnumItem::ComSecOcToCryptoKeySlotMapping, 0x1f0000), (EnumItem::ComTriggerGrant, 0x180000), (EnumItem::ComTriggerGrantDesign, 0x1e0000), (EnumItem::CommConnectorPort, 0x1fffff), (EnumItem::CommunicationCluster, 0x1fffff), (EnumItem::CommunicationConnector, 0x1fffff), (EnumItem::CommunicationController, 0x1fffff), (EnumItem::Compiler, 0x1fffff), (EnumItem::ComplexDeviceDriverSwComponentType, 0x1fffff), (EnumItem::CompositeInterface, 0x18000), (EnumItem::CompositionPPortToExecutablePPortMapping, 0x1f8000), (EnumItem::CompositionPortToExecutablePortMapping, 0x1f8000), (EnumItem::CompositionRPortToExecutableRPortMapping, 0x1f8000), (EnumItem::CompositionSwComponentType, 0x1fffff), (EnumItem::CompuMethod, 0x1fffff), (EnumItem::ConcreteClassTailoring, 0x1fff00), (EnumItem::ConcretePatternEventTriggering, 0x1fffff), (EnumItem::ConsistencyNeeds, 0x1ffff8), (EnumItem::ConsistencyNeedsBlueprintSet, 0x1ffff8), (EnumItem::ConstantSpecification, 0x1fffff), (EnumItem::ConstantSpecificationMappingSet, 0x1fffff), (EnumItem::ConstraintTailoring, 0x1fff00), (EnumItem::ConsumedEventGroup, 0x1ffff8), (EnumItem::ConsumedProvidedServiceInstanceGroup, 0x1f8000), (EnumItem::ConsumedServiceInstance, 0x1ffff8), (EnumItem::ContainerIPdu, 0x1fffc0), (EnumItem::CouplingElement, 0x1ffff8), (EnumItem::CouplingElementAbstractDetails, 0x180000), (EnumItem::CouplingElementSwitchDetails, 0x180000), (EnumItem::CouplingPort, 0x1ffff8), (EnumItem::CouplingPortAbstractShaper, 0x180000), (EnumItem::CouplingPortAsynchronousTrafficShaper, 0x180000), (EnumItem::CouplingPortCreditBasedShaper, 0x180000), (EnumItem::CouplingPortEnhancedTrafficShaper, 0x100000), (EnumItem::CouplingPortFifo, 0x1fffc0), (EnumItem::CouplingPortScheduler, 0x1fffc0), (EnumItem::CouplingPortShaper, 0x1fffc0), (EnumItem::CouplingPortStructuralElement, 0x1fffc0), (EnumItem::CpSoftwareCluster, 0x1f0000), (EnumItem::CpSoftwareClusterBinaryManifestDescriptor, 0x1f0000), (EnumItem::CpSoftwareClusterCommunicationResource, 0x1f0000), (EnumItem::CpSoftwareClusterMappingSet, 0x1f0000), (EnumItem::CpSoftwareClusterResource, 0x1f0000), (EnumItem::CpSoftwareClusterResourcePool, 0x1f0000), (EnumItem::CpSoftwareClusterResourceToApplicationPartitionMapping, 0x1f0000), (EnumItem::CpSoftwareClusterServiceResource, 0x1f0000), (EnumItem::CpSoftwareClusterToApplicationPartitionMapping, 0x180000), (EnumItem::CpSoftwareClusterToEcuInstanceMapping, 0x1f0000), (EnumItem::CpSoftwareClusterToResourceMapping, 0x1f0000), (EnumItem::CpSwClusterResourceToDiagDataElemMapping, 0x1e0000), (EnumItem::CpSwClusterResourceToDiagFunctionIdMapping, 0x1e0000), (EnumItem::CpSwClusterToDiagEventMapping, 0x1e0000), (EnumItem::CpSwClusterToDiagRoutineSubfunctionMapping, 0x1e0000), (EnumItem::CppImplementationDataType, 0x1ff000), (EnumItem::CppImplementationDataTypeElement, 0x1ff000), (EnumItem::CryptoDriver, 0x1c00), (EnumItem::CryptoJob, 0x1c00), (EnumItem::CryptoCertificate, 0x1f0000), (EnumItem::CryptoCertificateInterface, 0x1f0000), (EnumItem::CryptoCertificateKeySlotNeeds, 0x1f0000), (EnumItem::CryptoCertificateToPortPrototypeMapping, 0x1f0000), (EnumItem::CryptoEllipticCurveProps, 0x1e0000), (EnumItem::CryptoInterface, 0x1f0000), (EnumItem::CryptoKeyManagementNeeds, 0x1f0000), (EnumItem::CryptoKeySlot, 0x1f9c00), (EnumItem::CryptoKeySlotClientInterface, 0x100000), (EnumItem::CryptoKeySlotDesign, 0x100000), (EnumItem::CryptoKeySlotInterface, 0x1f0000), (EnumItem::CryptoKeySlotToClientPortPrototypeMapping, 0x100000), (EnumItem::CryptoKeySlotToPortPrototypeMapping, 0x1f0000), (EnumItem::CryptoKeySlotUsageDesign, 0x100000), (EnumItem::CryptoKeySlotUsageDesignMapping, 0x100000), (EnumItem::CryptoKeySlotUserDesign, 0x100000), (EnumItem::CryptoKeySlotUserDesignMapping, 0x100000), (EnumItem::CryptoModuleInstantiation, 0x1f9c00), (EnumItem::CryptoNeed, 0x1c00), (EnumItem::CryptoNeedToCryptoJobMapping, 0x1c00), (EnumItem::CryptoNeedToPortPrototypeMapping, 0x1fc00), (EnumItem::CryptoPrimitive, 0x1c00), (EnumItem::CryptoNeeds, 0x1f0000), (EnumItem::CryptoProvider, 0x1f0000), (EnumItem::CryptoProviderInterface, 0x1f0000), (EnumItem::CryptoProviderToPortPrototypeMapping, 0x1f0000), (EnumItem::CryptoServiceCertificate, 0x1fe000), (EnumItem::CryptoServiceJobNeeds, 0x1fe000), (EnumItem::CryptoServiceKey, 0x1fe000), (EnumItem::CryptoServiceMapping, 0x1fe000), (EnumItem::CryptoServiceNeeds, 0x1fffff), (EnumItem::CryptoServicePrimitive, 0x1fe000), (EnumItem::CryptoServiceQueue, 0x1f8000), (EnumItem::CryptoSignatureScheme, 0x1e0000), (EnumItem::CryptoTrustMasterInterface, 0x1f0000), (EnumItem::CustomCppImplementationDataType, 0x1fe000), (EnumItem::DataConstr, 0x1fffff), (EnumItem::DataExchangePoint, 0x1fff00), (EnumItem::DataFormatElementReference, 0x1fff00), (EnumItem::DataFormatElementScope, 0x1fff00), (EnumItem::DataInterface, 0x1fffff), (EnumItem::DataPrototype, 0x1fffff), (EnumItem::DataPrototypeGroup, 0x1ffff8), (EnumItem::DataPrototypeTransformationPropsIdent, 0x100000), (EnumItem::DataReceiveErrorEvent, 0x1fffff), (EnumItem::DataReceivedEvent, 0x1fffff), (EnumItem::DataSendCompletedEvent, 0x1fffff), (EnumItem::DataTransformation, 0x1fffc0), (EnumItem::DataTransformationSet, 0x1fffc0), (EnumItem::DataTypeMappingSet, 0x1fffff), (EnumItem::DataWriteCompletedEvent, 0x1fffff), (EnumItem::DcmIPdu, 0x1fffff), (EnumItem::DdsCpConfig, 0x180000), (EnumItem::DdsCpConsumedServiceInstance, 0x180000), (EnumItem::DdsCpDomain, 0x180000), (EnumItem::DdsCpPartition, 0x180000), (EnumItem::DdsCpProvidedServiceInstance, 0x180000), (EnumItem::DdsCpQosProfile, 0x180000), (EnumItem::DdsCpServiceInstance, 0x180000), (EnumItem::DdsCpTopic, 0x180000), (EnumItem::DdsDomainRange, 0x1e0000), (EnumItem::DdsEventDeployment, 0x1ff000), (EnumItem::DdsFieldDeployment, 0x1fe000), (EnumItem::DdsMethodDeployment, 0xe000), (EnumItem::DdsProvidedServiceInstance, 0x1fe000), (EnumItem::DdsRequiredServiceInstance, 0x1fe000), (EnumItem::DdsRpcServiceDeployment, 0xe000), (EnumItem::DdsSecureComProps, 0x1e0000), (EnumItem::DdsSecureGovernance, 0x1e0000), (EnumItem::DdsServiceInstanceToMachineMapping, 0x1ff000), (EnumItem::DdsServiceInterfaceDeployment, 0x1ff000), (EnumItem::DdsTopicAccessRule, 0x1e0000), (EnumItem::DeadlineSupervision, 0x1ffc00), (EnumItem::DelegationSwConnector, 0x1fffff), (EnumItem::DependencyOnArtifact, 0x1fffff), (EnumItem::DeterministicClient, 0x7e000), (EnumItem::DeterministicClientResourceNeeds, 0x7e000), (EnumItem::DeterministicSyncInstantiation, 0x40000), (EnumItem::DeterministicSyncMaster, 0x40000), (EnumItem::DeterministicSyncMasterToTimeBaseConsumerMapping, 0x40000), (EnumItem::DevelopmentError, 0x1fff00), (EnumItem::DiagEventDebounceAlgorithm, 0x1fffff), (EnumItem::DiagEventDebounceCounterBased, 0x1ffffe), (EnumItem::DiagEventDebounceMonitorInternal, 0x1ffffe), (EnumItem::DiagEventDebounceTimeBased, 0x1ffffe), (EnumItem::DiagnosticAbstractAliasEvent, 0x1fff00), (EnumItem::DiagnosticAbstractDataIdentifier, 0x1fffc0), (EnumItem::DiagnosticAbstractDataIdentifierInterface, 0x1fc000), (EnumItem::DiagnosticAbstractRoutineInterface, 0x1fc000), (EnumItem::DiagnosticAccessPermission, 0x1fffc0), (EnumItem::DiagnosticAging, 0x1fffc0), (EnumItem::DiagnosticAuthRole, 0x1e0000), (EnumItem::DiagnosticAuthTransmitCertificate, 0x180000), (EnumItem::DiagnosticAuthTransmitCertificateEvaluation, 0x180000), (EnumItem::DiagnosticAuthTransmitCertificateMapping, 0x180000), (EnumItem::DiagnosticAuthentication, 0x1e0000), (EnumItem::DiagnosticAuthenticationClass, 0x1e0000), (EnumItem::DiagnosticAuthenticationConfiguration, 0x1e0000), (EnumItem::DiagnosticAuthenticationInterface, 0x1e0000), (EnumItem::DiagnosticAuthenticationPortMapping, 0x1e0000), (EnumItem::DiagnosticCapabilityElement, 0x1fffff), (EnumItem::DiagnosticClearCondition, 0x1fe000), (EnumItem::DiagnosticClearConditionGroup, 0x1fe000), (EnumItem::DiagnosticClearConditionNeeds, 0x1fc000), (EnumItem::DiagnosticClearConditionPortMapping, 0x1fc000), (EnumItem::DiagnosticClearDiagnosticInformation, 0x1fffc0), (EnumItem::DiagnosticClearDiagnosticInformationClass, 0x1fffc0), (EnumItem::DiagnosticClearResetEmissionRelatedInfo, 0x1fff00), (EnumItem::DiagnosticClearResetEmissionRelatedInfoClass, 0x1fff00), (EnumItem::DiagnosticComControl, 0x1fffc0), (EnumItem::DiagnosticComControlClass, 0x1fffc0), (EnumItem::DiagnosticComControlInterface, 0x1e0000), (EnumItem::DiagnosticCommonElement, 0x1fffc0), (EnumItem::DiagnosticCommunicationManagerNeeds, 0x1fffff), (EnumItem::DiagnosticComponentNeeds, 0x1fff00), (EnumItem::DiagnosticCondition, 0x1fffc0), (EnumItem::DiagnosticConditionGroup, 0x1fffc0), (EnumItem::DiagnosticConditionInterface, 0x1fc000), (EnumItem::DiagnosticConnectedIndicator, 0x1fffc0), (EnumItem::DiagnosticConnection, 0x1fffc0), (EnumItem::DiagnosticContributionSet, 0x1fffc0), (EnumItem::DiagnosticControlDtcSetting, 0x1fffc0), (EnumItem::DiagnosticControlDtcSettingClass, 0x1fffc0), (EnumItem::DiagnosticControlNeeds, 0x1fff00), (EnumItem::DiagnosticCustomServiceClass, 0x1fffc0), (EnumItem::DiagnosticCustomServiceInstance, 0x1fe000), (EnumItem::DiagnosticDataByIdentifier, 0x1fffc0), (EnumItem::DiagnosticDataElement, 0x1fffc0), (EnumItem::DiagnosticDataElementInterface, 0x1fc000), (EnumItem::DiagnosticDataIdentifier, 0x1fffc0), (EnumItem::DiagnosticDataIdentifierGenericInterface, 0x1fc000), (EnumItem::DiagnosticDataIdentifierInterface, 0x1fc000), (EnumItem::DiagnosticDataIdentifierSet, 0x1fffc0), (EnumItem::DiagnosticDataPortMapping, 0x1e0000), (EnumItem::DiagnosticDataTransfer, 0x1fffc0), (EnumItem::DiagnosticDataTransferClass, 0x1fffc0), (EnumItem::DiagnosticDeAuthentication, 0x1e0000), (EnumItem::DiagnosticDebounceAlgorithmProps, 0x1e0000), (EnumItem::DiagnosticDemProvidedDataMapping, 0x1fffc0), (EnumItem::DiagnosticDoIpActivationLineInterface, 0x1f8000), (EnumItem::DiagnosticDoIpActivationLinePortMapping, 0x100000), (EnumItem::DiagnosticDoIpEntityIdentificationInterface, 0x1c0000), (EnumItem::DiagnosticDoIpEntityIdentificationPortMapping, 0x100000), (EnumItem::DiagnosticDoIpGroupIdentificationInterface, 0x1fc000), (EnumItem::DiagnosticDoIpGroupIdentificationPortMapping, 0x100000), (EnumItem::DiagnosticDoIpPowerModeInterface, 0x1fc000), (EnumItem::DiagnosticDoIpPowerModePortMapping, 0x100000), (EnumItem::DiagnosticDoIpTriggerVehicleAnnouncementInterface, 0x1f8000), (EnumItem::DiagnosticDoIpTriggerVehicleAnnouncementPortMapping, 0x100000), (EnumItem::DiagnosticDownloadInterface, 0x1fc000), (EnumItem::DiagnosticDtcInformationInterface, 0x1fc000), (EnumItem::DiagnosticDynamicDataIdentifier, 0x1fffc0), (EnumItem::DiagnosticDynamicallyDefineDataIdentifier, 0x1fffc0), (EnumItem::DiagnosticDynamicallyDefineDataIdentifierClass, 0x1fffc0), (EnumItem::DiagnosticEcuInstanceProps, 0x1fff00), (EnumItem::DiagnosticEcuReset, 0x1fffc0), (EnumItem::DiagnosticEcuResetClass, 0x1fffc0), (EnumItem::DiagnosticEcuResetInterface, 0x1f0000), (EnumItem::DiagnosticEnableCondition, 0x1fffc0), (EnumItem::DiagnosticEnableConditionGroup, 0x1fffc0), (EnumItem::DiagnosticEnableConditionNeeds, 0x1ffff0), (EnumItem::DiagnosticEnableConditionPortMapping, 0x1fffc0), (EnumItem::DiagnosticEnvironmentalCondition, 0x1fff00), (EnumItem::DiagnosticEvent, 0x1fffc0), (EnumItem::DiagnosticEventInfoNeeds, 0x1ffff8), (EnumItem::DiagnosticEventInterface, 0x1fc000), (EnumItem::DiagnosticEventManagerNeeds, 0x1fffff), (EnumItem::DiagnosticEventNeeds, 0x1fffff), (EnumItem::DiagnosticEventPortMapping, 0x1fffc0), (EnumItem::DiagnosticEventToDebounceAlgorithmMapping, 0x1fffc0), (EnumItem::DiagnosticEventToEnableConditionGroupMapping, 0x1fffc0), (EnumItem::DiagnosticEventToOperationCycleMapping, 0x1fffc0), (EnumItem::DiagnosticEventToSecurityEventMapping, 0x1f0000), (EnumItem::DiagnosticEventToStorageConditionGroupMapping, 0x1fffc0), (EnumItem::DiagnosticEventToTroubleCodeJ1939Mapping, 0x1fe000), (EnumItem::DiagnosticEventToTroubleCodeUdsMapping, 0x1fffc0), (EnumItem::DiagnosticExtendedDataRecord, 0x1fffc0), (EnumItem::DiagnosticExternalAuthenticationInterface, 0x1e0000), (EnumItem::DiagnosticExternalAuthenticationPortMapping, 0x1e0000), (EnumItem::DiagnosticFimAliasEvent, 0x1fff00), (EnumItem::DiagnosticFimAliasEventGroup, 0x1fff00), (EnumItem::DiagnosticFimAliasEventGroupMapping, 0x1fff00), (EnumItem::DiagnosticFimAliasEventMapping, 0x1fff00), (EnumItem::DiagnosticFimEventGroup, 0x1fff00), (EnumItem::DiagnosticFimFunctionMapping, 0x1fff00), (EnumItem::DiagnosticFreezeFrame, 0x1fffc0), (EnumItem::DiagnosticFunctionIdentifier, 0x1fff00), (EnumItem::DiagnosticFunctionIdentifierInhibit, 0x1fff00), (EnumItem::DiagnosticFunctionInhibitSource, 0x1fff00), (EnumItem::DiagnosticGenericUdsInterface, 0x1fc000), (EnumItem::DiagnosticGenericUdsNeeds, 0x1fc000), (EnumItem::DiagnosticGenericUdsPortMapping, 0xc000), (EnumItem::DiagnosticIndicator, 0x1fffc0), (EnumItem::DiagnosticIndicatorInterface, 0x1fc000), (EnumItem::DiagnosticIndicatorNeeds, 0x1fc000), (EnumItem::DiagnosticIndicatorPortMapping, 0x1fc000), (EnumItem::DiagnosticInfoType, 0x1fff00), (EnumItem::DiagnosticInhibitSourceEventMapping, 0x1fff00), (EnumItem::DiagnosticIoControl, 0x1fffc0), (EnumItem::DiagnosticIoControlClass, 0x1fffc0), (EnumItem::DiagnosticIoControlNeeds, 0x1fffff), (EnumItem::DiagnosticIumpr, 0x1fff00), (EnumItem::DiagnosticIumprDenominatorGroup, 0x1fff00), (EnumItem::DiagnosticIumprGroup, 0x1fff00), (EnumItem::DiagnosticIumprToFunctionIdentifierMapping, 0x1e0000), (EnumItem::DiagnosticJ1939ExpandedFreezeFrame, 0x1fff00), (EnumItem::DiagnosticJ1939FreezeFrame, 0x1fff00), (EnumItem::DiagnosticJ1939Node, 0x1fff00), (EnumItem::DiagnosticJ1939Spn, 0x1fff00), (EnumItem::DiagnosticJ1939SpnMapping, 0x1fff00), (EnumItem::DiagnosticJ1939SwMapping, 0x1fff00), (EnumItem::DiagnosticMapping, 0x1fffc0), (EnumItem::DiagnosticMasterToSlaveEventMapping, 0x1fe000), (EnumItem::DiagnosticMasterToSlaveEventMappingSet, 0x1fe000), (EnumItem::DiagnosticMeasurementIdentifier, 0x1fff00), (EnumItem::DiagnosticMemoryAddressableRangeAccess, 0x1fffc0), (EnumItem::DiagnosticMemoryByAddress, 0x1fffc0), (EnumItem::DiagnosticMemoryDestination, 0x1fffc0), (EnumItem::DiagnosticMemoryDestinationMirror, 0x1fffc0), (EnumItem::DiagnosticMemoryDestinationPortMapping, 0x1fc000), (EnumItem::DiagnosticMemoryDestinationPrimary, 0x1fffc0), (EnumItem::DiagnosticMemoryDestinationUserDefined, 0x1fffc0), (EnumItem::DiagnosticMemoryIdentifier, 0x1fffc0), (EnumItem::DiagnosticMonitorInterface, 0x1fc000), (EnumItem::DiagnosticMonitorPortMapping, 0x1e0000), (EnumItem::DiagnosticMultipleConditionInterface, 0x180000), (EnumItem::DiagnosticMultipleConditionPortMapping, 0x180000), (EnumItem::DiagnosticMultipleEventInterface, 0x180000), (EnumItem::DiagnosticMultipleEventPortMapping, 0x180000), (EnumItem::DiagnosticMultipleMonitorInterface, 0x180000), (EnumItem::DiagnosticMultipleMonitorPortMapping, 0x180000), (EnumItem::DiagnosticMultipleResourceInterface, 0x180000), (EnumItem::DiagnosticMultipleResourcePortMapping, 0x180000), (EnumItem::DiagnosticOperationCycle, 0x1fffc0), (EnumItem::DiagnosticOperationCycleInterface, 0x1fc000), (EnumItem::DiagnosticOperationCycleNeeds, 0x1ffff0), (EnumItem::DiagnosticOperationCyclePortMapping, 0x1fffc0), (EnumItem::DiagnosticParameterElement, 0x1c0000), (EnumItem::DiagnosticParameterIdent, 0x1c0000), (EnumItem::DiagnosticParameterIdentifier, 0x1fff00), (EnumItem::DiagnosticPortInterface, 0x1fc000), (EnumItem::DiagnosticPowertrainFreezeFrame, 0x1fff00), (EnumItem::DiagnosticProofOfOwnership, 0x1e0000), (EnumItem::DiagnosticProtocol, 0x1fff00), (EnumItem::DiagnosticProvidedDataMapping, 0x1fc000), (EnumItem::DiagnosticReadDataByIdentifier, 0x1fffc0), (EnumItem::DiagnosticReadDataByIdentifierClass, 0x1fffc0), (EnumItem::DiagnosticReadDataByPeriodicId, 0x1fffc0), (EnumItem::DiagnosticReadDataByPeriodicIdClass, 0x1fffc0), (EnumItem::DiagnosticReadDtcInformation, 0x1fffc0), (EnumItem::DiagnosticReadDtcInformationClass, 0x1fffc0), (EnumItem::DiagnosticReadMemoryByAddress, 0x1fffc0), (EnumItem::DiagnosticReadMemoryByAddressClass, 0x1fffc0), (EnumItem::DiagnosticReadScalingDataByIdentifier, 0x1fe000), (EnumItem::DiagnosticReadScalingDataByIdentifierClass, 0x1fe000), (EnumItem::DiagnosticRequestControlOfOnBoardDevice, 0x1fff00), (EnumItem::DiagnosticRequestControlOfOnBoardDeviceClass, 0x1fff00), (EnumItem::DiagnosticRequestCurrentPowertrainData, 0x1fff00), (EnumItem::DiagnosticRequestCurrentPowertrainDataClass, 0x1fff00), (EnumItem::DiagnosticRequestDownload, 0x1fffc0), (EnumItem::DiagnosticRequestDownloadClass, 0x1fffc0), (EnumItem::DiagnosticRequestEmissionRelatedDtc, 0x1fff00), (EnumItem::DiagnosticRequestEmissionRelatedDtcClass, 0x1fff00), (EnumItem::DiagnosticRequestEmissionRelatedDtcPermanentStatus, 0x1fff00), (EnumItem::DiagnosticRequestEmissionRelatedDtcPermanentStatusClass, 0x1fff00), (EnumItem::DiagnosticRequestFileTransfer, 0x1fffc0), (EnumItem::DiagnosticRequestFileTransferClass, 0x1fffc0), (EnumItem::DiagnosticRequestFileTransferInterface, 0x1c0000), (EnumItem::DiagnosticRequestFileTransferNeeds, 0x1fe000), (EnumItem::DiagnosticRequestOnBoardMonitoringTestResults, 0x1fff00), (EnumItem::DiagnosticRequestOnBoardMonitoringTestResultsClass, 0x1fff00), (EnumItem::DiagnosticRequestPowertrainFreezeFrameData, 0x1fff00), (EnumItem::DiagnosticRequestPowertrainFreezeFrameDataClass, 0x1fff00), (EnumItem::DiagnosticRequestRoutineResults, 0x1fffc0), (EnumItem::DiagnosticRequestUpload, 0x1fffc0), (EnumItem::DiagnosticRequestUploadClass, 0x1fffc0), (EnumItem::DiagnosticRequestVehicleInfo, 0x1fff00), (EnumItem::DiagnosticRequestVehicleInfoClass, 0x1fff00), (EnumItem::DiagnosticResponseOnEvent, 0x1fffc0), (EnumItem::DiagnosticResponseOnEventClass, 0x1fffc0), (EnumItem::DiagnosticResponseOnEventNeeds, 0x1fff00), (EnumItem::DiagnosticRoutine, 0x1fffc0), (EnumItem::DiagnosticRoutineControl, 0x1fffc0), (EnumItem::DiagnosticRoutineControlClass, 0x1fffc0), (EnumItem::DiagnosticRoutineGenericInterface, 0x1fc000), (EnumItem::DiagnosticRoutineInterface, 0x1fc000), (EnumItem::DiagnosticRoutineNeeds, 0x1fffff), (EnumItem::DiagnosticRoutineSubfunction, 0x1ff800), (EnumItem::DiagnosticSecureCodingMapping, 0x180000), (EnumItem::DiagnosticSecurityAccess, 0x1fffc0), (EnumItem::DiagnosticSecurityAccessClass, 0x1fffc0), (EnumItem::DiagnosticSecurityEventReportingModeMapping, 0x1f0000), (EnumItem::DiagnosticSecurityLevel, 0x1fffc0), (EnumItem::DiagnosticSecurityLevelInterface, 0x1fc000), (EnumItem::DiagnosticSecurityLevelPortMapping, 0x1fc000), (EnumItem::DiagnosticServiceClass, 0x1fffc0), (EnumItem::DiagnosticServiceDataIdentifierMapping, 0x2000), (EnumItem::DiagnosticServiceDataIdentifierPortMapping, 0x1c000), (EnumItem::DiagnosticServiceDataMapping, 0x1fffc0), (EnumItem::DiagnosticServiceGenericMapping, 0x1f0000), (EnumItem::DiagnosticServiceInstance, 0x1fffc0), (EnumItem::DiagnosticServiceSwMapping, 0x1fffc0), (EnumItem::DiagnosticServiceTable, 0x1fffc0), (EnumItem::DiagnosticServiceValidationInterface, 0x1fc000), (EnumItem::DiagnosticServiceValidationMapping, 0x1e0000), (EnumItem::DiagnosticSession, 0x1fffc0), (EnumItem::DiagnosticSessionControl, 0x1fffc0), (EnumItem::DiagnosticSessionControlClass, 0x1fffc0), (EnumItem::DiagnosticSoftwareClusterProps, 0x3fc00), (EnumItem::DiagnosticSovdAuthorizationInterface, 0x1c0000), (EnumItem::DiagnosticSovdAuthorizationPortMapping, 0x1c0000), (EnumItem::DiagnosticSovdBulkData, 0x180000), (EnumItem::DiagnosticSovdBulkDataInterface, 0x180000), (EnumItem::DiagnosticSovdBulkDataPortMapping, 0x180000), (EnumItem::DiagnosticSovdConfiguration, 0x180000), (EnumItem::DiagnosticSovdConfigurationBulkData, 0x180000), (EnumItem::DiagnosticSovdConfigurationDataIdentifierMapping, 0x180000), (EnumItem::DiagnosticSovdConfigurationInterface, 0x180000), (EnumItem::DiagnosticSovdConfigurationParameter, 0x180000), (EnumItem::DiagnosticSovdConfigurationPortMapping, 0x180000), (EnumItem::DiagnosticSovdFaultMemoryAccess, 0x100000), (EnumItem::DiagnosticSovdLock, 0x1c0000), (EnumItem::DiagnosticSovdLog, 0x180000), (EnumItem::DiagnosticSovdMethod, 0x180000), (EnumItem::DiagnosticSovdMethodPrimitive, 0x180000), (EnumItem::DiagnosticSovdPortInterface, 0x1c0000), (EnumItem::DiagnosticSovdProximityChallengeInterface, 0x1c0000), (EnumItem::DiagnosticSovdProximityChallengePortMapping, 0x1c0000), (EnumItem::DiagnosticSovdServiceInstance, 0x180000), (EnumItem::DiagnosticSovdServiceValidationInterface, 0x180000), (EnumItem::DiagnosticSovdServiceValidationPortMapping, 0x180000), (EnumItem::DiagnosticSovdUpdate, 0x180000), (EnumItem::DiagnosticSovdUpdateInterface, 0x180000), (EnumItem::DiagnosticSovdUpdatePortMapping, 0x180000), (EnumItem::DiagnosticStartRoutine, 0x1fffc0), (EnumItem::DiagnosticStopRoutine, 0x1fffc0), (EnumItem::DiagnosticStorageCondition, 0x1fffc0), (EnumItem::DiagnosticStorageConditionGroup, 0x1fffc0), (EnumItem::DiagnosticStorageConditionNeeds, 0x1ffff0), (EnumItem::DiagnosticStorageConditionPortMapping, 0x1fffc0), (EnumItem::DiagnosticSwMapping, 0x1fffc0), (EnumItem::DiagnosticTestResult, 0x1fff00), (EnumItem::DiagnosticTestRoutineIdentifier, 0x1fff00), (EnumItem::DiagnosticTransferExit, 0x1fffc0), (EnumItem::DiagnosticTransferExitClass, 0x1fffc0), (EnumItem::DiagnosticTransmitCertificateInterface, 0x100000), (EnumItem::DiagnosticTroubleCode, 0x1fffc0), (EnumItem::DiagnosticTroubleCodeGroup, 0x1fffc0), (EnumItem::DiagnosticTroubleCodeJ1939, 0x1fffc0), (EnumItem::DiagnosticTroubleCodeObd, 0x1fffc0), (EnumItem::DiagnosticTroubleCodeProps, 0x1fffc0), (EnumItem::DiagnosticTroubleCodeUds, 0x1fffc0), (EnumItem::DiagnosticTroubleCodeUdsToClearConditionGroupMapping, 0x1fe000), (EnumItem::DiagnosticTroubleCodeUdsToTroubleCodeObdMapping, 0x1fff00), (EnumItem::DiagnosticUploadDownloadNeeds, 0x1fe000), (EnumItem::DiagnosticUploadDownloadPortMapping, 0xc000), (EnumItem::DiagnosticUploadInterface, 0x1fc000), (EnumItem::DiagnosticValueNeeds, 0x1fffff), (EnumItem::DiagnosticVerifyCertificateBidirectional, 0x1e0000), (EnumItem::DiagnosticVerifyCertificateUnidirectional, 0x1e0000), (EnumItem::DiagnosticWriteDataByIdentifier, 0x1fffc0), (EnumItem::DiagnosticWriteDataByIdentifierClass, 0x1fffc0), (EnumItem::DiagnosticWriteMemoryByAddress, 0x1fffc0), (EnumItem::DiagnosticWriteMemoryByAddressClass, 0x1fffc0), (EnumItem::DiagnosticsCommunicationSecurityNeeds, 0x1ffff0), (EnumItem::DltApplication, 0x1e0000), (EnumItem::DltApplicationToProcessMapping, 0x1e0000), (EnumItem::DltArgument, 0x1f8000), (EnumItem::DltContext, 0x1e0000), (EnumItem::DltEcu, 0x1e0000), (EnumItem::DltLogChannel, 0x1f8000), (EnumItem::DltLogChannelDesign, 0x10000), (EnumItem::DltLogChannelDesignToProcessDesignMapping, 0x10000), (EnumItem::DltLogChannelToProcessMapping, 0x10000), (EnumItem::DltLogSink, 0x1e0000), (EnumItem::DltLogSinkToPortPrototypeMapping, 0x1e0000), (EnumItem::DltMessage, 0x1f8000), (EnumItem::DltMessageCollectionSet, 0x1f8000), (EnumItem::DltUserNeeds, 0x1fffff), (EnumItem::DoIpActivationLineNeeds, 0x1ffff8), (EnumItem::DoIpFunctionalClusterDesign, 0x100000), (EnumItem::DoIpGidNeeds, 0x1ffff8), (EnumItem::DoIpGidSynchronizationNeeds, 0x1ffff8), (EnumItem::DoIpInstantiation, 0x1ff000), (EnumItem::DoIpInterface, 0x1f8000), (EnumItem::DoIpLogicAddress, 0x1fff80), (EnumItem::DoIpLogicTargetAddressProps, 0x1f0000), (EnumItem::DoIpLogicTesterAddressProps, 0x1f0000), (EnumItem::DoIpLogicalAddress, 0x100000), (EnumItem::DoIpNetworkConfigurationDesign, 0x100000), (EnumItem::DoIpPowerModeStatusNeeds, 0x1ffff8), (EnumItem::DoIpRoutingActivation, 0x1f0000), (EnumItem::DoIpRoutingActivationAuthenticationNeeds, 0x1ffff8), (EnumItem::DoIpRoutingActivationConfirmationNeeds, 0x1ffff8), (EnumItem::DoIpServiceNeeds, 0x1ffff8), (EnumItem::DoIpTpConfig, 0x1fff80), (EnumItem::DocumentElementScope, 0x1fff00), (EnumItem::Documentation, 0x1fffff), (EnumItem::DtcStatusChangeNotificationNeeds, 0x1ffff0), (EnumItem::E2EProfileCompatibilityProps, 0x1f0000), (EnumItem::E2EProfileConfiguration, 0x1ffc00), (EnumItem::E2EProfileConfigurationSet, 0x1ffc00), (EnumItem::EcuAbstractionSwComponentType, 0x1fffff), (EnumItem::EcuInstance, 0x1fffff), (EnumItem::EcuMapping, 0x1fffff), (EnumItem::EcuPartition, 0x1fffff), (EnumItem::EcuStateMgrUserNeeds, 0x1fffff), (EnumItem::EcuTiming, 0x1fffff), (EnumItem::EcucAbstractExternalReferenceDef, 0x1fff00), (EnumItem::EcucAbstractInternalReferenceDef, 0x1fff00), (EnumItem::EcucAbstractReferenceDef, 0x1fffff), (EnumItem::EcucAbstractStringParamDef, 0x1fffff), (EnumItem::EcucAddInfoParamDef, 0x1fffff), (EnumItem::EcucBooleanParamDef, 0x1fffff), (EnumItem::EcucChoiceContainerDef, 0x1fffff), (EnumItem::EcucChoiceReferenceDef, 0x1fffff), (EnumItem::EcucCommonAttributes, 0x1fffff), (EnumItem::EcucContainerDef, 0x1fffff), (EnumItem::EcucContainerValue, 0x1fffff), (EnumItem::EcucDefinitionCollection, 0x1fffff), (EnumItem::EcucDefinitionElement, 0x1fffff), (EnumItem::EcucDestinationUriDef, 0x1fffc0), (EnumItem::EcucDestinationUriDefSet, 0x1fffc0), (EnumItem::EcucEnumerationLiteralDef, 0x1fffff), (EnumItem::EcucEnumerationParamDef, 0x1fffff), (EnumItem::EcucFloatParamDef, 0x1fffff), (EnumItem::EcucForeignReferenceDef, 0x1fffff), (EnumItem::EcucFunctionNameDef, 0x1fffff), (EnumItem::EcucInstanceReferenceDef, 0x1fffff), (EnumItem::EcucIntegerParamDef, 0x1fffff), (EnumItem::EcucLinkerSymbolDef, 0x1fffff), (EnumItem::EcucModuleConfigurationValues, 0x1fffff), (EnumItem::EcucModuleDef, 0x1fffff), (EnumItem::EcucMultilineStringParamDef, 0x1fffff), (EnumItem::EcucParamConfContainerDef, 0x1fffff), (EnumItem::EcucParameterDef, 0x1fffff), (EnumItem::EcucQueryExpression, 0x1), (EnumItem::EcucQuery, 0x1ffffe), (EnumItem::EcucReferenceDef, 0x1fffff), (EnumItem::EcucStringParamDef, 0x1fffff), (EnumItem::EcucSymbolicNameReferenceDef, 0x1fffff), (EnumItem::EcucUriReferenceDef, 0x1fffc0), (EnumItem::EcucValidationCondition, 0x1ffff8), (EnumItem::EcucValueCollection, 0x1fffff), (EnumItem::End2EndEventProtectionProps, 0x1ffc00), (EnumItem::End2EndMethodProtectionProps, 0x1e0000), (EnumItem::EndToEndProtection, 0x1fffff), (EnumItem::EndToEndProtectionISignalIPdu, 0x1), (EnumItem::EndToEndProtectionSet, 0x1fffff), (EnumItem::EndToEndProtectionVariablePrototype, 0x1), (EnumItem::EnumerationMappingTable, 0x1fff00), (EnumItem::EocEventRef, 0x1fffc0), (EnumItem::EocExecutableEntityRef, 0x1fffff), (EnumItem::EocExecutableEntityRefAbstract, 0x1ffff8), (EnumItem::EocExecutableEntityRefGroup, 0x1ffff8), (EnumItem::ErrorTracerNeeds, 0x1fff00), (EnumItem::EthIpProps, 0x1f0000), (EnumItem::EthTcpIpIcmpProps, 0x1f0000), (EnumItem::EthTcpIpProps, 0x1f0000), (EnumItem::EthTpConfig, 0x1fe000), (EnumItem::EthernetCluster, 0x1fffff), (EnumItem::EthernetCommunicationConnector, 0x1fffff), (EnumItem::EthernetCommunicationController, 0x1fffff), (EnumItem::EthernetFrame, 0x1fffff), (EnumItem::EthernetFrameTriggering, 0x1fffff), (EnumItem::EthernetMacRawDataStreamMapping, 0x100000), (EnumItem::EthernetPhysicalChannel, 0x1fffff), (EnumItem::EthernetRawDataStreamClientMapping, 0x1e0000), (EnumItem::EthernetRawDataStreamGrant, 0x1f8000), (EnumItem::EthernetRawDataStreamMapping, 0x1f8000), (EnumItem::EthernetRawDataStreamServerMapping, 0x1e0000), (EnumItem::EthernetWakeupSleepOnDatalineConfig, 0x1f0000), (EnumItem::EthernetWakeupSleepOnDatalineConfigSet, 0x1f0000), (EnumItem::EvaluatedVariantSet, 0x1fffff), (EnumItem::EventHandler, 0x1e0000), (EnumItem::EventMapping, 0x1ffc00), (EnumItem::EventTriggeringConstraint, 0x1fffff), (EnumItem::ExclusiveArea, 0x1fffff), (EnumItem::Executable, 0x1ffe00), (EnumItem::ExecutableEntity, 0x1fffff), (EnumItem::ExecutableGroup, 0x1000), (EnumItem::ExecutableTiming, 0x1f0000), (EnumItem::ExecutionOrderConstraint, 0x1fffff), (EnumItem::ExecutionTime, 0x1fffff), (EnumItem::ExecutionTimeConstraint, 0x1ffffc), (EnumItem::ExternalTriggerOccurredEvent, 0x1fffff), (EnumItem::ExternalTriggeringPointIdent, 0x1ffff0), (EnumItem::FibexElement, 0x1fffff), (EnumItem::Field, 0x1ffe00), (EnumItem::FieldMapping, 0x1ffc00), (EnumItem::FireAndForgetMapping, 0x3fc00), (EnumItem::FireAndForgetMethodMapping, 0x1c0000), (EnumItem::FirewallRule, 0x1c0000), (EnumItem::FirewallStateSwitchInterface, 0x1c0000), (EnumItem::FlatInstanceDescriptor, 0x1fffff), (EnumItem::FlatMap, 0x1fffff), (EnumItem::FlexrayArTpConfig, 0x1ffffc), (EnumItem::FlexrayArTpNode, 0x1ffffc), (EnumItem::FlexrayCluster, 0x1fffff), (EnumItem::FlexrayCommunicationConnector, 0x1fffff), (EnumItem::FlexrayCommunicationController, 0x1fffff), (EnumItem::FlexrayFrame, 0x1fffff), (EnumItem::FlexrayFrameTriggering, 0x1fffff), (EnumItem::FlexrayNmCluster, 0x1fffff), (EnumItem::FlexrayNmNode, 0x1fffff), (EnumItem::FlexrayPhysicalChannel, 0x1fffff), (EnumItem::FlexrayTpConfig, 0x1fffff), (EnumItem::FlexrayTpConnectionControl, 0x1fffff), (EnumItem::FlexrayTpNode, 0x1fffff), (EnumItem::FlexrayTpPduPool, 0x1fffff), (EnumItem::FmAttributeDef, 0x1ffff8), (EnumItem::FmFeature, 0x1ffff8), (EnumItem::FmFeatureMap, 0x1ffff8), (EnumItem::FmFeatureMapAssertion, 0x1ffff8), (EnumItem::FmFeatureMapCondition, 0x1ffff8), (EnumItem::FmFeatureMapElement, 0x1ffff8), (EnumItem::FmFeatureModel, 0x1ffff8), (EnumItem::FmFeatureRelation, 0x1ffff8), (EnumItem::FmFeatureRestriction, 0x1ffff8), (EnumItem::FmFeatureSelection, 0x1ffff8), (EnumItem::FmFeatureSelectionSet, 0x1ffff8), (EnumItem::Frame, 0x1fffff), (EnumItem::FramePort, 0x1fffff), (EnumItem::FrameTriggering, 0x1fffff), (EnumItem::FunctionGroupModeRequestPhmActionItem, 0xe000), (EnumItem::FunctionGroupPortMapping, 0x100000), (EnumItem::FunctionGroupSet, 0x1f0000), (EnumItem::FunctionInhibitionAvailabilityNeeds, 0x1ff800), (EnumItem::FunctionInhibitionNeeds, 0x1fffff), (EnumItem::FunctionalClusterInteractsWithDiagnosticEventMapping, 0x100000), (EnumItem::FunctionalClusterInteractsWithFunctionalClusterMapping, 0x1f0000), (EnumItem::FunctionalClusterInteractsWithPersistencyDeploymentMapping, 0x1c0000), (EnumItem::FunctionalClusterToSecurityEventDefinitionMapping, 0x180000), (EnumItem::FurtherActionByteNeeds, 0x1ff800), (EnumItem::Gateway, 0x1fffff), (EnumItem::GeneralParameter, 0x1fffff), (EnumItem::GeneralPurposeConnection, 0x1ff800), (EnumItem::GeneralPurposeIPdu, 0x1ffff0), (EnumItem::GeneralPurposePdu, 0x1ffff0), (EnumItem::GeneralPurposeTimerServiceNeeds, 0x100000), (EnumItem::GenericDiagnosticTransportInstantiation, 0x100000), (EnumItem::GenericEthernetFrame, 0x1fffc0), (EnumItem::GenericModuleInstantiation, 0x1ffe00), (EnumItem::GlobalSupervisionEntity, 0xc00), (EnumItem::GenericTpConnection, 0x100000), (EnumItem::GlobalSupervision, 0x1ff000), (EnumItem::GlobalSupervisionNeeds, 0x1fff00), (EnumItem::GlobalTimeCanMaster, 0x1fffc0), (EnumItem::GlobalTimeCanSlave, 0x1fffc0), (EnumItem::GlobalTimeDomain, 0x1fffc0), (EnumItem::GlobalTimeEthMaster, 0x1fffc0), (EnumItem::GlobalTimeEthSlave, 0x1fffc0), (EnumItem::GlobalTimeFrMaster, 0x1fffc0), (EnumItem::GlobalTimeFrSlave, 0x1fffc0), (EnumItem::GlobalTimeGateway, 0x1fffc0), (EnumItem::GlobalTimeMaster, 0x1fffc0), (EnumItem::GlobalTimeSlave, 0x1fffc0), (EnumItem::Grant, 0x1fc000), (EnumItem::GrantDesign, 0x1fc000), (EnumItem::HardwareTestNeeds, 0x1fe000), (EnumItem::HealthChannel, 0x1ffc00), (EnumItem::HealthChannelExternalMode, 0xc00), (EnumItem::HealthChannelExternalStatus, 0x1ff000), (EnumItem::HealthChannelSupervision, 0x1ffc00), (EnumItem::HeapUsage, 0x1fffff), (EnumItem::HwAttributeDef, 0x1fffff), (EnumItem::HwAttributeLiteralDef, 0x1fffff), (EnumItem::HwCategory, 0x1fffff), (EnumItem::HwElement, 0x1fffff), (EnumItem::HwPin, 0x1fffff), (EnumItem::HwPinGroup, 0x1fffff), (EnumItem::HwType, 0x1fffff), (EnumItem::IPdu, 0x1fffff), (EnumItem::IPduPort, 0x1fffff), (EnumItem::IPduTriggering, 0x1), (EnumItem::IPv6ExtHeaderFilterList, 0x1fff00), (EnumItem::IPv6ExtHeaderFilterSet, 0x1fff00), (EnumItem::ISignal, 0x1fffff), (EnumItem::ISignalGroup, 0x1fffff), (EnumItem::ISignalIPdu, 0x1fffff), (EnumItem::ISignalIPduGroup, 0x1fffff), (EnumItem::ISignalPort, 0x1fffff), (EnumItem::ISignalToIPduMapping, 0x1fffff), (EnumItem::ISignalTriggering, 0x1fffff), (EnumItem::IamModuleInstantiation, 0x1fc000), (EnumItem::IdentCaption, 0x1ffff8), (EnumItem::Identifiable, 0x1fffff), (EnumItem::IdsCommonElement, 0x1f0000), (EnumItem::IdsDesign, 0x1f0000), (EnumItem::IdsMapping, 0x1f0000), (EnumItem::IdsMgrCustomTimestampNeeds, 0x1f0000), (EnumItem::IdsMgrNeeds, 0x1f0000), (EnumItem::IdsPlatformInstantiation, 0x1f0000), (EnumItem::IdsmAbstractPortInterface, 0x180000), (EnumItem::IdsmContextProviderInterface, 0x180000), (EnumItem::IdsmContextProviderMapping, 0x180000), (EnumItem::IdsmInstance, 0x1f0000), (EnumItem::IdsmModuleInstantiation, 0x1f0000), (EnumItem::IdsmProperties, 0x1f0000), (EnumItem::IdsmQualifiedEventReceiverInterface, 0x100000), (EnumItem::IdsmQualifiedEventReceiverMapping, 0x100000), (EnumItem::IdsmRateLimitation, 0x1f0000), (EnumItem::IdsmReportingModeProviderInterface, 0x100000), (EnumItem::IdsmReportingModeProviderMapping, 0x100000), (EnumItem::IdsmTimestampProviderInterface, 0x180000), (EnumItem::IdsmTimestampProviderMapping, 0x180000), (EnumItem::IdsmTrafficLimitation, 0x1f0000), (EnumItem::Ieee1722AcfBusPartRawDataStreamConsumerMapping, 0x100000), (EnumItem::Ieee1722AcfBusRawDataStreamConsumerMapping, 0x100000), (EnumItem::Ieee1722RawDataStreamConsumerInterface, 0x100000), (EnumItem::Ieee1722RawDataStreamConsumerMapping, 0x100000), (EnumItem::Ieee1722RawDataStreamMapping, 0x100000), (EnumItem::Ieee1722RawDataStreamProducerInterface, 0x100000), (EnumItem::Ieee1722RawDataStreamProducerMapping, 0x100000), (EnumItem::Ieee1722TpAafConnection, 0x180000), (EnumItem::Ieee1722TpAcfBus, 0x180000), (EnumItem::Ieee1722TpAcfBusPart, 0x180000), (EnumItem::Ieee1722TpAcfCan, 0x180000), (EnumItem::Ieee1722TpAcfCanPart, 0x180000), (EnumItem::Ieee1722TpAcfConnection, 0x180000), (EnumItem::Ieee1722TpAcfLin, 0x180000), (EnumItem::Ieee1722TpAcfLinPart, 0x180000), (EnumItem::Ieee1722TpAvConnection, 0x180000), (EnumItem::Ieee1722TpConfig, 0x180000), (EnumItem::Ieee1722TpConnection, 0x180000), (EnumItem::Ieee1722TpCrfConnection, 0x180000), (EnumItem::Ieee1722TpEthernetFrame, 0x1fffc0), (EnumItem::Ieee1722TpIidcConnection, 0x180000), (EnumItem::Ieee1722TpRvfConnection, 0x180000), (EnumItem::Implementation, 0x1fffff), (EnumItem::ImplementationDataType, 0x1fffff), (EnumItem::ImplementationDataTypeElement, 0x1fffff), (EnumItem::ImplementationDataTypeElementExtension, 0x1c00), (EnumItem::ImplementationDataTypeExtension, 0x1c00), (EnumItem::ImpositionTime, 0x180000), (EnumItem::ImpositionTimeDefinitionGroup, 0x180000), (EnumItem::IndicatorStatusNeeds, 0x1fe000), (EnumItem::InitEvent, 0x1ffff8), (EnumItem::InterfaceMapping, 0x1ffc00), (EnumItem::InterfaceMappingSet, 0x1fc00), (EnumItem::InternalBehavior, 0x1fffff), (EnumItem::InternalTriggerOccurredEvent, 0x1fffff), (EnumItem::InternalTriggeringPoint, 0x1fffff), (EnumItem::InterpolationRoutineMappingSet, 0x1fffff), (EnumItem::IpIamRemoteSubject, 0x1f0000), (EnumItem::IpSecConfigProps, 0x1f8000), (EnumItem::IpSecIamRemoteSubject, 0x1f0000), (EnumItem::IpSecRule, 0x1fe000), (EnumItem::J1939Cluster, 0x1ffff8), (EnumItem::J1939ControllerApplication, 0x1fff00), (EnumItem::J1939DcmDm19Support, 0x1f0000), (EnumItem::J1939DcmIPdu, 0x1ffff8), (EnumItem::J1939NmCluster, 0x1ffff8), (EnumItem::J1939NmNode, 0x1ffff8), (EnumItem::J1939ProtectedIPdu, 0x100000), (EnumItem::J1939RmIncomingRequestServiceNeeds, 0x1fff00), (EnumItem::J1939RmOutgoingRequestServiceNeeds, 0x1fff00), (EnumItem::J1939SharedAddressCluster, 0x1fff00), (EnumItem::J1939TpConfig, 0x1fffff), (EnumItem::J1939TpNode, 0x1fffff), (EnumItem::Keyword, 0x1fffff), (EnumItem::KeywordSet, 0x1fffff), (EnumItem::LatencyTimingConstraint, 0x1fffff), (EnumItem::LifeCycleInfoSet, 0x1ffff8), (EnumItem::LifeCycleState, 0x1ffff8), (EnumItem::LifeCycleStateDefinitionGroup, 0x1ffff8), (EnumItem::LinCluster, 0x1fffff), (EnumItem::LinCommunicationConnector, 0x1fffff), (EnumItem::LinCommunicationController, 0x1fffff), (EnumItem::LinEventTriggeredFrame, 0x1fffff), (EnumItem::LinFrame, 0x1fffff), (EnumItem::LinFrameTriggering, 0x1fffff), (EnumItem::LinMaster, 0x1fffff), (EnumItem::LinNmCluster, 0x1fff00), (EnumItem::LinPhysicalChannel, 0x1fffff), (EnumItem::LinScheduleTable, 0x1fffff), (EnumItem::LinSlave, 0x1fffff), (EnumItem::LinSporadicFrame, 0x1fffff), (EnumItem::LinTpConfig, 0x1fffff), (EnumItem::LinTpNode, 0x1fffff), (EnumItem::LinUnconditionalFrame, 0x1fffff), (EnumItem::Linker, 0x1fffff), (EnumItem::LocalSupervision, 0x1f000), (EnumItem::LogAndTraceInstantiation, 0x1ff000), (EnumItem::LogAndTraceInterface, 0x1e0000), (EnumItem::LogAndTraceMessageCollectionSet, 0x1e0000), (EnumItem::LogicAddress, 0x1ffffe), (EnumItem::LogicalExpression, 0x1c00), (EnumItem::LogicalSupervision, 0x1ffc00), (EnumItem::LtMessageCollectionToPortPrototypeMapping, 0x1c0000), (EnumItem::MacAddressVlanMembership, 0x100000), (EnumItem::MacLayerRawDataStreamInterface, 0x100000), (EnumItem::MacMulticastGroup, 0x1ffff8), (EnumItem::MacSecGlobalKayProps, 0x1c0000), (EnumItem::MacSecKayParticipant, 0x1c0000), (EnumItem::MacSecParticipantSet, 0x1c0000), (EnumItem::Machine, 0x1ffe00), (EnumItem::MachineDesign, 0x1ff000), (EnumItem::MachineModeRequestPhmActionItem, 0x2000), (EnumItem::MachineTiming, 0x1f0000), (EnumItem::McDataInstance, 0x1fffff), (EnumItem::McFunction, 0x1ffff8), (EnumItem::McGroup, 0x1fe000), (EnumItem::MeasuredExecutionTime, 0x1fffff), (EnumItem::MeasuredHeapUsage, 0x1fffff), (EnumItem::MeasuredStackUsage, 0x1fffff), (EnumItem::MemorySection, 0x1fffff), (EnumItem::MemoryUsage, 0x1c0000), (EnumItem::MethodMapping, 0x1ffc00), (EnumItem::ModeAccessPointIdent, 0x1ffff0), (EnumItem::ModeDeclaration, 0x1fffff), (EnumItem::ModeDeclarationGroup, 0x1fffff), (EnumItem::ModeDeclarationGroupPrototype, 0x1fffff), (EnumItem::ModeDeclarationMapping, 0x1ffff8), (EnumItem::ModeDeclarationMappingSet, 0x1ffff8), (EnumItem::ModeInterfaceMapping, 0x1fffff), (EnumItem::ModeSwitchInterface, 0x1fffff), (EnumItem::ModeSwitchPoint, 0x1fffff), (EnumItem::ModeSwitchedAckEvent, 0x1fffff), (EnumItem::ModeTransition, 0x1ffff8), (EnumItem::MultiplexedIPdu, 0x1fffff), (EnumItem::NPdu, 0x1fffff), (EnumItem::NetworkEndpoint, 0x1ffff8), (EnumItem::NetworkHandlePortMapping, 0x180000), (EnumItem::NetworkManagementPortInterface, 0x180000), (EnumItem::NmCluster, 0x1fffff), (EnumItem::NmConfig, 0x1fffff), (EnumItem::NmEcu, 0x1fffff), (EnumItem::NmHandleToFunctionGroupStateMapping, 0x1e0000), (EnumItem::NmInstantiation, 0x1ff000), (EnumItem::NmInteractsWithSmMapping, 0x180000), (EnumItem::NmNode, 0x1fffff), (EnumItem::NmPdu, 0x1fffff), (EnumItem::NoCheckpointSupervision, 0x1c0000), (EnumItem::NoSupervision, 0x1e0000), (EnumItem::NonOsModuleInstantiation, 0x1ffe00), (EnumItem::NvBlockDescriptor, 0x1fffff), (EnumItem::NvBlockNeeds, 0x1fffff), (EnumItem::NvBlockSwComponentType, 0x1fffff), (EnumItem::NvDataInterface, 0x1fffff), (EnumItem::ObdControlServiceNeeds, 0x1fffff), (EnumItem::ObdInfoServiceNeeds, 0x1fffff), (EnumItem::ObdMonitorServiceNeeds, 0x1fffff), (EnumItem::ObdPidServiceNeeds, 0x1fffff), (EnumItem::ObdRatioDenominatorNeeds, 0x1fe000), (EnumItem::ObdRatioServiceNeeds, 0x1fffff), (EnumItem::OffsetTimingConstraint, 0x1fffff), (EnumItem::OperationInvokedEvent, 0x1fffff), (EnumItem::OsModuleInstantiation, 0x1ffe00), (EnumItem::OsTaskExecutionEvent, 0x1f0000), (EnumItem::OsTaskProxy, 0x1e0000), (EnumItem::PPortPrototype, 0x1fffff), (EnumItem::PackageableElement, 0x1fffff), (EnumItem::ParameterAccess, 0x1fffff), (EnumItem::ParameterDataPrototype, 0x1fffff), (EnumItem::ParameterInterface, 0x1fffff), (EnumItem::ParameterSwComponentType, 0x1fffff), (EnumItem::PassThroughSwConnector, 0x1ffff8), (EnumItem::Pdu, 0x1fffff), (EnumItem::PduActivationRoutingGroup, 0x1e0000), (EnumItem::PduToFrameMapping, 0x1fffff), (EnumItem::PduTriggering, 0x1ffffe), (EnumItem::PdurIPduGroup, 0x1fffff), (EnumItem::PerInstanceMemory, 0x1fffff), (EnumItem::PeriodicEventTriggering, 0x1fffff), (EnumItem::PersistencyDataElement, 0x1ff000), (EnumItem::PersistencyDeployment, 0x1fe000), (EnumItem::PersistencyDeploymentElement, 0x1f0000), (EnumItem::PersistencyDeploymentElementToCryptoKeySlotMapping, 0x1f0000), (EnumItem::PersistencyDeploymentToCryptoKeySlotMapping, 0x1f0000), (EnumItem::PersistencyDeploymentToDltLogChannelMapping, 0x10000), (EnumItem::PersistencyDeploymentToDltLogSinkMapping, 0x1e0000), (EnumItem::PersistencyFile, 0x1ffc00), (EnumItem::PersistencyFileArray, 0xfc00), (EnumItem::PersistencyFileProxy, 0xf000), (EnumItem::PersistencyFileProxyInterface, 0xfc00), (EnumItem::PersistencyFileProxyToFileMapping, 0xc00), (EnumItem::PersistencyFileElement, 0x1f0000), (EnumItem::PersistencyFileStorage, 0x1f0000), (EnumItem::PersistencyFileStorageInterface, 0x1f0000), (EnumItem::PersistencyInterface, 0x1ffc00), (EnumItem::PersistencyKeyValueDatabase, 0xfc00), (EnumItem::PersistencyKeyValueDatabaseInterface, 0xfc00), (EnumItem::PersistencyInterfaceElement, 0x1f0000), (EnumItem::PersistencyKeyValuePair, 0x1ff000), (EnumItem::PersistencyPortPrototypeToFileArrayMapping, 0xf000), (EnumItem::PersistencyPortPrototypeToKeyValueDatabaseMapping, 0xfc00), (EnumItem::PhmAction, 0x6000), (EnumItem::PhmActionItem, 0xe000), (EnumItem::PhmActionList, 0xe000), (EnumItem::PhmArbitration, 0x6000), (EnumItem::PersistencyKeyValueStorage, 0x1f0000), (EnumItem::PersistencyKeyValueStorageInterface, 0x1f0000), (EnumItem::PersistencyPortPrototypeToDeploymentMapping, 0x1f0000), (EnumItem::PersistencyPortPrototypeToFileStorageMapping, 0x1f0000), (EnumItem::PersistencyPortPrototypeToKeyValueStorageMapping, 0x1f0000), (EnumItem::PhmAbstractRecoveryNotificationInterface, 0x1f0000), (EnumItem::PhmCheckpoint, 0x1ffc00), (EnumItem::PhmContributionToMachineMapping, 0x1ffc00), (EnumItem::PhmHealthChannelInterface, 0x1ff000), (EnumItem::PhmHealthChannelRecoveryNotificationInterface, 0x1f0000), (EnumItem::PhmHealthChannelStatus, 0x1ff000), (EnumItem::PhmLogicalExpression, 0xe000), (EnumItem::PhmRecoveryActionInterface, 0x1f8000), (EnumItem::PhmRule, 0xe000), (EnumItem::PhmSupervisedEntityInterface, 0x1ff000), (EnumItem::PhmSupervision, 0x1fe000), (EnumItem::PhmSupervisionRecoveryNotificationInterface, 0x1f0000), (EnumItem::PhysicalChannel, 0x1fffff), (EnumItem::PhysicalDimension, 0x1fffff), (EnumItem::PortBlueprint, 0x1), (EnumItem::PhysicalDimensionMappingSet, 0x1ffff8), (EnumItem::PlatformActionItem, 0x1c00), (EnumItem::PlatformHealthManagementContribution, 0x1ffc00), (EnumItem::PlatformHealthManagementInterface, 0x1ff000), (EnumItem::PlatformPhmActionItem, 0xe000), (EnumItem::PlatformModuleEndpointConfiguration, 0x1f0000), (EnumItem::PlatformModuleEthernetEndpointConfiguration, 0x1f0000), (EnumItem::PortElementToCommunicationResourceMapping, 0x1f0000), (EnumItem::PortGroup, 0x1fffff), (EnumItem::PortInterface, 0x1fffff), (EnumItem::PortInterfaceMapping, 0x1fffff), (EnumItem::PortInterfaceMappingSet, 0x1fffff), (EnumItem::PortInterfaceToDataTypeMapping, 0x1ffe00), (EnumItem::PortPrototype, 0x1fffff), (EnumItem::PortPrototypeBlueprint, 0x1ffffe), (EnumItem::PossibleErrorReaction, 0x1fff00), (EnumItem::PostBuildVariantCriterion, 0x1fffff), (EnumItem::PostBuildVariantCriterionValueSet, 0x1fffff), (EnumItem::PrPortPrototype, 0x1ffff8), (EnumItem::PredefinedVariant, 0x1fffff), (EnumItem::PresharedKeyIdentity, 0x1c00), (EnumItem::PrimitiveAttributeTailoring, 0x1fff00), (EnumItem::Process, 0x1ffe00), (EnumItem::ProcessDesign, 0x1ff000), (EnumItem::ProcessDesignToMachineDesignMapping, 0x1fc000), (EnumItem::ProcessDesignToMachineDesignMappingSet, 0x1c000), (EnumItem::ProcessPhmActionItem, 0xe000), (EnumItem::ProcessExecutionError, 0x1f0000), (EnumItem::ProcessToMachineMapping, 0x1ffc00), (EnumItem::ProcessToMachineMappingSet, 0x1ffc00), (EnumItem::Processor, 0x1ffc00), (EnumItem::ProcessorCore, 0x1ffc00), (EnumItem::ProvidedApServiceInstance, 0x1ffe00), (EnumItem::ProvidedDdsServiceInstance, 0x1000), (EnumItem::ProvidedServiceInstance, 0x1ffff8), (EnumItem::ProvidedServiceInstanceToSwClusterDesignPPortPrototypeMapping, 0x1f8000), (EnumItem::ProvidedSomeipServiceInstance, 0x1ffe00), (EnumItem::ProvidedUserDefinedServiceInstance, 0x1ffe00), (EnumItem::PskIdentityToKeySlotMapping, 0x1ffc00), (EnumItem::PureLocalTimeBase, 0xf000), (EnumItem::RPortPrototype, 0x1fffff), (EnumItem::RapidPrototypingScenario, 0x1ffff8), (EnumItem::RawDataStreamClientInterface, 0x1f0000), (EnumItem::RawDataStreamDeployment, 0x1f8000), (EnumItem::RawDataStreamGrant, 0x1f8000), (EnumItem::RawDataStreamGrantDesign, 0x1f8000), (EnumItem::RawDataStreamInterface, 0x8000), (EnumItem::RawDataStreamMapping, 0x1f8000), (EnumItem::RawDataStreamMethodDeployment, 0x8000), (EnumItem::RecoveryViaApplicationAction, 0x8000), (EnumItem::RecoveryViaApplicationActionToClientServerOperationMapping, 0x8000), (EnumItem::RawDataStreamServerInterface, 0x1f0000), (EnumItem::RecoveryNotification, 0x1f0000), (EnumItem::RecoveryNotificationToPPortPrototypeMapping, 0x1f0000), (EnumItem::ReferenceTailoring, 0x1fff00), (EnumItem::RequiredApServiceInstance, 0x1ffe00), (EnumItem::RequiredDdsServiceInstance, 0x1000), (EnumItem::RequiredServiceInstanceToSwClusterDesignRPortPrototypeMapping, 0x1f8000), (EnumItem::RequiredSomeipServiceInstance, 0x1ffe00), (EnumItem::RequiredUserDefinedServiceInstance, 0x1ffe00), (EnumItem::ResourceConsumption, 0x1fffff), (EnumItem::ResourceGroup, 0x1ffe00), (EnumItem::RestAbstractEndpoint, 0x1fc00), (EnumItem::RestAbstractNumericalPropertyDef, 0x1fc00), (EnumItem::RestAbstractPropertyDef, 0x1fc00), (EnumItem::RestArrayPropertyDef, 0x1fc00), (EnumItem::RestBooleanPropertyDef, 0x1fc00), (EnumItem::RestElementDef, 0x1fc00), (EnumItem::RestEndpointDelete, 0x1fc00), (EnumItem::RestEndpointGet, 0x1fc00), (EnumItem::RestEndpointPost, 0x1fc00), (EnumItem::RestEndpointPut, 0x1fc00), (EnumItem::RestHttpPortPrototypeMapping, 0x1fc00), (EnumItem::RestIntegerPropertyDef, 0x1fc00), (EnumItem::RestNumberPropertyDef, 0x1fc00), (EnumItem::RestObjectRef, 0x1fc00), (EnumItem::RestPrimitivePropertyDef, 0x1fc00), (EnumItem::RestResourceDef, 0x1fc00), (EnumItem::RestServiceInterface, 0x1fc00), (EnumItem::RestStringPropertyDef, 0x1fc00), (EnumItem::RootSwClusterDesignComponentPrototype, 0x1f8000), (EnumItem::RootSwComponentPrototype, 0x1ffe00), (EnumItem::RootSwCompositionPrototype, 0x1fffff), (EnumItem::RoughEstimateHeapUsage, 0x1fffff), (EnumItem::RoughEstimateOfExecutionTime, 0x1fffff), (EnumItem::RoughEstimateStackUsage, 0x1fffff), (EnumItem::RptComponent, 0x1fff00), (EnumItem::RptContainer, 0x1ffff8), (EnumItem::RptExecutableEntity, 0x1fff00), (EnumItem::RptExecutableEntityEvent, 0x1fff00), (EnumItem::RptExecutionContext, 0x1fff00), (EnumItem::RptProfile, 0x1fff00), (EnumItem::RptServicePoint, 0x1fff00), (EnumItem::Rule, 0x1c00), (EnumItem::RteEvent, 0x1fffff), (EnumItem::RecordValueField, 0x1), (EnumItem::RteEventInCompositionSeparation, 0x1e0000), (EnumItem::RteEventInCompositionToOsTaskProxyMapping, 0x1e0000), (EnumItem::RteEventInSystemSeparation, 0x1e0000), (EnumItem::RteEventInSystemToOsTaskProxyMapping, 0x1e0000), (EnumItem::RunnableEntity, 0x1fffff), (EnumItem::SdgCaption, 0x1), (EnumItem::RunnableEntityGroup, 0x1ffff8), (EnumItem::RuntimeError, 0x1fff00), (EnumItem::SdgAbstractForeignReference, 0x1fff00), (EnumItem::SdgAbstractPrimitiveAttribute, 0x1fff00), (EnumItem::SdgAggregationWithVariation, 0x1fff00), (EnumItem::SdgAttribute, 0x1fff00), (EnumItem::SdgClass, 0x1fff00), (EnumItem::SdgDef, 0x1fff00), (EnumItem::SdgForeignReference, 0x1fff00), (EnumItem::SdgForeignReferenceWithVariation, 0x1fff00), (EnumItem::SdgPrimitiveAttribute, 0x1fff00), (EnumItem::SdgPrimitiveAttributeWithVariation, 0x1fff00), (EnumItem::SdgReference, 0x1fff00), (EnumItem::SdgTailoring, 0x1fff00), (EnumItem::SecOcCryptoServiceMapping, 0x1fe000), (EnumItem::SecOcDeployment, 0x1ffc00), (EnumItem::SecOcJobMapping, 0x1ffc00), (EnumItem::SecOcJobRequirement, 0x1ffc00), (EnumItem::SecOcSecureComProps, 0x1ffc00), (EnumItem::SecureComProps, 0x1ffc00), (EnumItem::SecureComPropsSet, 0x1fc00), (EnumItem::SecureCommunicationAuthenticationProps, 0x1fff00), (EnumItem::SecureCommunicationDeployment, 0x1ffc00), (EnumItem::SecureCommunicationFreshnessProps, 0x1fff00), (EnumItem::SecureCommunicationPropsSet, 0x1fff00), (EnumItem::SecureOnBoardCommunicationNeeds, 0x1fff00), (EnumItem::SecuredIPdu, 0x1fffc0), (EnumItem::SecurityEventAggregationFilter, 0x1f0000), (EnumItem::SecurityEventContextDataDefinition, 0x100000), (EnumItem::SecurityEventContextDataElement, 0x100000), (EnumItem::SecurityEventContextMapping, 0x1f0000), (EnumItem::SecurityEventContextMappingApplication, 0x1f0000), (EnumItem::SecurityEventContextMappingBswModule, 0x1f0000), (EnumItem::SecurityEventContextMappingCommConnector, 0x1f0000), (EnumItem::SecurityEventContextMappingFunctionalCluster, 0x1f0000), (EnumItem::SecurityEventContextProps, 0x1f0000), (EnumItem::SecurityEventDefinition, 0x1f0000), (EnumItem::SecurityEventFilterChain, 0x1f0000), (EnumItem::SecurityEventMapping, 0x1f0000), (EnumItem::SecurityEventOneEveryNFilter, 0x1f0000), (EnumItem::SecurityEventReportInstanceDefinition, 0x100000), (EnumItem::SecurityEventReportInstanceValue, 0x100000), (EnumItem::SecurityEventReportInterface, 0x1f0000), (EnumItem::SecurityEventReportToSecurityEventDefinitionMapping, 0x1f0000), (EnumItem::SecurityEventStateFilter, 0x1f0000), (EnumItem::SecurityEventThresholdFilter, 0x1f0000), (EnumItem::SenderReceiverInterface, 0x1fffff), (EnumItem::SensorActuatorSwComponentType, 0x1fffff), (EnumItem::SerializationTechnology, 0x1ffff8), (EnumItem::ServerCallPoint, 0x1fffff), (EnumItem::ServiceEventDeployment, 0x1ffe00), (EnumItem::ServiceFieldDeployment, 0x1ffe00), (EnumItem::ServiceInstanceToApplicationEndpointMapping, 0x200), (EnumItem::ServiceInstanceCollectionSet, 0x1f8000), (EnumItem::ServiceInstanceToMachineMapping, 0x1ffe00), (EnumItem::ServiceInstanceToPortPrototypeMapping, 0x1ffc00), (EnumItem::ServiceInstanceToSignalMapping, 0x1ffc00), (EnumItem::ServiceInstanceToSignalMappingSet, 0x1fc00), (EnumItem::ServiceInstanceToSwClusterDesignPortPrototypeMapping, 0x1f8000), (EnumItem::ServiceInterface, 0x1ffe00), (EnumItem::ServiceInterfaceApplicationErrorMapping, 0x1e00), (EnumItem::ServiceInterfaceDeployment, 0x1ffe00), (EnumItem::ServiceInterfaceElementMapping, 0x1ffe00), (EnumItem::ServiceInterfaceElementSecureComConfig, 0x1ffc00), (EnumItem::ServiceInterfaceEventMapping, 0x1ffe00), (EnumItem::ServiceInterfaceFieldMapping, 0x1ffe00), (EnumItem::ServiceInterfaceMapping, 0x1ffe00), (EnumItem::ServiceInterfaceMappingSet, 0x1fe00), (EnumItem::ServiceInterfaceMethodMapping, 0x1ffe00), (EnumItem::ServiceInterfacePedigree, 0x1f8000), (EnumItem::ServiceInterfaceTriggerMapping, 0x1e0000), (EnumItem::ServiceMethodDeployment, 0x1ffe00), (EnumItem::ServiceNeeds, 0x1fffff), (EnumItem::ServiceProxySwComponentType, 0x1fffff), (EnumItem::ServiceSwComponentType, 0x1fffff), (EnumItem::SignalBasedEventDeployment, 0x1c00), (EnumItem::SignalBasedFieldDeployment, 0x1c00), (EnumItem::ServiceTiming, 0x1f0000), (EnumItem::SignalBasedEventElementToISignalTriggeringMapping, 0x1f8000), (EnumItem::SignalBasedFieldToISignalTriggeringMapping, 0x1ffc00), (EnumItem::SignalBasedMethodDeployment, 0x1c00), (EnumItem::SignalBasedServiceInterfaceDeployment, 0x7c00), (EnumItem::SignalBasedFireAndForgetMethodToISignalTriggeringMapping, 0x1c0000), (EnumItem::SignalBasedMethodToISignalTriggeringMapping, 0x1f8000), (EnumItem::SignalBasedTriggerToISignalTriggeringMapping, 0x1e0000), (EnumItem::SignalServiceTranslationElementProps, 0x1f8000), (EnumItem::SignalServiceTranslationEventProps, 0x1f8000), (EnumItem::SignalServiceTranslationProps, 0x1f8000), (EnumItem::SignalServiceTranslationPropsSet, 0x1f8000), (EnumItem::SimulatedExecutionTime, 0x1fffff), (EnumItem::SmInteractsWithNmMapping, 0x180000), (EnumItem::SoAdRoutingGroup, 0x1ffff8), (EnumItem::SocketAddress, 0x1ffffe), (EnumItem::SocketConnectionIpduIdentifierSet, 0x1f8000), (EnumItem::SoftwareActivationDependency, 0x8000), (EnumItem::SoftwareCluster, 0x1ffc00), (EnumItem::SoftwareClusterRequirement, 0xc00), (EnumItem::SoftwareClusterDesign, 0x1ff000), (EnumItem::SoftwareClusterDiagnosticDeploymentProps, 0x1c0000), (EnumItem::SoftwarePackage, 0x1fc000), (EnumItem::SoftwarePackageStep, 0x1f8000), (EnumItem::SomeipDataPrototypeTransformationProps, 0x1ffe00), (EnumItem::SomeipEvent, 0x200), (EnumItem::SomeipEventDeployment, 0x1ffc00), (EnumItem::SomeipEventGroup, 0x1ffe00), (EnumItem::SomeipField, 0x200), (EnumItem::SomeipMethod, 0x200), (EnumItem::SomeipFieldDeployment, 0x1ffc00), (EnumItem::SomeipMethodDeployment, 0x1ffc00), (EnumItem::SomeipProvidedEventGroup, 0x1ffe00), (EnumItem::SomeipRemoteMulticastConfig, 0x1c0000), (EnumItem::SomeipRemoteUnicastConfig, 0x1c0000), (EnumItem::SomeipSdClientEventGroupTimingConfig, 0x1fe000), (EnumItem::SomeipSdClientServiceInstanceConfig, 0x1fe000), (EnumItem::SomeipSdServerEventGroupTimingConfig, 0x1fe000), (EnumItem::SomeipSdServerServiceInstanceConfig, 0x1fe000), (EnumItem::SomeipServiceInstanceToMachineMapping, 0x1ffe00), (EnumItem::SomeipServiceInterface, 0x200), (EnumItem::SomeipServiceInterfaceDeployment, 0x1ffc00), (EnumItem::SomeipTpChannel, 0x1fe000), (EnumItem::SomeipTpConfig, 0x1fff00), (EnumItem::SomeipTransformationProps, 0x1fff00), (EnumItem::SovdGatewayInstantiation, 0x1c0000), (EnumItem::SovdModuleInstantiation, 0x1c0000), (EnumItem::SovdServerInstantiation, 0x1c0000), (EnumItem::SpecElementReference, 0x1fff00), (EnumItem::SpecElementScope, 0x1fff00), (EnumItem::SpecificationDocumentScope, 0x1fff00), (EnumItem::SporadicEventTriggering, 0x1fffff), (EnumItem::StackUsage, 0x1fffff), (EnumItem::StartupConfig, 0x1ffe00), (EnumItem::StartupConfigSet, 0x3fe00), (EnumItem::StateClientInterface, 0x100000), (EnumItem::StateDependentFirewall, 0x1c0000), (EnumItem::StateManagemenPhmErrorInterface, 0xc0000), (EnumItem::StateManagementActionItem, 0x1c0000), (EnumItem::StateManagementActionList, 0x1c0000), (EnumItem::StateManagementDiagTriggerInterface, 0x1c0000), (EnumItem::StateManagementEmErrorInterface, 0x1c0000), (EnumItem::StateManagementErrorInterface, 0x1c0000), (EnumItem::StateManagementFunctionGroupSwitchNotificationInterface, 0x1c0000), (EnumItem::StateManagementModuleInstantiation, 0x1c0000), (EnumItem::StateManagementNmActionItem, 0x180000), (EnumItem::StateManagementNotificationInterface, 0x1c0000), (EnumItem::StateManagementPhmErrorInterface, 0x100000), (EnumItem::StateManagementPortInterface, 0x1c0000), (EnumItem::StateManagementRequestError, 0x1c0000), (EnumItem::StateManagementRequestInterface, 0x1c0000), (EnumItem::StateManagementRequestTrigger, 0x1c0000), (EnumItem::StateManagementSetFunctionGroupStateActionItem, 0x1c0000), (EnumItem::StateManagementSleepActionItem, 0x180000), (EnumItem::StateManagementStateMachineActionItem, 0x1c0000), (EnumItem::StateManagementStateNotification, 0x1c0000), (EnumItem::StateManagementStateRequest, 0x1c0000), (EnumItem::StateManagementSyncActionItem, 0x1c0000), (EnumItem::StateManagementTriggerInterface, 0x1c0000), (EnumItem::StaticSocketConnection, 0x1f8000), (EnumItem::StdCppImplementationDataType, 0x1fe000), (EnumItem::StructuredReq, 0x1fffc0), (EnumItem::SupervisedEntityCheckpointNeeds, 0x1fff00), (EnumItem::SupervisedEntityNeeds, 0x1fffff), (EnumItem::SupervisionEntity, 0xc00), (EnumItem::SupervisionCheckpoint, 0x1ff000), (EnumItem::SupervisionMode, 0x1e0000), (EnumItem::SupervisionModeCondition, 0x1e0000), (EnumItem::SwAddrMethod, 0x1fffff), (EnumItem::SwAxisType, 0x1fffff), (EnumItem::SwBaseType, 0x1fffff), (EnumItem::SwCalibrationMethod, 0x3), (EnumItem::SwCalprmPrototype, 0x1), (EnumItem::SwClassAttrImpl, 0x1), (EnumItem::SwClassInstance, 0x1), (EnumItem::SwClassPrototype, 0x1), (EnumItem::SwCodeSyntax, 0x1), (EnumItem::SwComponentMappingConstraints, 0x1e0000), (EnumItem::SwComponentPrototype, 0x1fffff), (EnumItem::SwComponentType, 0x1fffff), (EnumItem::SwConnector, 0x1fffff), (EnumItem::SwGenericAxisParamType, 0x1fffff), (EnumItem::SwInstance, 0x1), (EnumItem::SwMcBaseType, 0x1), (EnumItem::SwMcFrame, 0x1), (EnumItem::SwMcInterface, 0x1), (EnumItem::SwMcInterfaceSource, 0x1), (EnumItem::SwRecordLayout, 0x1fffff), (EnumItem::SwServiceArg, 0x1fffff), (EnumItem::SwServicePrototype, 0x1), (EnumItem::SwSystemconst, 0x1fffff), (EnumItem::SwSystemconstantValueSet, 0x1fffff), (EnumItem::SwVariablePrototype, 0x1), (EnumItem::SwcBswMapping, 0x1fffff), (EnumItem::SwcImplementation, 0x1fffff), (EnumItem::SwcInternalBehavior, 0x1fffff), (EnumItem::SwcModeManagerErrorEvent, 0x1ffff8), (EnumItem::SwcModeSwitchEvent, 0x1fffff), (EnumItem::SwcServiceDependency, 0x1fffff), (EnumItem::SwcTiming, 0x1fffff), (EnumItem::SwcToApplicationPartitionMapping, 0x1fff00), (EnumItem::SwcToEcuMapping, 0x1fffff), (EnumItem::SwcToImplMapping, 0x1fffff), (EnumItem::SwitchAsynchronousTrafficShaperGroupEntry, 0x180000), (EnumItem::SwitchFlowMeteringEntry, 0x180000), (EnumItem::SwitchStreamFilterActionDestPortModification, 0x180000), (EnumItem::SwitchStreamFilterEntry, 0x180000), (EnumItem::SwitchStreamFilterRule, 0x180000), (EnumItem::SwitchStreamGateEntry, 0x180000), (EnumItem::SwitchStreamIdentification, 0x180000), (EnumItem::SyncTimeBaseMgrUserNeeds, 0x1fffff), (EnumItem::SynchronizationPointConstraint, 0x1fe000), (EnumItem::SynchronizationTimingConstraint, 0x1fffff), (EnumItem::SynchronizedMasterTimeBase, 0xf000), (EnumItem::SynchronizedSlaveTimeBase, 0xf000), (EnumItem::SynchronizedTimeBaseConsumer, 0x1f0000), (EnumItem::SynchronizedTimeBaseConsumerInterface, 0x1f0000), (EnumItem::SynchronizedTimeBaseProvider, 0x1f0000), (EnumItem::SynchronizedTimeBaseProviderInterface, 0x1f0000), (EnumItem::SynchronousServerCallPoint, 0x1fffff), (EnumItem::System, 0x1fffff), (EnumItem::SystemMapping, 0x1fffff), (EnumItem::SystemMemoryUsage, 0x38000), (EnumItem::SystemSignal, 0x1fffff), (EnumItem::SystemSignalGroup, 0x1fffff), (EnumItem::SystemSignalGroupToCommunicationResourceMapping, 0x180000), (EnumItem::SystemSignalToCommunicationResourceMapping, 0x180000), (EnumItem::SystemTiming, 0x1fffff), (EnumItem::TcpOptionFilterList, 0x1fff00), (EnumItem::TcpOptionFilterSet, 0x1fff00), (EnumItem::TdCpSoftwareClusterMapping, 0x1f0000), (EnumItem::TdCpSoftwareClusterMappingSet, 0x1f0000), (EnumItem::TdCpSoftwareClusterResourceMapping, 0x1f0000), (EnumItem::TdEventBsw, 0x1fffff), (EnumItem::TdEventBswInternalBehavior, 0x1fffff), (EnumItem::TdEventBswModeDeclaration, 0x1fffff), (EnumItem::TdEventBswModule, 0x1fffff), (EnumItem::TdEventCom, 0x1fffff), (EnumItem::TdEventComplex, 0x1ffffc), (EnumItem::TdEventCycleStart, 0x1fffff), (EnumItem::TdEventFrClusterCycleStart, 0x1fffff), (EnumItem::TdEventFrame, 0x1fffff), (EnumItem::TdEventFrameEthernet, 0x1fff00), (EnumItem::TdEventIPdu, 0x1fffff), (EnumItem::TdEventISignal, 0x1fffff), (EnumItem::TdEventModeDeclaration, 0x1fffff), (EnumItem::TdEventOperation, 0x1fffff), (EnumItem::TdEventServiceInstance, 0x1f0000), (EnumItem::TdEventServiceInstanceDiscovery, 0x1f0000), (EnumItem::TdEventServiceInstanceEvent, 0x1f0000), (EnumItem::TdEventServiceInstanceField, 0x1f0000), (EnumItem::TdEventServiceInstanceMethod, 0x1f0000), (EnumItem::TdEventSllet, 0xc0000), (EnumItem::TdEventSlletPort, 0xc0000), (EnumItem::TdEventSwc, 0x1ffff8), (EnumItem::TdEventSwcInternalBehavior, 0x1fffff), (EnumItem::TdEventSwcInternalBehaviorReference, 0x1ffff8), (EnumItem::TdEventTrigger, 0x1ffff8), (EnumItem::TdEventTtCanCycleStart, 0x1fffff), (EnumItem::TdEventVariableDataPrototype, 0x1fffff), (EnumItem::TdEventVfb, 0x1fffff), (EnumItem::TdEventVfbPort, 0x1ffff8), (EnumItem::TdEventVfbPortGroup, 0x100000), (EnumItem::TdEventVfbReference, 0x1ffff8), (EnumItem::TdletZoneClock, 0x1c0000), (EnumItem::TimeBaseProviderToPersistencyMapping, 0x1f0000), (EnumItem::TimeBaseResource, 0x1ff000), (EnumItem::TimeSyncModuleInstantiation, 0x1ff000), (EnumItem::TimeSyncPortPrototypeToTimeBaseMapping, 0x1ff000), (EnumItem::TimeSynchronizationInterface, 0xf000), (EnumItem::TimeSynchronizationMasterInterface, 0xf000), (EnumItem::TimeSynchronizationPureLocalInterface, 0xf000), (EnumItem::TimeSynchronizationSlaveInterface, 0xf000), (EnumItem::TimingClock, 0x1c0000), (EnumItem::TimingClockSyncAccuracy, 0x1c0000), (EnumItem::TimingCondition, 0x1fff00), (EnumItem::TimingConstraint, 0x1fffff), (EnumItem::TimingDescription, 0x1fffff), (EnumItem::TimingDescriptionEvent, 0x1fffff), (EnumItem::TimingDescriptionEventChain, 0x1fffff), (EnumItem::TimingEvent, 0x1fffff), (EnumItem::TimingExtension, 0x1fffff), (EnumItem::TimingExtensionResource, 0x1fff00), (EnumItem::TimingModeInstance, 0x1fff00), (EnumItem::TlsConnectionGroup, 0x1e0000), (EnumItem::TlsCryptoCipherSuite, 0x1fe000), (EnumItem::TlsCryptoCipherSuiteProps, 0x1e0000), (EnumItem::TlsCryptoServiceMapping, 0x1fe000), (EnumItem::TlsDeployment, 0x1ffc00), (EnumItem::TlsIamRemoteSubject, 0x1f0000), (EnumItem::TlsJobMapping, 0x1ffc00), (EnumItem::TlsJobRequirement, 0x1c00), (EnumItem::TlsSecureComProps, 0x1ffc00), (EnumItem::TlvDataIdDefinitionSet, 0x1f8000), (EnumItem::Topic1, 0x1fffff), (EnumItem::TpAddress, 0x1fffff), (EnumItem::TpConfig, 0x1fffff), (EnumItem::TraceableTable, 0x1f8000), (EnumItem::TraceableText, 0x1fffc0), (EnumItem::TracedFailure, 0x1fff00), (EnumItem::TransformationISignalPropsIdent, 0x100000), (EnumItem::TransformationProps, 0x1fff00), (EnumItem::TransformationPropsSet, 0x1fff00), (EnumItem::TransformationPropsToServiceInterfaceMappingSet, 0x200), (EnumItem::TransformationPropsToServiceInterfaceElementMapping, 0x1ffc00), (EnumItem::TransformationPropsToServiceInterfaceElementMappingSet, 0x1fc00), (EnumItem::TransformationTechnology, 0x1fffc0), (EnumItem::TransformerHardErrorEvent, 0x1fffc0), (EnumItem::TransientFault, 0x1fff00), (EnumItem::TransportLayerIndependentIdCollectionSet, 0x200), (EnumItem::TransportLayerIndependentInstanceId, 0x200), (EnumItem::Trigger, 0x1fffff), (EnumItem::TriggerInterface, 0x1fffff), (EnumItem::TriggerInterfaceMapping, 0x1fffff), (EnumItem::TtcanCluster, 0x1fffff), (EnumItem::TtcanCommunicationConnector, 0x1fffff), (EnumItem::TtcanCommunicationController, 0x1fffff), (EnumItem::TtcanPhysicalChannel, 0x1fffff), (EnumItem::UcmDescription, 0x1f8000), (EnumItem::UcmMasterModuleInstantiation, 0x1c0000), (EnumItem::UcmModuleInstantiation, 0x1fc000), (EnumItem::UcmRetryStrategy, 0x1c0000), (EnumItem::UcmStep, 0x1f8000), (EnumItem::UcmSubordinateModuleInstantiation, 0x1c0000), (EnumItem::UcmToTimeBaseResourceMapping, 0x1c0000), (EnumItem::UdpNmCluster, 0x1fffff), (EnumItem::UdpNmNode, 0x1fffff), (EnumItem::Unit, 0x1fffff), (EnumItem::UnitGroup, 0x1fffff), (EnumItem::UploadableDeploymentElement, 0x180000), (EnumItem::UploadableDesignElement, 0x180000), (EnumItem::UploadableExclusivePackageElement, 0x1f0000), (EnumItem::UploadablePackageElement, 0x1ffc00), (EnumItem::UserDefinedCluster, 0x1ffff8), (EnumItem::UserDefinedCommunicationConnector, 0x1ffff8), (EnumItem::UserDefinedCommunicationController, 0x1ffff8), (EnumItem::UserDefinedEthernetFrame, 0x1fffc0), (EnumItem::UserDefinedEventDeployment, 0x1ffe00), (EnumItem::UserDefinedFieldDeployment, 0x1ffe00), (EnumItem::UserDefinedGlobalTimeMaster, 0x1fff00), (EnumItem::UserDefinedGlobalTimeSlave, 0x1fff00), (EnumItem::UserDefinedIPdu, 0x1ffffc), (EnumItem::UserDefinedMethodDeployment, 0x1ffe00), (EnumItem::UserDefinedPdu, 0x1ffffc), (EnumItem::UserDefinedPhysicalChannel, 0x1ffff8), (EnumItem::UserDefinedServiceInstanceToMachineMapping, 0x1ffe00), (EnumItem::UserDefinedServiceInterfaceDeployment, 0x1ffe00), (EnumItem::UserDefinedTransformationProps, 0x1ffe00), (EnumItem::V2XDataManagerNeeds, 0x1c0000), (EnumItem::V2XFacUserNeeds, 0x1fff00), (EnumItem::V2XMUserNeeds, 0x1fff00), (EnumItem::VariableAccess, 0x1fffff), (EnumItem::VariableAndParameterInterfaceMapping, 0x1fffff), (EnumItem::VariableDataPrototype, 0x1fffff), (EnumItem::VariationPointProxy, 0x1fffff), (EnumItem::VehiclePackage, 0x1f8000), (EnumItem::VehicleRolloutStep, 0x1f8000), (EnumItem::VendorSpecificServiceNeeds, 0x1fff00), (EnumItem::VfbTiming, 0x1fffff), (EnumItem::ViewMap, 0x1ffff8), (EnumItem::ViewMapSet, 0x1ffff8), (EnumItem::VlanConfig, 0x1ffff8), (EnumItem::WaitPoint, 0x1fffff), (EnumItem::WarningIndicatorRequestedBitNeeds, 0x1ffff8), (EnumItem::WatchdogActionItem, 0x1c00), (EnumItem::WatchdogPhmActionItem, 0xe000), (EnumItem::WorstCaseHeapUsage, 0x1fffff), (EnumItem::WorstCaseStackUsage, 0x1fffff), (EnumItem::XcpPdu, 0x1fffff)]},
    CharacterDataSpec::Pattern{check_fn: validate_regex_8, regex: r"[a-zA-Z][a-zA-Z0-9_]*", max_length: Some(128)},
    CharacterDataSpec::Enum{items: &[(EnumItem::IdsCommonElement, 0x1f0000), (EnumItem::IdsMapping, 0x1f0000), (EnumItem::IdsmInstance, 0x1f0000), (EnumItem::IdsmProperties, 0x1f0000), (EnumItem::SecurityEventContextDataDefinition, 0x100000), (EnumItem::SecurityEventContextMapping, 0x1f0000), (EnumItem::SecurityEventContextMappingApplication, 0x1f0000), (EnumItem::SecurityEventContextMappingBswModule, 0x1f0000), (EnumItem::SecurityEventContextMappingCommConnector, 0x1f0000), (EnumItem::SecurityEventContextMappingFunctionalCluster, 0x1f0000), (EnumItem::SecurityEventDefinition, 0x1f0000), (EnumItem::SecurityEventFilterChain, 0x1f0000), (EnumItem::SecurityEventReportInstanceDefinition, 0x100000), (EnumItem::SecurityEventReportInstanceValue, 0x100000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::IdsPlatformInstantiation, 0x180000), (EnumItem::IdsmModuleInstantiation, 0x180000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::IdsmInstance, 0x1f0000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::IdsmModuleInstantiation, 0x1f0000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::IdsmRateLimitation, 0x1f0000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::IdsmTrafficLimitation, 0x1f0000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::Iec61937, 0x180000), (EnumItem::Pcm, 0x180000), (EnumItem::Smpte338, 0x180000), (EnumItem::Unspecified, 0x180000), (EnumItem::Vendor, 0x180000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::Aes3_32Bit, 0x180000), (EnumItem::Float32Bit, 0x180000), (EnumItem::Int16Bit, 0x180000), (EnumItem::Int24Bit, 0x180000), (EnumItem::Int32Bit, 0x180000), (EnumItem::User, 0x180000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::_16Khz, 0x180000), (EnumItem::_176_4Khz, 0x180000), (EnumItem::_192Khz, 0x180000), (EnumItem::_24Khz, 0x180000), (EnumItem::_32Khz, 0x180000), (EnumItem::_44_1Khz, 0x180000), (EnumItem::_48Khz, 0x180000), (EnumItem::_8Khz, 0x180000), (EnumItem::_88_2Khz, 0x180000), (EnumItem::_96Khz, 0x180000), (EnumItem::User, 0x180000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::Ieee1722TpAcfBus, 0x100000), (EnumItem::Ieee1722TpAcfCan, 0x100000), (EnumItem::Ieee1722TpAcfLin, 0x100000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::Ieee1722TpAcfBusPart, 0x100000), (EnumItem::Ieee1722TpAcfCanPart, 0x100000), (EnumItem::Ieee1722TpAcfLinPart, 0x100000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::Can, 0x180000), (EnumItem::CanBrief, 0x180000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::Ieee1722TpAafConnection, 0x180000), (EnumItem::Ieee1722TpAcfConnection, 0x180000), (EnumItem::Ieee1722TpAvConnection, 0x180000), (EnumItem::Ieee1722TpConnection, 0x180000), (EnumItem::Ieee1722TpCrfConnection, 0x180000), (EnumItem::Ieee1722TpIidcConnection, 0x180000), (EnumItem::Ieee1722TpRvfConnection, 0x180000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::_1_0, 0x180000), (EnumItem::_1_001, 0x180000), (EnumItem::_1_1_001, 0x180000), (EnumItem::_1_8, 0x180000), (EnumItem::_24_25, 0x180000), (EnumItem::_25_24, 0x180000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::AudioSample, 0x180000), (EnumItem::MachineCycle, 0x180000), (EnumItem::User, 0x180000), (EnumItem::VideoFrame, 0x180000), (EnumItem::VideoLine, 0x180000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::BtRec601, 0x180000), (EnumItem::BtRec709, 0x180000), (EnumItem::Grayscale, 0x180000), (EnumItem::ItuBt2020, 0x180000), (EnumItem::Srgb, 0x180000), (EnumItem::User, 0x180000), (EnumItem::Xyz, 0x180000), (EnumItem::Ycbcr, 0x180000), (EnumItem::Ycgco, 0x180000), (EnumItem::Ycm, 0x180000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::_1, 0x180000), (EnumItem::_10, 0x180000), (EnumItem::_100, 0x180000), (EnumItem::_120, 0x180000), (EnumItem::_15, 0x180000), (EnumItem::_150, 0x180000), (EnumItem::_2, 0x180000), (EnumItem::_20, 0x180000), (EnumItem::_200, 0x180000), (EnumItem::_24, 0x180000), (EnumItem::_240, 0x180000), (EnumItem::_25, 0x180000), (EnumItem::_30, 0x180000), (EnumItem::_300, 0x180000), (EnumItem::_48, 0x180000), (EnumItem::_5, 0x180000), (EnumItem::_50, 0x180000), (EnumItem::_60, 0x180000), (EnumItem::_72, 0x180000), (EnumItem::_85, 0x180000), (EnumItem::User, 0x180000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::_10, 0x180000), (EnumItem::_12, 0x180000), (EnumItem::_16, 0x180000), (EnumItem::_8, 0x180000), (EnumItem::User, 0x180000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::_4_1_1, 0x180000), (EnumItem::_4_2_0, 0x180000), (EnumItem::_4_2_2, 0x180000), (EnumItem::_4_2_2_4, 0x180000), (EnumItem::_4_4_4, 0x180000), (EnumItem::_4_4_4_4, 0x180000), (EnumItem::BayerBggr, 0x180000), (EnumItem::BayerGbrg, 0x180000), (EnumItem::BayerGrbg, 0x180000), (EnumItem::BayerRggb, 0x180000), (EnumItem::Monochrome, 0x180000), (EnumItem::User, 0x180000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::Dsa, 0x1fe000), (EnumItem::Psk, 0x1fe000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::ImplementationDataType, 0x1fffff)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::ImplementationDataTypeElement, 0x1fffff)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::ImpositionTime, 0x180000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::ImpositionTimeDefinitionGroup, 0x180000)]},
    CharacterDataSpec::Pattern{check_fn: validate_regex_13, regex: r"0|[\+\-]?[1-9][0-9]*|0[xX][0-9a-fA-F]+|0[bB][0-1]+|0[0-7]+", max_length: None},
    CharacterDataSpec::Enum{items: &[(EnumItem::InternalTriggeringPoint, 0x1fffff)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::InterpolationRoutineMappingSet, 0x1f0000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::Closed, 0x1fffff), (EnumItem::Infinite, 0x1fffff), (EnumItem::Open, 0x1fffff)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::Forget, 0x1fffc0), (EnumItem::StorePersistently, 0x1fffc0)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::IpSecConfigProps, 0x1f8000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::Drop, 0x6000), (EnumItem::Passthrough, 0x6000), (EnumItem::Reject, 0x6000), (EnumItem::Transport, 0x6000), (EnumItem::Tunnel, 0x6000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::IpSecRule, 0x1f0000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::Tcp, 0x1f0000), (EnumItem::Udp, 0x1f0000)]},
    CharacterDataSpec::Pattern{check_fn: validate_regex_14, regex: r"(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)|ANY", max_length: None},
    CharacterDataSpec::Pattern{check_fn: validate_regex_15, regex: r"[0-9A-Fa-f]{1,4}(:[0-9A-Fa-f]{1,4}){7,7}|ANY", max_length: None},
    CharacterDataSpec::Enum{items: &[(EnumItem::AutoIp, 0x1ffff8), (EnumItem::AutoIpDoip, 0x1fffc0), (EnumItem::AutoIpdhcpv4, 0x1ffff8), (EnumItem::Dhcpv4, 0x1ffff8), (EnumItem::Fixed, 0x1ffff8)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::Dhcpv6, 0x1ffff8), (EnumItem::Fixed, 0x1ffff8), (EnumItem::LinkLocal, 0x1ffff8), (EnumItem::LinkLocalDoip, 0x1fffc0), (EnumItem::RouterAdvertisement, 0x1ffff8)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::Newline, 0x1fffff), (EnumItem::NewlineIfNecessary, 0x1fffff), (EnumItem::NoNewline, 0x1fffff)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::J1939Cluster, 0x1fff00)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::J1939ControllerApplication, 0x1fff00)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::J1939NmAac, 0x180000), (EnumItem::J1939NmCca, 0x180000), (EnumItem::J1939NmNca, 0x180000), (EnumItem::J1939NmSca, 0x180000), (EnumItem::J1939NmSvca, 0x180000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::J1939NmNode, 0x1fff00)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::J1939TpNode, 0x1fffff)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::Bam, 0x100000), (EnumItem::Bamcmdt, 0x100000), (EnumItem::Cmdt, 0x100000), (EnumItem::Etp, 0x100000), (EnumItem::Fdbam, 0x100000), (EnumItem::Fdbamcmdt, 0x100000), (EnumItem::Fdcmdt, 0x100000), (EnumItem::Fpp, 0x100000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::Keep, 0x1fffff), (EnumItem::NoKeep, 0x1fffff)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::Aa, 0x1fffff), (EnumItem::Ab, 0x1fffff), (EnumItem::Af, 0x1fffff), (EnumItem::Am, 0x1fffff), (EnumItem::Ar, 0x1fffff), (EnumItem::As, 0x1fffff), (EnumItem::Ay, 0x1fffff), (EnumItem::Az, 0x1fffff), (EnumItem::Ba, 0x1fffff), (EnumItem::Be, 0x1fffff), (EnumItem::Bg, 0x1fffff), (EnumItem::Bh, 0x1fffff), (EnumItem::Bi, 0x1fffff), (EnumItem::Bn, 0x1fffff), (EnumItem::Bo, 0x1fffff), (EnumItem::Br, 0x1fffff), (EnumItem::Ca, 0x1fffff), (EnumItem::Co, 0x1fffff), (EnumItem::Cs, 0x1fffff), (EnumItem::Cy, 0x1fffff), (EnumItem::Da, 0x1fffff), (EnumItem::De, 0x1fffff), (EnumItem::Dz, 0x1fffff), (EnumItem::El, 0x1fffff), (EnumItem::En, 0x1fffff), (EnumItem::Eo, 0x1fffff), (EnumItem::Es, 0x1fffff), (EnumItem::Et, 0x1fffff), (EnumItem::Eu, 0x1fffff), (EnumItem::Fa, 0x1fffff), (EnumItem::Fi, 0x1fffff), (EnumItem::Fj, 0x1fffff), (EnumItem::Fo, 0x1fffff), (EnumItem::ForAll, 0x1fffff), (EnumItem::Fr, 0x1fffff), (EnumItem::Fy, 0x1fffff), (EnumItem::Ga, 0x1fffff), (EnumItem::Gd, 0x1fffff), (EnumItem::Gl, 0x1fffff), (EnumItem::Gn, 0x1fffff), (EnumItem::Gu, 0x1fffff), (EnumItem::Ha, 0x1fffff), (EnumItem::Hi, 0x1fffff), (EnumItem::Hr, 0x1fffff), (EnumItem::Hu, 0x1fffff), (EnumItem::Hy, 0x1fffff), (EnumItem::Ia, 0x1fffff), (EnumItem::Ie, 0x1fffff), (EnumItem::Ik, 0x1fffff), (EnumItem::In, 0x1fffff), (EnumItem::Is, 0x1fffff), (EnumItem::It, 0x1fffff), (EnumItem::Iw, 0x1fffff), (EnumItem::Ja, 0x1fffff), (EnumItem::Ji, 0x1fffff), (EnumItem::Jw, 0x1fffff), (EnumItem::Ka, 0x1fffff), (EnumItem::Kk, 0x1fffff), (EnumItem::Kl, 0x1fffff), (EnumItem::Km, 0x1fffff), (EnumItem::Kn, 0x1fffff), (EnumItem::Ko, 0x1fffff), (EnumItem::Ks, 0x1fffff), (EnumItem::Ku, 0x1fffff), (EnumItem::Ky, 0x1fffff), (EnumItem::La, 0x1fffff), (EnumItem::Ln, 0x1fffff), (EnumItem::Lo, 0x1fffff), (EnumItem::Lt, 0x1fffff), (EnumItem::Lv, 0x1fffff), (EnumItem::Mg, 0x1fffff), (EnumItem::Mi, 0x1fffff), (EnumItem::Mk, 0x1fffff), (EnumItem::Ml, 0x1fffff), (EnumItem::Mn, 0x1fffff), (EnumItem::Mo, 0x1fffff), (EnumItem::Mr, 0x1fffff), (EnumItem::Ms, 0x1fffff), (EnumItem::Mt, 0x1fffff), (EnumItem::My, 0x1fffff), (EnumItem::Na, 0x1fffff), (EnumItem::Ne, 0x1fffff), (EnumItem::Nl, 0x1fffff), (EnumItem::No, 0x1fffff), (EnumItem::Oc, 0x1fffff), (EnumItem::Om, 0x1fffff), (EnumItem::Or, 0x1fffff), (EnumItem::Pa, 0x1fffff), (EnumItem::Pl, 0x1fffff), (EnumItem::Ps, 0x1fffff), (EnumItem::Pt, 0x1fffff), (EnumItem::Qu, 0x1fffff), (EnumItem::Rm, 0x1fffff), (EnumItem::Rn, 0x1fffff), (EnumItem::Ro, 0x1fffff), (EnumItem::Ru, 0x1fffff), (EnumItem::Rw, 0x1fffff), (EnumItem::Sa, 0x1fffff), (EnumItem::Sd, 0x1fffff), (EnumItem::Sg, 0x1fffff), (EnumItem::Sh, 0x1fffff), (EnumItem::Si, 0x1fffff), (EnumItem::Sk, 0x1fffff), (EnumItem::Sl, 0x1fffff), (EnumItem::Sm, 0x1fffff), (EnumItem::Sn, 0x1fffff), (EnumItem::So, 0x1fffff), (EnumItem::Sq, 0x1fffff), (EnumItem::Sr, 0x1fffff), (EnumItem::Ss, 0x1fffff), (EnumItem::St, 0x1fffff), (EnumItem::Su, 0x1fffff), (EnumItem::Sv, 0x1fffff), (EnumItem::Sw, 0x1fffff), (EnumItem::Ta, 0x1fffff), (EnumItem::Te, 0x1fffff), (EnumItem::Tg, 0x1fffff), (EnumItem::Th, 0x1fffff), (EnumItem::Ti, 0x1fffff), (EnumItem::Tk, 0x1fffff), (EnumItem::Tl, 0x1fffff), (EnumItem::Tn, 0x1fffff), (EnumItem::To, 0x1fffff), (EnumItem::Tr, 0x1fffff), (EnumItem::Ts, 0x1fffff), (EnumItem::Tt, 0x1fffff), (EnumItem::Tw, 0x1fffff), (EnumItem::Uk, 0x1fffff), (EnumItem::Ur, 0x1fffff), (EnumItem::Uz, 0x1fffff), (EnumItem::Vi, 0x1fffff), (EnumItem::Vo, 0x1fffff), (EnumItem::Wo, 0x1fffff), (EnumItem::Xh, 0x1fffff), (EnumItem::Yo, 0x1fffff), (EnumItem::Zh, 0x1fffff), (EnumItem::Zu, 0x1fffff)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::Age, 0x1fffff), (EnumItem::Reaction, 0x1fffff)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::InterLetOnly, 0x180000), (EnumItem::IntraLetEoc, 0x180000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::LifeCycleState, 0x1ffff8)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::LifeCycleStateDefinitionGroup, 0x1ffff8)]},
    CharacterDataSpec::Pattern{check_fn: validate_regex_16, regex: r"(0[xX][0-9a-fA-F]+)|(0[0-7]+)|(0[bB][0-1]+)|(([+\-]?[1-9][0-9]+(\.[0-9]+)?|[+\-]?[0-9](\.[0-9]+)?)([eE]([+\-]?)[0-9]+)?)|\.0|INF|-INF|NaN", max_length: None},
    CharacterDataSpec::Enum{items: &[(EnumItem::Classic, 0x1fffff), (EnumItem::Enhanced, 0x1fffff)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::CanFrame, 0x1), (EnumItem::EthernetFrame, 0x1), (EnumItem::FlexrayFrame, 0x1), (EnumItem::Frame, 0x1), (EnumItem::LinEventTriggeredFrame, 0x1fffff), (EnumItem::LinFrame, 0x1fffff), (EnumItem::LinSporadicFrame, 0x1fffff), (EnumItem::LinUnconditionalFrame, 0x1fffff)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::LinFrameTriggering, 0x1fffff)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::LinScheduleTable, 0x1fffff)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::LinSlave, 0x1fffff)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::LinSlaveConfigIdent, 0x1fff80)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::LinTpNode, 0x1fffff)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::LinUnconditionalFrame, 0x1fffff)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::Number, 0x1fffff), (EnumItem::Unnumber, 0x1fffff)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::LocalSupervision, 0x1e000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::LogAndTraceMessageCollectionSet, 0x1e0000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::Debug, 0x1ff000), (EnumItem::Error, 0x1ff000), (EnumItem::Fatal, 0x1ff000), (EnumItem::Info, 0x1ff000), (EnumItem::Off, 0x1e0000), (EnumItem::Verbose, 0x1ff000), (EnumItem::Warn, 0x1ff000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::Console, 0x1f000), (EnumItem::File, 0x1f000), (EnumItem::Network, 0x1f000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::DoesNotUseLogging, 0x38000), (EnumItem::UsesLogging, 0x38000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::LogicAddress, 0x1fffff)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::LogicalExpression, 0x1c00)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::And, 0x1c00), (EnumItem::Nand, 0x1c00), (EnumItem::Not, 0x1c00), (EnumItem::Or, 0x1c00), (EnumItem::Xor, 0x1c00)]},
    CharacterDataSpec::Pattern{check_fn: validate_regex_17, regex: r"([0-9a-fA-F]{2}:){5}[0-9a-fA-F]{2}", max_length: None},
    CharacterDataSpec::Enum{items: &[(EnumItem::MacMulticastGroup, 0x1ffff8)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::IntergrityAndConfidentiality, 0x1c0000), (EnumItem::IntergrityWithoutConfidentiality, 0x1c0000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::ConfidentialityOffset0, 0x1c0000), (EnumItem::ConfidentialityOffset30, 0x1c0000), (EnumItem::ConfidentialityOffset50, 0x1c0000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::Never, 0x1c0000), (EnumItem::Timeout, 0x1c0000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::MacSecGlobalKayProps, 0x1c0000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::MacSecKayParticipant, 0x1c0000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::KeyServer, 0x1c0000), (EnumItem::Peer, 0x1c0000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::Machine, 0x1ffc00)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::MachineDesign, 0x1ff000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::Bidirectional, 0x1fffff), (EnumItem::FirstToSecond, 0x1fffff), (EnumItem::SecondToFirst, 0x1fffff)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::MappingScopeCore, 0x1fffc0), (EnumItem::MappingScopeEcu, 0x1fffc0), (EnumItem::MappingScopePartition, 0x1fffc0)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::Full, 0x1fffff), (EnumItem::None, 0x1fffff), (EnumItem::Silent, 0x1fffff)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::I4G, 0x1ffffc), (EnumItem::Iso, 0x1ffffc), (EnumItem::Iso6, 0x1ffffc)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::McDataInstance, 0x1fffff)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::McFunction, 0x1ffff8)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::McGroup, 0x1fe000)]},
    CharacterDataSpec::Pattern{check_fn: validate_regex_18, regex: r"[a-zA-Z_][a-zA-Z0-9_]*(\[([a-zA-Z_][a-zA-Z0-9_]*|[0-9]+)\])*(\.[a-zA-Z_][a-zA-Z0-9_]*(\[([a-zA-Z_][a-zA-Z0-9_]*|[0-9]+)\])*)*", max_length: None},
    CharacterDataSpec::Enum{items: &[(EnumItem::AddrMethodShortName, 0x1ffffe), (EnumItem::AddrMethodShortNameAndAlignment, 0x1ffffe)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::MemorySection, 0x1fffff)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::CalibrationOffline, 0x1fffff), (EnumItem::CalibrationOnline, 0x1fffff), (EnumItem::CalibrationVariables, 0x1fffff), (EnumItem::Calprm, 0x1ffffe), (EnumItem::Code, 0x1fffff), (EnumItem::ConfigData, 0x1fffff), (EnumItem::Const, 0x1fffff), (EnumItem::ExcludeFromFlash, 0x1fffff), (EnumItem::UserDefined, 0x1fffff), (EnumItem::Var, 0x1fffff), (EnumItem::VarFast, 0x1fffff), (EnumItem::VarNoInit, 0x1fffff), (EnumItem::VarPowerOnInit, 0x1fffff)]},
    CharacterDataSpec::Pattern{check_fn: validate_regex_19, regex: r"[A-Z][a-zA-Z0-9_]*", max_length: None},
    CharacterDataSpec::Enum{items: &[(EnumItem::None, 0x180000), (EnumItem::Version1, 0x180000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::OnEntry, 0x1fffff), (EnumItem::OnExit, 0x1fffff), (EnumItem::OnTransition, 0x1fffff)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::ModeDeclaration, 0x1fffff)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::ModeDeclarationGroup, 0x1fffff)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::ModeDeclarationGroupPrototype, 0x1fffff)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::ModeDeclarationMappingSet, 0x1ffff8)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::DefaultMode, 0x1ffff8), (EnumItem::LastMode, 0x1ffff8)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::ModeSwitchPoint, 0x1fffff)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::Decreasing, 0x1ffffe), (EnumItem::Increasing, 0x1ffffe), (EnumItem::Monotonous, 0x1fffc0), (EnumItem::NoMonotony, 0x1ffffe), (EnumItem::StrictMonotonous, 0x1fffc0), (EnumItem::StrictlyDecreasing, 0x1ffffe), (EnumItem::StrictlyIncreasing, 0x1ffffe)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::NPdu, 0x1fffff)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::NetworkEndpoint, 0x1ffff8)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::Functional, 0x1ffffc), (EnumItem::FunctionalCanFd, 0x1fffc0), (EnumItem::Physical, 0x1ffffc), (EnumItem::PhysicalCanFd, 0x1fffc0)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::Active, 0x1fffc0), (EnumItem::Passive, 0x1fffc0)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::NmEcu, 0x1fffff)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::FunctionGroupStateToNmHandle, 0x1c0000), (EnumItem::NmHandleActiveToFunctionGroupState, 0x1c0000), (EnumItem::NmHandleInactiveToFunctionGroupState, 0x1c0000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::NmNetworkHandle, 0x1e0000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::CanNmNode, 0x1fffff), (EnumItem::FlexrayNmNode, 0x1fffff), (EnumItem::J1939NmNode, 0x1ffff8), (EnumItem::NmNode, 0x1fffff), (EnumItem::UdpNmNode, 0x1fffff)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::NmPdu, 0x1fffff)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::FullCom, 0x180000), (EnumItem::NoCom, 0x180000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::Full, 0x100000), (EnumItem::Light, 0x100000), (EnumItem::None, 0x100000), (EnumItem::Passive, 0x100000), (EnumItem::SlaveActive, 0x100000), (EnumItem::SlavePassive, 0x100000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::AdaptiveFirewallModuleInstantiation, 0x1c0000), (EnumItem::CmModuleInstantiation, 0x100000), (EnumItem::CryptoModuleInstantiation, 0x1f9c00), (EnumItem::DeterministicClient, 0x40000), (EnumItem::DeterministicSyncInstantiation, 0x40000), (EnumItem::DeterministicSyncMaster, 0x40000), (EnumItem::DoIpInstantiation, 0x1ff000), (EnumItem::GenericDiagnosticTransportInstantiation, 0x100000), (EnumItem::GenericModuleInstantiation, 0x1ffc00), (EnumItem::IamModuleInstantiation, 0x1fc000), (EnumItem::IdsPlatformInstantiation, 0x1f0000), (EnumItem::IdsmModuleInstantiation, 0x1f0000), (EnumItem::LogAndTraceInstantiation, 0x1ff000), (EnumItem::NmInstantiation, 0x1ff000), (EnumItem::NonOsModuleInstantiation, 0x1ffc00), (EnumItem::SovdGatewayInstantiation, 0x1c0000), (EnumItem::SovdModuleInstantiation, 0x1c0000), (EnumItem::SovdServerInstantiation, 0x1c0000), (EnumItem::StateManagementModuleInstantiation, 0x1c0000), (EnumItem::TimeSyncModuleInstantiation, 0x1ff000), (EnumItem::UcmMasterModuleInstantiation, 0x1c0000), (EnumItem::UcmModuleInstantiation, 0x1fc000), (EnumItem::UcmSubordinateModuleInstantiation, 0x1c0000)]},
    CharacterDataSpec::Pattern{check_fn: validate_regex_20, regex: r"[1-9][0-9]*", max_length: None},
    CharacterDataSpec::Enum{items: &[(EnumItem::Caution, 0x1fffff), (EnumItem::Example, 0x1ffffe), (EnumItem::Exercise, 0x1fffff), (EnumItem::Hint, 0x1fffff), (EnumItem::Instruction, 0x1fffff), (EnumItem::Other, 0x1fffff), (EnumItem::Tip, 0x1fffff)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::ErrorCorrection, 0x1fffff), (EnumItem::ErrorDetection, 0x1fffff), (EnumItem::NoProtection, 0x1fffff)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::High, 0x1fffff), (EnumItem::Low, 0x1fffff), (EnumItem::Medium, 0x1fffff)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::ApiUse, 0x1fffff), (EnumItem::Observer, 0x1fffff)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::Ignition, 0x1ffff0), (EnumItem::ObdDcy, 0x1ffff0), (EnumItem::Other, 0x1ffff0), (EnumItem::Power, 0x1ffff0), (EnumItem::Time, 0x1ffff0), (EnumItem::Warmup, 0x1ffff0)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::Land, 0x1fffff), (EnumItem::Port, 0x1fffff)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::DoNotInclude, 0x180000), (EnumItem::IncludeButDoNotStart, 0x180000), (EnumItem::StartOnBoot, 0x180000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::Full, 0x1e0000), (EnumItem::None, 0x1e0000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::OsTaskProxy, 0x1e0000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::PPortPrototype, 0x1fc001)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::ParameterDataPrototype, 0x1fffff)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::ContainerIPdu, 0x1fffc0), (EnumItem::DcmIPdu, 0x1fffff), (EnumItem::GeneralPurposeIPdu, 0x1ffff0), (EnumItem::GeneralPurposePdu, 0x1ffff0), (EnumItem::IPdu, 0x1fffff), (EnumItem::ISignalIPdu, 0x1fffff), (EnumItem::J1939DcmIPdu, 0x1ffff8), (EnumItem::J1939ProtectedIPdu, 0x100000), (EnumItem::MultiplexedIPdu, 0x1fffff), (EnumItem::NPdu, 0x1fffff), (EnumItem::NmPdu, 0x1fffff), (EnumItem::Pdu, 0x1fffff), (EnumItem::SecuredIPdu, 0x1fffc0), (EnumItem::UserDefinedIPdu, 0x1ffffc), (EnumItem::UserDefinedPdu, 0x1ffffc), (EnumItem::XcpPdu, 0x1fffff)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::LastIsBest, 0x1fff00), (EnumItem::Queued, 0x1fff00)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::Always, 0x1ffff0), (EnumItem::Never, 0x1ffff0)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::IPduTriggering, 0x1), (EnumItem::PduTriggering, 0x1ffffe)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::PdurIPduGroup, 0x1fffff)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::PerInstanceMemory, 0x1fffff)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::Read, 0x100000), (EnumItem::ReadWrite, 0x100000), (EnumItem::Write, 0x100000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::Delete, 0x1ff000), (EnumItem::KeepExisting, 0x1ff000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::PersistencyDataElement, 0x1ff000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::PersistencyDeployment, 0x1f0000), (EnumItem::PersistencyFileStorage, 0x1f0000), (EnumItem::PersistencyKeyValueStorage, 0x1f0000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::PersistencyDeploymentElement, 0x1f0000), (EnumItem::PersistencyFile, 0x1f0000), (EnumItem::PersistencyKeyValuePair, 0x1f0000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::Delete, 0x1ff000), (EnumItem::KeepExisting, 0x1ff000), (EnumItem::Overwrite, 0x1ff000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::PersistencyFile, 0xc00)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::PersistencyFileArray, 0xfc00)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::PersistencyFileStorage, 0x1f0000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::PersistencyKeyValueDatabase, 0xfc00)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::PersistencyKeyValueStorage, 0x1f0000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::None, 0x1ffc00), (EnumItem::Redundant, 0x1ffc00), (EnumItem::RedundantPerKey, 0x8000), (EnumItem::RedundantPerElement, 0x1f0000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::PersistencyRedundancyHandlingScopeDatabase, 0x8000), (EnumItem::PersistencyRedundancyHandlingScopeFile, 0x8000), (EnumItem::PersistencyRedundancyHandlingScopeKey, 0x8000), (EnumItem::PersistencyRedundancyHandlingScopeElement, 0x1f0000), (EnumItem::PersistencyRedundancyHandlingScopeStorage, 0x1f0000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::NoPgwide, 0x1fffff), (EnumItem::Pgwide, 0x1fffff)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::ApplicationModeRequestPhmActionItem, 0xe000), (EnumItem::FunctionGroupModeRequestPhmActionItem, 0xe000), (EnumItem::MachineModeRequestPhmActionItem, 0x2000), (EnumItem::PhmActionItem, 0xe000), (EnumItem::PlatformPhmActionItem, 0xe000), (EnumItem::ProcessPhmActionItem, 0xe000), (EnumItem::RecoveryViaApplicationAction, 0x8000), (EnumItem::WatchdogPhmActionItem, 0xe000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::PhmActionList, 0xe000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::TriggeredOnChange, 0xe000), (EnumItem::TriggeredOnEvaluation, 0xe000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::PhmCheckpoint, 0x1ffc00)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::PhmHealthChannelInterface, 0x30000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::PhmHealthChannelStatus, 0x1ff000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::PhmLogicalExpression, 0xe000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::And, 0xe000), (EnumItem::Nand, 0xe000), (EnumItem::Not, 0xe000), (EnumItem::Or, 0xe000), (EnumItem::Xor, 0xe000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::False, 0xe000), (EnumItem::True, 0xe000), (EnumItem::Undefined, 0xe000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::AliveSupervision, 0x1e0000), (EnumItem::DeadlineSupervision, 0x1e0000), (EnumItem::LogicalSupervision, 0x1e0000), (EnumItem::NoCheckpointSupervision, 0x1c0000), (EnumItem::NoSupervision, 0x1e0000), (EnumItem::PhmSupervision, 0x1e0000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::AbstractCanPhysicalChannel, 0x1fffff), (EnumItem::CanPhysicalChannel, 0x1fffff), (EnumItem::EthernetPhysicalChannel, 0x1fffff), (EnumItem::FlexrayPhysicalChannel, 0x1fffff), (EnumItem::LinPhysicalChannel, 0x1fffff), (EnumItem::PhysicalChannel, 0x1fffff), (EnumItem::TtcanPhysicalChannel, 0x1fffff), (EnumItem::UserDefinedPhysicalChannel, 0x1ffff8)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::PhysicalDimension, 0x1fffff)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::PhysicalDimensionMappingSet, 0x180000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::ResetEcu, 0x1c00), (EnumItem::ResetMcu, 0x1c00), (EnumItem::ResetVm, 0x1c00)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::PlatformHealthManagementContribution, 0x1ffc00)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::PlatformModuleEthernetEndpointConfiguration, 0x1f0000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::ResetMachine, 0xe000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::Active, 0x1ffffc), (EnumItem::None, 0x1ffffc), (EnumItem::Passive, 0x1ffffc)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::PncMappingIdent, 0x1fff00)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::PortBlueprint, 0x1)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::PortGroup, 0x1fffff)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::Multiple, 0x7e00), (EnumItem::Single, 0x7e00)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::AbstractCryptoKeySlotInterface, 0x100000), (EnumItem::AbstractRawDataStreamInterface, 0x1f0000), (EnumItem::AbstractSynchronizedTimeBaseInterface, 0x1f0000), (EnumItem::ApplicationInterface, 0x1e0000), (EnumItem::ClientServerInterface, 0x1fffff), (EnumItem::CompositeInterface, 0x18000), (EnumItem::CryptoCertificateInterface, 0x1f0000), (EnumItem::CryptoInterface, 0x1f0000), (EnumItem::CryptoKeySlotClientInterface, 0x100000), (EnumItem::CryptoKeySlotInterface, 0x1f0000), (EnumItem::CryptoProviderInterface, 0x1f0000), (EnumItem::CryptoTrustMasterInterface, 0x1f0000), (EnumItem::DataInterface, 0x1fffff), (EnumItem::DiagnosticAbstractDataIdentifierInterface, 0x1fc000), (EnumItem::DiagnosticAbstractRoutineInterface, 0x1fc000), (EnumItem::DiagnosticAuthenticationInterface, 0x1e0000), (EnumItem::DiagnosticComControlInterface, 0x1e0000), (EnumItem::DiagnosticConditionInterface, 0x1fc000), (EnumItem::DiagnosticDataElementInterface, 0x1fc000), (EnumItem::DiagnosticDataIdentifierGenericInterface, 0x1fc000), (EnumItem::DiagnosticDataIdentifierInterface, 0x1fc000), (EnumItem::DiagnosticDoIpActivationLineInterface, 0x1f8000), (EnumItem::DiagnosticDoIpEntityIdentificationInterface, 0x1c0000), (EnumItem::DiagnosticDoIpGroupIdentificationInterface, 0x1fc000), (EnumItem::DiagnosticDoIpPowerModeInterface, 0x1fc000), (EnumItem::DiagnosticDoIpTriggerVehicleAnnouncementInterface, 0x1f8000), (EnumItem::DiagnosticDownloadInterface, 0x1fc000), (EnumItem::DiagnosticDtcInformationInterface, 0x1fc000), (EnumItem::DiagnosticEcuResetInterface, 0x1f0000), (EnumItem::DiagnosticEventInterface, 0x1fc000), (EnumItem::DiagnosticExternalAuthenticationInterface, 0x1e0000), (EnumItem::DiagnosticGenericUdsInterface, 0x1fc000), (EnumItem::DiagnosticIndicatorInterface, 0x1fc000), (EnumItem::DiagnosticMonitorInterface, 0x1fc000), (EnumItem::DiagnosticMultipleConditionInterface, 0x180000), (EnumItem::DiagnosticMultipleEventInterface, 0x180000), (EnumItem::DiagnosticMultipleMonitorInterface, 0x180000), (EnumItem::DiagnosticMultipleResourceInterface, 0x180000), (EnumItem::DiagnosticOperationCycleInterface, 0x1fc000), (EnumItem::DiagnosticPortInterface, 0x1fc000), (EnumItem::DiagnosticRequestFileTransferInterface, 0x1c0000), (EnumItem::DiagnosticRoutineGenericInterface, 0x1fc000), (EnumItem::DiagnosticRoutineInterface, 0x1fc000), (EnumItem::DiagnosticSecurityLevelInterface, 0x1fc000), (EnumItem::DiagnosticServiceValidationInterface, 0x1fc000), (EnumItem::DiagnosticSovdAuthorizationInterface, 0x1c0000), (EnumItem::DiagnosticSovdBulkDataInterface, 0x180000), (EnumItem::DiagnosticSovdConfigurationInterface, 0x180000), (EnumItem::DiagnosticSovdPortInterface, 0x1c0000), (EnumItem::DiagnosticSovdProximityChallengeInterface, 0x1c0000), (EnumItem::DiagnosticSovdServiceValidationInterface, 0x180000), (EnumItem::DiagnosticSovdUpdateInterface, 0x180000), (EnumItem::DiagnosticTransmitCertificateInterface, 0x100000), (EnumItem::DiagnosticUploadInterface, 0x1fc000), (EnumItem::FirewallStateSwitchInterface, 0x1c0000), (EnumItem::IdsmAbstractPortInterface, 0x180000), (EnumItem::IdsmContextProviderInterface, 0x180000), (EnumItem::IdsmQualifiedEventReceiverInterface, 0x100000), (EnumItem::IdsmReportingModeProviderInterface, 0x100000), (EnumItem::IdsmTimestampProviderInterface, 0x180000), (EnumItem::Ieee1722RawDataStreamConsumerInterface, 0x100000), (EnumItem::Ieee1722RawDataStreamProducerInterface, 0x100000), (EnumItem::LogAndTraceInterface, 0x1e0000), (EnumItem::MacLayerRawDataStreamInterface, 0x100000), (EnumItem::ModeSwitchInterface, 0x1fffff), (EnumItem::NetworkManagementPortInterface, 0x180000), (EnumItem::NvDataInterface, 0x1fffff), (EnumItem::ParameterInterface, 0x1fffff), (EnumItem::PersistencyFileProxyInterface, 0xfc00), (EnumItem::PersistencyFileStorageInterface, 0x1f0000), (EnumItem::PersistencyInterface, 0x1ffc00), (EnumItem::PersistencyKeyValueDatabaseInterface, 0xfc00), (EnumItem::PersistencyKeyValueStorageInterface, 0x1f0000), (EnumItem::PhmAbstractRecoveryNotificationInterface, 0x1f0000), (EnumItem::PhmHealthChannelInterface, 0x1ff000), (EnumItem::PhmHealthChannelRecoveryNotificationInterface, 0x1f0000), (EnumItem::PhmRecoveryActionInterface, 0x1f8000), (EnumItem::PhmSupervisedEntityInterface, 0x1ff000), (EnumItem::PhmSupervisionRecoveryNotificationInterface, 0x1f0000), (EnumItem::PlatformHealthManagementInterface, 0x1ff000), (EnumItem::PortInterface, 0x1fffff), (EnumItem::RawDataStreamInterface, 0x8000), (EnumItem::RawDataStreamClientInterface, 0x1f0000), (EnumItem::RawDataStreamServerInterface, 0x1f0000), (EnumItem::RestServiceInterface, 0x1fc00), (EnumItem::SecurityEventReportInterface, 0x1f0000), (EnumItem::SenderReceiverInterface, 0x1fffff), (EnumItem::ServiceInterface, 0x1ffe00), (EnumItem::TimeSynchronizationInterface, 0xf000), (EnumItem::TimeSynchronizationMasterInterface, 0xf000), (EnumItem::TimeSynchronizationPureLocalInterface, 0xf000), (EnumItem::TimeSynchronizationSlaveInterface, 0xf000), (EnumItem::StateManagemenPhmErrorInterface, 0xc0000), (EnumItem::StateClientInterface, 0x100000), (EnumItem::StateManagementDiagTriggerInterface, 0x1c0000), (EnumItem::StateManagementEmErrorInterface, 0x1c0000), (EnumItem::StateManagementErrorInterface, 0x1c0000), (EnumItem::StateManagementFunctionGroupSwitchNotificationInterface, 0x1c0000), (EnumItem::StateManagementNotificationInterface, 0x1c0000), (EnumItem::StateManagementPhmErrorInterface, 0x100000), (EnumItem::StateManagementPortInterface, 0x1c0000), (EnumItem::StateManagementRequestInterface, 0x1c0000), (EnumItem::StateManagementTriggerInterface, 0x1c0000), (EnumItem::SynchronizedTimeBaseConsumerInterface, 0x1f0000), (EnumItem::SynchronizedTimeBaseProviderInterface, 0x1f0000), (EnumItem::TriggerInterface, 0x1fffff)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::ClientServerInterfaceMapping, 0x1fffff), (EnumItem::ModeInterfaceMapping, 0x1fffff), (EnumItem::PortInterfaceMapping, 0x1fffff), (EnumItem::ServiceInterfaceMapping, 0x1e0000), (EnumItem::TriggerInterfaceMapping, 0x1fffff), (EnumItem::VariableAndParameterInterfaceMapping, 0x1fffff)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::AbstractProvidedPortPrototype, 0x1ffff8), (EnumItem::AbstractRequiredPortPrototype, 0x1ffff8), (EnumItem::PPortPrototype, 0x1fffff), (EnumItem::PortPrototype, 0x1fffff), (EnumItem::PrPortPrototype, 0x1ffff8), (EnumItem::RPortPrototype, 0x1fffff)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::PortPrototypeBlueprint, 0x1ffffe)]},
    CharacterDataSpec::Pattern{check_fn: validate_regex_21, regex: r"0|[\+]?[1-9][0-9]*|0[xX][0-9a-fA-F]+|0[bB][0-1]+|0[0-7]+", max_length: None},
    CharacterDataSpec::Enum{items: &[(EnumItem::PostBuildVariantCriterion, 0x1fffff)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::PostBuildVariantCriterionValueSet, 0x1fffff)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::PredefinedVariant, 0x1fffff)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::PresharedKeyIdentity, 0x1c00)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::PrimitiveAttributeTailoring, 0x1fff00)]},
    CharacterDataSpec::Pattern{check_fn: validate_regex_22, regex: r"[a-zA-Z]([a-zA-Z0-9]|_[a-zA-Z0-9])*_?", max_length: Some(128)},
    CharacterDataSpec::Enum{items: &[(EnumItem::ProcessDesign, 0x8000), (EnumItem::Process, 0x1ffe00)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::ProcessDesign, 0x1ff000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::ProcessDesignToMachineDesignMapping, 0x1fc000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::ProcessExecutionError, 0x1f0000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::Restart, 0xe000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::Filtered, 0x1fffff), (EnumItem::None, 0x1fffff), (EnumItem::Raw, 0x1fffff)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::ProcessorCore, 0x1ffc00)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::C, 0x1fffff), (EnumItem::Cpp, 0x1fffff), (EnumItem::Java, 0x1fffff)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::DdsProvidedServiceInstance, 0x1f8000), (EnumItem::ProvidedApServiceInstance, 0x1f8000), (EnumItem::ProvidedSomeipServiceInstance, 0x1f8000), (EnumItem::ProvidedUserDefinedServiceInstance, 0x1f8000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::ProvidedServiceInstance, 0x1ffff8)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::Disable, 0x1fffff), (EnumItem::Enable, 0x1fffff)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::RPortPrototype, 0x1ffc00)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::Api, 0x1ffff8), (EnumItem::NvRamManager, 0x1ffff8)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::RawDataStreamInterface, 0x8000), (EnumItem::RawDataStreamClientInterface, 0x1f0000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::RawDataStreamDeployment, 0x1f8000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::RawDataStreamGrantDesign, 0x1f8000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::WillReceive, 0xfc00), (EnumItem::WontReceive, 0xfc00)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::WillReceive, 0x1f0000), (EnumItem::WontReceive, 0x1f0000)]},
    CharacterDataSpec::Pattern{check_fn: validate_regex_23, regex: r"-?([0-9]+|MAX-TEXT-SIZE|ARRAY-SIZE)", max_length: None},
    CharacterDataSpec::Enum{items: &[(EnumItem::RecoveryNotification, 0x1f0000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::RecoveryViaApplicationAction, 0x8000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::MulticoreReentrant, 0x1ffff8), (EnumItem::NonReentrant, 0x1ffff8), (EnumItem::SingleCoreReentrant, 0x1ffff8)]},
    CharacterDataSpec::Pattern{check_fn: validate_regex_24, regex: r"/?[a-zA-Z][a-zA-Z0-9_]{0,127}(/[a-zA-Z][a-zA-Z0-9_]{0,127})*", max_length: None},
    CharacterDataSpec::Enum{items: &[(EnumItem::ReferenceTailoring, 0x1fff00)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::AbstractAccessPoint, 0x1fff00), (EnumItem::AbstractCanCluster, 0x1fffff), (EnumItem::AbstractCanCommunicationConnector, 0x1fffff), (EnumItem::AbstractCanCommunicationController, 0x1fffff), (EnumItem::AbstractCanPhysicalChannel, 0x1fffff), (EnumItem::AbstractClassTailoring, 0x1fff00), (EnumItem::AbstractCryptoKeySlotInterface, 0x100000), (EnumItem::AbstractCryptoKeySlotToPortPrototypeMapping, 0x100000), (EnumItem::AbstractDoIpLogicAddressProps, 0x1f0000), (EnumItem::AbstractDoIpPortMapping, 0x100000), (EnumItem::AbstractEthernetFrame, 0x1fff00), (EnumItem::AbstractEvent, 0x1ffff8), (EnumItem::AbstractExecutionContext, 0x1fe000), (EnumItem::AbstractFunctionalClusterDesign, 0x100000), (EnumItem::AbstractIamRemoteSubject, 0x1f0000), (EnumItem::AbstractImplementationDataType, 0x1ff000), (EnumItem::AbstractImplementationDataTypeElement, 0x1fe000), (EnumItem::AbstractProvidedPortPrototype, 0x1ffff8), (EnumItem::AbstractRawDataStreamInterface, 0x1f0000), (EnumItem::AbstractRequiredPortPrototype, 0x1ffff8), (EnumItem::AbstractSecurityEventFilter, 0x1f0000), (EnumItem::AbstractSecurityIdsmInstanceFilter, 0x1f0000), (EnumItem::AbstractServiceInstance, 0x1ffff8), (EnumItem::AbstractSignalBasedToISignalTriggeringMapping, 0x1f8000), (EnumItem::AbstractSynchronizedTimeBaseInterface, 0x1f0000), (EnumItem::AclObjectSet, 0x1ffff8), (EnumItem::AclOperation, 0x1ffff8), (EnumItem::AclPermission, 0x1ffff8), (EnumItem::AclRole, 0x1ffff8), (EnumItem::Action, 0x1c00), (EnumItem::ActionItem, 0x1c00), (EnumItem::ActionList, 0x1c00), (EnumItem::AdaptiveApplicationSwComponentType, 0x1ffe00), (EnumItem::AdaptiveAutosarApplication, 0xe00), (EnumItem::AdaptiveFirewallModuleInstantiation, 0x1c0000), (EnumItem::AdaptiveFirewallToPortPrototypeMapping, 0x1c0000), (EnumItem::AdaptiveModuleInstantiation, 0x1ffe00), (EnumItem::AdaptivePlatformServiceInstance, 0x1ffe00), (EnumItem::AdaptiveSwcInternalBehavior, 0x1ffc00), (EnumItem::AgeConstraint, 0x1ffffc), (EnumItem::AggregationTailoring, 0x1fff00), (EnumItem::AliasNameSet, 0x1fffff), (EnumItem::AliveSupervision, 0x1ffc00), (EnumItem::Allocator, 0x1ffc00), (EnumItem::AnalyzedExecutionTime, 0x1fffff), (EnumItem::ApApplicationEndpoint, 0x1e0000), (EnumItem::ApApplicationError, 0x1fe000), (EnumItem::ApApplicationErrorDomain, 0x1fe000), (EnumItem::ApApplicationErrorSet, 0x1fe000), (EnumItem::ApSomeipTransformationProps, 0x1ffe00), (EnumItem::ApplicationActionItem, 0x1c00), (EnumItem::ApmcAbstractDefinition, 0x100000), (EnumItem::ApmcAbstractForeignReferenceDef, 0x100000), (EnumItem::ApmcAbstractInstanceReferenceDef, 0x100000), (EnumItem::ApmcAbstractInstanceReferenceValue, 0x100000), (EnumItem::ApmcAbstractReferenceValue, 0x100000), (EnumItem::ApmcBooleanParamDef, 0x100000), (EnumItem::ApmcChoiceContainerDef, 0x100000), (EnumItem::ApmcChoiceContainerReferenceDef, 0x100000), (EnumItem::ApmcConfigurationElementDef, 0x100000), (EnumItem::ApmcContainerDef, 0x100000), (EnumItem::ApmcContainerElementDef, 0x100000), (EnumItem::ApmcContainerElementValue, 0x100000), (EnumItem::ApmcContainerReferenceDef, 0x100000), (EnumItem::ApmcContainerReferenceValue, 0x100000), (EnumItem::ApmcContainerValue, 0x100000), (EnumItem::ApmcDefinitionCollection, 0x100000), (EnumItem::ApmcEnumerationLiteralDef, 0x100000), (EnumItem::ApmcEnumerationParamDef, 0x100000), (EnumItem::ApmcFloatParamDef, 0x100000), (EnumItem::ApmcForeignReferenceDef, 0x100000), (EnumItem::ApmcForeignReferenceValue, 0x100000), (EnumItem::ApmcFunctionalClusterDef, 0x100000), (EnumItem::ApmcFunctionalClusterValue, 0x100000), (EnumItem::ApmcInstanceReferenceDef, 0x100000), (EnumItem::ApmcInstanceReferenceValue, 0x100000), (EnumItem::ApmcIntegerParamDef, 0x100000), (EnumItem::ApmcNumericalParamValue, 0x100000), (EnumItem::ApmcParamConfContainerDef, 0x100000), (EnumItem::ApmcParameterDef, 0x100000), (EnumItem::ApmcParameterValue, 0x100000), (EnumItem::ApmcReferenceDef, 0x100000), (EnumItem::ApmcReferenceValue, 0x100000), (EnumItem::ApmcStringParamDef, 0x100000), (EnumItem::ApmcTextualParamValue, 0x100000), (EnumItem::ApmcUpstreamDocForeignReferenceDef, 0x100000), (EnumItem::ApmcUpstreamDocForeignReferenceValue, 0x100000), (EnumItem::ApmcUpstreamDocInstanceReferenceDef, 0x100000), (EnumItem::ApmcUpstreamDocInstanceReferenceValue, 0x100000), (EnumItem::ApmcUriForeignReferenceDef, 0x100000), (EnumItem::ApmcUriForeignReferenceValue, 0x100000), (EnumItem::ApmcUriInstanceReferenceDef, 0x100000), (EnumItem::ApmcUriInstanceReferenceValue, 0x100000), (EnumItem::ApmcValueCollection, 0x100000), (EnumItem::AppOsTaskProxyToEcuTaskProxyMapping, 0x1e0000), (EnumItem::ApplicabilityInfoSet, 0x180000), (EnumItem::ApplicationArrayDataType, 0x1fffff), (EnumItem::ApplicationArrayElement, 0x1fffff), (EnumItem::ApplicationAssocMapDataType, 0x1ffe00), (EnumItem::ApplicationAssocMapElement, 0x1ffe00), (EnumItem::ApplicationCompositeDataType, 0x1fffff), (EnumItem::ApplicationCompositeElementDataPrototype, 0x1fffff), (EnumItem::ApplicationDataType, 0x1fffff), (EnumItem::ApplicationDeferredDataType, 0x1f0000), (EnumItem::ApplicationEndpoint, 0x1ffff8), (EnumItem::ApplicationError, 0x1fffff), (EnumItem::ApplicationModeRequestPhmActionItem, 0xe000), (EnumItem::ApplicationInterface, 0x1e0000), (EnumItem::ApplicationPartition, 0x1fff00), (EnumItem::ApplicationPartitionToEcuPartitionMapping, 0x1fff00), (EnumItem::ApplicationPrimitiveDataType, 0x1fffff), (EnumItem::ApplicationRecordDataType, 0x1fffff), (EnumItem::ApplicationRecordElement, 0x1fffff), (EnumItem::ApplicationSwComponentType, 0x1fffff), (EnumItem::AppliedStandard, 0x180000), (EnumItem::ArElement, 0x1fffff), (EnumItem::ArPackage, 0x1fffff), (EnumItem::ArbitraryEventTriggering, 0x1fffff), (EnumItem::Arbitration, 0x1c00), (EnumItem::ArgumentDataPrototype, 0x1fffff), (EnumItem::ArtifactChecksum, 0x1e0000), (EnumItem::ArtifactChecksumToCryptoProviderMapping, 0x1e0000), (EnumItem::ArtifactLocator, 0x1c0000), (EnumItem::AssemblySwConnector, 0x1fffff), (EnumItem::AsynchronousServerCallPoint, 0x1fffff), (EnumItem::AsynchronousServerCallResultPoint, 0x1fffff), (EnumItem::AsynchronousServerCallReturnsEvent, 0x1fffff), (EnumItem::AtomicSwComponentType, 0x1fffff), (EnumItem::AtpBlueprint, 0x1ffffe), (EnumItem::AtpBlueprintable, 0x1ffffe), (EnumItem::AtpClassifier, 0x1fffff), (EnumItem::AtpDefinition, 0x1ffff8), (EnumItem::AtpFeature, 0x1fffff), (EnumItem::AtpPrototype, 0x1fffff), (EnumItem::AtpStructureElement, 0x1fffff), (EnumItem::AtpType, 0x1fffff), (EnumItem::AttributeTailoring, 0x1fff00), (EnumItem::AutosarDataPrototype, 0x1fffff), (EnumItem::AutosarDataType, 0x1fffff), (EnumItem::AutosarOperationArgumentInstance, 0x1ffffc), (EnumItem::AutosarVariableInstance, 0x1ffffc), (EnumItem::BackgroundEvent, 0x1fffff), (EnumItem::BaseType, 0x1fffff), (EnumItem::BinaryManifestAddressableObject, 0x1f0000), (EnumItem::BinaryManifestItem, 0x1f0000), (EnumItem::BinaryManifestItemDefinition, 0x1f0000), (EnumItem::BinaryManifestMetaDataField, 0x1f0000), (EnumItem::BinaryManifestProvideResource, 0x1f0000), (EnumItem::BinaryManifestRequireResource, 0x1f0000), (EnumItem::BinaryManifestResource, 0x1f0000), (EnumItem::BinaryManifestResourceDefinition, 0x1f0000), (EnumItem::BlockState, 0x1f0000), (EnumItem::BlueprintMappingSet, 0x1fffff), (EnumItem::BswAsynchronousServerCallPoint, 0x1ffff8), (EnumItem::BswAsynchronousServerCallResultPoint, 0x1ffff8), (EnumItem::BswAsynchronousServerCallReturnsEvent, 0x1ffff8), (EnumItem::BswBackgroundEvent, 0x1fffff), (EnumItem::BswCalledEntity, 0x1fffff), (EnumItem::BswCompositionTiming, 0x1fe000), (EnumItem::BswDataReceivedEvent, 0x1ffff8), (EnumItem::BswDebugInfo, 0x1fffff), (EnumItem::BswDirectCallPoint, 0x1ffff8), (EnumItem::BswDistinguishedPartition, 0x1ffff8), (EnumItem::BswEntryRelationshipSet, 0x1fff00), (EnumItem::BswEvent, 0x1fffff), (EnumItem::BswExternalTriggerOccurredEvent, 0x1fffff), (EnumItem::BswImplementation, 0x1fffff), (EnumItem::BswInternalBehavior, 0x1fffff), (EnumItem::BswInternalTriggerOccurredEvent, 0x1fffff), (EnumItem::BswInternalTriggeringPoint, 0x1fffff), (EnumItem::BswInterruptEntity, 0x1fffff), (EnumItem::BswInterruptEvent, 0x180000), (EnumItem::BswMgrNeeds, 0x1ffffc), (EnumItem::BswModeManagerErrorEvent, 0x1ffff8), (EnumItem::BswModeSwitchEvent, 0x1fffff), (EnumItem::BswModeSwitchedAckEvent, 0x1fffff), (EnumItem::BswModuleCallPoint, 0x1ffff8), (EnumItem::BswModuleClientServerEntry, 0x1ffff8), (EnumItem::BswModuleDependency, 0x1fffff), (EnumItem::BswModuleDescription, 0x1fffff), (EnumItem::BswModuleEntity, 0x1fffff), (EnumItem::BswModuleEntry, 0x1fffff), (EnumItem::BswModuleTiming, 0x1fffff), (EnumItem::BswOperationInvokedEvent, 0x1ffff8), (EnumItem::BswOsTaskExecutionEvent, 0x1f0000), (EnumItem::BswSchedulableEntity, 0x1fffff), (EnumItem::BswScheduleEvent, 0x1ffff8), (EnumItem::BswSchedulerNamePrefix, 0x1ffffc), (EnumItem::BswServiceDependencyIdent, 0x1fffc0), (EnumItem::BswSynchronousServerCallPoint, 0x1ffff8), (EnumItem::BswTimingEvent, 0x1fffff), (EnumItem::BswVariableAccess, 0x1ffff8), (EnumItem::BuildAction, 0x1ffff8), (EnumItem::BuildActionEntity, 0x1ffff8), (EnumItem::BuildActionEnvironment, 0x1ffff8), (EnumItem::BuildActionManifest, 0x1ffff8), (EnumItem::BulkNvDataDescriptor, 0x1f8000), (EnumItem::BurstPatternEventTriggering, 0x1fffff), (EnumItem::BusMirrorChannelMapping, 0x1fe000), (EnumItem::BusMirrorChannelMappingCan, 0x1fe000), (EnumItem::BusMirrorChannelMappingFlexray, 0x1fe000), (EnumItem::BusMirrorChannelMappingIp, 0x1fe000), (EnumItem::BusMirrorChannelMappingUserDefined, 0x1fe000), (EnumItem::CalibrationParameterValueSet, 0x1fffff), (EnumItem::CanCluster, 0x1fffff), (EnumItem::CanCommunicationConnector, 0x1fffff), (EnumItem::CanCommunicationController, 0x1fffff), (EnumItem::CanFrame, 0x1fffff), (EnumItem::CanFrameTriggering, 0x1fffff), (EnumItem::CanNmCluster, 0x1fffff), (EnumItem::CanNmNode, 0x1fffff), (EnumItem::CanPhysicalChannel, 0x1fffff), (EnumItem::CanTpAddress, 0x1ffffe), (EnumItem::CanTpChannel, 0x1ffffe), (EnumItem::CanTpConfig, 0x1fffff), (EnumItem::CanTpNode, 0x1fffff), (EnumItem::CanXlProps, 0x1c0000), (EnumItem::Caption, 0x1fffff), (EnumItem::Chapter, 0x1fffff), (EnumItem::ChargeManagerNeeds, 0x100000), (EnumItem::CheckpointTransition, 0x1ffc00), (EnumItem::ClassContentConditional, 0x1fff00), (EnumItem::ClientIdDefinition, 0x1fffc0), (EnumItem::ClientIdDefinitionSet, 0x1fffc0), (EnumItem::ClientServerInterface, 0x1fffff), (EnumItem::ClientServerInterfaceMapping, 0x1fffff), (EnumItem::ClientServerInterfaceToBswModuleEntryBlueprintMapping, 0x1fff00), (EnumItem::ClientServerOperation, 0x1fffff), (EnumItem::CmModuleInstantiation, 0x100000), (EnumItem::Code, 0x1fffff), (EnumItem::CollectableElement, 0x1ffffe), (EnumItem::Collection, 0x1fffff), (EnumItem::ComCertificateToCryptoCertificateMapping, 0x1f0000), (EnumItem::ComEventGrant, 0x1fc000), (EnumItem::ComEventGrantDesign, 0x1fc000), (EnumItem::ComFieldGrant, 0x1fc000), (EnumItem::ComFieldGrantDesign, 0x1fc000), (EnumItem::ComFindServiceGrant, 0x1fc000), (EnumItem::ComFindServiceGrantDesign, 0x1fc000), (EnumItem::ComGrant, 0x1f0000), (EnumItem::ComGrantDesign, 0x1f0000), (EnumItem::ComKeyToCryptoKeySlotMapping, 0x1f0000), (EnumItem::ComManagementMapping, 0x1fe000), (EnumItem::ComMethodGrant, 0x1fc000), (EnumItem::ComMethodGrantDesign, 0x1fc000), (EnumItem::ComMgrUserNeeds, 0x1fffff), (EnumItem::ComOfferServiceGrant, 0x1fc000), (EnumItem::ComOfferServiceGrantDesign, 0x1fc000), (EnumItem::ComSecOcToCryptoKeySlotMapping, 0x1f0000), (EnumItem::ComTriggerGrant, 0x180000), (EnumItem::ComTriggerGrantDesign, 0x1e0000), (EnumItem::CommConnectorPort, 0x1fffff), (EnumItem::CommunicationCluster, 0x1fffff), (EnumItem::CommunicationConnector, 0x1fffff), (EnumItem::CommunicationController, 0x1fffff), (EnumItem::Compiler, 0x1fffff), (EnumItem::ComplexDeviceDriverSwComponentType, 0x1fffff), (EnumItem::CompositeInterface, 0x18000), (EnumItem::CompositionPPortToExecutablePPortMapping, 0x1f8000), (EnumItem::CompositionPortToExecutablePortMapping, 0x1f8000), (EnumItem::CompositionRPortToExecutableRPortMapping, 0x1f8000), (EnumItem::CompositionSwComponentType, 0x1fffff), (EnumItem::CompuMethod, 0x1fffff), (EnumItem::ConcreteClassTailoring, 0x1fff00), (EnumItem::ConcretePatternEventTriggering, 0x1fffff), (EnumItem::ConsistencyNeeds, 0x1ffff8), (EnumItem::ConsistencyNeedsBlueprintSet, 0x1ffff8), (EnumItem::ConstantSpecification, 0x1fffff), (EnumItem::ConstantSpecificationMappingSet, 0x1fffff), (EnumItem::ConstraintTailoring, 0x1fff00), (EnumItem::ConsumedEventGroup, 0x1ffff8), (EnumItem::ConsumedProvidedServiceInstanceGroup, 0x1f8000), (EnumItem::ConsumedServiceInstance, 0x1ffff8), (EnumItem::ContainerIPdu, 0x1fffc0), (EnumItem::CouplingElement, 0x1ffff8), (EnumItem::CouplingElementAbstractDetails, 0x180000), (EnumItem::CouplingElementSwitchDetails, 0x180000), (EnumItem::CouplingPort, 0x1ffff8), (EnumItem::CouplingPortAbstractShaper, 0x180000), (EnumItem::CouplingPortAsynchronousTrafficShaper, 0x180000), (EnumItem::CouplingPortCreditBasedShaper, 0x180000), (EnumItem::CouplingPortEnhancedTrafficShaper, 0x100000), (EnumItem::CouplingPortFifo, 0x1fffc0), (EnumItem::CouplingPortScheduler, 0x1fffc0), (EnumItem::CouplingPortShaper, 0x1fffc0), (EnumItem::CouplingPortStructuralElement, 0x1fffc0), (EnumItem::CouplingPortTrafficClassAssignment, 0x1fffc0), (EnumItem::CpSoftwareCluster, 0x1f0000), (EnumItem::CpSoftwareClusterBinaryManifestDescriptor, 0x1f0000), (EnumItem::CpSoftwareClusterCommunicationResource, 0x1f0000), (EnumItem::CpSoftwareClusterMappingSet, 0x1f0000), (EnumItem::CpSoftwareClusterResource, 0x1f0000), (EnumItem::CpSoftwareClusterResourcePool, 0x1f0000), (EnumItem::CpSoftwareClusterResourceToApplicationPartitionMapping, 0x1f0000), (EnumItem::CpSoftwareClusterServiceResource, 0x1f0000), (EnumItem::CpSoftwareClusterToApplicationPartitionMapping, 0x180000), (EnumItem::CpSoftwareClusterToEcuInstanceMapping, 0x1f0000), (EnumItem::CpSoftwareClusterToResourceMapping, 0x1f0000), (EnumItem::CpSwClusterResourceToDiagDataElemMapping, 0x1e0000), (EnumItem::CpSwClusterResourceToDiagFunctionIdMapping, 0x1e0000), (EnumItem::CpSwClusterToDiagEventMapping, 0x1e0000), (EnumItem::CpSwClusterToDiagRoutineSubfunctionMapping, 0x1e0000), (EnumItem::CppImplementationDataType, 0x1ff000), (EnumItem::CppImplementationDataTypeContextTarget, 0x1fe000), (EnumItem::CppImplementationDataTypeElement, 0x1ff000), (EnumItem::CryptoDriver, 0x1c00), (EnumItem::CryptoJob, 0x1c00), (EnumItem::CryptoCertificate, 0x1f0000), (EnumItem::CryptoCertificateInterface, 0x1f0000), (EnumItem::CryptoCertificateKeySlotNeeds, 0x1f0000), (EnumItem::CryptoCertificateToPortPrototypeMapping, 0x1f0000), (EnumItem::CryptoEllipticCurveProps, 0x1e0000), (EnumItem::CryptoInterface, 0x1f0000), (EnumItem::CryptoKeyManagementNeeds, 0x1f0000), (EnumItem::CryptoKeySlot, 0x1f9c00), (EnumItem::CryptoKeySlotClientInterface, 0x100000), (EnumItem::CryptoKeySlotDesign, 0x100000), (EnumItem::CryptoKeySlotInterface, 0x1f0000), (EnumItem::CryptoKeySlotToClientPortPrototypeMapping, 0x100000), (EnumItem::CryptoKeySlotToPortPrototypeMapping, 0x1f0000), (EnumItem::CryptoKeySlotUsageDesign, 0x100000), (EnumItem::CryptoKeySlotUsageDesignMapping, 0x100000), (EnumItem::CryptoKeySlotUserDesign, 0x100000), (EnumItem::CryptoKeySlotUserDesignMapping, 0x100000), (EnumItem::CryptoModuleInstantiation, 0x1f9c00), (EnumItem::CryptoNeed, 0x1c00), (EnumItem::CryptoNeedToCryptoJobMapping, 0x1c00), (EnumItem::CryptoNeedToPortPrototypeMapping, 0x1fc00), (EnumItem::CryptoPrimitive, 0x1c00), (EnumItem::CryptoNeeds, 0x1f0000), (EnumItem::CryptoProvider, 0x1f0000), (EnumItem::CryptoProviderInterface, 0x1f0000), (EnumItem::CryptoProviderToPortPrototypeMapping, 0x1f0000), (EnumItem::CryptoServiceCertificate, 0x1fe000), (EnumItem::CryptoServiceJobNeeds, 0x1fe000), (EnumItem::CryptoServiceKey, 0x1fe000), (EnumItem::CryptoServiceMapping, 0x1fe000), (EnumItem::CryptoServiceNeeds, 0x1fffff), (EnumItem::CryptoServicePrimitive, 0x1fe000), (EnumItem::CryptoServiceQueue, 0x1f8000), (EnumItem::CryptoSignatureScheme, 0x1e0000), (EnumItem::CryptoTrustMasterInterface, 0x1f0000), (EnumItem::CustomCppImplementationDataType, 0x1fe000), (EnumItem::DataConstr, 0x1fffff), (EnumItem::DataExchangePoint, 0x1fff00), (EnumItem::DataFormatElementReference, 0x1fff00), (EnumItem::DataFormatElementScope, 0x1fff00), (EnumItem::DataInterface, 0x1fffff), (EnumItem::DataPrototype, 0x1fffff), (EnumItem::DataPrototypeGroup, 0x1ffff8), (EnumItem::DataPrototypeTransformationPropsIdent, 0x100000), (EnumItem::DataReceiveErrorEvent, 0x1fffff), (EnumItem::DataReceivedEvent, 0x1fffff), (EnumItem::DataSendCompletedEvent, 0x1fffff), (EnumItem::DataTransformation, 0x1fffc0), (EnumItem::DataTransformationSet, 0x1fffc0), (EnumItem::DataTypeMappingSet, 0x1fffff), (EnumItem::DataWriteCompletedEvent, 0x1fffff), (EnumItem::DcmIPdu, 0x1fffff), (EnumItem::DdsCpConfig, 0x180000), (EnumItem::DdsCpConsumedServiceInstance, 0x180000), (EnumItem::DdsCpDomain, 0x180000), (EnumItem::DdsCpPartition, 0x180000), (EnumItem::DdsCpProvidedServiceInstance, 0x180000), (EnumItem::DdsCpQosProfile, 0x180000), (EnumItem::DdsCpServiceInstance, 0x180000), (EnumItem::DdsCpTopic, 0x180000), (EnumItem::DdsDomainRange, 0x1e0000), (EnumItem::DdsEventDeployment, 0x1ff000), (EnumItem::DdsFieldDeployment, 0x1fe000), (EnumItem::DdsMethodDeployment, 0xe000), (EnumItem::DdsProvidedServiceInstance, 0x1fe000), (EnumItem::DdsRequiredServiceInstance, 0x1fe000), (EnumItem::DdsRpcServiceDeployment, 0xe000), (EnumItem::DdsSecureComProps, 0x1e0000), (EnumItem::DdsSecureGovernance, 0x1e0000), (EnumItem::DdsServiceInstanceToMachineMapping, 0x1ff000), (EnumItem::DdsServiceInterfaceDeployment, 0x1ff000), (EnumItem::DdsTopicAccessRule, 0x1e0000), (EnumItem::DeadlineSupervision, 0x1ffc00), (EnumItem::DefItem, 0x1fffff), (EnumItem::DelegationSwConnector, 0x1fffff), (EnumItem::DependencyOnArtifact, 0x1fffff), (EnumItem::DeterministicClient, 0x7e000), (EnumItem::DeterministicClientResourceNeeds, 0x7e000), (EnumItem::DeterministicSyncInstantiation, 0x40000), (EnumItem::DeterministicSyncMaster, 0x40000), (EnumItem::DeterministicSyncMasterToTimeBaseConsumerMapping, 0x40000), (EnumItem::DevelopmentError, 0x1fff00), (EnumItem::DiagEventDebounceAlgorithm, 0x1fffff), (EnumItem::DiagEventDebounceCounterBased, 0x1ffffe), (EnumItem::DiagEventDebounceMonitorInternal, 0x1ffffe), (EnumItem::DiagEventDebounceTimeBased, 0x1ffffe), (EnumItem::DiagnosticAbstractAliasEvent, 0x1fff00), (EnumItem::DiagnosticAbstractDataIdentifier, 0x1fffc0), (EnumItem::DiagnosticAbstractDataIdentifierInterface, 0x1fc000), (EnumItem::DiagnosticAbstractRoutineInterface, 0x1fc000), (EnumItem::DiagnosticAccessPermission, 0x1fffc0), (EnumItem::DiagnosticAging, 0x1fffc0), (EnumItem::DiagnosticAuthRole, 0x1e0000), (EnumItem::DiagnosticAuthTransmitCertificate, 0x180000), (EnumItem::DiagnosticAuthTransmitCertificateEvaluation, 0x180000), (EnumItem::DiagnosticAuthTransmitCertificateMapping, 0x180000), (EnumItem::DiagnosticAuthentication, 0x1e0000), (EnumItem::DiagnosticAuthenticationClass, 0x1e0000), (EnumItem::DiagnosticAuthenticationConfiguration, 0x1e0000), (EnumItem::DiagnosticAuthenticationInterface, 0x1e0000), (EnumItem::DiagnosticAuthenticationPortMapping, 0x1e0000), (EnumItem::DiagnosticCapabilityElement, 0x1fffff), (EnumItem::DiagnosticClearCondition, 0x1fe000), (EnumItem::DiagnosticClearConditionGroup, 0x1fe000), (EnumItem::DiagnosticClearConditionNeeds, 0x1fc000), (EnumItem::DiagnosticClearConditionPortMapping, 0x1fc000), (EnumItem::DiagnosticClearDiagnosticInformation, 0x1fffc0), (EnumItem::DiagnosticClearDiagnosticInformationClass, 0x1fffc0), (EnumItem::DiagnosticClearResetEmissionRelatedInfo, 0x1fff00), (EnumItem::DiagnosticClearResetEmissionRelatedInfoClass, 0x1fff00), (EnumItem::DiagnosticComControl, 0x1fffc0), (EnumItem::DiagnosticComControlClass, 0x1fffc0), (EnumItem::DiagnosticComControlInterface, 0x1e0000), (EnumItem::DiagnosticCommonElement, 0x1fffc0), (EnumItem::DiagnosticCommunicationManagerNeeds, 0x1fffff), (EnumItem::DiagnosticComponentNeeds, 0x1fff00), (EnumItem::DiagnosticCondition, 0x1fffc0), (EnumItem::DiagnosticConditionGroup, 0x1fffc0), (EnumItem::DiagnosticConditionInterface, 0x1fc000), (EnumItem::DiagnosticConnectedIndicator, 0x1fffc0), (EnumItem::DiagnosticConnection, 0x1fffc0), (EnumItem::DiagnosticContributionSet, 0x1fffc0), (EnumItem::DiagnosticControlDtcSetting, 0x1fffc0), (EnumItem::DiagnosticControlDtcSettingClass, 0x1fffc0), (EnumItem::DiagnosticControlNeeds, 0x1fff00), (EnumItem::DiagnosticCustomServiceClass, 0x1fffc0), (EnumItem::DiagnosticCustomServiceInstance, 0x1fe000), (EnumItem::DiagnosticDataByIdentifier, 0x1fffc0), (EnumItem::DiagnosticDataElement, 0x1fffc0), (EnumItem::DiagnosticDataElementInterface, 0x1fc000), (EnumItem::DiagnosticDataIdentifier, 0x1fffc0), (EnumItem::DiagnosticDataIdentifierGenericInterface, 0x1fc000), (EnumItem::DiagnosticDataIdentifierInterface, 0x1fc000), (EnumItem::DiagnosticDataIdentifierSet, 0x1fffc0), (EnumItem::DiagnosticDataPortMapping, 0x1e0000), (EnumItem::DiagnosticDataTransfer, 0x1fffc0), (EnumItem::DiagnosticDataTransferClass, 0x1fffc0), (EnumItem::DiagnosticDeAuthentication, 0x1e0000), (EnumItem::DiagnosticDebounceAlgorithmProps, 0x1fffc0), (EnumItem::DiagnosticDemProvidedDataMapping, 0x1fffc0), (EnumItem::DiagnosticDoIpActivationLineInterface, 0x1f8000), (EnumItem::DiagnosticDoIpActivationLinePortMapping, 0x100000), (EnumItem::DiagnosticDoIpEntityIdentificationInterface, 0x1c0000), (EnumItem::DiagnosticDoIpEntityIdentificationPortMapping, 0x100000), (EnumItem::DiagnosticDoIpGroupIdentificationInterface, 0x1fc000), (EnumItem::DiagnosticDoIpGroupIdentificationPortMapping, 0x100000), (EnumItem::DiagnosticDoIpPowerModeInterface, 0x1fc000), (EnumItem::DiagnosticDoIpPowerModePortMapping, 0x100000), (EnumItem::DiagnosticDoIpTriggerVehicleAnnouncementInterface, 0x1f8000), (EnumItem::DiagnosticDoIpTriggerVehicleAnnouncementPortMapping, 0x100000), (EnumItem::DiagnosticDownloadInterface, 0x1fc000), (EnumItem::DiagnosticDtcInformationInterface, 0x1fc000), (EnumItem::DiagnosticDynamicDataIdentifier, 0x1fffc0), (EnumItem::DiagnosticDynamicallyDefineDataIdentifier, 0x1fffc0), (EnumItem::DiagnosticDynamicallyDefineDataIdentifierClass, 0x1fffc0), (EnumItem::DiagnosticEcuInstanceProps, 0x1fff00), (EnumItem::DiagnosticEcuReset, 0x1fffc0), (EnumItem::DiagnosticEcuResetClass, 0x1fffc0), (EnumItem::DiagnosticEcuResetInterface, 0x1f0000), (EnumItem::DiagnosticEnableCondition, 0x1fffc0), (EnumItem::DiagnosticEnableConditionGroup, 0x1fffc0), (EnumItem::DiagnosticEnableConditionNeeds, 0x1ffff0), (EnumItem::DiagnosticEnableConditionPortMapping, 0x1fffc0), (EnumItem::DiagnosticEnvBswModeElement, 0x1fff00), (EnumItem::DiagnosticEnvModeElement, 0x1fff00), (EnumItem::DiagnosticEnvSwcModeElement, 0x1fff00), (EnumItem::DiagnosticEnvironmentalCondition, 0x1fff00), (EnumItem::DiagnosticEvent, 0x1fffc0), (EnumItem::DiagnosticEventInfoNeeds, 0x1ffff8), (EnumItem::DiagnosticEventInterface, 0x1fc000), (EnumItem::DiagnosticEventManagerNeeds, 0x1fffff), (EnumItem::DiagnosticEventNeeds, 0x1fffff), (EnumItem::DiagnosticEventPortMapping, 0x1fffc0), (EnumItem::DiagnosticEventToDebounceAlgorithmMapping, 0x1fffc0), (EnumItem::DiagnosticEventToEnableConditionGroupMapping, 0x1fffc0), (EnumItem::DiagnosticEventToOperationCycleMapping, 0x1fffc0), (EnumItem::DiagnosticEventToSecurityEventMapping, 0x1f0000), (EnumItem::DiagnosticEventToStorageConditionGroupMapping, 0x1fffc0), (EnumItem::DiagnosticEventToTroubleCodeJ1939Mapping, 0x1fe000), (EnumItem::DiagnosticEventToTroubleCodeUdsMapping, 0x1fffc0), (EnumItem::DiagnosticExtendedDataRecord, 0x1fffc0), (EnumItem::DiagnosticExternalAuthenticationInterface, 0x1e0000), (EnumItem::DiagnosticExternalAuthenticationPortMapping, 0x1e0000), (EnumItem::DiagnosticFimAliasEvent, 0x1fff00), (EnumItem::DiagnosticFimAliasEventGroup, 0x1fff00), (EnumItem::DiagnosticFimAliasEventGroupMapping, 0x1fff00), (EnumItem::DiagnosticFimAliasEventMapping, 0x1fff00), (EnumItem::DiagnosticFimEventGroup, 0x1fff00), (EnumItem::DiagnosticFimFunctionMapping, 0x1fff00), (EnumItem::DiagnosticFreezeFrame, 0x1fffc0), (EnumItem::DiagnosticFunctionIdentifier, 0x1fff00), (EnumItem::DiagnosticFunctionIdentifierInhibit, 0x1fff00), (EnumItem::DiagnosticFunctionInhibitSource, 0x1fff00), (EnumItem::DiagnosticGenericUdsInterface, 0x1fc000), (EnumItem::DiagnosticGenericUdsNeeds, 0x1fc000), (EnumItem::DiagnosticGenericUdsPortMapping, 0xc000), (EnumItem::DiagnosticIndicator, 0x1fffc0), (EnumItem::DiagnosticIndicatorInterface, 0x1fc000), (EnumItem::DiagnosticIndicatorNeeds, 0x1fc000), (EnumItem::DiagnosticIndicatorPortMapping, 0x1fc000), (EnumItem::DiagnosticInfoType, 0x1fff00), (EnumItem::DiagnosticInhibitSourceEventMapping, 0x1fff00), (EnumItem::DiagnosticIoControl, 0x1fffc0), (EnumItem::DiagnosticIoControlClass, 0x1fffc0), (EnumItem::DiagnosticIoControlNeeds, 0x1fffff), (EnumItem::DiagnosticIumpr, 0x1fff00), (EnumItem::DiagnosticIumprDenominatorGroup, 0x1fff00), (EnumItem::DiagnosticIumprGroup, 0x1fff00), (EnumItem::DiagnosticIumprToFunctionIdentifierMapping, 0x1e0000), (EnumItem::DiagnosticJ1939ExpandedFreezeFrame, 0x1fff00), (EnumItem::DiagnosticJ1939FreezeFrame, 0x1fff00), (EnumItem::DiagnosticJ1939Node, 0x1fff00), (EnumItem::DiagnosticJ1939Spn, 0x1fff00), (EnumItem::DiagnosticJ1939SpnMapping, 0x1fff00), (EnumItem::DiagnosticJ1939SwMapping, 0x1fff00), (EnumItem::DiagnosticMapping, 0x1fffc0), (EnumItem::DiagnosticMasterToSlaveEventMapping, 0x1fe000), (EnumItem::DiagnosticMasterToSlaveEventMappingSet, 0x1fe000), (EnumItem::DiagnosticMeasurementIdentifier, 0x1fff00), (EnumItem::DiagnosticMemoryAddressableRangeAccess, 0x1fffc0), (EnumItem::DiagnosticMemoryByAddress, 0x1fffc0), (EnumItem::DiagnosticMemoryDestination, 0x1fffc0), (EnumItem::DiagnosticMemoryDestinationMirror, 0x1fffc0), (EnumItem::DiagnosticMemoryDestinationPortMapping, 0x1fc000), (EnumItem::DiagnosticMemoryDestinationPrimary, 0x1fffc0), (EnumItem::DiagnosticMemoryDestinationUserDefined, 0x1fffc0), (EnumItem::DiagnosticMemoryIdentifier, 0x1fffc0), (EnumItem::DiagnosticMonitorInterface, 0x1fc000), (EnumItem::DiagnosticMonitorPortMapping, 0x1e0000), (EnumItem::DiagnosticMultipleConditionInterface, 0x180000), (EnumItem::DiagnosticMultipleConditionPortMapping, 0x180000), (EnumItem::DiagnosticMultipleEventInterface, 0x180000), (EnumItem::DiagnosticMultipleEventPortMapping, 0x180000), (EnumItem::DiagnosticMultipleMonitorInterface, 0x180000), (EnumItem::DiagnosticMultipleMonitorPortMapping, 0x180000), (EnumItem::DiagnosticMultipleResourceInterface, 0x180000), (EnumItem::DiagnosticMultipleResourcePortMapping, 0x180000), (EnumItem::DiagnosticOperationCycle, 0x1fffc0), (EnumItem::DiagnosticOperationCycleInterface, 0x1fc000), (EnumItem::DiagnosticOperationCycleNeeds, 0x1ffff0), (EnumItem::DiagnosticOperationCyclePortMapping, 0x1fffc0), (EnumItem::DiagnosticParameterElement, 0x1c0000), (EnumItem::DiagnosticParameterIdent, 0x1c0000), (EnumItem::DiagnosticParameterIdentifier, 0x1fff00), (EnumItem::DiagnosticPortInterface, 0x1fc000), (EnumItem::DiagnosticPowertrainFreezeFrame, 0x1fff00), (EnumItem::DiagnosticProofOfOwnership, 0x1e0000), (EnumItem::DiagnosticProtocol, 0x1fff00), (EnumItem::DiagnosticProvidedDataMapping, 0x1fc000), (EnumItem::DiagnosticReadDataByIdentifier, 0x1fffc0), (EnumItem::DiagnosticReadDataByIdentifierClass, 0x1fffc0), (EnumItem::DiagnosticReadDataByPeriodicId, 0x1fffc0), (EnumItem::DiagnosticReadDataByPeriodicIdClass, 0x1fffc0), (EnumItem::DiagnosticReadDtcInformation, 0x1fffc0), (EnumItem::DiagnosticReadDtcInformationClass, 0x1fffc0), (EnumItem::DiagnosticReadMemoryByAddress, 0x1fffc0), (EnumItem::DiagnosticReadMemoryByAddressClass, 0x1fffc0), (EnumItem::DiagnosticReadScalingDataByIdentifier, 0x1fe000), (EnumItem::DiagnosticReadScalingDataByIdentifierClass, 0x1fe000), (EnumItem::DiagnosticRequestControlOfOnBoardDevice, 0x1fff00), (EnumItem::DiagnosticRequestControlOfOnBoardDeviceClass, 0x1fff00), (EnumItem::DiagnosticRequestCurrentPowertrainData, 0x1fff00), (EnumItem::DiagnosticRequestCurrentPowertrainDataClass, 0x1fff00), (EnumItem::DiagnosticRequestDownload, 0x1fffc0), (EnumItem::DiagnosticRequestDownloadClass, 0x1fffc0), (EnumItem::DiagnosticRequestEmissionRelatedDtc, 0x1fff00), (EnumItem::DiagnosticRequestEmissionRelatedDtcClass, 0x1fff00), (EnumItem::DiagnosticRequestEmissionRelatedDtcPermanentStatus, 0x1fff00), (EnumItem::DiagnosticRequestEmissionRelatedDtcPermanentStatusClass, 0x1fff00), (EnumItem::DiagnosticRequestFileTransfer, 0x1fffc0), (EnumItem::DiagnosticRequestFileTransferClass, 0x1fffc0), (EnumItem::DiagnosticRequestFileTransferInterface, 0x1c0000), (EnumItem::DiagnosticRequestFileTransferNeeds, 0x1fe000), (EnumItem::DiagnosticRequestOnBoardMonitoringTestResults, 0x1fff00), (EnumItem::DiagnosticRequestOnBoardMonitoringTestResultsClass, 0x1fff00), (EnumItem::DiagnosticRequestPowertrainFreezeFrameData, 0x1fff00), (EnumItem::DiagnosticRequestPowertrainFreezeFrameDataClass, 0x1fff00), (EnumItem::DiagnosticRequestRoutineResults, 0x1fffc0), (EnumItem::DiagnosticRequestUpload, 0x1fffc0), (EnumItem::DiagnosticRequestUploadClass, 0x1fffc0), (EnumItem::DiagnosticRequestVehicleInfo, 0x1fff00), (EnumItem::DiagnosticRequestVehicleInfoClass, 0x1fff00), (EnumItem::DiagnosticResponseOnEvent, 0x1fffc0), (EnumItem::DiagnosticResponseOnEventClass, 0x1fffc0), (EnumItem::DiagnosticResponseOnEventNeeds, 0x1fff00), (EnumItem::DiagnosticRoutine, 0x1fffc0), (EnumItem::DiagnosticRoutineControl, 0x1fffc0), (EnumItem::DiagnosticRoutineControlClass, 0x1fffc0), (EnumItem::DiagnosticRoutineGenericInterface, 0x1fc000), (EnumItem::DiagnosticRoutineInterface, 0x1fc000), (EnumItem::DiagnosticRoutineNeeds, 0x1fffff), (EnumItem::DiagnosticRoutineSubfunction, 0x1ff800), (EnumItem::DiagnosticSecureCodingMapping, 0x180000), (EnumItem::DiagnosticSecurityAccess, 0x1fffc0), (EnumItem::DiagnosticSecurityAccessClass, 0x1fffc0), (EnumItem::DiagnosticSecurityEventReportingModeMapping, 0x1f0000), (EnumItem::DiagnosticSecurityLevel, 0x1fffc0), (EnumItem::DiagnosticSecurityLevelInterface, 0x1fc000), (EnumItem::DiagnosticSecurityLevelPortMapping, 0x1fc000), (EnumItem::DiagnosticServiceClass, 0x1fffc0), (EnumItem::DiagnosticServiceDataIdentifierMapping, 0x2000), (EnumItem::DiagnosticServiceDataIdentifierPortMapping, 0x1c000), (EnumItem::DiagnosticServiceDataMapping, 0x1fffc0), (EnumItem::DiagnosticServiceGenericMapping, 0x1f0000), (EnumItem::DiagnosticServiceInstance, 0x1fffc0), (EnumItem::DiagnosticServiceSwMapping, 0x1fffc0), (EnumItem::DiagnosticServiceTable, 0x1fffc0), (EnumItem::DiagnosticServiceValidationInterface, 0x1fc000), (EnumItem::DiagnosticServiceValidationMapping, 0x1e0000), (EnumItem::DiagnosticSession, 0x1fffc0), (EnumItem::DiagnosticSessionControl, 0x1fffc0), (EnumItem::DiagnosticSessionControlClass, 0x1fffc0), (EnumItem::DiagnosticSoftwareClusterProps, 0x3fc00), (EnumItem::DiagnosticSovdAuthorizationInterface, 0x1c0000), (EnumItem::DiagnosticSovdAuthorizationPortMapping, 0x1c0000), (EnumItem::DiagnosticSovdBulkData, 0x180000), (EnumItem::DiagnosticSovdBulkDataInterface, 0x180000), (EnumItem::DiagnosticSovdBulkDataPortMapping, 0x180000), (EnumItem::DiagnosticSovdConfiguration, 0x180000), (EnumItem::DiagnosticSovdConfigurationBulkData, 0x180000), (EnumItem::DiagnosticSovdConfigurationDataIdentifierMapping, 0x180000), (EnumItem::DiagnosticSovdConfigurationInterface, 0x180000), (EnumItem::DiagnosticSovdConfigurationParameter, 0x180000), (EnumItem::DiagnosticSovdConfigurationPortMapping, 0x180000), (EnumItem::DiagnosticSovdFaultMemoryAccess, 0x100000), (EnumItem::DiagnosticSovdLock, 0x1c0000), (EnumItem::DiagnosticSovdLog, 0x180000), (EnumItem::DiagnosticSovdMethod, 0x180000), (EnumItem::DiagnosticSovdMethodPrimitive, 0x180000), (EnumItem::DiagnosticSovdPortInterface, 0x1c0000), (EnumItem::DiagnosticSovdProximityChallengeInterface, 0x1c0000), (EnumItem::DiagnosticSovdProximityChallengePortMapping, 0x1c0000), (EnumItem::DiagnosticSovdServiceInstance, 0x180000), (EnumItem::DiagnosticSovdServiceValidationInterface, 0x180000), (EnumItem::DiagnosticSovdServiceValidationPortMapping, 0x180000), (EnumItem::DiagnosticSovdUpdate, 0x180000), (EnumItem::DiagnosticSovdUpdateInterface, 0x180000), (EnumItem::DiagnosticSovdUpdatePortMapping, 0x180000), (EnumItem::DiagnosticStartRoutine, 0x1fffc0), (EnumItem::DiagnosticStopRoutine, 0x1fffc0), (EnumItem::DiagnosticStorageCondition, 0x1fffc0), (EnumItem::DiagnosticStorageConditionGroup, 0x1fffc0), (EnumItem::DiagnosticStorageConditionNeeds, 0x1ffff0), (EnumItem::DiagnosticStorageConditionPortMapping, 0x1fffc0), (EnumItem::DiagnosticSwMapping, 0x1fffc0), (EnumItem::DiagnosticTestResult, 0x1fff00), (EnumItem::DiagnosticTestRoutineIdentifier, 0x1fff00), (EnumItem::DiagnosticTransferExit, 0x1fffc0), (EnumItem::DiagnosticTransferExitClass, 0x1fffc0), (EnumItem::DiagnosticTransmitCertificateInterface, 0x100000), (EnumItem::DiagnosticTroubleCode, 0x1fffc0), (EnumItem::DiagnosticTroubleCodeGroup, 0x1fffc0), (EnumItem::DiagnosticTroubleCodeJ1939, 0x1fffc0), (EnumItem::DiagnosticTroubleCodeObd, 0x1fffc0), (EnumItem::DiagnosticTroubleCodeProps, 0x1fffc0), (EnumItem::DiagnosticTroubleCodeUds, 0x1fffc0), (EnumItem::DiagnosticTroubleCodeUdsToClearConditionGroupMapping, 0x1fe000), (EnumItem::DiagnosticTroubleCodeUdsToTroubleCodeObdMapping, 0x1fff00), (EnumItem::DiagnosticUploadDownloadNeeds, 0x1fe000), (EnumItem::DiagnosticUploadDownloadPortMapping, 0xc000), (EnumItem::DiagnosticUploadInterface, 0x1fc000), (EnumItem::DiagnosticValueNeeds, 0x1fffff), (EnumItem::DiagnosticVerifyCertificateBidirectional, 0x1e0000), (EnumItem::DiagnosticVerifyCertificateUnidirectional, 0x1e0000), (EnumItem::DiagnosticWriteDataByIdentifier, 0x1fffc0), (EnumItem::DiagnosticWriteDataByIdentifierClass, 0x1fffc0), (EnumItem::DiagnosticWriteMemoryByAddress, 0x1fffc0), (EnumItem::DiagnosticWriteMemoryByAddressClass, 0x1fffc0), (EnumItem::DiagnosticsCommunicationSecurityNeeds, 0x1ffff0), (EnumItem::DltApplication, 0x1e0000), (EnumItem::DltApplicationToProcessMapping, 0x1e0000), (EnumItem::DltArgument, 0x1f8000), (EnumItem::DltContext, 0x1e0000), (EnumItem::DltEcu, 0x1e0000), (EnumItem::DltLogChannel, 0x1f8000), (EnumItem::DltLogChannelDesign, 0x10000), (EnumItem::DltLogChannelDesignToProcessDesignMapping, 0x10000), (EnumItem::DltLogChannelToProcessMapping, 0x10000), (EnumItem::DltLogSink, 0x1e0000), (EnumItem::DltLogSinkToPortPrototypeMapping, 0x1e0000), (EnumItem::DltMessage, 0x1f8000), (EnumItem::DltMessageCollectionSet, 0x1f8000), (EnumItem::DltUserNeeds, 0x1fffff), (EnumItem::DoIpActivationLineNeeds, 0x1ffff8), (EnumItem::DoIpFunctionalClusterDesign, 0x100000), (EnumItem::DoIpGidNeeds, 0x1ffff8), (EnumItem::DoIpGidSynchronizationNeeds, 0x1ffff8), (EnumItem::DoIpInstantiation, 0x1ff000), (EnumItem::DoIpInterface, 0x1f8000), (EnumItem::DoIpLogicAddress, 0x1fff80), (EnumItem::DoIpLogicTargetAddressProps, 0x1f0000), (EnumItem::DoIpLogicTesterAddressProps, 0x1f0000), (EnumItem::DoIpLogicalAddress, 0x100000), (EnumItem::DoIpNetworkConfigurationDesign, 0x100000), (EnumItem::DoIpPowerModeStatusNeeds, 0x1ffff8), (EnumItem::DoIpRoutingActivation, 0x1f0000), (EnumItem::DoIpRoutingActivationAuthenticationNeeds, 0x1ffff8), (EnumItem::DoIpRoutingActivationConfirmationNeeds, 0x1ffff8), (EnumItem::DoIpServiceNeeds, 0x1ffff8), (EnumItem::DoIpTpConfig, 0x1fff80), (EnumItem::DocumentElementScope, 0x1fff00), (EnumItem::Documentation, 0x1fffff), (EnumItem::DocumentationContext, 0x1fffff), (EnumItem::DtcStatusChangeNotificationNeeds, 0x1ffff0), (EnumItem::E2EProfileCompatibilityProps, 0x1f0000), (EnumItem::E2EProfileConfiguration, 0x1ffc00), (EnumItem::E2EProfileConfigurationSet, 0x1ffc00), (EnumItem::EcuAbstractionSwComponentType, 0x1fffff), (EnumItem::EcuInstance, 0x1fffff), (EnumItem::EcuMapping, 0x1fffff), (EnumItem::EcuPartition, 0x1fffff), (EnumItem::EcuStateMgrUserNeeds, 0x1fffff), (EnumItem::EcuTiming, 0x1fffff), (EnumItem::EcucAbstractExternalReferenceDef, 0x1fff00), (EnumItem::EcucAbstractInternalReferenceDef, 0x1fff00), (EnumItem::EcucAbstractReferenceDef, 0x1fffff), (EnumItem::EcucAbstractStringParamDef, 0x1fffff), (EnumItem::EcucAddInfoParamDef, 0x1fffff), (EnumItem::EcucBooleanParamDef, 0x1fffff), (EnumItem::EcucChoiceContainerDef, 0x1fffff), (EnumItem::EcucChoiceReferenceDef, 0x1fffff), (EnumItem::EcucCommonAttributes, 0x1fffff), (EnumItem::EcucContainerDef, 0x1fffff), (EnumItem::EcucContainerValue, 0x1fffff), (EnumItem::EcucDefinitionCollection, 0x1fffff), (EnumItem::EcucDefinitionElement, 0x1fffff), (EnumItem::EcucDestinationUriDef, 0x1fffc0), (EnumItem::EcucDestinationUriDefSet, 0x1fffc0), (EnumItem::EcucEnumerationLiteralDef, 0x1fffff), (EnumItem::EcucEnumerationParamDef, 0x1fffff), (EnumItem::EcucFloatParamDef, 0x1fffff), (EnumItem::EcucForeignReferenceDef, 0x1fffff), (EnumItem::EcucFunctionNameDef, 0x1fffff), (EnumItem::EcucInstanceReferenceDef, 0x1fffff), (EnumItem::EcucIntegerParamDef, 0x1fffff), (EnumItem::EcucLinkerSymbolDef, 0x1fffff), (EnumItem::EcucModuleConfigurationValues, 0x1fffff), (EnumItem::EcucModuleDef, 0x1fffff), (EnumItem::EcucMultilineStringParamDef, 0x1fffff), (EnumItem::EcucParamConfContainerDef, 0x1fffff), (EnumItem::EcucParameterDef, 0x1fffff), (EnumItem::EcucQueryExpression, 0x1), (EnumItem::EcucQuery, 0x1ffffe), (EnumItem::EcucReferenceDef, 0x1fffff), (EnumItem::EcucStringParamDef, 0x1fffff), (EnumItem::EcucSymbolicNameReferenceDef, 0x1fffff), (EnumItem::EcucUriReferenceDef, 0x1fffc0), (EnumItem::EcucValidationCondition, 0x1ffff8), (EnumItem::EcucValueCollection, 0x1fffff), (EnumItem::End2EndEventProtectionProps, 0x1ffc00), (EnumItem::End2EndMethodProtectionProps, 0x1e0000), (EnumItem::EndToEndProtection, 0x1fffff), (EnumItem::EndToEndProtectionISignalIPdu, 0x1), (EnumItem::EndToEndProtectionSet, 0x1fffff), (EnumItem::EndToEndProtectionVariablePrototype, 0x1), (EnumItem::EnumerationMappingTable, 0x1fff00), (EnumItem::EocEventRef, 0x1fffc0), (EnumItem::EocExecutableEntityRef, 0x1fffff), (EnumItem::EocExecutableEntityRefAbstract, 0x1ffff8), (EnumItem::EocExecutableEntityRefGroup, 0x1ffff8), (EnumItem::ErrorTracerNeeds, 0x1fff00), (EnumItem::EthIpProps, 0x1f0000), (EnumItem::EthTcpIpIcmpProps, 0x1f0000), (EnumItem::EthTcpIpProps, 0x1f0000), (EnumItem::EthTpConfig, 0x1fe000), (EnumItem::EthernetCluster, 0x1fffff), (EnumItem::EthernetCommunicationConnector, 0x1fffff), (EnumItem::EthernetCommunicationController, 0x1fffff), (EnumItem::EthernetFrame, 0x1fffff), (EnumItem::EthernetFrameTriggering, 0x1fffff), (EnumItem::EthernetNetworkConfiguration, 0xe000), (EnumItem::EthernetMacRawDataStreamMapping, 0x100000), (EnumItem::EthernetPhysicalChannel, 0x1fffff), (EnumItem::EthernetPriorityRegeneration, 0x1fffc0), (EnumItem::EthernetRawDataStreamClientMapping, 0x1e0000), (EnumItem::EthernetRawDataStreamGrant, 0x1f8000), (EnumItem::EthernetRawDataStreamMapping, 0x1f8000), (EnumItem::EthernetRawDataStreamServerMapping, 0x1e0000), (EnumItem::EthernetWakeupSleepOnDatalineConfig, 0x1f0000), (EnumItem::EthernetWakeupSleepOnDatalineConfigSet, 0x1f0000), (EnumItem::EvaluatedVariantSet, 0x1fffff), (EnumItem::EventHandler, 0x1ffff8), (EnumItem::EventMapping, 0x1ffc00), (EnumItem::EventTriggeringConstraint, 0x1fffff), (EnumItem::ExclusiveArea, 0x1fffff), (EnumItem::ExclusiveAreaNestingOrder, 0x1ffff8), (EnumItem::Executable, 0x1ffe00), (EnumItem::ExecutableEntity, 0x1fffff), (EnumItem::ExecutableEntityActivationReason, 0x1ffff8), (EnumItem::ExecutableGroup, 0x1000), (EnumItem::ExecutableTiming, 0x1f0000), (EnumItem::ExecutionOrderConstraint, 0x1fffff), (EnumItem::ExecutionTime, 0x1fffff), (EnumItem::ExecutionTimeConstraint, 0x1ffffc), (EnumItem::ExternalTriggerOccurredEvent, 0x1fffff), (EnumItem::ExternalTriggeringPointIdent, 0x1ffff0), (EnumItem::FibexElement, 0x1fffff), (EnumItem::Field, 0x1ffe00), (EnumItem::FieldMapping, 0x1ffc00), (EnumItem::FireAndForgetMapping, 0x3fc00), (EnumItem::FireAndForgetMethodMapping, 0x1c0000), (EnumItem::FirewallRule, 0x1c0000), (EnumItem::FirewallStateSwitchInterface, 0x1c0000), (EnumItem::FlatInstanceDescriptor, 0x1fffff), (EnumItem::FlatMap, 0x1fffff), (EnumItem::FlexrayArTpConfig, 0x1ffffc), (EnumItem::FlexrayArTpNode, 0x1ffffc), (EnumItem::FlexrayCluster, 0x1fffff), (EnumItem::FlexrayCommunicationConnector, 0x1fffff), (EnumItem::FlexrayCommunicationController, 0x1fffff), (EnumItem::FlexrayFrame, 0x1fffff), (EnumItem::FlexrayFrameTriggering, 0x1fffff), (EnumItem::FlexrayNmCluster, 0x1fffff), (EnumItem::FlexrayNmNode, 0x1fffff), (EnumItem::FlexrayPhysicalChannel, 0x1fffff), (EnumItem::FlexrayTpConfig, 0x1fffff), (EnumItem::FlexrayTpConnectionControl, 0x1fffff), (EnumItem::FlexrayTpNode, 0x1fffff), (EnumItem::FlexrayTpPduPool, 0x1fffff), (EnumItem::FmAttributeDef, 0x1ffff8), (EnumItem::FmFeature, 0x1ffff8), (EnumItem::FmFeatureMap, 0x1ffff8), (EnumItem::FmFeatureMapAssertion, 0x1ffff8), (EnumItem::FmFeatureMapCondition, 0x1ffff8), (EnumItem::FmFeatureMapElement, 0x1ffff8), (EnumItem::FmFeatureModel, 0x1ffff8), (EnumItem::FmFeatureRelation, 0x1ffff8), (EnumItem::FmFeatureRestriction, 0x1ffff8), (EnumItem::FmFeatureSelection, 0x1ffff8), (EnumItem::FmFeatureSelectionSet, 0x1ffff8), (EnumItem::Frame, 0x1fffff), (EnumItem::FramePort, 0x1fffff), (EnumItem::FrameTriggering, 0x1fffff), (EnumItem::FunctionGroupModeRequestPhmActionItem, 0xe000), (EnumItem::FunctionGroupPortMapping, 0x100000), (EnumItem::FunctionGroupSet, 0x1f0000), (EnumItem::FunctionInhibitionAvailabilityNeeds, 0x1ff800), (EnumItem::FunctionInhibitionNeeds, 0x1fffff), (EnumItem::FunctionalClusterInteractsWithDiagnosticEventMapping, 0x100000), (EnumItem::FunctionalClusterInteractsWithFunctionalClusterMapping, 0x1f0000), (EnumItem::FunctionalClusterInteractsWithPersistencyDeploymentMapping, 0x1c0000), (EnumItem::FunctionalClusterToSecurityEventDefinitionMapping, 0x180000), (EnumItem::FurtherActionByteNeeds, 0x1ff800), (EnumItem::Gateway, 0x1fffff), (EnumItem::GeneralParameter, 0x1fffff), (EnumItem::GeneralPurposeConnection, 0x1ff800), (EnumItem::GeneralPurposeIPdu, 0x1ffff0), (EnumItem::GeneralPurposePdu, 0x1ffff0), (EnumItem::GeneralPurposeTimerServiceNeeds, 0x100000), (EnumItem::GenericDiagnosticTransportInstantiation, 0x100000), (EnumItem::GenericEthernetFrame, 0x1fffc0), (EnumItem::GenericModuleInstantiation, 0x1ffe00), (EnumItem::GlobalSupervisionEntity, 0xc00), (EnumItem::GenericTpConnection, 0x100000), (EnumItem::GlobalSupervision, 0x1ff000), (EnumItem::GlobalSupervisionNeeds, 0x1fff00), (EnumItem::GlobalTimeCanMaster, 0x1fffc0), (EnumItem::GlobalTimeCanSlave, 0x1fffc0), (EnumItem::GlobalTimeDomain, 0x1fffc0), (EnumItem::GlobalTimeEthMaster, 0x1fffc0), (EnumItem::GlobalTimeEthSlave, 0x1fffc0), (EnumItem::GlobalTimeFrMaster, 0x1fffc0), (EnumItem::GlobalTimeFrSlave, 0x1fffc0), (EnumItem::GlobalTimeGateway, 0x1fffc0), (EnumItem::GlobalTimeMaster, 0x1fffc0), (EnumItem::GlobalTimeSlave, 0x1fffc0), (EnumItem::Grant, 0x1fc000), (EnumItem::GrantDesign, 0x1fc000), (EnumItem::HardwareTestNeeds, 0x1fe000), (EnumItem::HealthChannel, 0x1ffc00), (EnumItem::HealthChannelExternalMode, 0xc00), (EnumItem::HealthChannelExternalStatus, 0x1ff000), (EnumItem::HealthChannelSupervision, 0x1ffc00), (EnumItem::HeapUsage, 0x1fffff), (EnumItem::HwAttributeDef, 0x1fffff), (EnumItem::HwAttributeLiteralDef, 0x1fffff), (EnumItem::HwCategory, 0x1fffff), (EnumItem::HwDescriptionEntity, 0x1ffffc), (EnumItem::HwElement, 0x1fffff), (EnumItem::HwPin, 0x1fffff), (EnumItem::HwPinGroup, 0x1fffff), (EnumItem::HwType, 0x1fffff), (EnumItem::IPdu, 0x1fffff), (EnumItem::IPduPort, 0x1fffff), (EnumItem::IPduTriggering, 0x1), (EnumItem::IPv6ExtHeaderFilterList, 0x1fff00), (EnumItem::IPv6ExtHeaderFilterSet, 0x1fff00), (EnumItem::ISignal, 0x1fffff), (EnumItem::ISignalGroup, 0x1fffff), (EnumItem::ISignalIPdu, 0x1fffff), (EnumItem::ISignalIPduGroup, 0x1fffff), (EnumItem::ISignalPort, 0x1fffff), (EnumItem::ISignalToIPduMapping, 0x1fffff), (EnumItem::ISignalTriggering, 0x1fffff), (EnumItem::IamModuleInstantiation, 0x1fc000), (EnumItem::IdentCaption, 0x1ffff8), (EnumItem::Identifiable, 0x1fffff), (EnumItem::IdsCommonElement, 0x1f0000), (EnumItem::IdsDesign, 0x1f0000), (EnumItem::IdsMapping, 0x1f0000), (EnumItem::IdsMgrCustomTimestampNeeds, 0x1f0000), (EnumItem::IdsMgrNeeds, 0x1f0000), (EnumItem::IdsPlatformInstantiation, 0x1f0000), (EnumItem::IdsmAbstractPortInterface, 0x180000), (EnumItem::IdsmContextProviderInterface, 0x180000), (EnumItem::IdsmContextProviderMapping, 0x180000), (EnumItem::IdsmInstance, 0x1f0000), (EnumItem::IdsmModuleInstantiation, 0x1f0000), (EnumItem::IdsmProperties, 0x1f0000), (EnumItem::IdsmQualifiedEventReceiverInterface, 0x100000), (EnumItem::IdsmQualifiedEventReceiverMapping, 0x100000), (EnumItem::IdsmRateLimitation, 0x1f0000), (EnumItem::IdsmReportingModeProviderInterface, 0x100000), (EnumItem::IdsmReportingModeProviderMapping, 0x100000), (EnumItem::IdsmTimestampProviderInterface, 0x180000), (EnumItem::IdsmTimestampProviderMapping, 0x180000), (EnumItem::IdsmTrafficLimitation, 0x1f0000), (EnumItem::Ieee1722AcfBusPartRawDataStreamConsumerMapping, 0x100000), (EnumItem::Ieee1722AcfBusRawDataStreamConsumerMapping, 0x100000), (EnumItem::Ieee1722RawDataStreamConsumerInterface, 0x100000), (EnumItem::Ieee1722RawDataStreamConsumerMapping, 0x100000), (EnumItem::Ieee1722RawDataStreamMapping, 0x100000), (EnumItem::Ieee1722RawDataStreamProducerInterface, 0x100000), (EnumItem::Ieee1722RawDataStreamProducerMapping, 0x100000), (EnumItem::Ieee1722TpAafConnection, 0x180000), (EnumItem::Ieee1722TpAcfBus, 0x180000), (EnumItem::Ieee1722TpAcfBusPart, 0x180000), (EnumItem::Ieee1722TpAcfCan, 0x180000), (EnumItem::Ieee1722TpAcfCanPart, 0x180000), (EnumItem::Ieee1722TpAcfConnection, 0x180000), (EnumItem::Ieee1722TpAcfLin, 0x180000), (EnumItem::Ieee1722TpAcfLinPart, 0x180000), (EnumItem::Ieee1722TpAvConnection, 0x180000), (EnumItem::Ieee1722TpConfig, 0x180000), (EnumItem::Ieee1722TpConnection, 0x180000), (EnumItem::Ieee1722TpCrfConnection, 0x180000), (EnumItem::Ieee1722TpEthernetFrame, 0x1fffc0), (EnumItem::Ieee1722TpIidcConnection, 0x180000), (EnumItem::Ieee1722TpRvfConnection, 0x180000), (EnumItem::Implementation, 0x1fffff), (EnumItem::ImplementationDataType, 0x1fffff), (EnumItem::ImplementationDataTypeElement, 0x1fffff), (EnumItem::ImplementationDataTypeElementExtension, 0x1c00), (EnumItem::ImplementationDataTypeExtension, 0x1c00), (EnumItem::ImplementationProps, 0x1ffffc), (EnumItem::ImpositionTime, 0x180000), (EnumItem::ImpositionTimeDefinitionGroup, 0x180000), (EnumItem::IndicatorStatusNeeds, 0x1fe000), (EnumItem::InitEvent, 0x1ffff8), (EnumItem::InterfaceMapping, 0x1ffc00), (EnumItem::InterfaceMappingSet, 0x1fc00), (EnumItem::InternalBehavior, 0x1fffff), (EnumItem::InternalTriggerOccurredEvent, 0x1fffff), (EnumItem::InternalTriggeringPoint, 0x1fffff), (EnumItem::InterpolationRoutineMappingSet, 0x1fffff), (EnumItem::IpIamRemoteSubject, 0x1f0000), (EnumItem::IpSecConfigProps, 0x1f8000), (EnumItem::IpSecIamRemoteSubject, 0x1f0000), (EnumItem::IpSecRule, 0x1fe000), (EnumItem::J1939Cluster, 0x1ffff8), (EnumItem::J1939ControllerApplication, 0x1fff00), (EnumItem::J1939DcmDm19Support, 0x1f0000), (EnumItem::J1939DcmIPdu, 0x1ffff8), (EnumItem::J1939NmCluster, 0x1ffff8), (EnumItem::J1939NmNode, 0x1ffff8), (EnumItem::J1939ProtectedIPdu, 0x100000), (EnumItem::J1939RmIncomingRequestServiceNeeds, 0x1fff00), (EnumItem::J1939RmOutgoingRequestServiceNeeds, 0x1fff00), (EnumItem::J1939SharedAddressCluster, 0x1fff00), (EnumItem::J1939TpConfig, 0x1fffff), (EnumItem::J1939TpNode, 0x1fffff), (EnumItem::Keyword, 0x1fffff), (EnumItem::KeywordSet, 0x1fffff), (EnumItem::LatencyTimingConstraint, 0x1fffff), (EnumItem::LifeCycleInfoSet, 0x1ffff8), (EnumItem::LifeCycleState, 0x1ffff8), (EnumItem::LifeCycleStateDefinitionGroup, 0x1ffff8), (EnumItem::LinCluster, 0x1fffff), (EnumItem::LinCommunicationConnector, 0x1fffff), (EnumItem::LinCommunicationController, 0x1fffff), (EnumItem::LinEventTriggeredFrame, 0x1fffff), (EnumItem::LinFrame, 0x1fffff), (EnumItem::LinFrameTriggering, 0x1fffff), (EnumItem::LinMaster, 0x1fffff), (EnumItem::LinNmCluster, 0x1fff00), (EnumItem::LinPhysicalChannel, 0x1fffff), (EnumItem::LinScheduleTable, 0x1fffff), (EnumItem::LinSlave, 0x1fffff), (EnumItem::LinSlaveConfigIdent, 0x1fff80), (EnumItem::LinSporadicFrame, 0x1fffff), (EnumItem::LinTpConfig, 0x1fffff), (EnumItem::LinTpNode, 0x1fffff), (EnumItem::LinUnconditionalFrame, 0x1fffff), (EnumItem::Linker, 0x1fffff), (EnumItem::LocalSupervision, 0x1f000), (EnumItem::LogAndTraceInstantiation, 0x1ff000), (EnumItem::LogAndTraceInterface, 0x1e0000), (EnumItem::LogAndTraceMessageCollectionSet, 0x1e0000), (EnumItem::LogicAddress, 0x1ffffe), (EnumItem::LogicalExpression, 0x1c00), (EnumItem::LogicalSupervision, 0x1ffc00), (EnumItem::LtMessageCollectionToPortPrototypeMapping, 0x1c0000), (EnumItem::MacAddressVlanMembership, 0x100000), (EnumItem::MacLayerRawDataStreamInterface, 0x100000), (EnumItem::MacMulticastGroup, 0x1ffff8), (EnumItem::MacSecGlobalKayProps, 0x1c0000), (EnumItem::MacSecKayParticipant, 0x1c0000), (EnumItem::MacSecParticipantSet, 0x1c0000), (EnumItem::Machine, 0x1ffe00), (EnumItem::MachineDesign, 0x1ff000), (EnumItem::MachineModeRequestPhmActionItem, 0x2000), (EnumItem::MachineTiming, 0x1f0000), (EnumItem::McDataInstance, 0x1fffff), (EnumItem::McFunction, 0x1ffff8), (EnumItem::McGroup, 0x1fe000), (EnumItem::MeasuredExecutionTime, 0x1fffff), (EnumItem::MeasuredHeapUsage, 0x1fffff), (EnumItem::MeasuredStackUsage, 0x1fffff), (EnumItem::MemorySection, 0x1fffff), (EnumItem::MemoryUsage, 0x1c0000), (EnumItem::MethodMapping, 0x1ffc00), (EnumItem::ModeAccessPointIdent, 0x1ffff0), (EnumItem::ModeDeclaration, 0x1fffff), (EnumItem::ModeDeclarationGroup, 0x1fffff), (EnumItem::ModeDeclarationGroupPrototype, 0x1fffff), (EnumItem::ModeDeclarationMapping, 0x1ffff8), (EnumItem::ModeDeclarationMappingSet, 0x1ffff8), (EnumItem::ModeInterfaceMapping, 0x1fffff), (EnumItem::ModeSwitchInterface, 0x1fffff), (EnumItem::ModeSwitchPoint, 0x1fffff), (EnumItem::ModeSwitchedAckEvent, 0x1fffff), (EnumItem::ModeTransition, 0x1ffff8), (EnumItem::MultilanguageReferrable, 0x1fffff), (EnumItem::MultiplexedIPdu, 0x1fffff), (EnumItem::NPdu, 0x1fffff), (EnumItem::NetworkConfiguration, 0xe000), (EnumItem::NetworkEndpoint, 0x1ffff8), (EnumItem::NetworkHandlePortMapping, 0x180000), (EnumItem::NetworkManagementPortInterface, 0x180000), (EnumItem::NmCluster, 0x1fffff), (EnumItem::NmConfig, 0x1fffff), (EnumItem::NmEcu, 0x1fffff), (EnumItem::NmHandleToFunctionGroupStateMapping, 0x1e0000), (EnumItem::NmInstantiation, 0x1ff000), (EnumItem::NmInteractsWithSmMapping, 0x180000), (EnumItem::NmNetworkHandle, 0x1fc000), (EnumItem::NmNode, 0x1fffff), (EnumItem::NmPdu, 0x1fffff), (EnumItem::NoCheckpointSupervision, 0x1c0000), (EnumItem::NoSupervision, 0x1e0000), (EnumItem::NonOsModuleInstantiation, 0x1ffe00), (EnumItem::NvBlockDescriptor, 0x1fffff), (EnumItem::NvBlockNeeds, 0x1fffff), (EnumItem::NvBlockSwComponentType, 0x1fffff), (EnumItem::NvDataInterface, 0x1fffff), (EnumItem::ObdControlServiceNeeds, 0x1fffff), (EnumItem::ObdInfoServiceNeeds, 0x1fffff), (EnumItem::ObdMonitorServiceNeeds, 0x1fffff), (EnumItem::ObdPidServiceNeeds, 0x1fffff), (EnumItem::ObdRatioDenominatorNeeds, 0x1fe000), (EnumItem::ObdRatioServiceNeeds, 0x1fffff), (EnumItem::OffsetTimingConstraint, 0x1fffff), (EnumItem::OperationInvokedEvent, 0x1fffff), (EnumItem::OsModuleInstantiation, 0x1ffe00), (EnumItem::OsTaskExecutionEvent, 0x1f0000), (EnumItem::OsTaskProxy, 0x1e0000), (EnumItem::PPortPrototype, 0x1fffff), (EnumItem::PackageableElement, 0x1fffff), (EnumItem::ParameterAccess, 0x1fffff), (EnumItem::ParameterDataPrototype, 0x1fffff), (EnumItem::ParameterInterface, 0x1fffff), (EnumItem::ParameterSwComponentType, 0x1fffff), (EnumItem::PassThroughSwConnector, 0x1ffff8), (EnumItem::Pdu, 0x1fffff), (EnumItem::PduActivationRoutingGroup, 0x1f8000), (EnumItem::PduToFrameMapping, 0x1fffff), (EnumItem::PduTriggering, 0x1ffffe), (EnumItem::PdurIPduGroup, 0x1fffff), (EnumItem::PerInstanceMemory, 0x1fffff), (EnumItem::PeriodicEventTriggering, 0x1fffff), (EnumItem::PersistencyDataElement, 0x1ff000), (EnumItem::PersistencyDeployment, 0x1fe000), (EnumItem::PersistencyDeploymentElement, 0x1f0000), (EnumItem::PersistencyDeploymentElementToCryptoKeySlotMapping, 0x1f0000), (EnumItem::PersistencyDeploymentToCryptoKeySlotMapping, 0x1f0000), (EnumItem::PersistencyDeploymentToDltLogChannelMapping, 0x10000), (EnumItem::PersistencyDeploymentToDltLogSinkMapping, 0x1e0000), (EnumItem::PersistencyFile, 0x1ffc00), (EnumItem::PersistencyFileArray, 0xfc00), (EnumItem::PersistencyFileProxy, 0xf000), (EnumItem::PersistencyFileProxyInterface, 0xfc00), (EnumItem::PersistencyFileProxyToFileMapping, 0xc00), (EnumItem::PersistencyFileElement, 0x1f0000), (EnumItem::PersistencyFileStorage, 0x1f0000), (EnumItem::PersistencyFileStorageInterface, 0x1f0000), (EnumItem::PersistencyInterface, 0x1ffc00), (EnumItem::PersistencyKeyValueDatabase, 0xfc00), (EnumItem::PersistencyKeyValueDatabaseInterface, 0xfc00), (EnumItem::PersistencyInterfaceElement, 0x1f0000), (EnumItem::PersistencyKeyValuePair, 0x1ff000), (EnumItem::PersistencyPortPrototypeToFileArrayMapping, 0xf000), (EnumItem::PersistencyPortPrototypeToKeyValueDatabaseMapping, 0xfc00), (EnumItem::PhmAction, 0x6000), (EnumItem::PhmActionItem, 0xe000), (EnumItem::PhmActionList, 0xe000), (EnumItem::PhmArbitration, 0x6000), (EnumItem::PersistencyKeyValueStorage, 0x1f0000), (EnumItem::PersistencyKeyValueStorageInterface, 0x1f0000), (EnumItem::PersistencyPortPrototypeToDeploymentMapping, 0x1f0000), (EnumItem::PersistencyPortPrototypeToFileStorageMapping, 0x1f0000), (EnumItem::PersistencyPortPrototypeToKeyValueStorageMapping, 0x1f0000), (EnumItem::PhmAbstractRecoveryNotificationInterface, 0x1f0000), (EnumItem::PhmCheckpoint, 0x1ffc00), (EnumItem::PhmContributionToMachineMapping, 0x1ffc00), (EnumItem::PhmHealthChannelInterface, 0x1ff000), (EnumItem::PhmHealthChannelRecoveryNotificationInterface, 0x1f0000), (EnumItem::PhmHealthChannelStatus, 0x1ff000), (EnumItem::PhmLogicalExpression, 0xe000), (EnumItem::PhmRecoveryActionInterface, 0x1f8000), (EnumItem::PhmRule, 0xe000), (EnumItem::PhmSupervisedEntityInterface, 0x1ff000), (EnumItem::PhmSupervision, 0x1fe000), (EnumItem::PhmSupervisionRecoveryNotificationInterface, 0x1f0000), (EnumItem::PhysicalChannel, 0x1fffff), (EnumItem::PhysicalDimension, 0x1fffff), (EnumItem::PortBlueprint, 0x1), (EnumItem::PhysicalDimensionMappingSet, 0x1ffff8), (EnumItem::PlatformActionItem, 0x1c00), (EnumItem::PlatformHealthManagementContribution, 0x1ffc00), (EnumItem::PlatformHealthManagementInterface, 0x1ff000), (EnumItem::PlatformPhmActionItem, 0xe000), (EnumItem::PlatformModuleEndpointConfiguration, 0x1f0000), (EnumItem::PlatformModuleEthernetEndpointConfiguration, 0x1f0000), (EnumItem::PncMappingIdent, 0x1fff00), (EnumItem::PortElementToCommunicationResourceMapping, 0x1f0000), (EnumItem::PortGroup, 0x1fffff), (EnumItem::PortInterface, 0x1fffff), (EnumItem::PortInterfaceMapping, 0x1fffff), (EnumItem::PortInterfaceMappingSet, 0x1fffff), (EnumItem::PortInterfaceToDataTypeMapping, 0x1ffe00), (EnumItem::PortPrototype, 0x1fffff), (EnumItem::PortPrototypeBlueprint, 0x1ffffe), (EnumItem::PossibleErrorReaction, 0x1fff00), (EnumItem::PostBuildVariantCriterion, 0x1fffff), (EnumItem::PostBuildVariantCriterionValueSet, 0x1fffff), (EnumItem::PrPortPrototype, 0x1ffff8), (EnumItem::PredefinedVariant, 0x1fffff), (EnumItem::PresharedKeyIdentity, 0x1c00), (EnumItem::PrimitiveAttributeTailoring, 0x1fff00), (EnumItem::Process, 0x1ffe00), (EnumItem::ProcessDesign, 0x1ff000), (EnumItem::ProcessDesignToMachineDesignMapping, 0x1fc000), (EnumItem::ProcessDesignToMachineDesignMappingSet, 0x1c000), (EnumItem::ProcessPhmActionItem, 0xe000), (EnumItem::ProcessExecutionError, 0x1f0000), (EnumItem::ProcessToMachineMapping, 0x1ffc00), (EnumItem::ProcessToMachineMappingSet, 0x1ffc00), (EnumItem::Processor, 0x1ffc00), (EnumItem::ProcessorCore, 0x1ffc00), (EnumItem::ProvidedApServiceInstance, 0x1ffe00), (EnumItem::ProvidedDdsServiceInstance, 0x1000), (EnumItem::ProvidedServiceInstance, 0x1ffff8), (EnumItem::ProvidedServiceInstanceToSwClusterDesignPPortPrototypeMapping, 0x1f8000), (EnumItem::ProvidedSomeipServiceInstance, 0x1ffe00), (EnumItem::ProvidedUserDefinedServiceInstance, 0x1ffe00), (EnumItem::PskIdentityToKeySlotMapping, 0x1ffc00), (EnumItem::PureLocalTimeBase, 0xf000), (EnumItem::RPortPrototype, 0x1fffff), (EnumItem::RapidPrototypingScenario, 0x1ffff8), (EnumItem::RawDataStreamClientInterface, 0x1f0000), (EnumItem::RawDataStreamDeployment, 0x1f8000), (EnumItem::RawDataStreamGrant, 0x1f8000), (EnumItem::RawDataStreamGrantDesign, 0x1f8000), (EnumItem::RawDataStreamInterface, 0x8000), (EnumItem::RawDataStreamMapping, 0x1f8000), (EnumItem::RawDataStreamMethodDeployment, 0x8000), (EnumItem::RecoveryViaApplicationAction, 0x8000), (EnumItem::RecoveryViaApplicationActionToClientServerOperationMapping, 0x8000), (EnumItem::RawDataStreamServerInterface, 0x1f0000), (EnumItem::RecoveryNotification, 0x1f0000), (EnumItem::RecoveryNotificationToPPortPrototypeMapping, 0x1f0000), (EnumItem::ReferenceTailoring, 0x1fff00), (EnumItem::Referrable, 0x1fffff), (EnumItem::RequiredApServiceInstance, 0x1ffe00), (EnumItem::RequiredDdsServiceInstance, 0x1000), (EnumItem::RequiredServiceInstanceToSwClusterDesignRPortPrototypeMapping, 0x1f8000), (EnumItem::RequiredSomeipServiceInstance, 0x1ffe00), (EnumItem::RequiredUserDefinedServiceInstance, 0x1ffe00), (EnumItem::ResourceConsumption, 0x1fffff), (EnumItem::ResourceGroup, 0x1ffe00), (EnumItem::RestAbstractEndpoint, 0x1fc00), (EnumItem::RestAbstractNumericalPropertyDef, 0x1fc00), (EnumItem::RestAbstractPropertyDef, 0x1fc00), (EnumItem::RestArrayPropertyDef, 0x1fc00), (EnumItem::RestBooleanPropertyDef, 0x1fc00), (EnumItem::RestElementDef, 0x1fc00), (EnumItem::RestEndpointDelete, 0x1fc00), (EnumItem::RestEndpointGet, 0x1fc00), (EnumItem::RestEndpointPost, 0x1fc00), (EnumItem::RestEndpointPut, 0x1fc00), (EnumItem::RestHttpPortPrototypeMapping, 0x1fc00), (EnumItem::RestIntegerPropertyDef, 0x1fc00), (EnumItem::RestNumberPropertyDef, 0x1fc00), (EnumItem::RestObjectRef, 0x1fc00), (EnumItem::RestPrimitivePropertyDef, 0x1fc00), (EnumItem::RestResourceDef, 0x1fc00), (EnumItem::RestServiceInterface, 0x1fc00), (EnumItem::RestStringPropertyDef, 0x1fc00), (EnumItem::RootSwClusterDesignComponentPrototype, 0x1f8000), (EnumItem::RootSwComponentPrototype, 0x1ffe00), (EnumItem::RootSwCompositionPrototype, 0x1fffff), (EnumItem::RoughEstimateHeapUsage, 0x1fffff), (EnumItem::RoughEstimateOfExecutionTime, 0x1fffff), (EnumItem::RoughEstimateStackUsage, 0x1fffff), (EnumItem::RptComponent, 0x1fff00), (EnumItem::RptContainer, 0x1ffff8), (EnumItem::RptExecutableEntity, 0x1fff00), (EnumItem::RptExecutableEntityEvent, 0x1fff00), (EnumItem::RptExecutionContext, 0x1fff00), (EnumItem::RptProfile, 0x1fff00), (EnumItem::RptServicePoint, 0x1fff00), (EnumItem::Rule, 0x1c00), (EnumItem::RteEvent, 0x1fffff), (EnumItem::RecordValueField, 0x1), (EnumItem::RteEventInCompositionSeparation, 0x1e0000), (EnumItem::RteEventInCompositionToOsTaskProxyMapping, 0x1e0000), (EnumItem::RteEventInSystemSeparation, 0x1e0000), (EnumItem::RteEventInSystemToOsTaskProxyMapping, 0x1e0000), (EnumItem::RunnableEntity, 0x1fffff), (EnumItem::RunnableEntityGroup, 0x1ffff8), (EnumItem::RuntimeError, 0x1fff00), (EnumItem::SdgAbstractForeignReference, 0x1fff00), (EnumItem::SdgAbstractPrimitiveAttribute, 0x1fff00), (EnumItem::SdgAggregationWithVariation, 0x1fff00), (EnumItem::SdgAttribute, 0x1fff00), (EnumItem::SdgCaption, 0x1fffff), (EnumItem::SdgClass, 0x1fff00), (EnumItem::SdgDef, 0x1fff00), (EnumItem::SdgForeignReference, 0x1fff00), (EnumItem::SdgForeignReferenceWithVariation, 0x1fff00), (EnumItem::SdgPrimitiveAttribute, 0x1fff00), (EnumItem::SdgPrimitiveAttributeWithVariation, 0x1fff00), (EnumItem::SdgReference, 0x1fff00), (EnumItem::SdgTailoring, 0x1fff00), (EnumItem::SecOcCryptoServiceMapping, 0x1fe000), (EnumItem::SecOcDeployment, 0x1ffc00), (EnumItem::SecOcJobMapping, 0x1ffc00), (EnumItem::SecOcJobRequirement, 0x1ffc00), (EnumItem::SecOcSecureComProps, 0x1ffc00), (EnumItem::SectionNamePrefix, 0x1ffffc), (EnumItem::SecureComProps, 0x1ffc00), (EnumItem::SecureComPropsSet, 0x1fc00), (EnumItem::SecureCommunicationAuthenticationProps, 0x1fff00), (EnumItem::SecureCommunicationDeployment, 0x1ffc00), (EnumItem::SecureCommunicationFreshnessProps, 0x1fff00), (EnumItem::SecureCommunicationPropsSet, 0x1fff00), (EnumItem::SecureOnBoardCommunicationNeeds, 0x1fff00), (EnumItem::SecuredIPdu, 0x1fffc0), (EnumItem::SecurityEventAggregationFilter, 0x1f0000), (EnumItem::SecurityEventContextDataDefinition, 0x100000), (EnumItem::SecurityEventContextDataElement, 0x100000), (EnumItem::SecurityEventContextMapping, 0x1f0000), (EnumItem::SecurityEventContextMappingApplication, 0x1f0000), (EnumItem::SecurityEventContextMappingBswModule, 0x1f0000), (EnumItem::SecurityEventContextMappingCommConnector, 0x1f0000), (EnumItem::SecurityEventContextMappingFunctionalCluster, 0x1f0000), (EnumItem::SecurityEventContextProps, 0x1f0000), (EnumItem::SecurityEventDefinition, 0x1f0000), (EnumItem::SecurityEventFilterChain, 0x1f0000), (EnumItem::SecurityEventMapping, 0x1f0000), (EnumItem::SecurityEventOneEveryNFilter, 0x1f0000), (EnumItem::SecurityEventReportInstanceDefinition, 0x100000), (EnumItem::SecurityEventReportInstanceValue, 0x100000), (EnumItem::SecurityEventReportInterface, 0x1f0000), (EnumItem::SecurityEventReportToSecurityEventDefinitionMapping, 0x1f0000), (EnumItem::SecurityEventStateFilter, 0x1f0000), (EnumItem::SecurityEventThresholdFilter, 0x1f0000), (EnumItem::SenderReceiverInterface, 0x1fffff), (EnumItem::SensorActuatorSwComponentType, 0x1fffff), (EnumItem::SerializationTechnology, 0x1ffff8), (EnumItem::ServerCallPoint, 0x1fffff), (EnumItem::ServiceEventDeployment, 0x1ffe00), (EnumItem::ServiceFieldDeployment, 0x1ffe00), (EnumItem::ServiceInstanceToApplicationEndpointMapping, 0x200), (EnumItem::ServiceInstanceCollectionSet, 0x1f8000), (EnumItem::ServiceInstanceToMachineMapping, 0x1ffe00), (EnumItem::ServiceInstanceToPortPrototypeMapping, 0x1ffc00), (EnumItem::ServiceInstanceToSignalMapping, 0x1ffc00), (EnumItem::ServiceInstanceToSignalMappingSet, 0x1fc00), (EnumItem::ServiceInstanceToSwClusterDesignPortPrototypeMapping, 0x1f8000), (EnumItem::ServiceInterface, 0x1ffe00), (EnumItem::ServiceInterfaceApplicationErrorMapping, 0x1e00), (EnumItem::ServiceInterfaceDeployment, 0x1ffe00), (EnumItem::ServiceInterfaceElementMapping, 0x1ffe00), (EnumItem::ServiceInterfaceElementSecureComConfig, 0x1ffc00), (EnumItem::ServiceInterfaceEventMapping, 0x1ffe00), (EnumItem::ServiceInterfaceFieldMapping, 0x1ffe00), (EnumItem::ServiceInterfaceMapping, 0x1ffe00), (EnumItem::ServiceInterfaceMappingSet, 0x1fe00), (EnumItem::ServiceInterfaceMethodMapping, 0x1ffe00), (EnumItem::ServiceInterfacePedigree, 0x1f8000), (EnumItem::ServiceInterfaceTriggerMapping, 0x1e0000), (EnumItem::ServiceMethodDeployment, 0x1ffe00), (EnumItem::ServiceNeeds, 0x1fffff), (EnumItem::ServiceProxySwComponentType, 0x1fffff), (EnumItem::ServiceSwComponentType, 0x1fffff), (EnumItem::SignalBasedEventDeployment, 0x1c00), (EnumItem::SignalBasedFieldDeployment, 0x1c00), (EnumItem::ServiceTiming, 0x1f0000), (EnumItem::SignalBasedEventElementToISignalTriggeringMapping, 0x1f8000), (EnumItem::SignalBasedFieldToISignalTriggeringMapping, 0x1ffc00), (EnumItem::SignalBasedMethodDeployment, 0x1c00), (EnumItem::SignalBasedServiceInterfaceDeployment, 0x7c00), (EnumItem::SignalBasedFireAndForgetMethodToISignalTriggeringMapping, 0x1c0000), (EnumItem::SignalBasedMethodToISignalTriggeringMapping, 0x1f8000), (EnumItem::SignalBasedTriggerToISignalTriggeringMapping, 0x1e0000), (EnumItem::SignalServiceTranslationElementProps, 0x1f8000), (EnumItem::SignalServiceTranslationEventProps, 0x1f8000), (EnumItem::SignalServiceTranslationProps, 0x1f8000), (EnumItem::SignalServiceTranslationPropsSet, 0x1f8000), (EnumItem::SimulatedExecutionTime, 0x1fffff), (EnumItem::SingleLanguageReferrable, 0x1fffff), (EnumItem::SmInteractsWithNmMapping, 0x180000), (EnumItem::SoAdRoutingGroup, 0x1ffff8), (EnumItem::SoConIPduIdentifier, 0x1f8000), (EnumItem::SocketAddress, 0x1ffffe), (EnumItem::SocketConnectionBundle, 0x1ffff8), (EnumItem::SocketConnectionIpduIdentifierSet, 0x1f8000), (EnumItem::SoftwareActivationDependency, 0x8000), (EnumItem::SoftwareCluster, 0x1ffc00), (EnumItem::SoftwareClusterRequirement, 0xc00), (EnumItem::SoftwareClusterDesign, 0x1ff000), (EnumItem::SoftwareClusterDiagnosticDeploymentProps, 0x1c0000), (EnumItem::SoftwarePackage, 0x1fc000), (EnumItem::SoftwarePackageStep, 0x1f8000), (EnumItem::SomeipDataPrototypeTransformationProps, 0x1ffe00), (EnumItem::SomeipEvent, 0x200), (EnumItem::SomeipEventDeployment, 0x1ffc00), (EnumItem::SomeipEventGroup, 0x1ffe00), (EnumItem::SomeipField, 0x200), (EnumItem::SomeipMethod, 0x200), (EnumItem::SomeipFieldDeployment, 0x1ffc00), (EnumItem::SomeipMethodDeployment, 0x1ffc00), (EnumItem::SomeipProvidedEventGroup, 0x1ffe00), (EnumItem::SomeipRemoteMulticastConfig, 0x1c0000), (EnumItem::SomeipRemoteUnicastConfig, 0x1c0000), (EnumItem::SomeipRequiredEventGroup, 0x1ffe00), (EnumItem::SomeipSdClientEventGroupTimingConfig, 0x1fe000), (EnumItem::SomeipSdClientServiceInstanceConfig, 0x1fe000), (EnumItem::SomeipSdServerEventGroupTimingConfig, 0x1fe000), (EnumItem::SomeipSdServerServiceInstanceConfig, 0x1fe000), (EnumItem::SomeipServiceInstanceToMachineMapping, 0x1ffe00), (EnumItem::SomeipServiceInterface, 0x200), (EnumItem::SomeipServiceInterfaceDeployment, 0x1ffc00), (EnumItem::SomeipTpChannel, 0x1fe000), (EnumItem::SomeipTpConfig, 0x1fff00), (EnumItem::SomeipTransformationProps, 0x1fff00), (EnumItem::SovdGatewayInstantiation, 0x1c0000), (EnumItem::SovdModuleInstantiation, 0x1c0000), (EnumItem::SovdServerInstantiation, 0x1c0000), (EnumItem::SpecElementReference, 0x1fff00), (EnumItem::SpecElementScope, 0x1fff00), (EnumItem::SpecificationDocumentScope, 0x1fff00), (EnumItem::SporadicEventTriggering, 0x1fffff), (EnumItem::StackUsage, 0x1fffff), (EnumItem::StartupConfig, 0x1ffe00), (EnumItem::StartupConfigSet, 0x3fe00), (EnumItem::StateClientInterface, 0x100000), (EnumItem::StateDependentFirewall, 0x1c0000), (EnumItem::StateManagemenPhmErrorInterface, 0xc0000), (EnumItem::StateManagementActionItem, 0x1c0000), (EnumItem::StateManagementActionList, 0x1c0000), (EnumItem::StateManagementDiagTriggerInterface, 0x1c0000), (EnumItem::StateManagementEmErrorInterface, 0x1c0000), (EnumItem::StateManagementErrorInterface, 0x1c0000), (EnumItem::StateManagementFunctionGroupSwitchNotificationInterface, 0x1c0000), (EnumItem::StateManagementModuleInstantiation, 0x1c0000), (EnumItem::StateManagementNmActionItem, 0x180000), (EnumItem::StateManagementNotificationInterface, 0x1c0000), (EnumItem::StateManagementPhmErrorInterface, 0x100000), (EnumItem::StateManagementPortInterface, 0x1c0000), (EnumItem::StateManagementRequestError, 0x1c0000), (EnumItem::StateManagementRequestInterface, 0x1c0000), (EnumItem::StateManagementRequestTrigger, 0x1c0000), (EnumItem::StateManagementSetFunctionGroupStateActionItem, 0x1c0000), (EnumItem::StateManagementSleepActionItem, 0x180000), (EnumItem::StateManagementStateMachineActionItem, 0x1c0000), (EnumItem::StateManagementStateNotification, 0x1c0000), (EnumItem::StateManagementStateRequest, 0x1c0000), (EnumItem::StateManagementSyncActionItem, 0x1c0000), (EnumItem::StateManagementTriggerInterface, 0x1c0000), (EnumItem::StaticSocketConnection, 0x1f8000), (EnumItem::Std, 0x1fffff), (EnumItem::StdCppImplementationDataType, 0x1fe000), (EnumItem::StructuredReq, 0x1ffffe), (EnumItem::SupervisedEntityCheckpointNeeds, 0x1fff00), (EnumItem::SupervisedEntityNeeds, 0x1fffff), (EnumItem::SupervisionEntity, 0xc00), (EnumItem::SupervisionCheckpoint, 0x1ff000), (EnumItem::SupervisionMode, 0x1e0000), (EnumItem::SupervisionModeCondition, 0x1e0000), (EnumItem::SwAddrMethod, 0x1fffff), (EnumItem::SwAxisType, 0x1fffff), (EnumItem::SwBaseType, 0x1fffff), (EnumItem::SwCalibrationMethod, 0x3), (EnumItem::SwCalprmPrototype, 0x1), (EnumItem::SwClassAttrImpl, 0x1), (EnumItem::SwClassInstance, 0x1), (EnumItem::SwClassPrototype, 0x1), (EnumItem::SwCodeSyntax, 0x1), (EnumItem::SwComponentMappingConstraints, 0x1e0000), (EnumItem::SwComponentPrototype, 0x1fffff), (EnumItem::SwComponentType, 0x1fffff), (EnumItem::SwConnector, 0x1fffff), (EnumItem::SwGenericAxisParamType, 0x1fffff), (EnumItem::SwInstance, 0x1), (EnumItem::SwMcBaseType, 0x1), (EnumItem::SwMcFrame, 0x1), (EnumItem::SwMcInterface, 0x1), (EnumItem::SwMcInterfaceSource, 0x1), (EnumItem::SwRecordLayout, 0x1fffff), (EnumItem::SwServiceArg, 0x1fffff), (EnumItem::SwServicePrototype, 0x1), (EnumItem::SwSystemconst, 0x1fffff), (EnumItem::SwSystemconstantValueSet, 0x1fffff), (EnumItem::SwVariablePrototype, 0x1), (EnumItem::SwcBswMapping, 0x1fffff), (EnumItem::SwcImplementation, 0x1fffff), (EnumItem::SwcInternalBehavior, 0x1fffff), (EnumItem::SwcModeManagerErrorEvent, 0x1ffff8), (EnumItem::SwcModeSwitchEvent, 0x1fffff), (EnumItem::SwcServiceDependency, 0x1fffff), (EnumItem::SwcTiming, 0x1fffff), (EnumItem::SwcToApplicationPartitionMapping, 0x1fff00), (EnumItem::SwcToEcuMapping, 0x1fffff), (EnumItem::SwcToImplMapping, 0x1fffff), (EnumItem::SwitchAsynchronousTrafficShaperGroupEntry, 0x180000), (EnumItem::SwitchFlowMeteringEntry, 0x180000), (EnumItem::SwitchStreamFilterActionDestPortModification, 0x180000), (EnumItem::SwitchStreamFilterEntry, 0x180000), (EnumItem::SwitchStreamFilterRule, 0x180000), (EnumItem::SwitchStreamGateEntry, 0x180000), (EnumItem::SwitchStreamIdentification, 0x180000), (EnumItem::SymbolProps, 0x1ffffc), (EnumItem::SymbolicNameProps, 0x1fffe0), (EnumItem::SyncTimeBaseMgrUserNeeds, 0x1fffff), (EnumItem::SynchronizationPointConstraint, 0x1fe000), (EnumItem::SynchronizationTimingConstraint, 0x1fffff), (EnumItem::SynchronizedMasterTimeBase, 0xf000), (EnumItem::SynchronizedSlaveTimeBase, 0xf000), (EnumItem::SynchronizedTimeBaseConsumer, 0x1f0000), (EnumItem::SynchronizedTimeBaseConsumerInterface, 0x1f0000), (EnumItem::SynchronizedTimeBaseProvider, 0x1f0000), (EnumItem::SynchronizedTimeBaseProviderInterface, 0x1f0000), (EnumItem::SynchronousServerCallPoint, 0x1fffff), (EnumItem::System, 0x1fffff), (EnumItem::SystemMapping, 0x1fffff), (EnumItem::SystemMemoryUsage, 0x38000), (EnumItem::SystemSignal, 0x1fffff), (EnumItem::SystemSignalGroup, 0x1fffff), (EnumItem::SystemSignalGroupToCommunicationResourceMapping, 0x180000), (EnumItem::SystemSignalToCommunicationResourceMapping, 0x180000), (EnumItem::SystemTiming, 0x1fffff), (EnumItem::TcpOptionFilterList, 0x1fff00), (EnumItem::TcpOptionFilterSet, 0x1fff00), (EnumItem::TdCpSoftwareClusterMapping, 0x1f0000), (EnumItem::TdCpSoftwareClusterMappingSet, 0x1f0000), (EnumItem::TdCpSoftwareClusterResourceMapping, 0x1f0000), (EnumItem::TdEventBsw, 0x1fffff), (EnumItem::TdEventBswInternalBehavior, 0x1fffff), (EnumItem::TdEventBswModeDeclaration, 0x1fffff), (EnumItem::TdEventBswModule, 0x1fffff), (EnumItem::TdEventCom, 0x1fffff), (EnumItem::TdEventComplex, 0x1ffffc), (EnumItem::TdEventCycleStart, 0x1fffff), (EnumItem::TdEventFrClusterCycleStart, 0x1fffff), (EnumItem::TdEventFrame, 0x1fffff), (EnumItem::TdEventFrameEthernet, 0x1fff00), (EnumItem::TdEventIPdu, 0x1fffff), (EnumItem::TdEventISignal, 0x1fffff), (EnumItem::TdEventModeDeclaration, 0x1fffff), (EnumItem::TdEventOperation, 0x1fffff), (EnumItem::TdEventServiceInstance, 0x1f0000), (EnumItem::TdEventServiceInstanceDiscovery, 0x1f0000), (EnumItem::TdEventServiceInstanceEvent, 0x1f0000), (EnumItem::TdEventServiceInstanceField, 0x1f0000), (EnumItem::TdEventServiceInstanceMethod, 0x1f0000), (EnumItem::TdEventSllet, 0xc0000), (EnumItem::TdEventSlletPort, 0xc0000), (EnumItem::TdEventSwc, 0x1ffff8), (EnumItem::TdEventSwcInternalBehavior, 0x1fffff), (EnumItem::TdEventSwcInternalBehaviorReference, 0x1ffff8), (EnumItem::TdEventTrigger, 0x1ffff8), (EnumItem::TdEventTtCanCycleStart, 0x1fffff), (EnumItem::TdEventVariableDataPrototype, 0x1fffff), (EnumItem::TdEventVfb, 0x1fffff), (EnumItem::TdEventVfbPort, 0x1ffff8), (EnumItem::TdEventVfbPortGroup, 0x100000), (EnumItem::TdEventVfbReference, 0x1ffff8), (EnumItem::TdletZoneClock, 0x1c0000), (EnumItem::TimeBaseProviderToPersistencyMapping, 0x1f0000), (EnumItem::TimeBaseResource, 0x1ff000), (EnumItem::TimeSyncModuleInstantiation, 0x1ff000), (EnumItem::TimeSyncPortPrototypeToTimeBaseMapping, 0x1ff000), (EnumItem::TimeSyncServerConfiguration, 0x1ffff8), (EnumItem::TimeSynchronizationInterface, 0xf000), (EnumItem::TimeSynchronizationMasterInterface, 0xf000), (EnumItem::TimeSynchronizationPureLocalInterface, 0xf000), (EnumItem::TimeSynchronizationSlaveInterface, 0xf000), (EnumItem::TimingClock, 0x1c0000), (EnumItem::TimingClockSyncAccuracy, 0x1c0000), (EnumItem::TimingCondition, 0x1fff00), (EnumItem::TimingConstraint, 0x1fffff), (EnumItem::TimingDescription, 0x1fffff), (EnumItem::TimingDescriptionEvent, 0x1fffff), (EnumItem::TimingDescriptionEventChain, 0x1fffff), (EnumItem::TimingEvent, 0x1fffff), (EnumItem::TimingExtension, 0x1fffff), (EnumItem::TimingExtensionResource, 0x1fff00), (EnumItem::TimingModeInstance, 0x1fff00), (EnumItem::TlsConnectionGroup, 0x1e0000), (EnumItem::TlsCryptoCipherSuite, 0x1fe000), (EnumItem::TlsCryptoCipherSuiteProps, 0x1e0000), (EnumItem::TlsCryptoServiceMapping, 0x1fe000), (EnumItem::TlsDeployment, 0x1ffc00), (EnumItem::TlsIamRemoteSubject, 0x1f0000), (EnumItem::TlsJobMapping, 0x1ffc00), (EnumItem::TlsJobRequirement, 0x1c00), (EnumItem::TlsSecureComProps, 0x1ffc00), (EnumItem::TlvDataIdDefinitionSet, 0x1f8000), (EnumItem::Topic1, 0x1fffff), (EnumItem::TpAddress, 0x1fffff), (EnumItem::TpConfig, 0x1fffff), (EnumItem::TpConnectionIdent, 0x1fffc0), (EnumItem::TraceReferrable, 0x1ffffc), (EnumItem::Traceable, 0x1ffffe), (EnumItem::TraceableTable, 0x1f8000), (EnumItem::TraceableText, 0x1ffffe), (EnumItem::TracedFailure, 0x1fff00), (EnumItem::TransformationISignalPropsIdent, 0x100000), (EnumItem::TransformationProps, 0x1fff00), (EnumItem::TransformationPropsSet, 0x1fff00), (EnumItem::TransformationPropsToServiceInterfaceMappingSet, 0x200), (EnumItem::TransformationPropsToServiceInterfaceElementMapping, 0x1ffc00), (EnumItem::TransformationPropsToServiceInterfaceElementMappingSet, 0x1fc00), (EnumItem::TransformationTechnology, 0x1fffc0), (EnumItem::TransformerHardErrorEvent, 0x1fffc0), (EnumItem::TransientFault, 0x1fff00), (EnumItem::TransportLayerIndependentIdCollectionSet, 0x200), (EnumItem::TransportLayerIndependentInstanceId, 0x200), (EnumItem::Trigger, 0x1fffff), (EnumItem::TriggerInterface, 0x1fffff), (EnumItem::TriggerInterfaceMapping, 0x1fffff), (EnumItem::TtcanCluster, 0x1fffff), (EnumItem::TtcanCommunicationConnector, 0x1fffff), (EnumItem::TtcanCommunicationController, 0x1fffff), (EnumItem::TtcanPhysicalChannel, 0x1fffff), (EnumItem::UcmDescription, 0x1f8000), (EnumItem::UcmMasterModuleInstantiation, 0x1c0000), (EnumItem::UcmModuleInstantiation, 0x1fc000), (EnumItem::UcmRetryStrategy, 0x1c0000), (EnumItem::UcmStep, 0x1f8000), (EnumItem::UcmSubordinateModuleInstantiation, 0x1c0000), (EnumItem::UcmToTimeBaseResourceMapping, 0x1c0000), (EnumItem::UdpNmCluster, 0x1fffff), (EnumItem::UdpNmNode, 0x1fffff), (EnumItem::Unit, 0x1fffff), (EnumItem::UnitGroup, 0x1fffff), (EnumItem::UploadableDeploymentElement, 0x180000), (EnumItem::UploadableDesignElement, 0x180000), (EnumItem::UploadableExclusivePackageElement, 0x1f0000), (EnumItem::UploadablePackageElement, 0x1ffc00), (EnumItem::UserDefinedCluster, 0x1ffff8), (EnumItem::UserDefinedCommunicationConnector, 0x1ffff8), (EnumItem::UserDefinedCommunicationController, 0x1ffff8), (EnumItem::UserDefinedEthernetFrame, 0x1fffc0), (EnumItem::UserDefinedEventDeployment, 0x1ffe00), (EnumItem::UserDefinedFieldDeployment, 0x1ffe00), (EnumItem::UserDefinedGlobalTimeMaster, 0x1fff00), (EnumItem::UserDefinedGlobalTimeSlave, 0x1fff00), (EnumItem::UserDefinedIPdu, 0x1ffffc), (EnumItem::UserDefinedMethodDeployment, 0x1ffe00), (EnumItem::UserDefinedPdu, 0x1ffffc), (EnumItem::UserDefinedPhysicalChannel, 0x1ffff8), (EnumItem::UserDefinedServiceInstanceToMachineMapping, 0x1ffe00), (EnumItem::UserDefinedServiceInterfaceDeployment, 0x1ffe00), (EnumItem::UserDefinedTransformationProps, 0x1ffe00), (EnumItem::V2XDataManagerNeeds, 0x1c0000), (EnumItem::V2XFacUserNeeds, 0x1fff00), (EnumItem::V2XMUserNeeds, 0x1fff00), (EnumItem::VariableAccess, 0x1fffff), (EnumItem::VariableAndParameterInterfaceMapping, 0x1fffff), (EnumItem::VariableDataPrototype, 0x1fffff), (EnumItem::VariationPointProxy, 0x1fffff), (EnumItem::VehiclePackage, 0x1f8000), (EnumItem::VehicleRolloutStep, 0x1f8000), (EnumItem::VendorSpecificServiceNeeds, 0x1fff00), (EnumItem::VfbTiming, 0x1fffff), (EnumItem::ViewMap, 0x1ffff8), (EnumItem::ViewMapSet, 0x1ffff8), (EnumItem::VlanConfig, 0x1ffff8), (EnumItem::WaitPoint, 0x1fffff), (EnumItem::WarningIndicatorRequestedBitNeeds, 0x1ffff8), (EnumItem::WatchdogActionItem, 0x1c00), (EnumItem::WatchdogPhmActionItem, 0xe000), (EnumItem::WorstCaseHeapUsage, 0x1fffff), (EnumItem::WorstCaseStackUsage, 0x1fffff), (EnumItem::XcpPdu, 0x1fffff), (EnumItem::Xdoc, 0x1fffff), (EnumItem::Xfile, 0x1fffff), (EnumItem::XrefTarget, 0x1fffff)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::ArClientServer, 0x1ffff8), (EnumItem::Someip, 0x1ffff8)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::ReportAfterInit, 0x1fffc0), (EnumItem::ReportBeforeInit, 0x1fffc0)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::Connect, 0x1ffff8), (EnumItem::Delete, 0x1ffff8), (EnumItem::Get, 0x1ffff8), (EnumItem::Head, 0x1ffff8), (EnumItem::Options, 0x1ffff8), (EnumItem::Post, 0x1ffff8), (EnumItem::Put, 0x1ffff8), (EnumItem::Trace, 0x1ffff8)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::Functional, 0x1fe000), (EnumItem::Physical, 0x1fe000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::DdsProvidedServiceInstance, 0x8000), (EnumItem::ProvidedApServiceInstance, 0x8000), (EnumItem::ProvidedSomeipServiceInstance, 0x8000), (EnumItem::ProvidedUserDefinedServiceInstance, 0x8000), (EnumItem::DdsRequiredServiceInstance, 0x1f0000), (EnumItem::RequiredApServiceInstance, 0x1f0000), (EnumItem::RequiredSomeipServiceInstance, 0x1f0000), (EnumItem::RequiredUserDefinedServiceInstance, 0x1f0000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::NoSloppy, 0x1fff80), (EnumItem::Sloppy, 0x1fff80)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::ResourceGroup, 0x1ffe00)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::RestElementDef, 0x1fc00)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::ContinueAtItPosition, 0x1fffff), (EnumItem::StartFromBeginning, 0x1fffff)]},
    CharacterDataSpec::Pattern{check_fn: validate_regex_25, regex: r"[0-9]+\.[0-9]+\.[0-9]+([\._;].*)?", max_length: None},
    CharacterDataSpec::Enum{items: &[(EnumItem::RootSwClusterDesignComponentPrototype, 0x1f8000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::RootSwComponentPrototype, 0x1ffe00)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::RootSwCompositionPrototype, 0x1fffff)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::Enabled, 0x1fff00), (EnumItem::None, 0x1fff00), (EnumItem::Protected, 0x1fff00)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::None, 0x1fff00), (EnumItem::RptEnablerRam, 0x1fff00), (EnumItem::RptEnablerRamAndRom, 0x1fff00), (EnumItem::RptEnablerRom, 0x1fff00)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::RptExecutionContext, 0x1fff00)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::Conditional, 0x1fff00), (EnumItem::None, 0x1fff00)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::None, 0x1fff00), (EnumItem::RptLevel1, 0x1fff00), (EnumItem::RptLevel2, 0x1fff00), (EnumItem::RptLevel3, 0x1fff00)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::RptProfile, 0x1fff00)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::RptServicePoint, 0x1fff00)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::Enabled, 0x1fff00), (EnumItem::None, 0x1fff00)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::NoReturnValueProvided, 0x1f0000), (EnumItem::ReturnValueProvided, 0x1f0000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::AsynchronousServerCallReturnsEvent, 0x1fffff), (EnumItem::BackgroundEvent, 0x1fffff), (EnumItem::DataReceiveErrorEvent, 0x1fffff), (EnumItem::DataReceivedEvent, 0x1fffff), (EnumItem::DataSendCompletedEvent, 0x1fffff), (EnumItem::DataWriteCompletedEvent, 0x1fffff), (EnumItem::ExternalTriggerOccurredEvent, 0x1fffff), (EnumItem::InitEvent, 0x1ffff8), (EnumItem::InternalTriggerOccurredEvent, 0x1fffff), (EnumItem::ModeSwitchedAckEvent, 0x1fffff), (EnumItem::OperationInvokedEvent, 0x1fffff), (EnumItem::OsTaskExecutionEvent, 0x1f0000), (EnumItem::RteEvent, 0x1fffff), (EnumItem::SwcModeManagerErrorEvent, 0x1ffff8), (EnumItem::SwcModeSwitchEvent, 0x1fffff), (EnumItem::TimingEvent, 0x1fffff), (EnumItem::TransformerHardErrorEvent, 0x1fffc0)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::False, 0x1c00), (EnumItem::True, 0x1c00), (EnumItem::Undefined, 0x1c00)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::RunContinuous, 0x1fffff), (EnumItem::RunOnce, 0x1fffff)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::RunnableEntity, 0x1fffff)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::RunnableEntityGroup, 0x1ffff8)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::None, 0x1ffff0), (EnumItem::Sd, 0x1ffff0)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::AcceptAll, 0x1fffc0), (EnumItem::AcceptConfigured, 0x1fffc0)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::NotAvailable, 0x1ffffe), (EnumItem::NotDefined, 0x1ffffe), (EnumItem::NotValid, 0x1ffffe), (EnumItem::Valid, 0x1ffffe)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::SdgCaption, 0x1fffff)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::SdgClass, 0x1fff00)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::SdgDef, 0x1fff00)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::SearchForAny, 0x7e00), (EnumItem::SearchForId, 0x7e00)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::SearchForAll, 0x18000), (EnumItem::SearchForId, 0x18000), (EnumItem::SearchForAllInstances, 0x1e0000), (EnumItem::SearchForSpecificInstance, 0x1e0000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::SecOcCryptoServiceMapping, 0x1fe000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::SecOcJobRequirement, 0x1ffc00)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::Authenticate, 0x1ffc00), (EnumItem::Verify, 0x1ffc00)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::SecOcSecureComProps, 0x1fe000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::SectionNamePrefix, 0x1ffffc)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::DdsSecureComProps, 0x1e0000), (EnumItem::SecOcSecureComProps, 0x1ffc00), (EnumItem::SecureComProps, 0x1ffc00), (EnumItem::TlsSecureComProps, 0x1ffc00)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::SecureCommunicationAuthenticationProps, 0x1fff00)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::SecureCommunicationFreshnessProps, 0x1fff00)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::NoHeader, 0x1ff800), (EnumItem::SecuredPduHeader08Bit, 0x1ff800), (EnumItem::SecuredPduHeader16Bit, 0x1ff800), (EnumItem::SecuredPduHeader32Bit, 0x1ff800)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::SecurityEventContextDataDefinition, 0x100000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::SecurityEventContextDataElement, 0x100000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::UseFirstContextData, 0x1f0000), (EnumItem::UseLastContextData, 0x1f0000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::SecurityEventContextProps, 0x1f0000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::SecurityEventDefinition, 0x1f0000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::SecurityEventFilterChain, 0x1f0000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::SecurityEventMapping, 0x1f0000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::SecurityEventReportInstanceDefinition, 0x100000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::Brief, 0x1f0000), (EnumItem::BriefBypassingFilters, 0x1f0000), (EnumItem::Detailed, 0x1f0000), (EnumItem::DetailedBypassingFilters, 0x1f0000), (EnumItem::Off, 0x1f0000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::AnySendOperation, 0x1f0000), (EnumItem::None, 0x1f0000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::WillSend, 0xfc00), (EnumItem::WontSend, 0xfc00)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::WillSend, 0x1f0000), (EnumItem::WontSend, 0x1f0000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::SerializationTechnology, 0x1ffff8)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::SignalBased, 0x1f8000), (EnumItem::Someip, 0x1f8000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::UseArgumentType, 0x1fffff), (EnumItem::UseArrayBaseType, 0x1fffff), (EnumItem::UseVoid, 0x1fffff)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::IsNotRelevant, 0x1e0000), (EnumItem::IsRelevant, 0x1e0000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::DdsEventDeployment, 0x1ff000), (EnumItem::ServiceEventDeployment, 0x1ffc00), (EnumItem::SignalBasedEventDeployment, 0x1c00), (EnumItem::SomeipEventDeployment, 0x1ffc00), (EnumItem::UserDefinedEventDeployment, 0x1ffc00)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::DdsFieldDeployment, 0x1fe000), (EnumItem::ServiceFieldDeployment, 0x1ffc00), (EnumItem::SignalBasedFieldDeployment, 0x1c00), (EnumItem::SomeipFieldDeployment, 0x1ffc00), (EnumItem::UserDefinedFieldDeployment, 0x1ffc00)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::ServiceInstanceToPortPrototypeMapping, 0x1f0000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::ServiceInterface, 0x1ffe00)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::DdsServiceInterfaceDeployment, 0x1ff000), (EnumItem::ServiceInterfaceDeployment, 0x1ffe00), (EnumItem::SomeipServiceInterface, 0x200), (EnumItem::SignalBasedServiceInterfaceDeployment, 0x7c00), (EnumItem::SomeipServiceInterfaceDeployment, 0x1ffc00), (EnumItem::UserDefinedServiceInterfaceDeployment, 0x1ffe00)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::ServiceInterfaceElementMapping, 0x1e0000), (EnumItem::ServiceInterfaceEventMapping, 0x1e0000), (EnumItem::ServiceInterfaceFieldMapping, 0x1e0000), (EnumItem::ServiceInterfaceMethodMapping, 0x1e0000), (EnumItem::ServiceInterfaceTriggerMapping, 0x1e0000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::ServiceInterfaceElementSecureComConfig, 0x1f8000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::DdsMethodDeployment, 0xe000), (EnumItem::ServiceMethodDeployment, 0x1ffc00), (EnumItem::SignalBasedMethodDeployment, 0x1c00), (EnumItem::SomeipMethodDeployment, 0x1ffc00), (EnumItem::UserDefinedMethodDeployment, 0x1ffc00)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::BswMgrNeeds, 0x1fff80), (EnumItem::ChargeManagerNeeds, 0x100000), (EnumItem::ComMgrUserNeeds, 0x1fff80), (EnumItem::CryptoCertificateKeySlotNeeds, 0x1f0000), (EnumItem::CryptoKeyManagementNeeds, 0x1f0000), (EnumItem::CryptoNeeds, 0x1f0000), (EnumItem::CryptoServiceJobNeeds, 0x1fe000), (EnumItem::CryptoServiceNeeds, 0x1fff80), (EnumItem::DiagnosticCapabilityElement, 0x1fff80), (EnumItem::DiagnosticClearConditionNeeds, 0x1fc000), (EnumItem::DiagnosticCommunicationManagerNeeds, 0x1fff80), (EnumItem::DiagnosticComponentNeeds, 0x1fff00), (EnumItem::DiagnosticControlNeeds, 0x1fff00), (EnumItem::DiagnosticEnableConditionNeeds, 0x1fff80), (EnumItem::DiagnosticEventInfoNeeds, 0x1fff80), (EnumItem::DiagnosticEventManagerNeeds, 0x1fff80), (EnumItem::DiagnosticEventNeeds, 0x1fff80), (EnumItem::DiagnosticGenericUdsNeeds, 0x1fc000), (EnumItem::DiagnosticIndicatorNeeds, 0x1fc000), (EnumItem::DiagnosticIoControlNeeds, 0x1fff80), (EnumItem::DiagnosticOperationCycleNeeds, 0x1fff80), (EnumItem::DiagnosticRequestFileTransferNeeds, 0x1fe000), (EnumItem::DiagnosticResponseOnEventNeeds, 0x1fff00), (EnumItem::DiagnosticRoutineNeeds, 0x1fff80), (EnumItem::DiagnosticStorageConditionNeeds, 0x1fff80), (EnumItem::DiagnosticUploadDownloadNeeds, 0x1fe000), (EnumItem::DiagnosticValueNeeds, 0x1fff80), (EnumItem::DiagnosticsCommunicationSecurityNeeds, 0x1fff80), (EnumItem::DltUserNeeds, 0x1fff80), (EnumItem::DoIpActivationLineNeeds, 0x1fff80), (EnumItem::DoIpGidNeeds, 0x1fff80), (EnumItem::DoIpGidSynchronizationNeeds, 0x1fff80), (EnumItem::DoIpPowerModeStatusNeeds, 0x1fff80), (EnumItem::DoIpRoutingActivationAuthenticationNeeds, 0x1fff80), (EnumItem::DoIpRoutingActivationConfirmationNeeds, 0x1fff80), (EnumItem::DoIpServiceNeeds, 0x1fff80), (EnumItem::DtcStatusChangeNotificationNeeds, 0x1fff80), (EnumItem::EcuStateMgrUserNeeds, 0x1fff80), (EnumItem::ErrorTracerNeeds, 0x1fff00), (EnumItem::FunctionInhibitionAvailabilityNeeds, 0x1ff800), (EnumItem::FunctionInhibitionNeeds, 0x1fff80), (EnumItem::FurtherActionByteNeeds, 0x1ff800), (EnumItem::GeneralPurposeTimerServiceNeeds, 0x100000), (EnumItem::GlobalSupervisionNeeds, 0x1fff00), (EnumItem::HardwareTestNeeds, 0x1fe000), (EnumItem::IdsMgrCustomTimestampNeeds, 0x1f0000), (EnumItem::IdsMgrNeeds, 0x1f0000), (EnumItem::IndicatorStatusNeeds, 0x1fe000), (EnumItem::J1939DcmDm19Support, 0x1f0000), (EnumItem::J1939RmIncomingRequestServiceNeeds, 0x1fff00), (EnumItem::J1939RmOutgoingRequestServiceNeeds, 0x1fff00), (EnumItem::NvBlockNeeds, 0x1fff80), (EnumItem::ObdControlServiceNeeds, 0x1fff80), (EnumItem::ObdInfoServiceNeeds, 0x1fff80), (EnumItem::ObdMonitorServiceNeeds, 0x1fff80), (EnumItem::ObdPidServiceNeeds, 0x1fff80), (EnumItem::ObdRatioDenominatorNeeds, 0x1fe000), (EnumItem::ObdRatioServiceNeeds, 0x1fff80), (EnumItem::SecureOnBoardCommunicationNeeds, 0x1fff00), (EnumItem::ServiceNeeds, 0x1fff80), (EnumItem::SupervisedEntityCheckpointNeeds, 0x1fff00), (EnumItem::SupervisedEntityNeeds, 0x1fff80), (EnumItem::SyncTimeBaseMgrUserNeeds, 0x1fff80), (EnumItem::V2XDataManagerNeeds, 0x1c0000), (EnumItem::V2XFacUserNeeds, 0x1fff00), (EnumItem::V2XMUserNeeds, 0x1fff00), (EnumItem::VendorSpecificServiceNeeds, 0x1fff00), (EnumItem::WarningIndicatorRequestedBitNeeds, 0x1fff80)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::AnyStandardized, 0x1ffffc), (EnumItem::BasicSoftwareModeManager, 0x1ffffc), (EnumItem::ComManager, 0x1ffffc), (EnumItem::CryptoKeyManagement, 0x1e0000), (EnumItem::CryptoServiceManager, 0x1ffffc), (EnumItem::DefaultErrorTracer, 0x1fff00), (EnumItem::DevelopmentErrorTracer, 0x1ffffc), (EnumItem::DiagnosticCommunicationManager, 0x1ffffc), (EnumItem::DiagnosticEventManager, 0x1ffffc), (EnumItem::DiagnosticLogAndTrace, 0x1ffffc), (EnumItem::EcuManager, 0x1ffffc), (EnumItem::ErrorTracer, 0x1f0000), (EnumItem::FunctionInhibitionManager, 0x1ffffc), (EnumItem::HardwareTestManager, 0x1f0000), (EnumItem::IntrusionDetectionSecurityManagement, 0x1e0000), (EnumItem::J1939Dcm, 0x1f0000), (EnumItem::J1939RequestManager, 0x1fff00), (EnumItem::NonVolatileRamManager, 0x1ffffc), (EnumItem::OperatingSystem, 0x1ffffc), (EnumItem::SecureOnBoardCommunication, 0x1fff00), (EnumItem::SyncBaseTimeManager, 0x1ffffc), (EnumItem::V2XFacilities, 0x1f0000), (EnumItem::V2XManagement, 0x1f0000), (EnumItem::VendorSpecific, 0x1ffffc), (EnumItem::WatchDogManager, 0x1ffffc)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::ExactOrAnyMinorVersion, 0x1f8000), (EnumItem::MinimumMinorVersion, 0x1f8000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::Error, 0x1fff00), (EnumItem::Info, 0x1fff00), (EnumItem::Warning, 0x1fff00)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::NoShowContent, 0x1fffff), (EnumItem::ShowContent, 0x1fffff)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::NoShowAliasName, 0x1ffffe), (EnumItem::ShowAliasName, 0x1ffffe)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::NoShowCategory, 0x1ffffc), (EnumItem::ShowCategory, 0x1ffffc)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::NoShowLongName, 0x1fffff), (EnumItem::ShowLongName, 0x1fffff)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::NoShowNumber, 0x1fffff), (EnumItem::ShowNumber, 0x1fffff)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::NoShowPage, 0x1fffff), (EnumItem::ShowPage, 0x1fffff)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::NoShowShortName, 0x1fffff), (EnumItem::ShowShortName, 0x1fffff)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::NoShowType, 0x1fffff), (EnumItem::ShowType, 0x1fffff)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::NoShowSee, 0x1fffff), (EnumItem::ShowSee, 0x1fffff)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::SignalBasedEventDeployment, 0x1c00)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::SignalBasedFieldDeployment, 0x1c00)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::SignalBasedMethodDeployment, 0x1c00)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::Nfold, 0x1fffff), (EnumItem::Single, 0x1fffff)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::AllPartialNetworksActive, 0x1c0000), (EnumItem::AnyPartialNetworkActive, 0x1c0000), (EnumItem::PartialNetwork, 0x1f8000), (EnumItem::ServiceDiscovery, 0x1f8000), (EnumItem::TranslationStart, 0x1f8000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::DoIp, 0x1fffff), (EnumItem::PduR, 0x1fffff), (EnumItem::UdpNm, 0x1fffff), (EnumItem::Xcp, 0x1fffff)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::Tcp, 0x1fffff), (EnumItem::Udp, 0x1fffff)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::SoAdRoutingGroup, 0x1ffff8)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::SoConIPduIdentifier, 0x1f8000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::SocketAddress, 0x1fffff)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::SocketConnectionBundle, 0x1fff00)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::SoftwareActivationDependency, 0x8000), (EnumItem::SoftwareCluster, 0x8000), (EnumItem::SoftwareClusterDesign, 0x8000), (EnumItem::VehiclePackage, 0x8000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::LogicalAnd, 0x8000), (EnumItem::LogicalOr, 0x8000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::IsEqual, 0x8000), (EnumItem::IsGreaterThan, 0x8000), (EnumItem::IsGreaterThanOrEqual, 0x8000), (EnumItem::IsLessThan, 0x8000), (EnumItem::IsLessThanOrEqual, 0x8000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::SoftwareCluster, 0x1ff000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::LogicalAnd, 0x1fc000), (EnumItem::LogicalOr, 0x1fc000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::IsEqual, 0x1f4000), (EnumItem::IsGreaterThan, 0x1f4000), (EnumItem::IsGreaterThanOrEqual, 0x1f4000), (EnumItem::IsLessThan, 0x1f4000), (EnumItem::IsLessThanOrEqual, 0x1f4000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::SoftwareClusterDesign, 0x1ff000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::FunctionalAddress, 0x1ffc00), (EnumItem::PhysicalAddress, 0x1ffc00)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::SoftwareClusterDiagnosticDeploymentProps, 0x1c0000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::CanBeRemoved, 0x1c0000), (EnumItem::CannotBeRemoved, 0x1c0000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::SoftwareClusterRequirement, 0xc00)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::SoftwarePackage, 0x1f8000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::Install, 0x1fc000), (EnumItem::Remove, 0x1fc000), (EnumItem::Update, 0x1fc000), (EnumItem::UpdateConfiguration, 0x100000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::Nothing, 0x1ec000), (EnumItem::Reboot, 0x1ec000), (EnumItem::RestartApplication, 0x1ec000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::None, 0x1f8000), (EnumItem::Ucm, 0x1f8000), (EnumItem::UcmMaster, 0x1f8000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::SomeipEvent, 0x200), (EnumItem::SomeipEventDeployment, 0x1ffc00)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::SomeipEventGroup, 0x1ffe00)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::Error, 0x1fff80), (EnumItem::Notification, 0x1fff80), (EnumItem::Request, 0x1fff80), (EnumItem::RequestNoReturn, 0x1fff80), (EnumItem::Response, 0x1fff80)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::SomeipMethodDeployment, 0x1ff000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::SomeipRemoteMulticastConfig, 0x1c0000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::SomeipRemoteUnicastConfig, 0x1c0000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::SomeipSdClientEventGroupTimingConfig, 0x1fe000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::SomeipSdClientServiceInstanceConfig, 0x1fe000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::SomeipSdServerEventGroupTimingConfig, 0x1fe000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::SomeipSdServerServiceInstanceConfig, 0x1fe000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::SomeipTpChannel, 0x1fe000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::SessionHandlingActive, 0x1fff80), (EnumItem::SessionHandlingInactive, 0x1fff80)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::Ap, 0x1fff00), (EnumItem::Cp, 0x1fff00), (EnumItem::Fo, 0x1fff00), (EnumItem::Ta, 0x1fff00), (EnumItem::Tc, 0x1fff00)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::StartupConfig, 0x1ffe00)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::StateDependentFirewall, 0x1c0000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::IsEqual, 0x1c0000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::StateManagementNmActionItem, 0x180000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::StateManagementRequestError, 0x180000), (EnumItem::StateManagementRequestTrigger, 0x180000), (EnumItem::StateManagementStateRequest, 0x180000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::StaticSocketConnection, 0x1f8000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::EventStorageDisabled, 0x1ffff0), (EnumItem::EventStorageEnabled, 0x1ffff0)]},
    CharacterDataSpec::Pattern{check_fn: validate_regex_26, regex: r"(0|[1-9]\d*)\.(0|[1-9]\d*)\.(0|[1-9]\d*)(-((0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*)(\.(0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(\+([0-9a-zA-Z-]+(\.[0-9a-zA-Z-]+)*))?", max_length: None},
    CharacterDataSpec::Enum{items: &[(EnumItem::SupervisedEntityCheckpointNeeds, 0x1fff00)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::PhmCheckpoint, 0xc00), (EnumItem::SupervisionCheckpoint, 0x1ff000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::SupervisionEntity, 0xc00)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::SupervisionModeCondition, 0x1e0000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::DoesNotSupportBufferLocking, 0x1fff00), (EnumItem::SupportsBufferLocking, 0x1fff00)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::SwAddrMethod, 0x1fffff)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::SwAxisType, 0x1fffff)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::SwBaseType, 0x1fffff)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::NotAccessible, 0x1fffff), (EnumItem::ReadOnly, 0x1fffff), (EnumItem::ReadWrite, 0x1fffff)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::SwCalprmPrototype, 0x1)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::SwClassPrototype, 0x1)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::SwComponentMappingConstraints, 0x1e0000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::SwComponentPrototype, 0x1fffff)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::AdaptiveApplicationSwComponentType, 0x1ffe00), (EnumItem::ApplicationSwComponentType, 0x1fffff), (EnumItem::AtomicSwComponentType, 0x1fffff), (EnumItem::ComplexDeviceDriverSwComponentType, 0x1fffff), (EnumItem::CompositionSwComponentType, 0x1fffff), (EnumItem::EcuAbstractionSwComponentType, 0x1fffff), (EnumItem::NvBlockSwComponentType, 0x1fffff), (EnumItem::ParameterSwComponentType, 0x1fffff), (EnumItem::SensorActuatorSwComponentType, 0x1fffff), (EnumItem::ServiceProxySwComponentType, 0x1fffff), (EnumItem::ServiceSwComponentType, 0x1fffff), (EnumItem::SwComponentType, 0x1fffff)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::SwGenericAxisParamType, 0x1fffff)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::Const, 0x1fffff), (EnumItem::Fixed, 0x1fffff), (EnumItem::MeasurementPoint, 0x1fffff), (EnumItem::Queued, 0x1fffff), (EnumItem::Standard, 0x1fffff)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::SwRecordLayout, 0x1fffff)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::Inline, 0x1fffff), (EnumItem::InlineConditional, 0x1ffffe), (EnumItem::Macro, 0x1fffff), (EnumItem::Standard, 0x1fffff)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::SwSystemconst, 0x1fffff)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::SwSystemconstantValueSet, 0x1fffff)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::SwVariablePrototype, 0x1)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::SwcBswMapping, 0x1fffff)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::SwcImplementation, 0x1fffff)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::SwcInternalBehavior, 0x1fffff)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::SwcModeSwitchEvent, 0x1fff00)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::SwcServiceDependency, 0x1fffc0)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::SwcToEcuMapping, 0x1fffff)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::Dedicated, 0x1fffff), (EnumItem::Exclusive, 0x1fffff)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::In, 0x1fffff), (EnumItem::Out, 0x1fffff)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::SwitchAsynchronousTrafficShaperGroupEntry, 0x180000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::SwitchFlowMeteringEntry, 0x180000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::IndependentVlanLearning, 0x100000), (EnumItem::SharedVlanLearning, 0x100000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::Extend, 0x180000), (EnumItem::Overwrite, 0x180000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::SwitchStreamGateEntry, 0x180000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::SwitchStreamIdentification, 0x180000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::ResponseSynchronization, 0x1fffff), (EnumItem::StimulusSynchronization, 0x1fffff)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::SynchronizedTimeBaseConsumer, 0x40000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::SynchronizedTimeBaseProvider, 0x1f0000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::System, 0x1fffff)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::SystemSignal, 0x1fffff)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::SystemSignalGroup, 0x1fffff)]},
    CharacterDataSpec::Pattern{check_fn: validate_regex_27, regex: r"[0-1]", max_length: None},
    CharacterDataSpec::Enum{items: &[(EnumItem::TcpOptionFilterList, 0x1fff00)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::Connect, 0x1f8000), (EnumItem::Listen, 0x1f8000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::BswModuleEntityActivated, 0x1fffff), (EnumItem::BswModuleEntityStarted, 0x1fffff), (EnumItem::BswModuleEntityTerminated, 0x1fffff)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::ModeDeclarationRequested, 0x1fffff), (EnumItem::ModeDeclarationSwitchCompleted, 0x1fffff), (EnumItem::ModeDeclarationSwitchInitiated, 0x1fffff)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::BswMEntryCallReturned, 0x1fffff), (EnumItem::BswMEntryCalled, 0x1fffff)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::FrameEthernetQueuedForTransmission, 0x1fff00), (EnumItem::FrameEthernetReceivedByIf, 0x1fff00), (EnumItem::FrameEthernetReceivedOnBus, 0x1fff00), (EnumItem::FrameEthernetSentOnBus, 0x1fff00)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::FrameQueuedForTransmission, 0x1fffff), (EnumItem::FrameReceivedByIf, 0x1fffff), (EnumItem::FrameTransmittedOnBus, 0x1fffff)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::IPduReceivedByCom, 0x1fffff), (EnumItem::IPduSentToIf, 0x1fffff)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::ISignalAvailableForRte, 0x1fffff), (EnumItem::ISignalSentToCom, 0x1fffff)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::ModeDeclarationSwitchCompleted, 0x1fffff), (EnumItem::ModeDeclarationSwitchInitiated, 0x1fffff)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::OperationCallReceived, 0x1fffff), (EnumItem::OperationCallResponseReceived, 0x1fffff), (EnumItem::OperationCallResponseSent, 0x1fffff), (EnumItem::OperationCalled, 0x1fffff)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::AdaptiveServiceFindCompleted, 0x1f0000), (EnumItem::AdaptiveServiceFindStarted, 0x1f0000), (EnumItem::AdaptiveServiceOfferCompleted, 0x1f0000), (EnumItem::AdaptiveServiceOfferStarted, 0x1f0000), (EnumItem::AdaptiveServiceStopSubscriptionCompleted, 0x1f0000), (EnumItem::AdaptiveServiceStopSubscriptionStarted, 0x1f0000), (EnumItem::AdaptiveServiceSubscriptionAcknowledgeCompleted, 0x1f0000), (EnumItem::AdaptiveServiceSubscriptionAcknowledgeStarted, 0x1f0000), (EnumItem::AdaptiveServiceSubscriptionCompleted, 0x1f0000), (EnumItem::AdaptiveServiceSubscriptionStarted, 0x1f0000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::AdaptiveEventReceived, 0x1f0000), (EnumItem::AdaptiveEventSent, 0x1f0000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::AdaptiveFieldGetterCalled, 0x1f0000), (EnumItem::AdaptiveFieldGetterCompleted, 0x1f0000), (EnumItem::AdaptiveFieldNotificationReceived, 0x1f0000), (EnumItem::AdaptiveFieldNotificationSent, 0x1f0000), (EnumItem::AdaptiveFieldSetterCalled, 0x1f0000), (EnumItem::AdaptiveFieldSetterCompleted, 0x1f0000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::AdaptiveMethodCallReceived, 0x1f0000), (EnumItem::AdaptiveMethodCalled, 0x1f0000), (EnumItem::AdaptiveMethodResponseReceived, 0x1f0000), (EnumItem::AdaptiveMethodResponseSent, 0x1f0000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::TdEventSwc, 0x1ffff8), (EnumItem::TdEventSwcInternalBehavior, 0x1ffff8), (EnumItem::TdEventSwcInternalBehaviorReference, 0x1ffff8)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::RunnableEntityActivated, 0x1fffff), (EnumItem::RunnableEntityStarted, 0x1fffff), (EnumItem::RunnableEntityTerminated, 0x1fffff), (EnumItem::RunnableEntityVariableAccess, 0x1ffff8)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::TriggerActivated, 0x1ffff8), (EnumItem::TriggerReleased, 0x1ffff8)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::VariableDataPrototypeReceived, 0x1fffff), (EnumItem::VariableDataPrototypeSent, 0x1fffff)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::TdEventModeDeclaration, 0x1ffff8), (EnumItem::TdEventOperation, 0x1ffff8), (EnumItem::TdEventTrigger, 0x1ffff8), (EnumItem::TdEventVariableDataPrototype, 0x1ffff8), (EnumItem::TdEventVfb, 0x1ffff8), (EnumItem::TdEventVfbPort, 0x1ffff8), (EnumItem::TdEventVfbPortGroup, 0x100000), (EnumItem::TdEventVfbReference, 0x1ffff8)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::TdEventModeDeclaration, 0x100000), (EnumItem::TdEventOperation, 0x100000), (EnumItem::TdEventTrigger, 0x100000), (EnumItem::TdEventVariableDataPrototype, 0x100000), (EnumItem::TdEventVfbPort, 0x100000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::ProcessIsNotSelfTerminating, 0x1f0000), (EnumItem::ProcessIsSelfTerminating, 0x1f0000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::PureLocalTimeBase, 0xf000), (EnumItem::SynchronizedMasterTimeBase, 0xf000), (EnumItem::SynchronizedSlaveTimeBase, 0xf000), (EnumItem::SynchronizedTimeBaseConsumer, 0x1f0000), (EnumItem::SynchronizedTimeBaseProvider, 0x1f0000), (EnumItem::TimeBaseResource, 0x1ff000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::TimeSyncServerConfiguration, 0x1ffff8)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::AvbIeee802_1As, 0x1ffff8), (EnumItem::NtpRfc958, 0x1ffff8), (EnumItem::PtpIeee1588_2002, 0x1ffff8), (EnumItem::PtpIeee1588_2008, 0x1ffff8)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::Offset, 0x1ff000), (EnumItem::Synchronized, 0x1ff000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::TdletZoneClock, 0x1c0000), (EnumItem::TimingClock, 0x1c0000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::TimingCondition, 0x1fff00)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::TdEventBsw, 0x1f0000), (EnumItem::TdEventBswInternalBehavior, 0x1f0000), (EnumItem::TdEventBswModeDeclaration, 0x1f0000), (EnumItem::TdEventBswModule, 0x1f0000), (EnumItem::TdEventCom, 0x1f0000), (EnumItem::TdEventComplex, 0x1f0000), (EnumItem::TdEventCycleStart, 0x1f0000), (EnumItem::TdEventFrClusterCycleStart, 0x1f0000), (EnumItem::TdEventFrame, 0x1f0000), (EnumItem::TdEventFrameEthernet, 0x1f0000), (EnumItem::TdEventIPdu, 0x1f0000), (EnumItem::TdEventISignal, 0x1f0000), (EnumItem::TdEventModeDeclaration, 0x1f0000), (EnumItem::TdEventOperation, 0x1f0000), (EnumItem::TdEventServiceInstance, 0x1f0000), (EnumItem::TdEventServiceInstanceDiscovery, 0x1f0000), (EnumItem::TdEventServiceInstanceEvent, 0x1f0000), (EnumItem::TdEventServiceInstanceField, 0x1f0000), (EnumItem::TdEventServiceInstanceMethod, 0x1f0000), (EnumItem::TdEventSllet, 0xc0000), (EnumItem::TdEventSlletPort, 0xc0000), (EnumItem::TdEventSwc, 0x1f0000), (EnumItem::TdEventSwcInternalBehavior, 0x1f0000), (EnumItem::TdEventSwcInternalBehaviorReference, 0x1f0000), (EnumItem::TdEventTrigger, 0x1f0000), (EnumItem::TdEventTtCanCycleStart, 0x1f0000), (EnumItem::TdEventVariableDataPrototype, 0x1f0000), (EnumItem::TdEventVfb, 0x1f0000), (EnumItem::TdEventVfbPort, 0x1f0000), (EnumItem::TdEventVfbPortGroup, 0x100000), (EnumItem::TdEventVfbReference, 0x1f0000), (EnumItem::TimingDescription, 0x1f0000), (EnumItem::TimingDescriptionEvent, 0x1f0000), (EnumItem::TimingDescriptionEventChain, 0x1f0000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::TdEventBsw, 0x1fffff), (EnumItem::TdEventBswInternalBehavior, 0x1fffff), (EnumItem::TdEventBswModeDeclaration, 0x1fffff), (EnumItem::TdEventBswModule, 0x1fffff), (EnumItem::TdEventCom, 0x1fffff), (EnumItem::TdEventComplex, 0x1ffffc), (EnumItem::TdEventCycleStart, 0x1fffff), (EnumItem::TdEventFrClusterCycleStart, 0x1fffff), (EnumItem::TdEventFrame, 0x1fffff), (EnumItem::TdEventFrameEthernet, 0x1fff00), (EnumItem::TdEventIPdu, 0x1fffff), (EnumItem::TdEventISignal, 0x1fffff), (EnumItem::TdEventModeDeclaration, 0x1fffff), (EnumItem::TdEventOperation, 0x1fffff), (EnumItem::TdEventServiceInstance, 0x1f0000), (EnumItem::TdEventServiceInstanceDiscovery, 0x1f0000), (EnumItem::TdEventServiceInstanceEvent, 0x1f0000), (EnumItem::TdEventServiceInstanceField, 0x1f0000), (EnumItem::TdEventServiceInstanceMethod, 0x1f0000), (EnumItem::TdEventSllet, 0xc0000), (EnumItem::TdEventSlletPort, 0xc0000), (EnumItem::TdEventSwc, 0x1ffff8), (EnumItem::TdEventSwcInternalBehavior, 0x1fffff), (EnumItem::TdEventSwcInternalBehaviorReference, 0x1ffff8), (EnumItem::TdEventTrigger, 0x1ffff8), (EnumItem::TdEventTtCanCycleStart, 0x1fffff), (EnumItem::TdEventVariableDataPrototype, 0x1fffff), (EnumItem::TdEventVfb, 0x1fffff), (EnumItem::TdEventVfbPort, 0x1ffff8), (EnumItem::TdEventVfbPortGroup, 0x100000), (EnumItem::TdEventVfbReference, 0x1ffff8), (EnumItem::TimingDescriptionEvent, 0x1fffff)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::TimingDescriptionEventChain, 0x1fffff)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::TimingEvent, 0x1fffc0)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::TimingModeInstance, 0x1fff00)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::TlsCryptoCipherSuite, 0x1f0000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::TlsCryptoServiceMapping, 0x1fe000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::TlsJobRequirement, 0x1c00)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::ClientAuthenticate, 0x1c00), (EnumItem::ClientDecrypt, 0x1c00), (EnumItem::ClientEncrypt, 0x1c00), (EnumItem::ClientMacGenerate, 0x1c00), (EnumItem::ClientMacVerify, 0x1c00), (EnumItem::ClientVerify, 0x1c00), (EnumItem::ServerAuthenticate, 0x1c00), (EnumItem::ServerDecrypt, 0x1c00), (EnumItem::ServerEncrypt, 0x1c00), (EnumItem::ServerMacGenerate, 0x1c00), (EnumItem::ServerMacVerify, 0x1c00), (EnumItem::ServerVerify, 0x1c00)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::TlsSecureComProps, 0x1ffc00)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::Lts13, 0x1fe000), (EnumItem::Tls12, 0x1fe000), (EnumItem::Tls13, 0x1f8000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::TlvDataIdDefinitionSet, 0x1f8000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::AckWithRt, 0x1fffff), (EnumItem::NoAck, 0x1fffff)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::TpAddress, 0x1fffff)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::TpConnectionIdent, 0x1fffc0)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::TraceSwitchArti, 0x180000), (EnumItem::TraceSwitchArtiAndLog, 0x180000), (EnumItem::TraceSwitchLog, 0x180000), (EnumItem::TraceSwitchNone, 0x180000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::AgeConstraint, 0x1ffffc), (EnumItem::ArbitraryEventTriggering, 0x1ffffc), (EnumItem::BurstPatternEventTriggering, 0x1ffffc), (EnumItem::ConcretePatternEventTriggering, 0x1ffffc), (EnumItem::EventTriggeringConstraint, 0x1ffffc), (EnumItem::ExecutionOrderConstraint, 0x1ffffc), (EnumItem::ExecutionTimeConstraint, 0x1ffffc), (EnumItem::LatencyTimingConstraint, 0x1ffffc), (EnumItem::OffsetTimingConstraint, 0x1ffffc), (EnumItem::PeriodicEventTriggering, 0x1ffffc), (EnumItem::SporadicEventTriggering, 0x1ffffc), (EnumItem::StructuredReq, 0x1ffffe), (EnumItem::SynchronizationPointConstraint, 0x1fe000), (EnumItem::SynchronizationTimingConstraint, 0x1ffffc), (EnumItem::TimingConstraint, 0x1ffffc), (EnumItem::Traceable, 0x1ffffe), (EnumItem::TraceableTable, 0x1f8000), (EnumItem::TraceableText, 0x1ffffe)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::TraceableText, 0x1fff00)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::Pending, 0x1fffff), (EnumItem::Triggered, 0x1fffff), (EnumItem::TriggeredOnChange, 0x1ffffe), (EnumItem::TriggeredOnChangeWithoutRepetition, 0x1ffffc), (EnumItem::TriggeredWithoutRepetition, 0x1ffffc)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::ApSomeipTransformationProps, 0x1ffe00), (EnumItem::SomeipTransformationProps, 0x1fff00), (EnumItem::TransformationProps, 0x1fff00), (EnumItem::UserDefinedTransformationProps, 0x1ffe00)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::TransformationPropsToServiceInterfaceElementMappingSet, 0x3c00)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::TransformationPropsToServiceInterfaceMappingSet, 0x200)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::TransformationTechnology, 0x1fffc0)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::Custom, 0x1fffc0), (EnumItem::Safety, 0x1fffc0), (EnumItem::Security, 0x1fffc0), (EnumItem::Serializer, 0x1fffc0)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::Cyclic, 0x1f0000), (EnumItem::CyclicAndOnChange, 0x1f0000), (EnumItem::OnChange, 0x100000), (EnumItem::Triggered, 0x1f0000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::TransportLayerIndependentInstanceId, 0x200)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::Tcp, 0x1ffe00), (EnumItem::Udp, 0x1ffe00)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::Trigger, 0x1fffff)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::DynamicPartTrigger, 0x1fffff), (EnumItem::None, 0x1fffff), (EnumItem::StaticOrDynamicPartTrigger, 0x1fffff), (EnumItem::StaticPartTrigger, 0x1fffff)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::MonitorMode, 0x1f8000), (EnumItem::NoTrustedPlatformSupport, 0x1f8000), (EnumItem::StrictMode, 0x1f8000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::TtcanCluster, 0x1fffff)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::RxTrigger, 0x1fffff), (EnumItem::TxRefTrigger, 0x1fffff), (EnumItem::TxRefTriggerGap, 0x1fffff), (EnumItem::TxTriggerMerged, 0x1fffff), (EnumItem::TxTriggerSingle, 0x1fffff), (EnumItem::WatchTrigger, 0x1fffff), (EnumItem::WatchTriggerGap, 0x1fffff)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::UcmDescription, 0x1f8000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::UcmMasterModuleInstantiation, 0x1c0000), (EnumItem::UcmModuleInstantiation, 0x1f8000), (EnumItem::UcmSubordinateModuleInstantiation, 0x1c0000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::UdpChecksumDisabled, 0x1fff00), (EnumItem::UdpChecksumEnabled, 0x1fff00)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::Always, 0x1ff000), (EnumItem::Never, 0x1ff000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::UdpNmCluster, 0x1fffff)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::Unit, 0x1fffff)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::UnitGroup, 0x1ffff8)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::AbstractCanCluster, 0x180000), (EnumItem::AdaptivePlatformServiceInstance, 0x180000), (EnumItem::CanCluster, 0x180000), (EnumItem::CanXlProps, 0x180000), (EnumItem::CommunicationCluster, 0x180000), (EnumItem::ContainerIPdu, 0x180000), (EnumItem::CryptoKeySlotUsageDesignMapping, 0x100000), (EnumItem::CryptoKeySlotUserDesign, 0x100000), (EnumItem::CryptoKeySlotUserDesignMapping, 0x100000), (EnumItem::CryptoServiceCertificate, 0x180000), (EnumItem::CryptoServiceKey, 0x180000), (EnumItem::CryptoServicePrimitive, 0x180000), (EnumItem::DcmIPdu, 0x180000), (EnumItem::DdsProvidedServiceInstance, 0x180000), (EnumItem::DdsRequiredServiceInstance, 0x180000), (EnumItem::DdsSecureComProps, 0x180000), (EnumItem::DdsSecureGovernance, 0x180000), (EnumItem::DdsServiceInstanceToMachineMapping, 0x180000), (EnumItem::DdsServiceInterfaceDeployment, 0x180000), (EnumItem::DdsTopicAccessRule, 0x180000), (EnumItem::DltContext, 0x180000), (EnumItem::DltEcu, 0x180000), (EnumItem::Documentation, 0x180000), (EnumItem::E2EProfileCompatibilityProps, 0x180000), (EnumItem::E2EProfileConfigurationSet, 0x180000), (EnumItem::EthIpProps, 0x180000), (EnumItem::EthTcpIpIcmpProps, 0x180000), (EnumItem::EthTcpIpProps, 0x180000), (EnumItem::EthernetCluster, 0x180000), (EnumItem::Executable, 0x180000), (EnumItem::FirewallRule, 0x180000), (EnumItem::FlexrayCluster, 0x180000), (EnumItem::FunctionGroupSet, 0x180000), (EnumItem::GeneralPurposeIPdu, 0x180000), (EnumItem::GeneralPurposePdu, 0x180000), (EnumItem::GenericTpConnection, 0x100000), (EnumItem::GlobalTimeDomain, 0x180000), (EnumItem::IPdu, 0x180000), (EnumItem::ISignal, 0x180000), (EnumItem::ISignalGroup, 0x180000), (EnumItem::ISignalIPdu, 0x180000), (EnumItem::IdsCommonElement, 0x180000), (EnumItem::IdsDesign, 0x180000), (EnumItem::IdsMapping, 0x180000), (EnumItem::IdsmInstance, 0x180000), (EnumItem::IdsmProperties, 0x180000), (EnumItem::IpSecConfigProps, 0x180000), (EnumItem::J1939Cluster, 0x180000), (EnumItem::J1939DcmIPdu, 0x180000), (EnumItem::J1939ProtectedIPdu, 0x100000), (EnumItem::LinCluster, 0x180000), (EnumItem::LogAndTraceMessageCollectionSet, 0x180000), (EnumItem::MacSecGlobalKayProps, 0x180000), (EnumItem::MacSecParticipantSet, 0x180000), (EnumItem::MachineDesign, 0x180000), (EnumItem::ModeDeclarationGroup, 0x180000), (EnumItem::MultiplexedIPdu, 0x180000), (EnumItem::NPdu, 0x180000), (EnumItem::NmConfig, 0x180000), (EnumItem::NmPdu, 0x180000), (EnumItem::Pdu, 0x180000), (EnumItem::ProvidedApServiceInstance, 0x180000), (EnumItem::ProvidedSomeipServiceInstance, 0x180000), (EnumItem::ProvidedUserDefinedServiceInstance, 0x180000), (EnumItem::RequiredApServiceInstance, 0x180000), (EnumItem::RequiredSomeipServiceInstance, 0x180000), (EnumItem::RequiredUserDefinedServiceInstance, 0x180000), (EnumItem::SecOcSecureComProps, 0x180000), (EnumItem::SecureComProps, 0x180000), (EnumItem::SecuredIPdu, 0x180000), (EnumItem::SecurityEventContextDataDefinition, 0x100000), (EnumItem::SecurityEventContextMapping, 0x180000), (EnumItem::SecurityEventContextMappingApplication, 0x180000), (EnumItem::SecurityEventContextMappingBswModule, 0x180000), (EnumItem::SecurityEventContextMappingCommConnector, 0x180000), (EnumItem::SecurityEventContextMappingFunctionalCluster, 0x180000), (EnumItem::SecurityEventDefinition, 0x180000), (EnumItem::SecurityEventFilterChain, 0x180000), (EnumItem::SecurityEventReportInstanceDefinition, 0x100000), (EnumItem::SecurityEventReportInstanceValue, 0x100000), (EnumItem::SecurityEventReportToSecurityEventDefinitionMapping, 0x180000), (EnumItem::ServiceInstanceToMachineMapping, 0x180000), (EnumItem::ServiceInstanceToPortPrototypeMapping, 0x180000), (EnumItem::ServiceInstanceToSignalMapping, 0x180000), (EnumItem::ServiceInterfaceDeployment, 0x180000), (EnumItem::SignalServiceTranslationPropsSet, 0x180000), (EnumItem::SocketConnectionIpduIdentifierSet, 0x180000), (EnumItem::SomeipDataPrototypeTransformationProps, 0x180000), (EnumItem::SomeipRemoteMulticastConfig, 0x180000), (EnumItem::SomeipRemoteUnicastConfig, 0x180000), (EnumItem::SomeipSdClientEventGroupTimingConfig, 0x180000), (EnumItem::SomeipSdClientServiceInstanceConfig, 0x180000), (EnumItem::SomeipSdServerEventGroupTimingConfig, 0x180000), (EnumItem::SomeipSdServerServiceInstanceConfig, 0x180000), (EnumItem::SomeipServiceInstanceToMachineMapping, 0x180000), (EnumItem::SomeipServiceInterfaceDeployment, 0x180000), (EnumItem::StateDependentFirewall, 0x180000), (EnumItem::System, 0x180000), (EnumItem::TlsSecureComProps, 0x180000), (EnumItem::TlvDataIdDefinitionSet, 0x180000), (EnumItem::TransformationPropsSet, 0x180000), (EnumItem::TransformationPropsToServiceInterfaceElementMapping, 0x180000), (EnumItem::TtcanCluster, 0x180000), (EnumItem::UploadableDesignElement, 0x180000), (EnumItem::UserDefinedCluster, 0x180000), (EnumItem::UserDefinedIPdu, 0x180000), (EnumItem::UserDefinedPdu, 0x180000), (EnumItem::UserDefinedServiceInstanceToMachineMapping, 0x180000), (EnumItem::UserDefinedServiceInterfaceDeployment, 0x180000), (EnumItem::XcpPdu, 0x180000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::AbstractCanCluster, 0x180000), (EnumItem::AbstractCryptoKeySlotToPortPrototypeMapping, 0x100000), (EnumItem::AbstractExecutionContext, 0x1fe000), (EnumItem::AbstractIamRemoteSubject, 0x180000), (EnumItem::AdaptiveFirewallToPortPrototypeMapping, 0x1c0000), (EnumItem::AdaptivePlatformServiceInstance, 0x1ffc00), (EnumItem::ApApplicationError, 0xe000), (EnumItem::ApApplicationErrorDomain, 0xe000), (EnumItem::ApApplicationErrorSet, 0xe000), (EnumItem::CompositionPPortToExecutablePPortMapping, 0x8000), (EnumItem::CompositionPortToExecutablePortMapping, 0x8000), (EnumItem::CompositionRPortToExecutableRPortMapping, 0x8000), (EnumItem::ApmcDefinitionCollection, 0x100000), (EnumItem::ApmcFunctionalClusterDef, 0x100000), (EnumItem::ApmcFunctionalClusterValue, 0x100000), (EnumItem::ApmcValueCollection, 0x100000), (EnumItem::ArtifactChecksumToCryptoProviderMapping, 0x1e0000), (EnumItem::CanCluster, 0x180000), (EnumItem::CanXlProps, 0x180000), (EnumItem::ComCertificateToCryptoCertificateMapping, 0x1f0000), (EnumItem::ComEventGrant, 0x180000), (EnumItem::ComFieldGrant, 0x180000), (EnumItem::ComFindServiceGrant, 0x180000), (EnumItem::ComGrant, 0x180000), (EnumItem::ComKeyToCryptoKeySlotMapping, 0x1f0000), (EnumItem::ComMethodGrant, 0x180000), (EnumItem::ComOfferServiceGrant, 0x180000), (EnumItem::ComSecOcToCryptoKeySlotMapping, 0x1f0000), (EnumItem::ComTriggerGrant, 0x180000), (EnumItem::CommunicationCluster, 0x180000), (EnumItem::ContainerIPdu, 0x180000), (EnumItem::CryptoCertificateToPortPrototypeMapping, 0x1f0000), (EnumItem::CryptoKeySlotToClientPortPrototypeMapping, 0x100000), (EnumItem::CryptoKeySlotToPortPrototypeMapping, 0x1f0000), (EnumItem::CryptoKeySlotUsageDesignMapping, 0x100000), (EnumItem::CryptoKeySlotUserDesign, 0x100000), (EnumItem::CryptoKeySlotUserDesignMapping, 0x100000), (EnumItem::CryptoProviderToPortPrototypeMapping, 0x1f0000), (EnumItem::CryptoServiceCertificate, 0x180000), (EnumItem::CryptoServiceKey, 0x180000), (EnumItem::CryptoServicePrimitive, 0x180000), (EnumItem::DcmIPdu, 0x180000), (EnumItem::DdsProvidedServiceInstance, 0x1fe000), (EnumItem::DdsRequiredServiceInstance, 0x1fe000), (EnumItem::DdsSecureComProps, 0x180000), (EnumItem::DdsSecureGovernance, 0x1e0000), (EnumItem::DdsServiceInstanceToMachineMapping, 0x1ff000), (EnumItem::DdsServiceInterfaceDeployment, 0x1ff000), (EnumItem::DdsTopicAccessRule, 0x1e0000), (EnumItem::DeterministicClient, 0x7e000), (EnumItem::DltLogChannelToProcessMapping, 0x10000), (EnumItem::DeterministicSyncMasterToTimeBaseConsumerMapping, 0x40000), (EnumItem::DltApplicationToProcessMapping, 0x1e0000), (EnumItem::DltContext, 0x180000), (EnumItem::DltEcu, 0x180000), (EnumItem::DltLogSink, 0x1e0000), (EnumItem::DltLogSinkToPortPrototypeMapping, 0x1e0000), (EnumItem::Documentation, 0x180000), (EnumItem::E2EProfileCompatibilityProps, 0x180000), (EnumItem::E2EProfileConfigurationSet, 0x18fc00), (EnumItem::EthIpProps, 0x180000), (EnumItem::EthTcpIpIcmpProps, 0x180000), (EnumItem::EthTcpIpProps, 0x180000), (EnumItem::EthernetCluster, 0x180000), (EnumItem::EthernetMacRawDataStreamMapping, 0x100000), (EnumItem::EthernetRawDataStreamClientMapping, 0x1e0000), (EnumItem::EthernetRawDataStreamGrant, 0x180000), (EnumItem::EthernetRawDataStreamMapping, 0x1f8000), (EnumItem::EthernetRawDataStreamServerMapping, 0x1e0000), (EnumItem::Executable, 0x180000), (EnumItem::FirewallRule, 0x180000), (EnumItem::FlexrayCluster, 0x180000), (EnumItem::FunctionGroupPortMapping, 0x100000), (EnumItem::FunctionGroupSet, 0x180000), (EnumItem::FunctionalClusterInteractsWithDiagnosticEventMapping, 0x100000), (EnumItem::FunctionalClusterInteractsWithFunctionalClusterMapping, 0x1f0000), (EnumItem::FunctionalClusterInteractsWithPersistencyDeploymentMapping, 0x1c0000), (EnumItem::FunctionalClusterToSecurityEventDefinitionMapping, 0x180000), (EnumItem::GeneralPurposeIPdu, 0x180000), (EnumItem::GeneralPurposePdu, 0x180000), (EnumItem::GenericTpConnection, 0x100000), (EnumItem::GlobalTimeDomain, 0x180000), (EnumItem::Grant, 0x180000), (EnumItem::IPdu, 0x180000), (EnumItem::ISignal, 0x180000), (EnumItem::ISignalGroup, 0x180000), (EnumItem::ISignalIPdu, 0x180000), (EnumItem::IdsCommonElement, 0x180000), (EnumItem::IdsDesign, 0x180000), (EnumItem::IdsMapping, 0x180000), (EnumItem::IdsmContextProviderMapping, 0x180000), (EnumItem::IdsmInstance, 0x180000), (EnumItem::IdsmProperties, 0x180000), (EnumItem::IdsmQualifiedEventReceiverMapping, 0x100000), (EnumItem::IdsmReportingModeProviderMapping, 0x100000), (EnumItem::IdsmTimestampProviderMapping, 0x180000), (EnumItem::Ieee1722AcfBusPartRawDataStreamConsumerMapping, 0x100000), (EnumItem::Ieee1722AcfBusRawDataStreamConsumerMapping, 0x100000), (EnumItem::Ieee1722RawDataStreamConsumerMapping, 0x100000), (EnumItem::Ieee1722RawDataStreamMapping, 0x100000), (EnumItem::Ieee1722RawDataStreamProducerMapping, 0x100000), (EnumItem::IpIamRemoteSubject, 0x180000), (EnumItem::IpSecConfigProps, 0x180000), (EnumItem::IpSecIamRemoteSubject, 0x180000), (EnumItem::J1939Cluster, 0x180000), (EnumItem::J1939DcmIPdu, 0x180000), (EnumItem::J1939ProtectedIPdu, 0x100000), (EnumItem::LinCluster, 0x180000), (EnumItem::LogAndTraceMessageCollectionSet, 0x180000), (EnumItem::MacSecGlobalKayProps, 0x180000), (EnumItem::MacSecParticipantSet, 0x180000), (EnumItem::Machine, 0x180000), (EnumItem::MachineDesign, 0x180000), (EnumItem::ModeDeclarationGroup, 0x180000), (EnumItem::MultiplexedIPdu, 0x180000), (EnumItem::NPdu, 0x180000), (EnumItem::NetworkHandlePortMapping, 0x180000), (EnumItem::NmConfig, 0x180000), (EnumItem::NmHandleToFunctionGroupStateMapping, 0x1e0000), (EnumItem::NmInteractsWithSmMapping, 0x180000), (EnumItem::NmPdu, 0x180000), (EnumItem::Pdu, 0x180000), (EnumItem::PersistencyDeployment, 0x1fe000), (EnumItem::PersistencyFile, 0xfc00), (EnumItem::PersistencyFileArray, 0xfc00), (EnumItem::PersistencyFileProxyToFileMapping, 0xc00), (EnumItem::PersistencyKeyValueDatabase, 0xfc00), (EnumItem::PersistencyPortPrototypeToFileArrayMapping, 0xf000), (EnumItem::PersistencyPortPrototypeToKeyValueDatabaseMapping, 0xfc00), (EnumItem::PersistencyDeploymentElementToCryptoKeySlotMapping, 0x1f0000), (EnumItem::PersistencyDeploymentToCryptoKeySlotMapping, 0x1f0000), (EnumItem::PersistencyDeploymentToDltLogChannelMapping, 0x10000), (EnumItem::PersistencyDeploymentToDltLogSinkMapping, 0x1e0000), (EnumItem::PersistencyFileStorage, 0x1f0000), (EnumItem::PersistencyKeyValueStorage, 0x1f0000), (EnumItem::PersistencyPortPrototypeToDeploymentMapping, 0x1f0000), (EnumItem::PersistencyPortPrototypeToFileStorageMapping, 0x1f0000), (EnumItem::PersistencyPortPrototypeToKeyValueStorageMapping, 0x1f0000), (EnumItem::PhmContributionToMachineMapping, 0x180000), (EnumItem::PlatformHealthManagementContribution, 0x1ff000), (EnumItem::PortInterfaceToDataTypeMapping, 0xf000), (EnumItem::Process, 0x1fe000), (EnumItem::ProcessExecutionError, 0x1f0000), (EnumItem::ProcessToMachineMappingSet, 0x1ffc00), (EnumItem::ProvidedApServiceInstance, 0x1ffc00), (EnumItem::ProvidedDdsServiceInstance, 0x1000), (EnumItem::ProvidedServiceInstanceToSwClusterDesignPPortPrototypeMapping, 0x8000), (EnumItem::ProvidedSomeipServiceInstance, 0x1ffc00), (EnumItem::ProvidedUserDefinedServiceInstance, 0x1ffc00), (EnumItem::RawDataStreamDeployment, 0x1f8000), (EnumItem::RawDataStreamGrant, 0x180000), (EnumItem::RawDataStreamMapping, 0x1f8000), (EnumItem::RecoveryViaApplicationActionToClientServerOperationMapping, 0x8000), (EnumItem::RecoveryNotification, 0x1c0000), (EnumItem::RecoveryNotificationToPPortPrototypeMapping, 0x1f0000), (EnumItem::RequiredApServiceInstance, 0x1ffc00), (EnumItem::RequiredDdsServiceInstance, 0x1000), (EnumItem::RequiredServiceInstanceToSwClusterDesignRPortPrototypeMapping, 0x8000), (EnumItem::RequiredSomeipServiceInstance, 0x1ffc00), (EnumItem::RequiredUserDefinedServiceInstance, 0x1ffc00), (EnumItem::RestHttpPortPrototypeMapping, 0x1fc00), (EnumItem::SecOcSecureComProps, 0x180000), (EnumItem::SecureComProps, 0x180000), (EnumItem::SecuredIPdu, 0x180000), (EnumItem::SecurityEventContextDataDefinition, 0x100000), (EnumItem::SecurityEventContextMapping, 0x180000), (EnumItem::SecurityEventContextMappingApplication, 0x180000), (EnumItem::SecurityEventContextMappingBswModule, 0x180000), (EnumItem::SecurityEventContextMappingCommConnector, 0x180000), (EnumItem::SecurityEventContextMappingFunctionalCluster, 0x180000), (EnumItem::SecurityEventDefinition, 0x180000), (EnumItem::SecurityEventFilterChain, 0x180000), (EnumItem::SecurityEventMapping, 0x1f0000), (EnumItem::SecurityEventReportInstanceDefinition, 0x100000), (EnumItem::SecurityEventReportInstanceValue, 0x100000), (EnumItem::SecurityEventReportToSecurityEventDefinitionMapping, 0x180000), (EnumItem::ServiceInstanceToMachineMapping, 0x1ffc00), (EnumItem::ServiceInstanceToPortPrototypeMapping, 0x1ffc00), (EnumItem::ServiceInstanceToSwClusterDesignPortPrototypeMapping, 0x8000), (EnumItem::ServiceInstanceToSignalMapping, 0x180000), (EnumItem::ServiceInterfaceDeployment, 0x1ffc00), (EnumItem::SignalBasedServiceInterfaceDeployment, 0x7c00), (EnumItem::SignalServiceTranslationPropsSet, 0x180000), (EnumItem::SmInteractsWithNmMapping, 0x180000), (EnumItem::SocketConnectionIpduIdentifierSet, 0x180000), (EnumItem::SoftwareCluster, 0x180000), (EnumItem::SoftwareClusterDiagnosticDeploymentProps, 0x1c0000), (EnumItem::SoftwarePackage, 0x180000), (EnumItem::SomeipDataPrototypeTransformationProps, 0x180000), (EnumItem::SomeipRemoteMulticastConfig, 0x180000), (EnumItem::SomeipRemoteUnicastConfig, 0x180000), (EnumItem::SomeipSdClientEventGroupTimingConfig, 0x180000), (EnumItem::SomeipSdClientServiceInstanceConfig, 0x180000), (EnumItem::SomeipSdServerEventGroupTimingConfig, 0x180000), (EnumItem::SomeipSdServerServiceInstanceConfig, 0x180000), (EnumItem::SomeipServiceInstanceToMachineMapping, 0x1ffc00), (EnumItem::SomeipServiceInterfaceDeployment, 0x1ffc00), (EnumItem::StartupConfigSet, 0x3fc00), (EnumItem::StartupConfig, 0x180000), (EnumItem::StateDependentFirewall, 0x180000), (EnumItem::System, 0x180000), (EnumItem::TimeBaseProviderToPersistencyMapping, 0x1f0000), (EnumItem::TimeSyncPortPrototypeToTimeBaseMapping, 0x1ff000), (EnumItem::TlsIamRemoteSubject, 0x180000), (EnumItem::TlsSecureComProps, 0x180000), (EnumItem::TlvDataIdDefinitionSet, 0x180000), (EnumItem::TransformationPropsSet, 0x180000), (EnumItem::TransformationPropsToServiceInterfaceElementMapping, 0x180000), (EnumItem::TtcanCluster, 0x180000), (EnumItem::UcmToTimeBaseResourceMapping, 0x1c0000), (EnumItem::UploadableDeploymentElement, 0x180000), (EnumItem::UploadableDesignElement, 0x180000), (EnumItem::UploadableExclusivePackageElement, 0x1f0000), (EnumItem::UploadablePackageElement, 0x1ffc00), (EnumItem::UserDefinedCluster, 0x180000), (EnumItem::UserDefinedIPdu, 0x180000), (EnumItem::UserDefinedPdu, 0x180000), (EnumItem::UserDefinedServiceInstanceToMachineMapping, 0x1ffc00), (EnumItem::UserDefinedServiceInterfaceDeployment, 0x1ffc00), (EnumItem::VehiclePackage, 0x180000), (EnumItem::XcpPdu, 0x180000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::V2XActiveSupported, 0x1fff00), (EnumItem::V2XNotSupported, 0x1fff00)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::Bottom, 0x1fffff), (EnumItem::Middle, 0x1fffff), (EnumItem::Top, 0x1fffff)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::VariableAccess, 0x1fffff)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::CommunicationInterEcu, 0x1ffffc), (EnumItem::CommunicationIntraPartition, 0x1ffffc), (EnumItem::InterPartitionIntraEcu, 0x1ffffc)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::VariableDataPrototype, 0x1fffff)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::Activate, 0x1f8000), (EnumItem::Cancel, 0x1e0000), (EnumItem::Finish, 0x1f8000), (EnumItem::Process, 0x1f8000), (EnumItem::RollBack, 0x1f8000), (EnumItem::Transfer, 0x1f8000)]},
    CharacterDataSpec::String{preserve_whitespace: true, max_length: None},
    CharacterDataSpec::Enum{items: &[(EnumItem::FailureAndSuccess, 0x1e0000), (EnumItem::FailureOnly, 0x1e0000)]},
    CharacterDataSpec::Pattern{check_fn: validate_regex_28, regex: r"(-?[a-zA-Z_]+)(( )+-?[a-zA-Z_]+)*", max_length: None},
    CharacterDataSpec::Enum{items: &[(EnumItem::CancelCampaign, 0x180000), (EnumItem::WaitForVehicleSafeState, 0x180000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::StopTrigger, 0x1c00)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::StopTrigger, 0xe000), (EnumItem::WrongTrigger, 0xe000)]},
    CharacterDataSpec::Enum{items: &[(EnumItem::default, 0x1fffff), (EnumItem::preserve, 0x1fffff)]},
    CharacterDataSpec::Float,
    CharacterDataSpec::String{preserve_whitespace: false, max_length: None},
    CharacterDataSpec::UnsignedInteger,
];
pub(crate) static REFERENCE_TYPE_IDX: u16 = 726;

#[rustfmt::skip]
pub(crate) static ELEMENTS: [ElementDefinition; 9160] = [
    /*    0 */ element!(Autosar, 250, One, false, 0xFFFFFFFF, NotRestricted, Some(2311)),
    /*    1 */ element!(A2LDisplayText, 4393, ZeroOrOne, false, 0x0, NotRestricted, Some(3188)),
    /*    2 */ element!(AafAes3DataType, 2558, ZeroOrOne, false, 0x0, NotRestricted, Some(813)),
    /*    3 */ element!(AafFormat, 2560, ZeroOrOne, false, 0x0, NotRestricted, Some(816)),
    /*    4 */ element!(AafNominalRate, 2561, ZeroOrOne, false, 0x0, NotRestricted, Some(817)),
    /*    5 */ element!(AbbrName, 4393, ZeroOrOne, false, 0x0, NotRestricted, Some(4216)),
    /*    6 */ element!(Abs, 3140, ZeroOrOne, false, 0x0, NotRestricted, Some(5768)),
    /*    7 */ element!(Absolute, 2229, ZeroOrOne, false, 0x0, NotRestricted, Some(1466)),
    /*    8 */ element!(Absolute, 5077, ZeroOrOne, false, 0x0, NotRestricted, Some(1466)),
    /*    9 */ element!(AbsoluteTolerance, 0, One, false, 0x0, NotRestricted, None),
    /*   10 */ element!(AbsolutelyScheduledTimings, 498, ZeroOrOne, false, 0x0, NotRestricted, Some(945)),
    /*   11 */ element!(AbsolutelyScheduledTimings, 2203, ZeroOrOne, false, 0x0, NotRestricted, Some(2432)),
    /*   12 */ element!(AbstractClassTailoring, 2, One, false, 0x0, NotRestricted, None),
    /*   13 */ element!(AcceptEncoding, 2408, ZeroOrOne, false, 0x0, NotRestricted, Some(3991)),
    /*   14 */ element!(AcceptVariableDa, 298, ZeroOrOne, false, 0x0, ClassicPlatform, Some(2766)),
    /*   15 */ element!(AcceptVariableSa, 298, ZeroOrOne, false, 0x0, ClassicPlatform, Some(2767)),
    /*   16 */ element!(AcceptanceField, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(84)),
    /*   17 */ element!(AcceptedCryptoCipherSuiteWithPskRef, 4826, One, false, 0x0, NotRestricted, None),
    /*   18 */ element!(AcceptedCryptoCipherSuiteWithPskRefs, 4827, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5183)),
    /*   19 */ element!(AcceptedRemoteCertificateRef, 2690, One, false, 0x0, NotRestricted, None),
    /*   20 */ element!(AcceptedRemoteCertificateRefs, 4828, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5182)),
    /*   21 */ element!(AcceptedStartupRange, 2642, ZeroOrOne, false, 0x0, NotRestricted, Some(1004)),
    /*   22 */ element!(AcceptsEncodings, 3703, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3439)),
    /*   23 */ element!(AccessControl, 9, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3610)),
    /*   24 */ element!(AccessCount, 10, One, false, 0x0, NotRestricted, None),
    /*   25 */ element!(AccessCountSet, 12, One, false, 0x0, NotRestricted, None),
    /*   26 */ element!(AccessCountSets, 3679, ZeroOrOne, false, 0x1FFF00, ClassicPlatform, Some(2389)),
    /*   27 */ element!(AccessCounts, 13, ZeroOrOne, false, 0x1C0000, NotRestricted, Some(440)),
    /*   28 */ element!(AccessDataRecordSize, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(5736)),
    /*   29 */ element!(AccessMode, 3265, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3562)),
    /*   30 */ element!(AccessPermissionRef, 1532, ZeroOrOne, false, 0x0, NotRestricted, Some(5215)),
    /*   31 */ element!(AccessPermissionRef, 1548, ZeroOrOne, false, 0x180000, NotRestricted, Some(5433)),
    /*   32 */ element!(AccessPermissionRef, 1548, ZeroOrOne, false, 0x0, NotRestricted, Some(5531)),
    /*   33 */ element!(AccessPermissionRef, 1548, ZeroOrOne, false, 0x180000, NotRestricted, Some(5532)),
    /*   34 */ element!(AccessPermissionRef, 1608, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(4973)),
    /*   35 */ element!(AccessPermissionValidity, 1127, ZeroOrOne, false, 0x0, NotRestricted, Some(3994)),
    /*   36 */ element!(AccessPointRef, 11, ZeroOrOne, false, 0x0, NotRestricted, Some(83)),
    /*   37 */ element!(AccessedDataPrototypeIref, 935, ZeroOrOne, false, 0x0, ClassicPlatform, Some(4697)),
    /*   38 */ element!(AccessedModeGroups, 406, ZeroOrOne, false, 0x1C0000, NotRestricted, Some(49)),
    /*   39 */ element!(AccessedParameter, 257, ZeroOrOne, false, 0x0, NotRestricted, Some(2166)),
    /*   40 */ element!(AccessedVariable, 260, ZeroOrOne, false, 0x0, NotRestricted, Some(4325)),
    /*   41 */ element!(AccessedVariableRef, 314, ZeroOrOne, false, 0x0, NotRestricted, Some(2829)),
    /*   42 */ element!(Accuracy, 3068, ZeroOrOne, false, 0x0, NotRestricted, Some(2659)),
    /*   43 */ element!(AccuracyExt, 3068, ZeroOrOne, false, 0x0, NotRestricted, Some(418)),
    /*   44 */ element!(AccuracyInt, 3068, ZeroOrOne, false, 0x0, NotRestricted, Some(419)),
    /*   45 */ element!(AcfBusPartRef, 2547, One, false, 0x0, NotRestricted, None),
    /*   46 */ element!(AcfBusPartRefs, 2548, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(2030)),
    /*   47 */ element!(AcfBusRef, 2550, One, false, 0x0, NotRestricted, None),
    /*   48 */ element!(AcfBusRefs, 2551, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(2031)),
    /*   49 */ element!(AcfMaxTransitTime, 2229, ZeroOrOne, false, 0x0, NotRestricted, Some(699)),
    /*   50 */ element!(AcfParts, 2562, ZeroOrOne, false, 0x180000, NotRestricted, Some(1647)),
    /*   51 */ element!(AcfTransportedBuss, 2567, ZeroOrOne, false, 0x180000, NotRestricted, Some(849)),
    /*   52 */ element!(AckRequest, 382, ZeroOrOne, false, 0x0, NotRestricted, Some(2297)),
    /*   53 */ element!(AckType, 2272, ZeroOrOne, false, 0x0, NotRestricted, Some(5913)),
    /*   54 */ element!(AckType, 4853, ZeroOrOne, false, 0x0, ClassicPlatform, Some(4886)),
    /*   55 */ element!(AclContext, 4393, One, false, 0x0, NotRestricted, None),
    /*   56 */ element!(AclContexts, 29, ZeroOrOne, false, 0x0, NotRestricted, Some(3989)),
    /*   57 */ element!(AclObjectClass, 3652, One, false, 0x0, NotRestricted, None),
    /*   58 */ element!(AclObjectClasss, 15, ZeroOrOne, false, 0x0, NotRestricted, Some(5793)),
    /*   59 */ element!(AclObjectRef, 30, One, false, 0x0, NotRestricted, None),
    /*   60 */ element!(AclObjectRefs, 31, ZeroOrOne, false, 0x0, NotRestricted, Some(4323)),
    /*   61 */ element!(AclObjectSet, 14, One, false, 0x0, NotRestricted, None),
    /*   62 */ element!(AclOperation, 26, One, false, 0x0, NotRestricted, None),
    /*   63 */ element!(AclOperationRef, 32, One, false, 0x0, NotRestricted, None),
    /*   64 */ element!(AclOperationRefs, 33, ZeroOrOne, false, 0x0, NotRestricted, Some(4324)),
    /*   65 */ element!(AclPermission, 28, One, false, 0x0, NotRestricted, None),
    /*   66 */ element!(AclRole, 36, One, false, 0x0, NotRestricted, None),
    /*   67 */ element!(AclRoleRef, 34, One, false, 0x0, NotRestricted, None),
    /*   68 */ element!(AclRoleRefs, 35, ZeroOrOne, false, 0x0, NotRestricted, Some(4341)),
    /*   69 */ element!(AclScope, 37, ZeroOrOne, false, 0x0, NotRestricted, Some(4688)),
    /*   70 */ element!(AclScope, 37, ZeroOrOne, false, 0x0, NotRestricted, Some(6049)),
    /*   71 */ element!(Action, 38, One, false, 0x0, NotRestricted, None),
    /*   72 */ element!(Action, 2150, ZeroOrOne, false, 0x0, NotRestricted, Some(86)),
    /*   73 */ element!(ActionItemLists, 4361, ZeroOrOne, false, 0x1C0000, AdaptivePlatform, Some(5552)),
    /*   74 */ element!(ActionItemRef, 4100, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5031)),
    /*   75 */ element!(ActionItems, 4350, ZeroOrOne, true, 0x0, AdaptivePlatform, Some(5553)),
    /*   76 */ element!(ActionList, 41, One, false, 0x0, NotRestricted, None),
    /*   77 */ element!(ActionListExecution, 44, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(606)),
    /*   78 */ element!(ActionListExecution, 3340, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(606)),
    /*   79 */ element!(ActionListItemRef, 42, One, false, 0x0, NotRestricted, None),
    /*   80 */ element!(ActionListItemRef, 3338, One, false, 0x0, NotRestricted, None),
    /*   81 */ element!(ActionListItemRefs, 43, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(1695)),
    /*   82 */ element!(ActionListItemRefs, 3339, ZeroOrOne, true, 0x0, AdaptivePlatform, Some(1695)),
    /*   83 */ element!(ActionLists, 39, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(310)),
    /*   84 */ element!(ActionLists, 3335, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(310)),
    /*   85 */ element!(ActionLists, 3394, ZeroOrOne, false, 0x8000, AdaptivePlatform, Some(310)),
    /*   86 */ element!(ActionPointOffset, 2642, ZeroOrOne, false, 0x0, NotRestricted, Some(3012)),
    /*   87 */ element!(ActionType, 154, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(581)),
    /*   88 */ element!(ActionType, 3392, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(582)),
    /*   89 */ element!(ActionType, 3412, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(582)),
    /*   90 */ element!(ActionType, 3543, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(580)),
    /*   91 */ element!(ActionType, 4219, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3654)),
    /*   92 */ element!(ActionType, 5066, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(583)),
    /*   93 */ element!(ActionType, 5068, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(583)),
    /*   94 */ element!(Actions, 40, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(309)),
    /*   95 */ element!(Actions, 3336, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(309)),
    /*   96 */ element!(Actions, 3395, ZeroOrOne, false, 0xFC00, AdaptivePlatform, Some(309)),
    /*   97 */ element!(ActivateAtStart, 298, ZeroOrOne, false, 0x0, NotRestricted, Some(6065)),
    /*   98 */ element!(Activation, 2992, ZeroOrOne, false, 0x0, NotRestricted, Some(1350)),
    /*   99 */ element!(Activation, 2992, ZeroOrOne, false, 0x0, NotRestricted, Some(2465)),
    /*  100 */ element!(ActivationAction, 4220, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3907)),
    /*  101 */ element!(ActivationPoints, 400, ZeroOrOne, false, 0x1C0000, ClassicPlatform, Some(87)),
    /*  102 */ element!(ActivationReasonRepresentationRef, 4, ZeroOrOne, false, 0x0, NotRestricted, Some(1238)),
    /*  103 */ element!(ActivationReasons, 2095, ZeroOrOne, false, 0x0, NotRestricted, Some(1237)),
    /*  104 */ element!(ActivationSwitch, 298, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(1220)),
    /*  105 */ element!(ActiveSupervisionRef, 4417, One, false, 0x0, NotRestricted, None),
    /*  106 */ element!(ActiveSupervisionRefs, 4418, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3057)),
    /*  107 */ element!(ActualEventRef, 1365, ZeroOrOne, false, 0x0, NotRestricted, Some(5688)),
    /*  108 */ element!(ActualEventRef, 1378, ZeroOrOne, false, 0x0, NotRestricted, Some(5687)),
    /*  109 */ element!(AdaptiveApplicationSwComponentType, 45, One, false, 0x0, NotRestricted, None),
    /*  110 */ element!(AdaptiveAutosarApplication, 47, One, false, 0x0, NotRestricted, None),
    /*  111 */ element!(AdaptiveFirewallModuleInstantiation, 50, One, false, 0x0, NotRestricted, None),
    /*  112 */ element!(AdaptiveFirewallToPortPrototypeMapping, 52, One, false, 0x0, NotRestricted, None),
    /*  113 */ element!(AdaptiveSwcInternalBehavior, 60, One, false, 0x0, NotRestricted, None),
    /*  114 */ element!(AddInfo5, 1803, ZeroOrOne, false, 0x0, NotRestricted, Some(3454)),
    /*  115 */ element!(AdditionalInformation, 4393, ZeroOrOne, false, 0x0, NotRestricted, Some(1774)),
    /*  116 */ element!(AdditionalInformation, 4393, ZeroOrOne, false, 0x0, NotRestricted, Some(2450)),
    /*  117 */ element!(AdditionalInformation, 5078, ZeroOrOne, false, 0x0, NotRestricted, Some(1774)),
    /*  118 */ element!(AdditionalInformation, 5078, ZeroOrOne, false, 0x0, NotRestricted, Some(2450)),
    /*  119 */ element!(AdditionalNativeTypeQualifier, 3077, ZeroOrOne, false, 0x0, NotRestricted, Some(4001)),
    /*  120 */ element!(Address, 62, ZeroOrOne, false, 0x0, ClassicPlatform, Some(4106)),
    /*  121 */ element!(Address, 62, ZeroOrOne, false, 0x0, ClassicPlatform, Some(4228)),
    /*  122 */ element!(Address, 2642, ZeroOrOne, false, 0x0, NotRestricted, Some(2927)),
    /*  123 */ element!(AddressClaimEnabled, 298, ZeroOrOne, false, 0x0, ClassicPlatform, Some(4264)),
    /*  124 */ element!(AddressConfigurationCapability, 2725, ZeroOrOne, false, 0x0, ClassicPlatform, Some(543)),
    /*  125 */ element!(AddressRangeLowerBound, 2697, ZeroOrOne, false, 0x0, NotRestricted, Some(1403)),
    /*  126 */ element!(AddressRangeLowerBound, 2698, ZeroOrOne, false, 0x0, NotRestricted, Some(1402)),
    /*  127 */ element!(AddressRangeUpperBound, 2697, ZeroOrOne, false, 0x0, NotRestricted, Some(5946)),
    /*  128 */ element!(AddressRangeUpperBound, 2698, ZeroOrOne, false, 0x0, NotRestricted, Some(5945)),
    /*  129 */ element!(AddressSemantics, 4184, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3545)),
    /*  130 */ element!(AddressingFormat, 512, ZeroOrOne, false, 0x0, ClassicPlatform, Some(458)),
    /*  131 */ element!(AdminData, 63, ZeroOrOne, false, 0x1C0000, NotRestricted, Some(5491)),
    /*  132 */ element!(AdminData, 63, ZeroOrOne, false, 0x1E0000, NotRestricted, Some(5491)),
    /*  133 */ element!(AdminData, 63, ZeroOrOne, false, 0x0, NotRestricted, Some(5492)),
    /*  134 */ element!(AdminData, 63, ZeroOrOne, false, 0x20000, NotRestricted, Some(5492)),
    /*  135 */ element!(AdminData, 63, ZeroOrOne, false, 0x40000, NotRestricted, Some(5492)),
    /*  136 */ element!(AdminData, 63, ZeroOrOne, false, 0x60000, NotRestricted, Some(5492)),
    /*  137 */ element!(AdminData, 63, ZeroOrOne, false, 0xC0000, NotRestricted, Some(5492)),
    /*  138 */ element!(AdminData, 63, ZeroOrOne, false, 0x100000, NotRestricted, Some(5492)),
    /*  139 */ element!(AdminData, 63, ZeroOrOne, false, 0x180000, NotRestricted, Some(5492)),
    /*  140 */ element!(AdminData, 63, ZeroOrOne, false, 0x1C0000, NotRestricted, Some(5492)),
    /*  141 */ element!(AdminData, 63, ZeroOrOne, false, 0x1E0000, NotRestricted, Some(5492)),
    /*  142 */ element!(AdminData, 63, ZeroOrOne, false, 0x180000, NotRestricted, Some(5493)),
    /*  143 */ element!(AdmitWithoutMessageId, 298, ZeroOrOne, false, 0x0, NotRestricted, Some(203)),
    /*  144 */ element!(Aes3DataTypeH, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(811)),
    /*  145 */ element!(Aes3DataTypeL, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(812)),
    /*  146 */ element!(AffectedApplication, 4393, ZeroOrOne, false, 0x0, NotRestricted, Some(4019)),
    /*  147 */ element!(AffectedBswModule, 4393, ZeroOrOne, false, 0x0, ClassicPlatform, Some(4018)),
    /*  148 */ element!(AffectedByControlDtcSetting, 298, ZeroOrOne, false, 0x0, NotRestricted, Some(3546)),
    /*  149 */ element!(AffectedFunctionalCluster, 4393, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(4020)),
    /*  150 */ element!(AffectedRef, 1868, One, false, 0x0, NotRestricted, None),
    /*  151 */ element!(AffectedRefs, 1869, ZeroOrOne, false, 0x0, ClassicPlatform, Some(1680)),
    /*  152 */ element!(AffectedStateIref, 2161, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5154)),
    /*  153 */ element!(AffectionKind, 1854, ZeroOrOne, false, 0x0, ClassicPlatform, Some(2623)),
    /*  154 */ element!(Age, 3068, ZeroOrOne, false, 0x0, NotRestricted, Some(1278)),
    /*  155 */ element!(AgeConstraint, 66, One, false, 0x0, NotRestricted, None),
    /*  156 */ element!(Aggregation, 3891, ZeroOrOne, false, 0x0, NotRestricted, Some(3329)),
    /*  157 */ element!(AggregationCondition, 68, One, false, 0x0, NotRestricted, None),
    /*  158 */ element!(AggregationRef, 69, ZeroOrOne, false, 0x0, NotRestricted, Some(2786)),
    /*  159 */ element!(AggregationTailoring, 70, One, false, 0x0, NotRestricted, None),
    /*  160 */ element!(AgingAllowed, 298, ZeroOrOne, false, 0x0, NotRestricted, Some(5592)),
    /*  161 */ element!(AgingAllowed, 298, ZeroOrOne, false, 0x0, NotRestricted, Some(5593)),
    /*  162 */ element!(AgingCycles, 1129, ZeroOrOne, false, 0x1FFFC0, NotRestricted, Some(5505)),
    /*  163 */ element!(AgingRef, 1651, ZeroOrOne, false, 0x180000, NotRestricted, Some(1972)),
    /*  164 */ element!(AgingRequiresTestedCycle, 298, ZeroOrOne, false, 0x0, NotRestricted, Some(759)),
    /*  165 */ element!(AgingRequiresTestedCycle, 298, ZeroOrOne, false, 0x0, NotRestricted, Some(760)),
    /*  166 */ element!(AhCipherSuiteName, 4393, One, false, 0x0, NotRestricted, None),
    /*  167 */ element!(AhCipherSuiteName, 4393, One, false, 0x0, NotRestricted, Some(76)),
    /*  168 */ element!(AhCipherSuiteNames, 2681, ZeroOrOne, false, 0x0, NotRestricted, Some(75)),
    /*  169 */ element!(AhCipherSuiteNames, 2688, ZeroOrOne, false, 0x0, NotRestricted, None),
    /*  170 */ element!(AlgorithmFamily, 835, ZeroOrOne, false, 0x0, NotRestricted, Some(4059)),
    /*  171 */ element!(AlgorithmFamily, 4393, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3931)),
    /*  172 */ element!(AlgorithmFamily, 4393, ZeroOrOne, false, 0x0, NotRestricted, Some(4055)),
    /*  173 */ element!(AlgorithmFamily, 4393, ZeroOrOne, false, 0x0, NotRestricted, Some(4057)),
    /*  174 */ element!(AlgorithmFamily, 4393, ZeroOrOne, false, 0x0, NotRestricted, Some(4058)),
    /*  175 */ element!(AlgorithmFamily, 4393, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(4101)),
    /*  176 */ element!(AlgorithmFamily, 4393, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(4102)),
    /*  177 */ element!(AlgorithmMode, 4393, ZeroOrOne, false, 0x0, NotRestricted, Some(4060)),
    /*  178 */ element!(AlgorithmMode, 4393, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(4103)),
    /*  179 */ element!(AlgorithmMode, 4393, ZeroOrOne, false, 0x0, NotRestricted, Some(4863)),
    /*  180 */ element!(AlgorithmSecondaryFamily, 4393, ZeroOrOne, false, 0x0, NotRestricted, Some(4062)),
    /*  181 */ element!(AliasEventRef, 1346, ZeroOrOne, false, 0x0, NotRestricted, Some(5690)),
    /*  182 */ element!(AliasEventRef, 1347, ZeroOrOne, false, 0x0, NotRestricted, Some(5689)),
    /*  183 */ element!(AliasNameAssignment, 71, One, false, 0x0, NotRestricted, None),
    /*  184 */ element!(AliasNameSet, 72, One, false, 0x0, NotRestricted, None),
    /*  185 */ element!(AliasNames, 73, ZeroOrOne, false, 0x1FFFFF, NotRestricted, Some(108)),
    /*  186 */ element!(Alignment, 74, ZeroOrOne, false, 0x0, NotRestricted, Some(2798)),
    /*  187 */ element!(Alignment, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(660)),
    /*  188 */ element!(Alignment, 3494, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(660)),
    /*  189 */ element!(Alignment, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(2299)),
    /*  190 */ element!(AliveCheckResponseTimeout, 2229, ZeroOrOne, false, 0x0, NotRestricted, Some(3769)),
    /*  191 */ element!(AliveReferenceCycle, 2229, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5874)),
    /*  192 */ element!(AliveSupervision, 75, One, false, 0x0, NotRestricted, None),
    /*  193 */ element!(AliveSupervisions, 2334, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(249)),
    /*  194 */ element!(AliveSupervisions, 2834, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(250)),
    /*  195 */ element!(AliveSupervisions, 4410, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(251)),
    /*  196 */ element!(AliveTimeout, 2229, ZeroOrOne, false, 0x0, ClassicPlatform, Some(2625)),
    /*  197 */ element!(AliveTimeout, 5077, ZeroOrOne, false, 0x0, NotRestricted, Some(2624)),
    /*  198 */ element!(AllChannelsRef, 2355, One, false, 0x0, NotRestricted, None),
    /*  199 */ element!(AllChannelsRefs, 1168, ZeroOrOne, false, 0x0, NotRestricted, Some(5254)),
    /*  200 */ element!(AllNmMessagesKeepAwake, 298, ZeroOrOne, false, 0x0, NotRestricted, Some(2460)),
    /*  201 */ element!(AllPhysicalChannels, 1170, ZeroOrOne, false, 0x0, NotRestricted, Some(5255)),
    /*  202 */ element!(AllPhysicalChannelsRef, 1169, One, false, 0x0, NotRestricted, None),
    /*  203 */ element!(AllocateShadowCopy, 298, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3793)),
    /*  204 */ element!(AllocateShadowCopy, 298, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3794)),
    /*  205 */ element!(Allocator, 77, One, false, 0x0, NotRestricted, None),
    /*  206 */ element!(AllocatorRef, 832, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5063)),
    /*  207 */ element!(AllocatorRef, 2593, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5392)),
    /*  208 */ element!(AllowContentTypeChange, 298, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3886)),
    /*  209 */ element!(AllowDynamicLSduLength, 298, ZeroOrOne, false, 0x0, NotRestricted, Some(116)),
    /*  210 */ element!(AllowHaltDueToClock, 298, ZeroOrOne, false, 0x0, NotRestricted, Some(204)),
    /*  211 */ element!(AllowMasterRateCorrection, 298, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(767)),
    /*  212 */ element!(AllowPassiveToActive, 2642, ZeroOrOne, false, 0x0, NotRestricted, Some(1615)),
    /*  213 */ element!(AllowProviderRateCorrection, 298, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(767)),
    /*  214 */ element!(AllowUnauthenticatedParticipants, 298, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(780)),
    /*  215 */ element!(AllowedIPv6ExtHeader, 3494, One, false, 0x0, NotRestricted, None),
    /*  216 */ element!(AllowedIPv6ExtHeaders, 2459, ZeroOrOne, false, 0x0, NotRestricted, Some(1173)),
    /*  217 */ element!(AllowedIPv6ExtHeadersRef, 4112, ZeroOrOne, false, 0x0, NotRestricted, Some(1922)),
    /*  218 */ element!(AllowedIPv6ExtHeadersRef, 4121, ZeroOrOne, false, 0x0, NotRestricted, Some(1922)),
    /*  219 */ element!(AllowedKeyslotUsage, 4393, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3602)),
    /*  220 */ element!(AllowedServiceConsumers, 715, ZeroOrOne, false, 0x180000, NotRestricted, Some(1587)),
    /*  221 */ element!(AllowedServiceProviders, 715, ZeroOrOne, false, 0x180000, NotRestricted, Some(1585)),
    /*  222 */ element!(AllowedTcpOption, 3494, One, false, 0x0, NotRestricted, None),
    /*  223 */ element!(AllowedTcpOptions, 4664, ZeroOrOne, false, 0x0, ClassicPlatform, Some(2668)),
    /*  224 */ element!(AllowedTcpOptionsRef, 4113, ZeroOrOne, false, 0x0, ClassicPlatform, Some(1923)),
    /*  225 */ element!(AllowedTcpOptionsRef, 4122, ZeroOrOne, false, 0x0, ClassicPlatform, Some(1923)),
    /*  226 */ element!(AlternativeName, 4393, ZeroOrOne, false, 0x0, NotRestricted, Some(120)),
    /*  227 */ element!(AnalyzedExecutionTime, 79, One, false, 0x0, NotRestricted, None),
    /*  228 */ element!(Annotation, 80, One, false, 0x0, NotRestricted, None),
    /*  229 */ element!(Annotation, 80, ZeroOrOne, false, 0x0, NotRestricted, Some(1657)),
    /*  230 */ element!(AnnotationOrigin, 4393, ZeroOrOne, false, 0x0, NotRestricted, Some(3943)),
    /*  231 */ element!(AnnotationOrigin, 5078, ZeroOrOne, false, 0x0, NotRestricted, Some(3943)),
    /*  232 */ element!(AnnotationText, 1803, ZeroOrOne, false, 0x0, NotRestricted, Some(4841)),
    /*  233 */ element!(Annotations, 1850, ZeroOrOne, false, 0x0, ClassicPlatform, Some(1752)),
    /*  234 */ element!(Annotations, 2499, ZeroOrOne, false, 0x0, NotRestricted, Some(1752)),
    /*  235 */ element!(Annotations, 2499, ZeroOrOne, false, 0x0, ClassicPlatform, Some(1753)),
    /*  236 */ element!(Annotations, 2499, ZeroOrOne, false, 0x0, NotRestricted, Some(3256)),
    /*  237 */ element!(Annotations, 2499, ZeroOrOne, false, 0x0, NotRestricted, Some(4909)),
    /*  238 */ element!(Anonymous, 298, ZeroOrOne, false, 0x0, NotRestricted, Some(3799)),
    /*  239 */ element!(Anonymous, 298, ZeroOrOne, false, 0x0, NotRestricted, Some(4267)),
    /*  240 */ element!(ApApplicationEndpoint, 85, One, false, 0x0, NotRestricted, None),
    /*  241 */ element!(ApApplicationEndpoints, 2020, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(252)),
    /*  242 */ element!(ApApplicationError, 87, One, false, 0x0, NotRestricted, None),
    /*  243 */ element!(ApApplicationErrorDomain, 88, One, false, 0x0, NotRestricted, None),
    /*  244 */ element!(ApApplicationErrorRef, 577, One, false, 0x0, NotRestricted, None),
    /*  245 */ element!(ApApplicationErrorRefs, 92, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5223)),
    /*  246 */ element!(ApApplicationErrorSet, 91, One, false, 0x0, NotRestricted, None),
    /*  247 */ element!(ApSomeipTransformationProps, 93, One, false, 0x0, NotRestricted, None),
    /*  248 */ element!(ApiPrinciple, 94, ZeroOrOne, false, 0x0, NotRestricted, Some(2455)),
    /*  249 */ element!(ApiPrinciple, 94, ZeroOrOne, false, 0x0, NotRestricted, Some(2456)),
    /*  250 */ element!(ApiServicePrefix, 475, ZeroOrOne, false, 0x0, ClassicPlatform, Some(1123)),
    /*  251 */ element!(ApmcBooleanParamDef, 95, One, false, 0x0, NotRestricted, None),
    /*  252 */ element!(ApmcChoiceContainerDef, 96, One, false, 0x0, NotRestricted, None),
    /*  253 */ element!(ApmcChoiceContainerReferenceDef, 98, One, false, 0x0, NotRestricted, None),
    /*  254 */ element!(ApmcContainerReferenceDef, 101, One, false, 0x0, NotRestricted, None),
    /*  255 */ element!(ApmcContainerReferenceValue, 102, One, false, 0x0, NotRestricted, None),
    /*  256 */ element!(ApmcContainerValue, 104, One, false, 0x0, NotRestricted, None),
    /*  257 */ element!(ApmcDefinitionCollection, 108, One, false, 0x0, NotRestricted, None),
    /*  258 */ element!(ApmcEnumerationLiteralDef, 111, One, false, 0x0, NotRestricted, None),
    /*  259 */ element!(ApmcEnumerationParamDef, 112, One, false, 0x0, NotRestricted, None),
    /*  260 */ element!(ApmcFloatParamDef, 114, One, false, 0x0, NotRestricted, None),
    /*  261 */ element!(ApmcForeignReferenceDef, 115, One, false, 0x0, NotRestricted, None),
    /*  262 */ element!(ApmcForeignReferenceValue, 116, One, false, 0x0, NotRestricted, None),
    /*  263 */ element!(ApmcFunctionalClusterDef, 118, One, false, 0x0, NotRestricted, None),
    /*  264 */ element!(ApmcFunctionalClusterValue, 120, One, false, 0x0, NotRestricted, None),
    /*  265 */ element!(ApmcInstanceReferenceDef, 122, One, false, 0x0, NotRestricted, None),
    /*  266 */ element!(ApmcInstanceReferenceValue, 123, One, false, 0x0, NotRestricted, None),
    /*  267 */ element!(ApmcIntegerParamDef, 124, One, false, 0x0, NotRestricted, None),
    /*  268 */ element!(ApmcNumericalParamValue, 125, One, false, 0x0, NotRestricted, None),
    /*  269 */ element!(ApmcParamConfContainerDef, 126, One, false, 0x0, NotRestricted, None),
    /*  270 */ element!(ApmcStringParamDef, 128, One, false, 0x0, NotRestricted, None),
    /*  271 */ element!(ApmcTextualParamValue, 129, One, false, 0x0, NotRestricted, None),
    /*  272 */ element!(ApmcUpstreamDocForeignReferenceDef, 130, One, false, 0x0, NotRestricted, None),
    /*  273 */ element!(ApmcUpstreamDocForeignReferenceValue, 131, One, false, 0x0, NotRestricted, None),
    /*  274 */ element!(ApmcUpstreamDocInstanceReferenceDef, 132, One, false, 0x0, NotRestricted, None),
    /*  275 */ element!(ApmcUpstreamDocInstanceReferenceValue, 133, One, false, 0x0, NotRestricted, None),
    /*  276 */ element!(ApmcUriForeignReferenceDef, 134, One, false, 0x0, NotRestricted, None),
    /*  277 */ element!(ApmcUriForeignReferenceValue, 135, One, false, 0x0, NotRestricted, None),
    /*  278 */ element!(ApmcUriInstanceReferenceDef, 136, One, false, 0x0, NotRestricted, None),
    /*  279 */ element!(ApmcUriInstanceReferenceValue, 137, One, false, 0x0, NotRestricted, None),
    /*  280 */ element!(ApmcValueCollection, 138, One, false, 0x0, NotRestricted, None),
    /*  281 */ element!(AppId, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(1017)),
    /*  282 */ element!(AppOsTaskProxyToEcuTaskProxyMapping, 142, One, false, 0x0, NotRestricted, None),
    /*  283 */ element!(AppOsTaskProxyToEcuTaskProxyMappings, 4617, ZeroOrOne, false, 0x0, ClassicPlatform, Some(1436)),
    /*  284 */ element!(AppTaskProxyRef, 1828, ZeroOrOne, false, 0x0, ClassicPlatform, Some(1969)),
    /*  285 */ element!(ApplConstantRef, 701, ZeroOrOne, false, 0x0, NotRestricted, Some(21)),
    /*  286 */ element!(ApplInitValue, 2477, ZeroOrOne, false, 0x0, NotRestricted, Some(4794)),
    /*  287 */ element!(ApplWatchdogLimit, 2642, ZeroOrOne, false, 0x0, NotRestricted, Some(2686)),
    /*  288 */ element!(ApplicabilityInfo, 143, One, false, 0x0, NotRestricted, None),
    /*  289 */ element!(ApplicabilityInfoSet, 145, One, false, 0x0, NotRestricted, None),
    /*  290 */ element!(ApplicabilityInfos, 146, ZeroOrOne, false, 0x0, NotRestricted, Some(5422)),
    /*  291 */ element!(ApplicationActionItem, 152, One, false, 0x0, NotRestricted, None),
    /*  292 */ element!(ApplicationArrayDataType, 155, One, false, 0x0, NotRestricted, None),
    /*  293 */ element!(ApplicationArrayElementRef, 2627, ZeroOrOne, false, 0x0, NotRestricted, Some(1953)),
    /*  294 */ element!(ApplicationAssocMapDataType, 158, One, false, 0x0, NotRestricted, None),
    /*  295 */ element!(ApplicationAssocMapElementValueSpecification, 160, One, false, 0x0, NotRestricted, None),
    /*  296 */ element!(ApplicationAssocMapValueSpecification, 162, One, false, 0x0, NotRestricted, None),
    /*  297 */ element!(ApplicationCompositeDataTypeSubElementRef, 164, One, false, 0x0, NotRestricted, None),
    /*  298 */ element!(ApplicationCompositeElementIref, 165, ZeroOrOne, false, 0x0, NotRestricted, Some(5699)),
    /*  299 */ element!(ApplicationContextRef, 1715, One, false, 0x0, NotRestricted, None),
    /*  300 */ element!(ApplicationContextRefs, 1716, ZeroOrOne, false, 0x0, ClassicPlatform, Some(2153)),
    /*  301 */ element!(ApplicationDataTypeRef, 996, ZeroOrOne, false, 0x0, NotRestricted, Some(4779)),
    /*  302 */ element!(ApplicationDataTypeRef, 3166, ZeroOrOne, false, 0x0, NotRestricted, Some(6036)),
    /*  303 */ element!(ApplicationDeferredDataType, 169, One, false, 0x0, NotRestricted, None),
    /*  304 */ element!(ApplicationDescription, 4393, ZeroOrOne, false, 0x0, ClassicPlatform, Some(3524)),
    /*  305 */ element!(ApplicationDescription, 4393, ZeroOrOne, false, 0x0, NotRestricted, Some(3524)),
    /*  306 */ element!(ApplicationEndpoint, 170, ZeroOrOne, false, 0x0, NotRestricted, Some(158)),
    /*  307 */ element!(ApplicationEndpointRef, 175, ZeroOrOne, false, 0x0, NotRestricted, None),
    /*  308 */ element!(ApplicationEndpointRef, 2071, ZeroOrOne, false, 0x0, NotRestricted, Some(592)),
    /*  309 */ element!(ApplicationEndpointRef, 2071, ZeroOrOne, false, 0x0, NotRestricted, Some(632)),
    /*  310 */ element!(ApplicationEndpointRefConditional, 174, One, false, 0x0, NotRestricted, None),
    /*  311 */ element!(ApplicationEntry, 178, One, false, 0x0, NotRestricted, None),
    /*  312 */ element!(ApplicationError, 180, One, false, 0x0, NotRestricted, None),
    /*  313 */ element!(ApplicationError, 183, ZeroOrOne, false, 0x0, NotRestricted, Some(1286)),
    /*  314 */ element!(ApplicationId, 4393, ZeroOrOne, false, 0x0, ClassicPlatform, Some(3930)),
    /*  315 */ element!(ApplicationId, 4393, ZeroOrOne, false, 0x0, NotRestricted, Some(3930)),
    /*  316 */ element!(ApplicationInterface, 184, One, false, 0x0, NotRestricted, None),
    /*  317 */ element!(ApplicationModeIref, 3031, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5329)),
    /*  318 */ element!(ApplicationModeMachine, 2998, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(2384)),
    /*  319 */ element!(ApplicationModeRequestPhmActionItem, 188, One, false, 0x0, NotRestricted, None),
    /*  320 */ element!(ApplicationPartition, 189, One, false, 0x0, NotRestricted, None),
    /*  321 */ element!(ApplicationPartitionRef, 802, ZeroOrOne, false, 0x0, ClassicPlatform, Some(161)),
    /*  322 */ element!(ApplicationPartitionRef, 809, One, false, 0x0, NotRestricted, None),
    /*  323 */ element!(ApplicationPartitionRef, 4549, One, false, 0x0, NotRestricted, None),
    /*  324 */ element!(ApplicationPartitionRef, 4549, ZeroOrOne, false, 0x0, ClassicPlatform, Some(1954)),
    /*  325 */ element!(ApplicationPartitionRefs, 191, ZeroOrOne, false, 0x0, ClassicPlatform, Some(1798)),
    /*  326 */ element!(ApplicationPartitionRefs, 810, ZeroOrOne, false, 0x0, ClassicPlatform, Some(253)),
    /*  327 */ element!(ApplicationPartitionToEcuPartitionMapping, 190, One, false, 0x0, NotRestricted, None),
    /*  328 */ element!(ApplicationPartitionToEcuPartitionMappings, 4618, ZeroOrOne, false, 0x1FFF00, ClassicPlatform, Some(1422)),
    /*  329 */ element!(ApplicationPrimitiveDataType, 193, One, false, 0x0, NotRestricted, None),
    /*  330 */ element!(ApplicationRecordDataType, 194, One, false, 0x0, NotRestricted, None),
    /*  331 */ element!(ApplicationRecordElement, 196, One, false, 0x0, NotRestricted, None),
    /*  332 */ element!(ApplicationRecordElementRef, 3946, ZeroOrOne, false, 0x0, NotRestricted, Some(1900)),
    /*  333 */ element!(ApplicationRecordElementRef, 3946, ZeroOrOne, false, 0x0, NotRestricted, Some(1955)),
    /*  334 */ element!(ApplicationRuleBasedValueSpecification, 201, One, false, 0x0, NotRestricted, None),
    /*  335 */ element!(ApplicationSwComponentType, 203, One, false, 0x0, NotRestricted, None),
    /*  336 */ element!(ApplicationTypeRef, 3734, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3208)),
    /*  337 */ element!(ApplicationTypeTref, 3735, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3208)),
    /*  338 */ element!(ApplicationTypeTref, 3737, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3209)),
    /*  339 */ element!(ApplicationValueSpecification, 204, One, false, 0x0, NotRestricted, None),
    /*  340 */ element!(Applications, 1713, ZeroOrOne, false, 0x1E0000, NotRestricted, Some(160)),
    /*  341 */ element!(AppliedStandard, 206, One, false, 0x0, NotRestricted, None),
    /*  342 */ element!(AppliedStandards, 147, ZeroOrOne, false, 0x0, NotRestricted, Some(4349)),
    /*  343 */ element!(AppliesTo, 4326, One, false, 0x0, NotRestricted, None),
    /*  344 */ element!(AppliesTo, 4326, ZeroOrOne, false, 0x0, NotRestricted, Some(4159)),
    /*  345 */ element!(AppliesToDependencies, 4396, ZeroOrOne, false, 0x0, NotRestricted, Some(4160)),
    /*  346 */ element!(ApprovalRequired, 298, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3584)),
    /*  347 */ element!(ApprovalStatus, 4393, ZeroOrOne, false, 0x0, NotRestricted, Some(594)),
    /*  348 */ element!(ApprovalStatus, 5078, ZeroOrOne, false, 0x0, NotRestricted, Some(593)),
    /*  349 */ element!(ArPackage, 207, One, false, 0x0, NotRestricted, None),
    /*  350 */ element!(ArPackages, 251, ZeroOrOne, false, 0x1FFFFF, NotRestricted, Some(4842)),
    /*  351 */ element!(ArPackages, 251, ZeroOrOne, false, 0x1FFFFF, NotRestricted, Some(5378)),
    /*  352 */ element!(ArParameter, 257, ZeroOrOne, false, 0x0, NotRestricted, Some(5338)),
    /*  353 */ element!(ArReleaseVersion, 3721, ZeroOrOne, false, 0x0, ClassicPlatform, Some(5983)),
    /*  354 */ element!(ArReleaseVersion, 3721, ZeroOrOne, false, 0x0, NotRestricted, Some(5984)),
    /*  355 */ element!(ArTypedPerInstanceMemoryRef, 419, ZeroOrOne, false, 0x0, NotRestricted, Some(2788)),
    /*  356 */ element!(ArTypedPerInstanceMemorys, 346, ZeroOrOne, false, 0x1FFF00, NotRestricted, Some(496)),
    /*  357 */ element!(ArTypedPerInstanceMemorys, 3156, ZeroOrOne, false, 0x1FFF80, NotRestricted, Some(497)),
    /*  358 */ element!(ArbitraryAddressCapable, 298, ZeroOrOne, false, 0x0, ClassicPlatform, Some(163)),
    /*  359 */ element!(ArbitraryEventTriggering, 217, One, false, 0x0, NotRestricted, None),
    /*  360 */ element!(Arbitration, 219, One, false, 0x0, NotRestricted, None),
    /*  361 */ element!(Arbitrations, 3396, ZeroOrOne, false, 0x7C00, AdaptivePlatform, Some(254)),
    /*  362 */ element!(Area, 222, Any, false, 0x0, NotRestricted, Some(4394)),
    /*  363 */ element!(Argument, 4393, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5417)),
    /*  364 */ element!(ArgumentDataPrototype, 223, One, false, 0x0, NotRestricted, None),
    /*  365 */ element!(ArgumentMappings, 575, ZeroOrOne, false, 0x180000, NotRestricted, Some(637)),
    /*  366 */ element!(ArgumentRef, 2671, ZeroOrOne, false, 0x0, NotRestricted, Some(1974)),
    /*  367 */ element!(ArgumentRef, 2671, ZeroOrOne, false, 0x0, NotRestricted, Some(1975)),
    /*  368 */ element!(ArgumentRef, 2671, ZeroOrOne, false, 0x0, NotRestricted, Some(2181)),
    /*  369 */ element!(ArgumentRef, 4710, One, false, 0x0, NotRestricted, Some(4745)),
    /*  370 */ element!(Arguments, 409, ZeroOrOne, true, 0x1C0000, ClassicPlatform, Some(129)),
    /*  371 */ element!(Arguments, 570, ZeroOrOne, true, 0x1C0000, NotRestricted, Some(130)),
    /*  372 */ element!(Arguments, 668, ZeroOrOne, true, 0x0, NotRestricted, Some(5555)),
    /*  373 */ element!(Arguments, 3688, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(2423)),
    /*  374 */ element!(Arguments, 3814, ZeroOrOne, true, 0x0, NotRestricted, Some(5615)),
    /*  375 */ element!(Arguments, 4708, ZeroOrOne, false, 0x0, NotRestricted, Some(141)),
    /*  376 */ element!(Argumentss, 3807, ZeroOrOne, false, 0xC0000, NotRestricted, Some(5511)),
    /*  377 */ element!(ArpProps, 2700, ZeroOrOne, false, 0x0, NotRestricted, Some(395)),
    /*  378 */ element!(ArrayElementMappings, 558, ZeroOrOne, false, 0x0, NotRestricted, Some(939)),
    /*  379 */ element!(ArrayElementMappings, 3944, ZeroOrOne, false, 0x0, NotRestricted, Some(940)),
    /*  380 */ element!(ArrayElementRef, 2628, ZeroOrOne, false, 0x0, NotRestricted, Some(1976)),
    /*  381 */ element!(ArrayImplPolicy, 226, ZeroOrOne, false, 0x0, NotRestricted, Some(3572)),
    /*  382 */ element!(ArraySize, 2231, ZeroOrOne, false, 0x0, NotRestricted, Some(2873)),
    /*  383 */ element!(ArraySize, 2231, ZeroOrOne, false, 0x0, NotRestricted, Some(3529)),
    /*  384 */ element!(ArraySize, 2231, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3529)),
    /*  385 */ element!(ArraySize, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(2872)),
    /*  386 */ element!(ArraySize, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(3955)),
    /*  387 */ element!(ArraySizeHandling, 227, ZeroOrOne, false, 0x0, NotRestricted, Some(3193)),
    /*  388 */ element!(ArraySizeHandling, 227, ZeroOrOne, false, 0x0, NotRestricted, Some(3194)),
    /*  389 */ element!(ArraySizeSemantics, 228, ZeroOrOne, false, 0x0, NotRestricted, Some(3563)),
    /*  390 */ element!(ArraySizeSemantics, 228, ZeroOrOne, false, 0x0, NotRestricted, Some(3574)),
    /*  391 */ element!(ArraySizeSemantics, 228, ZeroOrOne, false, 0x0, NotRestricted, Some(3579)),
    /*  392 */ element!(ArrayValueSpecification, 229, One, false, 0x0, NotRestricted, None),
    /*  393 */ element!(ArtifactChecksum, 230, One, false, 0x0, NotRestricted, None),
    /*  394 */ element!(ArtifactChecksumRef, 232, One, false, 0x0, NotRestricted, None),
    /*  395 */ element!(ArtifactChecksumRefs, 233, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5093)),
    /*  396 */ element!(ArtifactChecksumToCryptoProviderMapping, 231, One, false, 0x0, NotRestricted, None),
    /*  397 */ element!(ArtifactChecksums, 4141, ZeroOrOne, false, 0x1E0000, AdaptivePlatform, Some(3265)),
    /*  398 */ element!(ArtifactDescriptor, 255, ZeroOrOne, false, 0x0, NotRestricted, Some(3134)),
    /*  399 */ element!(ArtifactDescriptors, 596, ZeroOrOne, false, 0x0, NotRestricted, Some(2270)),
    /*  400 */ element!(ArtifactLocator, 235, One, false, 0x0, NotRestricted, None),
    /*  401 */ element!(ArtifactLocator, 235, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3948)),
    /*  402 */ element!(ArtifactLocators, 4142, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3330)),
    /*  403 */ element!(AssemblySwConnector, 237, One, false, 0x0, NotRestricted, None),
    /*  404 */ element!(Assertions, 2246, ZeroOrOne, false, 0x0, NotRestricted, Some(481)),
    /*  405 */ element!(AssignFrameId, 238, One, false, 0x0, NotRestricted, None),
    /*  406 */ element!(AssignFrameIdRange, 239, One, false, 0x0, NotRestricted, None),
    /*  407 */ element!(AssignNad, 241, One, false, 0x0, NotRestricted, None),
    /*  408 */ element!(AssignNad, 298, ZeroOrOne, false, 0x0, ClassicPlatform, Some(3908)),
    /*  409 */ element!(AssignedControllerRef, 2791, ZeroOrOne, false, 0x0, ClassicPlatform, Some(2723)),
    /*  410 */ element!(AssignedDataTypes, 3982, ZeroOrOne, false, 0x1C0000, NotRestricted, Some(4826)),
    /*  411 */ element!(AssignedDatas, 426, ZeroOrOne, false, 0x1C0000, NotRestricted, Some(675)),
    /*  412 */ element!(AssignedDatas, 4536, ZeroOrOne, false, 0x1C0000, NotRestricted, Some(676)),
    /*  413 */ element!(AssignedEntryRef, 3723, ZeroOrOne, false, 0x0, ClassicPlatform, Some(2791)),
    /*  414 */ element!(AssignedEntryRoles, 427, ZeroOrOne, false, 0x1FFFE0, NotRestricted, Some(674)),
    /*  415 */ element!(AssignedFrameTriggeringRef, 179, ZeroOrOne, false, 0x0, ClassicPlatform, Some(2895)),
    /*  416 */ element!(AssignedLinSlaveConfigRef, 2792, ZeroOrOne, false, 0x0, ClassicPlatform, Some(2722)),
    /*  417 */ element!(AssignedPorts, 4537, ZeroOrOne, false, 0x1FFFE0, NotRestricted, Some(677)),
    /*  418 */ element!(AssignedTrafficClass, 3494, One, false, 0x0, NotRestricted, None),
    /*  419 */ element!(AssignedTrafficClasss, 762, ZeroOrOne, false, 0x0, NotRestricted, Some(492)),
    /*  420 */ element!(AssignmentPriority, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(1763)),
    /*  421 */ element!(AssociatedComIPduGroupRef, 1820, One, false, 0x0, NotRestricted, None),
    /*  422 */ element!(AssociatedComIPduGroupRefs, 1821, ZeroOrOne, false, 0x0, ClassicPlatform, Some(6010)),
    /*  423 */ element!(AssociatedConsumedProvidedServiceInstanceGroups, 3421, ZeroOrOne, false, 0x1C0000, NotRestricted, Some(6009)),
    /*  424 */ element!(AssociatedCrossSwClusterComRtePluginRef, 804, ZeroOrOne, false, 0x0, ClassicPlatform, Some(3457)),
    /*  425 */ element!(AssociatedEventIdentification, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(4142)),
    /*  426 */ element!(AssociatedPdurIPduGroupRef, 1822, One, false, 0x0, NotRestricted, None),
    /*  427 */ element!(AssociatedPdurIPduGroupRefs, 1823, ZeroOrOne, false, 0x0, NotRestricted, Some(6011)),
    /*  428 */ element!(AssociatedRtePluginRef, 3798, ZeroOrOne, false, 0x0, ClassicPlatform, Some(3458)),
    /*  429 */ element!(AssumedCurrentStateIref, 2161, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(4966)),
    /*  430 */ element!(AsynchronousServerCallPoint, 242, One, false, 0x0, NotRestricted, None),
    /*  431 */ element!(AsynchronousServerCallPointRef, 244, ZeroOrOne, false, 0x0, ClassicPlatform, Some(3063)),
    /*  432 */ element!(AsynchronousServerCallPointRef, 302, ZeroOrOne, false, 0x0, ClassicPlatform, Some(2811)),
    /*  433 */ element!(AsynchronousServerCallResultPoint, 243, One, false, 0x0, NotRestricted, None),
    /*  434 */ element!(AsynchronousServerCallResultPoints, 3815, ZeroOrOne, false, 0x1FFF00, ClassicPlatform, Some(3115)),
    /*  435 */ element!(AsynchronousServerCallReturnsEvent, 245, One, false, 0x0, NotRestricted, None),
    /*  436 */ element!(AsynchronousTrafficShaperRef, 4570, ZeroOrOne, false, 0x0, ClassicPlatform, Some(2033)),
    /*  437 */ element!(AttributeDefs, 2239, ZeroOrOne, false, 0x0, NotRestricted, Some(4309)),
    /*  438 */ element!(AttributeName, 4393, ZeroOrOne, false, 0x0, NotRestricted, Some(4679)),
    /*  439 */ element!(AttributeRef, 2235, One, false, 0x0, NotRestricted, Some(137)),
    /*  440 */ element!(AttributeRef, 3514, ZeroOrOne, false, 0x0, NotRestricted, Some(3034)),
    /*  441 */ element!(AttributeTailorings, 539, ZeroOrOne, false, 0x0, NotRestricted, Some(2671)),
    /*  442 */ element!(AttributeValues, 2261, ZeroOrOne, false, 0x0, NotRestricted, Some(4307)),
    /*  443 */ element!(Attributes, 185, ZeroOrOne, false, 0x1C0000, NotRestricted, Some(5730)),
    /*  444 */ element!(Attributes, 3844, ZeroOrOne, true, 0x0, NotRestricted, Some(855)),
    /*  445 */ element!(Audience, 1130, One, false, 0x0, NotRestricted, None),
    /*  446 */ element!(Audiences, 1148, ZeroOrOne, false, 0x0, NotRestricted, Some(5802)),
    /*  447 */ element!(AuthAlgorithm, 4393, ZeroOrOne, false, 0x0, NotRestricted, Some(3660)),
    /*  448 */ element!(AuthAlgorithm, 4393, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3660)),
    /*  449 */ element!(AuthDataFreshnessLength, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(3690)),
    /*  450 */ element!(AuthDataFreshnessStartPosition, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(5841)),
    /*  451 */ element!(AuthInfoTxLength, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(3691)),
    /*  452 */ element!(AuthInfoTxLength, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(3692)),
    /*  453 */ element!(AuthRoleRef, 1133, One, false, 0x0, NotRestricted, None),
    /*  454 */ element!(AuthRoleRefs, 1415, ZeroOrOne, false, 0x180000, NotRestricted, Some(4985)),
    /*  455 */ element!(AuthenticConnectionPropss, 2676, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(796)),
    /*  456 */ element!(AuthenticationBuildAttempts, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(3657)),
    /*  457 */ element!(AuthenticationBuildAttempts, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(4242)),
    /*  458 */ element!(AuthenticationClassRef, 1142, ZeroOrOne, false, 0x0, NotRestricted, Some(5579)),
    /*  459 */ element!(AuthenticationEnabled, 1132, ZeroOrOne, false, 0x100000, NotRestricted, Some(2867)),
    /*  460 */ element!(AuthenticationEnabled, 1132, ZeroOrOne, false, 0x180000, NotRestricted, Some(2867)),
    /*  461 */ element!(AuthenticationPropsRef, 3887, ZeroOrOne, false, 0x0, NotRestricted, Some(1992)),
    /*  462 */ element!(AuthenticationPropss, 3883, ZeroOrOne, false, 0x0, NotRestricted, Some(184)),
    /*  463 */ element!(AuthenticationRef, 2540, ZeroOrOne, false, 0x0, ClassicPlatform, Some(4964)),
    /*  464 */ element!(AuthenticationRef, 3868, ZeroOrOne, false, 0x0, NotRestricted, Some(4945)),
    /*  465 */ element!(AuthenticationRef, 4839, ZeroOrOne, false, 0x0, NotRestricted, Some(5068)),
    /*  466 */ element!(AuthenticationRef, 4839, ZeroOrOne, false, 0x0, NotRestricted, Some(5108)),
    /*  467 */ element!(AuthenticationRetries, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(3655)),
    /*  468 */ element!(AuthenticationRoleRef, 1121, One, false, 0x0, NotRestricted, None),
    /*  469 */ element!(AuthenticationRoleRef, 1121, ZeroOrOne, false, 0x0, NotRestricted, Some(5089)),
    /*  470 */ element!(AuthenticationRoleRef, 1133, One, false, 0x0, NotRestricted, None),
    /*  471 */ element!(AuthenticationRoleRefs, 1122, ZeroOrOne, false, 0x180000, NotRestricted, Some(5089)),
    /*  472 */ element!(AuthenticationRoleRefs, 1134, ZeroOrOne, false, 0x0, NotRestricted, Some(5088)),
    /*  473 */ element!(AuthenticationTimeout, 2229, ZeroOrOne, false, 0x0, NotRestricted, Some(3764)),
    /*  474 */ element!(AuthenticationTimeout, 2229, ZeroOrOne, false, 0x0, NotRestricted, Some(3768)),
    /*  475 */ element!(AuthenticationVerifyAttempts, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(3656)),
    /*  476 */ element!(AutoAvailable, 298, ZeroOrOne, false, 0x0, NotRestricted, Some(542)),
    /*  477 */ element!(AutoCollect, 249, ZeroOrOne, false, 0x0, NotRestricted, Some(4054)),
    /*  478 */ element!(AutoIpProps, 2701, ZeroOrOne, false, 0x0, NotRestricted, Some(389)),
    /*  479 */ element!(AutoRequire, 298, ZeroOrOne, false, 0x0, NotRestricted, Some(540)),
    /*  480 */ element!(AutoRequire, 298, ZeroOrOne, false, 0x0, NotRestricted, Some(541)),
    /*  481 */ element!(AutoStart, 298, ZeroOrOne, false, 0x0, NotRestricted, Some(3609)),
    /*  482 */ element!(AutomaticEnd, 298, ZeroOrOne, false, 0x0, NotRestricted, Some(1225)),
    /*  483 */ element!(AutosarConnector, 4106, ZeroOrOne, false, 0x0, NotRestricted, Some(3984)),
    /*  484 */ element!(AutosarDataTypeRef, 254, ZeroOrOne, false, 0x0, NotRestricted, None),
    /*  485 */ element!(AutosarDataTypeRefConditional, 253, One, false, 0x0, NotRestricted, None),
    /*  486 */ element!(AutosarEngineeringObject, 255, One, false, 0x0, NotRestricted, None),
    /*  487 */ element!(AutosarOperationArgumentInstance, 256, One, false, 0x0, NotRestricted, None),
    /*  488 */ element!(AutosarParameterIref, 3221, ZeroOrOne, false, 0x0, NotRestricted, Some(4693)),
    /*  489 */ element!(AutosarVariable, 260, ZeroOrOne, false, 0x0, NotRestricted, Some(5678)),
    /*  490 */ element!(AutosarVariableInImplDatatype, 215, ZeroOrOne, false, 0x0, NotRestricted, Some(4850)),
    /*  491 */ element!(AutosarVariableInstance, 259, One, false, 0x0, NotRestricted, None),
    /*  492 */ element!(AutosarVariableIref, 5021, ZeroOrOne, false, 0x0, NotRestricted, Some(5296)),
    /*  493 */ element!(AuxiliaryFieldDefinitions, 278, ZeroOrOne, false, 0x0, ClassicPlatform, Some(3297)),
    /*  494 */ element!(AuxiliaryFields, 279, ZeroOrOne, false, 0x0, ClassicPlatform, Some(3298)),
    /*  495 */ element!(AverageMemoryConsumption, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(2806)),
    /*  496 */ element!(AverageMemoryConsumption, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(2807)),
    /*  497 */ element!(BackgroundEvent, 262, One, false, 0x0, NotRestricted, None),
    /*  498 */ element!(BandwidthLimitation, 298, ZeroOrOne, false, 0x0, ClassicPlatform, Some(2616)),
    /*  499 */ element!(BaseCompositionRef, 2114, ZeroOrOne, false, 0x0, ClassicPlatform, Some(2526)),
    /*  500 */ element!(BaseCycle, 2642, ZeroOrOne, false, 0x0, NotRestricted, Some(1010)),
    /*  501 */ element!(BaseCycle, 2642, ZeroOrOne, false, 0x0, NotRestricted, Some(2890)),
    /*  502 */ element!(BaseFrequency, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(227)),
    /*  503 */ element!(BaseIsThisPackage, 298, ZeroOrOne, false, 0x0, NotRestricted, Some(4687)),
    /*  504 */ element!(BaseRef, 2114, ZeroOrOne, false, 0x0, NotRestricted, None),
    /*  505 */ element!(BaseRef, 3179, ZeroOrOne, false, 0x0, NotRestricted, None),
    /*  506 */ element!(BaseRef, 4542, ZeroOrOne, false, 0x0, NotRestricted, None),
    /*  507 */ element!(BaseRef, 4542, ZeroOrOne, false, 0x0, NotRestricted, Some(2661)),
    /*  508 */ element!(BaseReferenceRef, 3162, ZeroOrOne, false, 0x0, NotRestricted, Some(2271)),
    /*  509 */ element!(BaseTypeEncoding, 4393, ZeroOrOne, false, 0x0, NotRestricted, Some(5824)),
    /*  510 */ element!(BaseTypeEncoding, 5078, ZeroOrOne, false, 0x0, NotRestricted, Some(5823)),
    /*  511 */ element!(BaseTypeRef, 4441, ZeroOrOne, false, 0x0, NotRestricted, Some(190)),
    /*  512 */ element!(BaseTypeRef, 4441, ZeroOrOne, false, 0x0, NotRestricted, Some(2758)),
    /*  513 */ element!(BaseTypeRef, 4441, ZeroOrOne, false, 0x0, NotRestricted, Some(3459)),
    /*  514 */ element!(BaseTypeRef, 4504, ZeroOrOne, false, 0x0, NotRestricted, Some(4771)),
    /*  515 */ element!(BaseTypeSize, 2642, ZeroOrOne, false, 0x0, NotRestricted, Some(887)),
    /*  516 */ element!(BaseTypeSize, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(887)),
    /*  517 */ element!(BasicCycleLength, 2642, ZeroOrOne, false, 0x0, NotRestricted, Some(1355)),
    /*  518 */ element!(Baudrate, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(235)),
    /*  519 */ element!(Behavior, 1190, ZeroOrOne, false, 0x0, NotRestricted, Some(192)),
    /*  520 */ element!(BehaviorRef, 412, ZeroOrOne, false, 0x0, ClassicPlatform, Some(2809)),
    /*  521 */ element!(BehaviorRef, 412, ZeroOrOne, false, 0x0, ClassicPlatform, Some(4312)),
    /*  522 */ element!(BehaviorRef, 4520, ZeroOrOne, false, 0x0, ClassicPlatform, Some(2917)),
    /*  523 */ element!(BehaviorRef, 4546, ZeroOrOne, false, 0x0, ClassicPlatform, Some(4316)),
    /*  524 */ element!(BestCaseExecutionTime, 3068, ZeroOrOne, false, 0x0, NotRestricted, Some(2810)),
    /*  525 */ element!(Bgcolor, 4393, ZeroOrOne, false, 0x0, NotRestricted, Some(3993)),
    /*  526 */ element!(BinaryManifestItem, 269, One, false, 0x0, NotRestricted, None),
    /*  527 */ element!(BinaryManifestItemDefinition, 270, One, false, 0x0, NotRestricted, None),
    /*  528 */ element!(BinaryManifestItemNumericalValue, 271, One, false, 0x0, NotRestricted, None),
    /*  529 */ element!(BinaryManifestItemPointerValue, 272, One, false, 0x0, NotRestricted, None),
    /*  530 */ element!(BinaryManifestMetaDataField, 274, One, false, 0x0, NotRestricted, None),
    /*  531 */ element!(BinaryManifestProvideResource, 275, One, false, 0x0, NotRestricted, None),
    /*  532 */ element!(BinaryManifestRequireResource, 276, One, false, 0x0, NotRestricted, None),
    /*  533 */ element!(BinaryManifestResourceDefinition, 277, One, false, 0x0, NotRestricted, None),
    /*  534 */ element!(Bit, 2229, ZeroOrOne, false, 0x0, NotRestricted, Some(1594)),
    /*  535 */ element!(Bit, 5077, ZeroOrOne, false, 0x0, NotRestricted, Some(1594)),
    /*  536 */ element!(BitNumber, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(4111)),
    /*  537 */ element!(BitOffset, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(5523)),
    /*  538 */ element!(BitPosition, 2642, ZeroOrOne, false, 0x0, NotRestricted, Some(1232)),
    /*  539 */ element!(BitPosition, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(3498)),
    /*  540 */ element!(BitPosition, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(3505)),
    /*  541 */ element!(BitfieldTextTableMaskFirst, 2231, ZeroOrOne, false, 0x0, NotRestricted, Some(3534)),
    /*  542 */ element!(BitfieldTextTableMaskNvBlockDescriptor, 3494, ZeroOrOne, false, 0x0, ClassicPlatform, Some(3932)),
    /*  543 */ element!(BitfieldTextTableMaskPortPrototype, 3494, ZeroOrOne, false, 0x0, ClassicPlatform, Some(3933)),
    /*  544 */ element!(BitfieldTextTableMaskSecond, 2231, ZeroOrOne, false, 0x0, NotRestricted, Some(3535)),
    /*  545 */ element!(BlacklistedVersions, 716, ZeroOrOne, false, 0x0, NotRestricted, Some(313)),
    /*  546 */ element!(BlacklistedVersions, 1065, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(313)),
    /*  547 */ element!(BlacklistedVersions, 3673, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(313)),
    /*  548 */ element!(BlockIfStateActiveApIref, 2295, One, false, 0x0, NotRestricted, None),
    /*  549 */ element!(BlockIfStateActiveApIrefs, 3931, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(1126)),
    /*  550 */ element!(BlockIfStateActiveCpRef, 3932, One, false, 0x0, NotRestricted, None),
    /*  551 */ element!(BlockIfStateActiveCpRefs, 3933, ZeroOrOne, false, 0x0, ClassicPlatform, Some(1127)),
    /*  552 */ element!(BlockInconsistent, 4949, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3749)),
    /*  553 */ element!(BlockState, 283, One, false, 0x0, NotRestricted, None),
    /*  554 */ element!(BlockStates, 2516, ZeroOrOne, false, 0x0, ClassicPlatform, Some(4938)),
    /*  555 */ element!(BlocklistedVersions, 717, ZeroOrOne, false, 0x0, NotRestricted, Some(314)),
    /*  556 */ element!(BlocklistedVersions, 717, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(315)),
    /*  557 */ element!(BlocklistedVersions, 1066, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(315)),
    /*  558 */ element!(BlueprintCondition, 1803, ZeroOrOne, false, 0x0, NotRestricted, Some(5347)),
    /*  559 */ element!(BlueprintDerivationGuide, 1803, ZeroOrOne, false, 0x0, NotRestricted, Some(5775)),
    /*  560 */ element!(BlueprintMapping, 288, One, false, 0x0, NotRestricted, None),
    /*  561 */ element!(BlueprintMappingGuide, 1803, ZeroOrOne, false, 0x0, NotRestricted, Some(4036)),
    /*  562 */ element!(BlueprintMappingSet, 291, One, false, 0x0, NotRestricted, None),
    /*  563 */ element!(BlueprintMaps, 292, ZeroOrOne, false, 0x0, NotRestricted, Some(5364)),
    /*  564 */ element!(BlueprintPolicyList, 295, One, false, 0x0, NotRestricted, None),
    /*  565 */ element!(BlueprintPolicyNotModifiable, 296, One, false, 0x0, NotRestricted, None),
    /*  566 */ element!(BlueprintPolicySingle, 297, One, false, 0x0, NotRestricted, None),
    /*  567 */ element!(BlueprintPolicys, 248, ZeroOrOne, false, 0x0, NotRestricted, Some(5773)),
    /*  568 */ element!(BlueprintPolicys, 248, ZeroOrOne, false, 0x0, NotRestricted, Some(5774)),
    /*  569 */ element!(BlueprintRef, 289, ZeroOrOne, false, 0x0, NotRestricted, Some(5638)),
    /*  570 */ element!(BooleanValueVariationPoint, 2231, One, false, 0x0, NotRestricted, None),
    /*  571 */ element!(BorCounterL1ToL2, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(5834)),
    /*  572 */ element!(BorTimeL1, 2229, ZeroOrOne, false, 0x0, NotRestricted, Some(3682)),
    /*  573 */ element!(BorTimeL2, 2229, ZeroOrOne, false, 0x0, NotRestricted, Some(3683)),
    /*  574 */ element!(BorTimeTxEnsured, 2229, ZeroOrOne, false, 0x0, NotRestricted, Some(3681)),
    /*  575 */ element!(Br, 299, One, false, 0x0, NotRestricted, Some(4386)),
    /*  576 */ element!(Broadcast, 298, ZeroOrOne, false, 0x0, ClassicPlatform, Some(187)),
    /*  577 */ element!(BswAsynchronousServerCallPoint, 300, One, false, 0x0, NotRestricted, None),
    /*  578 */ element!(BswAsynchronousServerCallResultPoint, 301, One, false, 0x0, NotRestricted, None),
    /*  579 */ element!(BswAsynchronousServerCallReturnsEvent, 303, One, false, 0x0, NotRestricted, None),
    /*  580 */ element!(BswBackgroundEvent, 305, One, false, 0x0, NotRestricted, None),
    /*  581 */ element!(BswBehaviorRef, 412, ZeroOrOne, false, 0x0, ClassicPlatform, Some(2932)),
    /*  582 */ element!(BswCalledEntity, 307, One, false, 0x0, NotRestricted, None),
    /*  583 */ element!(BswClientPolicy, 308, One, false, 0x0, NotRestricted, None),
    /*  584 */ element!(BswCompositionTiming, 310, One, false, 0x0, NotRestricted, None),
    /*  585 */ element!(BswDataReceivedEvent, 313, One, false, 0x0, NotRestricted, None),
    /*  586 */ element!(BswDataSendPolicy, 315, One, false, 0x0, NotRestricted, None),
    /*  587 */ element!(BswDebugInfo, 318, One, false, 0x0, NotRestricted, None),
    /*  588 */ element!(BswDirectCallPoint, 322, One, false, 0x0, NotRestricted, None),
    /*  589 */ element!(BswDistinguishedPartition, 324, One, false, 0x0, NotRestricted, None),
    /*  590 */ element!(BswEntityRef, 334, ZeroOrOne, false, 0x0, NotRestricted, Some(2933)),
    /*  591 */ element!(BswEntryKind, 325, ZeroOrOne, false, 0x0, ClassicPlatform, Some(4350)),
    /*  592 */ element!(BswEntryRelationship, 326, One, false, 0x0, NotRestricted, None),
    /*  593 */ element!(BswEntryRelationshipSet, 328, One, false, 0x0, NotRestricted, None),
    /*  594 */ element!(BswEntryRelationshipType, 327, ZeroOrOne, false, 0x0, NotRestricted, Some(862)),
    /*  595 */ element!(BswEntryRelationships, 329, ZeroOrOne, false, 0x0, ClassicPlatform, Some(2286)),
    /*  596 */ element!(BswExclusiveAreaPolicy, 335, One, false, 0x0, NotRestricted, None),
    /*  597 */ element!(BswExternalTriggerOccurredEvent, 338, One, false, 0x0, NotRestricted, None),
    /*  598 */ element!(BswImplementation, 339, One, false, 0x0, NotRestricted, None),
    /*  599 */ element!(BswInternalBehavior, 345, One, false, 0x0, NotRestricted, None),
    /*  600 */ element!(BswInternalTriggerOccurredEvent, 368, One, false, 0x0, NotRestricted, None),
    /*  601 */ element!(BswInternalTriggeringPoint, 370, One, false, 0x0, NotRestricted, None),
    /*  602 */ element!(BswInternalTriggeringPointPolicy, 371, One, false, 0x0, NotRestricted, None),
    /*  603 */ element!(BswInternalTriggeringPointRef, 369, ZeroOrOne, false, 0x0, NotRestricted, None),
    /*  604 */ element!(BswInternalTriggeringPointRef, 372, ZeroOrOne, false, 0x0, ClassicPlatform, Some(2690)),
    /*  605 */ element!(BswInternalTriggeringPointRefConditional, 373, One, false, 0x0, NotRestricted, None),
    /*  606 */ element!(BswInterruptEntity, 375, One, false, 0x0, NotRestricted, None),
    /*  607 */ element!(BswInterruptEvent, 376, One, false, 0x0, NotRestricted, None),
    /*  608 */ element!(BswMgrNeeds, 377, One, false, 0x0, NotRestricted, None),
    /*  609 */ element!(BswModeGroupRef, 3039, ZeroOrOne, false, 0x0, NotRestricted, Some(2689)),
    /*  610 */ element!(BswModeManagerErrorEvent, 378, One, false, 0x0, NotRestricted, None),
    /*  611 */ element!(BswModeReceiverPolicy, 380, One, false, 0x0, NotRestricted, None),
    /*  612 */ element!(BswModeSenderPolicy, 381, One, false, 0x0, NotRestricted, None),
    /*  613 */ element!(BswModeSwitchEvent, 383, One, false, 0x0, NotRestricted, None),
    /*  614 */ element!(BswModeSwitchedAckEvent, 385, One, false, 0x0, NotRestricted, None),
    /*  615 */ element!(BswModuleClientServerEntry, 386, One, false, 0x0, NotRestricted, None),
    /*  616 */ element!(BswModuleDependency, 387, One, false, 0x0, NotRestricted, None),
    /*  617 */ element!(BswModuleDependencys, 391, ZeroOrOne, false, 0x1FFFFF, ClassicPlatform, Some(878)),
    /*  618 */ element!(BswModuleDescription, 390, One, false, 0x0, NotRestricted, None),
    /*  619 */ element!(BswModuleDescriptionRef, 399, ZeroOrOne, false, 0x0, NotRestricted, None),
    /*  620 */ element!(BswModuleDescriptionRef, 4679, ZeroOrOne, false, 0x0, ClassicPlatform, Some(3112)),
    /*  621 */ element!(BswModuleDescriptionRefConditional, 398, One, false, 0x0, NotRestricted, None),
    /*  622 */ element!(BswModuleDocumentations, 392, ZeroOrOne, false, 0x1FFFFC, ClassicPlatform, Some(3211)),
    /*  623 */ element!(BswModuleEntityRef, 334, ZeroOrOne, false, 0x0, ClassicPlatform, Some(3112)),
    /*  624 */ element!(BswModuleEntry, 408, One, false, 0x0, NotRestricted, None),
    /*  625 */ element!(BswModuleEntryRef, 330, ZeroOrOne, false, 0x0, ClassicPlatform, Some(3065)),
    /*  626 */ element!(BswModuleEntryRef, 404, ZeroOrOne, false, 0x0, NotRestricted, None),
    /*  627 */ element!(BswModuleEntryRef, 404, ZeroOrOne, false, 0x0, ClassicPlatform, Some(3112)),
    /*  628 */ element!(BswModuleEntryRef, 1112, ZeroOrOne, false, 0x0, NotRestricted, Some(4306)),
    /*  629 */ element!(BswModuleEntryRefConditional, 410, One, false, 0x0, NotRestricted, None),
    /*  630 */ element!(BswModuleInstanceRef, 1983, ZeroOrOne, false, 0x0, ClassicPlatform, Some(2495)),
    /*  631 */ element!(BswModuleInstanceRef, 1983, ZeroOrOne, false, 0x0, ClassicPlatform, Some(2496)),
    /*  632 */ element!(BswModuleTiming, 411, One, false, 0x0, NotRestricted, None),
    /*  633 */ element!(BswOperationInvokedEvent, 413, One, false, 0x0, NotRestricted, None),
    /*  634 */ element!(BswOsTaskExecutionEvent, 415, One, false, 0x0, NotRestricted, None),
    /*  635 */ element!(BswParameterPolicy, 416, One, false, 0x0, NotRestricted, None),
    /*  636 */ element!(BswPerInstanceMemoryPolicy, 418, One, false, 0x0, NotRestricted, None),
    /*  637 */ element!(BswPerInstanceMemoryPolicys, 347, ZeroOrOne, false, 0x1FFF80, NotRestricted, Some(1737)),
    /*  638 */ element!(BswQueuedDataReceptionPolicy, 420, One, false, 0x0, NotRestricted, None),
    /*  639 */ element!(BswReleasedTriggerPolicy, 421, One, false, 0x0, NotRestricted, None),
    /*  640 */ element!(BswResolution, 2229, ZeroOrOne, false, 0x0, NotRestricted, Some(5842)),
    /*  641 */ element!(BswResolution, 5077, ZeroOrOne, false, 0x0, NotRestricted, Some(5842)),
    /*  642 */ element!(BswResourceEstimation, 3678, ZeroOrOne, false, 0x0, NotRestricted, Some(993)),
    /*  643 */ element!(BswSchedulableEntity, 423, One, false, 0x0, NotRestricted, None),
    /*  644 */ element!(BswSchedulerNamePrefix, 424, One, false, 0x0, NotRestricted, None),
    /*  645 */ element!(BswServiceDependency, 425, One, false, 0x0, NotRestricted, None),
    /*  646 */ element!(BswServiceDependencyRef, 1301, ZeroOrOne, false, 0x0, ClassicPlatform, Some(1831)),
    /*  647 */ element!(BswSynchronousServerCallPoint, 430, One, false, 0x0, NotRestricted, None),
    /*  648 */ element!(BswTimingEvent, 431, One, false, 0x0, NotRestricted, None),
    /*  649 */ element!(BswTriggerDirectImplementation, 432, One, false, 0x0, NotRestricted, None),
    /*  650 */ element!(BswTriggerRef, 4926, ZeroOrOne, false, 0x0, NotRestricted, Some(2688)),
    /*  651 */ element!(BswVariableAccess, 433, One, false, 0x0, NotRestricted, None),
    /*  652 */ element!(BucketSize, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(3666)),
    /*  653 */ element!(BufferComputation, 688, ZeroOrOne, false, 0x0, NotRestricted, Some(1242)),
    /*  654 */ element!(BufferOutput, 298, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3790)),
    /*  655 */ element!(BufferProperties, 434, ZeroOrOne, false, 0x0, NotRestricted, Some(106)),
    /*  656 */ element!(BufferRatio, 3494, ZeroOrOne, false, 0x0, ClassicPlatform, Some(723)),
    /*  657 */ element!(BuildAction, 435, One, false, 0x0, NotRestricted, None),
    /*  658 */ element!(BuildActionEnvironment, 436, One, false, 0x0, NotRestricted, None),
    /*  659 */ element!(BuildActionEnvironments, 444, ZeroOrOne, false, 0x1C0000, NotRestricted, Some(5339)),
    /*  660 */ element!(BuildActionIoElement, 441, One, false, 0x0, NotRestricted, None),
    /*  661 */ element!(BuildActionManifest, 443, One, false, 0x0, NotRestricted, None),
    /*  662 */ element!(BuildActionManifestRef, 448, ZeroOrOne, false, 0x0, NotRestricted, None),
    /*  663 */ element!(BuildActionManifestRefConditional, 447, One, false, 0x0, NotRestricted, None),
    /*  664 */ element!(BuildActionManifests, 2587, ZeroOrOne, false, 0x1C0000, ClassicPlatform, Some(46)),
    /*  665 */ element!(BuildActions, 445, ZeroOrOne, false, 0x1C0000, NotRestricted, Some(5363)),
    /*  666 */ element!(BuildType, 454, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3843)),
    /*  667 */ element!(BulkDataCategory, 4393, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(4038)),
    /*  668 */ element!(BulkNvBlock, 5016, ZeroOrOne, false, 0x0, NotRestricted, Some(3327)),
    /*  669 */ element!(BulkNvDataDescriptor, 455, One, false, 0x0, NotRestricted, None),
    /*  670 */ element!(BulkNvDataDescriptors, 3153, ZeroOrOne, false, 0x1F8000, ClassicPlatform, Some(3286)),
    /*  671 */ element!(BundledConnections, 4124, ZeroOrOne, false, 0x0, NotRestricted, Some(296)),
    /*  672 */ element!(BurstPatternEventTriggering, 457, One, false, 0x0, NotRestricted, None),
    /*  673 */ element!(BurstSize, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(2577)),
    /*  674 */ element!(BurstSize, 3494, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(2577)),
    /*  675 */ element!(BurstSizeRequest, 3494, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(2575)),
    /*  676 */ element!(BurstSizeResponse, 3494, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(2576)),
    /*  677 */ element!(BusDependentNmEcus, 3098, ZeroOrOne, false, 0x0, ClassicPlatform, Some(246)),
    /*  678 */ element!(BusId, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(1175)),
    /*  679 */ element!(BusIdleTimeoutPeriod, 2229, ZeroOrOne, false, 0x0, ClassicPlatform, Some(4203)),
    /*  680 */ element!(BusMirrorCanIdRangeMapping, 458, One, false, 0x0, NotRestricted, None),
    /*  681 */ element!(BusMirrorCanIdToCanIdMapping, 459, One, false, 0x0, NotRestricted, None),
    /*  682 */ element!(BusMirrorChannelMappingCan, 464, One, false, 0x0, NotRestricted, None),
    /*  683 */ element!(BusMirrorChannelMappingFlexray, 469, One, false, 0x0, NotRestricted, None),
    /*  684 */ element!(BusMirrorChannelMappingIp, 470, One, false, 0x0, NotRestricted, None),
    /*  685 */ element!(BusMirrorChannelMappingUserDefined, 471, One, false, 0x0, NotRestricted, None),
    /*  686 */ element!(BusMirrorLinPidToCanIdMapping, 472, One, false, 0x0, NotRestricted, None),
    /*  687 */ element!(BusMirrorNetworkId, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(3718)),
    /*  688 */ element!(BusOffRecovery, 482, ZeroOrOne, false, 0x0, NotRestricted, Some(221)),
    /*  689 */ element!(BusSpecificNmEcu, 3099, ZeroOrOne, false, 0x0, ClassicPlatform, Some(205)),
    /*  690 */ element!(ByPassPointIref, 81, One, false, 0x0, NotRestricted, None),
    /*  691 */ element!(ByPassPointIrefs, 3751, ZeroOrOne, false, 0x1FFFF8, NotRestricted, Some(6020)),
    /*  692 */ element!(BypassEtherType, 3494, One, false, 0x0, NotRestricted, None),
    /*  693 */ element!(BypassEtherTypes, 2883, ZeroOrOne, false, 0x0, NotRestricted, Some(4002)),
    /*  694 */ element!(BypassVlan, 3494, One, false, 0x0, NotRestricted, None),
    /*  695 */ element!(BypassVlans, 2884, ZeroOrOne, false, 0x0, NotRestricted, Some(4003)),
    /*  696 */ element!(Byte, 2642, ZeroOrOne, false, 0x0, ClassicPlatform, Some(209)),
    /*  697 */ element!(ByteOrder, 474, ZeroOrOne, false, 0x0, NotRestricted, Some(787)),
    /*  698 */ element!(ByteOrder, 474, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(2523)),
    /*  699 */ element!(ByteOrder, 474, ZeroOrOne, false, 0x0, NotRestricted, Some(4229)),
    /*  700 */ element!(ByteValue, 2642, One, false, 0x0, NotRestricted, None),
    /*  701 */ element!(ByteValues, 2286, ZeroOrOne, true, 0x0, ClassicPlatform, Some(2641)),
    /*  702 */ element!(ByteValues, 2286, ZeroOrOne, true, 0x0, ClassicPlatform, Some(2912)),
    /*  703 */ element!(CCode, 3066, ZeroOrOne, false, 0x0, NotRestricted, Some(6059)),
    /*  704 */ element!(CalcRamBlockCrc, 298, ZeroOrOne, false, 0x0, NotRestricted, Some(512)),
    /*  705 */ element!(CalculationFormula, 1919, ZeroOrOne, false, 0x0, ClassicPlatform, Some(839)),
    /*  706 */ element!(CalibrationParameterValue, 476, One, false, 0x0, NotRestricted, None),
    /*  707 */ element!(CalibrationParameterValueSet, 477, One, false, 0x0, NotRestricted, None),
    /*  708 */ element!(CalibrationParameterValueSetRef, 3739, One, false, 0x0, NotRestricted, None),
    /*  709 */ element!(CalibrationParameterValueSetRefs, 3740, ZeroOrOne, false, 0x1FFFF0, ClassicPlatform, Some(5947)),
    /*  710 */ element!(CalibrationParameterValues, 478, ZeroOrOne, false, 0x1C0000, NotRestricted, Some(5432)),
    /*  711 */ element!(CallPoints, 401, ZeroOrOne, false, 0x1C0000, NotRestricted, Some(30)),
    /*  712 */ element!(CallSignalRef, 4931, ZeroOrOne, false, 0x0, NotRestricted, Some(2174)),
    /*  713 */ element!(CallSignalTriggeringRef, 4063, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(2103)),
    /*  714 */ element!(CallTimeout, 2229, ZeroOrOne, false, 0x0, NotRestricted, Some(4047)),
    /*  715 */ element!(CallType, 306, ZeroOrOne, false, 0x0, ClassicPlatform, Some(3168)),
    /*  716 */ element!(CallbackHeaderRef, 597, One, false, 0x0, NotRestricted, None),
    /*  717 */ element!(CallbackHeaderRefs, 598, ZeroOrOne, false, 0x0, NotRestricted, Some(2794)),
    /*  718 */ element!(CalledEntryRef, 323, ZeroOrOne, false, 0x0, ClassicPlatform, Some(2691)),
    /*  719 */ element!(CalledEntryRef, 414, ZeroOrOne, false, 0x0, NotRestricted, Some(2853)),
    /*  720 */ element!(CalledEntrys, 402, ZeroOrOne, false, 0x1C0000, ClassicPlatform, Some(2852)),
    /*  721 */ element!(CalledFromWithinExclusiveAreaRef, 2098, ZeroOrOne, false, 0x0, NotRestricted, Some(4682)),
    /*  722 */ element!(CalledFromWithinExclusiveAreaRef, 2098, ZeroOrOne, false, 0x0, ClassicPlatform, Some(4682)),
    /*  723 */ element!(CanAddressingMode, 480, ZeroOrOne, false, 0x0, NotRestricted, Some(751)),
    /*  724 */ element!(CanAddressingMode, 480, ZeroOrOne, false, 0x0, NotRestricted, Some(2693)),
    /*  725 */ element!(CanBaudrate, 3494, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(2530)),
    /*  726 */ element!(CanBeInvokedConcurrently, 298, ZeroOrOne, false, 0x0, NotRestricted, Some(1243)),
    /*  727 */ element!(CanBitRateSwitch, 298, ZeroOrOne, false, 0x0, NotRestricted, Some(762)),
    /*  728 */ element!(CanCluster, 481, One, false, 0x0, NotRestricted, None),
    /*  729 */ element!(CanClusterConditional, 484, One, false, 0x0, NotRestricted, None),
    /*  730 */ element!(CanClusterVariants, 483, ZeroOrOne, false, 0x1FFC00, NotRestricted, Some(4408)),
    /*  731 */ element!(CanCommunicationConnector, 485, One, false, 0x0, NotRestricted, None),
    /*  732 */ element!(CanCommunicationController, 486, One, false, 0x0, NotRestricted, None),
    /*  733 */ element!(CanCommunicationControllerConditional, 488, One, false, 0x0, NotRestricted, None),
    /*  734 */ element!(CanCommunicationControllerVariants, 487, ZeroOrOne, false, 0x1C0000, NotRestricted, Some(4408)),
    /*  735 */ element!(CanConfig, 489, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(214)),
    /*  736 */ element!(CanControllerAttributes, 1, ZeroOrOne, false, 0x0, NotRestricted, Some(215)),
    /*  737 */ element!(CanControllerConfiguration, 489, One, false, 0x0, NotRestricted, None),
    /*  738 */ element!(CanControllerConfigurationRequirements, 490, One, false, 0x0, NotRestricted, None),
    /*  739 */ element!(CanControllerFdAttributes, 491, ZeroOrOne, false, 0x0, NotRestricted, Some(201)),
    /*  740 */ element!(CanControllerFdRequirements, 492, ZeroOrOne, false, 0x0, NotRestricted, Some(88)),
    /*  741 */ element!(CanControllerXlAttributes, 493, ZeroOrOne, false, 0x0, NotRestricted, Some(202)),
    /*  742 */ element!(CanControllerXlRequirements, 494, ZeroOrOne, false, 0x0, NotRestricted, Some(89)),
    /*  743 */ element!(CanEnterExclusiveAreaRef, 2119, One, false, 0x0, NotRestricted, None),
    /*  744 */ element!(CanEnterExclusiveAreaRefs, 2096, ZeroOrOne, false, 0x0, NotRestricted, Some(4861)),
    /*  745 */ element!(CanEnters, 2097, ZeroOrOne, false, 0x1C0000, NotRestricted, Some(4862)),
    /*  746 */ element!(CanFdBaudrate, 3494, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(2531)),
    /*  747 */ element!(CanFdBaudrate, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(2534)),
    /*  748 */ element!(CanFdConfig, 491, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(216)),
    /*  749 */ element!(CanFdFrameSupport, 298, ZeroOrOne, false, 0x0, NotRestricted, Some(3883)),
    /*  750 */ element!(CanFrame, 495, One, false, 0x0, NotRestricted, None),
    /*  751 */ element!(CanFrameRxBehavior, 496, ZeroOrOne, false, 0x0, NotRestricted, Some(782)),
    /*  752 */ element!(CanFrameTriggering, 497, One, false, 0x0, NotRestricted, None),
    /*  753 */ element!(CanFrameTxBehavior, 499, ZeroOrOne, false, 0x0, NotRestricted, Some(783)),
    /*  754 */ element!(CanGlobalTimeDomainProps, 500, One, false, 0x0, NotRestricted, None),
    /*  755 */ element!(CanIdRangeMappings, 465, ZeroOrOne, false, 0x0, ClassicPlatform, Some(2314)),
    /*  756 */ element!(CanIdToCanIdMappings, 466, ZeroOrOne, false, 0x0, ClassicPlatform, Some(2315)),
    /*  757 */ element!(CanIdentifier, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(1653)),
    /*  758 */ element!(CanIdentifierMask, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(222)),
    /*  759 */ element!(CanIdentifierRange, 3832, ZeroOrOne, false, 0x0, NotRestricted, Some(842)),
    /*  760 */ element!(CanNmCluster, 503, One, false, 0x0, NotRestricted, None),
    /*  761 */ element!(CanNmClusterCoupling, 504, One, false, 0x0, NotRestricted, None),
    /*  762 */ element!(CanNmEcu, 507, One, false, 0x0, NotRestricted, None),
    /*  763 */ element!(CanNmNode, 508, One, false, 0x0, NotRestricted, None),
    /*  764 */ element!(CanNmTxCanId, 3494, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(4004)),
    /*  765 */ element!(CanPhysicalChannel, 510, One, false, 0x0, NotRestricted, None),
    /*  766 */ element!(CanTpAddress, 511, One, false, 0x0, NotRestricted, None),
    /*  767 */ element!(CanTpAddressRef, 529, One, false, 0x0, NotRestricted, None),
    /*  768 */ element!(CanTpAddressRefs, 1824, ZeroOrOne, false, 0x0, ClassicPlatform, Some(1731)),
    /*  769 */ element!(CanTpChannel, 513, One, false, 0x0, NotRestricted, None),
    /*  770 */ element!(CanTpChannelRef, 522, ZeroOrOne, false, 0x0, ClassicPlatform, Some(2034)),
    /*  771 */ element!(CanTpConfig, 515, One, false, 0x0, NotRestricted, None),
    /*  772 */ element!(CanTpConnection, 521, One, false, 0x0, NotRestricted, None),
    /*  773 */ element!(CanTpEcu, 525, One, false, 0x0, NotRestricted, None),
    /*  774 */ element!(CanTpNode, 527, One, false, 0x0, NotRestricted, None),
    /*  775 */ element!(CanXlBaudrate, 3494, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(2532)),
    /*  776 */ element!(CanXlBaudrate, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(2533)),
    /*  777 */ element!(CanXlConfig, 493, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(220)),
    /*  778 */ element!(CanXlConfigRef, 2027, ZeroOrOne, false, 0x0, NotRestricted, Some(1234)),
    /*  779 */ element!(CanXlConfigReqs, 494, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(219)),
    /*  780 */ element!(CanXlFrameTriggeringProps, 530, ZeroOrOne, false, 0x0, NotRestricted, Some(794)),
    /*  781 */ element!(CanXlNmProps, 531, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3271)),
    /*  782 */ element!(CanXlProps, 532, One, false, 0x0, NotRestricted, None),
    /*  783 */ element!(CanXlPropsRef, 2021, One, false, 0x0, NotRestricted, None),
    /*  784 */ element!(CanXlPropsRefs, 2022, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(1233)),
    /*  785 */ element!(Cancellation, 298, ZeroOrOne, false, 0x0, ClassicPlatform, Some(958)),
    /*  786 */ element!(Cancellation, 298, ZeroOrOne, false, 0x0, ClassicPlatform, Some(6013)),
    /*  787 */ element!(Cancellation, 298, ZeroOrOne, false, 0x0, NotRestricted, Some(6014)),
    /*  788 */ element!(Cancellation, 298, ZeroOrOne, false, 0x0, ClassicPlatform, Some(6014)),
    /*  789 */ element!(Capability, 2876, ZeroOrOne, false, 0x0, NotRestricted, Some(3641)),
    /*  790 */ element!(CapabilityRecords, 7, ZeroOrOne, false, 0x180000, NotRestricted, Some(59)),
    /*  791 */ element!(CapabilityRecords, 7, ZeroOrOne, false, 0x1C0000, NotRestricted, Some(59)),
    /*  792 */ element!(CapabilityRecords, 2909, ZeroOrOne, true, 0x0, AdaptivePlatform, Some(62)),
    /*  793 */ element!(CapabilityRecords, 3837, ZeroOrOne, false, 0x0, NotRestricted, Some(60)),
    /*  794 */ element!(CapabilityRecords, 3837, ZeroOrOne, false, 0x0, NotRestricted, Some(61)),
    /*  795 */ element!(CapabilityRecords, 4267, ZeroOrOne, false, 0x0, NotRestricted, Some(59)),
    /*  796 */ element!(CapabilityRecords, 4267, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(59)),
    /*  797 */ element!(Caption, 298, ZeroOrOne, false, 0x0, NotRestricted, Some(2462)),
    /*  798 */ element!(CasRxLowMax, 2642, ZeroOrOne, false, 0x0, NotRestricted, Some(5944)),
    /*  799 */ element!(Cat2Isr, 2500, ZeroOrOne, false, 0x0, NotRestricted, Some(2993)),
    /*  800 */ element!(Category, 479, ZeroOrOne, false, 0x0, NotRestricted, Some(4293)),
    /*  801 */ element!(Category, 479, ZeroOrOne, false, 0x0, NotRestricted, Some(4294)),
    /*  802 */ element!(Category, 479, ZeroOrOne, false, 0x0, NotRestricted, Some(4904)),
    /*  803 */ element!(Category, 534, ZeroOrOne, false, 0x0, NotRestricted, Some(2814)),
    /*  804 */ element!(Category, 534, ZeroOrOne, false, 0x0, NotRestricted, Some(2815)),
    /*  805 */ element!(Category, 534, ZeroOrOne, false, 0x0, NotRestricted, Some(2816)),
    /*  806 */ element!(Category, 534, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(4199)),
    /*  807 */ element!(Category, 534, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(4211)),
    /*  808 */ element!(Category, 2500, ZeroOrOne, false, 0x0, NotRestricted, Some(1188)),
    /*  809 */ element!(Category, 2500, ZeroOrOne, false, 0x0, NotRestricted, Some(2609)),
    /*  810 */ element!(Category, 2500, ZeroOrOne, false, 0x0, NotRestricted, Some(4352)),
    /*  811 */ element!(Category, 2500, ZeroOrOne, false, 0x0, NotRestricted, Some(5525)),
    /*  812 */ element!(Category, 4393, ZeroOrOne, false, 0x0, NotRestricted, Some(2817)),
    /*  813 */ element!(Category, 4393, ZeroOrOne, false, 0x0, NotRestricted, Some(3830)),
    /*  814 */ element!(Category, 4393, ZeroOrOne, false, 0x0, NotRestricted, Some(3832)),
    /*  815 */ element!(Category, 4393, ZeroOrOne, false, 0x0, NotRestricted, Some(4342)),
    /*  816 */ element!(Category, 4393, ZeroOrOne, false, 0x0, NotRestricted, Some(4351)),
    /*  817 */ element!(Category, 5078, ZeroOrOne, false, 0x0, NotRestricted, Some(2817)),
    /*  818 */ element!(Category, 5078, ZeroOrOne, false, 0x0, NotRestricted, Some(3831)),
    /*  819 */ element!(Category, 5078, ZeroOrOne, false, 0x0, NotRestricted, Some(4342)),
    /*  820 */ element!(CddType, 4393, ZeroOrOne, false, 0x0, NotRestricted, Some(3630)),
    /*  821 */ element!(CddType, 4393, ZeroOrOne, false, 0x0, NotRestricted, Some(3631)),
    /*  822 */ element!(CertCommonName, 4393, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3667)),
    /*  823 */ element!(CertificateEvaluations, 1136, ZeroOrOne, false, 0x0, NotRestricted, Some(3316)),
    /*  824 */ element!(CertificateRef, 4811, ZeroOrOne, false, 0x0, NotRestricted, Some(5078)),
    /*  825 */ element!(CertificateToKeySlotMappings, 873, ZeroOrOne, false, 0x1C0000, AdaptivePlatform, Some(1377)),
    /*  826 */ element!(Change, 3064, ZeroOrOne, false, 0x0, NotRestricted, Some(4899)),
    /*  827 */ element!(ChannelId, 3494, ZeroOrOne, false, 0x0, ClassicPlatform, Some(2899)),
    /*  828 */ element!(ChannelMode, 514, ZeroOrOne, false, 0x0, ClassicPlatform, Some(2692)),
    /*  829 */ element!(ChannelName, 2188, ZeroOrOne, false, 0x0, NotRestricted, Some(1569)),
    /*  830 */ element!(ChannelRef, 2198, ZeroOrOne, false, 0x0, NotRestricted, Some(1015)),
    /*  831 */ element!(ChannelSynchronousWakeup, 298, ZeroOrOne, false, 0x0, NotRestricted, Some(1260)),
    /*  832 */ element!(Channels, 463, ZeroOrOne, false, 0x1C0000, NotRestricted, Some(1817)),
    /*  833 */ element!(ChannelsPerFrame, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(815)),
    /*  834 */ element!(Chapter, 535, One, false, 0x0, NotRestricted, None),
    /*  835 */ element!(Chapter, 535, Any, false, 0x1C0000, NotRestricted, Some(3200)),
    /*  836 */ element!(Chapter, 535, One, false, 0xC0000, NotRestricted, Some(4665)),
    /*  837 */ element!(Chapter, 535, Any, true, 0x0, NotRestricted, Some(4748)),
    /*  838 */ element!(Chapters, 4609, ZeroOrOne, false, 0x1, NotRestricted, Some(1751)),
    /*  839 */ element!(ChargeManagerNeeds, 536, One, false, 0x0, NotRestricted, None),
    /*  840 */ element!(CheckPerSourceId, 298, ZeroOrOne, false, 0x0, NotRestricted, Some(1218)),
    /*  841 */ element!(CheckStaticBlockId, 298, ZeroOrOne, false, 0x0, NotRestricted, Some(518)),
    /*  842 */ element!(CheckpointFinalRef, 2858, One, false, 0x0, NotRestricted, None),
    /*  843 */ element!(CheckpointFinalRefs, 2859, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(2196)),
    /*  844 */ element!(CheckpointId, 3494, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(653)),
    /*  845 */ element!(CheckpointId, 3494, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(655)),
    /*  846 */ element!(CheckpointInitialRef, 2858, One, false, 0x0, NotRestricted, None),
    /*  847 */ element!(CheckpointInitialRefs, 2860, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(2199)),
    /*  848 */ element!(CheckpointIref, 3596, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(1871)),
    /*  849 */ element!(CheckpointRef, 76, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(1901)),
    /*  850 */ element!(CheckpointRef, 3128, One, false, 0x0, NotRestricted, None),
    /*  851 */ element!(CheckpointRefs, 3129, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(2228)),
    /*  852 */ element!(CheckpointTransition, 537, One, false, 0x0, NotRestricted, None),
    /*  853 */ element!(CheckpointTransitionRef, 1088, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(2241)),
    /*  854 */ element!(Checkpoints, 3375, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(685)),
    /*  855 */ element!(Checkpoints, 3397, ZeroOrOne, false, 0x1FF000, AdaptivePlatform, Some(316)),
    /*  856 */ element!(Checkpoints, 4411, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(292)),
    /*  857 */ element!(Checkpointss, 4406, ZeroOrOne, false, 0x1C0000, NotRestricted, Some(5171)),
    /*  858 */ element!(ChecksumValue, 4393, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(4283)),
    /*  859 */ element!(ChecksumVerification, 298, ZeroOrOne, false, 0x0, NotRestricted, Some(725)),
    /*  860 */ element!(ChecksumVerification, 298, ZeroOrOne, false, 0x0, NotRestricted, Some(726)),
    /*  861 */ element!(ChecksumVerification, 298, ZeroOrOne, false, 0x0, NotRestricted, Some(736)),
    /*  862 */ element!(Choices, 97, ZeroOrOne, false, 0x100000, AdaptivePlatform, Some(4295)),
    /*  863 */ element!(Choices, 1857, ZeroOrOne, false, 0x1FFF80, ClassicPlatform, Some(2818)),
    /*  864 */ element!(CipherSuite, 4393, ZeroOrOne, false, 0x0, NotRestricted, Some(236)),
    /*  865 */ element!(CipherSuiteConfigs, 2880, ZeroOrOne, false, 0x0, NotRestricted, Some(237)),
    /*  866 */ element!(CipherSuiteId, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(1179)),
    /*  867 */ element!(CipherSuiteName, 4393, ZeroOrOne, false, 0x0, NotRestricted, Some(4284)),
    /*  868 */ element!(CipherSuitePriority, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(1285)),
    /*  869 */ element!(CipherSuiteShortLabel, 4393, ZeroOrOne, false, 0x0, NotRestricted, Some(1563)),
    /*  870 */ element!(CknRef, 2886, ZeroOrOne, false, 0x0, NotRestricted, Some(2201)),
    /*  871 */ element!(ClaimedFunctionGroupRef, 4143, One, false, 0x0, NotRestricted, None),
    /*  872 */ element!(ClaimedFunctionGroupRefs, 4144, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(944)),
    /*  873 */ element!(ClassContentConditional, 538, One, false, 0x0, NotRestricted, None),
    /*  874 */ element!(ClassContents, 541, ZeroOrOne, false, 0x0, NotRestricted, Some(2517)),
    /*  875 */ element!(ClassTailorings, 3650, ZeroOrOne, false, 0x0, NotRestricted, Some(2438)),
    /*  876 */ element!(Classification, 4393, One, false, 0x0, NotRestricted, None),
    /*  877 */ element!(Classification, 5078, One, false, 0x0, NotRestricted, Some(3506)),
    /*  878 */ element!(Classifications, 2754, ZeroOrOne, false, 0x0, NotRestricted, Some(3506)),
    /*  879 */ element!(ClearConditionGroupRef, 1670, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3201)),
    /*  880 */ element!(ClearConditionRef, 1151, One, false, 0x0, NotRestricted, None),
    /*  881 */ element!(ClearConditionRef, 1155, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(2035)),
    /*  882 */ element!(ClearConditionRefs, 1152, ZeroOrOne, false, 0x1FE000, AdaptivePlatform, Some(3338)),
    /*  883 */ element!(ClearDiagnosticInformationClassRef, 1158, ZeroOrOne, false, 0x0, NotRestricted, Some(5276)),
    /*  884 */ element!(ClearDtcLimitation, 1159, ZeroOrOne, false, 0x0, NotRestricted, Some(680)),
    /*  885 */ element!(ClearDtcLimitation, 1159, ZeroOrOne, false, 0x0, NotRestricted, Some(681)),
    /*  886 */ element!(ClearEventAllowedBehavior, 1161, ZeroOrOne, false, 0x0, NotRestricted, Some(3748)),
    /*  887 */ element!(ClearEventBehavior, 1162, ZeroOrOne, false, 0x0, NotRestricted, Some(6)),
    /*  888 */ element!(ClearFromValidToInvalid, 298, ZeroOrOne, false, 0x0, NotRestricted, Some(238)),
    /*  889 */ element!(ClearFromValidToInvalid, 298, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(238)),
    /*  890 */ element!(ClearResetEmissionRelatedDiagnosticInfoClassRef, 1165, ZeroOrOne, false, 0x0, NotRestricted, Some(5265)),
    /*  891 */ element!(ClientCapability, 542, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(4135)),
    /*  892 */ element!(ClientComSpec, 543, One, false, 0x0, NotRestricted, None),
    /*  893 */ element!(ClientId, 549, ZeroOrOne, false, 0x0, NotRestricted, Some(1279)),
    /*  894 */ element!(ClientId, 3140, ZeroOrOne, false, 0x0, NotRestricted, Some(2695)),
    /*  895 */ element!(ClientId, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(1034)),
    /*  896 */ element!(ClientIdDefinition, 546, One, false, 0x0, NotRestricted, None),
    /*  897 */ element!(ClientIdDefinitionSet, 547, One, false, 0x0, NotRestricted, None),
    /*  898 */ element!(ClientIdDefinitionSetRef, 4610, One, false, 0x0, NotRestricted, None),
    /*  899 */ element!(ClientIdDefinitionSetRefs, 4611, ZeroOrOne, false, 0x0, ClassicPlatform, Some(2385)),
    /*  900 */ element!(ClientIdDefinitions, 548, ZeroOrOne, false, 0x1FFFC0, NotRestricted, Some(800)),
    /*  901 */ element!(ClientIdRange, 550, ZeroOrOne, false, 0x0, NotRestricted, Some(2305)),
    /*  902 */ element!(ClientIntent, 551, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(4138)),
    /*  903 */ element!(ClientIpAddrFromConnectionRequest, 298, ZeroOrOne, false, 0x0, NotRestricted, Some(1223)),
    /*  904 */ element!(ClientPolicys, 348, ZeroOrOne, false, 0x1FFF80, NotRestricted, Some(1739)),
    /*  905 */ element!(ClientPortFromConnectionRequest, 298, ZeroOrOne, false, 0x0, NotRestricted, Some(1224)),
    /*  906 */ element!(ClientPortRef, 4126, ZeroOrOne, false, 0x0, NotRestricted, Some(239)),
    /*  907 */ element!(ClientServerAnnotation, 552, One, false, 0x0, NotRestricted, None),
    /*  908 */ element!(ClientServerAnnotations, 3480, ZeroOrOne, false, 0x0, NotRestricted, Some(148)),
    /*  909 */ element!(ClientServerApplicationErrorMapping, 553, One, false, 0x0, NotRestricted, None),
    /*  910 */ element!(ClientServerArrayElementMapping, 555, One, false, 0x0, NotRestricted, None),
    /*  911 */ element!(ClientServerArrayTypeMapping, 557, One, false, 0x0, NotRestricted, None),
    /*  912 */ element!(ClientServerInterface, 559, One, false, 0x0, NotRestricted, None),
    /*  913 */ element!(ClientServerInterfaceMapping, 560, One, false, 0x0, NotRestricted, None),
    /*  914 */ element!(ClientServerInterfaceRef, 566, ZeroOrOne, false, 0x0, ClassicPlatform, Some(3067)),
    /*  915 */ element!(ClientServerInterfaceToBswModuleEntryBlueprintMapping, 565, One, false, 0x0, NotRestricted, None),
    /*  916 */ element!(ClientServerOperation, 569, One, false, 0x0, NotRestricted, None),
    /*  917 */ element!(ClientServerOperationBlueprintMapping, 571, One, false, 0x0, NotRestricted, None),
    /*  918 */ element!(ClientServerOperationComProps, 573, One, false, 0x0, NotRestricted, None),
    /*  919 */ element!(ClientServerOperationIref, 3186, ZeroOrOne, false, 0x0, ClassicPlatform, Some(244)),
    /*  920 */ element!(ClientServerOperationIref, 3186, ZeroOrOne, false, 0x0, NotRestricted, Some(1834)),
    /*  921 */ element!(ClientServerOperationIref, 3186, ZeroOrOne, false, 0x0, NotRestricted, Some(2036)),
    /*  922 */ element!(ClientServerOperationMapping, 574, One, false, 0x0, NotRestricted, None),
    /*  923 */ element!(ClientServerOperationRef, 572, ZeroOrOne, false, 0x0, NotRestricted, Some(3068)),
    /*  924 */ element!(ClientServerOperationRef, 2983, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(1835)),
    /*  925 */ element!(ClientServerPorts, 4537, ZeroOrOne, false, 0x1C0000, ClassicPlatform, Some(2745)),
    /*  926 */ element!(ClientServerPrimitiveTypeMapping, 583, One, false, 0x0, NotRestricted, None),
    /*  927 */ element!(ClientServerRecordElementMapping, 584, One, false, 0x0, NotRestricted, None),
    /*  928 */ element!(ClientServerRecordTypeMapping, 585, One, false, 0x0, NotRestricted, None),
    /*  929 */ element!(ClientServerToSignalGroupMapping, 587, One, false, 0x0, NotRestricted, None),
    /*  930 */ element!(ClientServerToSignalMapping, 590, One, false, 0x0, NotRestricted, None),
    /*  931 */ element!(ClientServiceMajorVersion, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(1416)),
    /*  932 */ element!(ClientServiceMinorVersion, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(1547)),
    /*  933 */ element!(ClockReferenceRef, 4784, ZeroOrOne, false, 0x0, NotRestricted, Some(1679)),
    /*  934 */ element!(ClusterDriftDamping, 2642, ZeroOrOne, false, 0x0, NotRestricted, Some(2819)),
    /*  935 */ element!(ClusteredComponentIref, 658, One, false, 0x0, NotRestricted, None),
    /*  936 */ element!(ClusteredComponentIrefs, 656, ZeroOrOne, false, 0x0, NotRestricted, Some(2178)),
    /*  937 */ element!(CmModuleInstantiation, 592, One, false, 0x0, NotRestricted, None),
    /*  938 */ element!(Code, 595, One, false, 0x0, NotRestricted, None),
    /*  939 */ element!(Code, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(1073)),
    /*  940 */ element!(CodeDescriptors, 2588, ZeroOrOne, false, 0x0, ClassicPlatform, Some(2587)),
    /*  941 */ element!(CodeLabel, 475, ZeroOrOne, false, 0x0, NotRestricted, Some(4039)),
    /*  942 */ element!(ColdStartAttempts, 2642, ZeroOrOne, false, 0x0, NotRestricted, Some(2968)),
    /*  943 */ element!(CollectedInstanceIref, 81, One, false, 0x0, NotRestricted, None),
    /*  944 */ element!(CollectedInstanceIrefs, 600, ZeroOrOne, false, 0x0, NotRestricted, Some(4692)),
    /*  945 */ element!(Collection, 599, One, false, 0x0, NotRestricted, None),
    /*  946 */ element!(CollectionProps, 4234, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(338)),
    /*  947 */ element!(CollectionProps, 4234, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(339)),
    /*  948 */ element!(CollectionRef, 16, ZeroOrOne, false, 0x0, NotRestricted, Some(4685)),
    /*  949 */ element!(CollectionSemantics, 724, ZeroOrOne, false, 0x0, NotRestricted, Some(773)),
    /*  950 */ element!(CollectionSemantics, 4393, ZeroOrOne, false, 0x0, NotRestricted, Some(1778)),
    /*  951 */ element!(CollectionThreshold, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(687)),
    /*  952 */ element!(CollectionTimeout, 2229, ZeroOrOne, false, 0x0, NotRestricted, Some(6005)),
    /*  953 */ element!(CollectionTrigger, 3243, ZeroOrOne, false, 0x0, NotRestricted, Some(749)),
    /*  954 */ element!(CollisionResolvingScheduleRef, 2796, ZeroOrOne, false, 0x0, ClassicPlatform, Some(2225)),
    /*  955 */ element!(ColorMode, 2232, ZeroOrOne, false, 0x0, ClassicPlatform, Some(737)),
    /*  956 */ element!(Colspec, 606, Any, true, 0x0, NotRestricted, Some(5791)),
    /*  957 */ element!(ComBasedSignalGroupTransformations, 2463, ZeroOrOne, false, 0x1FFFC0, NotRestricted, Some(4907)),
    /*  958 */ element!(ComCertificateToCryptoCertificateMapping, 607, One, false, 0x0, NotRestricted, None),
    /*  959 */ element!(ComConfigurationGwTimeBase, 2229, ZeroOrOne, false, 0x0, ClassicPlatform, Some(3020)),
    /*  960 */ element!(ComConfigurationId, 2642, ZeroOrOne, false, 0x0, NotRestricted, Some(3527)),
    /*  961 */ element!(ComConfigurationRxTimeBase, 2229, ZeroOrOne, false, 0x0, ClassicPlatform, Some(3021)),
    /*  962 */ element!(ComConfigurationTxTimeBase, 2229, ZeroOrOne, false, 0x0, ClassicPlatform, Some(3022)),
    /*  963 */ element!(ComControlClassRef, 1173, ZeroOrOne, false, 0x0, NotRestricted, Some(5277)),
    /*  964 */ element!(ComEnableMdtForCyclicTransmission, 298, ZeroOrOne, false, 0x0, ClassicPlatform, Some(978)),
    /*  965 */ element!(ComEventGrant, 608, One, false, 0x0, NotRestricted, None),
    /*  966 */ element!(ComEventGrantDesign, 609, One, false, 0x0, NotRestricted, None),
    /*  967 */ element!(ComFieldGrant, 612, One, false, 0x0, NotRestricted, None),
    /*  968 */ element!(ComFieldGrantDesign, 613, One, false, 0x0, NotRestricted, None),
    /*  969 */ element!(ComFindServiceGrant, 616, One, false, 0x0, NotRestricted, None),
    /*  970 */ element!(ComFindServiceGrantDesign, 617, One, false, 0x0, NotRestricted, None),
    /*  971 */ element!(ComKeyToCryptoKeySlotMapping, 623, One, false, 0x0, NotRestricted, None),
    /*  972 */ element!(ComManagementGroupRef, 625, One, false, 0x0, NotRestricted, None),
    /*  973 */ element!(ComManagementGroupRefs, 626, ZeroOrOne, false, 0x180000, NotRestricted, Some(1167)),
    /*  974 */ element!(ComManagementMapping, 624, One, false, 0x0, NotRestricted, None),
    /*  975 */ element!(ComManagementMappings, 4619, ZeroOrOne, false, 0x1C0000, ClassicPlatform, Some(1447)),
    /*  976 */ element!(ComManagementPortGroupIref, 3451, One, false, 0x0, NotRestricted, None),
    /*  977 */ element!(ComManagementPortGroupIrefs, 627, ZeroOrOne, false, 0x180000, NotRestricted, Some(1549)),
    /*  978 */ element!(ComMethodGrant, 628, One, false, 0x0, NotRestricted, None),
    /*  979 */ element!(ComMethodGrantDesign, 629, One, false, 0x0, NotRestricted, None),
    /*  980 */ element!(ComMgrUserNeeds, 632, One, false, 0x0, NotRestricted, None),
    /*  981 */ element!(ComOfferServiceGrant, 633, One, false, 0x0, NotRestricted, None),
    /*  982 */ element!(ComOfferServiceGrantDesign, 634, One, false, 0x0, NotRestricted, None),
    /*  983 */ element!(ComProcessingPeriod, 5077, ZeroOrOne, false, 0x0, NotRestricted, Some(2694)),
    /*  984 */ element!(ComProps, 911, ZeroOrOne, false, 0x0, ClassicPlatform, Some(3435)),
    /*  985 */ element!(ComSecOcToCryptoKeySlotMapping, 636, One, false, 0x0, NotRestricted, None),
    /*  986 */ element!(ComTriggerGrant, 638, One, false, 0x0, NotRestricted, None),
    /*  987 */ element!(ComTriggerGrantDesign, 639, One, false, 0x0, NotRestricted, None),
    /*  988 */ element!(CombinedNoDataInitCount, 298, ZeroOrOne, false, 0x0, NotRestricted, Some(934)),
    /*  989 */ element!(CommConnectors, 3379, ZeroOrOne, false, 0x1C0000, ClassicPlatform, Some(4907)),
    /*  990 */ element!(CommConnectors, 3905, ZeroOrOne, false, 0x1C0000, NotRestricted, Some(5151)),
    /*  991 */ element!(CommControllerMappings, 1840, ZeroOrOne, false, 0x0, ClassicPlatform, Some(2705)),
    /*  992 */ element!(CommControllerRef, 3115, ZeroOrOne, false, 0x0, NotRestricted, Some(2176)),
    /*  993 */ element!(CommControllers, 1825, ZeroOrOne, false, 0x1C0000, NotRestricted, Some(350)),
    /*  994 */ element!(Command, 5048, ZeroOrOne, false, 0x0, NotRestricted, Some(5570)),
    /*  995 */ element!(Commands, 186, ZeroOrOne, false, 0x1C0000, NotRestricted, Some(5557)),
    /*  996 */ element!(Commands, 664, ZeroOrOne, false, 0x0, NotRestricted, Some(3174)),
    /*  997 */ element!(Comment, 4393, ZeroOrOne, false, 0x0, NotRestricted, Some(4355)),
    /*  998 */ element!(Comment, 5078, ZeroOrOne, false, 0x0, NotRestricted, Some(4355)),
    /*  999 */ element!(CommittedBurstSize, 3494, ZeroOrOne, false, 0x0, ClassicPlatform, Some(345)),
    /* 1000 */ element!(CommittedBurstSize, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(1506)),
    /* 1001 */ element!(CommittedInformationRate, 3494, ZeroOrOne, false, 0x0, ClassicPlatform, Some(346)),
    /* 1002 */ element!(CommittedInformationRate, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(669)),
    /* 1003 */ element!(CommonProperties, 1179, ZeroOrOne, false, 0x1FFFC0, NotRestricted, Some(4056)),
    /* 1004 */ element!(CommonSignalPath, 643, One, false, 0x0, NotRestricted, None),
    /* 1005 */ element!(CommunicationBufferLocking, 646, One, false, 0x0, NotRestricted, None),
    /* 1006 */ element!(CommunicationClusterRef, 733, ZeroOrOne, false, 0x0, NotRestricted, Some(5323)),
    /* 1007 */ element!(CommunicationClusterRef, 2355, One, false, 0x0, NotRestricted, None),
    /* 1008 */ element!(CommunicationClusterRef, 4855, ZeroOrOne, false, 0x0, NotRestricted, Some(26)),
    /* 1009 */ element!(CommunicationClusterRef, 4855, ZeroOrOne, false, 0x0, NotRestricted, Some(174)),
    /* 1010 */ element!(CommunicationClusterRefs, 2356, ZeroOrOne, false, 0x0, NotRestricted, Some(5529)),
    /* 1011 */ element!(CommunicationConnectorRef, 528, ZeroOrOne, false, 0x0, NotRestricted, None),
    /* 1012 */ element!(CommunicationConnectorRef, 528, ZeroOrOne, false, 0x0, NotRestricted, Some(2039)),
    /* 1013 */ element!(CommunicationConnectorRef, 2038, ZeroOrOne, false, 0x0, NotRestricted, Some(2038)),
    /* 1014 */ element!(CommunicationConnectorRef, 2050, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(4072)),
    /* 1015 */ element!(CommunicationConnectorRef, 2383, ZeroOrOne, false, 0x0, NotRestricted, Some(2718)),
    /* 1016 */ element!(CommunicationConnectorRef, 2383, ZeroOrOne, false, 0x0, NotRestricted, Some(2719)),
    /* 1017 */ element!(CommunicationConnectorRef, 3408, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(2038)),
    /* 1018 */ element!(CommunicationConnectorRef, 3993, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(2114)),
    /* 1019 */ element!(CommunicationConnectorRef, 4316, One, false, 0x0, NotRestricted, None),
    /* 1020 */ element!(CommunicationConnectorRef, 4967, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(2040)),
    /* 1021 */ element!(CommunicationConnectorRefConditional, 650, One, false, 0x0, NotRestricted, None),
    /* 1022 */ element!(CommunicationConnectorRefs, 4317, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5094)),
    /* 1023 */ element!(CommunicationConnectors, 2897, ZeroOrOne, false, 0x0, NotRestricted, Some(3280)),
    /* 1024 */ element!(CommunicationConnectors, 2899, ZeroOrOne, false, 0x1E0000, AdaptivePlatform, Some(3281)),
    /* 1025 */ element!(CommunicationControllerMapping, 651, One, false, 0x0, NotRestricted, None),
    /* 1026 */ element!(CommunicationControllerRef, 3115, ZeroOrOne, false, 0x0, NotRestricted, Some(2041)),
    /* 1027 */ element!(CommunicationControllers, 2900, ZeroOrOne, false, 0x1C0000, AdaptivePlatform, Some(351)),
    /* 1028 */ element!(CommunicationCycle, 4935, ZeroOrOne, false, 0x0, NotRestricted, Some(2821)),
    /* 1029 */ element!(CommunicationDirection, 652, ZeroOrOne, false, 0x0, NotRestricted, Some(347)),
    /* 1030 */ element!(CommunicationDirection, 652, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(348)),
    /* 1031 */ element!(CommunicationDirection, 652, ZeroOrOne, false, 0x0, NotRestricted, Some(3571)),
    /* 1032 */ element!(CommunicationDirection, 652, ZeroOrOne, false, 0x0, NotRestricted, Some(3889)),
    /* 1033 */ element!(CommunicationMode, 4393, ZeroOrOne, false, 0x0, NotRestricted, Some(3784)),
    /* 1034 */ element!(CommunicationMode, 4393, ZeroOrOne, false, 0x0, NotRestricted, Some(3785)),
    /* 1035 */ element!(CommunicationMode, 5078, ZeroOrOne, false, 0x0, NotRestricted, Some(3784)),
    /* 1036 */ element!(CommunicationMode, 5078, ZeroOrOne, false, 0x0, NotRestricted, Some(3785)),
    /* 1037 */ element!(CommunicationResourceProps, 793, ZeroOrOne, false, 0x0, ClassicPlatform, Some(3435)),
    /* 1038 */ element!(CommunicationResourceRef, 3449, ZeroOrOne, false, 0x0, ClassicPlatform, Some(349)),
    /* 1039 */ element!(CompareType, 1186, ZeroOrOne, false, 0x0, NotRestricted, Some(4291)),
    /* 1040 */ element!(CompareType, 4139, ZeroOrOne, false, 0x0, NotRestricted, Some(3947)),
    /* 1041 */ element!(CompareType, 4159, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3947)),
    /* 1042 */ element!(CompareType, 4352, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(4290)),
    /* 1043 */ element!(CompareValue, 2485, ZeroOrOne, false, 0x0, NotRestricted, Some(4061)),
    /* 1044 */ element!(CompareValue, 4351, ZeroOrOne, false, 0x0, NotRestricted, Some(3397)),
    /* 1045 */ element!(CompareValue, 4351, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3415)),
    /* 1046 */ element!(Compiler, 653, One, false, 0x0, NotRestricted, None),
    /* 1047 */ element!(Compilers, 2589, ZeroOrOne, false, 0x0, ClassicPlatform, Some(2524)),
    /* 1048 */ element!(ComplexDeviceDriverSwComponentType, 654, One, false, 0x0, NotRestricted, None),
    /* 1049 */ element!(ComplexTypeMapping, 556, ZeroOrOne, false, 0x0, NotRestricted, Some(3436)),
    /* 1050 */ element!(ComplexTypeMapping, 3955, ZeroOrOne, false, 0x0, NotRestricted, Some(3437)),
    /* 1051 */ element!(ComponentClustering, 655, One, false, 0x0, NotRestricted, None),
    /* 1052 */ element!(ComponentImplementationRef, 4558, ZeroOrOne, false, 0x0, ClassicPlatform, Some(1943)),
    /* 1053 */ element!(ComponentIref, 657, ZeroOrOne, false, 0x0, ClassicPlatform, Some(2822)),
    /* 1054 */ element!(ComponentIref, 657, ZeroOrOne, false, 0x0, NotRestricted, Some(2827)),
    /* 1055 */ element!(ComponentIref, 657, ZeroOrOne, false, 0x0, ClassicPlatform, Some(2827)),
    /* 1056 */ element!(ComponentIref, 657, ZeroOrOne, false, 0x0, ClassicPlatform, Some(3477)),
    /* 1057 */ element!(ComponentIref, 658, One, false, 0x0, NotRestricted, None),
    /* 1058 */ element!(ComponentIref, 658, ZeroOrOne, false, 0x0, NotRestricted, Some(1826)),
    /* 1059 */ element!(ComponentIrefs, 4551, ZeroOrOne, false, 0x0, ClassicPlatform, Some(2233)),
    /* 1060 */ element!(ComponentIrefs, 4551, ZeroOrOne, false, 0x0, ClassicPlatform, Some(2256)),
    /* 1061 */ element!(ComponentQualifier, 4393, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(4027)),
    /* 1062 */ element!(ComponentQualifier, 4393, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(4287)),
    /* 1063 */ element!(ComponentRef, 4547, ZeroOrOne, false, 0x0, ClassicPlatform, Some(2294)),
    /* 1064 */ element!(ComponentRef, 4547, ZeroOrOne, false, 0x0, NotRestricted, Some(4318)),
    /* 1065 */ element!(ComponentSeparation, 661, One, false, 0x0, NotRestricted, None),
    /* 1066 */ element!(Components, 675, ZeroOrOne, false, 0x1FFFFF, NotRestricted, Some(15)),
    /* 1067 */ element!(CompositeInterface, 663, One, false, 0x0, NotRestricted, None),
    /* 1068 */ element!(CompositeNetworkRepresentation, 666, One, false, 0x0, NotRestricted, None),
    /* 1069 */ element!(CompositeNetworkRepresentations, 3939, ZeroOrOne, false, 0x180000, ClassicPlatform, Some(5332)),
    /* 1070 */ element!(CompositeNetworkRepresentations, 3939, ZeroOrOne, false, 0x180000, ClassicPlatform, Some(5333)),
    /* 1071 */ element!(CompositeRuleBasedValueSpecification, 667, One, false, 0x0, NotRestricted, None),
    /* 1072 */ element!(CompositeServiceInterfaceRef, 4017, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5571)),
    /* 1073 */ element!(CompositeTypeMappings, 588, ZeroOrOne, false, 0x0, NotRestricted, Some(1439)),
    /* 1074 */ element!(CompositionDataPrototypeRef, 670, One, false, 0x0, NotRestricted, None),
    /* 1075 */ element!(CompositionPPortToExecutablePPortMapping, 671, One, false, 0x0, NotRestricted, None),
    /* 1076 */ element!(CompositionRPortToExecutableRPortMapping, 673, One, false, 0x0, NotRestricted, None),
    /* 1077 */ element!(CompositionSwComponentType, 674, One, false, 0x0, NotRestricted, None),
    /* 1078 */ element!(CompositionSwComponentTypeRef, 680, ZeroOrOne, false, 0x0, NotRestricted, None),
    /* 1079 */ element!(CompositionSwComponentTypeRefConditional, 679, One, false, 0x0, NotRestricted, None),
    /* 1080 */ element!(CompoundPrimitiveArguments, 669, ZeroOrOne, true, 0x0, NotRestricted, Some(5554)),
    /* 1081 */ element!(CompressedSoftwarePackageSize, 3494, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5780)),
    /* 1082 */ element!(CompuConst, 682, ZeroOrOne, false, 0x0, NotRestricted, Some(5609)),
    /* 1083 */ element!(CompuDefaultValue, 682, ZeroOrOne, false, 0x0, NotRestricted, Some(4898)),
    /* 1084 */ element!(CompuDenominator, 686, ZeroOrOne, false, 0x0, NotRestricted, Some(4786)),
    /* 1085 */ element!(CompuInternalToPhys, 681, ZeroOrOne, false, 0x180000, NotRestricted, Some(5798)),
    /* 1086 */ element!(CompuInverseValue, 682, ZeroOrOne, false, 0x0, NotRestricted, Some(4797)),
    /* 1087 */ element!(CompuMethod, 684, One, false, 0x0, NotRestricted, None),
    /* 1088 */ element!(CompuMethodRef, 3518, ZeroOrOne, false, 0x0, NotRestricted, Some(1799)),
    /* 1089 */ element!(CompuMethodRef, 4432, ZeroOrOne, false, 0x0, NotRestricted, Some(356)),
    /* 1090 */ element!(CompuMethodRef, 4432, ZeroOrOne, false, 0x0, NotRestricted, Some(2823)),
    /* 1091 */ element!(CompuMethodRef, 4432, ZeroOrOne, false, 0x0, NotRestricted, Some(4773)),
    /* 1092 */ element!(CompuNumerator, 686, ZeroOrOne, false, 0x0, NotRestricted, Some(4805)),
    /* 1093 */ element!(CompuPhysToInternal, 681, ZeroOrOne, false, 0x180000, NotRestricted, Some(5572)),
    /* 1094 */ element!(CompuRationalCoeffs, 687, ZeroOrOne, false, 0x0, NotRestricted, Some(5797)),
    /* 1095 */ element!(CompuScale, 688, One, false, 0x0, NotRestricted, None),
    /* 1096 */ element!(CompuScales, 689, ZeroOrOne, false, 0x0, NotRestricted, Some(5430)),
    /* 1097 */ element!(CompuScales, 689, ZeroOrOne, true, 0x1C0000, NotRestricted, Some(5431)),
    /* 1098 */ element!(Computed, 298, ZeroOrOne, false, 0x0, NotRestricted, Some(1119)),
    /* 1099 */ element!(ConcreteClassTailoring, 690, One, false, 0x0, NotRestricted, None),
    /* 1100 */ element!(ConcretePatternEventTriggering, 691, One, false, 0x0, NotRestricted, None),
    /* 1101 */ element!(Cond, 1803, ZeroOrOne, false, 0x0, NotRestricted, Some(5663)),
    /* 1102 */ element!(Condition, 2669, ZeroOrOne, false, 0x0, NotRestricted, Some(2918)),
    /* 1103 */ element!(Condition, 2669, ZeroOrOne, false, 0x0, NotRestricted, Some(3106)),
    /* 1104 */ element!(ConditionAccess, 693, ZeroOrOne, false, 0x0, NotRestricted, Some(4299)),
    /* 1105 */ element!(ConditionFormula, 1862, ZeroOrOne, false, 0x0, ClassicPlatform, Some(840)),
    /* 1106 */ element!(ConditionalChangeNad, 694, One, false, 0x0, NotRestricted, None),
    /* 1107 */ element!(Conditions, 2247, ZeroOrOne, false, 0x0, NotRestricted, Some(482)),
    /* 1108 */ element!(ConfidenceInterval, 695, One, false, 0x0, NotRestricted, None),
    /* 1109 */ element!(ConfidenceIntervals, 218, ZeroOrOne, false, 0x0, NotRestricted, Some(1384)),
    /* 1110 */ element!(ConfidentialityOffset, 2878, ZeroOrOne, false, 0x0, NotRestricted, Some(2724)),
    /* 1111 */ element!(ConfigClass, 1870, ZeroOrOne, false, 0x0, ClassicPlatform, Some(2499)),
    /* 1112 */ element!(ConfigElementDefGlobalRef, 1924, One, false, 0x0, ClassicPlatform, Some(2709)),
    /* 1113 */ element!(ConfigElementDefLocalRef, 1924, One, false, 0x0, ClassicPlatform, Some(2710)),
    /* 1114 */ element!(ConfigVariant, 1871, ZeroOrOne, false, 0x0, ClassicPlatform, Some(2500)),
    /* 1115 */ element!(ConfigurationClassAffection, 1867, ZeroOrOne, false, 0x0, ClassicPlatform, Some(2612)),
    /* 1116 */ element!(ConfigurationHandling, 1354, ZeroOrOne, false, 0x0, NotRestricted, Some(4301)),
    /* 1117 */ element!(ConfiguredNad, 2642, ZeroOrOne, false, 0x0, ClassicPlatform, Some(5901)),
    /* 1118 */ element!(ConfirmationThreshold, 2231, ZeroOrOne, false, 0x0, NotRestricted, Some(3726)),
    /* 1119 */ element!(Conflicts, 1803, ZeroOrOne, false, 0x0, NotRestricted, Some(5395)),
    /* 1120 */ element!(ConflictsTo, 4136, ZeroOrOne, false, 0x8000, AdaptivePlatform, Some(3287)),
    /* 1121 */ element!(ConflictsTo, 4156, ZeroOrOne, false, 0x1FC000, AdaptivePlatform, Some(3288)),
    /* 1122 */ element!(Connect, 569, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3334)),
    /* 1123 */ element!(ConnectedIndicators, 1289, ZeroOrOne, false, 0x1FFFC0, NotRestricted, Some(995)),
    /* 1124 */ element!(ConnectionBundles, 4102, ZeroOrOne, false, 0x1C0000, NotRestricted, Some(295)),
    /* 1125 */ element!(ConnectionIsMandatory, 298, ZeroOrOne, false, 0x0, ClassicPlatform, Some(3971)),
    /* 1126 */ element!(ConnectionNegotiationBehavior, 2029, ZeroOrOne, false, 0x0, NotRestricted, Some(2527)),
    /* 1127 */ element!(ConnectionPrioPdus, 2642, ZeroOrOne, false, 0x0, NotRestricted, Some(4876)),
    /* 1128 */ element!(ConnectionType, 2683, ZeroOrOne, false, 0x0, NotRestricted, Some(3779)),
    /* 1129 */ element!(ConnectionType, 3169, ZeroOrOne, false, 0x0, NotRestricted, Some(506)),
    /* 1130 */ element!(Connections, 4103, ZeroOrOne, false, 0x1C0000, NotRestricted, Some(3291)),
    /* 1131 */ element!(ConnectorRef, 528, One, false, 0x0, NotRestricted, None),
    /* 1132 */ element!(ConnectorRef, 528, ZeroOrOne, false, 0x0, ClassicPlatform, Some(175)),
    /* 1133 */ element!(ConnectorRef, 528, ZeroOrOne, false, 0x0, ClassicPlatform, Some(176)),
    /* 1134 */ element!(ConnectorRef, 528, ZeroOrOne, false, 0x0, ClassicPlatform, Some(177)),
    /* 1135 */ element!(ConnectorRef, 2185, One, false, 0x0, NotRestricted, None),
    /* 1136 */ element!(ConnectorRef, 4114, ZeroOrOne, false, 0x0, NotRestricted, Some(179)),
    /* 1137 */ element!(ConnectorRefs, 2186, ZeroOrOne, false, 0x0, NotRestricted, Some(173)),
    /* 1138 */ element!(ConnectorRefs, 2226, ZeroOrOne, false, 0x0, ClassicPlatform, Some(173)),
    /* 1139 */ element!(Connectors, 676, ZeroOrOne, false, 0x1FFFFF, NotRestricted, Some(6018)),
    /* 1140 */ element!(Connectors, 1826, ZeroOrOne, false, 0x1C0000, NotRestricted, Some(110)),
    /* 1141 */ element!(ConsiderBuildNumber, 298, ZeroOrOne, false, 0x0, NotRestricted, Some(1254)),
    /* 1142 */ element!(ConsiderBuildNumber, 298, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(1254)),
    /* 1143 */ element!(ConsiderPtoStatus, 298, ZeroOrOne, false, 0x0, NotRestricted, Some(1700)),
    /* 1144 */ element!(ConsiderPtoStatus, 2231, ZeroOrOne, false, 0x0, NotRestricted, Some(3840)),
    /* 1145 */ element!(ConsistencyNeeds, 696, One, false, 0x0, NotRestricted, None),
    /* 1146 */ element!(ConsistencyNeedsBlueprintSet, 697, One, false, 0x0, NotRestricted, None),
    /* 1147 */ element!(ConsistencyNeedss, 4468, ZeroOrOne, false, 0x1C0000, NotRestricted, Some(5365)),
    /* 1148 */ element!(ConsistencyNeedss, 4468, ZeroOrOne, false, 0x1FFE00, ClassicPlatform, Some(5530)),
    /* 1149 */ element!(ConsistencyNeedss, 4468, ZeroOrOne, false, 0x1FFFF8, ClassicPlatform, Some(5530)),
    /* 1150 */ element!(ConstantMappingRef, 2652, One, false, 0x0, NotRestricted, None),
    /* 1151 */ element!(ConstantMappingRefs, 3229, ZeroOrOne, false, 0x1FFF80, NotRestricted, Some(2044)),
    /* 1152 */ element!(ConstantMemorys, 3223, ZeroOrOne, false, 0x1FFF80, NotRestricted, Some(865)),
    /* 1153 */ element!(ConstantRef, 701, ZeroOrOne, false, 0x0, NotRestricted, Some(3084)),
    /* 1154 */ element!(ConstantReference, 700, One, false, 0x0, NotRestricted, None),
    /* 1155 */ element!(ConstantSpecification, 702, One, false, 0x0, NotRestricted, None),
    /* 1156 */ element!(ConstantSpecificationMapping, 703, One, false, 0x0, NotRestricted, None),
    /* 1157 */ element!(ConstantSpecificationMappingSet, 704, One, false, 0x0, NotRestricted, None),
    /* 1158 */ element!(ConstantValueMappingRef, 2652, One, false, 0x0, NotRestricted, None),
    /* 1159 */ element!(ConstantValueMappingRefs, 2653, ZeroOrOne, false, 0x1FFF80, NotRestricted, Some(2042)),
    /* 1160 */ element!(ConstantValueMappingRefs, 2653, ZeroOrOne, false, 0x1FFF80, ClassicPlatform, Some(2043)),
    /* 1161 */ element!(ConstantValueMappingRefs, 2653, ZeroOrOne, false, 0x1FFF80, NotRestricted, Some(2165)),
    /* 1162 */ element!(ConstrLevel, 2642, ZeroOrOne, false, 0x0, NotRestricted, Some(3844)),
    /* 1163 */ element!(ConstraintRef, 3845, ZeroOrOne, false, 0x0, NotRestricted, Some(2004)),
    /* 1164 */ element!(ConstraintTailoring, 706, One, false, 0x0, NotRestricted, None),
    /* 1165 */ element!(ConstraintTailorings, 922, ZeroOrOne, false, 0x0, NotRestricted, Some(2436)),
    /* 1166 */ element!(ConstraintTailorings, 922, ZeroOrOne, false, 0x0, NotRestricted, Some(2437)),
    /* 1167 */ element!(ConsumedDdsOperations, 1009, ZeroOrOne, false, 0x180000, NotRestricted, Some(318)),
    /* 1168 */ element!(ConsumedDdsServiceEvents, 1010, ZeroOrOne, false, 0x180000, NotRestricted, Some(317)),
    /* 1169 */ element!(ConsumedEventGroup, 707, One, false, 0x0, NotRestricted, None),
    /* 1170 */ element!(ConsumedEventGroupRef, 926, One, false, 0x0, NotRestricted, None),
    /* 1171 */ element!(ConsumedEventGroupRefs, 2072, ZeroOrOne, false, 0x0, NotRestricted, Some(111)),
    /* 1172 */ element!(ConsumedEventGroups, 718, ZeroOrOne, false, 0x1C0000, NotRestricted, Some(2351)),
    /* 1173 */ element!(ConsumedProvidedServiceInstanceGroup, 709, One, false, 0x0, NotRestricted, None),
    /* 1174 */ element!(ConsumedProvidedServiceInstanceGroupRef, 713, ZeroOrOne, false, 0x0, NotRestricted, None),
    /* 1175 */ element!(ConsumedProvidedServiceInstanceGroupRefConditional, 712, One, false, 0x0, NotRestricted, None),
    /* 1176 */ element!(ConsumedServiceInstance, 714, One, false, 0x0, NotRestricted, None),
    /* 1177 */ element!(ConsumedServiceInstanceRef, 722, ZeroOrOne, false, 0x0, NotRestricted, None),
    /* 1178 */ element!(ConsumedServiceInstanceRefConditional, 721, One, false, 0x0, NotRestricted, None),
    /* 1179 */ element!(ConsumedServiceInstances, 171, ZeroOrOne, false, 0x0, NotRestricted, Some(425)),
    /* 1180 */ element!(ConsumedServiceInstances, 710, ZeroOrOne, false, 0x1C0000, NotRestricted, Some(4918)),
    /* 1181 */ element!(ContainedArElementRef, 4145, One, false, 0x0, NotRestricted, None),
    /* 1182 */ element!(ContainedArElementRefs, 4146, ZeroOrOne, false, 0x1FFC00, AdaptivePlatform, Some(5228)),
    /* 1183 */ element!(ContainedFibexElementRef, 4147, One, false, 0x0, NotRestricted, None),
    /* 1184 */ element!(ContainedFibexElementRefs, 4148, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3442)),
    /* 1185 */ element!(ContainedIPduProps, 725, One, false, 0x0, NotRestricted, None),
    /* 1186 */ element!(ContainedIPduProps, 725, ZeroOrOne, false, 0x0, NotRestricted, Some(776)),
    /* 1187 */ element!(ContainedIPduTriggeringPropss, 728, ZeroOrOne, false, 0x0, NotRestricted, Some(536)),
    /* 1188 */ element!(ContainedISignalIPduGroupRef, 1820, One, false, 0x0, NotRestricted, None),
    /* 1189 */ element!(ContainedISignalIPduGroupRefs, 2470, ZeroOrOne, false, 0x0, NotRestricted, Some(126)),
    /* 1190 */ element!(ContainedPackageElementRef, 4149, One, false, 0x0, NotRestricted, None),
    /* 1191 */ element!(ContainedPackageElementRefs, 4150, ZeroOrOne, false, 0x1FFC00, AdaptivePlatform, Some(4981)),
    /* 1192 */ element!(ContainedPduTriggeringRef, 726, ZeroOrOne, false, 0x0, NotRestricted, Some(1815)),
    /* 1193 */ element!(ContainedPduTriggeringRef, 3889, One, false, 0x0, NotRestricted, None),
    /* 1194 */ element!(ContainedPduTriggeringRefs, 729, ZeroOrOne, false, 0x0, NotRestricted, Some(3204)),
    /* 1195 */ element!(ContainedProcessRef, 2384, One, false, 0x0, NotRestricted, None),
    /* 1196 */ element!(ContainedProcessRef, 3551, One, false, 0x0, NotRestricted, None),
    /* 1197 */ element!(ContainedProcessRefs, 4151, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5206)),
    /* 1198 */ element!(ContainedProcessRefs, 4162, ZeroOrOne, false, 0x1FC000, AdaptivePlatform, Some(5204)),
    /* 1199 */ element!(ContainerIPdu, 727, One, false, 0x0, NotRestricted, None),
    /* 1200 */ element!(ContainerIPduHeaderByteOrder, 474, ZeroOrOne, false, 0x0, ClassicPlatform, Some(598)),
    /* 1201 */ element!(ContainerTimeout, 2229, ZeroOrOne, false, 0x0, NotRestricted, Some(6004)),
    /* 1202 */ element!(ContainerTrigger, 731, ZeroOrOne, false, 0x0, NotRestricted, Some(524)),
    /* 1203 */ element!(Containers, 105, ZeroOrOne, false, 0x100000, AdaptivePlatform, Some(3349)),
    /* 1204 */ element!(Containers, 105, ZeroOrOne, false, 0x100000, AdaptivePlatform, Some(3378)),
    /* 1205 */ element!(Containers, 119, ZeroOrOne, false, 0x100000, AdaptivePlatform, Some(3349)),
    /* 1206 */ element!(Containers, 119, ZeroOrOne, false, 0x100000, AdaptivePlatform, Some(3378)),
    /* 1207 */ element!(Containers, 1878, ZeroOrOne, false, 0x1FFFFF, ClassicPlatform, Some(103)),
    /* 1208 */ element!(Containers, 1891, ZeroOrOne, false, 0x0, ClassicPlatform, Some(906)),
    /* 1209 */ element!(Containers, 1911, ZeroOrOne, false, 0x1FFF80, ClassicPlatform, Some(105)),
    /* 1210 */ element!(ContentType, 4393, ZeroOrOne, false, 0x0, NotRestricted, Some(909)),
    /* 1211 */ element!(ContentType, 4393, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(4163)),
    /* 1212 */ element!(ContentUri, 4978, ZeroOrOne, false, 0x0, NotRestricted, Some(4076)),
    /* 1213 */ element!(ContentUri, 4978, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(4076)),
    /* 1214 */ element!(ContextApplicationRecordElementRef, 200, Any, false, 0x0, AdaptivePlatform, None),
    /* 1215 */ element!(ContextApplicationRecordElementRef, 200, Any, false, 0x0, AdaptivePlatform, Some(5558)),
    /* 1216 */ element!(ContextAtomicComponentRef, 4918, ZeroOrOne, false, 0x0, NotRestricted, None),
    /* 1217 */ element!(ContextBswImplementationRef, 3026, ZeroOrOne, false, 0x0, ClassicPlatform, Some(2494)),
    /* 1218 */ element!(ContextComponentPrototypeRef, 2081, Any, true, 0x0, AdaptivePlatform, None),
    /* 1219 */ element!(ContextComponentPrototypeRef, 3346, Any, true, 0x0, AdaptivePlatform, None),
    /* 1220 */ element!(ContextComponentPrototypeRef, 3360, Any, false, 0x0, AdaptivePlatform, None),
    /* 1221 */ element!(ContextComponentPrototypeRef, 3482, Any, true, 0x0, AdaptivePlatform, None),
    /* 1222 */ element!(ContextComponentPrototypeRef, 3568, Any, true, 0x0, AdaptivePlatform, None),
    /* 1223 */ element!(ContextComponentPrototypeRef, 3597, Any, true, 0x0, AdaptivePlatform, None),
    /* 1224 */ element!(ContextComponentPrototypeRef, 3791, Any, true, 0x0, AdaptivePlatform, None),
    /* 1225 */ element!(ContextComponentPrototypeRef, 4918, Any, true, 0x0, NotRestricted, None),
    /* 1226 */ element!(ContextComponentRef, 660, ZeroOrOne, false, 0x0, NotRestricted, None),
    /* 1227 */ element!(ContextComponentRef, 660, Any, true, 0x0, NotRestricted, None),
    /* 1228 */ element!(ContextComponentRef, 660, Any, true, 0x0, NotRestricted, Some(2827)),
    /* 1229 */ element!(ContextComponentRef, 940, Any, true, 0x0, NotRestricted, None),
    /* 1230 */ element!(ContextComponentRef, 963, Any, true, 0x0, NotRestricted, None),
    /* 1231 */ element!(ContextComponentRef, 1942, One, false, 0x0, NotRestricted, None),
    /* 1232 */ element!(ContextComponentRef, 1942, Any, false, 0x0, AdaptivePlatform, None),
    /* 1233 */ element!(ContextComponentRef, 3035, Any, true, 0x0, NotRestricted, None),
    /* 1234 */ element!(ContextComponentRef, 3035, Any, false, 0x0, NotRestricted, Some(2507)),
    /* 1235 */ element!(ContextComponentRef, 3184, Any, false, 0x0, NotRestricted, None),
    /* 1236 */ element!(ContextComponentRef, 3217, Any, true, 0x0, NotRestricted, None),
    /* 1237 */ element!(ContextComponentRef, 3452, Any, true, 0x0, NotRestricted, None),
    /* 1238 */ element!(ContextComponentRef, 4918, Any, true, 0x0, NotRestricted, Some(5731)),
    /* 1239 */ element!(ContextComponentRefs, 1943, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5621)),
    /* 1240 */ element!(ContextCompositionRef, 659, ZeroOrOne, false, 0x0, NotRestricted, None),
    /* 1241 */ element!(ContextCompositionRef, 3198, ZeroOrOne, false, 0x0, NotRestricted, None),
    /* 1242 */ element!(ContextCompositionRef, 3218, ZeroOrOne, false, 0x0, NotRestricted, None),
    /* 1243 */ element!(ContextCompositionRef, 3453, ZeroOrOne, false, 0x0, NotRestricted, None),
    /* 1244 */ element!(ContextCompositionRef, 4919, ZeroOrOne, false, 0x0, NotRestricted, Some(5686)),
    /* 1245 */ element!(ContextDataElementIdentifications, 3926, ZeroOrOne, false, 0x100000, NotRestricted, Some(4933)),
    /* 1246 */ element!(ContextDataElements, 3897, ZeroOrOne, true, 0x100000, NotRestricted, Some(902)),
    /* 1247 */ element!(ContextDataPrototypeInCsRef, 936, Any, true, 0x0, ClassicPlatform, None),
    /* 1248 */ element!(ContextDataPrototypeInSrRef, 936, Any, true, 0x0, ClassicPlatform, None),
    /* 1249 */ element!(ContextDataPrototypeRef, 167, Any, true, 0x0, NotRestricted, None),
    /* 1250 */ element!(ContextDataPrototypeRef, 214, One, false, 0x0, NotRestricted, None),
    /* 1251 */ element!(ContextDataPrototypeRef, 941, Any, false, 0x0, NotRestricted, None),
    /* 1252 */ element!(ContextDataPrototypeRef, 945, Any, true, 0x0, AdaptivePlatform, None),
    /* 1253 */ element!(ContextDataPrototypeRef, 953, Any, true, 0x0, AdaptivePlatform, None),
    /* 1254 */ element!(ContextDataPrototypeRef, 959, Any, false, 0x0, AdaptivePlatform, None),
    /* 1255 */ element!(ContextDataPrototypeRef, 964, Any, true, 0x0, NotRestricted, None),
    /* 1256 */ element!(ContextDataPrototypeRef, 1946, One, false, 0x0, NotRestricted, None),
    /* 1257 */ element!(ContextDataPrototypeRef, 2594, One, false, 0x0, NotRestricted, None),
    /* 1258 */ element!(ContextDataPrototypeRef, 2611, One, false, 0x0, NotRestricted, None),
    /* 1259 */ element!(ContextDataPrototypeRef, 3462, One, false, 0x0, NotRestricted, None),
    /* 1260 */ element!(ContextDataPrototypeRef, 5022, Any, true, 0x0, NotRestricted, Some(4775)),
    /* 1261 */ element!(ContextDataPrototypeRef, 5022, Any, true, 0x0, NotRestricted, Some(4853)),
    /* 1262 */ element!(ContextDataPrototypeRef, 5024, Any, true, 0x0, NotRestricted, None),
    /* 1263 */ element!(ContextDataPrototypeRef, 5024, Any, true, 0x0, NotRestricted, Some(5343)),
    /* 1264 */ element!(ContextDataPrototypeRefs, 211, ZeroOrOne, true, 0x0, NotRestricted, Some(4706)),
    /* 1265 */ element!(ContextDataPrototypeRefs, 216, ZeroOrOne, true, 0x0, NotRestricted, Some(4706)),
    /* 1266 */ element!(ContextDataPrototypeRefs, 1944, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(4706)),
    /* 1267 */ element!(ContextDataPrototypeRefs, 2596, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(4968)),
    /* 1268 */ element!(ContextDataPrototypeRefs, 3460, ZeroOrOne, true, 0x0, AdaptivePlatform, Some(4706)),
    /* 1269 */ element!(ContextDataSource, 3901, ZeroOrOne, false, 0x0, NotRestricted, Some(4286)),
    /* 1270 */ element!(ContextDatas, 3911, ZeroOrOne, false, 0x1C0000, NotRestricted, Some(3395)),
    /* 1271 */ element!(ContextDescription, 4393, ZeroOrOne, false, 0x0, ClassicPlatform, Some(3525)),
    /* 1272 */ element!(ContextDescription, 4393, ZeroOrOne, false, 0x0, NotRestricted, Some(3525)),
    /* 1273 */ element!(ContextElementRef, 82, Any, true, 0x0, NotRestricted, Some(4760)),
    /* 1274 */ element!(ContextElementRef, 1442, One, false, 0x0, NotRestricted, None),
    /* 1275 */ element!(ContextElementRefs, 1441, ZeroOrOne, true, 0x0, NotRestricted, Some(5578)),
    /* 1276 */ element!(ContextId, 4393, ZeroOrOne, false, 0x0, ClassicPlatform, Some(4014)),
    /* 1277 */ element!(ContextId, 4393, ZeroOrOne, false, 0x0, NotRestricted, Some(4015)),
    /* 1278 */ element!(ContextImplementationDataElementRef, 2598, One, false, 0x0, NotRestricted, None),
    /* 1279 */ element!(ContextImplementationDataElementRef, 2602, One, false, 0x0, NotRestricted, None),
    /* 1280 */ element!(ContextImplementationDataElementRefs, 2599, ZeroOrOne, true, 0x0, NotRestricted, Some(4706)),
    /* 1281 */ element!(ContextImplementationDataElementRefs, 2603, ZeroOrOne, true, 0x0, NotRestricted, Some(4706)),
    /* 1282 */ element!(ContextLimitationRef, 331, One, false, 0x0, NotRestricted, None),
    /* 1283 */ element!(ContextLimitationRefs, 332, ZeroOrOne, false, 0x0, NotRestricted, Some(2878)),
    /* 1284 */ element!(ContextLimitationRefs, 332, ZeroOrOne, false, 0x0, NotRestricted, Some(2879)),
    /* 1285 */ element!(ContextLimitationRefs, 332, ZeroOrOne, false, 0x0, NotRestricted, Some(2880)),
    /* 1286 */ element!(ContextModeDeclarationGroupPrototypeRef, 2162, ZeroOrOne, false, 0x0, AdaptivePlatform, None),
    /* 1287 */ element!(ContextModeDeclarationGroupPrototypeRef, 2296, ZeroOrOne, false, 0x0, AdaptivePlatform, None),
    /* 1288 */ element!(ContextModeDeclarationGroupPrototypeRef, 3029, ZeroOrOne, false, 0x0, NotRestricted, None),
    /* 1289 */ element!(ContextModeDeclarationGroupPrototypeRef, 3032, ZeroOrOne, false, 0x0, AdaptivePlatform, None),
    /* 1290 */ element!(ContextModeDeclarationGroupPrototypeRef, 3039, ZeroOrOne, false, 0x0, NotRestricted, None),
    /* 1291 */ element!(ContextModeDeclarationGroupPrototypeRef, 3199, ZeroOrOne, false, 0x0, NotRestricted, Some(2571)),
    /* 1292 */ element!(ContextModeDeclarationGroupRef, 3039, ZeroOrOne, false, 0x0, NotRestricted, None),
    /* 1293 */ element!(ContextModeDeclarationGroupRef, 3199, ZeroOrOne, false, 0x0, NotRestricted, None),
    /* 1294 */ element!(ContextOperationRef, 3180, ZeroOrOne, false, 0x0, NotRestricted, None),
    /* 1295 */ element!(ContextPPortPrototypeRef, 3569, ZeroOrOne, false, 0x0, AdaptivePlatform, None),
    /* 1296 */ element!(ContextPPortRef, 3200, ZeroOrOne, false, 0x0, NotRestricted, None),
    /* 1297 */ element!(ContextPPortRef, 3204, ZeroOrOne, false, 0x0, NotRestricted, None),
    /* 1298 */ element!(ContextPortPrototypeRef, 2981, ZeroOrOne, false, 0x0, AdaptivePlatform, None),
    /* 1299 */ element!(ContextPortPrototypeRef, 3002, ZeroOrOne, false, 0x0, AdaptivePlatform, None),
    /* 1300 */ element!(ContextPortPrototypeRef, 3036, ZeroOrOne, false, 0x0, NotRestricted, Some(4818)),
    /* 1301 */ element!(ContextPortPrototypeRef, 4920, ZeroOrOne, false, 0x0, NotRestricted, Some(5374)),
    /* 1302 */ element!(ContextPortPrototypeRef, 5025, ZeroOrOne, false, 0x0, NotRestricted, None),
    /* 1303 */ element!(ContextPortRef, 942, ZeroOrOne, false, 0x0, NotRestricted, None),
    /* 1304 */ element!(ContextPortRef, 960, ZeroOrOne, false, 0x0, AdaptivePlatform, None),
    /* 1305 */ element!(ContextPortRef, 965, ZeroOrOne, false, 0x0, NotRestricted, Some(5460)),
    /* 1306 */ element!(ContextPortRef, 3036, ZeroOrOne, false, 0x0, NotRestricted, None),
    /* 1307 */ element!(ContextPortRef, 3036, ZeroOrOne, false, 0x0, NotRestricted, Some(2582)),
    /* 1308 */ element!(ContextPortRef, 3219, ZeroOrOne, false, 0x0, NotRestricted, None),
    /* 1309 */ element!(ContextPortRef, 3433, ZeroOrOne, false, 0x0, NotRestricted, None),
    /* 1310 */ element!(ContextPortRef, 3443, ZeroOrOne, false, 0x0, NotRestricted, None),
    /* 1311 */ element!(ContextPortRef, 3592, ZeroOrOne, false, 0x0, NotRestricted, None),
    /* 1312 */ element!(ContextPortRef, 4920, ZeroOrOne, false, 0x0, NotRestricted, Some(5459)),
    /* 1313 */ element!(ContextRPortPrototypeRef, 2079, ZeroOrOne, false, 0x0, AdaptivePlatform, None),
    /* 1314 */ element!(ContextRPortPrototypeRef, 3347, ZeroOrOne, false, 0x0, AdaptivePlatform, None),
    /* 1315 */ element!(ContextRPortPrototypeRef, 3353, ZeroOrOne, false, 0x0, AdaptivePlatform, None),
    /* 1316 */ element!(ContextRPortPrototypeRef, 3361, ZeroOrOne, false, 0x0, AdaptivePlatform, None),
    /* 1317 */ element!(ContextRPortPrototypeRef, 3668, ZeroOrOne, false, 0x0, AdaptivePlatform, None),
    /* 1318 */ element!(ContextRPortPrototypeRef, 4915, ZeroOrOne, false, 0x0, AdaptivePlatform, None),
    /* 1319 */ element!(ContextRPortRef, 3592, ZeroOrOne, false, 0x0, NotRestricted, None),
    /* 1320 */ element!(ContextRef, 660, Any, true, 0x0, NotRestricted, None),
    /* 1321 */ element!(ContextRef, 3225, ZeroOrOne, false, 0x0, NotRestricted, Some(2826)),
    /* 1322 */ element!(ContextRootComponentRef, 943, ZeroOrOne, false, 0x0, NotRestricted, None),
    /* 1323 */ element!(ContextRootCompositionRef, 966, ZeroOrOne, false, 0x0, NotRestricted, None),
    /* 1324 */ element!(ContextRootCompositionRef, 3790, ZeroOrOne, false, 0x0, ClassicPlatform, None),
    /* 1325 */ element!(ContextRootCompositionRef, 4919, ZeroOrOne, false, 0x0, NotRestricted, None),
    /* 1326 */ element!(ContextRootSwClusterDesignComponentPrototypeRef, 3209, ZeroOrOne, false, 0x0, AdaptivePlatform, None),
    /* 1327 */ element!(ContextRootSwComponentPrototypeRef, 2080, ZeroOrOne, false, 0x0, AdaptivePlatform, None),
    /* 1328 */ element!(ContextRootSwComponentPrototypeRef, 3003, ZeroOrOne, false, 0x0, AdaptivePlatform, None),
    /* 1329 */ element!(ContextRootSwComponentPrototypeRef, 3348, ZeroOrOne, false, 0x0, AdaptivePlatform, None),
    /* 1330 */ element!(ContextRootSwComponentPrototypeRef, 3362, ZeroOrOne, false, 0x0, AdaptivePlatform, None),
    /* 1331 */ element!(ContextRootSwComponentPrototypeRef, 3483, ZeroOrOne, false, 0x0, AdaptivePlatform, None),
    /* 1332 */ element!(ContextRootSwComponentPrototypeRef, 3570, ZeroOrOne, false, 0x0, AdaptivePlatform, None),
    /* 1333 */ element!(ContextRootSwComponentPrototypeRef, 3598, ZeroOrOne, false, 0x0, AdaptivePlatform, None),
    /* 1334 */ element!(ContextRootSwComponentPrototypeRef, 4916, ZeroOrOne, false, 0x0, AdaptivePlatform, None),
    /* 1335 */ element!(ContextRootSwCompositionRef, 3198, ZeroOrOne, false, 0x0, NotRestricted, None),
    /* 1336 */ element!(ContextSwComponentPrototypeRef, 963, Any, false, 0x0, NotRestricted, None),
    /* 1337 */ element!(ContextSwComponentPrototypeRef, 2081, Any, true, 0x0, AdaptivePlatform, None),
    /* 1338 */ element!(ContextSwComponentPrototypeRef, 3035, Any, true, 0x0, NotRestricted, None),
    /* 1339 */ element!(ContextSwComponentPrototypeRef, 3210, Any, true, 0x0, AdaptivePlatform, None),
    /* 1340 */ element!(ContextSwComponentPrototypeRef, 4918, Any, true, 0x0, NotRestricted, Some(5651)),
    /* 1341 */ element!(ContextSwComponentRef, 3791, Any, true, 0x0, ClassicPlatform, None),
    /* 1342 */ element!(ContextSwcPrototypeRef, 3035, One, false, 0x0, NotRestricted, None),
    /* 1343 */ element!(ContextSwcPrototypeRefs, 2604, ZeroOrOne, true, 0x0, NotRestricted, Some(4769)),
    /* 1344 */ element!(ContextTypeList, 4393, One, false, 0x0, NotRestricted, None),
    /* 1345 */ element!(ContextTypeLists, 3924, ZeroOrOne, true, 0x0, NotRestricted, Some(4207)),
    /* 1346 */ element!(Contexts, 1699, ZeroOrOne, false, 0x1E0000, NotRestricted, Some(795)),
    /* 1347 */ element!(Contexts, 1805, ZeroOrOne, false, 0x0, NotRestricted, Some(4776)),
    /* 1348 */ element!(ContractVersion, 4394, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(4121)),
    /* 1349 */ element!(ControlConsumedEventGroupRef, 4086, One, false, 0x0, NotRestricted, None),
    /* 1350 */ element!(ControlConsumedEventGroupRefs, 4087, ZeroOrOne, false, 0x0, ClassicPlatform, Some(2080)),
    /* 1351 */ element!(ControlEnableMaskBits, 1371, ZeroOrOne, false, 0x0, NotRestricted, Some(3389)),
    /* 1352 */ element!(ControlOptionRecordPresent, 298, ZeroOrOne, false, 0x0, NotRestricted, Some(5594)),
    /* 1353 */ element!(ControlPncRef, 4088, One, false, 0x0, NotRestricted, None),
    /* 1354 */ element!(ControlPncRefs, 4089, ZeroOrOne, false, 0x180000, ClassicPlatform, Some(2121)),
    /* 1355 */ element!(ControlProvidedEventGroupRef, 4090, One, false, 0x0, NotRestricted, None),
    /* 1356 */ element!(ControlProvidedEventGroupRefs, 4091, ZeroOrOne, false, 0x0, ClassicPlatform, Some(2222)),
    /* 1357 */ element!(ControlledDataElementRef, 1207, One, false, 0x0, NotRestricted, None),
    /* 1358 */ element!(ControlledDataElementRefs, 1208, ZeroOrOne, false, 0x0, NotRestricted, Some(5224)),
    /* 1359 */ element!(ControlledFidRef, 2299, ZeroOrOne, false, 0x0, NotRestricted, Some(5229)),
    /* 1360 */ element!(ControlledHwElementRef, 4555, ZeroOrOne, false, 0x0, ClassicPlatform, Some(1668)),
    /* 1361 */ element!(ControllerRef, 3115, ZeroOrOne, false, 0x0, ClassicPlatform, Some(180)),
    /* 1362 */ element!(CoreId, 3494, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(4065)),
    /* 1363 */ element!(Cores, 3560, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5559)),
    /* 1364 */ element!(CountProfile, 4393, ZeroOrOne, false, 0x0, NotRestricted, Some(3717)),
    /* 1365 */ element!(CounterBasedFdcThresholdStorageValue, 2642, ZeroOrOne, false, 0x0, NotRestricted, Some(5855)),
    /* 1366 */ element!(CounterDecrementStepSize, 2231, ZeroOrOne, false, 0x0, NotRestricted, Some(5847)),
    /* 1367 */ element!(CounterFailedThreshold, 2231, ZeroOrOne, false, 0x0, NotRestricted, Some(5839)),
    /* 1368 */ element!(CounterIncrementStepSize, 2231, ZeroOrOne, false, 0x0, NotRestricted, Some(5848)),
    /* 1369 */ element!(CounterJumpDown, 2231, ZeroOrOne, false, 0x0, NotRestricted, Some(5836)),
    /* 1370 */ element!(CounterJumpDownValue, 2231, ZeroOrOne, false, 0x0, NotRestricted, Some(5846)),
    /* 1371 */ element!(CounterJumpUp, 2231, ZeroOrOne, false, 0x0, NotRestricted, Some(5837)),
    /* 1372 */ element!(CounterJumpUpValue, 2231, ZeroOrOne, false, 0x0, NotRestricted, Some(5845)),
    /* 1373 */ element!(CounterOffset, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(199)),
    /* 1374 */ element!(CounterOffset, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(1635)),
    /* 1375 */ element!(CounterPassedThreshold, 2231, ZeroOrOne, false, 0x0, NotRestricted, Some(5840)),
    /* 1376 */ element!(CoupledClusterRef, 505, One, false, 0x0, NotRestricted, None),
    /* 1377 */ element!(CoupledClusterRef, 2206, One, false, 0x0, NotRestricted, None),
    /* 1378 */ element!(CoupledClusterRef, 4961, One, false, 0x0, NotRestricted, None),
    /* 1379 */ element!(CoupledClusterRefs, 506, ZeroOrOne, false, 0x0, ClassicPlatform, Some(2000)),
    /* 1380 */ element!(CoupledClusterRefs, 2207, ZeroOrOne, false, 0x0, ClassicPlatform, Some(2001)),
    /* 1381 */ element!(CoupledClusterRefs, 4962, ZeroOrOne, false, 0x0, ClassicPlatform, Some(2002)),
    /* 1382 */ element!(CouplingElement, 732, One, false, 0x0, NotRestricted, None),
    /* 1383 */ element!(CouplingElementDetails, 734, ZeroOrOne, false, 0x180000, ClassicPlatform, Some(809)),
    /* 1384 */ element!(CouplingElementSwitchDetails, 740, One, false, 0x0, NotRestricted, None),
    /* 1385 */ element!(CouplingFlag, 298, ZeroOrOne, false, 0x0, ClassicPlatform, Some(441)),
    /* 1386 */ element!(CouplingPort, 746, One, false, 0x0, NotRestricted, None),
    /* 1387 */ element!(CouplingPortAsynchronousTrafficShaper, 747, One, false, 0x0, NotRestricted, None),
    /* 1388 */ element!(CouplingPortConnection, 749, One, false, 0x0, NotRestricted, None),
    /* 1389 */ element!(CouplingPortConnections, 2016, ZeroOrOne, false, 0x1FFF00, NotRestricted, Some(2434)),
    /* 1390 */ element!(CouplingPortCreditBasedShaper, 752, One, false, 0x0, NotRestricted, None),
    /* 1391 */ element!(CouplingPortDetails, 753, ZeroOrOne, false, 0x0, NotRestricted, Some(531)),
    /* 1392 */ element!(CouplingPortEnhancedTrafficShaper, 760, One, false, 0x0, NotRestricted, None),
    /* 1393 */ element!(CouplingPortFifo, 761, One, false, 0x0, NotRestricted, None),
    /* 1394 */ element!(CouplingPortRatePolicy, 770, One, false, 0x0, NotRestricted, None),
    /* 1395 */ element!(CouplingPortRef, 774, ZeroOrOne, false, 0x0, NotRestricted, None),
    /* 1396 */ element!(CouplingPortRef, 2002, ZeroOrOne, false, 0x0, NotRestricted, Some(784)),
    /* 1397 */ element!(CouplingPortRefConditional, 773, One, false, 0x0, NotRestricted, None),
    /* 1398 */ element!(CouplingPortRole, 775, ZeroOrOne, false, 0x0, NotRestricted, Some(678)),
    /* 1399 */ element!(CouplingPortScheduler, 776, One, false, 0x0, NotRestricted, None),
    /* 1400 */ element!(CouplingPortShaper, 779, One, false, 0x0, NotRestricted, None),
    /* 1401 */ element!(CouplingPortSpeed, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(442)),
    /* 1402 */ element!(CouplingPortStartupActiveTime, 2229, ZeroOrOne, false, 0x0, NotRestricted, Some(2800)),
    /* 1403 */ element!(CouplingPortStructuralElements, 754, ZeroOrOne, false, 0x0, NotRestricted, Some(342)),
    /* 1404 */ element!(CouplingPortSwitchoffDelay, 2229, ZeroOrOne, false, 0x0, NotRestricted, Some(2652)),
    /* 1405 */ element!(CouplingPortTrafficClassAssignment, 781, One, false, 0x0, NotRestricted, None),
    /* 1406 */ element!(CouplingPorts, 735, ZeroOrOne, false, 0x1FFF00, NotRestricted, Some(1143)),
    /* 1407 */ element!(CouplingPorts, 735, ZeroOrOne, false, 0x0, NotRestricted, Some(1654)),
    /* 1408 */ element!(CouplingType, 737, ZeroOrOne, false, 0x0, NotRestricted, Some(877)),
    /* 1409 */ element!(CpSoftwareCluster, 786, One, false, 0x0, NotRestricted, None),
    /* 1410 */ element!(CpSoftwareClusterBinaryManifestDescriptor, 787, One, false, 0x0, NotRestricted, None),
    /* 1411 */ element!(CpSoftwareClusterCommunicationResource, 792, One, false, 0x0, NotRestricted, None),
    /* 1412 */ element!(CpSoftwareClusterMappingSet, 794, One, false, 0x0, NotRestricted, None),
    /* 1413 */ element!(CpSoftwareClusterRef, 4672, ZeroOrOne, false, 0x0, NotRestricted, None),
    /* 1414 */ element!(CpSoftwareClusterRef, 4672, ZeroOrOne, false, 0x0, ClassicPlatform, Some(4996)),
    /* 1415 */ element!(CpSoftwareClusterRefConditional, 796, One, false, 0x0, NotRestricted, None),
    /* 1416 */ element!(CpSoftwareClusterResourcePool, 798, One, false, 0x0, NotRestricted, None),
    /* 1417 */ element!(CpSoftwareClusterResourceRef, 822, ZeroOrOne, false, 0x0, ClassicPlatform, Some(5126)),
    /* 1418 */ element!(CpSoftwareClusterResourceRef, 822, ZeroOrOne, false, 0x0, ClassicPlatform, Some(5496)),
    /* 1419 */ element!(CpSoftwareClusterResourceToApplicationPartitionMapping, 801, One, false, 0x0, NotRestricted, None),
    /* 1420 */ element!(CpSoftwareClusterServiceResource, 803, One, false, 0x0, NotRestricted, None),
    /* 1421 */ element!(CpSoftwareClusterToApplicationPartitionMapping, 808, One, false, 0x0, NotRestricted, None),
    /* 1422 */ element!(CpSoftwareClusterToEcuInstanceMapping, 812, One, false, 0x0, NotRestricted, None),
    /* 1423 */ element!(CpSoftwareClusterToResourceMapping, 816, One, false, 0x0, NotRestricted, None),
    /* 1424 */ element!(CpSwClusterResourceToDiagDataElemMapping, 819, One, false, 0x0, NotRestricted, None),
    /* 1425 */ element!(CpSwClusterResourceToDiagFunctionIdMapping, 820, One, false, 0x0, NotRestricted, None),
    /* 1426 */ element!(CpSwClusterToDiagEventMapping, 821, One, false, 0x0, NotRestricted, None),
    /* 1427 */ element!(CpSwClusterToDiagRoutineSubfunctionMapping, 823, One, false, 0x0, NotRestricted, None),
    /* 1428 */ element!(CppImplementationDataType, 825, One, false, 0x0, NotRestricted, None),
    /* 1429 */ element!(CppImplementationDataTypeElement, 826, One, false, 0x0, NotRestricted, None),
    /* 1430 */ element!(CppTemplateArgument, 831, One, false, 0x0, NotRestricted, None),
    /* 1431 */ element!(CpuUsage, 3494, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(226)),
    /* 1432 */ element!(CrcCorrectionField, 298, ZeroOrOne, false, 0x0, NotRestricted, Some(437)),
    /* 1433 */ element!(CrcDomainNumber, 298, ZeroOrOne, false, 0x0, NotRestricted, Some(926)),
    /* 1434 */ element!(CrcFlags, 2005, ZeroOrOne, false, 0x0, NotRestricted, Some(607)),
    /* 1435 */ element!(CrcMessageLength, 298, ZeroOrOne, false, 0x0, NotRestricted, Some(1514)),
    /* 1436 */ element!(CrcOffset, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(198)),
    /* 1437 */ element!(CrcOffset, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(1632)),
    /* 1438 */ element!(CrcPreciseOriginTimestamp, 298, ZeroOrOne, false, 0x0, NotRestricted, Some(1761)),
    /* 1439 */ element!(CrcSecured, 2352, ZeroOrOne, false, 0x0, NotRestricted, Some(851)),
    /* 1440 */ element!(CrcSequenceId, 298, ZeroOrOne, false, 0x0, NotRestricted, Some(2365)),
    /* 1441 */ element!(CrcSourcePortIdentity, 298, ZeroOrOne, false, 0x0, NotRestricted, Some(2427)),
    /* 1442 */ element!(CrcValidated, 2353, ZeroOrOne, false, 0x0, NotRestricted, Some(852)),
    /* 1443 */ element!(CreateEcuWakeupSource, 298, ZeroOrOne, false, 0x0, NotRestricted, Some(1257)),
    /* 1444 */ element!(CreatedDatas, 439, ZeroOrOne, false, 0x0, NotRestricted, Some(5512)),
    /* 1445 */ element!(CrfPull, 2577, ZeroOrOne, false, 0x0, NotRestricted, Some(819)),
    /* 1446 */ element!(CrfType, 2578, ZeroOrOne, false, 0x0, NotRestricted, Some(820)),
    /* 1447 */ element!(CryptoAlgId, 4393, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3592)),
    /* 1448 */ element!(CryptoAlgId, 4393, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3593)),
    /* 1449 */ element!(CryptoAlgoConfig, 2879, ZeroOrOne, false, 0x0, NotRestricted, Some(443)),
    /* 1450 */ element!(CryptoAlgorithmId, 4393, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(4143)),
    /* 1451 */ element!(CryptoAlgorithmString, 4393, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3673)),
    /* 1452 */ element!(CryptoCertificate, 834, One, false, 0x0, NotRestricted, None),
    /* 1453 */ element!(CryptoCertificateInterface, 837, One, false, 0x0, NotRestricted, None),
    /* 1454 */ element!(CryptoCertificateKeySlotNeeds, 838, One, false, 0x0, NotRestricted, None),
    /* 1455 */ element!(CryptoCertificateRef, 842, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(2047)),
    /* 1456 */ element!(CryptoCertificateRef, 842, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5246)),
    /* 1457 */ element!(CryptoCertificateToCryptoKeySlotMapping, 839, One, false, 0x0, NotRestricted, None),
    /* 1458 */ element!(CryptoCertificateToPortPrototypeMapping, 841, One, false, 0x0, NotRestricted, None),
    /* 1459 */ element!(CryptoCertificates, 874, ZeroOrOne, false, 0x1C0000, AdaptivePlatform, Some(1378)),
    /* 1460 */ element!(CryptoDesignToCryptoDriverMappings, 875, ZeroOrOne, false, 0x1C00, AdaptivePlatform, Some(3368)),
    /* 1461 */ element!(CryptoDriver, 843, One, false, 0x0, NotRestricted, None),
    /* 1462 */ element!(CryptoDriverToCryptoJobMapping, 844, One, false, 0x0, NotRestricted, None),
    /* 1463 */ element!(CryptoDriverToCryptoJobMappings, 876, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3369)),
    /* 1464 */ element!(CryptoEllipticCurveProps, 846, One, false, 0x0, NotRestricted, None),
    /* 1465 */ element!(CryptoJob, 847, One, false, 0x0, NotRestricted, None),
    /* 1466 */ element!(CryptoJobRef, 4832, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5585)),
    /* 1467 */ element!(CryptoJobs, 877, ZeroOrOne, false, 0x1C00, AdaptivePlatform, Some(3350)),
    /* 1468 */ element!(CryptoKeyDescription, 4393, ZeroOrOne, false, 0x0, NotRestricted, Some(3495)),
    /* 1469 */ element!(CryptoKeyManagementNeeds, 849, One, false, 0x0, NotRestricted, None),
    /* 1470 */ element!(CryptoKeyRef, 848, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5632)),
    /* 1471 */ element!(CryptoKeySlot, 850, One, false, 0x0, NotRestricted, None),
    /* 1472 */ element!(CryptoKeySlotClientInterface, 852, One, false, 0x0, NotRestricted, None),
    /* 1473 */ element!(CryptoKeySlotContentAllowedUsage, 853, One, false, 0x0, NotRestricted, None),
    /* 1474 */ element!(CryptoKeySlotDesign, 855, One, false, 0x0, NotRestricted, None),
    /* 1475 */ element!(CryptoKeySlotDesignRef, 854, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(4998)),
    /* 1476 */ element!(CryptoKeySlotInterface, 859, One, false, 0x0, NotRestricted, None),
    /* 1477 */ element!(CryptoKeySlotRef, 2538, One, false, 0x0, NotRestricted, None),
    /* 1478 */ element!(CryptoKeySlotRef, 2538, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(2049)),
    /* 1479 */ element!(CryptoKeySlotRef, 2538, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5240)),
    /* 1480 */ element!(CryptoKeySlotRef, 3875, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(2048)),
    /* 1481 */ element!(CryptoKeySlotRefs, 840, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5247)),
    /* 1482 */ element!(CryptoKeySlotToClientPortPrototypeMapping, 861, One, false, 0x0, NotRestricted, None),
    /* 1483 */ element!(CryptoKeySlotToPortPrototypeMapping, 862, One, false, 0x0, NotRestricted, None),
    /* 1484 */ element!(CryptoKeySlotUsageDesign, 864, One, false, 0x0, NotRestricted, None),
    /* 1485 */ element!(CryptoKeySlotUsageDesignMapping, 865, One, false, 0x0, NotRestricted, None),
    /* 1486 */ element!(CryptoKeySlotUsageDesignRef, 857, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5033)),
    /* 1487 */ element!(CryptoKeySlotUserDesign, 868, One, false, 0x0, NotRestricted, None),
    /* 1488 */ element!(CryptoKeySlotUserDesignMapping, 870, One, false, 0x0, NotRestricted, None),
    /* 1489 */ element!(CryptoKeySlotUserDesignRef, 871, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5034)),
    /* 1490 */ element!(CryptoKeySlots, 2901, ZeroOrOne, false, 0x100000, AdaptivePlatform, Some(3409)),
    /* 1491 */ element!(CryptoModuleInstantiation, 872, One, false, 0x0, NotRestricted, None),
    /* 1492 */ element!(CryptoNeed, 881, One, false, 0x0, NotRestricted, None),
    /* 1493 */ element!(CryptoNeedRef, 883, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(4866)),
    /* 1494 */ element!(CryptoNeedRef, 883, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5586)),
    /* 1495 */ element!(CryptoNeedToCryptoJobMapping, 882, One, false, 0x0, NotRestricted, None),
    /* 1496 */ element!(CryptoNeedToPortPrototypeMapping, 884, One, false, 0x0, NotRestricted, None),
    /* 1497 */ element!(CryptoObjectType, 886, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(1630)),
    /* 1498 */ element!(CryptoObjectType, 886, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(1631)),
    /* 1499 */ element!(CryptoObjectType, 4393, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(4131)),
    /* 1500 */ element!(CryptoPrimitive, 4393, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3672)),
    /* 1501 */ element!(CryptoProvider, 888, One, false, 0x0, NotRestricted, None),
    /* 1502 */ element!(CryptoProviderDocumentationRef, 889, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(925)),
    /* 1503 */ element!(CryptoProviderInterface, 890, One, false, 0x0, NotRestricted, None),
    /* 1504 */ element!(CryptoProviderRef, 234, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5035)),
    /* 1505 */ element!(CryptoProviderRef, 893, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5248)),
    /* 1506 */ element!(CryptoProviderToPortPrototypeMapping, 892, One, false, 0x0, NotRestricted, None),
    /* 1507 */ element!(CryptoProviders, 878, ZeroOrOne, false, 0x1C0000, AdaptivePlatform, Some(1379)),
    /* 1508 */ element!(CryptoRPortComSpec, 894, One, false, 0x0, NotRestricted, None),
    /* 1509 */ element!(CryptoServiceCertificate, 895, One, false, 0x0, NotRestricted, None),
    /* 1510 */ element!(CryptoServiceCertificateRef, 1139, One, false, 0x0, NotRestricted, None),
    /* 1511 */ element!(CryptoServiceCertificateRef, 2690, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(2050)),
    /* 1512 */ element!(CryptoServiceCertificateRefs, 1140, ZeroOrOne, false, 0x0, ClassicPlatform, Some(5117)),
    /* 1513 */ element!(CryptoServiceJobNeeds, 896, One, false, 0x0, NotRestricted, None),
    /* 1514 */ element!(CryptoServiceKey, 897, One, false, 0x0, NotRestricted, None),
    /* 1515 */ element!(CryptoServiceKeyRef, 2692, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(2051)),
    /* 1516 */ element!(CryptoServiceKeyRef, 2692, ZeroOrOne, false, 0x0, ClassicPlatform, Some(4967)),
    /* 1517 */ element!(CryptoServiceKeyRef, 4816, ZeroOrOne, false, 0x0, NotRestricted, Some(5067)),
    /* 1518 */ element!(CryptoServiceMappings, 4620, ZeroOrOne, false, 0x1FE000, ClassicPlatform, Some(3353)),
    /* 1519 */ element!(CryptoServiceNeeds, 899, One, false, 0x0, NotRestricted, None),
    /* 1520 */ element!(CryptoServicePrimitive, 900, One, false, 0x0, NotRestricted, None),
    /* 1521 */ element!(CryptoServiceQueue, 901, One, false, 0x0, NotRestricted, None),
    /* 1522 */ element!(CryptoServiceQueueRef, 3860, ZeroOrOne, false, 0x0, NotRestricted, Some(4999)),
    /* 1523 */ element!(CryptoSignatureScheme, 902, One, false, 0x0, NotRestricted, None),
    /* 1524 */ element!(CryptoTrustMasterInterface, 903, One, false, 0x0, NotRestricted, None),
    /* 1525 */ element!(CsErrorReaction, 904, ZeroOrOne, false, 0x0, NotRestricted, Some(772)),
    /* 1526 */ element!(CseCode, 905, ZeroOrOne, false, 0x0, NotRestricted, Some(2599)),
    /* 1527 */ element!(CseCode, 5079, ZeroOrOne, false, 0x0, NotRestricted, Some(2599)),
    /* 1528 */ element!(CseCodeFactor, 2642, ZeroOrOne, false, 0x0, NotRestricted, Some(3109)),
    /* 1529 */ element!(CurrentDataTypeRef, 3302, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5110)),
    /* 1530 */ element!(CurrentExp, 3140, ZeroOrOne, false, 0x0, NotRestricted, Some(4134)),
    /* 1531 */ element!(CurrentValueRef, 1375, ZeroOrOne, false, 0x0, NotRestricted, Some(2069)),
    /* 1532 */ element!(CustomCppImplementationDataType, 906, One, false, 0x0, NotRestricted, None),
    /* 1533 */ element!(CustomDocumentElementRef, 1799, ZeroOrOne, false, 0x0, NotRestricted, Some(1907)),
    /* 1534 */ element!(CustomDocumentationRef, 266, ZeroOrOne, false, 0x0, NotRestricted, Some(6035)),
    /* 1535 */ element!(CustomSdgDefRef, 264, One, false, 0x0, NotRestricted, None),
    /* 1536 */ element!(CustomSdgDefRefs, 265, ZeroOrOne, false, 0x0, NotRestricted, Some(2003)),
    /* 1537 */ element!(CustomServiceClassRef, 1212, ZeroOrOne, false, 0x0, NotRestricted, Some(2182)),
    /* 1538 */ element!(CustomServiceId, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(4034)),
    /* 1539 */ element!(CustomSpecificationRef, 266, One, false, 0x0, NotRestricted, None),
    /* 1540 */ element!(CustomSpecificationRefs, 267, ZeroOrOne, false, 0x0, NotRestricted, Some(2005)),
    /* 1541 */ element!(CustomSubFunctionNumber, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(4200)),
    /* 1542 */ element!(CustomTrigger, 4393, ZeroOrOne, false, 0x0, NotRestricted, Some(4198)),
    /* 1543 */ element!(Cycle, 2229, ZeroOrOne, false, 0x0, NotRestricted, Some(1363)),
    /* 1544 */ element!(Cycle, 5077, ZeroOrOne, false, 0x0, NotRestricted, Some(1363)),
    /* 1545 */ element!(CycleAutostart, 298, ZeroOrOne, false, 0x0, NotRestricted, Some(3617)),
    /* 1546 */ element!(CycleCountMax, 2642, ZeroOrOne, false, 0x0, NotRestricted, Some(1472)),
    /* 1547 */ element!(CycleCounter, 907, One, false, 0x0, NotRestricted, None),
    /* 1548 */ element!(CycleCounter, 2642, ZeroOrOne, false, 0x0, NotRestricted, Some(2820)),
    /* 1549 */ element!(CycleRepetition, 908, One, false, 0x0, NotRestricted, None),
    /* 1550 */ element!(CycleRepetition, 909, ZeroOrOne, false, 0x0, NotRestricted, Some(3005)),
    /* 1551 */ element!(CycleRepetition, 2642, ZeroOrOne, false, 0x0, NotRestricted, Some(1010)),
    /* 1552 */ element!(CycleRepetition, 2642, ZeroOrOne, false, 0x0, NotRestricted, Some(3136)),
    /* 1553 */ element!(CycleStatusStorage, 298, ZeroOrOne, false, 0x0, NotRestricted, Some(519)),
    /* 1554 */ element!(CycleTimeMainFunction, 2229, ZeroOrOne, false, 0x0, ClassicPlatform, Some(3024)),
    /* 1555 */ element!(CycleTimeMainFunction, 5077, ZeroOrOne, false, 0x0, NotRestricted, Some(3023)),
    /* 1556 */ element!(CycleTimeValue, 2229, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(4122)),
    /* 1557 */ element!(CyclicBackupInterval, 2229, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5872)),
    /* 1558 */ element!(CyclicTiming, 910, ZeroOrOne, false, 0x0, NotRestricted, Some(1719)),
    /* 1559 */ element!(CyclicWritingPeriod, 2229, ZeroOrOne, false, 0x0, NotRestricted, Some(5664)),
    /* 1560 */ element!(DataComProps, 911, One, false, 0x0, NotRestricted, None),
    /* 1561 */ element!(DataConsistencyPolicy, 912, ZeroOrOne, false, 0x0, ClassicPlatform, Some(3627)),
    /* 1562 */ element!(DataConstr, 913, One, false, 0x0, NotRestricted, None),
    /* 1563 */ element!(DataConstrRef, 4433, ZeroOrOne, false, 0x0, NotRestricted, Some(452)),
    /* 1564 */ element!(DataConstrRef, 4433, ZeroOrOne, false, 0x0, NotRestricted, Some(2264)),
    /* 1565 */ element!(DataConstrRef, 4486, ZeroOrOne, false, 0x0, NotRestricted, Some(4965)),
    /* 1566 */ element!(DataConstrRule, 915, One, false, 0x0, NotRestricted, None),
    /* 1567 */ element!(DataConstrRules, 914, ZeroOrOne, false, 0x0, NotRestricted, Some(4754)),
    /* 1568 */ element!(DataDumpEntry, 916, One, false, 0x0, NotRestricted, None),
    /* 1569 */ element!(DataElementIref, 5020, One, false, 0x0, NotRestricted, None),
    /* 1570 */ element!(DataElementIref, 5020, ZeroOrOne, false, 0x0, NotRestricted, Some(1909)),
    /* 1571 */ element!(DataElementIref, 5020, ZeroOrOne, false, 0x0, NotRestricted, Some(1910)),
    /* 1572 */ element!(DataElementIref, 5020, ZeroOrOne, false, 0x0, NotRestricted, Some(2187)),
    /* 1573 */ element!(DataElementIrefs, 4563, ZeroOrOne, false, 0x0, NotRestricted, Some(1908)),
    /* 1574 */ element!(DataElementRef, 1236, ZeroOrOne, false, 0x0, ClassicPlatform, Some(5444)),
    /* 1575 */ element!(DataElementRef, 1277, ZeroOrOne, false, 0x0, NotRestricted, Some(5253)),
    /* 1576 */ element!(DataElementRef, 1458, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5445)),
    /* 1577 */ element!(DataElementRef, 1543, ZeroOrOne, false, 0x0, ClassicPlatform, Some(5111)),
    /* 1578 */ element!(DataElementRef, 2084, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(1898)),
    /* 1579 */ element!(DataElementRef, 2143, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(1897)),
    /* 1580 */ element!(DataElementRef, 2147, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(1897)),
    /* 1581 */ element!(DataElementRef, 2978, One, false, 0x0, NotRestricted, None),
    /* 1582 */ element!(DataElementRef, 3162, ZeroOrOne, false, 0x0, NotRestricted, Some(2184)),
    /* 1583 */ element!(DataElementRef, 3162, ZeroOrOne, false, 0x0, NotRestricted, Some(2188)),
    /* 1584 */ element!(DataElementRef, 3162, ZeroOrOne, false, 0x0, NotRestricted, Some(2907)),
    /* 1585 */ element!(DataElementRef, 3269, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5320)),
    /* 1586 */ element!(DataElementRef, 3272, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5321)),
    /* 1587 */ element!(DataElementRef, 3940, ZeroOrOne, false, 0x0, NotRestricted, Some(453)),
    /* 1588 */ element!(DataElementRef, 3940, ZeroOrOne, false, 0x0, NotRestricted, Some(454)),
    /* 1589 */ element!(DataElementRef, 4741, ZeroOrOne, false, 0x0, NotRestricted, Some(3083)),
    /* 1590 */ element!(DataElementRefs, 2979, ZeroOrOne, false, 0x0, NotRestricted, Some(5113)),
    /* 1591 */ element!(DataElements, 1119, ZeroOrOne, false, 0x1C0000, NotRestricted, Some(5707)),
    /* 1592 */ element!(DataElements, 1119, ZeroOrOne, false, 0x1FFFC0, NotRestricted, Some(5707)),
    /* 1593 */ element!(DataElements, 1363, ZeroOrOne, false, 0x1FFF00, NotRestricted, Some(5587)),
    /* 1594 */ element!(DataElements, 1363, ZeroOrOne, false, 0x1FFF00, NotRestricted, Some(5588)),
    /* 1595 */ element!(DataElements, 1622, ZeroOrOne, false, 0x1FFFC0, NotRestricted, Some(4783)),
    /* 1596 */ element!(DataElements, 3156, ZeroOrOne, false, 0x0, NotRestricted, Some(2832)),
    /* 1597 */ element!(DataElements, 3305, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3340)),
    /* 1598 */ element!(DataElements, 3314, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3339)),
    /* 1599 */ element!(DataExchangePoint, 917, One, false, 0x0, NotRestricted, None),
    /* 1600 */ element!(DataFilter, 919, ZeroOrOne, false, 0x0, NotRestricted, Some(1683)),
    /* 1601 */ element!(DataFilter, 919, ZeroOrOne, false, 0x0, NotRestricted, Some(1745)),
    /* 1602 */ element!(DataFilter, 919, ZeroOrOne, false, 0x0, NotRestricted, Some(2787)),
    /* 1603 */ element!(DataFilterType, 920, ZeroOrOne, false, 0x0, NotRestricted, Some(4258)),
    /* 1604 */ element!(DataFormatTailoring, 921, ZeroOrOne, false, 0x0, NotRestricted, Some(6046)),
    /* 1605 */ element!(DataId, 3494, One, false, 0x0, NotRestricted, None),
    /* 1606 */ element!(DataId, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(3596)),
    /* 1607 */ element!(DataId, 3494, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3599)),
    /* 1608 */ element!(DataIdMode, 923, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3851)),
    /* 1609 */ element!(DataIdMode, 923, ZeroOrOne, false, 0x0, NotRestricted, Some(3852)),
    /* 1610 */ element!(DataIdMode, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(3196)),
    /* 1611 */ element!(DataIdNibbleOffset, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(200)),
    /* 1612 */ element!(DataIdNibbleOffset, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(1633)),
    /* 1613 */ element!(DataIdentifierRef, 1213, ZeroOrOne, false, 0x0, NotRestricted, Some(5582)),
    /* 1614 */ element!(DataIdentifierRef, 1213, ZeroOrOne, false, 0x0, NotRestricted, Some(5633)),
    /* 1615 */ element!(DataIdentifierRef, 1255, ZeroOrOne, false, 0x0, NotRestricted, Some(5500)),
    /* 1616 */ element!(DataIdentifierRef, 1372, One, false, 0x0, NotRestricted, None),
    /* 1617 */ element!(DataIdentifierRef, 1372, ZeroOrOne, false, 0x0, NotRestricted, Some(5581)),
    /* 1618 */ element!(DataIdentifierRef, 1372, ZeroOrOne, false, 0x0, NotRestricted, Some(5582)),
    /* 1619 */ element!(DataIdentifierRef, 1535, One, false, 0x0, NotRestricted, None),
    /* 1620 */ element!(DataIdentifierRef, 1596, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5072)),
    /* 1621 */ element!(DataIdentifierRefs, 1222, ZeroOrOne, true, 0x0, NotRestricted, Some(1987)),
    /* 1622 */ element!(DataIdentifierRefs, 1536, ZeroOrOne, false, 0x0, NotRestricted, Some(1790)),
    /* 1623 */ element!(DataIds, 1950, ZeroOrOne, true, 0x0, AdaptivePlatform, Some(5388)),
    /* 1624 */ element!(DataIds, 1955, ZeroOrOne, true, 0x0, AdaptivePlatform, Some(5360)),
    /* 1625 */ element!(DataIds, 1959, ZeroOrOne, true, 0x0, NotRestricted, Some(5390)),
    /* 1626 */ element!(DataIds, 1973, ZeroOrOne, true, 0x0, NotRestricted, Some(5390)),
    /* 1627 */ element!(DataIref, 3603, ZeroOrOne, false, 0x0, NotRestricted, Some(3078)),
    /* 1628 */ element!(DataIref, 3603, ZeroOrOne, false, 0x0, NotRestricted, Some(3079)),
    /* 1629 */ element!(DataLength, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(121)),
    /* 1630 */ element!(DataLength, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(1359)),
    /* 1631 */ element!(DataLength, 3494, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(1360)),
    /* 1632 */ element!(DataLength, 3494, ZeroOrOne, false, 0x0, ClassicPlatform, Some(3980)),
    /* 1633 */ element!(DataLength, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(3981)),
    /* 1634 */ element!(DataLength, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(3982)),
    /* 1635 */ element!(DataLength, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(4146)),
    /* 1636 */ element!(DataLengthRequest, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(883)),
    /* 1637 */ element!(DataLengthRequest, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(885)),
    /* 1638 */ element!(DataLengthResponse, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(884)),
    /* 1639 */ element!(DataLengthResponse, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(886)),
    /* 1640 */ element!(DataLinkLayerRule, 925, ZeroOrOne, false, 0x0, NotRestricted, Some(378)),
    /* 1641 */ element!(DataLinkLayerRule, 4390, ZeroOrOne, false, 0x0, ClassicPlatform, Some(804)),
    /* 1642 */ element!(DataMappings, 575, ZeroOrOne, false, 0x180000, NotRestricted, Some(638)),
    /* 1643 */ element!(DataMappings, 4621, ZeroOrOne, false, 0x1C0000, ClassicPlatform, Some(2835)),
    /* 1644 */ element!(DataOffset, 2642, ZeroOrOne, false, 0x0, NotRestricted, Some(3661)),
    /* 1645 */ element!(DataPduRef, 4132, ZeroOrOne, false, 0x0, ClassicPlatform, Some(451)),
    /* 1646 */ element!(DataPduRef, 4132, ZeroOrOne, false, 0x0, ClassicPlatform, Some(1956)),
    /* 1647 */ element!(DataPduRef, 4132, ZeroOrOne, false, 0x0, ClassicPlatform, Some(1967)),
    /* 1648 */ element!(DataProtectionKind, 1056, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(602)),
    /* 1649 */ element!(DataProtototypeInPortInterfaceRef, 4080, ZeroOrOne, false, 0x0, NotRestricted, Some(1839)),
    /* 1650 */ element!(DataPrototypeGroup, 932, One, false, 0x0, NotRestricted, None),
    /* 1651 */ element!(DataPrototypeGroupIref, 2634, One, false, 0x0, NotRestricted, None),
    /* 1652 */ element!(DataPrototypeGroupIrefs, 933, ZeroOrOne, false, 0x1C0000, NotRestricted, Some(5474)),
    /* 1653 */ element!(DataPrototypeInClientServerInterfaceIref, 935, ZeroOrOne, false, 0x0, ClassicPlatform, Some(4368)),
    /* 1654 */ element!(DataPrototypeInMethodArgumentInstanceRefIref, 952, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(1329)),
    /* 1655 */ element!(DataPrototypeInPortInterfaceRef, 948, One, false, 0x0, NotRestricted, None),
    /* 1656 */ element!(DataPrototypeInPortInterfaceRef, 975, ZeroOrOne, false, 0x0, NotRestricted, Some(1839)),
    /* 1657 */ element!(DataPrototypeInSenderReceiverInterfaceIref, 950, ZeroOrOne, false, 0x0, ClassicPlatform, Some(4370)),
    /* 1658 */ element!(DataPrototypeInServiceInterfaceIref, 952, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(4371)),
    /* 1659 */ element!(DataPrototypeInServiceInterfaceRef, 957, One, false, 0x0, NotRestricted, None),
    /* 1660 */ element!(DataPrototypeInServiceInterfaceRef, 957, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(1838)),
    /* 1661 */ element!(DataPrototypeIref, 166, ZeroOrOne, false, 0x0, NotRestricted, Some(5699)),
    /* 1662 */ element!(DataPrototypeIref, 949, ZeroOrOne, false, 0x0, NotRestricted, Some(4369)),
    /* 1663 */ element!(DataPrototypeIref, 952, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(4392)),
    /* 1664 */ element!(DataPrototypeIref, 958, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(4205)),
    /* 1665 */ element!(DataPrototypeIref, 962, ZeroOrOne, false, 0x0, NotRestricted, Some(4703)),
    /* 1666 */ element!(DataPrototypeMapping, 969, One, false, 0x0, NotRestricted, None),
    /* 1667 */ element!(DataPrototypeRef, 976, ZeroOrOne, false, 0x0, NotRestricted, Some(1839)),
    /* 1668 */ element!(DataPrototypeRef, 3437, ZeroOrOne, false, 0x0, NotRestricted, Some(4782)),
    /* 1669 */ element!(DataPrototypeRef, 3472, ZeroOrOne, false, 0x0, NotRestricted, Some(4782)),
    /* 1670 */ element!(DataPrototypeTransformationProps, 974, One, false, 0x0, NotRestricted, None),
    /* 1671 */ element!(DataPrototypeTransformationPropss, 4868, ZeroOrOne, false, 0x180000, NotRestricted, Some(1103)),
    /* 1672 */ element!(DataPrototypeWithApplicationDataTypeInSystemRef, 979, One, false, 0x0, NotRestricted, None),
    /* 1673 */ element!(DataPrototypes, 4236, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(264)),
    /* 1674 */ element!(DataProvider, 4393, ZeroOrOne, false, 0x0, ClassicPlatform, Some(5479)),
    /* 1675 */ element!(DataProvider, 4393, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5480)),
    /* 1676 */ element!(DataReadAccesss, 3816, ZeroOrOne, false, 0x1FFF00, NotRestricted, Some(2320)),
    /* 1677 */ element!(DataReceiveErrorEvent, 980, One, false, 0x0, NotRestricted, None),
    /* 1678 */ element!(DataReceivePointByArguments, 3816, ZeroOrOne, false, 0x1FFF00, NotRestricted, Some(2318)),
    /* 1679 */ element!(DataReceivePointByValues, 3816, ZeroOrOne, false, 0x1FFF00, NotRestricted, Some(2317)),
    /* 1680 */ element!(DataReceivePoints, 403, ZeroOrOne, false, 0x1C0000, NotRestricted, Some(2833)),
    /* 1681 */ element!(DataReceivedEvent, 981, One, false, 0x0, NotRestricted, None),
    /* 1682 */ element!(DataRef, 314, ZeroOrOne, false, 0x0, NotRestricted, Some(3053)),
    /* 1683 */ element!(DataSendCompletedEvent, 982, One, false, 0x0, NotRestricted, None),
    /* 1684 */ element!(DataSendPoints, 403, ZeroOrOne, false, 0x1C0000, NotRestricted, Some(2834)),
    /* 1685 */ element!(DataSendPoints, 3816, ZeroOrOne, false, 0x1FFF00, NotRestricted, Some(2319)),
    /* 1686 */ element!(DataTransferClassRef, 1231, ZeroOrOne, false, 0x0, NotRestricted, Some(5279)),
    /* 1687 */ element!(DataTransformation, 984, One, false, 0x0, NotRestricted, None),
    /* 1688 */ element!(DataTransformationKind, 986, ZeroOrOne, false, 0x0, NotRestricted, Some(3573)),
    /* 1689 */ element!(DataTransformationRef, 988, ZeroOrOne, false, 0x0, NotRestricted, None),
    /* 1690 */ element!(DataTransformationRefConditional, 987, One, false, 0x0, NotRestricted, None),
    /* 1691 */ element!(DataTransformationSet, 989, One, false, 0x0, NotRestricted, None),
    /* 1692 */ element!(DataTransformations, 990, ZeroOrOne, false, 0x1FFFC0, NotRestricted, Some(4302)),
    /* 1693 */ element!(DataTransformations, 2463, ZeroOrOne, false, 0x1FFFC0, NotRestricted, Some(4907)),
    /* 1694 */ element!(DataTypeForSerializationRef, 3306, One, false, 0x0, NotRestricted, None),
    /* 1695 */ element!(DataTypeForSerializationRef, 3315, One, false, 0x0, NotRestricted, None),
    /* 1696 */ element!(DataTypeForSerializationRefs, 3307, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(4987)),
    /* 1697 */ element!(DataTypeForSerializationRefs, 3316, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(4986)),
    /* 1698 */ element!(DataTypeMap, 995, One, false, 0x0, NotRestricted, None),
    /* 1699 */ element!(DataTypeMapping, 3301, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3304)),
    /* 1700 */ element!(DataTypeMappingRef, 2654, One, false, 0x0, NotRestricted, None),
    /* 1701 */ element!(DataTypeMappingRefs, 2655, ZeroOrOne, false, 0x1FFF80, NotRestricted, Some(13)),
    /* 1702 */ element!(DataTypeMappingRefs, 2655, ZeroOrOne, false, 0x1FFF80, NotRestricted, Some(2055)),
    /* 1703 */ element!(DataTypeMappingRefs, 2655, ZeroOrOne, false, 0x1FFF80, ClassicPlatform, Some(2056)),
    /* 1704 */ element!(DataTypeMappingRefs, 2655, ZeroOrOne, false, 0x1FFF80, NotRestricted, Some(2057)),
    /* 1705 */ element!(DataTypeMappingSet, 998, One, false, 0x0, NotRestricted, None),
    /* 1706 */ element!(DataTypeMappingSetRef, 3467, One, false, 0x0, NotRestricted, None),
    /* 1707 */ element!(DataTypeMappingSetRefs, 3468, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5694)),
    /* 1708 */ element!(DataTypeMaps, 999, ZeroOrOne, false, 0x0, NotRestricted, Some(4746)),
    /* 1709 */ element!(DataTypePolicy, 1001, ZeroOrOne, false, 0x0, NotRestricted, Some(6007)),
    /* 1710 */ element!(DataTypeRef, 252, One, false, 0x0, NotRestricted, None),
    /* 1711 */ element!(DataTypeRefs, 2620, ZeroOrOne, false, 0x0, NotRestricted, Some(185)),
    /* 1712 */ element!(DataUpdatePeriod, 2229, ZeroOrOne, false, 0x0, NotRestricted, Some(3736)),
    /* 1713 */ element!(DataUpdatePeriod, 2229, ZeroOrOne, false, 0x0, NotRestricted, Some(3737)),
    /* 1714 */ element!(DataUpdatePeriod, 2229, ZeroOrOne, false, 0x0, NotRestricted, Some(3738)),
    /* 1715 */ element!(DataUpdatePeriod, 2229, ZeroOrOne, false, 0x0, NotRestricted, Some(3868)),
    /* 1716 */ element!(DataUpdatePeriod, 2229, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3868)),
    /* 1717 */ element!(DataUpdatePeriod, 2229, ZeroOrOne, false, 0x0, NotRestricted, Some(3869)),
    /* 1718 */ element!(DataWriteAccesss, 3816, ZeroOrOne, false, 0x1FFF00, NotRestricted, Some(2321)),
    /* 1719 */ element!(DataWriteCompletedEvent, 1002, One, false, 0x0, NotRestricted, None),
    /* 1720 */ element!(Date, 1003, ZeroOrOne, false, 0x0, NotRestricted, Some(457)),
    /* 1721 */ element!(Date, 1003, ZeroOrOne, false, 0x0, NotRestricted, Some(4404)),
    /* 1722 */ element!(Date, 1003, ZeroOrOne, false, 0x0, NotRestricted, Some(4405)),
    /* 1723 */ element!(Date, 1003, ZeroOrOne, false, 0x0, NotRestricted, Some(5591)),
    /* 1724 */ element!(Date, 1003, ZeroOrOne, false, 0x0, NotRestricted, Some(5799)),
    /* 1725 */ element!(DcmIPdu, 1004, One, false, 0x0, NotRestricted, None),
    /* 1726 */ element!(DdsCpConfig, 1005, One, false, 0x0, NotRestricted, None),
    /* 1727 */ element!(DdsCpConsumedServiceInstance, 1008, One, false, 0x0, NotRestricted, None),
    /* 1728 */ element!(DdsCpDomain, 1012, One, false, 0x0, NotRestricted, None),
    /* 1729 */ element!(DdsCpISignalToDdsTopicMapping, 1015, One, false, 0x0, NotRestricted, None),
    /* 1730 */ element!(DdsCpPartition, 1017, One, false, 0x0, NotRestricted, None),
    /* 1731 */ element!(DdsCpProvidedServiceInstance, 1018, One, false, 0x0, NotRestricted, None),
    /* 1732 */ element!(DdsCpQosProfile, 1019, One, false, 0x0, NotRestricted, None),
    /* 1733 */ element!(DdsCpServiceInstanceEvent, 1021, One, false, 0x0, NotRestricted, None),
    /* 1734 */ element!(DdsCpServiceInstanceOperation, 1022, One, false, 0x0, NotRestricted, None),
    /* 1735 */ element!(DdsCpTopic, 1023, One, false, 0x0, NotRestricted, None),
    /* 1736 */ element!(DdsDomainRange, 1028, One, false, 0x0, NotRestricted, None),
    /* 1737 */ element!(DdsDomains, 1006, ZeroOrOne, false, 0x0, NotRestricted, Some(260)),
    /* 1738 */ element!(DdsEventDeployment, 1033, One, false, 0x0, NotRestricted, None),
    /* 1739 */ element!(DdsEventQosProfileRef, 2481, ZeroOrOne, false, 0x0, NotRestricted, Some(2137)),
    /* 1740 */ element!(DdsEventQosProps, 1036, One, false, 0x0, NotRestricted, None),
    /* 1741 */ element!(DdsEventRef, 2573, ZeroOrOne, false, 0x0, NotRestricted, Some(2127)),
    /* 1742 */ element!(DdsEventTopicRef, 1020, ZeroOrOne, false, 0x0, NotRestricted, Some(2054)),
    /* 1743 */ element!(DdsFieldDeployment, 1038, One, false, 0x0, NotRestricted, None),
    /* 1744 */ element!(DdsFieldQosProps, 1039, One, false, 0x0, NotRestricted, None),
    /* 1745 */ element!(DdsFieldReplyTopicRef, 1020, ZeroOrOne, false, 0x0, NotRestricted, Some(2059)),
    /* 1746 */ element!(DdsFieldRequestTopicRef, 1020, ZeroOrOne, false, 0x0, NotRestricted, Some(2058)),
    /* 1747 */ element!(DdsISignalToTopicMappings, 4622, ZeroOrOne, false, 0x180000, NotRestricted, Some(265)),
    /* 1748 */ element!(DdsMethodDeployment, 1048, One, false, 0x0, NotRestricted, None),
    /* 1749 */ element!(DdsMethodQosProps, 1051, One, false, 0x0, NotRestricted, None),
    /* 1750 */ element!(DdsMethodReplyTopicRef, 1020, ZeroOrOne, false, 0x0, NotRestricted, Some(2060)),
    /* 1751 */ element!(DdsMethodRequestTopicRef, 1020, ZeroOrOne, false, 0x0, NotRestricted, Some(2061)),
    /* 1752 */ element!(DdsOperationRequestTriggeringRef, 2573, ZeroOrOne, false, 0x0, NotRestricted, Some(2125)),
    /* 1753 */ element!(DdsOperationResponseTriggeringRef, 2573, ZeroOrOne, false, 0x0, NotRestricted, Some(2126)),
    /* 1754 */ element!(DdsPartitionRef, 1024, ZeroOrOne, false, 0x0, NotRestricted, Some(2052)),
    /* 1755 */ element!(DdsPartitions, 1013, ZeroOrOne, false, 0x0, NotRestricted, Some(261)),
    /* 1756 */ element!(DdsProvidedServiceInstance, 1057, One, false, 0x0, NotRestricted, None),
    /* 1757 */ element!(DdsQosProfileRef, 2481, ZeroOrOne, false, 0x0, NotRestricted, Some(2053)),
    /* 1758 */ element!(DdsQosProfiles, 1007, ZeroOrOne, false, 0x0, NotRestricted, Some(262)),
    /* 1759 */ element!(DdsRequiredServiceInstance, 1064, One, false, 0x0, NotRestricted, None),
    /* 1760 */ element!(DdsRpcServiceDeployment, 1068, One, false, 0x0, NotRestricted, None),
    /* 1761 */ element!(DdsRpcServiceRef, 1049, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(381)),
    /* 1762 */ element!(DdsRpcServices, 1081, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3420)),
    /* 1763 */ element!(DdsRule, 1069, ZeroOrOne, false, 0x0, NotRestricted, Some(373)),
    /* 1764 */ element!(DdsSecureComProps, 1070, One, false, 0x0, NotRestricted, None),
    /* 1765 */ element!(DdsSecureGovernance, 1073, One, false, 0x0, NotRestricted, None),
    /* 1766 */ element!(DdsServiceInstanceToMachineMapping, 1078, One, false, 0x0, NotRestricted, None),
    /* 1767 */ element!(DdsServiceInterfaceDeployment, 1080, One, false, 0x0, NotRestricted, None),
    /* 1768 */ element!(DdsServiceQosProfileRef, 2481, ZeroOrOne, false, 0x0, NotRestricted, Some(2136)),
    /* 1769 */ element!(DdsServiceVersion, 1083, One, false, 0x0, NotRestricted, None),
    /* 1770 */ element!(DdsTopicAccessRule, 1084, One, false, 0x0, NotRestricted, None),
    /* 1771 */ element!(DdsTopicRef, 1020, ZeroOrOne, false, 0x0, NotRestricted, Some(2062)),
    /* 1772 */ element!(DdsTopics, 1014, ZeroOrOne, false, 0x0, NotRestricted, Some(263)),
    /* 1773 */ element!(Deadline, 1025, ZeroOrOne, false, 0x0, NotRestricted, Some(546)),
    /* 1774 */ element!(DeadlineMax, 2229, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(633)),
    /* 1775 */ element!(DeadlineMin, 2229, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(686)),
    /* 1776 */ element!(DeadlinePeriod, 2229, ZeroOrOne, false, 0x0, NotRestricted, Some(2332)),
    /* 1777 */ element!(DeadlineSupervision, 1087, One, false, 0x0, NotRestricted, None),
    /* 1778 */ element!(DeadlineSupervisions, 2335, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(266)),
    /* 1779 */ element!(DeadlineSupervisions, 2835, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(267)),
    /* 1780 */ element!(DeadlineSupervisions, 4412, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(268)),
    /* 1781 */ element!(DebounceAlgorithm, 1234, ZeroOrOne, false, 0x0, NotRestricted, Some(5490)),
    /* 1782 */ element!(DebounceAlgorithmPropss, 1181, ZeroOrOne, false, 0x100000, NotRestricted, Some(714)),
    /* 1783 */ element!(DebounceAlgorithmRef, 1307, ZeroOrOne, false, 0x0, NotRestricted, Some(1840)),
    /* 1784 */ element!(DebounceBehavior, 1361, ZeroOrOne, false, 0x0, ClassicPlatform, Some(3611)),
    /* 1785 */ element!(DebounceCounterStorage, 298, ZeroOrOne, false, 0x0, ClassicPlatform, Some(2654)),
    /* 1786 */ element!(DebounceTime, 2229, ZeroOrOne, false, 0x0, NotRestricted, Some(645)),
    /* 1787 */ element!(DebugInfos, 340, ZeroOrOne, false, 0x1C0000, ClassicPlatform, Some(343)),
    /* 1788 */ element!(DecodingCorrection, 2642, ZeroOrOne, false, 0x0, NotRestricted, Some(5965)),
    /* 1789 */ element!(Decompositions, 2241, ZeroOrOne, false, 0x0, NotRestricted, Some(1395)),
    /* 1790 */ element!(Def, 1803, ZeroOrOne, false, 0x0, NotRestricted, Some(5597)),
    /* 1791 */ element!(DefCalprmSet, 2935, ZeroOrOne, false, 0x1FFFC0, NotRestricted, Some(2276)),
    /* 1792 */ element!(DefItem, 1090, Any, false, 0xC0000, NotRestricted, Some(4740)),
    /* 1793 */ element!(DefList, 1091, One, false, 0x0, NotRestricted, Some(5344)),
    /* 1794 */ element!(DefList, 1091, One, false, 0xC0000, NotRestricted, Some(5344)),
    /* 1795 */ element!(DefaultAction, 2150, ZeroOrOne, false, 0x0, NotRestricted, Some(3594)),
    /* 1796 */ element!(DefaultApplicationTimeout, 1976, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3273)),
    /* 1797 */ element!(DefaultEndianness, 474, ZeroOrOne, false, 0x0, NotRestricted, Some(603)),
    /* 1798 */ element!(DefaultGateway, 2697, ZeroOrOne, false, 0x0, NotRestricted, Some(1157)),
    /* 1799 */ element!(DefaultGateway, 2697, ZeroOrOne, false, 0x0, NotRestricted, Some(1158)),
    /* 1800 */ element!(DefaultGateway, 2698, ZeroOrOne, false, 0x0, NotRestricted, Some(1158)),
    /* 1801 */ element!(DefaultLcStateRef, 2771, ZeroOrOne, false, 0x0, NotRestricted, Some(4328)),
    /* 1802 */ element!(DefaultLeaseTime, 2229, ZeroOrOne, false, 0x0, NotRestricted, Some(122)),
    /* 1803 */ element!(DefaultLogThreshold, 2848, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3515)),
    /* 1804 */ element!(DefaultModeRef, 3053, ZeroOrOne, false, 0x0, NotRestricted, Some(5452)),
    /* 1805 */ element!(DefaultPattern, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(2825)),
    /* 1806 */ element!(DefaultPeriodBegin, 2776, ZeroOrOne, false, 0x0, NotRestricted, Some(464)),
    /* 1807 */ element!(DefaultPeriodEnd, 2776, ZeroOrOne, false, 0x0, NotRestricted, Some(462)),
    /* 1808 */ element!(DefaultPriority, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(2628)),
    /* 1809 */ element!(DefaultReportingMode, 3929, ZeroOrOne, false, 0x0, NotRestricted, Some(3676)),
    /* 1810 */ element!(DefaultRouter, 2698, ZeroOrOne, false, 0x0, NotRestricted, Some(1159)),
    /* 1811 */ element!(DefaultTraceState, 298, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(4285)),
    /* 1812 */ element!(DefaultTraceState, 1711, ZeroOrOne, false, 0x0, ClassicPlatform, Some(4285)),
    /* 1813 */ element!(DefaultTrafficClass, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(604)),
    /* 1814 */ element!(DefaultValue, 273, ZeroOrOne, false, 0x0, ClassicPlatform, Some(3390)),
    /* 1815 */ element!(DefaultValue, 298, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(4127)),
    /* 1816 */ element!(DefaultValue, 2229, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(4127)),
    /* 1817 */ element!(DefaultValue, 2231, ZeroOrOne, false, 0x0, ClassicPlatform, Some(466)),
    /* 1818 */ element!(DefaultValue, 2231, ZeroOrOne, false, 0x0, ClassicPlatform, Some(468)),
    /* 1819 */ element!(DefaultValue, 2231, ZeroOrOne, false, 0x0, ClassicPlatform, Some(469)),
    /* 1820 */ element!(DefaultValue, 2500, ZeroOrOne, false, 0x0, ClassicPlatform, Some(467)),
    /* 1821 */ element!(DefaultValue, 2500, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(4127)),
    /* 1822 */ element!(DefaultValue, 2642, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(4127)),
    /* 1823 */ element!(DefaultValue, 3140, ZeroOrOne, false, 0x0, NotRestricted, Some(5595)),
    /* 1824 */ element!(DefaultValue, 3244, ZeroOrOne, false, 0x0, NotRestricted, Some(1216)),
    /* 1825 */ element!(DefaultValue, 5048, ZeroOrOne, false, 0x0, ClassicPlatform, Some(470)),
    /* 1826 */ element!(DefaultValue, 5048, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(4127)),
    /* 1827 */ element!(DefaultValueElement, 1093, One, false, 0x0, NotRestricted, None),
    /* 1828 */ element!(DefaultValueElements, 3245, ZeroOrOne, false, 0x0, NotRestricted, Some(2839)),
    /* 1829 */ element!(DefaultValueHandling, 1092, ZeroOrOne, false, 0x0, NotRestricted, Some(2435)),
    /* 1830 */ element!(DefaultVlanRef, 5061, ZeroOrOne, false, 0x0, NotRestricted, Some(3176)),
    /* 1831 */ element!(DeferringFidRef, 1296, One, false, 0x0, NotRestricted, None),
    /* 1832 */ element!(DeferringFidRefs, 1297, ZeroOrOne, false, 0x0, NotRestricted, Some(4932)),
    /* 1833 */ element!(DefinitionRef, 100, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5165)),
    /* 1834 */ element!(DefinitionRef, 106, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5164)),
    /* 1835 */ element!(DefinitionRef, 121, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5166)),
    /* 1836 */ element!(DefinitionRef, 1851, ZeroOrOne, false, 0x0, ClassicPlatform, Some(2190)),
    /* 1837 */ element!(DefinitionRef, 1880, ZeroOrOne, false, 0x0, ClassicPlatform, Some(2191)),
    /* 1838 */ element!(DefinitionRef, 1921, ZeroOrOne, false, 0x0, ClassicPlatform, Some(2192)),
    /* 1839 */ element!(DefinitionRef, 1926, ZeroOrOne, false, 0x0, ClassicPlatform, Some(2189)),
    /* 1840 */ element!(DefinitionRef, 2235, ZeroOrOne, false, 0x0, NotRestricted, Some(5318)),
    /* 1841 */ element!(Delay, 2229, ZeroOrOne, false, 0x0, ClassicPlatform, Some(2287)),
    /* 1842 */ element!(Delay, 5077, ZeroOrOne, false, 0x0, NotRestricted, Some(2287)),
    /* 1843 */ element!(DelayCompensationA, 2642, ZeroOrOne, false, 0x0, NotRestricted, Some(5966)),
    /* 1844 */ element!(DelayCompensationB, 2642, ZeroOrOne, false, 0x0, NotRestricted, Some(5967)),
    /* 1845 */ element!(DelegatedPortAnnotation, 1094, ZeroOrOne, false, 0x0, NotRestricted, Some(150)),
    /* 1846 */ element!(DelegationSwConnector, 1095, One, false, 0x0, NotRestricted, None),
    /* 1847 */ element!(Deletes, 1606, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5436)),
    /* 1848 */ element!(DeliveryArtifacts, 19, ZeroOrOne, false, 0x0, NotRestricted, Some(4329)),
    /* 1849 */ element!(DeltaPackageApplicableVersion, 4394, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3950)),
    /* 1850 */ element!(DenominatorCondition, 1237, ZeroOrOne, false, 0x0, NotRestricted, Some(3957)),
    /* 1851 */ element!(DenominatorGroup, 1237, ZeroOrOne, false, 0x0, NotRestricted, Some(2840)),
    /* 1852 */ element!(Dependencies, 1803, ZeroOrOne, false, 0x0, NotRestricted, Some(5396)),
    /* 1853 */ element!(Dependency, 4393, ZeroOrOne, false, 0x0, NotRestricted, Some(3499)),
    /* 1854 */ element!(Dependency, 4393, ZeroOrOne, false, 0x0, NotRestricted, Some(3501)),
    /* 1855 */ element!(DependencyOnArtifact, 1097, One, false, 0x0, NotRestricted, None),
    /* 1856 */ element!(DependentResources, 797, ZeroOrOne, false, 0x0, ClassicPlatform, Some(1373)),
    /* 1857 */ element!(DependentSoftwareClusterDesignRef, 4164, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5116)),
    /* 1858 */ element!(DependentSoftwareClusterRef, 4155, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5019)),
    /* 1859 */ element!(DependsOn, 4136, ZeroOrOne, false, 0x8000, AdaptivePlatform, Some(3261)),
    /* 1860 */ element!(DependsOn, 4156, ZeroOrOne, false, 0x1FC000, AdaptivePlatform, Some(3262)),
    /* 1861 */ element!(DependsOnRef, 4165, One, false, 0x0, NotRestricted, None),
    /* 1862 */ element!(DependsOnRefs, 4166, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3017)),
    /* 1863 */ element!(DependsOns, 4160, ZeroOrOne, false, 0x3000, AdaptivePlatform, Some(3262)),
    /* 1864 */ element!(DependsOns, 4167, ZeroOrOne, false, 0xF000, AdaptivePlatform, Some(3227)),
    /* 1865 */ element!(DeploymentRef, 3618, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5054)),
    /* 1866 */ element!(DeploymentUris, 3273, ZeroOrOne, true, 0x0, AdaptivePlatform, Some(3344)),
    /* 1867 */ element!(Derivation, 1884, ZeroOrOne, false, 0x0, ClassicPlatform, Some(39)),
    /* 1868 */ element!(DerivedCertificateAccepted, 298, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3792)),
    /* 1869 */ element!(DerivedFromBlueprintRef, 17, One, false, 0x0, NotRestricted, None),
    /* 1870 */ element!(DerivedFromBlueprintRefs, 18, ZeroOrOne, false, 0x0, NotRestricted, Some(3471)),
    /* 1871 */ element!(DerivedInterfaceRef, 3440, ZeroOrOne, false, 0x0, NotRestricted, Some(5599)),
    /* 1872 */ element!(DerivedObjectRef, 290, ZeroOrOne, false, 0x0, NotRestricted, Some(5658)),
    /* 1873 */ element!(DerivedPortInterfaceRef, 3475, ZeroOrOne, false, 0x0, NotRestricted, Some(5599)),
    /* 1874 */ element!(DerivedPortPrototypeRef, 4748, ZeroOrOne, false, 0x0, NotRestricted, Some(2738)),
    /* 1875 */ element!(Desc, 3064, ZeroOrOne, false, 0x0, NotRestricted, Some(19)),
    /* 1876 */ element!(Desc, 3064, ZeroOrOne, false, 0x0, NotRestricted, Some(3222)),
    /* 1877 */ element!(Desc, 3064, ZeroOrOne, false, 0x0, NotRestricted, Some(3223)),
    /* 1878 */ element!(Desc, 3064, ZeroOrOne, false, 0x0, NotRestricted, Some(3449)),
    /* 1879 */ element!(Desc, 3064, ZeroOrOne, false, 0x0, NotRestricted, Some(5351)),
    /* 1880 */ element!(Desc, 3064, ZeroOrOne, false, 0x0, NotRestricted, Some(5352)),
    /* 1881 */ element!(Desc, 3064, ZeroOrOne, false, 0x0, NotRestricted, Some(5353)),
    /* 1882 */ element!(Desc, 3064, ZeroOrOne, false, 0x0, NotRestricted, Some(5354)),
    /* 1883 */ element!(Description, 1803, ZeroOrOne, false, 0x0, NotRestricted, Some(5619)),
    /* 1884 */ element!(DesignRef, 139, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5102)),
    /* 1885 */ element!(DesignRef, 610, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(4990)),
    /* 1886 */ element!(DesignRef, 614, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(4991)),
    /* 1887 */ element!(DesignRef, 618, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(4992)),
    /* 1888 */ element!(DesignRef, 630, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(4993)),
    /* 1889 */ element!(DesignRef, 635, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(4994)),
    /* 1890 */ element!(DesignRef, 640, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(4995)),
    /* 1891 */ element!(DesignRef, 3530, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5238)),
    /* 1892 */ element!(DesignRef, 3548, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5239)),
    /* 1893 */ element!(DesignRef, 3616, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5016)),
    /* 1894 */ element!(DesignRef, 4173, One, false, 0x0, NotRestricted, None),
    /* 1895 */ element!(DesignRefs, 4174, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5236)),
    /* 1896 */ element!(DestMetaClass, 2975, ZeroOrOne, false, 0x0, NotRestricted, Some(6042)),
    /* 1897 */ element!(DestSdgRef, 3854, ZeroOrOne, false, 0x0, NotRestricted, Some(2260)),
    /* 1898 */ element!(DestinationBaseId, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(189)),
    /* 1899 */ element!(DestinationContext, 4393, ZeroOrOne, false, 0x0, ClassicPlatform, Some(2828)),
    /* 1900 */ element!(DestinationContext, 4393, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3542)),
    /* 1901 */ element!(DestinationContext, 5078, ZeroOrOne, false, 0x0, NotRestricted, Some(2828)),
    /* 1902 */ element!(DestinationIpAddress, 2697, ZeroOrOne, false, 0x0, NotRestricted, Some(1079)),
    /* 1903 */ element!(DestinationIpAddress, 2698, ZeroOrOne, false, 0x0, NotRestricted, Some(1082)),
    /* 1904 */ element!(DestinationIpv4Address, 4386, ZeroOrOne, false, 0x0, ClassicPlatform, Some(1077)),
    /* 1905 */ element!(DestinationIpv6Address, 4387, ZeroOrOne, false, 0x0, ClassicPlatform, Some(1080)),
    /* 1906 */ element!(DestinationMacAddress, 2868, ZeroOrOne, false, 0x0, NotRestricted, Some(1084)),
    /* 1907 */ element!(DestinationMacAddress, 2868, ZeroOrOne, false, 0x0, NotRestricted, Some(1667)),
    /* 1908 */ element!(DestinationMacAddress, 2868, ZeroOrOne, false, 0x0, NotRestricted, Some(3677)),
    /* 1909 */ element!(DestinationMacAddress, 4388, ZeroOrOne, false, 0x0, ClassicPlatform, Some(1085)),
    /* 1910 */ element!(DestinationMacAddressMask, 2868, ZeroOrOne, false, 0x0, NotRestricted, Some(1083)),
    /* 1911 */ element!(DestinationMaxAddress, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(1050)),
    /* 1912 */ element!(DestinationMinAddress, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(1049)),
    /* 1913 */ element!(DestinationNetworkMask, 2697, ZeroOrOne, false, 0x0, NotRestricted, Some(1078)),
    /* 1914 */ element!(DestinationNetworkMask, 2698, ZeroOrOne, false, 0x0, NotRestricted, Some(1081)),
    /* 1915 */ element!(DestinationOrder, 1026, ZeroOrOne, false, 0x0, NotRestricted, Some(547)),
    /* 1916 */ element!(DestinationOrderKind, 1027, ZeroOrOne, false, 0x0, NotRestricted, Some(2333)),
    /* 1917 */ element!(DestinationPhysicalAddress, 2868, ZeroOrOne, false, 0x0, NotRestricted, Some(566)),
    /* 1918 */ element!(DestinationPorts, 4392, ZeroOrOne, false, 0x0, ClassicPlatform, Some(1092)),
    /* 1919 */ element!(DestinationRef, 106, One, false, 0x0, NotRestricted, None),
    /* 1920 */ element!(DestinationRef, 106, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5159)),
    /* 1921 */ element!(DestinationRef, 1926, One, false, 0x0, NotRestricted, None),
    /* 1922 */ element!(DestinationRef, 1926, ZeroOrOne, false, 0x0, ClassicPlatform, Some(999)),
    /* 1923 */ element!(DestinationRef, 1933, ZeroOrOne, false, 0x0, ClassicPlatform, Some(999)),
    /* 1924 */ element!(DestinationRefs, 99, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5564)),
    /* 1925 */ element!(DestinationRefs, 1859, ZeroOrOne, false, 0x0, ClassicPlatform, Some(114)),
    /* 1926 */ element!(DestinationType, 4393, ZeroOrOne, false, 0x0, ClassicPlatform, Some(3166)),
    /* 1927 */ element!(DestinationType, 4393, ZeroOrOne, false, 0x0, ClassicPlatform, Some(3167)),
    /* 1928 */ element!(DestinationType, 4393, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3540)),
    /* 1929 */ element!(DestinationType, 4393, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3541)),
    /* 1930 */ element!(DestinationType, 5078, ZeroOrOne, false, 0x0, NotRestricted, Some(3166)),
    /* 1931 */ element!(DestinationType, 5078, ZeroOrOne, false, 0x0, NotRestricted, Some(3167)),
    /* 1932 */ element!(DestinationUriDefs, 1888, ZeroOrOne, false, 0x0, ClassicPlatform, Some(4742)),
    /* 1933 */ element!(DestinationUriNestingContract, 1889, ZeroOrOne, false, 0x0, ClassicPlatform, Some(3614)),
    /* 1934 */ element!(DestinationUriPolicy, 1890, ZeroOrOne, false, 0x0, ClassicPlatform, Some(907)),
    /* 1935 */ element!(DestinationUriRef, 1872, One, false, 0x0, NotRestricted, None),
    /* 1936 */ element!(DestinationUriRef, 1872, ZeroOrOne, false, 0x0, ClassicPlatform, Some(155)),
    /* 1937 */ element!(DestinationUriRefs, 1873, ZeroOrOne, false, 0x0, ClassicPlatform, Some(2403)),
    /* 1938 */ element!(DetectNitError, 298, ZeroOrOne, false, 0x0, NotRestricted, Some(1309)),
    /* 1939 */ element!(DeterministicClient, 1100, One, false, 0x0, NotRestricted, None),
    /* 1940 */ element!(DeterministicClientRef, 3535, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(4912)),
    /* 1941 */ element!(DeterministicClientResourceNeeds, 1103, One, false, 0x0, NotRestricted, None),
    /* 1942 */ element!(DeterministicClientResourceNeedss, 3527, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3345)),
    /* 1943 */ element!(DeterministicSyncMOutOfN, 1104, One, false, 0x0, NotRestricted, None),
    /* 1944 */ element!(DeterministicSyncMaster, 1105, One, false, 0x0, NotRestricted, None),
    /* 1945 */ element!(DeterministicSyncMasterRef, 1101, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5036)),
    /* 1946 */ element!(DeterministicSyncMasterRef, 1101, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5118)),
    /* 1947 */ element!(DeterministicSyncMasterToTimeBaseConsumerMapping, 1106, One, false, 0x0, NotRestricted, None),
    /* 1948 */ element!(DevelopmentError, 1109, One, false, 0x0, NotRestricted, None),
    /* 1949 */ element!(DevelopmentValue, 2138, ZeroOrOne, false, 0x0, NotRestricted, Some(3323)),
    /* 1950 */ element!(DhcpAddressAssignment, 1110, ZeroOrOne, false, 0x0, NotRestricted, Some(2501)),
    /* 1951 */ element!(DhcpProps, 1111, ZeroOrOne, false, 0x0, NotRestricted, Some(393)),
    /* 1952 */ element!(DhcpServerConfiguration, 1110, ZeroOrOne, false, 0x0, ClassicPlatform, Some(600)),
    /* 1953 */ element!(DiagArgIntegrity, 298, ZeroOrOne, false, 0x0, ClassicPlatform, Some(4209)),
    /* 1954 */ element!(DiagEventDebounceAlgorithm, 1298, ZeroOrOne, false, 0x0, NotRestricted, Some(2515)),
    /* 1955 */ element!(DiagEventDebounceCounterBased, 1114, One, false, 0x0, NotRestricted, None),
    /* 1956 */ element!(DiagEventDebounceMonitorInternal, 1115, One, false, 0x0, NotRestricted, None),
    /* 1957 */ element!(DiagEventDebounceTimeBased, 1116, One, false, 0x0, NotRestricted, None),
    /* 1958 */ element!(DiagFaultDetectionCounterPortRef, 1113, ZeroOrOne, false, 0x0, NotRestricted, Some(3089)),
    /* 1959 */ element!(DiagPduType, 1117, ZeroOrOne, false, 0x0, NotRestricted, Some(183)),
    /* 1960 */ element!(DiagRequirement, 1118, ZeroOrOne, false, 0x0, NotRestricted, Some(4339)),
    /* 1961 */ element!(DiagRequirement, 5078, ZeroOrOne, false, 0x0, NotRestricted, Some(4340)),
    /* 1962 */ element!(DiagRoutineType, 1533, ZeroOrOne, false, 0x0, NotRestricted, Some(4343)),
    /* 1963 */ element!(DiagnosticAccessPermission, 1120, One, false, 0x0, NotRestricted, None),
    /* 1964 */ element!(DiagnosticAddress, 2642, ZeroOrOne, false, 0x0, ClassicPlatform, Some(123)),
    /* 1965 */ element!(DiagnosticAddress, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(123)),
    /* 1966 */ element!(DiagnosticAddress, 3494, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(4113)),
    /* 1967 */ element!(DiagnosticAddresses, 1182, ZeroOrOne, false, 0x180000, AdaptivePlatform, Some(0)),
    /* 1968 */ element!(DiagnosticAddresss, 4168, ZeroOrOne, false, 0x3F000, AdaptivePlatform, Some(3303)),
    /* 1969 */ element!(DiagnosticAddresss, 4185, ZeroOrOne, false, 0x1FC00, AdaptivePlatform, Some(3354)),
    /* 1970 */ element!(DiagnosticAddresss, 4187, ZeroOrOne, false, 0x1C0000, AdaptivePlatform, Some(3354)),
    /* 1971 */ element!(DiagnosticAddresss, 4193, ZeroOrOne, false, 0x20000, AdaptivePlatform, Some(3354)),
    /* 1972 */ element!(DiagnosticAddresss, 4202, ZeroOrOne, false, 0xC00, AdaptivePlatform, Some(3438)),
    /* 1973 */ element!(DiagnosticAging, 1128, One, false, 0x0, NotRestricted, None),
    /* 1974 */ element!(DiagnosticAuthRole, 1131, One, false, 0x0, NotRestricted, None),
    /* 1975 */ element!(DiagnosticAuthTransmitCertificate, 1135, One, false, 0x0, NotRestricted, None),
    /* 1976 */ element!(DiagnosticAuthTransmitCertificateEvaluation, 1137, One, false, 0x0, NotRestricted, None),
    /* 1977 */ element!(DiagnosticAuthTransmitCertificateMapping, 1138, One, false, 0x0, NotRestricted, None),
    /* 1978 */ element!(DiagnosticAuthenticationClass, 1143, One, false, 0x0, NotRestricted, None),
    /* 1979 */ element!(DiagnosticAuthenticationConfiguration, 1144, One, false, 0x0, NotRestricted, None),
    /* 1980 */ element!(DiagnosticAuthenticationInterface, 1145, One, false, 0x0, NotRestricted, None),
    /* 1981 */ element!(DiagnosticAuthenticationPortMapping, 1146, One, false, 0x0, NotRestricted, None),
    /* 1982 */ element!(DiagnosticAuthenticationRef, 1147, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(2063)),
    /* 1983 */ element!(DiagnosticClearCondition, 1149, One, false, 0x0, NotRestricted, None),
    /* 1984 */ element!(DiagnosticClearConditionGroup, 1150, One, false, 0x0, NotRestricted, None),
    /* 1985 */ element!(DiagnosticClearConditionNeeds, 1153, One, false, 0x0, NotRestricted, None),
    /* 1986 */ element!(DiagnosticClearConditionPortMapping, 1154, One, false, 0x0, NotRestricted, None),
    /* 1987 */ element!(DiagnosticClearDiagnosticInformation, 1156, One, false, 0x0, NotRestricted, None),
    /* 1988 */ element!(DiagnosticClearDiagnosticInformationClass, 1157, One, false, 0x0, NotRestricted, None),
    /* 1989 */ element!(DiagnosticClearResetEmissionRelatedInfo, 1163, One, false, 0x0, NotRestricted, None),
    /* 1990 */ element!(DiagnosticClearResetEmissionRelatedInfoClass, 1164, One, false, 0x0, NotRestricted, None),
    /* 1991 */ element!(DiagnosticComControl, 1166, One, false, 0x0, NotRestricted, None),
    /* 1992 */ element!(DiagnosticComControlClass, 1167, One, false, 0x0, NotRestricted, None),
    /* 1993 */ element!(DiagnosticComControlInterface, 1174, One, false, 0x0, NotRestricted, None),
    /* 1994 */ element!(DiagnosticComControlSpecificChannel, 1175, One, false, 0x0, NotRestricted, None),
    /* 1995 */ element!(DiagnosticComControlSubNodeChannel, 1176, One, false, 0x0, NotRestricted, None),
    /* 1996 */ element!(DiagnosticCommonElementRef, 1178, ZeroOrOne, false, 0x0, NotRestricted, None),
    /* 1997 */ element!(DiagnosticCommonElementRefConditional, 1177, One, false, 0x0, NotRestricted, None),
    /* 1998 */ element!(DiagnosticCommonPropsConditional, 1180, One, false, 0x0, NotRestricted, None),
    /* 1999 */ element!(DiagnosticCommonPropsVariants, 1184, ZeroOrOne, false, 0x1F0000, NotRestricted, Some(4408)),
    /* 2000 */ element!(DiagnosticCommunicationManagerNeeds, 1185, One, false, 0x0, NotRestricted, None),
    /* 2001 */ element!(DiagnosticComponentNeeds, 1187, One, false, 0x0, NotRestricted, None),
    /* 2002 */ element!(DiagnosticConditionInterface, 1188, One, false, 0x0, NotRestricted, None),
    /* 2003 */ element!(DiagnosticConditionRef, 1424, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(2064)),
    /* 2004 */ element!(DiagnosticConnectedIndicator, 1189, One, false, 0x0, NotRestricted, None),
    /* 2005 */ element!(DiagnosticConnection, 1193, One, false, 0x0, NotRestricted, None),
    /* 2006 */ element!(DiagnosticConnectionRef, 1197, ZeroOrOne, false, 0x0, NotRestricted, None),
    /* 2007 */ element!(DiagnosticConnectionRefConditional, 1196, One, false, 0x0, NotRestricted, None),
    /* 2008 */ element!(DiagnosticConnections, 1455, ZeroOrOne, false, 0x1FFF00, NotRestricted, Some(5556)),
    /* 2009 */ element!(DiagnosticConnections, 1567, ZeroOrOne, false, 0x1FFFC0, NotRestricted, Some(5443)),
    /* 2010 */ element!(DiagnosticContributionRef, 4169, One, false, 0x0, NotRestricted, None),
    /* 2011 */ element!(DiagnosticContributionRef, 4203, One, false, 0x0, NotRestricted, None),
    /* 2012 */ element!(DiagnosticContributionRefs, 4170, ZeroOrOne, false, 0x1FF000, AdaptivePlatform, Some(5103)),
    /* 2013 */ element!(DiagnosticContributionRefs, 4204, ZeroOrOne, false, 0xC00, AdaptivePlatform, Some(4974)),
    /* 2014 */ element!(DiagnosticContributionSet, 1199, One, false, 0x0, NotRestricted, None),
    /* 2015 */ element!(DiagnosticControlDtcSetting, 1203, One, false, 0x0, NotRestricted, None),
    /* 2016 */ element!(DiagnosticControlDtcSettingClass, 1204, One, false, 0x0, NotRestricted, None),
    /* 2017 */ element!(DiagnosticControlEnableMaskBit, 1206, One, false, 0x0, NotRestricted, None),
    /* 2018 */ element!(DiagnosticControlNeeds, 1209, One, false, 0x0, NotRestricted, None),
    /* 2019 */ element!(DiagnosticCustomServiceClass, 1210, One, false, 0x0, NotRestricted, None),
    /* 2020 */ element!(DiagnosticCustomServiceInstance, 1211, One, false, 0x0, NotRestricted, None),
    /* 2021 */ element!(DiagnosticDataChangeTrigger, 1215, One, false, 0x0, NotRestricted, None),
    /* 2022 */ element!(DiagnosticDataElement, 1216, One, false, 0x0, NotRestricted, None),
    /* 2023 */ element!(DiagnosticDataElementInterface, 1217, One, false, 0x0, NotRestricted, None),
    /* 2024 */ element!(DiagnosticDataElementRef, 1226, ZeroOrOne, false, 0x0, ClassicPlatform, Some(5216)),
    /* 2025 */ element!(DiagnosticDataElementRef, 1226, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5220)),
    /* 2026 */ element!(DiagnosticDataElementRef, 1236, ZeroOrOne, false, 0x0, NotRestricted, Some(5337)),
    /* 2027 */ element!(DiagnosticDataElementRef, 1236, ZeroOrOne, false, 0x0, NotRestricted, Some(5507)),
    /* 2028 */ element!(DiagnosticDataElementRef, 1553, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5220)),
    /* 2029 */ element!(DiagnosticDataIdentifier, 1218, One, false, 0x0, NotRestricted, None),
    /* 2030 */ element!(DiagnosticDataIdentifierGenericInterface, 1219, One, false, 0x0, NotRestricted, None),
    /* 2031 */ element!(DiagnosticDataIdentifierInterface, 1220, One, false, 0x0, NotRestricted, None),
    /* 2032 */ element!(DiagnosticDataIdentifierRef, 1227, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5221)),
    /* 2033 */ element!(DiagnosticDataIdentifierRef, 1550, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5221)),
    /* 2034 */ element!(DiagnosticDataIdentifierRef, 1554, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5221)),
    /* 2035 */ element!(DiagnosticDataIdentifierSet, 1221, One, false, 0x0, NotRestricted, None),
    /* 2036 */ element!(DiagnosticDataIdentifierSetRef, 1224, ZeroOrOne, false, 0x0, NotRestricted, None),
    /* 2037 */ element!(DiagnosticDataIdentifierSetRefConditional, 1223, One, false, 0x0, NotRestricted, None),
    /* 2038 */ element!(DiagnosticDataPortMapping, 1225, One, false, 0x0, NotRestricted, None),
    /* 2039 */ element!(DiagnosticDataTransfer, 1229, One, false, 0x0, NotRestricted, None),
    /* 2040 */ element!(DiagnosticDataTransferClass, 1230, One, false, 0x0, NotRestricted, None),
    /* 2041 */ element!(DiagnosticDeAuthentication, 1232, One, false, 0x0, NotRestricted, None),
    /* 2042 */ element!(DiagnosticDebounceAlgorithmProps, 1233, One, false, 0x0, NotRestricted, None),
    /* 2043 */ element!(DiagnosticDebounceBehaviorEnumValueVariationPoint, 1361, One, false, 0x0, NotRestricted, None),
    /* 2044 */ element!(DiagnosticDemProvidedDataMapping, 1235, One, false, 0x0, NotRestricted, None),
    /* 2045 */ element!(DiagnosticDeploymentPropsRef, 4190, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5059)),
    /* 2046 */ element!(DiagnosticDoIpActivationLineInterface, 1238, One, false, 0x0, NotRestricted, None),
    /* 2047 */ element!(DiagnosticDoIpActivationLinePortMapping, 1239, One, false, 0x0, NotRestricted, None),
    /* 2048 */ element!(DiagnosticDoIpEntityIdentificationInterface, 1240, One, false, 0x0, NotRestricted, None),
    /* 2049 */ element!(DiagnosticDoIpEntityIdentificationPortMapping, 1241, One, false, 0x0, NotRestricted, None),
    /* 2050 */ element!(DiagnosticDoIpGroupIdentificationInterface, 1242, One, false, 0x0, NotRestricted, None),
    /* 2051 */ element!(DiagnosticDoIpGroupIdentificationPortMapping, 1243, One, false, 0x0, NotRestricted, None),
    /* 2052 */ element!(DiagnosticDoIpPowerModeInterface, 1244, One, false, 0x0, NotRestricted, None),
    /* 2053 */ element!(DiagnosticDoIpPowerModePortMapping, 1245, One, false, 0x0, NotRestricted, None),
    /* 2054 */ element!(DiagnosticDoIpTriggerVehicleAnnouncementInterface, 1246, One, false, 0x0, NotRestricted, None),
    /* 2055 */ element!(DiagnosticDoIpTriggerVehicleAnnouncementPortMapping, 1247, One, false, 0x0, NotRestricted, None),
    /* 2056 */ element!(DiagnosticDownloadInterface, 1248, One, false, 0x0, NotRestricted, None),
    /* 2057 */ element!(DiagnosticDtcChangeTrigger, 1249, One, false, 0x0, NotRestricted, None),
    /* 2058 */ element!(DiagnosticDtcInformationInterface, 1250, One, false, 0x0, NotRestricted, None),
    /* 2059 */ element!(DiagnosticDynamicDataIdentifier, 1251, One, false, 0x0, NotRestricted, None),
    /* 2060 */ element!(DiagnosticDynamicallyDefineDataIdentifier, 1252, One, false, 0x0, NotRestricted, None),
    /* 2061 */ element!(DiagnosticDynamicallyDefineDataIdentifierClass, 1253, One, false, 0x0, NotRestricted, None),
    /* 2062 */ element!(DiagnosticEcuInstanceProps, 1258, One, false, 0x0, NotRestricted, None),
    /* 2063 */ element!(DiagnosticEcuReset, 1262, One, false, 0x0, NotRestricted, None),
    /* 2064 */ element!(DiagnosticEcuResetClass, 1263, One, false, 0x0, NotRestricted, None),
    /* 2065 */ element!(DiagnosticEcuResetInterface, 1265, One, false, 0x0, NotRestricted, None),
    /* 2066 */ element!(DiagnosticEnableCondition, 1266, One, false, 0x0, NotRestricted, None),
    /* 2067 */ element!(DiagnosticEnableConditionGroup, 1267, One, false, 0x0, NotRestricted, None),
    /* 2068 */ element!(DiagnosticEnableConditionNeeds, 1269, One, false, 0x0, NotRestricted, None),
    /* 2069 */ element!(DiagnosticEnableConditionPortMapping, 1270, One, false, 0x0, NotRestricted, None),
    /* 2070 */ element!(DiagnosticEnableConditionRef, 1271, ZeroOrOne, false, 0x0, NotRestricted, None),
    /* 2071 */ element!(DiagnosticEnableConditionRefConditional, 1272, One, false, 0x0, NotRestricted, None),
    /* 2072 */ element!(DiagnosticEnvBswModeElement, 1273, One, false, 0x0, NotRestricted, None),
    /* 2073 */ element!(DiagnosticEnvConditionFormula, 1274, One, false, 0x0, NotRestricted, None),
    /* 2074 */ element!(DiagnosticEnvDataCondition, 1276, One, false, 0x0, NotRestricted, None),
    /* 2075 */ element!(DiagnosticEnvDataElementCondition, 1278, One, false, 0x0, NotRestricted, None),
    /* 2076 */ element!(DiagnosticEnvModeCondition, 1280, One, false, 0x0, NotRestricted, None),
    /* 2077 */ element!(DiagnosticEnvSwcModeElement, 1282, One, false, 0x0, NotRestricted, None),
    /* 2078 */ element!(DiagnosticEnvironmentalCondition, 1283, One, false, 0x0, NotRestricted, None),
    /* 2079 */ element!(DiagnosticEvent, 1285, One, false, 0x0, NotRestricted, None),
    /* 2080 */ element!(DiagnosticEventInfoNeeds, 1291, One, false, 0x0, NotRestricted, None),
    /* 2081 */ element!(DiagnosticEventInterface, 1292, One, false, 0x0, NotRestricted, None),
    /* 2082 */ element!(DiagnosticEventManagerNeeds, 1294, One, false, 0x0, NotRestricted, None),
    /* 2083 */ element!(DiagnosticEventNeeds, 1295, One, false, 0x0, NotRestricted, None),
    /* 2084 */ element!(DiagnosticEventPortMapping, 1300, One, false, 0x0, NotRestricted, None),
    /* 2085 */ element!(DiagnosticEventRef, 1302, ZeroOrOne, false, 0x0, NotRestricted, Some(1841)),
    /* 2086 */ element!(DiagnosticEventRef, 1302, ZeroOrOne, false, 0x0, ClassicPlatform, Some(1843)),
    /* 2087 */ element!(DiagnosticEventRef, 1302, ZeroOrOne, false, 0x0, NotRestricted, Some(1844)),
    /* 2088 */ element!(DiagnosticEventRef, 1302, ZeroOrOne, false, 0x0, NotRestricted, Some(1845)),
    /* 2089 */ element!(DiagnosticEventRef, 1302, ZeroOrOne, false, 0x0, NotRestricted, Some(1846)),
    /* 2090 */ element!(DiagnosticEventRef, 1302, ZeroOrOne, false, 0x0, NotRestricted, Some(2065)),
    /* 2091 */ element!(DiagnosticEventRef, 1305, ZeroOrOne, false, 0x0, NotRestricted, None),
    /* 2092 */ element!(DiagnosticEventRef, 1312, ZeroOrOne, false, 0x0, ClassicPlatform, Some(5076)),
    /* 2093 */ element!(DiagnosticEventRef, 1378, ZeroOrOne, false, 0x0, NotRestricted, Some(5695)),
    /* 2094 */ element!(DiagnosticEventRef, 1406, ZeroOrOne, false, 0x0, ClassicPlatform, Some(1842)),
    /* 2095 */ element!(DiagnosticEventRef, 1420, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(2065)),
    /* 2096 */ element!(DiagnosticEventRef, 1420, ZeroOrOne, false, 0x0, ClassicPlatform, Some(5127)),
    /* 2097 */ element!(DiagnosticEventRef, 1427, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(2066)),
    /* 2098 */ element!(DiagnosticEventRef, 2302, One, false, 0x0, NotRestricted, None),
    /* 2099 */ element!(DiagnosticEventRefConditional, 1304, One, false, 0x0, NotRestricted, None),
    /* 2100 */ element!(DiagnosticEventRefs, 2303, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5095)),
    /* 2101 */ element!(DiagnosticEventToDebounceAlgorithmMapping, 1306, One, false, 0x0, NotRestricted, None),
    /* 2102 */ element!(DiagnosticEventToEnableConditionGroupMapping, 1308, One, false, 0x0, NotRestricted, None),
    /* 2103 */ element!(DiagnosticEventToOperationCycleMapping, 1310, One, false, 0x0, NotRestricted, None),
    /* 2104 */ element!(DiagnosticEventToSecurityEventMapping, 1311, One, false, 0x0, NotRestricted, None),
    /* 2105 */ element!(DiagnosticEventToStorageConditionGroupMapping, 1314, One, false, 0x0, NotRestricted, None),
    /* 2106 */ element!(DiagnosticEventToTroubleCodeJ1939Mapping, 1316, One, false, 0x0, NotRestricted, None),
    /* 2107 */ element!(DiagnosticEventToTroubleCodeUdsMapping, 1318, One, false, 0x0, NotRestricted, None),
    /* 2108 */ element!(DiagnosticEventWindow, 1320, One, false, 0x0, NotRestricted, None),
    /* 2109 */ element!(DiagnosticEvents, 1635, ZeroOrOne, false, 0x1C0000, NotRestricted, Some(4133)),
    /* 2110 */ element!(DiagnosticExtendedDataRecord, 1322, One, false, 0x0, NotRestricted, None),
    /* 2111 */ element!(DiagnosticExtendedDataRecordRef, 1324, ZeroOrOne, false, 0x0, NotRestricted, None),
    /* 2112 */ element!(DiagnosticExtendedDataRecordRefConditional, 1323, One, false, 0x0, NotRestricted, None),
    /* 2113 */ element!(DiagnosticExternalAuthenticationIdentification, 1325, One, false, 0x0, NotRestricted, None),
    /* 2114 */ element!(DiagnosticExternalAuthenticationInterface, 1326, One, false, 0x0, NotRestricted, None),
    /* 2115 */ element!(DiagnosticExternalAuthenticationPortMapping, 1327, One, false, 0x0, NotRestricted, None),
    /* 2116 */ element!(DiagnosticExtractRef, 4188, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5000)),
    /* 2117 */ element!(DiagnosticExtractRef, 4191, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5233)),
    /* 2118 */ element!(DiagnosticFimAliasEvent, 1328, One, false, 0x0, NotRestricted, None),
    /* 2119 */ element!(DiagnosticFimAliasEventGroup, 1329, One, false, 0x0, NotRestricted, None),
    /* 2120 */ element!(DiagnosticFimAliasEventGroupMapping, 1331, One, false, 0x0, NotRestricted, None),
    /* 2121 */ element!(DiagnosticFimAliasEventMapping, 1332, One, false, 0x0, NotRestricted, None),
    /* 2122 */ element!(DiagnosticFimEventGroup, 1333, One, false, 0x0, NotRestricted, None),
    /* 2123 */ element!(DiagnosticFimFunctionMapping, 1335, One, false, 0x0, NotRestricted, None),
    /* 2124 */ element!(DiagnosticFreezeFrame, 1339, One, false, 0x0, NotRestricted, None),
    /* 2125 */ element!(DiagnosticFreezeFrameRef, 1341, ZeroOrOne, false, 0x0, NotRestricted, None),
    /* 2126 */ element!(DiagnosticFreezeFrameRefConditional, 1340, One, false, 0x0, NotRestricted, None),
    /* 2127 */ element!(DiagnosticFunctionIdentifier, 1342, One, false, 0x0, NotRestricted, None),
    /* 2128 */ element!(DiagnosticFunctionIdentifierInhibit, 1343, One, false, 0x0, NotRestricted, None),
    /* 2129 */ element!(DiagnosticFunctionInhibitSource, 1345, One, false, 0x0, NotRestricted, None),
    /* 2130 */ element!(DiagnosticGenericUdsInterface, 1348, One, false, 0x0, NotRestricted, None),
    /* 2131 */ element!(DiagnosticGenericUdsNeeds, 1349, One, false, 0x0, NotRestricted, None),
    /* 2132 */ element!(DiagnosticGenericUdsPortMapping, 1350, One, false, 0x0, NotRestricted, None),
    /* 2133 */ element!(DiagnosticIndicator, 1355, One, false, 0x0, NotRestricted, None),
    /* 2134 */ element!(DiagnosticIndicatorInterface, 1356, One, false, 0x0, NotRestricted, None),
    /* 2135 */ element!(DiagnosticIndicatorNeeds, 1357, One, false, 0x0, NotRestricted, None),
    /* 2136 */ element!(DiagnosticIndicatorPortMapping, 1358, One, false, 0x0, NotRestricted, None),
    /* 2137 */ element!(DiagnosticIndicatorTypeEnumValueVariationPoint, 1361, One, false, 0x0, NotRestricted, None),
    /* 2138 */ element!(DiagnosticInfoType, 1362, One, false, 0x0, NotRestricted, None),
    /* 2139 */ element!(DiagnosticInhibitSourceEventMapping, 1364, One, false, 0x0, NotRestricted, None),
    /* 2140 */ element!(DiagnosticIoControl, 1369, One, false, 0x0, NotRestricted, None),
    /* 2141 */ element!(DiagnosticIoControlClass, 1370, One, false, 0x0, NotRestricted, None),
    /* 2142 */ element!(DiagnosticIoControlNeeds, 1374, One, false, 0x0, NotRestricted, None),
    /* 2143 */ element!(DiagnosticIumpr, 1376, One, false, 0x0, NotRestricted, None),
    /* 2144 */ element!(DiagnosticIumprDenominatorGroup, 1377, One, false, 0x0, NotRestricted, None),
    /* 2145 */ element!(DiagnosticIumprGroup, 1379, One, false, 0x0, NotRestricted, None),
    /* 2146 */ element!(DiagnosticIumprGroupIdentifier, 1380, One, false, 0x0, NotRestricted, None),
    /* 2147 */ element!(DiagnosticIumprToFunctionIdentifierMapping, 1385, One, false, 0x0, NotRestricted, None),
    /* 2148 */ element!(DiagnosticJ1939ExpandedFreezeFrame, 1388, One, false, 0x0, NotRestricted, None),
    /* 2149 */ element!(DiagnosticJ1939FreezeFrame, 1389, One, false, 0x0, NotRestricted, None),
    /* 2150 */ element!(DiagnosticJ1939Node, 1391, One, false, 0x0, NotRestricted, None),
    /* 2151 */ element!(DiagnosticJ1939Spn, 1393, One, false, 0x0, NotRestricted, None),
    /* 2152 */ element!(DiagnosticJ1939SpnMapping, 1394, One, false, 0x0, NotRestricted, None),
    /* 2153 */ element!(DiagnosticJ1939SwMapping, 1398, One, false, 0x0, NotRestricted, None),
    /* 2154 */ element!(DiagnosticMasterToSlaveEventMapping, 1403, One, false, 0x0, NotRestricted, None),
    /* 2155 */ element!(DiagnosticMasterToSlaveEventMappingSet, 1404, One, false, 0x0, NotRestricted, None),
    /* 2156 */ element!(DiagnosticMeasurementIdentifier, 1407, One, false, 0x0, NotRestricted, None),
    /* 2157 */ element!(DiagnosticMemoryDestinationMirror, 1410, One, false, 0x0, NotRestricted, None),
    /* 2158 */ element!(DiagnosticMemoryDestinationPortMapping, 1411, One, false, 0x0, NotRestricted, None),
    /* 2159 */ element!(DiagnosticMemoryDestinationPrimary, 1413, One, false, 0x0, NotRestricted, None),
    /* 2160 */ element!(DiagnosticMemoryDestinationUserDefined, 1414, One, false, 0x0, NotRestricted, None),
    /* 2161 */ element!(DiagnosticMemoryIdentifier, 1417, One, false, 0x0, NotRestricted, None),
    /* 2162 */ element!(DiagnosticMemoryRef, 1652, ZeroOrOne, false, 0x180000, NotRestricted, Some(2173)),
    /* 2163 */ element!(DiagnosticMessageType, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(4017)),
    /* 2164 */ element!(DiagnosticMonitorInterface, 1418, One, false, 0x0, NotRestricted, None),
    /* 2165 */ element!(DiagnosticMonitorPortMapping, 1419, One, false, 0x0, NotRestricted, None),
    /* 2166 */ element!(DiagnosticMultipleConditionInterface, 1422, One, false, 0x0, NotRestricted, None),
    /* 2167 */ element!(DiagnosticMultipleConditionPortMapping, 1423, One, false, 0x0, NotRestricted, None),
    /* 2168 */ element!(DiagnosticMultipleEventInterface, 1425, One, false, 0x0, NotRestricted, None),
    /* 2169 */ element!(DiagnosticMultipleEventPortMapping, 1426, One, false, 0x0, NotRestricted, None),
    /* 2170 */ element!(DiagnosticMultipleMonitorInterface, 1428, One, false, 0x0, NotRestricted, None),
    /* 2171 */ element!(DiagnosticMultipleMonitorPortMapping, 1429, One, false, 0x0, NotRestricted, None),
    /* 2172 */ element!(DiagnosticOperationCycle, 1432, One, false, 0x0, NotRestricted, None),
    /* 2173 */ element!(DiagnosticOperationCycleInterface, 1433, One, false, 0x0, NotRestricted, None),
    /* 2174 */ element!(DiagnosticOperationCycleNeeds, 1434, One, false, 0x0, NotRestricted, None),
    /* 2175 */ element!(DiagnosticOperationCyclePortMapping, 1435, One, false, 0x0, NotRestricted, None),
    /* 2176 */ element!(DiagnosticOperationCycleRef, 1191, ZeroOrOne, false, 0x0, NotRestricted, None),
    /* 2177 */ element!(DiagnosticOperationCycleRefConditional, 1436, One, false, 0x0, NotRestricted, None),
    /* 2178 */ element!(DiagnosticParameter, 1438, One, false, 0x0, NotRestricted, None),
    /* 2179 */ element!(DiagnosticParameterElement, 1439, One, false, 0x0, NotRestricted, None),
    /* 2180 */ element!(DiagnosticParameterIdentifier, 1445, One, false, 0x0, NotRestricted, None),
    /* 2181 */ element!(DiagnosticParameterRef, 1564, ZeroOrOne, false, 0x0, NotRestricted, Some(5506)),
    /* 2182 */ element!(DiagnosticParameterRef, 1564, ZeroOrOne, false, 0x0, NotRestricted, Some(5508)),
    /* 2183 */ element!(DiagnosticPeriodicRate, 1447, One, false, 0x0, NotRestricted, None),
    /* 2184 */ element!(DiagnosticPowertrainFreezeFrame, 1449, One, false, 0x0, NotRestricted, None),
    /* 2185 */ element!(DiagnosticProofOfOwnership, 1453, One, false, 0x0, NotRestricted, None),
    /* 2186 */ element!(DiagnosticProps, 1261, ZeroOrOne, false, 0x0, NotRestricted, Some(5601)),
    /* 2187 */ element!(DiagnosticProps, 4192, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3314)),
    /* 2188 */ element!(DiagnosticProtocol, 1454, One, false, 0x0, NotRestricted, None),
    /* 2189 */ element!(DiagnosticProvidedDataMapping, 1457, One, false, 0x0, NotRestricted, None),
    /* 2190 */ element!(DiagnosticReadDataByIdentifier, 1459, One, false, 0x0, NotRestricted, None),
    /* 2191 */ element!(DiagnosticReadDataByIdentifierClass, 1460, One, false, 0x0, NotRestricted, None),
    /* 2192 */ element!(DiagnosticReadDataByPeriodicId, 1462, One, false, 0x0, NotRestricted, None),
    /* 2193 */ element!(DiagnosticReadDataByPeriodicIdClass, 1463, One, false, 0x0, NotRestricted, None),
    /* 2194 */ element!(DiagnosticReadDtcInformation, 1466, One, false, 0x0, NotRestricted, None),
    /* 2195 */ element!(DiagnosticReadDtcInformationClass, 1467, One, false, 0x0, NotRestricted, None),
    /* 2196 */ element!(DiagnosticReadMemoryByAddress, 1469, One, false, 0x0, NotRestricted, None),
    /* 2197 */ element!(DiagnosticReadMemoryByAddressClass, 1470, One, false, 0x0, NotRestricted, None),
    /* 2198 */ element!(DiagnosticReadScalingDataByIdentifier, 1472, One, false, 0x0, NotRestricted, None),
    /* 2199 */ element!(DiagnosticReadScalingDataByIdentifierClass, 1473, One, false, 0x0, NotRestricted, None),
    /* 2200 */ element!(DiagnosticRelevance, 3983, ZeroOrOne, false, 0x0, NotRestricted, Some(1245)),
    /* 2201 */ element!(DiagnosticRequestControlOfOnBoardDevice, 1476, One, false, 0x0, NotRestricted, None),
    /* 2202 */ element!(DiagnosticRequestControlOfOnBoardDeviceClass, 1477, One, false, 0x0, NotRestricted, None),
    /* 2203 */ element!(DiagnosticRequestCurrentPowertrainData, 1480, One, false, 0x0, NotRestricted, None),
    /* 2204 */ element!(DiagnosticRequestCurrentPowertrainDataClass, 1481, One, false, 0x0, NotRestricted, None),
    /* 2205 */ element!(DiagnosticRequestDownload, 1483, One, false, 0x0, NotRestricted, None),
    /* 2206 */ element!(DiagnosticRequestDownloadClass, 1484, One, false, 0x0, NotRestricted, None),
    /* 2207 */ element!(DiagnosticRequestEmissionRelatedDtc, 1486, One, false, 0x0, NotRestricted, None),
    /* 2208 */ element!(DiagnosticRequestEmissionRelatedDtcClass, 1487, One, false, 0x0, NotRestricted, None),
    /* 2209 */ element!(DiagnosticRequestEmissionRelatedDtcPermanentStatus, 1488, One, false, 0x0, NotRestricted, None),
    /* 2210 */ element!(DiagnosticRequestEmissionRelatedDtcPermanentStatusClass, 1489, One, false, 0x0, NotRestricted, None),
    /* 2211 */ element!(DiagnosticRequestFileTransfer, 1492, One, false, 0x0, NotRestricted, None),
    /* 2212 */ element!(DiagnosticRequestFileTransferClass, 1493, One, false, 0x0, NotRestricted, None),
    /* 2213 */ element!(DiagnosticRequestFileTransferInterface, 1494, One, false, 0x0, NotRestricted, None),
    /* 2214 */ element!(DiagnosticRequestFileTransferNeeds, 1495, One, false, 0x0, NotRestricted, None),
    /* 2215 */ element!(DiagnosticRequestOnBoardMonitoringTestResults, 1497, One, false, 0x0, NotRestricted, None),
    /* 2216 */ element!(DiagnosticRequestOnBoardMonitoringTestResultsClass, 1498, One, false, 0x0, NotRestricted, None),
    /* 2217 */ element!(DiagnosticRequestPowertrainFreezeFrameData, 1503, One, false, 0x0, NotRestricted, None),
    /* 2218 */ element!(DiagnosticRequestPowertrainFreezeFrameDataClass, 1504, One, false, 0x0, NotRestricted, None),
    /* 2219 */ element!(DiagnosticRequestUpload, 1509, One, false, 0x0, NotRestricted, None),
    /* 2220 */ element!(DiagnosticRequestUploadClass, 1510, One, false, 0x0, NotRestricted, None),
    /* 2221 */ element!(DiagnosticRequestVehicleInfo, 1512, One, false, 0x0, NotRestricted, None),
    /* 2222 */ element!(DiagnosticRequestVehicleInfoClass, 1513, One, false, 0x0, NotRestricted, None),
    /* 2223 */ element!(DiagnosticResponseOnEvent, 1516, One, false, 0x0, NotRestricted, None),
    /* 2224 */ element!(DiagnosticResponseOnEventClass, 1518, One, false, 0x0, NotRestricted, None),
    /* 2225 */ element!(DiagnosticResponseOnEventNeeds, 1521, One, false, 0x0, NotRestricted, None),
    /* 2226 */ element!(DiagnosticRoutine, 1524, One, false, 0x0, NotRestricted, None),
    /* 2227 */ element!(DiagnosticRoutineControl, 1525, One, false, 0x0, NotRestricted, None),
    /* 2228 */ element!(DiagnosticRoutineControlClass, 1526, One, false, 0x0, NotRestricted, None),
    /* 2229 */ element!(DiagnosticRoutineGenericInterface, 1529, One, false, 0x0, NotRestricted, None),
    /* 2230 */ element!(DiagnosticRoutineInterface, 1530, One, false, 0x0, NotRestricted, None),
    /* 2231 */ element!(DiagnosticRoutineNeeds, 1531, One, false, 0x0, NotRestricted, None),
    /* 2232 */ element!(DiagnosticSecureCodingMapping, 1534, One, false, 0x0, NotRestricted, None),
    /* 2233 */ element!(DiagnosticSecurityAccess, 1538, One, false, 0x0, NotRestricted, None),
    /* 2234 */ element!(DiagnosticSecurityAccessClass, 1539, One, false, 0x0, NotRestricted, None),
    /* 2235 */ element!(DiagnosticSecurityEventReportingModeMapping, 1542, One, false, 0x0, NotRestricted, None),
    /* 2236 */ element!(DiagnosticSecurityLevel, 1544, One, false, 0x0, NotRestricted, None),
    /* 2237 */ element!(DiagnosticSecurityLevelInterface, 1545, One, false, 0x0, NotRestricted, None),
    /* 2238 */ element!(DiagnosticSecurityLevelPortMapping, 1546, One, false, 0x0, NotRestricted, None),
    /* 2239 */ element!(DiagnosticServiceDataIdentifierMapping, 1549, One, false, 0x0, NotRestricted, None),
    /* 2240 */ element!(DiagnosticServiceDataIdentifierPortMapping, 1552, One, false, 0x0, NotRestricted, None),
    /* 2241 */ element!(DiagnosticServiceDataMapping, 1556, One, false, 0x0, NotRestricted, None),
    /* 2242 */ element!(DiagnosticServiceGenericMapping, 1557, One, false, 0x0, NotRestricted, None),
    /* 2243 */ element!(DiagnosticServiceInstanceRef, 1558, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(2142)),
    /* 2244 */ element!(DiagnosticServiceInstanceRef, 1561, ZeroOrOne, false, 0x0, NotRestricted, None),
    /* 2245 */ element!(DiagnosticServiceInstanceRefConditional, 1560, One, false, 0x0, NotRestricted, None),
    /* 2246 */ element!(DiagnosticServiceInstances, 1568, ZeroOrOne, false, 0x100000, NotRestricted, Some(5536)),
    /* 2247 */ element!(DiagnosticServiceSwMapping, 1563, One, false, 0x0, NotRestricted, None),
    /* 2248 */ element!(DiagnosticServiceTable, 1566, One, false, 0x0, NotRestricted, None),
    /* 2249 */ element!(DiagnosticServiceTableRef, 1570, ZeroOrOne, false, 0x0, NotRestricted, None),
    /* 2250 */ element!(DiagnosticServiceTableRefConditional, 1569, One, false, 0x0, NotRestricted, None),
    /* 2251 */ element!(DiagnosticServiceValidationInterface, 1579, One, false, 0x0, NotRestricted, None),
    /* 2252 */ element!(DiagnosticServiceValidationMapping, 1580, One, false, 0x0, NotRestricted, None),
    /* 2253 */ element!(DiagnosticSession, 1581, One, false, 0x0, NotRestricted, None),
    /* 2254 */ element!(DiagnosticSessionControl, 1582, One, false, 0x0, NotRestricted, None),
    /* 2255 */ element!(DiagnosticSessionControlClass, 1583, One, false, 0x0, NotRestricted, None),
    /* 2256 */ element!(DiagnosticSessionRef, 1584, One, false, 0x0, NotRestricted, None),
    /* 2257 */ element!(DiagnosticSessionRef, 1584, ZeroOrOne, false, 0x0, NotRestricted, Some(5502)),
    /* 2258 */ element!(DiagnosticSessionRefs, 1123, ZeroOrOne, false, 0x180000, NotRestricted, Some(5515)),
    /* 2259 */ element!(DiagnosticSoftwareClusterProps, 1587, One, false, 0x0, NotRestricted, None),
    /* 2260 */ element!(DiagnosticSovdAuthorizationInterface, 1588, One, false, 0x0, NotRestricted, None),
    /* 2261 */ element!(DiagnosticSovdAuthorizationPortMapping, 1589, One, false, 0x0, NotRestricted, None),
    /* 2262 */ element!(DiagnosticSovdBulkData, 1590, One, false, 0x0, NotRestricted, None),
    /* 2263 */ element!(DiagnosticSovdBulkDataInterface, 1591, One, false, 0x0, NotRestricted, None),
    /* 2264 */ element!(DiagnosticSovdBulkDataPortMapping, 1592, One, false, 0x0, NotRestricted, None),
    /* 2265 */ element!(DiagnosticSovdConfigurationBulkData, 1594, One, false, 0x0, NotRestricted, None),
    /* 2266 */ element!(DiagnosticSovdConfigurationDataIdentifierMapping, 1595, One, false, 0x0, NotRestricted, None),
    /* 2267 */ element!(DiagnosticSovdConfigurationInterface, 1598, One, false, 0x0, NotRestricted, None),
    /* 2268 */ element!(DiagnosticSovdConfigurationParameter, 1599, One, false, 0x0, NotRestricted, None),
    /* 2269 */ element!(DiagnosticSovdConfigurationPortMapping, 1600, One, false, 0x0, NotRestricted, None),
    /* 2270 */ element!(DiagnosticSovdFaultMemoryAccess, 1602, One, false, 0x0, NotRestricted, None),
    /* 2271 */ element!(DiagnosticSovdLock, 1603, One, false, 0x0, NotRestricted, None),
    /* 2272 */ element!(DiagnosticSovdLog, 1604, One, false, 0x0, NotRestricted, None),
    /* 2273 */ element!(DiagnosticSovdMethod, 1605, One, false, 0x0, NotRestricted, None),
    /* 2274 */ element!(DiagnosticSovdMethodPrimitive, 1607, One, false, 0x0, NotRestricted, None),
    /* 2275 */ element!(DiagnosticSovdProximityChallengeInterface, 1609, One, false, 0x0, NotRestricted, None),
    /* 2276 */ element!(DiagnosticSovdProximityChallengePortMapping, 1610, One, false, 0x0, NotRestricted, None),
    /* 2277 */ element!(DiagnosticSovdServiceValidationInterface, 1612, One, false, 0x0, NotRestricted, None),
    /* 2278 */ element!(DiagnosticSovdServiceValidationPortMapping, 1613, One, false, 0x0, NotRestricted, None),
    /* 2279 */ element!(DiagnosticSovdUpdate, 1614, One, false, 0x0, NotRestricted, None),
    /* 2280 */ element!(DiagnosticSovdUpdateInterface, 1615, One, false, 0x0, NotRestricted, None),
    /* 2281 */ element!(DiagnosticSovdUpdatePortMapping, 1616, One, false, 0x0, NotRestricted, None),
    /* 2282 */ element!(DiagnosticStorageCondition, 1623, One, false, 0x0, NotRestricted, None),
    /* 2283 */ element!(DiagnosticStorageConditionGroup, 1624, One, false, 0x0, NotRestricted, None),
    /* 2284 */ element!(DiagnosticStorageConditionNeeds, 1626, One, false, 0x0, NotRestricted, None),
    /* 2285 */ element!(DiagnosticStorageConditionPortMapping, 1627, One, false, 0x0, NotRestricted, None),
    /* 2286 */ element!(DiagnosticStorageConditionRef, 1628, ZeroOrOne, false, 0x0, NotRestricted, None),
    /* 2287 */ element!(DiagnosticStorageConditionRef, 1628, ZeroOrOne, false, 0x0, ClassicPlatform, Some(2150)),
    /* 2288 */ element!(DiagnosticStorageConditionRefConditional, 1630, One, false, 0x0, NotRestricted, None),
    /* 2289 */ element!(DiagnosticTestResult, 1634, One, false, 0x0, NotRestricted, None),
    /* 2290 */ element!(DiagnosticTestResultRef, 1499, One, false, 0x0, NotRestricted, None),
    /* 2291 */ element!(DiagnosticTestResultRefs, 1500, ZeroOrOne, false, 0x0, NotRestricted, Some(5066)),
    /* 2292 */ element!(DiagnosticTestResultUpdateEnumValueVariationPoint, 1692, One, false, 0x0, NotRestricted, None),
    /* 2293 */ element!(DiagnosticTestRoutineIdentifier, 1637, One, false, 0x0, NotRestricted, None),
    /* 2294 */ element!(DiagnosticTransferExit, 1638, One, false, 0x0, NotRestricted, None),
    /* 2295 */ element!(DiagnosticTransferExitClass, 1639, One, false, 0x0, NotRestricted, None),
    /* 2296 */ element!(DiagnosticTransmitCertificateInterface, 1641, One, false, 0x0, NotRestricted, None),
    /* 2297 */ element!(DiagnosticTroubleCodeGroup, 1642, One, false, 0x0, NotRestricted, None),
    /* 2298 */ element!(DiagnosticTroubleCodeJ1939, 1644, One, false, 0x0, NotRestricted, None),
    /* 2299 */ element!(DiagnosticTroubleCodeObd, 1646, One, false, 0x0, NotRestricted, None),
    /* 2300 */ element!(DiagnosticTroubleCodeObdProps, 1649, One, false, 0x0, NotRestricted, None),
    /* 2301 */ element!(DiagnosticTroubleCodeProps, 1650, One, false, 0x0, NotRestricted, None),
    /* 2302 */ element!(DiagnosticTroubleCodePropsRef, 1662, ZeroOrOne, false, 0x0, NotRestricted, None),
    /* 2303 */ element!(DiagnosticTroubleCodePropsRefConditional, 1661, One, false, 0x0, NotRestricted, None),
    /* 2304 */ element!(DiagnosticTroubleCodeRef, 1665, ZeroOrOne, false, 0x0, NotRestricted, None),
    /* 2305 */ element!(DiagnosticTroubleCodeRefConditional, 1664, One, false, 0x0, NotRestricted, None),
    /* 2306 */ element!(DiagnosticTroubleCodeUds, 1666, One, false, 0x0, NotRestricted, None),
    /* 2307 */ element!(DiagnosticTroubleCodeUdsToClearConditionGroupMapping, 1669, One, false, 0x0, NotRestricted, None),
    /* 2308 */ element!(DiagnosticTroubleCodeUdsToTroubleCodeObdMapping, 1672, One, false, 0x0, NotRestricted, None),
    /* 2309 */ element!(DiagnosticUdsSeverityEnumValueVariationPoint, 1678, One, false, 0x0, NotRestricted, None),
    /* 2310 */ element!(DiagnosticUploadDownloadNeeds, 1679, One, false, 0x0, NotRestricted, None),
    /* 2311 */ element!(DiagnosticUploadDownloadPortMapping, 1680, One, false, 0x0, NotRestricted, None),
    /* 2312 */ element!(DiagnosticUploadInterface, 1681, One, false, 0x0, NotRestricted, None),
    /* 2313 */ element!(DiagnosticValueAccess, 1682, ZeroOrOne, false, 0x0, NotRestricted, Some(3978)),
    /* 2314 */ element!(DiagnosticValueNeeds, 1683, One, false, 0x0, NotRestricted, None),
    /* 2315 */ element!(DiagnosticVerifyCertificateBidirectional, 1684, One, false, 0x0, NotRestricted, None),
    /* 2316 */ element!(DiagnosticVerifyCertificateUnidirectional, 1685, One, false, 0x0, NotRestricted, None),
    /* 2317 */ element!(DiagnosticWriteDataByIdentifier, 1686, One, false, 0x0, NotRestricted, None),
    /* 2318 */ element!(DiagnosticWriteDataByIdentifierClass, 1687, One, false, 0x0, NotRestricted, None),
    /* 2319 */ element!(DiagnosticWriteMemoryByAddress, 1689, One, false, 0x0, NotRestricted, None),
    /* 2320 */ element!(DiagnosticWriteMemoryByAddressClass, 1690, One, false, 0x0, NotRestricted, None),
    /* 2321 */ element!(DiagnosticWwhObdDtcClassEnumValueVariationPoint, 1692, One, false, 0x0, NotRestricted, None),
    /* 2322 */ element!(DiagnosticsCommunicationSecurityNeeds, 1693, One, false, 0x0, NotRestricted, None),
    /* 2323 */ element!(DidNumber, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(5334)),
    /* 2324 */ element!(DidNumber, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(5335)),
    /* 2325 */ element!(DidSize, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(3965)),
    /* 2326 */ element!(DifferentiatedServiceCodePoint, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(1059)),
    /* 2327 */ element!(DifferentiatedServiceField, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(2683)),
    /* 2328 */ element!(DirectPduRef, 2748, ZeroOrOne, false, 0x0, ClassicPlatform, Some(1280)),
    /* 2329 */ element!(DirectPduRef, 4132, ZeroOrOne, false, 0x0, ClassicPlatform, Some(1733)),
    /* 2330 */ element!(DirectSuccessorRef, 1993, One, false, 0x0, NotRestricted, None),
    /* 2331 */ element!(DirectSuccessorRefs, 1988, ZeroOrOne, false, 0x0, ClassicPlatform, Some(2841)),
    /* 2332 */ element!(DirectTpSduRef, 2179, ZeroOrOne, false, 0x0, NotRestricted, Some(2093)),
    /* 2333 */ element!(DirectTpSduRef, 4699, ZeroOrOne, false, 0x0, ClassicPlatform, Some(2092)),
    /* 2334 */ element!(Direction, 225, ZeroOrOne, false, 0x0, NotRestricted, Some(2536)),
    /* 2335 */ element!(Direction, 225, ZeroOrOne, false, 0x0, NotRestricted, Some(4231)),
    /* 2336 */ element!(Direction, 652, ZeroOrOne, false, 0x0, NotRestricted, Some(3680)),
    /* 2337 */ element!(Direction, 4560, ZeroOrOne, false, 0x0, NotRestricted, Some(915)),
    /* 2338 */ element!(DisableEndToEndCheck, 298, ZeroOrOne, false, 0x0, NotRestricted, Some(918)),
    /* 2339 */ element!(DisableEndToEndStateMachine, 298, ZeroOrOne, false, 0x0, NotRestricted, Some(916)),
    /* 2340 */ element!(DisabledInModeIref, 3027, One, false, 0x0, NotRestricted, None),
    /* 2341 */ element!(DisabledInModeIrefs, 333, ZeroOrOne, false, 0x180000, NotRestricted, Some(2991)),
    /* 2342 */ element!(DisabledInModeIrefs, 333, ZeroOrOne, false, 0x1F0000, NotRestricted, Some(2991)),
    /* 2343 */ element!(DisabledInModeIrefs, 333, ZeroOrOne, false, 0x1FFFF8, NotRestricted, Some(2991)),
    /* 2344 */ element!(DisabledModeIref, 3591, One, false, 0x0, NotRestricted, None),
    /* 2345 */ element!(DisabledModeIrefs, 3782, ZeroOrOne, false, 0x1F0000, NotRestricted, Some(2119)),
    /* 2346 */ element!(DisabledModeIrefs, 3782, ZeroOrOne, false, 0x1FFFC0, NotRestricted, Some(2119)),
    /* 2347 */ element!(DisabledModeIrefs, 3782, ZeroOrOne, false, 0x1FFFF8, NotRestricted, Some(2119)),
    /* 2348 */ element!(DiscoveryProtectionKind, 1056, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(624)),
    /* 2349 */ element!(DiscoveryTechnology, 1694, ZeroOrOne, false, 0x0, NotRestricted, Some(713)),
    /* 2350 */ element!(DiscoveryType, 1075, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(919)),
    /* 2351 */ element!(DisplayFormat, 1696, ZeroOrOne, false, 0x0, NotRestricted, Some(4900)),
    /* 2352 */ element!(DisplayFormat, 1696, ZeroOrOne, false, 0x0, NotRestricted, Some(4903)),
    /* 2353 */ element!(DisplayFormat, 1696, ZeroOrOne, false, 0x0, NotRestricted, Some(4906)),
    /* 2354 */ element!(DisplayIdentifier, 2960, ZeroOrOne, false, 0x0, NotRestricted, Some(145)),
    /* 2355 */ element!(DisplayName, 2625, ZeroOrOne, false, 0x0, NotRestricted, Some(5788)),
    /* 2356 */ element!(DisplayPresentation, 1697, ZeroOrOne, false, 0x0, NotRestricted, Some(3576)),
    /* 2357 */ element!(DistinguishedPartitions, 349, ZeroOrOne, false, 0x1FFF80, NotRestricted, Some(1299)),
    /* 2358 */ element!(DltApplication, 1698, One, false, 0x0, NotRestricted, None),
    /* 2359 */ element!(DltApplicationRef, 1701, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(1847)),
    /* 2360 */ element!(DltApplicationToProcessMapping, 1700, One, false, 0x0, NotRestricted, None),
    /* 2361 */ element!(DltArgument, 1702, One, false, 0x0, NotRestricted, None),
    /* 2362 */ element!(DltArgumentEntrys, 1703, ZeroOrOne, false, 0x0, NotRestricted, Some(3299)),
    /* 2363 */ element!(DltArguments, 1739, ZeroOrOne, true, 0x0, NotRestricted, Some(1694)),
    /* 2364 */ element!(DltConfig, 1704, ZeroOrOne, false, 0x0, ClassicPlatform, Some(870)),
    /* 2365 */ element!(DltContext, 1708, One, false, 0x0, NotRestricted, None),
    /* 2366 */ element!(DltContextRef, 1715, ZeroOrOne, false, 0x0, NotRestricted, None),
    /* 2367 */ element!(DltContextRef, 1715, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(164)),
    /* 2368 */ element!(DltContextRef, 1715, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(2070)),
    /* 2369 */ element!(DltContextRefConditional, 1710, One, false, 0x0, NotRestricted, None),
    /* 2370 */ element!(DltEcu, 1712, One, false, 0x0, NotRestricted, None),
    /* 2371 */ element!(DltEcuId, 4393, ZeroOrOne, false, 0x0, NotRestricted, Some(3716)),
    /* 2372 */ element!(DltEcuId, 4393, ZeroOrOne, false, 0x0, ClassicPlatform, Some(3716)),
    /* 2373 */ element!(DltEcuRef, 1705, ZeroOrOne, false, 0x0, ClassicPlatform, Some(2076)),
    /* 2374 */ element!(DltEcuRef, 1705, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(2076)),
    /* 2375 */ element!(DltLogChannel, 1714, One, false, 0x0, NotRestricted, None),
    /* 2376 */ element!(DltLogChannelDesign, 1717, One, false, 0x0, NotRestricted, None),
    /* 2377 */ element!(DltLogChannelDesignRef, 1722, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(2112)),
    /* 2378 */ element!(DltLogChannelDesignRef, 1722, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5237)),
    /* 2379 */ element!(DltLogChannelDesignToProcessDesignMapping, 1720, One, false, 0x0, NotRestricted, None),
    /* 2380 */ element!(DltLogChannelRef, 1730, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(2113)),
    /* 2381 */ element!(DltLogChannelRef, 1730, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5241)),
    /* 2382 */ element!(DltLogChannelToProcessMapping, 1729, One, false, 0x0, NotRestricted, None),
    /* 2383 */ element!(DltLogChannels, 1706, ZeroOrOne, false, 0x0, ClassicPlatform, Some(872)),
    /* 2384 */ element!(DltLogChannels, 2839, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(921)),
    /* 2385 */ element!(DltLogSink, 1732, One, false, 0x0, NotRestricted, None),
    /* 2386 */ element!(DltLogSinkRef, 2840, One, false, 0x0, NotRestricted, None),
    /* 2387 */ element!(DltLogSinkRefs, 1735, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(2214)),
    /* 2388 */ element!(DltLogSinkToPortPrototypeMapping, 1734, One, false, 0x0, NotRestricted, None),
    /* 2389 */ element!(DltMessage, 1736, One, false, 0x0, NotRestricted, None),
    /* 2390 */ element!(DltMessageCollectionSet, 1737, One, false, 0x0, NotRestricted, None),
    /* 2391 */ element!(DltMessageRef, 1718, One, false, 0x0, NotRestricted, None),
    /* 2392 */ element!(DltMessageRef, 1723, One, false, 0x0, NotRestricted, None),
    /* 2393 */ element!(DltMessageRef, 1741, ZeroOrOne, false, 0x0, NotRestricted, None),
    /* 2394 */ element!(DltMessageRefConditional, 1740, One, false, 0x0, NotRestricted, None),
    /* 2395 */ element!(DltMessageRefs, 1719, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(1801)),
    /* 2396 */ element!(DltMessageRefs, 1724, ZeroOrOne, false, 0x0, ClassicPlatform, Some(1800)),
    /* 2397 */ element!(DltMessages, 1709, ZeroOrOne, false, 0x1E0000, NotRestricted, Some(1138)),
    /* 2398 */ element!(DltMessages, 1738, ZeroOrOne, false, 0x0, ClassicPlatform, Some(270)),
    /* 2399 */ element!(DltMessages, 2847, ZeroOrOne, false, 0x1E0000, NotRestricted, Some(269)),
    /* 2400 */ element!(DltSessionId, 3494, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3493)),
    /* 2401 */ element!(DltUserNeeds, 1742, One, false, 0x0, NotRestricted, None),
    /* 2402 */ element!(DnsServerAddress, 2697, One, false, 0x0, NotRestricted, None),
    /* 2403 */ element!(DnsServerAddress, 2698, One, false, 0x0, NotRestricted, None),
    /* 2404 */ element!(DnsServerAddresses, 2703, ZeroOrOne, false, 0x0, NotRestricted, Some(1161)),
    /* 2405 */ element!(DnsServerAddresses, 2703, ZeroOrOne, false, 0x0, NotRestricted, Some(1162)),
    /* 2406 */ element!(DnsServerAddresses, 2710, ZeroOrOne, false, 0x0, NotRestricted, Some(1160)),
    /* 2407 */ element!(DnsServerAddresses, 2710, ZeroOrOne, false, 0x0, NotRestricted, Some(1163)),
    /* 2408 */ element!(DoIpActivationLineNeeds, 1743, One, false, 0x0, NotRestricted, None),
    /* 2409 */ element!(DoIpConfig, 1744, ZeroOrOne, false, 0x0, ClassicPlatform, Some(924)),
    /* 2410 */ element!(DoIpDesignRef, 1755, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(2073)),
    /* 2411 */ element!(DoIpEntity, 1747, ZeroOrOne, false, 0x0, ClassicPlatform, Some(727)),
    /* 2412 */ element!(DoIpEntityRole, 1748, ZeroOrOne, false, 0x0, NotRestricted, Some(1189)),
    /* 2413 */ element!(DoIpFunctionalClusterDesign, 1749, One, false, 0x0, NotRestricted, None),
    /* 2414 */ element!(DoIpGidNeeds, 1752, One, false, 0x0, NotRestricted, None),
    /* 2415 */ element!(DoIpGidSynchronizationNeeds, 1753, One, false, 0x0, NotRestricted, None),
    /* 2416 */ element!(DoIpInstantiation, 1754, One, false, 0x0, NotRestricted, None),
    /* 2417 */ element!(DoIpInterface, 1759, One, false, 0x0, NotRestricted, None),
    /* 2418 */ element!(DoIpLogicAddress, 1766, One, false, 0x0, NotRestricted, None),
    /* 2419 */ element!(DoIpLogicAddressProps, 1767, ZeroOrOne, false, 0x0, NotRestricted, Some(311)),
    /* 2420 */ element!(DoIpLogicAddresss, 1791, ZeroOrOne, false, 0x0, NotRestricted, Some(322)),
    /* 2421 */ element!(DoIpLogicTargetAddressProps, 1768, One, false, 0x0, NotRestricted, None),
    /* 2422 */ element!(DoIpLogicTesterAddressProps, 1769, One, false, 0x0, NotRestricted, None),
    /* 2423 */ element!(DoIpLogicalAddress, 1772, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3269)),
    /* 2424 */ element!(DoIpLogicalAddressRef, 4171, ZeroOrOne, false, 0x100000, AdaptivePlatform, Some(5002)),
    /* 2425 */ element!(DoIpNetworkConfiguration, 1773, One, false, 0x0, NotRestricted, None),
    /* 2426 */ element!(DoIpNetworkConfigurationDesign, 1774, One, false, 0x0, NotRestricted, None),
    /* 2427 */ element!(DoIpPowerModeStatusNeeds, 1781, One, false, 0x0, NotRestricted, None),
    /* 2428 */ element!(DoIpProtocolVersion, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(406)),
    /* 2429 */ element!(DoIpProtocolVersion, 3494, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(406)),
    /* 2430 */ element!(DoIpRequestConfiguration, 1782, One, false, 0x0, NotRestricted, None),
    /* 2431 */ element!(DoIpRequestConfigurationDesign, 1783, One, false, 0x0, NotRestricted, None),
    /* 2432 */ element!(DoIpRoutingActivation, 1784, One, false, 0x0, NotRestricted, None),
    /* 2433 */ element!(DoIpRoutingActivationAuthenticationNeeds, 1785, One, false, 0x0, NotRestricted, None),
    /* 2434 */ element!(DoIpRoutingActivationConfirmationNeeds, 1786, One, false, 0x0, NotRestricted, None),
    /* 2435 */ element!(DoIpRoutingActivations, 1760, ZeroOrOne, false, 0x0, NotRestricted, Some(272)),
    /* 2436 */ element!(DoIpRule, 1789, ZeroOrOne, false, 0x0, NotRestricted, Some(374)),
    /* 2437 */ element!(DoIpSourceAddressRef, 1794, ZeroOrOne, false, 0x0, NotRestricted, Some(2171)),
    /* 2438 */ element!(DoIpSourceAddressRef, 4127, ZeroOrOne, false, 0x0, NotRestricted, Some(2925)),
    /* 2439 */ element!(DoIpTargetAddressRef, 1787, One, false, 0x0, NotRestricted, None),
    /* 2440 */ element!(DoIpTargetAddressRef, 1794, ZeroOrOne, false, 0x0, NotRestricted, Some(2170)),
    /* 2441 */ element!(DoIpTargetAddressRef, 4127, ZeroOrOne, false, 0x0, NotRestricted, Some(2926)),
    /* 2442 */ element!(DoIpTargetAddressRefs, 1788, ZeroOrOne, false, 0x0, NotRestricted, Some(1804)),
    /* 2443 */ element!(DoIpTesterRoutingActivationRef, 1770, One, false, 0x0, NotRestricted, None),
    /* 2444 */ element!(DoIpTesterRoutingActivationRefs, 1771, ZeroOrOne, false, 0x0, NotRestricted, Some(1848)),
    /* 2445 */ element!(DoIpTpConfig, 1790, One, false, 0x0, NotRestricted, None),
    /* 2446 */ element!(DoIpTpConnection, 1793, One, false, 0x0, NotRestricted, None),
    /* 2447 */ element!(DoNotFragment, 298, ZeroOrOne, false, 0x0, NotRestricted, Some(1057)),
    /* 2448 */ element!(DocRevision, 1796, One, false, 0x0, NotRestricted, None),
    /* 2449 */ element!(DocRevisions, 64, ZeroOrOne, true, 0x0, NotRestricted, Some(3447)),
    /* 2450 */ element!(DocumentElementScope, 1798, One, false, 0x0, NotRestricted, None),
    /* 2451 */ element!(DocumentElementScopes, 4321, ZeroOrOne, false, 0x0, NotRestricted, Some(133)),
    /* 2452 */ element!(Documentation, 1802, One, false, 0x0, NotRestricted, None),
    /* 2453 */ element!(Documentation, 1803, ZeroOrOne, false, 0x0, NotRestricted, Some(1746)),
    /* 2454 */ element!(Documentation, 1803, ZeroOrOne, false, 0x0, NotRestricted, Some(1747)),
    /* 2455 */ element!(Documentation, 1803, ZeroOrOne, false, 0x0, NotRestricted, Some(1748)),
    /* 2456 */ element!(Documentation, 1803, ZeroOrOne, false, 0x0, NotRestricted, Some(1749)),
    /* 2457 */ element!(Documentation, 1803, ZeroOrOne, false, 0x0, NotRestricted, Some(1754)),
    /* 2458 */ element!(Documentation, 1803, ZeroOrOne, false, 0x0, NotRestricted, Some(1755)),
    /* 2459 */ element!(Documentation, 1803, ZeroOrOne, false, 0x0, NotRestricted, Some(1756)),
    /* 2460 */ element!(Documentation, 1803, ZeroOrOne, false, 0x0, NotRestricted, Some(1757)),
    /* 2461 */ element!(Documentation, 4454, ZeroOrOne, false, 0x1, NotRestricted, Some(3212)),
    /* 2462 */ element!(DocumentationContent, 3504, ZeroOrOne, false, 0x0, NotRestricted, Some(4774)),
    /* 2463 */ element!(DocumentationContext, 1804, One, false, 0x0, NotRestricted, None),
    /* 2464 */ element!(DoipChannelCollectionRef, 1761, ZeroOrOne, false, 0x0, NotRestricted, Some(360)),
    /* 2465 */ element!(DoipConnectionRef, 1762, One, false, 0x0, NotRestricted, None),
    /* 2466 */ element!(DoipConnectionRefs, 1763, ZeroOrOne, false, 0x0, NotRestricted, Some(922)),
    /* 2467 */ element!(DoipInterfaces, 1745, ZeroOrOne, false, 0x0, NotRestricted, Some(923)),
    /* 2468 */ element!(Domain, 4393, ZeroOrOne, false, 0x0, NotRestricted, Some(4330)),
    /* 2469 */ element!(Domain, 5078, ZeroOrOne, false, 0x0, NotRestricted, Some(4331)),
    /* 2470 */ element!(DomainId, 2642, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3927)),
    /* 2471 */ element!(DomainId, 2642, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3928)),
    /* 2472 */ element!(DomainId, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(821)),
    /* 2473 */ element!(DomainId, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(5448)),
    /* 2474 */ element!(DomainIds, 1074, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(2390)),
    /* 2475 */ element!(DpdAction, 2453, ZeroOrOne, false, 0x0, NotRestricted, Some(3788)),
    /* 2476 */ element!(DpdDelay, 2229, ZeroOrOne, false, 0x0, NotRestricted, Some(3853)),
    /* 2477 */ element!(DpgDoesNotRequireCoherencys, 698, ZeroOrOne, false, 0x1FFFF8, NotRestricted, Some(4672)),
    /* 2478 */ element!(DpgRequiresCoherencys, 698, ZeroOrOne, false, 0x1FFFF8, NotRestricted, Some(4673)),
    /* 2479 */ element!(DriverNotifications, 5038, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3306)),
    /* 2480 */ element!(DriverPrimitiveRef, 845, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5230)),
    /* 2481 */ element!(DropNotRequestedNad, 298, ZeroOrOne, false, 0x0, ClassicPlatform, Some(404)),
    /* 2482 */ element!(DropNotRequestedNad, 298, ZeroOrOne, false, 0x0, ClassicPlatform, Some(405)),
    /* 2483 */ element!(DtcFormatType, 1806, ZeroOrOne, false, 0x0, NotRestricted, Some(4224)),
    /* 2484 */ element!(DtcKind, 1807, ZeroOrOne, false, 0x0, NotRestricted, Some(3960)),
    /* 2485 */ element!(DtcKind, 1807, ZeroOrOne, false, 0x0, NotRestricted, Some(3961)),
    /* 2486 */ element!(DtcNumber, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(5368)),
    /* 2487 */ element!(DtcNumber, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(5371)),
    /* 2488 */ element!(DtcPropsRef, 1647, ZeroOrOne, false, 0x0, NotRestricted, Some(475)),
    /* 2489 */ element!(DtcPropsRef, 1647, ZeroOrOne, false, 0x0, ClassicPlatform, Some(477)),
    /* 2490 */ element!(DtcPropsRef, 1667, ZeroOrOne, false, 0x0, NotRestricted, Some(475)),
    /* 2491 */ element!(DtcSettingClassRef, 1205, ZeroOrOne, false, 0x0, NotRestricted, Some(5278)),
    /* 2492 */ element!(DtcSettingParameter, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(5442)),
    /* 2493 */ element!(DtcStatusAvailabilityMask, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(1456)),
    /* 2494 */ element!(DtcStatusAvailabilityMask, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(3557)),
    /* 2495 */ element!(DtcStatusAvailabilityMask, 3494, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3557)),
    /* 2496 */ element!(DtcStatusChangeNotificationNeeds, 1808, One, false, 0x0, NotRestricted, None),
    /* 2497 */ element!(DtcStatusMask, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(4085)),
    /* 2498 */ element!(Dtcs, 1643, ZeroOrOne, false, 0x1FFFC0, NotRestricted, Some(5538)),
    /* 2499 */ element!(Durability, 1029, ZeroOrOne, false, 0x0, NotRestricted, Some(548)),
    /* 2500 */ element!(DurabilityKind, 1030, ZeroOrOne, false, 0x0, NotRestricted, Some(2334)),
    /* 2501 */ element!(DurabilityService, 1031, ZeroOrOne, false, 0x0, NotRestricted, Some(549)),
    /* 2502 */ element!(DurabilityServiceCleanupDelay, 2229, ZeroOrOne, false, 0x0, NotRestricted, Some(2336)),
    /* 2503 */ element!(DurabilityServiceHistoryDepth, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(2335)),
    /* 2504 */ element!(DurabilityServiceHistoryKind, 1032, ZeroOrOne, false, 0x0, NotRestricted, Some(2335)),
    /* 2505 */ element!(DurabilityServiceMaxInstances, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(2335)),
    /* 2506 */ element!(DurabilityServiceMaxSamples, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(2335)),
    /* 2507 */ element!(DurabilityServiceMaxSamplesPerInstance, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(2335)),
    /* 2508 */ element!(DynamicActionRef, 437, One, false, 0x0, NotRestricted, None),
    /* 2509 */ element!(DynamicActionRefs, 446, ZeroOrOne, false, 0x0, NotRestricted, Some(4321)),
    /* 2510 */ element!(DynamicArraySizeProfile, 4393, ZeroOrOne, false, 0x0, NotRestricted, Some(2584)),
    /* 2511 */ element!(DynamicArraySizeProfile, 4393, ZeroOrOne, false, 0x0, NotRestricted, Some(2585)),
    /* 2512 */ element!(DynamicBs, 298, ZeroOrOne, false, 0x0, ClassicPlatform, Some(959)),
    /* 2513 */ element!(DynamicLength, 298, ZeroOrOne, false, 0x0, NotRestricted, Some(2919)),
    /* 2514 */ element!(DynamicPart, 1809, One, false, 0x0, NotRestricted, None),
    /* 2515 */ element!(DynamicPartAlternative, 1810, One, false, 0x0, NotRestricted, None),
    /* 2516 */ element!(DynamicPartAlternatives, 1811, ZeroOrOne, false, 0x0, NotRestricted, Some(344)),
    /* 2517 */ element!(DynamicParts, 3071, ZeroOrOne, false, 0x1C0000, NotRestricted, Some(85)),
    /* 2518 */ element!(DynamicPncMappingPduGroupRef, 3416, One, false, 0x0, NotRestricted, None),
    /* 2519 */ element!(DynamicPncMappingPduGroupRefs, 3417, ZeroOrOne, false, 0x180000, ClassicPlatform, Some(1963)),
    /* 2520 */ element!(DynamicPncToChannelMappingEnabled, 298, ZeroOrOne, false, 0x0, ClassicPlatform, Some(527)),
    /* 2521 */ element!(DynamicRuntimeLengthHandling, 298, ZeroOrOne, false, 0x0, NotRestricted, Some(764)),
    /* 2522 */ element!(DynamicSlotIdlePhase, 2642, ZeroOrOne, false, 0x0, NotRestricted, Some(2845)),
    /* 2523 */ element!(DynamicallyAssigned, 298, ZeroOrOne, false, 0x0, ClassicPlatform, Some(1314)),
    /* 2524 */ element!(DynamicallyDefineDataIdentifierClassRef, 1256, ZeroOrOne, false, 0x0, NotRestricted, Some(5280)),
    /* 2525 */ element!(E, 1947, One, false, 0x0, NotRestricted, Some(4735)),
    /* 2526 */ element!(E, 1947, One, false, 0x0, NotRestricted, Some(4736)),
    /* 2527 */ element!(E, 1947, One, false, 0x0, NotRestricted, Some(4737)),
    /* 2528 */ element!(E, 1947, One, false, 0x0, NotRestricted, Some(4738)),
    /* 2529 */ element!(E2EEventProtectionPropss, 55, ZeroOrOne, false, 0x0, NotRestricted, Some(3260)),
    /* 2530 */ element!(E2EEventProtectionPropss, 55, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3260)),
    /* 2531 */ element!(E2EMethodProtectionPropss, 56, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3259)),
    /* 2532 */ element!(E2EProfileCompatibilityProps, 1812, One, false, 0x0, NotRestricted, None),
    /* 2533 */ element!(E2EProfileCompatibilityPropsRef, 1814, ZeroOrOne, false, 0x0, NotRestricted, Some(1952)),
    /* 2534 */ element!(E2EProfileCompatibilityPropsRef, 1814, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(1952)),
    /* 2535 */ element!(E2EProfileConfiguration, 1813, One, false, 0x0, NotRestricted, None),
    /* 2536 */ element!(E2EProfileConfigurationRef, 1951, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(1805)),
    /* 2537 */ element!(E2EProfileConfigurationRef, 1956, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(1806)),
    /* 2538 */ element!(E2EProfileConfigurationSet, 1815, One, false, 0x0, NotRestricted, None),
    /* 2539 */ element!(E2EProfileConfigurations, 1816, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5539)),
    /* 2540 */ element!(EcuAbstractionSwComponentType, 1817, One, false, 0x0, NotRestricted, None),
    /* 2541 */ element!(EcuCommPortInstances, 648, ZeroOrOne, false, 0x1C0000, ClassicPlatform, Some(125)),
    /* 2542 */ element!(EcuConfigurationRef, 1849, ZeroOrOne, false, 0x0, ClassicPlatform, Some(4319)),
    /* 2543 */ element!(EcuExtractRef, 4656, ZeroOrOne, false, 0x0, ClassicPlatform, Some(2295)),
    /* 2544 */ element!(EcuExtractReferenceIref, 81, ZeroOrOne, false, 0x0, ClassicPlatform, Some(2272)),
    /* 2545 */ element!(EcuExtractVersion, 3721, ZeroOrOne, false, 0x0, ClassicPlatform, Some(5980)),
    /* 2546 */ element!(EcuId, 4393, ZeroOrOne, false, 0x0, NotRestricted, Some(3716)),
    /* 2547 */ element!(EcuInstance, 1819, One, false, 0x0, NotRestricted, None),
    /* 2548 */ element!(EcuInstance, 2642, ZeroOrOne, false, 0x0, ClassicPlatform, Some(936)),
    /* 2549 */ element!(EcuInstanceProps, 1833, One, false, 0x0, NotRestricted, None),
    /* 2550 */ element!(EcuInstancePropss, 1827, ZeroOrOne, false, 0x1C0000, NotRestricted, Some(91)),
    /* 2551 */ element!(EcuInstanceRef, 526, ZeroOrOne, false, 0x0, ClassicPlatform, Some(416)),
    /* 2552 */ element!(EcuInstanceRef, 736, ZeroOrOne, false, 0x0, NotRestricted, Some(1681)),
    /* 2553 */ element!(EcuInstanceRef, 1259, One, false, 0x0, NotRestricted, None),
    /* 2554 */ element!(EcuInstanceRef, 1835, ZeroOrOne, false, 0x0, NotRestricted, None),
    /* 2555 */ element!(EcuInstanceRef, 1835, ZeroOrOne, false, 0x0, ClassicPlatform, Some(1942)),
    /* 2556 */ element!(EcuInstanceRef, 2316, One, false, 0x0, NotRestricted, None),
    /* 2557 */ element!(EcuInstanceRef, 2316, ZeroOrOne, false, 0x0, ClassicPlatform, Some(181)),
    /* 2558 */ element!(EcuInstanceRef, 2316, ZeroOrOne, false, 0x0, ClassicPlatform, Some(1942)),
    /* 2559 */ element!(EcuInstanceRef, 2316, ZeroOrOne, false, 0x0, NotRestricted, Some(2075)),
    /* 2560 */ element!(EcuInstanceRef, 2316, ZeroOrOne, false, 0x0, ClassicPlatform, Some(2077)),
    /* 2561 */ element!(EcuInstanceRef, 2316, ZeroOrOne, false, 0x0, NotRestricted, Some(2704)),
    /* 2562 */ element!(EcuInstanceRef, 2377, One, false, 0x0, NotRestricted, None),
    /* 2563 */ element!(EcuInstanceRef, 2377, ZeroOrOne, false, 0x180000, NotRestricted, Some(5503)),
    /* 2564 */ element!(EcuInstanceRef, 4858, ZeroOrOne, false, 0x0, NotRestricted, Some(416)),
    /* 2565 */ element!(EcuInstanceRefConditional, 1834, One, false, 0x0, NotRestricted, None),
    /* 2566 */ element!(EcuInstanceRefs, 1200, ZeroOrOne, false, 0x0, NotRestricted, Some(5540)),
    /* 2567 */ element!(EcuInstanceRefs, 1260, ZeroOrOne, false, 0x1FFC00, NotRestricted, Some(5489)),
    /* 2568 */ element!(EcuInstanceRefs, 4553, ZeroOrOne, false, 0x0, NotRestricted, Some(1240)),
    /* 2569 */ element!(EcuInstances, 468, ZeroOrOne, false, 0x100000, ClassicPlatform, Some(947)),
    /* 2570 */ element!(EcuInstances, 2517, ZeroOrOne, false, 0x1C0000, ClassicPlatform, Some(5004)),
    /* 2571 */ element!(EcuMapping, 1839, One, false, 0x0, NotRestricted, None),
    /* 2572 */ element!(EcuPartition, 1843, One, false, 0x0, NotRestricted, None),
    /* 2573 */ element!(EcuPartitionRef, 192, ZeroOrOne, false, 0x0, ClassicPlatform, Some(1807)),
    /* 2574 */ element!(EcuRef, 1841, ZeroOrOne, false, 0x0, ClassicPlatform, Some(1854)),
    /* 2575 */ element!(EcuRef, 2316, ZeroOrOne, false, 0x0, NotRestricted, Some(2015)),
    /* 2576 */ element!(EcuResetClassRef, 1264, ZeroOrOne, false, 0x0, NotRestricted, Some(5281)),
    /* 2577 */ element!(EcuResourceEstimation, 1844, One, false, 0x0, NotRestricted, None),
    /* 2578 */ element!(EcuResourceMappings, 4623, ZeroOrOne, false, 0x1C0000, ClassicPlatform, Some(1440)),
    /* 2579 */ element!(EcuScopeRef, 1835, One, false, 0x0, NotRestricted, None),
    /* 2580 */ element!(EcuScopeRefs, 799, ZeroOrOne, false, 0x1F0000, ClassicPlatform, Some(5003)),
    /* 2581 */ element!(EcuStateMgrUserNeeds, 1847, One, false, 0x0, NotRestricted, None),
    /* 2582 */ element!(EcuTaskProxyRef, 1828, One, false, 0x0, NotRestricted, None),
    /* 2583 */ element!(EcuTaskProxyRef, 1828, ZeroOrOne, false, 0x0, ClassicPlatform, Some(1970)),
    /* 2584 */ element!(EcuTaskProxyRefs, 1829, ZeroOrOne, false, 0x1E0000, ClassicPlatform, Some(1812)),
    /* 2585 */ element!(EcuTiming, 1848, One, false, 0x0, NotRestricted, None),
    /* 2586 */ element!(EcucAddInfoParamDef, 1852, One, false, 0x0, NotRestricted, None),
    /* 2587 */ element!(EcucAddInfoParamValue, 1853, One, false, 0x0, NotRestricted, None),
    /* 2588 */ element!(EcucBooleanParamDef, 1855, One, false, 0x0, NotRestricted, None),
    /* 2589 */ element!(EcucChoiceContainerDef, 1856, One, false, 0x0, NotRestricted, None),
    /* 2590 */ element!(EcucChoiceReferenceDef, 1858, One, false, 0x0, NotRestricted, None),
    /* 2591 */ element!(EcucCond, 1865, ZeroOrOne, false, 0x0, ClassicPlatform, Some(1212)),
    /* 2592 */ element!(EcucCond, 1865, ZeroOrOne, false, 0x0, ClassicPlatform, Some(1213)),
    /* 2593 */ element!(EcucContainerValue, 1875, One, false, 0x0, NotRestricted, None),
    /* 2594 */ element!(EcucDefEdition, 3721, ZeroOrOne, false, 0x0, ClassicPlatform, Some(4849)),
    /* 2595 */ element!(EcucDefinitionCollection, 1879, One, false, 0x0, NotRestricted, None),
    /* 2596 */ element!(EcucDefinitionRef, 442, ZeroOrOne, false, 0x0, ClassicPlatform, Some(3468)),
    /* 2597 */ element!(EcucDestinationUriDef, 1886, One, false, 0x0, NotRestricted, None),
    /* 2598 */ element!(EcucDestinationUriDefSet, 1887, One, false, 0x0, NotRestricted, None),
    /* 2599 */ element!(EcucEnumerationLiteralDef, 1894, One, false, 0x0, NotRestricted, None),
    /* 2600 */ element!(EcucEnumerationParamDef, 1895, One, false, 0x0, NotRestricted, None),
    /* 2601 */ element!(EcucFloatParamDef, 1897, One, false, 0x0, NotRestricted, None),
    /* 2602 */ element!(EcucForeignReferenceDef, 1898, One, false, 0x0, NotRestricted, None),
    /* 2603 */ element!(EcucFunctionNameDef, 1899, One, false, 0x0, NotRestricted, None),
    /* 2604 */ element!(EcucFunctionNameDefConditional, 1930, One, false, 0x0, NotRestricted, None),
    /* 2605 */ element!(EcucFunctionNameDefVariants, 1900, ZeroOrOne, false, 0x1F0000, NotRestricted, Some(4408)),
    /* 2606 */ element!(EcucImplementationConfigurationClass, 1901, One, false, 0x0, NotRestricted, None),
    /* 2607 */ element!(EcucInstanceReferenceDef, 1902, One, false, 0x0, NotRestricted, None),
    /* 2608 */ element!(EcucInstanceReferenceValue, 1903, One, false, 0x0, NotRestricted, None),
    /* 2609 */ element!(EcucIntegerParamDef, 1904, One, false, 0x0, NotRestricted, None),
    /* 2610 */ element!(EcucLinkerSymbolDef, 1905, One, false, 0x0, NotRestricted, None),
    /* 2611 */ element!(EcucLinkerSymbolDefConditional, 1930, One, false, 0x0, NotRestricted, None),
    /* 2612 */ element!(EcucLinkerSymbolDefVariants, 1906, ZeroOrOne, false, 0x1F0000, NotRestricted, Some(4408)),
    /* 2613 */ element!(EcucModuleConfigurationValues, 1907, One, false, 0x0, NotRestricted, None),
    /* 2614 */ element!(EcucModuleConfigurationValuesRef, 342, ZeroOrOne, false, 0x0, NotRestricted, None),
    /* 2615 */ element!(EcucModuleConfigurationValuesRefConditional, 1909, One, false, 0x0, NotRestricted, None),
    /* 2616 */ element!(EcucModuleDef, 1910, One, false, 0x0, NotRestricted, None),
    /* 2617 */ element!(EcucMultilineStringParamDef, 1913, One, false, 0x0, NotRestricted, None),
    /* 2618 */ element!(EcucMultilineStringParamDefConditional, 1930, One, false, 0x0, NotRestricted, None),
    /* 2619 */ element!(EcucMultilineStringParamDefVariants, 1914, ZeroOrOne, false, 0x1F0000, NotRestricted, Some(4408)),
    /* 2620 */ element!(EcucMultiplicityConfigurationClass, 1940, One, false, 0x0, NotRestricted, None),
    /* 2621 */ element!(EcucNumericalParamValue, 1915, One, false, 0x0, NotRestricted, None),
    /* 2622 */ element!(EcucParamConfContainerDef, 1916, One, false, 0x0, NotRestricted, None),
    /* 2623 */ element!(EcucQuery, 1922, One, false, 0x0, NotRestricted, None),
    /* 2624 */ element!(EcucQueryExpression, 1923, One, false, 0x0, NotRestricted, None),
    /* 2625 */ element!(EcucQueryExpression, 1923, ZeroOrOne, false, 0x0, ClassicPlatform, Some(4766)),
    /* 2626 */ element!(EcucQueryRef, 285, One, false, 0x0, ClassicPlatform, Some(2708)),
    /* 2627 */ element!(EcucQueryRef, 1863, One, false, 0x0, ClassicPlatform, Some(2708)),
    /* 2628 */ element!(EcucQueryRef, 1920, One, false, 0x0, ClassicPlatform, Some(4743)),
    /* 2629 */ element!(EcucQueryStringRef, 1864, One, false, 0x0, ClassicPlatform, Some(4683)),
    /* 2630 */ element!(EcucQuerys, 1866, ZeroOrOne, false, 0x0, ClassicPlatform, Some(1781)),
    /* 2631 */ element!(EcucQuerys, 1885, ZeroOrOne, false, 0x0, ClassicPlatform, Some(1781)),
    /* 2632 */ element!(EcucQuerys, 1937, ZeroOrOne, false, 0x0, ClassicPlatform, Some(1781)),
    /* 2633 */ element!(EcucRef, 286, One, false, 0x0, ClassicPlatform, Some(2707)),
    /* 2634 */ element!(EcucReferenceDef, 1925, One, false, 0x0, NotRestricted, None),
    /* 2635 */ element!(EcucReferenceValue, 1927, One, false, 0x0, NotRestricted, None),
    /* 2636 */ element!(EcucStringParamDef, 1929, One, false, 0x0, NotRestricted, None),
    /* 2637 */ element!(EcucStringParamDefConditional, 1930, One, false, 0x0, NotRestricted, None),
    /* 2638 */ element!(EcucStringParamDefVariants, 1931, ZeroOrOne, false, 0x1F0000, NotRestricted, Some(4408)),
    /* 2639 */ element!(EcucSymbolicNameReferenceDef, 1932, One, false, 0x0, NotRestricted, None),
    /* 2640 */ element!(EcucTextualParamValue, 1934, One, false, 0x0, NotRestricted, None),
    /* 2641 */ element!(EcucUriReferenceDef, 1935, One, false, 0x0, NotRestricted, None),
    /* 2642 */ element!(EcucValidationCondition, 1936, One, false, 0x0, NotRestricted, None),
    /* 2643 */ element!(EcucValidationConds, 1882, ZeroOrOne, false, 0x0, ClassicPlatform, Some(341)),
    /* 2644 */ element!(EcucValueCollection, 1938, One, false, 0x0, NotRestricted, None),
    /* 2645 */ element!(EcucValueConfigurationClass, 1940, One, false, 0x0, NotRestricted, None),
    /* 2646 */ element!(EcucValues, 1939, ZeroOrOne, false, 0x1C0000, ClassicPlatform, Some(2254)),
    /* 2647 */ element!(EgressPortRef, 4578, One, false, 0x0, NotRestricted, None),
    /* 2648 */ element!(EgressPortRefs, 4579, ZeroOrOne, false, 0x0, ClassicPlatform, Some(2045)),
    /* 2649 */ element!(EgressPortRefs, 4579, ZeroOrOne, false, 0x0, ClassicPlatform, Some(2193)),
    /* 2650 */ element!(Eid, 3494, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(402)),
    /* 2651 */ element!(EidRetrieval, 1746, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3604)),
    /* 2652 */ element!(EidUseMac, 298, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3821)),
    /* 2653 */ element!(Element, 156, ZeroOrOne, false, 0x0, NotRestricted, Some(3470)),
    /* 2654 */ element!(Element, 3690, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3396)),
    /* 2655 */ element!(Element, 4080, ZeroOrOne, false, 0x0, ClassicPlatform, Some(2202)),
    /* 2656 */ element!(ElementByteValue, 2642, ZeroOrOne, false, 0x0, NotRestricted, Some(2913)),
    /* 2657 */ element!(ElementCreation, 110, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3904)),
    /* 2658 */ element!(ElementGroups, 2959, ZeroOrOne, false, 0x0, NotRestricted, Some(860)),
    /* 2659 */ element!(ElementInImplDatatype, 1941, ZeroOrOne, false, 0x0, NotRestricted, Some(4206)),
    /* 2660 */ element!(ElementInImplDatatype, 3459, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(4390)),
    /* 2661 */ element!(ElementInImplDatatype, 3459, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(4391)),
    /* 2662 */ element!(ElementMappings, 4028, ZeroOrOne, false, 0x0, NotRestricted, Some(5549)),
    /* 2663 */ element!(ElementPosition, 2642, ZeroOrOne, false, 0x0, NotRestricted, Some(4230)),
    /* 2664 */ element!(ElementPropss, 4082, ZeroOrOne, false, 0x0, ClassicPlatform, Some(534)),
    /* 2665 */ element!(ElementRef, 601, One, false, 0x0, NotRestricted, None),
    /* 2666 */ element!(ElementRef, 3710, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5205)),
    /* 2667 */ element!(ElementRefs, 602, ZeroOrOne, false, 0x0, NotRestricted, Some(4727)),
    /* 2668 */ element!(ElementRole, 2500, ZeroOrOne, false, 0x0, NotRestricted, Some(3513)),
    /* 2669 */ element!(Elements, 107, ZeroOrOne, false, 0x100000, AdaptivePlatform, Some(3355)),
    /* 2670 */ element!(Elements, 127, ZeroOrOne, false, 0x100000, AdaptivePlatform, Some(3355)),
    /* 2671 */ element!(Elements, 195, ZeroOrOne, true, 0x1C0000, NotRestricted, Some(2451)),
    /* 2672 */ element!(Elements, 208, ZeroOrOne, false, 0x1FFFFF, NotRestricted, Some(955)),
    /* 2673 */ element!(Elements, 1201, ZeroOrOne, false, 0x1FFFC0, NotRestricted, Some(5336)),
    /* 2674 */ element!(Elements, 2504, ZeroOrOne, false, 0x1F0000, NotRestricted, Some(5167)),
    /* 2675 */ element!(Elements, 3631, ZeroOrOne, true, 0x1C0000, NotRestricted, Some(3177)),
    /* 2676 */ element!(Elements, 3713, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3401)),
    /* 2677 */ element!(EllipticCurveRef, 4812, One, false, 0x0, NotRestricted, None),
    /* 2678 */ element!(EllipticCurveRefs, 4813, ZeroOrOne, false, 0x0, NotRestricted, Some(5297)),
    /* 2679 */ element!(EmptySignal, 1948, ZeroOrOne, false, 0x0, NotRestricted, Some(134)),
    /* 2680 */ element!(EmulationSupports, 2956, ZeroOrOne, false, 0x1C0000, NotRestricted, Some(876)),
    /* 2681 */ element!(EnableAnycast, 298, ZeroOrOne, false, 0x0, NotRestricted, Some(4013)),
    /* 2682 */ element!(EnableConditionGroupRef, 1309, ZeroOrOne, false, 0x0, NotRestricted, Some(1957)),
    /* 2683 */ element!(EnableConditionRef, 1271, ZeroOrOne, false, 0x0, NotRestricted, Some(2078)),
    /* 2684 */ element!(EnableConditions, 1268, ZeroOrOne, false, 0x1FFFC0, NotRestricted, Some(2007)),
    /* 2685 */ element!(EnableDeactivation, 298, ZeroOrOne, false, 0x0, NotRestricted, Some(6067)),
    /* 2686 */ element!(EnableDiscoveryProtection, 298, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(738)),
    /* 2687 */ element!(EnableJoinAccessControl, 298, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(728)),
    /* 2688 */ element!(EnableLivelinessProtection, 298, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(743)),
    /* 2689 */ element!(EnableReadAccessControl, 298, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(750)),
    /* 2690 */ element!(EnableTakeAddress, 298, ZeroOrOne, false, 0x0, NotRestricted, Some(1228)),
    /* 2691 */ element!(EnableTakeAddress, 298, ZeroOrOne, false, 0x0, NotRestricted, Some(1229)),
    /* 2692 */ element!(EnableUpdate, 298, ZeroOrOne, false, 0x0, ClassicPlatform, Some(3583)),
    /* 2693 */ element!(EnableWriteAccessControl, 298, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(781)),
    /* 2694 */ element!(EnablesLogTrace, 298, ZeroOrOne, false, 0x0, NotRestricted, Some(3901)),
    /* 2695 */ element!(EncapsulatedEntryRef, 323, ZeroOrOne, false, 0x0, ClassicPlatform, Some(3169)),
    /* 2696 */ element!(Encoding, 4393, ZeroOrOne, false, 0x0, NotRestricted, Some(4279)),
    /* 2697 */ element!(EncryptionRef, 4839, ZeroOrOne, false, 0x0, NotRestricted, Some(5107)),
    /* 2698 */ element!(End2EndEventProtectionProps, 1949, One, false, 0x0, NotRestricted, None),
    /* 2699 */ element!(End2EndMethodProtectionProps, 1954, One, false, 0x0, NotRestricted, None),
    /* 2700 */ element!(EndAddress, 3494, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(990)),
    /* 2701 */ element!(EndToEndCallResponseTimeout, 2229, ZeroOrOne, false, 0x0, NotRestricted, Some(3708)),
    /* 2702 */ element!(EndToEndProfile, 1958, ZeroOrOne, false, 0x1, NotRestricted, Some(5662)),
    /* 2703 */ element!(EndToEndProfile, 1958, ZeroOrOne, false, 0x1FFFFE, NotRestricted, Some(5662)),
    /* 2704 */ element!(EndToEndProtection, 1961, One, false, 0x0, NotRestricted, None),
    /* 2705 */ element!(EndToEndProtectionISignalIPdu, 1964, One, false, 0x0, NotRestricted, None),
    /* 2706 */ element!(EndToEndProtectionISignalIPdus, 1962, ZeroOrOne, false, 0x1FFFFE, NotRestricted, Some(721)),
    /* 2707 */ element!(EndToEndProtectionSet, 1965, One, false, 0x0, NotRestricted, None),
    /* 2708 */ element!(EndToEndProtectionVariablePrototype, 1967, One, false, 0x0, NotRestricted, None),
    /* 2709 */ element!(EndToEndProtectionVariablePrototypes, 1963, ZeroOrOne, false, 0x1FFFFE, NotRestricted, Some(722)),
    /* 2710 */ element!(EndToEndProtections, 1966, ZeroOrOne, false, 0x1FFFFF, NotRestricted, Some(4744)),
    /* 2711 */ element!(EndToEndTransformationComSpecProps, 1969, One, false, 0x0, NotRestricted, None),
    /* 2712 */ element!(EndToEndTransformationDescription, 1970, One, false, 0x0, NotRestricted, None),
    /* 2713 */ element!(EndToEndTransformationISignalProps, 1971, One, false, 0x0, NotRestricted, None),
    /* 2714 */ element!(EndToEndTransformationISignalPropsConditional, 1972, One, false, 0x0, NotRestricted, None),
    /* 2715 */ element!(EndToEndTransformationISignalPropsVariants, 1974, ZeroOrOne, false, 0x1C0000, NotRestricted, Some(4408)),
    /* 2716 */ element!(EndpointConfigurationRef, 1725, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(1578)),
    /* 2717 */ element!(EndpointConfigurationRef, 1733, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(1578)),
    /* 2718 */ element!(Endpoints, 3693, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3356)),
    /* 2719 */ element!(Endpoints, 3693, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3394)),
    /* 2720 */ element!(EngineeringObject, 453, ZeroOrOne, false, 0x0, NotRestricted, Some(5393)),
    /* 2721 */ element!(EngineeringObjects, 19, ZeroOrOne, false, 0x0, NotRestricted, Some(4681)),
    /* 2722 */ element!(EnhancedModeApi, 298, ZeroOrOne, false, 0x0, NotRestricted, Some(4304)),
    /* 2723 */ element!(EnhancedModeApi, 298, ZeroOrOne, false, 0x0, NotRestricted, Some(4305)),
    /* 2724 */ element!(EnterTimeoutValue, 2229, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(4171)),
    /* 2725 */ element!(EnteredModeRef, 3053, ZeroOrOne, false, 0x0, NotRestricted, Some(5603)),
    /* 2726 */ element!(EntityStatusMaxByteFieldUse, 298, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(4012)),
    /* 2727 */ element!(Entitys, 350, ZeroOrOne, false, 0x1FFF80, NotRestricted, Some(31)),
    /* 2728 */ element!(Entry, 1977, Any, true, 0x0, NotRestricted, Some(5426)),
    /* 2729 */ element!(Entry, 1978, One, false, 0x0, NotRestricted, None),
    /* 2730 */ element!(EntryModeDeclarationRef, 4704, ZeroOrOne, false, 0x0, ClassicPlatform, Some(1670)),
    /* 2731 */ element!(EntryModeDeclarationRef, 4704, ZeroOrOne, false, 0x0, NotRestricted, Some(1672)),
    /* 2732 */ element!(EntryRef, 414, ZeroOrOne, false, 0x0, NotRestricted, Some(3042)),
    /* 2733 */ element!(EntryType, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(1030)),
    /* 2734 */ element!(Entrys, 1980, ZeroOrOne, false, 0x0, NotRestricted, Some(1349)),
    /* 2735 */ element!(EnumerationMappingTable, 1979, One, false, 0x0, NotRestricted, None),
    /* 2736 */ element!(EnumeratorValue, 4393, ZeroOrOne, false, 0x0, NotRestricted, Some(4253)),
    /* 2737 */ element!(Enums, 3718, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3357)),
    /* 2738 */ element!(EnvironmentCaptureToReporting, 1981, ZeroOrOne, false, 0x0, NotRestricted, Some(3891)),
    /* 2739 */ element!(EnvironmentDataCapture, 1214, ZeroOrOne, false, 0x0, NotRestricted, Some(3893)),
    /* 2740 */ element!(EnvironmentVariables, 2909, ZeroOrOne, false, 0x1FE000, AdaptivePlatform, Some(3359)),
    /* 2741 */ element!(EnvironmentVariables, 2909, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3360)),
    /* 2742 */ element!(EnvironmentalConditionRef, 1124, ZeroOrOne, false, 0x180000, NotRestricted, Some(5606)),
    /* 2743 */ element!(EocEventRef, 1982, One, false, 0x0, NotRestricted, None),
    /* 2744 */ element!(EocExecutableEntityRef, 1987, One, false, 0x0, NotRestricted, None),
    /* 2745 */ element!(EocExecutableEntityRefGroup, 1989, One, false, 0x0, NotRestricted, None),
    /* 2746 */ element!(ErrorCode, 2642, ZeroOrOne, false, 0x0, NotRestricted, Some(2743)),
    /* 2747 */ element!(ErrorCode, 2642, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3910)),
    /* 2748 */ element!(ErrorContextRef, 181, One, false, 0x0, NotRestricted, None),
    /* 2749 */ element!(ErrorContextRefs, 182, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(4984)),
    /* 2750 */ element!(ErrorDomainRef, 90, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5234)),
    /* 2751 */ element!(ErrorHandling, 985, ZeroOrOne, false, 0x0, NotRestricted, Some(5821)),
    /* 2752 */ element!(ErrorMappings, 561, ZeroOrOne, false, 0x0, NotRestricted, Some(1420)),
    /* 2753 */ element!(ErrorReactionPolicy, 3024, ZeroOrOne, false, 0x0, NotRestricted, Some(5476)),
    /* 2754 */ element!(ErrorSignalingEnabled, 298, ZeroOrOne, false, 0x0, NotRestricted, Some(2463)),
    /* 2755 */ element!(ErrorTracerNeeds, 1997, One, false, 0x0, NotRestricted, None),
    /* 2756 */ element!(EspCipherSuiteName, 4393, One, false, 0x0, NotRestricted, None),
    /* 2757 */ element!(EspCipherSuiteName, 4393, One, false, 0x0, NotRestricted, Some(938)),
    /* 2758 */ element!(EspCipherSuiteNames, 2682, ZeroOrOne, false, 0x0, NotRestricted, Some(937)),
    /* 2759 */ element!(EspCipherSuiteNames, 2689, ZeroOrOne, false, 0x0, NotRestricted, None),
    /* 2760 */ element!(EstimatedDurationOfCampaign, 2229, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(4040)),
    /* 2761 */ element!(EstimatedDurationOfOperation, 2229, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(4041)),
    /* 2762 */ element!(EstimatedExecutionTime, 3068, ZeroOrOne, false, 0x0, NotRestricted, Some(2855)),
    /* 2763 */ element!(EthGlobalTimeDomainProps, 1999, One, false, 0x0, NotRestricted, None),
    /* 2764 */ element!(EthGlobalTimeManagedCouplingPort, 2001, One, false, 0x0, NotRestricted, None),
    /* 2765 */ element!(EthIpProps, 2004, One, false, 0x0, NotRestricted, None),
    /* 2766 */ element!(EthIpPropsRef, 2902, One, false, 0x0, NotRestricted, None),
    /* 2767 */ element!(EthIpPropsRef, 2902, ZeroOrOne, false, 0x0, ClassicPlatform, Some(949)),
    /* 2768 */ element!(EthIpPropsRef, 2902, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(1453)),
    /* 2769 */ element!(EthIpPropsRefs, 2903, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(1409)),
    /* 2770 */ element!(EthSwitchPortGroupDerivation, 298, ZeroOrOne, false, 0x0, ClassicPlatform, Some(763)),
    /* 2771 */ element!(EthTcpIpIcmpProps, 2007, One, false, 0x0, NotRestricted, None),
    /* 2772 */ element!(EthTcpIpProps, 2008, One, false, 0x0, NotRestricted, None),
    /* 2773 */ element!(EthTpConfig, 2009, One, false, 0x0, NotRestricted, None),
    /* 2774 */ element!(EthTpConnection, 2011, One, false, 0x0, NotRestricted, None),
    /* 2775 */ element!(EtherType, 3494, ZeroOrOne, false, 0x0, ClassicPlatform, Some(1055)),
    /* 2776 */ element!(EtherType, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(1056)),
    /* 2777 */ element!(EthernetCluster, 2014, One, false, 0x0, NotRestricted, None),
    /* 2778 */ element!(EthernetClusterConditional, 2015, One, false, 0x0, NotRestricted, None),
    /* 2779 */ element!(EthernetClusterRef, 2892, ZeroOrOne, false, 0x0, NotRestricted, Some(2079)),
    /* 2780 */ element!(EthernetClusterVariants, 2018, ZeroOrOne, false, 0x1FFC00, NotRestricted, Some(4408)),
    /* 2781 */ element!(EthernetCommunicationConnector, 2019, One, false, 0x0, NotRestricted, None),
    /* 2782 */ element!(EthernetCommunicationController, 2025, One, false, 0x0, NotRestricted, None),
    /* 2783 */ element!(EthernetCommunicationControllerConditional, 2026, One, false, 0x0, NotRestricted, None),
    /* 2784 */ element!(EthernetCommunicationControllerVariants, 2028, ZeroOrOne, false, 0x1C0000, NotRestricted, Some(4408)),
    /* 2785 */ element!(EthernetFrame, 2032, One, false, 0x0, NotRestricted, None),
    /* 2786 */ element!(EthernetFrameTriggering, 2033, One, false, 0x0, NotRestricted, None),
    /* 2787 */ element!(EthernetNetworkConfiguration, 2037, One, false, 0x0, NotRestricted, None),
    /* 2788 */ element!(EthernetPhysicalChannel, 2040, One, false, 0x0, NotRestricted, None),
    /* 2789 */ element!(EthernetPriorityRegeneration, 2043, One, false, 0x0, NotRestricted, None),
    /* 2790 */ element!(EthernetPriorityRegenerations, 755, ZeroOrOne, false, 0x0, NotRestricted, Some(490)),
    /* 2791 */ element!(EthernetRawDataStreamClientMapping, 2044, One, false, 0x0, NotRestricted, None),
    /* 2792 */ element!(EthernetRawDataStreamGrant, 2045, One, false, 0x0, NotRestricted, None),
    /* 2793 */ element!(EthernetRawDataStreamMapping, 2049, One, false, 0x0, NotRestricted, None),
    /* 2794 */ element!(EthernetRawDataStreamMappingRef, 2046, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5040)),
    /* 2795 */ element!(EthernetRawDataStreamServerMapping, 2055, One, false, 0x0, NotRestricted, None),
    /* 2796 */ element!(EthernetTrafficClassAssignments, 756, ZeroOrOne, false, 0x0, NotRestricted, Some(665)),
    /* 2797 */ element!(EthernetVlanTranslationTable, 2058, One, false, 0x0, NotRestricted, None),
    /* 2798 */ element!(EthernetWakeupSleepOnDatalineConfig, 2059, One, false, 0x0, NotRestricted, None),
    /* 2799 */ element!(EthernetWakeupSleepOnDatalineConfigSet, 2060, One, false, 0x0, NotRestricted, None),
    /* 2800 */ element!(EthernetWakeupSleepOnDatalineConfigs, 2061, ZeroOrOne, false, 0x0, NotRestricted, Some(3097)),
    /* 2801 */ element!(EtsAvailableBandwidthInPercent, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(596)),
    /* 2802 */ element!(EtsAvailableBandwidthInWeightValue, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(595)),
    /* 2803 */ element!(EvaluatedElementRef, 2063, One, false, 0x0, NotRestricted, None),
    /* 2804 */ element!(EvaluatedElementRefs, 2064, ZeroOrOne, false, 0x0, NotRestricted, Some(5366)),
    /* 2805 */ element!(EvaluatedVariantRef, 2065, One, false, 0x0, NotRestricted, None),
    /* 2806 */ element!(EvaluatedVariantRefs, 2066, ZeroOrOne, false, 0x0, NotRestricted, Some(4867)),
    /* 2807 */ element!(EvaluatedVariantSet, 2062, One, false, 0x0, NotRestricted, None),
    /* 2808 */ element!(EvaluationId, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(4289)),
    /* 2809 */ element!(EventClearAllowed, 1286, ZeroOrOne, false, 0x0, ClassicPlatform, Some(3800)),
    /* 2810 */ element!(EventCombinationReportingBehavior, 1288, ZeroOrOne, false, 0x0, NotRestricted, Some(1274)),
    /* 2811 */ element!(EventControlledTiming, 2068, ZeroOrOne, false, 0x0, NotRestricted, Some(914)),
    /* 2812 */ element!(EventDefaultValue, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(807)),
    /* 2813 */ element!(EventDeployments, 4014, ZeroOrOne, false, 0x0, NotRestricted, Some(1518)),
    /* 2814 */ element!(EventDeployments, 4014, ZeroOrOne, false, 0x180000, AdaptivePlatform, Some(1518)),
    /* 2815 */ element!(EventDisplacementStrategy, 1290, ZeroOrOne, false, 0x0, NotRestricted, Some(3822)),
    /* 2816 */ element!(EventElementMappings, 4003, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(1438)),
    /* 2817 */ element!(EventElements, 4057, ZeroOrOne, false, 0x0, NotRestricted, Some(1283)),
    /* 2818 */ element!(EventFailureCycleCounterThreshold, 2231, ZeroOrOne, false, 0x0, NotRestricted, Some(3724)),
    /* 2819 */ element!(EventGroupControlType, 2069, ZeroOrOne, false, 0x0, NotRestricted, Some(3776)),
    /* 2820 */ element!(EventGroupControlType, 2069, ZeroOrOne, false, 0x0, NotRestricted, Some(3777)),
    /* 2821 */ element!(EventGroupId, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(1031)),
    /* 2822 */ element!(EventGroupId, 3494, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5931)),
    /* 2823 */ element!(EventGroupIdentifier, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(996)),
    /* 2824 */ element!(EventGroupIdentifier, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(5931)),
    /* 2825 */ element!(EventGroupRef, 926, One, false, 0x0, NotRestricted, None),
    /* 2826 */ element!(EventGroupRef, 1346, ZeroOrOne, false, 0x0, NotRestricted, Some(5607)),
    /* 2827 */ element!(EventGroupRef, 1365, ZeroOrOne, false, 0x0, NotRestricted, Some(5696)),
    /* 2828 */ element!(EventGroupRef, 4255, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(2147)),
    /* 2829 */ element!(EventGroupRef, 4259, One, false, 0x0, NotRestricted, None),
    /* 2830 */ element!(EventGroupRefs, 927, ZeroOrOne, false, 0x0, NotRestricted, Some(5996)),
    /* 2831 */ element!(EventGroupRefs, 4260, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(2148)),
    /* 2832 */ element!(EventGroupRefs, 4260, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(2149)),
    /* 2833 */ element!(EventGroups, 4291, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(2325)),
    /* 2834 */ element!(EventGroups, 4292, ZeroOrOne, false, 0x0, NotRestricted, Some(2325)),
    /* 2835 */ element!(EventHandler, 2070, One, false, 0x0, NotRestricted, None),
    /* 2836 */ element!(EventHandlerRef, 928, One, false, 0x0, NotRestricted, None),
    /* 2837 */ element!(EventHandlerRefs, 929, ZeroOrOne, false, 0x0, NotRestricted, Some(5997)),
    /* 2838 */ element!(EventHandlers, 3572, ZeroOrOne, false, 0x1C0000, NotRestricted, Some(320)),
    /* 2839 */ element!(EventId, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(5934)),
    /* 2840 */ element!(EventId, 3494, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5934)),
    /* 2841 */ element!(EventIref, 2078, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5218)),
    /* 2842 */ element!(EventKind, 1293, ZeroOrOne, false, 0x0, ClassicPlatform, Some(4011)),
    /* 2843 */ element!(EventMapping, 2083, One, false, 0x0, NotRestricted, None),
    /* 2844 */ element!(EventMappings, 2645, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(1429)),
    /* 2845 */ element!(EventMulticastAddresss, 2073, ZeroOrOne, false, 0x1C0000, NotRestricted, Some(1554)),
    /* 2846 */ element!(EventMulticastAddresss, 2073, ZeroOrOne, false, 0x1C0000, NotRestricted, Some(4950)),
    /* 2847 */ element!(EventMulticastSubscriptionAddresss, 719, ZeroOrOne, false, 0x1C0000, NotRestricted, Some(1553)),
    /* 2848 */ element!(EventMulticastUdpPort, 3494, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5922)),
    /* 2849 */ element!(EventMulticastUdpPort, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(5923)),
    /* 2850 */ element!(EventMulticastUdpPort, 4909, ZeroOrOne, false, 0x0, NotRestricted, Some(5924)),
    /* 2851 */ element!(EventNeedsRef, 3167, ZeroOrOne, false, 0x0, NotRestricted, Some(5104)),
    /* 2852 */ element!(EventObdReadinessGroup, 2085, One, false, 0x0, NotRestricted, None),
    /* 2853 */ element!(EventObdReadinessGroup, 3076, ZeroOrOne, false, 0x0, NotRestricted, Some(4225)),
    /* 2854 */ element!(EventObdReadinessGroup, 4393, ZeroOrOne, false, 0x0, NotRestricted, Some(4225)),
    /* 2855 */ element!(EventOccurrenceKind, 2086, ZeroOrOne, false, 0x0, NotRestricted, Some(1313)),
    /* 2856 */ element!(EventPropss, 3579, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(398)),
    /* 2857 */ element!(EventQosPropss, 1058, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(1391)),
    /* 2858 */ element!(EventQosPropss, 1058, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(1393)),
    /* 2859 */ element!(EventQosPropss, 3566, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(1391)),
    /* 2860 */ element!(EventQosPropss, 3666, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(1392)),
    /* 2861 */ element!(EventReadinessGroups, 1648, ZeroOrOne, false, 0x1F0000, NotRestricted, Some(3254)),
    /* 2862 */ element!(EventReadinessGroups, 1668, ZeroOrOne, false, 0x180000, NotRestricted, Some(4226)),
    /* 2863 */ element!(EventReceptionDefaultValue, 4240, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5970)),
    /* 2864 */ element!(EventReceptionDefaultValue, 4989, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5969)),
    /* 2865 */ element!(EventRef, 67, One, false, 0x0, NotRestricted, Some(4757)),
    /* 2866 */ element!(EventRef, 1037, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(1982)),
    /* 2867 */ element!(EventRef, 1347, ZeroOrOne, false, 0x0, NotRestricted, Some(5499)),
    /* 2868 */ element!(EventRef, 1378, One, false, 0x0, NotRestricted, None),
    /* 2869 */ element!(EventRef, 1378, ZeroOrOne, false, 0x0, NotRestricted, Some(4132)),
    /* 2870 */ element!(EventRef, 1378, ZeroOrOne, false, 0x0, NotRestricted, Some(5209)),
    /* 2871 */ element!(EventRef, 1952, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(1980)),
    /* 2872 */ element!(EventRef, 1952, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(1981)),
    /* 2873 */ element!(EventRef, 1984, ZeroOrOne, false, 0x0, ClassicPlatform, Some(2685)),
    /* 2874 */ element!(EventRef, 2084, One, false, 0x0, NotRestricted, None),
    /* 2875 */ element!(EventRef, 2084, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(1960)),
    /* 2876 */ element!(EventRef, 3177, ZeroOrOne, false, 0x0, NotRestricted, Some(3091)),
    /* 2877 */ element!(EventRef, 3564, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(1982)),
    /* 2878 */ element!(EventRef, 3564, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(1983)),
    /* 2879 */ element!(EventRef, 3984, ZeroOrOne, false, 0x0, NotRestricted, Some(1959)),
    /* 2880 */ element!(EventRef, 3984, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(1959)),
    /* 2881 */ element!(EventRef, 4242, One, false, 0x0, NotRestricted, None),
    /* 2882 */ element!(EventRef, 4245, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(2194)),
    /* 2883 */ element!(EventRef, 4720, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(2859)),
    /* 2884 */ element!(EventRefs, 1334, ZeroOrOne, false, 0x0, NotRestricted, Some(5258)),
    /* 2885 */ element!(EventRefs, 4243, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(1979)),
    /* 2886 */ element!(EventRefs, 4873, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5679)),
    /* 2887 */ element!(EventSourceRef, 246, ZeroOrOne, false, 0x0, ClassicPlatform, Some(3064)),
    /* 2888 */ element!(EventSourceRef, 304, ZeroOrOne, false, 0x0, ClassicPlatform, Some(2812)),
    /* 2889 */ element!(EventSourceRef, 369, ZeroOrOne, false, 0x0, ClassicPlatform, Some(2779)),
    /* 2890 */ element!(EventSourceRef, 983, ZeroOrOne, false, 0x0, NotRestricted, Some(3076)),
    /* 2891 */ element!(EventSourceRef, 983, ZeroOrOne, false, 0x0, NotRestricted, Some(3077)),
    /* 2892 */ element!(EventSourceRef, 2660, ZeroOrOne, false, 0x0, NotRestricted, Some(3071)),
    /* 2893 */ element!(EventSourceRef, 3050, ZeroOrOne, false, 0x0, NotRestricted, Some(3073)),
    /* 2894 */ element!(EventSymbolName, 4581, ZeroOrOne, false, 0x1F0000, NotRestricted, Some(3275)),
    /* 2895 */ element!(EventTopicAccessRuleRef, 1034, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(446)),
    /* 2896 */ element!(EventWindowTime, 1321, ZeroOrOne, false, 0x0, NotRestricted, Some(3543)),
    /* 2897 */ element!(EventWindows, 1519, ZeroOrOne, false, 0x0, NotRestricted, Some(5501)),
    /* 2898 */ element!(Events, 351, ZeroOrOne, false, 0x1FFF80, NotRestricted, Some(135)),
    /* 2899 */ element!(Events, 1520, ZeroOrOne, false, 0x0, NotRestricted, Some(5534)),
    /* 2900 */ element!(Events, 4023, ZeroOrOne, false, 0x1C0000, AdaptivePlatform, Some(5560)),
    /* 2901 */ element!(Events, 4523, ZeroOrOne, false, 0x1FFFFC, NotRestricted, Some(4704)),
    /* 2902 */ element!(ExcessBurstSize, 3494, ZeroOrOne, false, 0x0, ClassicPlatform, Some(1001)),
    /* 2903 */ element!(ExcessInformationRate, 3494, ZeroOrOne, false, 0x0, ClassicPlatform, Some(1000)),
    /* 2904 */ element!(ExclusiveArea, 2087, One, false, 0x0, NotRestricted, None),
    /* 2905 */ element!(ExclusiveAreaNestingOrder, 2088, One, false, 0x0, NotRestricted, None),
    /* 2906 */ element!(ExclusiveAreaNestingOrderRef, 2098, One, false, 0x0, NotRestricted, None),
    /* 2907 */ element!(ExclusiveAreaNestingOrderRefs, 2099, ZeroOrOne, false, 0x0, NotRestricted, Some(5729)),
    /* 2908 */ element!(ExclusiveAreaNestingOrders, 2656, ZeroOrOne, false, 0x1FFFF8, NotRestricted, Some(5728)),
    /* 2909 */ element!(ExclusiveAreaPolicys, 352, ZeroOrOne, false, 0x1FFF80, NotRestricted, Some(1740)),
    /* 2910 */ element!(ExclusiveAreaPolicys, 4524, ZeroOrOne, false, 0x1FFF00, NotRestricted, Some(1692)),
    /* 2911 */ element!(ExclusiveAreaRef, 336, ZeroOrOne, false, 0x0, NotRestricted, Some(2711)),
    /* 2912 */ element!(ExclusiveAreaRef, 2089, One, false, 0x0, NotRestricted, None),
    /* 2913 */ element!(ExclusiveAreaRef, 2092, ZeroOrOne, false, 0x0, NotRestricted, None),
    /* 2914 */ element!(ExclusiveAreaRef, 2119, ZeroOrOne, false, 0x0, NotRestricted, Some(2081)),
    /* 2915 */ element!(ExclusiveAreaRef, 4518, ZeroOrOne, false, 0x0, NotRestricted, Some(5210)),
    /* 2916 */ element!(ExclusiveAreaRefConditional, 2091, One, false, 0x0, NotRestricted, None),
    /* 2917 */ element!(ExclusiveAreaRefs, 2090, ZeroOrOne, true, 0x0, NotRestricted, Some(5377)),
    /* 2918 */ element!(ExclusiveAreas, 2657, ZeroOrOne, false, 0x1FFF80, NotRestricted, Some(5784)),
    /* 2919 */ element!(ExecInUserMode, 298, ZeroOrOne, false, 0x0, ClassicPlatform, Some(55)),
    /* 2920 */ element!(Executable, 2093, One, false, 0x0, NotRestricted, None),
    /* 2921 */ element!(ExecutableEntityActivationReason, 2094, One, false, 0x0, NotRestricted, None),
    /* 2922 */ element!(ExecutableEntityRef, 2966, One, false, 0x0, NotRestricted, None),
    /* 2923 */ element!(ExecutableEntityRef, 4325, ZeroOrOne, false, 0x0, NotRestricted, Some(2863)),
    /* 2924 */ element!(ExecutableEntityRef, 4325, ZeroOrOne, false, 0x0, NotRestricted, Some(2864)),
    /* 2925 */ element!(ExecutableEntityRefs, 2967, ZeroOrOne, false, 0x0, NotRestricted, Some(2082)),
    /* 2926 */ element!(ExecutableGroup, 2101, One, false, 0x0, NotRestricted, None),
    /* 2927 */ element!(ExecutableLoggingImplementationProps, 2105, One, false, 0x0, NotRestricted, None),
    /* 2928 */ element!(ExecutableProvidedPortIref, 3206, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5049)),
    /* 2929 */ element!(ExecutableRef, 48, One, false, 0x0, NotRestricted, None),
    /* 2930 */ element!(ExecutableRef, 2102, One, false, 0x0, NotRestricted, None),
    /* 2931 */ element!(ExecutableRef, 2107, One, false, 0x0, NotRestricted, None),
    /* 2932 */ element!(ExecutableRef, 2966, ZeroOrOne, false, 0x0, ClassicPlatform, Some(3070)),
    /* 2933 */ element!(ExecutableRef, 3528, One, false, 0x0, NotRestricted, None),
    /* 2934 */ element!(ExecutableRef, 3528, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(2008)),
    /* 2935 */ element!(ExecutableRef, 3536, One, false, 0x0, NotRestricted, None),
    /* 2936 */ element!(ExecutableRef, 3536, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(2008)),
    /* 2937 */ element!(ExecutableRef, 4325, ZeroOrOne, false, 0x0, ClassicPlatform, Some(2712)),
    /* 2938 */ element!(ExecutableRefs, 49, ZeroOrOne, false, 0x0, NotRestricted, Some(2009)),
    /* 2939 */ element!(ExecutableRefs, 2103, ZeroOrOne, false, 0x0, NotRestricted, Some(2009)),
    /* 2940 */ element!(ExecutableRefs, 2108, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(4313)),
    /* 2941 */ element!(ExecutableRefs, 3529, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(2008)),
    /* 2942 */ element!(ExecutableRefs, 3537, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(2008)),
    /* 2943 */ element!(ExecutableRequiredPortIref, 3596, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5049)),
    /* 2944 */ element!(ExecutableTiming, 2106, One, false, 0x0, NotRestricted, None),
    /* 2945 */ element!(ExecuteDespiteDataUnavailability, 298, ZeroOrOne, false, 0x0, NotRestricted, Some(2618)),
    /* 2946 */ element!(ExecutionContext, 337, ZeroOrOne, false, 0x0, ClassicPlatform, Some(2537)),
    /* 2947 */ element!(ExecutionContextRef, 3759, One, false, 0x0, NotRestricted, None),
    /* 2948 */ element!(ExecutionContextRefs, 3760, ZeroOrOne, false, 0x0, NotRestricted, Some(910)),
    /* 2949 */ element!(ExecutionContextRefs, 3760, ZeroOrOne, false, 0x0, NotRestricted, Some(4346)),
    /* 2950 */ element!(ExecutionContexts, 3777, ZeroOrOne, false, 0x0, NotRestricted, Some(498)),
    /* 2951 */ element!(ExecutionDependency, 2112, One, false, 0x0, NotRestricted, None),
    /* 2952 */ element!(ExecutionDependencys, 3015, ZeroOrOne, false, 0x0, NotRestricted, Some(3628)),
    /* 2953 */ element!(ExecutionDependencys, 4344, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3628)),
    /* 2954 */ element!(ExecutionError, 3494, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3728)),
    /* 2955 */ element!(ExecutionErrorRef, 4328, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(6058)),
    /* 2956 */ element!(ExecutionOrderConstraint, 2113, One, false, 0x0, NotRestricted, None),
    /* 2957 */ element!(ExecutionOrderConstraintType, 2116, ZeroOrOne, false, 0x0, ClassicPlatform, Some(2595)),
    /* 2958 */ element!(ExecutionTimeConstraint, 2118, One, false, 0x0, NotRestricted, None),
    /* 2959 */ element!(ExecutionTimeType, 2123, ZeroOrOne, false, 0x0, ClassicPlatform, Some(2606)),
    /* 2960 */ element!(ExecutionTimes, 3680, ZeroOrOne, false, 0x1FFF80, ClassicPlatform, Some(333)),
    /* 2961 */ element!(ExitModeDeclarationRef, 4704, ZeroOrOne, false, 0x0, ClassicPlatform, Some(1671)),
    /* 2962 */ element!(ExitModeDeclarationRef, 4704, ZeroOrOne, false, 0x0, NotRestricted, Some(1673)),
    /* 2963 */ element!(ExitTimeoutValue, 2229, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(4172)),
    /* 2964 */ element!(ExitedModeRef, 3053, ZeroOrOne, false, 0x0, NotRestricted, Some(5608)),
    /* 2965 */ element!(ExpectedAliveCycle, 2229, ZeroOrOne, false, 0x0, NotRestricted, Some(1006)),
    /* 2966 */ element!(ExpectedAliveCycle, 5077, ZeroOrOne, false, 0x0, NotRestricted, Some(1005)),
    /* 2967 */ element!(ExpectedAliveIndications, 3494, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(590)),
    /* 2968 */ element!(ExpectedAliveIndicationsInSupervisionCycle, 3494, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(591)),
    /* 2969 */ element!(ExpectedCallbacks, 402, ZeroOrOne, false, 0x1FFF00, ClassicPlatform, Some(1296)),
    /* 2970 */ element!(ExpectedEntrys, 393, ZeroOrOne, false, 0x1FFF00, ClassicPlatform, Some(1301)),
    /* 2971 */ element!(ExpectedTxTrigger, 2642, ZeroOrOne, false, 0x0, NotRestricted, Some(2713)),
    /* 2972 */ element!(ExpiredSupervisionCycleTol, 3494, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(578)),
    /* 2973 */ element!(ExpiredSupervisionCyclesTolerance, 3494, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(576)),
    /* 2974 */ element!(ExpiredSupervisionTolerance, 2229, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(529)),
    /* 2975 */ element!(ExplicitCongestionNotification, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(1060)),
    /* 2976 */ element!(ExplicitInterRunnableVariables, 3156, ZeroOrOne, false, 0x1FFF80, NotRestricted, Some(1269)),
    /* 2977 */ element!(ExplicitRptProfileSelectionRef, 3752, One, false, 0x0, NotRestricted, None),
    /* 2978 */ element!(ExplicitRptProfileSelectionRefs, 3753, ZeroOrOne, false, 0x1F0000, NotRestricted, Some(3658)),
    /* 2979 */ element!(Exportability, 298, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3887)),
    /* 2980 */ element!(Expression, 5048, ZeroOrOne, false, 0x0, NotRestricted, Some(5350)),
    /* 2981 */ element!(ExpressionRef, 3371, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(2203)),
    /* 2982 */ element!(ExpressionRef, 3808, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(2203)),
    /* 2983 */ element!(ExtHeaderFilterLists, 2461, ZeroOrOne, false, 0x0, ClassicPlatform, Some(1289)),
    /* 2984 */ element!(ExtendedAddressing, 298, ZeroOrOne, false, 0x0, NotRestricted, Some(98)),
    /* 2985 */ element!(ExtendedDataRecords, 1653, ZeroOrOne, false, 0x1FFFC0, NotRestricted, Some(631)),
    /* 2986 */ element!(ExtendsMetaClass, 2975, ZeroOrOne, false, 0x0, NotRestricted, Some(2684)),
    /* 2987 */ element!(ExternOffsetCorrection, 2642, ZeroOrOne, false, 0x0, NotRestricted, Some(1110)),
    /* 2988 */ element!(ExternRateCorrection, 2642, ZeroOrOne, false, 0x0, NotRestricted, Some(1111)),
    /* 2989 */ element!(ExternalAuthentications, 1183, ZeroOrOne, false, 0x180000, AdaptivePlatform, Some(3434)),
    /* 2990 */ element!(ExternalAuthentications, 4189, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3434)),
    /* 2991 */ element!(ExternalAuthentications, 4194, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5295)),
    /* 2992 */ element!(ExternalClockSynchronisation, 298, ZeroOrOne, false, 0x0, NotRestricted, Some(1641)),
    /* 2993 */ element!(ExternalReplacementRef, 3626, ZeroOrOne, false, 0x0, NotRestricted, Some(5189)),
    /* 2994 */ element!(ExternalSync, 298, ZeroOrOne, false, 0x0, NotRestricted, Some(1118)),
    /* 2995 */ element!(ExternalTriggerOccurredEvent, 2124, One, false, 0x0, NotRestricted, None),
    /* 2996 */ element!(ExternalTriggeringPoint, 2125, One, false, 0x0, NotRestricted, None),
    /* 2997 */ element!(ExternalTriggeringPoints, 3817, ZeroOrOne, false, 0x1FFF00, NotRestricted, Some(2784)),
    /* 2998 */ element!(FactorSiToUnit, 2229, ZeroOrOne, false, 0x0, NotRestricted, Some(4789)),
    /* 2999 */ element!(FactorSiToUnit, 5077, ZeroOrOne, false, 0x0, NotRestricted, Some(6052)),
    /* 3000 */ element!(FailedAliveSupervisionRefCycleTol, 3494, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(579)),
    /* 3001 */ element!(FailedReferenceCyclesTolerance, 3494, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3653)),
    /* 3002 */ element!(FailedSupervisionCyclesTolerance, 3494, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(577)),
    /* 3003 */ element!(FailureMonitoringRef, 3433, ZeroOrOne, false, 0x0, NotRestricted, Some(4761)),
    /* 3004 */ element!(FallBackInternal, 298, ZeroOrOne, false, 0x0, NotRestricted, Some(1113)),
    /* 3005 */ element!(FalseActionListRef, 3373, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(2167)),
    /* 3006 */ element!(FalseActionListRef, 3810, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(2167)),
    /* 3007 */ element!(FdcThresholdStorageValue, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(5856)),
    /* 3008 */ element!(FeatureIref, 81, ZeroOrOne, false, 0x0, NotRestricted, Some(5302)),
    /* 3009 */ element!(FeatureModelRef, 2263, One, false, 0x0, NotRestricted, None),
    /* 3010 */ element!(FeatureModelRefs, 2264, ZeroOrOne, false, 0x0, NotRestricted, Some(109)),
    /* 3011 */ element!(FeatureRef, 2255, One, false, 0x0, NotRestricted, None),
    /* 3012 */ element!(FeatureRef, 2255, One, false, 0x0, NotRestricted, Some(136)),
    /* 3013 */ element!(FeatureRef, 2255, One, false, 0x0, NotRestricted, Some(138)),
    /* 3014 */ element!(FeatureRef, 2255, ZeroOrOne, false, 0x0, NotRestricted, Some(2715)),
    /* 3015 */ element!(FeatureRefs, 2254, ZeroOrOne, false, 0x1FFFF8, NotRestricted, Some(3)),
    /* 3016 */ element!(FeatureRefs, 2254, ZeroOrOne, false, 0x0, NotRestricted, Some(2714)),
    /* 3017 */ element!(FeatureRefs, 2254, ZeroOrOne, false, 0x0, NotRestricted, Some(2888)),
    /* 3018 */ element!(FibexElementRef, 2129, ZeroOrOne, false, 0x0, NotRestricted, None),
    /* 3019 */ element!(FibexElementRefConditional, 2128, One, false, 0x0, NotRestricted, None),
    /* 3020 */ element!(FibexElements, 4612, ZeroOrOne, false, 0x1C0000, NotRestricted, Some(4907)),
    /* 3021 */ element!(Field, 2130, One, false, 0x0, NotRestricted, None),
    /* 3022 */ element!(FieldDeployments, 4015, ZeroOrOne, false, 0x0, NotRestricted, Some(1516)),
    /* 3023 */ element!(FieldDeployments, 4015, ZeroOrOne, false, 0x180000, AdaptivePlatform, Some(1516)),
    /* 3024 */ element!(FieldElements, 4061, ZeroOrOne, false, 0x0, NotRestricted, Some(1284)),
    /* 3025 */ element!(FieldGetSetQosPropss, 1059, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(1387)),
    /* 3026 */ element!(FieldGetSetQosPropss, 1059, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(1389)),
    /* 3027 */ element!(FieldIref, 2132, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(2172)),
    /* 3028 */ element!(FieldMapping, 2135, One, false, 0x0, NotRestricted, None),
    /* 3029 */ element!(FieldMappings, 2646, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(1425)),
    /* 3030 */ element!(FieldMappings, 4004, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(1432)),
    /* 3031 */ element!(FieldNotifierQosPropss, 1060, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(1385)),
    /* 3032 */ element!(FieldNotifierQosPropss, 1060, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(1386)),
    /* 3033 */ element!(FieldNotifierRef, 4019, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(1913)),
    /* 3034 */ element!(FieldRef, 1040, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(2195)),
    /* 3035 */ element!(FieldRef, 2136, One, false, 0x0, NotRestricted, None),
    /* 3036 */ element!(FieldRef, 2136, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(1919)),
    /* 3037 */ element!(FieldRef, 3981, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(2889)),
    /* 3038 */ element!(FieldRef, 3986, ZeroOrOne, false, 0x0, NotRestricted, Some(1849)),
    /* 3039 */ element!(FieldRef, 3986, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(1849)),
    /* 3040 */ element!(FieldRefs, 4874, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5680)),
    /* 3041 */ element!(FieldReplyTopicName, 4393, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(1564)),
    /* 3042 */ element!(FieldRequestTopicName, 4393, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(1566)),
    /* 3043 */ element!(FieldSenderComSpec, 2137, One, false, 0x0, NotRestricted, None),
    /* 3044 */ element!(FieldTopicsAccessRuleRef, 1034, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(444)),
    /* 3045 */ element!(Fields, 3631, ZeroOrOne, true, 0x1C0000, NotRestricted, Some(3178)),
    /* 3046 */ element!(Fields, 4025, ZeroOrOne, false, 0x1C0000, AdaptivePlatform, Some(5561)),
    /* 3047 */ element!(FifoDepth, 2642, ZeroOrOne, false, 0x0, NotRestricted, Some(1128)),
    /* 3048 */ element!(FifoRanges, 2199, ZeroOrOne, false, 0x0, NotRestricted, Some(1009)),
    /* 3049 */ element!(Figure, 2986, One, false, 0x0, NotRestricted, Some(5348)),
    /* 3050 */ element!(Figure, 2986, One, false, 0xC0000, NotRestricted, Some(5348)),
    /* 3051 */ element!(FigureCaption, 533, ZeroOrOne, false, 0x0, NotRestricted, Some(4407)),
    /* 3052 */ element!(FileElements, 3299, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3342)),
    /* 3053 */ element!(FileInfoComment, 2139, ZeroOrOne, false, 0x0, NotRestricted, Some(5367)),
    /* 3054 */ element!(FileName, 4393, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3913)),
    /* 3055 */ element!(FileName, 4393, ZeroOrOne, false, 0x0, NotRestricted, Some(3914)),
    /* 3056 */ element!(FileName, 4393, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3917)),
    /* 3057 */ element!(FileProxys, 3292, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3341)),
    /* 3058 */ element!(FileRef, 3286, One, false, 0x0, NotRestricted, None),
    /* 3059 */ element!(FileRefs, 3287, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5225)),
    /* 3060 */ element!(FileStorageRef, 3322, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5249)),
    /* 3061 */ element!(FileType, 4393, ZeroOrOne, false, 0x0, NotRestricted, Some(3958)),
    /* 3062 */ element!(FileTypePattern, 4393, ZeroOrOne, false, 0x0, NotRestricted, Some(3510)),
    /* 3063 */ element!(Files, 3288, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3361)),
    /* 3064 */ element!(Files, 3297, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3362)),
    /* 3065 */ element!(Filter, 919, ZeroOrOne, false, 0x0, ClassicPlatform, Some(499)),
    /* 3066 */ element!(Filter, 919, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(499)),
    /* 3067 */ element!(Filter, 919, ZeroOrOne, false, 0x0, NotRestricted, Some(2787)),
    /* 3068 */ element!(FilterActionBlockSource, 298, ZeroOrOne, false, 0x0, ClassicPlatform, Some(972)),
    /* 3069 */ element!(FilterActionDestPortModification, 4567, ZeroOrOne, false, 0x0, ClassicPlatform, Some(586)),
    /* 3070 */ element!(FilterActionDropFrame, 298, ZeroOrOne, false, 0x0, ClassicPlatform, Some(973)),
    /* 3071 */ element!(FilterActionVlanModification, 3494, ZeroOrOne, false, 0x0, ClassicPlatform, Some(585)),
    /* 3072 */ element!(FilterChains, 3906, ZeroOrOne, false, 0x1C0000, NotRestricted, Some(4946)),
    /* 3073 */ element!(FilterPriority, 3494, ZeroOrOne, false, 0x0, ClassicPlatform, Some(567)),
    /* 3074 */ element!(FilteringDebouncing, 2141, ZeroOrOne, false, 0x0, NotRestricted, Some(4022)),
    /* 3075 */ element!(FinalCheckpointRef, 2861, One, false, 0x0, NotRestricted, None),
    /* 3076 */ element!(FinalCheckpointRefs, 2862, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(2196)),
    /* 3077 */ element!(FireAndForget, 298, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3820)),
    /* 3078 */ element!(FireAndForgetMapping, 2142, One, false, 0x0, NotRestricted, None),
    /* 3079 */ element!(FireAndForgetMappings, 2647, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(1426)),
    /* 3080 */ element!(FireAndForgetMethodMapping, 2146, One, false, 0x0, NotRestricted, None),
    /* 3081 */ element!(FireAndForgetMethodMappings, 2648, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(1426)),
    /* 3082 */ element!(FireAndForgetMethodMappings, 4005, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(1435)),
    /* 3083 */ element!(FirewallRef, 53, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(2083)),
    /* 3084 */ element!(FirewallRule, 2151, One, false, 0x0, NotRestricted, None),
    /* 3085 */ element!(FirewallRuleProps, 2154, One, false, 0x0, NotRestricted, None),
    /* 3086 */ element!(FirewallRulePropss, 4339, ZeroOrOne, true, 0x0, NotRestricted, Some(321)),
    /* 3087 */ element!(FirewallRuleRef, 738, One, false, 0x0, NotRestricted, None),
    /* 3088 */ element!(FirewallRuleRef, 1830, One, false, 0x0, NotRestricted, None),
    /* 3089 */ element!(FirewallRuleRefs, 739, ZeroOrOne, false, 0x0, NotRestricted, Some(1104)),
    /* 3090 */ element!(FirewallRuleRefs, 1831, ZeroOrOne, false, 0x0, NotRestricted, Some(1105)),
    /* 3091 */ element!(FirewallStateIref, 2161, One, false, 0x0, NotRestricted, None),
    /* 3092 */ element!(FirewallStateIrefs, 4340, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(2010)),
    /* 3093 */ element!(FirewallStateMachines, 2165, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3138)),
    /* 3094 */ element!(FirewallStateModeDeclarationRef, 4341, One, false, 0x0, NotRestricted, None),
    /* 3095 */ element!(FirewallStateModeDeclarationRefs, 4342, ZeroOrOne, false, 0x0, ClassicPlatform, Some(2010)),
    /* 3096 */ element!(FirewallStateSwitchInterface, 2164, One, false, 0x0, NotRestricted, None),
    /* 3097 */ element!(FirstApplicationErrorRef, 554, ZeroOrOne, false, 0x0, NotRestricted, Some(5610)),
    /* 3098 */ element!(FirstDataPrototypeRef, 3940, ZeroOrOne, false, 0x0, NotRestricted, Some(1108)),
    /* 3099 */ element!(FirstElementInstanceIref, 81, One, false, 0x0, NotRestricted, None),
    /* 3100 */ element!(FirstElementInstanceIrefs, 5052, ZeroOrOne, false, 0x0, NotRestricted, Some(1337)),
    /* 3101 */ element!(FirstElementRef, 24, One, false, 0x0, NotRestricted, None),
    /* 3102 */ element!(FirstElementRefs, 5053, ZeroOrOne, false, 0x0, NotRestricted, Some(2013)),
    /* 3103 */ element!(FirstElements, 4400, ZeroOrOne, false, 0x1C0000, NotRestricted, Some(5613)),
    /* 3104 */ element!(FirstModeGroupRef, 3039, ZeroOrOne, false, 0x0, NotRestricted, Some(1552)),
    /* 3105 */ element!(FirstModeRef, 3053, One, false, 0x0, NotRestricted, None),
    /* 3106 */ element!(FirstModeRefs, 3011, ZeroOrOne, false, 0x0, NotRestricted, Some(5611)),
    /* 3107 */ element!(FirstOperationRef, 544, ZeroOrOne, false, 0x0, NotRestricted, Some(1109)),
    /* 3108 */ element!(FirstPhysicalDimensionRef, 3388, ZeroOrOne, false, 0x0, NotRestricted, Some(5612)),
    /* 3109 */ element!(FirstPortRef, 750, ZeroOrOne, false, 0x0, NotRestricted, Some(2197)),
    /* 3110 */ element!(FirstTimeout, 2229, ZeroOrOne, false, 0x0, NotRestricted, Some(17)),
    /* 3111 */ element!(FirstToSecondDataTransformationRef, 576, ZeroOrOne, false, 0x0, NotRestricted, Some(5170)),
    /* 3112 */ element!(FirstToSecondDataTransformationRef, 970, ZeroOrOne, false, 0x0, NotRestricted, Some(4951)),
    /* 3113 */ element!(FirstTriggerRef, 4926, ZeroOrOne, false, 0x0, NotRestricted, Some(28)),
    /* 3114 */ element!(FirstValue, 2231, ZeroOrOne, false, 0x0, NotRestricted, Some(5957)),
    /* 3115 */ element!(FixedLength, 298, ZeroOrOne, false, 0x0, NotRestricted, Some(3979)),
    /* 3116 */ element!(FlatInstanceDescriptor, 2166, One, false, 0x0, NotRestricted, None),
    /* 3117 */ element!(FlatInstanceRef, 2931, ZeroOrOne, false, 0x0, ClassicPlatform, Some(166)),
    /* 3118 */ element!(FlatMap, 2167, One, false, 0x0, NotRestricted, None),
    /* 3119 */ element!(FlatMapEntryRef, 2931, ZeroOrOne, false, 0x0, ClassicPlatform, Some(2186)),
    /* 3120 */ element!(FlatMapEntryRef, 2937, One, false, 0x0, NotRestricted, None),
    /* 3121 */ element!(FlatMapEntryRef, 2945, One, false, 0x0, NotRestricted, None),
    /* 3122 */ element!(FlatMapEntryRefs, 2938, ZeroOrOne, false, 0x1FFFC0, ClassicPlatform, Some(2263)),
    /* 3123 */ element!(FlatMapEntryRefs, 2946, ZeroOrOne, false, 0x1FE000, ClassicPlatform, Some(2263)),
    /* 3124 */ element!(FlatMapRef, 3741, ZeroOrOne, false, 0x1FFFF0, ClassicPlatform, Some(2716)),
    /* 3125 */ element!(FlatObjectRef, 117, ZeroOrOne, false, 0x0, NotRestricted, Some(5262)),
    /* 3126 */ element!(FlexrayAbsolutelyScheduledTiming, 2169, One, false, 0x0, NotRestricted, None),
    /* 3127 */ element!(FlexrayArTpChannel, 2170, One, false, 0x0, NotRestricted, None),
    /* 3128 */ element!(FlexrayArTpConfig, 2174, One, false, 0x0, NotRestricted, None),
    /* 3129 */ element!(FlexrayArTpConnection, 2178, One, false, 0x0, NotRestricted, None),
    /* 3130 */ element!(FlexrayArTpNode, 2184, One, false, 0x0, NotRestricted, None),
    /* 3131 */ element!(FlexrayCluster, 2189, One, false, 0x0, NotRestricted, None),
    /* 3132 */ element!(FlexrayClusterConditional, 2190, One, false, 0x0, NotRestricted, None),
    /* 3133 */ element!(FlexrayClusterVariants, 2191, ZeroOrOne, false, 0x1FFC00, NotRestricted, Some(4408)),
    /* 3134 */ element!(FlexrayCommunicationConnector, 2192, One, false, 0x0, NotRestricted, None),
    /* 3135 */ element!(FlexrayCommunicationController, 2193, One, false, 0x0, NotRestricted, None),
    /* 3136 */ element!(FlexrayCommunicationControllerConditional, 2194, One, false, 0x0, NotRestricted, None),
    /* 3137 */ element!(FlexrayCommunicationControllerVariants, 2196, ZeroOrOne, false, 0x1C0000, NotRestricted, Some(4408)),
    /* 3138 */ element!(FlexrayFifoConfiguration, 2197, One, false, 0x0, NotRestricted, None),
    /* 3139 */ element!(FlexrayFifoRange, 2200, One, false, 0x0, NotRestricted, None),
    /* 3140 */ element!(FlexrayFifos, 2195, ZeroOrOne, false, 0x0, NotRestricted, Some(1637)),
    /* 3141 */ element!(FlexrayFrame, 2201, One, false, 0x0, NotRestricted, None),
    /* 3142 */ element!(FlexrayFrameTriggering, 2202, One, false, 0x0, NotRestricted, None),
    /* 3143 */ element!(FlexrayNmCluster, 2204, One, false, 0x0, NotRestricted, None),
    /* 3144 */ element!(FlexrayNmClusterCoupling, 2205, One, false, 0x0, NotRestricted, None),
    /* 3145 */ element!(FlexrayNmEcu, 2208, One, false, 0x0, NotRestricted, None),
    /* 3146 */ element!(FlexrayNmNode, 2209, One, false, 0x0, NotRestricted, None),
    /* 3147 */ element!(FlexrayPhysicalChannel, 2211, One, false, 0x0, NotRestricted, None),
    /* 3148 */ element!(FlexrayTpConfig, 2212, One, false, 0x0, NotRestricted, None),
    /* 3149 */ element!(FlexrayTpConnection, 2218, One, false, 0x0, NotRestricted, None),
    /* 3150 */ element!(FlexrayTpConnectionControl, 2219, One, false, 0x0, NotRestricted, None),
    /* 3151 */ element!(FlexrayTpEcu, 2224, One, false, 0x0, NotRestricted, None),
    /* 3152 */ element!(FlexrayTpNode, 2225, One, false, 0x0, NotRestricted, None),
    /* 3153 */ element!(FlexrayTpPduPool, 2227, One, false, 0x0, NotRestricted, None),
    /* 3154 */ element!(Float, 2230, ZeroOrOne, false, 0x0, NotRestricted, Some(1294)),
    /* 3155 */ element!(FloatValueVariationPoint, 2231, One, false, 0x0, NotRestricted, None),
    /* 3156 */ element!(FlowControlPduRef, 2182, ZeroOrOne, false, 0x0, NotRestricted, Some(1732)),
    /* 3157 */ element!(FlowControlPduRef, 2182, ZeroOrOne, false, 0x0, NotRestricted, Some(2029)),
    /* 3158 */ element!(FlowControlPduRef, 4132, One, false, 0x0, NotRestricted, None),
    /* 3159 */ element!(FlowControlPduRef, 4132, ZeroOrOne, false, 0x0, ClassicPlatform, Some(2084)),
    /* 3160 */ element!(FlowControlPduRefs, 2741, ZeroOrOne, false, 0x0, ClassicPlatform, Some(2037)),
    /* 3161 */ element!(FlowControlRef, 4132, ZeroOrOne, false, 0x0, ClassicPlatform, Some(2028)),
    /* 3162 */ element!(FlowLabel, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(1062)),
    /* 3163 */ element!(FlowLabel, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(2682)),
    /* 3164 */ element!(FlowMeteringRef, 4571, ZeroOrOne, false, 0x0, ClassicPlatform, Some(1851)),
    /* 3165 */ element!(FlowMeterings, 741, ZeroOrOne, false, 0x0, ClassicPlatform, Some(273)),
    /* 3166 */ element!(FmAttributeDef, 2233, One, false, 0x0, NotRestricted, None),
    /* 3167 */ element!(FmAttributeValue, 2234, One, false, 0x0, NotRestricted, None),
    /* 3168 */ element!(FmCond, 2236, ZeroOrOne, false, 0x0, NotRestricted, Some(2893)),
    /* 3169 */ element!(FmFeature, 2238, One, false, 0x0, NotRestricted, None),
    /* 3170 */ element!(FmFeatureDecomposition, 2240, One, false, 0x0, NotRestricted, None),
    /* 3171 */ element!(FmFeatureMap, 2242, One, false, 0x0, NotRestricted, None),
    /* 3172 */ element!(FmFeatureMapAssertion, 2243, One, false, 0x0, NotRestricted, None),
    /* 3173 */ element!(FmFeatureMapCondition, 2244, One, false, 0x0, NotRestricted, None),
    /* 3174 */ element!(FmFeatureMapElement, 2245, One, false, 0x0, NotRestricted, None),
    /* 3175 */ element!(FmFeatureModel, 2253, One, false, 0x0, NotRestricted, None),
    /* 3176 */ element!(FmFeatureRelation, 2256, One, false, 0x0, NotRestricted, None),
    /* 3177 */ element!(FmFeatureRestriction, 2258, One, false, 0x0, NotRestricted, None),
    /* 3178 */ element!(FmFeatureSelection, 2260, One, false, 0x0, NotRestricted, None),
    /* 3179 */ element!(FmFeatureSelectionSet, 2262, One, false, 0x0, NotRestricted, None),
    /* 3180 */ element!(FmSyscond, 2237, ZeroOrOne, false, 0x0, NotRestricted, Some(2892)),
    /* 3181 */ element!(Fmi, 3494, ZeroOrOne, false, 0x0, ClassicPlatform, Some(4110)),
    /* 3182 */ element!(FollowUpActionRef, 437, One, false, 0x0, NotRestricted, None),
    /* 3183 */ element!(FollowUpActionRefs, 438, ZeroOrOne, false, 0x0, NotRestricted, Some(3483)),
    /* 3184 */ element!(FollowUpOffset, 2229, ZeroOrOne, false, 0x0, NotRestricted, Some(5659)),
    /* 3185 */ element!(FollowUpTimeoutValue, 2229, ZeroOrOne, false, 0x0, NotRestricted, Some(2322)),
    /* 3186 */ element!(FollowUpTimeoutValue, 2229, ZeroOrOne, false, 0x0, NotRestricted, Some(2323)),
    /* 3187 */ element!(ForbiddenSignalPath, 2269, One, false, 0x0, NotRestricted, None),
    /* 3188 */ element!(ForeignModelReference, 2271, ZeroOrOne, false, 0x0, NotRestricted, Some(4718)),
    /* 3189 */ element!(FormalBlueprintCondition, 284, ZeroOrOne, false, 0x0, NotRestricted, Some(4320)),
    /* 3190 */ element!(FormalBlueprintGenerator, 287, ZeroOrOne, false, 0x0, NotRestricted, Some(5346)),
    /* 3191 */ element!(Format, 836, ZeroOrOne, false, 0x0, NotRestricted, Some(3528)),
    /* 3192 */ element!(Format, 4393, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3521)),
    /* 3193 */ element!(Formula, 1274, ZeroOrOne, false, 0x0, NotRestricted, Some(4141)),
    /* 3194 */ element!(Formula, 2987, One, false, 0x0, NotRestricted, Some(4710)),
    /* 3195 */ element!(Formula, 2987, One, false, 0xC0000, NotRestricted, Some(4710)),
    /* 3196 */ element!(Formula, 4353, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3398)),
    /* 3197 */ element!(Formula, 4709, ZeroOrOne, false, 0x0, NotRestricted, Some(4788)),
    /* 3198 */ element!(FormulaCaption, 533, ZeroOrOne, false, 0x0, NotRestricted, Some(4399)),
    /* 3199 */ element!(FrClusterRef, 4688, ZeroOrOne, false, 0x0, NotRestricted, Some(3112)),
    /* 3200 */ element!(FrGlobalTimeDomainProps, 2273, One, false, 0x0, NotRestricted, None),
    /* 3201 */ element!(Fragment, 2500, ZeroOrOne, false, 0x0, NotRestricted, Some(5783)),
    /* 3202 */ element!(FragmentationProps, 2705, ZeroOrOne, false, 0x0, NotRestricted, Some(390)),
    /* 3203 */ element!(FragmentationProps, 2712, ZeroOrOne, false, 0x0, NotRestricted, Some(394)),
    /* 3204 */ element!(FrameLength, 2642, ZeroOrOne, false, 0x0, NotRestricted, Some(3175)),
    /* 3205 */ element!(FrameMapping, 2276, One, false, 0x0, NotRestricted, None),
    /* 3206 */ element!(FrameMappings, 2317, ZeroOrOne, false, 0x1C0000, NotRestricted, Some(1130)),
    /* 3207 */ element!(FramePid, 2279, One, false, 0x0, NotRestricted, None),
    /* 3208 */ element!(FramePids, 240, ZeroOrOne, false, 0x0, ClassicPlatform, Some(1658)),
    /* 3209 */ element!(FramePort, 2280, One, false, 0x0, NotRestricted, None),
    /* 3210 */ element!(FramePortRef, 2281, One, false, 0x0, NotRestricted, None),
    /* 3211 */ element!(FramePortRefs, 2282, ZeroOrOne, false, 0x0, NotRestricted, Some(2251)),
    /* 3212 */ element!(FramePreemptionSupport, 298, ZeroOrOne, false, 0x0, NotRestricted, Some(740)),
    /* 3213 */ element!(FrameRef, 2790, ZeroOrOne, false, 0x0, ClassicPlatform, Some(1852)),
    /* 3214 */ element!(FrameRef, 2805, ZeroOrOne, false, 0x0, ClassicPlatform, Some(1852)),
    /* 3215 */ element!(FrameRef, 4695, ZeroOrOne, false, 0x0, NotRestricted, Some(1644)),
    /* 3216 */ element!(FrameRef, 4695, ZeroOrOne, false, 0x0, NotRestricted, Some(3112)),
    /* 3217 */ element!(FrameSyncEnabled, 298, ZeroOrOne, false, 0x0, NotRestricted, Some(752)),
    /* 3218 */ element!(FrameTriggeringRef, 179, ZeroOrOne, false, 0x0, ClassicPlatform, Some(1988)),
    /* 3219 */ element!(FrameTriggeringRef, 179, ZeroOrOne, false, 0x0, ClassicPlatform, Some(2502)),
    /* 3220 */ element!(FrameTriggerings, 3380, ZeroOrOne, false, 0x1FFFF8, ClassicPlatform, Some(1645)),
    /* 3221 */ element!(FrameTriggerings, 3380, ZeroOrOne, false, 0x1FFFFF, ClassicPlatform, Some(1645)),
    /* 3222 */ element!(FreeFormat, 2285, One, false, 0x0, NotRestricted, None),
    /* 3223 */ element!(FreezeCurrentState, 298, ZeroOrOne, false, 0x0, NotRestricted, Some(2400)),
    /* 3224 */ element!(FreezeCurrentStateSupported, 298, ZeroOrOne, false, 0x0, NotRestricted, Some(3897)),
    /* 3225 */ element!(FreezeFrameContentRef, 1654, ZeroOrOne, false, 0x0, NotRestricted, Some(5617)),
    /* 3226 */ element!(FreezeFrameContentWwhObdRef, 1655, ZeroOrOne, false, 0x0, NotRestricted, Some(4910)),
    /* 3227 */ element!(FreezeFrameRef, 1505, ZeroOrOne, false, 0x0, NotRestricted, Some(5518)),
    /* 3228 */ element!(FreezeFrames, 1656, ZeroOrOne, false, 0x1FFFC0, NotRestricted, Some(472)),
    /* 3229 */ element!(FreshnessCounterSyncAttempts, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(3720)),
    /* 3230 */ element!(FreshnessPropsRef, 3888, ZeroOrOne, false, 0x0, NotRestricted, Some(2011)),
    /* 3231 */ element!(FreshnessPropss, 3884, ZeroOrOne, false, 0x0, NotRestricted, Some(1133)),
    /* 3232 */ element!(FreshnessTimestampTimePeriodFactor, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(3595)),
    /* 3233 */ element!(FreshnessValueId, 3494, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3638)),
    /* 3234 */ element!(FreshnessValueId, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(3639)),
    /* 3235 */ element!(FreshnessValueLength, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(3668)),
    /* 3236 */ element!(FreshnessValueLength, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(3669)),
    /* 3237 */ element!(FreshnessValueTxLength, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(3688)),
    /* 3238 */ element!(FreshnessValueTxLength, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(3689)),
    /* 3239 */ element!(FromRef, 330, ZeroOrOne, false, 0x0, ClassicPlatform, Some(5915)),
    /* 3240 */ element!(Ft, 4097, One, false, 0x0, NotRestricted, Some(4709)),
    /* 3241 */ element!(Ft, 4098, One, false, 0x0, NotRestricted, Some(4709)),
    /* 3242 */ element!(FullDuplexEnabled, 298, ZeroOrOne, false, 0x0, ClassicPlatform, Some(2896)),
    /* 3243 */ element!(FullyQualifiedDomainName, 4393, ZeroOrOne, false, 0x0, NotRestricted, Some(609)),
    /* 3244 */ element!(Function, 2642, ZeroOrOne, false, 0x0, ClassicPlatform, Some(1135)),
    /* 3245 */ element!(Function, 4393, ZeroOrOne, false, 0x0, ClassicPlatform, Some(4130)),
    /* 3246 */ element!(FunctionClusterAffiliation, 4393, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(4270)),
    /* 3247 */ element!(FunctionGroupIref, 2295, One, false, 0x0, NotRestricted, None),
    /* 3248 */ element!(FunctionGroupIref, 3028, One, false, 0x0, NotRestricted, None),
    /* 3249 */ element!(FunctionGroupIrefs, 3016, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5325)),
    /* 3250 */ element!(FunctionGroupIrefs, 3102, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5096)),
    /* 3251 */ element!(FunctionGroupModeIref, 3028, One, false, 0x0, NotRestricted, None),
    /* 3252 */ element!(FunctionGroupModeIrefs, 3017, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5326)),
    /* 3253 */ element!(FunctionGroupModeRequestPhmActionItem, 2288, One, false, 0x0, NotRestricted, None),
    /* 3254 */ element!(FunctionGroupPhmStateReference, 2289, One, false, 0x0, NotRestricted, None),
    /* 3255 */ element!(FunctionGroupPortMapping, 2290, One, false, 0x0, NotRestricted, None),
    /* 3256 */ element!(FunctionGroupRef, 2291, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5077)),
    /* 3257 */ element!(FunctionGroupSet, 2293, One, false, 0x0, NotRestricted, None),
    /* 3258 */ element!(FunctionGroupStateIref, 2295, One, false, 0x0, NotRestricted, None),
    /* 3259 */ element!(FunctionGroupStateIref, 2295, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5327)),
    /* 3260 */ element!(FunctionGroupStateIrefs, 3103, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5096)),
    /* 3261 */ element!(FunctionGroupStateIrefs, 4345, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5326)),
    /* 3262 */ element!(FunctionGroupTypeRef, 4337, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5010)),
    /* 3263 */ element!(FunctionGroups, 2294, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3366)),
    /* 3264 */ element!(FunctionGroups, 2910, ZeroOrOne, false, 0xE000, AdaptivePlatform, Some(3365)),
    /* 3265 */ element!(FunctionId, 3494, ZeroOrOne, false, 0x0, ClassicPlatform, Some(1353)),
    /* 3266 */ element!(FunctionId, 3494, ZeroOrOne, false, 0x0, ClassicPlatform, Some(1354)),
    /* 3267 */ element!(FunctionId, 3494, ZeroOrOne, false, 0x0, ClassicPlatform, Some(4154)),
    /* 3268 */ element!(FunctionIdentifierRef, 1338, ZeroOrOne, false, 0x0, NotRestricted, Some(5584)),
    /* 3269 */ element!(FunctionIdentifierRef, 1386, ZeroOrOne, false, 0x0, ClassicPlatform, Some(5038)),
    /* 3270 */ element!(FunctionIdentifierRef, 1386, ZeroOrOne, false, 0x0, ClassicPlatform, Some(5128)),
    /* 3271 */ element!(FunctionInhibitionAvailabilityNeeds, 2298, One, false, 0x0, NotRestricted, None),
    /* 3272 */ element!(FunctionInhibitionNeeds, 2300, One, false, 0x0, NotRestricted, None),
    /* 3273 */ element!(FunctionInstance, 2642, ZeroOrOne, false, 0x0, ClassicPlatform, Some(1134)),
    /* 3274 */ element!(FunctionName, 4393, One, false, 0x0, NotRestricted, None),
    /* 3275 */ element!(FunctionNames, 2433, ZeroOrOne, false, 0x0, NotRestricted, Some(3848)),
    /* 3276 */ element!(FunctionPointerSignatureRef, 404, ZeroOrOne, false, 0x0, ClassicPlatform, Some(3066)),
    /* 3277 */ element!(FunctionPrototypeEmitter, 4393, ZeroOrOne, false, 0x0, ClassicPlatform, Some(3999)),
    /* 3278 */ element!(FunctionalClusterDesigns, 2904, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(397)),
    /* 3279 */ element!(FunctionalClusterInteractsWithDiagnosticEventMapping, 2301, One, false, 0x0, NotRestricted, None),
    /* 3280 */ element!(FunctionalClusterInteractsWithPersistencyDeploymentMapping, 2306, One, false, 0x0, NotRestricted, None),
    /* 3281 */ element!(FunctionalClusterRef, 121, One, false, 0x0, NotRestricted, None),
    /* 3282 */ element!(FunctionalClusterRef, 140, One, false, 0x0, NotRestricted, None),
    /* 3283 */ element!(FunctionalClusterRef, 2304, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5149)),
    /* 3284 */ element!(FunctionalClusterRef, 2307, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5092)),
    /* 3285 */ element!(FunctionalClusterRefs, 109, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5097)),
    /* 3286 */ element!(FunctionalClusterRefs, 141, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5098)),
    /* 3287 */ element!(FunctionalClusterToSecurityEventDefinitionMapping, 2311, One, false, 0x0, NotRestricted, None),
    /* 3288 */ element!(FunctionalRequestRef, 1198, One, false, 0x0, NotRestricted, None),
    /* 3289 */ element!(FunctionalRequestRefs, 1194, ZeroOrOne, false, 0x0, NotRestricted, Some(2012)),
    /* 3290 */ element!(FunctionalUnit, 2231, ZeroOrOne, false, 0x0, NotRestricted, Some(4212)),
    /* 3291 */ element!(FupDataIdList, 3494, One, false, 0x0, NotRestricted, None),
    /* 3292 */ element!(FupDataIdLists, 501, ZeroOrOne, true, 0x0, NotRestricted, Some(2698)),
    /* 3293 */ element!(FurtherActionByteNeeds, 2314, One, false, 0x0, NotRestricted, None),
    /* 3294 */ element!(Gateway, 2315, One, false, 0x0, NotRestricted, None),
    /* 3295 */ element!(Gateways, 2357, ZeroOrOne, false, 0x1C0000, NotRestricted, Some(24)),
    /* 3296 */ element!(GeneralInactivityTime, 2229, ZeroOrOne, false, 0x0, NotRestricted, Some(3771)),
    /* 3297 */ element!(GeneralPurposeConnection, 2321, One, false, 0x0, NotRestricted, None),
    /* 3298 */ element!(GeneralPurposeIPdu, 2324, One, false, 0x0, NotRestricted, None),
    /* 3299 */ element!(GeneralPurposePdu, 2325, One, false, 0x0, NotRestricted, None),
    /* 3300 */ element!(GeneralPurposeTimerServiceNeeds, 2326, One, false, 0x0, NotRestricted, None),
    /* 3301 */ element!(GeneratedArtifacts, 2614, ZeroOrOne, false, 0x1C0000, ClassicPlatform, Some(2285)),
    /* 3302 */ element!(Generator, 5078, ZeroOrOne, false, 0x0, NotRestricted, Some(4234)),
    /* 3303 */ element!(GenericDiagnosticTransportInstantiation, 2327, One, false, 0x0, NotRestricted, None),
    /* 3304 */ element!(GenericEthernetFrame, 2328, One, false, 0x0, NotRestricted, None),
    /* 3305 */ element!(GenericMath, 3066, ZeroOrOne, false, 0x0, NotRestricted, Some(6062)),
    /* 3306 */ element!(GenericModuleInstantiation, 2330, One, false, 0x0, NotRestricted, None),
    /* 3307 */ element!(GenericTp, 2331, One, false, 0x0, NotRestricted, None),
    /* 3308 */ element!(GenericTpConnection, 2332, One, false, 0x0, NotRestricted, None),
    /* 3309 */ element!(Get, 1048, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3418)),
    /* 3310 */ element!(Get, 4249, ZeroOrOne, false, 0x0, NotRestricted, Some(3418)),
    /* 3311 */ element!(Get, 4250, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3419)),
    /* 3312 */ element!(Get, 4994, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3421)),
    /* 3313 */ element!(Gets, 1606, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5437)),
    /* 3314 */ element!(GetterCallRef, 4019, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(1911)),
    /* 3315 */ element!(GetterCallSignalRef, 4063, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(2101)),
    /* 3316 */ element!(GetterOperationRef, 2983, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(1832)),
    /* 3317 */ element!(GetterRef, 2136, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(2874)),
    /* 3318 */ element!(GetterRef, 3981, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(2876)),
    /* 3319 */ element!(GetterReturnRef, 4019, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(1912)),
    /* 3320 */ element!(GetterReturnSignalRef, 4063, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(2102)),
    /* 3321 */ element!(Gid, 3494, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(403)),
    /* 3322 */ element!(Gid, 4393, ZeroOrOne, false, 0x0, NotRestricted, Some(2574)),
    /* 3323 */ element!(GidInvalidityPattern, 3494, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(2497)),
    /* 3324 */ element!(GlobalElement, 3652, One, false, 0x0, NotRestricted, None),
    /* 3325 */ element!(GlobalElements, 3643, ZeroOrOne, false, 0x0, NotRestricted, Some(4064)),
    /* 3326 */ element!(GlobalInPackageRef, 3644, One, false, 0x0, NotRestricted, None),
    /* 3327 */ element!(GlobalInPackageRefs, 3645, ZeroOrOne, false, 0x0, NotRestricted, Some(5478)),
    /* 3328 */ element!(GlobalKayPropsRef, 2888, ZeroOrOne, false, 0x0, NotRestricted, Some(2022)),
    /* 3329 */ element!(GlobalResourceId, 3494, ZeroOrOne, false, 0x0, ClassicPlatform, Some(73)),
    /* 3330 */ element!(GlobalSupervision, 2333, One, false, 0x0, NotRestricted, None),
    /* 3331 */ element!(GlobalSupervisionEntity, 2336, One, false, 0x0, NotRestricted, None),
    /* 3332 */ element!(GlobalSupervisionEntitys, 3398, ZeroOrOne, false, 0xC00, AdaptivePlatform, Some(274)),
    /* 3333 */ element!(GlobalSupervisionNeeds, 2343, One, false, 0x0, NotRestricted, None),
    /* 3334 */ element!(GlobalSupervisions, 3399, ZeroOrOne, false, 0x1FF000, AdaptivePlatform, Some(275)),
    /* 3335 */ element!(GlobalTimeCanMaster, 2348, One, false, 0x0, NotRestricted, None),
    /* 3336 */ element!(GlobalTimeCanSlave, 2349, One, false, 0x0, NotRestricted, None),
    /* 3337 */ element!(GlobalTimeCorrectionProps, 2350, ZeroOrOne, false, 0x0, NotRestricted, Some(853)),
    /* 3338 */ element!(GlobalTimeDomain, 2354, One, false, 0x0, NotRestricted, None),
    /* 3339 */ element!(GlobalTimeDomainPropertys, 2358, ZeroOrOne, false, 0x1C0000, NotRestricted, Some(93)),
    /* 3340 */ element!(GlobalTimeDomainProps, 2359, ZeroOrOne, false, 0x0, NotRestricted, Some(92)),
    /* 3341 */ element!(GlobalTimeDomainRef, 2368, ZeroOrOne, false, 0x0, NotRestricted, None),
    /* 3342 */ element!(GlobalTimeDomainRefConditional, 2367, One, false, 0x0, NotRestricted, None),
    /* 3343 */ element!(GlobalTimeDomains, 1707, ZeroOrOne, false, 0x100000, ClassicPlatform, Some(2086)),
    /* 3344 */ element!(GlobalTimeDomains, 1707, ZeroOrOne, false, 0x100000, ClassicPlatform, Some(2087)),
    /* 3345 */ element!(GlobalTimeDomains, 1707, ZeroOrOne, false, 0x100000, NotRestricted, Some(2088)),
    /* 3346 */ element!(GlobalTimeEthMaster, 2372, One, false, 0x0, NotRestricted, None),
    /* 3347 */ element!(GlobalTimeEthSlave, 2373, One, false, 0x0, NotRestricted, None),
    /* 3348 */ element!(GlobalTimeFrMaster, 2374, One, false, 0x0, NotRestricted, None),
    /* 3349 */ element!(GlobalTimeFrSlave, 2375, One, false, 0x0, NotRestricted, None),
    /* 3350 */ element!(GlobalTimeGateway, 2376, One, false, 0x0, NotRestricted, None),
    /* 3351 */ element!(GlobalTimeMasters, 2360, ZeroOrOne, false, 0x1C0000, NotRestricted, Some(5733)),
    /* 3352 */ element!(GlobalTimePduRef, 2361, ZeroOrOne, false, 0x0, NotRestricted, Some(3203)),
    /* 3353 */ element!(GlobalTimePduTriggeringRef, 4302, ZeroOrOne, false, 0x0, ClassicPlatform, Some(3205)),
    /* 3354 */ element!(GlobalTimePortRole, 2382, ZeroOrOne, false, 0x0, NotRestricted, Some(3740)),
    /* 3355 */ element!(GlobalTimeProps, 2351, ZeroOrOne, false, 0x0, NotRestricted, Some(2485)),
    /* 3356 */ element!(GlobalTimeSubDomains, 2362, ZeroOrOne, false, 0x1C0000, NotRestricted, Some(208)),
    /* 3357 */ element!(GlobalTimeTxPeriod, 2229, ZeroOrOne, false, 0x0, NotRestricted, Some(3644)),
    /* 3358 */ element!(GovernanceRef, 1071, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3603)),
    /* 3359 */ element!(GrantRef, 593, One, false, 0x0, NotRestricted, None),
    /* 3360 */ element!(GrantRef, 2496, One, false, 0x0, NotRestricted, None),
    /* 3361 */ element!(GrantRefs, 594, ZeroOrOne, false, 0x100000, AdaptivePlatform, Some(5041)),
    /* 3362 */ element!(GrantRefs, 2497, ZeroOrOne, false, 0x1FC000, AdaptivePlatform, Some(5042)),
    /* 3363 */ element!(Graphic, 2385, ZeroOrOne, false, 0x0, NotRestricted, Some(2169)),
    /* 3364 */ element!(GroupId, 4393, ZeroOrOne, false, 0x0, NotRestricted, Some(4197)),
    /* 3365 */ element!(GroupIdentifier, 3076, ZeroOrOne, false, 0x0, NotRestricted, Some(4196)),
    /* 3366 */ element!(GroupNumber, 2231, ZeroOrOne, false, 0x0, NotRestricted, Some(5522)),
    /* 3367 */ element!(GroupedAliasEventRef, 1347, One, false, 0x0, NotRestricted, None),
    /* 3368 */ element!(GroupedAliasEventRefs, 1330, ZeroOrOne, false, 0x0, NotRestricted, Some(206)),
    /* 3369 */ element!(HandleDataStatus, 298, ZeroOrOne, false, 0x0, ClassicPlatform, Some(1255)),
    /* 3370 */ element!(HandleInvalid, 2387, ZeroOrOne, false, 0x0, NotRestricted, Some(3560)),
    /* 3371 */ element!(HandleInvalid, 2387, ZeroOrOne, false, 0x0, NotRestricted, Some(3606)),
    /* 3372 */ element!(HandleNeverReceived, 298, ZeroOrOne, false, 0x0, ClassicPlatform, Some(4262)),
    /* 3373 */ element!(HandleOutOfRange, 2388, ZeroOrOne, false, 0x0, ClassicPlatform, Some(3561)),
    /* 3374 */ element!(HandleOutOfRange, 2388, ZeroOrOne, false, 0x0, ClassicPlatform, Some(3564)),
    /* 3375 */ element!(HandleOutOfRange, 2388, ZeroOrOne, false, 0x0, NotRestricted, Some(3733)),
    /* 3376 */ element!(HandleOutOfRangeStatus, 2389, ZeroOrOne, false, 0x0, ClassicPlatform, Some(433)),
    /* 3377 */ element!(HandleTerminationAndRestart, 2390, ZeroOrOne, false, 0x0, NotRestricted, Some(3569)),
    /* 3378 */ element!(HandleTimeoutType, 2391, ZeroOrOne, false, 0x0, ClassicPlatform, Some(3570)),
    /* 3379 */ element!(HardwareConfiguration, 2392, ZeroOrOne, false, 0x0, ClassicPlatform, Some(430)),
    /* 3380 */ element!(HardwareConfiguration, 2392, ZeroOrOne, false, 0x0, NotRestricted, Some(431)),
    /* 3381 */ element!(HardwareConfiguration, 2392, ZeroOrOne, false, 0x0, NotRestricted, Some(1775)),
    /* 3382 */ element!(HardwareElementRef, 3958, One, false, 0x0, NotRestricted, None),
    /* 3383 */ element!(HardwareElementRefs, 1818, ZeroOrOne, false, 0x0, NotRestricted, Some(1793)),
    /* 3384 */ element!(HardwareElementRefs, 1818, ZeroOrOne, false, 0x0, NotRestricted, Some(1794)),
    /* 3385 */ element!(HardwarePlatform, 4393, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(4067)),
    /* 3386 */ element!(HardwareTestNeeds, 2393, One, false, 0x0, NotRestricted, None),
    /* 3387 */ element!(HasDynamicLength, 298, ZeroOrOne, false, 0x0, NotRestricted, Some(3802)),
    /* 3388 */ element!(HasGetter, 298, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3587)),
    /* 3389 */ element!(HasInternalState, 298, ZeroOrOne, false, 0x0, NotRestricted, Some(3805)),
    /* 3390 */ element!(HasNotifier, 298, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3582)),
    /* 3391 */ element!(HasSetter, 298, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3590)),
    /* 3392 */ element!(HeaderFile, 4393, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(382)),
    /* 3393 */ element!(HeaderFile, 4393, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(383)),
    /* 3394 */ element!(HeaderId, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(1214)),
    /* 3395 */ element!(HeaderId, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(1215)),
    /* 3396 */ element!(HeaderIdLongHeader, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(612)),
    /* 3397 */ element!(HeaderIdShortHeader, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(613)),
    /* 3398 */ element!(HeaderLength, 2642, ZeroOrOne, false, 0x0, NotRestricted, Some(628)),
    /* 3399 */ element!(HeaderType, 730, ZeroOrOne, false, 0x0, NotRestricted, Some(735)),
    /* 3400 */ element!(HeaderType, 2454, ZeroOrOne, false, 0x0, NotRestricted, Some(1144)),
    /* 3401 */ element!(HealingCycleCounterThreshold, 2231, ZeroOrOne, false, 0x0, NotRestricted, Some(3725)),
    /* 3402 */ element!(HealingCycleRef, 1191, ZeroOrOne, false, 0x0, NotRestricted, Some(2838)),
    /* 3403 */ element!(HealthChannelArgumentRef, 2853, One, false, 0x0, NotRestricted, None),
    /* 3404 */ element!(HealthChannelArgumentRef, 3365, One, false, 0x0, NotRestricted, None),
    /* 3405 */ element!(HealthChannelArgumentRefs, 2854, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(2089)),
    /* 3406 */ element!(HealthChannelArgumentRefs, 3366, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(2089)),
    /* 3407 */ element!(HealthChannelExternalMode, 2397, One, false, 0x0, NotRestricted, None),
    /* 3408 */ element!(HealthChannelExternalReportedStatus, 2399, One, false, 0x0, NotRestricted, None),
    /* 3409 */ element!(HealthChannelExternalStatus, 2401, One, false, 0x0, NotRestricted, None),
    /* 3410 */ element!(HealthChannelId, 3494, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(564)),
    /* 3411 */ element!(HealthChannelId, 3494, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(656)),
    /* 3412 */ element!(HealthChannelIref, 3596, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(2267)),
    /* 3413 */ element!(HealthChannelSupervision, 2405, One, false, 0x0, NotRestricted, None),
    /* 3414 */ element!(HealthChannels, 3400, ZeroOrOne, false, 0x1FFC00, AdaptivePlatform, Some(276)),
    /* 3415 */ element!(HeapUsages, 3681, ZeroOrOne, false, 0x1FFF80, ClassicPlatform, Some(334)),
    /* 3416 */ element!(History, 1041, ZeroOrOne, false, 0x0, NotRestricted, Some(550)),
    /* 3417 */ element!(HistoryKind, 1042, ZeroOrOne, false, 0x0, NotRestricted, Some(2337)),
    /* 3418 */ element!(HistoryOrderDepth, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(2337)),
    /* 3419 */ element!(HoldOverTime, 2229, ZeroOrOne, false, 0x0, NotRestricted, Some(3770)),
    /* 3420 */ element!(HopCount, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(2842)),
    /* 3421 */ element!(HopLimit, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(1066)),
    /* 3422 */ element!(HostId, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(1018)),
    /* 3423 */ element!(HostRef, 2377, ZeroOrOne, false, 0x0, ClassicPlatform, Some(2717)),
    /* 3424 */ element!(HostRef, 3704, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5120)),
    /* 3425 */ element!(HostSystemRef, 3607, ZeroOrOne, false, 0x0, NotRestricted, Some(2663)),
    /* 3426 */ element!(HttpAcceptEncoding, 2407, One, false, 0x0, NotRestricted, None),
    /* 3427 */ element!(HttpTp, 2409, One, false, 0x0, NotRestricted, None),
    /* 3428 */ element!(HwAttributeDef, 2410, One, false, 0x0, NotRestricted, None),
    /* 3429 */ element!(HwAttributeDefRef, 2414, ZeroOrOne, false, 0x0, NotRestricted, Some(3480)),
    /* 3430 */ element!(HwAttributeDefs, 2416, ZeroOrOne, false, 0x0, NotRestricted, Some(3283)),
    /* 3431 */ element!(HwAttributeLiteralDef, 2412, One, false, 0x0, NotRestricted, None),
    /* 3432 */ element!(HwAttributeLiterals, 2411, ZeroOrOne, false, 0x0, NotRestricted, Some(2805)),
    /* 3433 */ element!(HwAttributeValue, 2413, One, false, 0x0, NotRestricted, None),
    /* 3434 */ element!(HwAttributeValues, 2417, ZeroOrOne, false, 0x1C0000, NotRestricted, Some(3320)),
    /* 3435 */ element!(HwCategory, 2415, One, false, 0x0, NotRestricted, None),
    /* 3436 */ element!(HwCategoryRef, 2418, One, false, 0x0, NotRestricted, None),
    /* 3437 */ element!(HwCategoryRefs, 2419, ZeroOrOne, false, 0x0, NotRestricted, Some(1646)),
    /* 3438 */ element!(HwCommunicationControllerRef, 1841, ZeroOrOne, false, 0x0, NotRestricted, Some(1853)),
    /* 3439 */ element!(HwCommunicationPortRef, 2436, ZeroOrOne, false, 0x0, NotRestricted, Some(2090)),
    /* 3440 */ element!(HwElement, 2421, One, false, 0x0, NotRestricted, None),
    /* 3441 */ element!(HwElementConnections, 2425, ZeroOrOne, false, 0x1C0000, NotRestricted, Some(5418)),
    /* 3442 */ element!(HwElementConnector, 2422, One, false, 0x0, NotRestricted, None),
    /* 3443 */ element!(HwElementRef, 1841, ZeroOrOne, false, 0x0, NotRestricted, None),
    /* 3444 */ element!(HwElementRef, 1841, One, false, 0x0, NotRestricted, None),
    /* 3445 */ element!(HwElementRef, 1841, ZeroOrOne, false, 0x0, ClassicPlatform, Some(2457)),
    /* 3446 */ element!(HwElementRef, 1841, ZeroOrOne, false, 0x0, NotRestricted, Some(2458)),
    /* 3447 */ element!(HwElementRef, 1841, ZeroOrOne, false, 0x0, NotRestricted, Some(2897)),
    /* 3448 */ element!(HwElementRef, 2911, One, false, 0x0, NotRestricted, None),
    /* 3449 */ element!(HwElementRefConditional, 2428, One, false, 0x0, NotRestricted, None),
    /* 3450 */ element!(HwElementRefs, 2612, ZeroOrOne, false, 0x0, ClassicPlatform, Some(2898)),
    /* 3451 */ element!(HwElementRefs, 2612, ZeroOrOne, false, 0x0, NotRestricted, Some(3464)),
    /* 3452 */ element!(HwElementRefs, 2912, ZeroOrOne, false, 0x0, NotRestricted, Some(5179)),
    /* 3453 */ element!(HwPin, 2429, One, false, 0xC0000, NotRestricted, Some(3318)),
    /* 3454 */ element!(HwPinConnections, 2423, ZeroOrOne, false, 0x1C0000, NotRestricted, Some(5420)),
    /* 3455 */ element!(HwPinConnections, 2423, ZeroOrOne, false, 0x1C0000, NotRestricted, Some(5421)),
    /* 3456 */ element!(HwPinConnector, 2430, One, false, 0x0, NotRestricted, None),
    /* 3457 */ element!(HwPinGroup, 2434, One, false, 0x0, NotRestricted, None),
    /* 3458 */ element!(HwPinGroup, 2434, One, false, 0xC0000, NotRestricted, Some(3319)),
    /* 3459 */ element!(HwPinGroupConnections, 2424, ZeroOrOne, false, 0x1C0000, NotRestricted, Some(5419)),
    /* 3460 */ element!(HwPinGroupConnector, 2435, One, false, 0x0, NotRestricted, None),
    /* 3461 */ element!(HwPinGroupContent, 2438, ZeroOrOne, false, 0x0, NotRestricted, Some(3284)),
    /* 3462 */ element!(HwPinGroupRef, 2436, One, false, 0x0, NotRestricted, None),
    /* 3463 */ element!(HwPinGroupRefs, 2437, ZeroOrOne, false, 0x0, NotRestricted, Some(3465)),
    /* 3464 */ element!(HwPinGroups, 2426, ZeroOrOne, false, 0x1C0000, NotRestricted, Some(3300)),
    /* 3465 */ element!(HwPinRef, 2431, One, false, 0x0, NotRestricted, None),
    /* 3466 */ element!(HwPinRefs, 2432, ZeroOrOne, false, 0x0, NotRestricted, Some(3466)),
    /* 3467 */ element!(HwPortMapping, 2439, One, false, 0x0, NotRestricted, None),
    /* 3468 */ element!(HwPortMappings, 1842, ZeroOrOne, false, 0x0, ClassicPlatform, Some(2706)),
    /* 3469 */ element!(HwType, 2440, One, false, 0x0, NotRestricted, None),
    /* 3470 */ element!(HwTypeRef, 2420, ZeroOrOne, false, 0x0, NotRestricted, Some(3473)),
    /* 3471 */ element!(IPduIdentifierTcpRef, 3239, One, false, 0x0, NotRestricted, None),
    /* 3472 */ element!(IPduIdentifierTcpRefs, 3240, ZeroOrOne, false, 0x0, NotRestricted, Some(1711)),
    /* 3473 */ element!(IPduIdentifierUdpRef, 3239, One, false, 0x0, NotRestricted, None),
    /* 3474 */ element!(IPduIdentifierUdpRefs, 3241, ZeroOrOne, false, 0x0, NotRestricted, Some(1712)),
    /* 3475 */ element!(IPduIdentifiers, 4130, ZeroOrOne, false, 0x180000, NotRestricted, Some(278)),
    /* 3476 */ element!(IPduIdentifiers, 4380, ZeroOrOne, false, 0x1C0000, NotRestricted, Some(165)),
    /* 3477 */ element!(IPduMapping, 2441, One, false, 0x0, NotRestricted, None),
    /* 3478 */ element!(IPduMappings, 2318, ZeroOrOne, false, 0x1C0000, NotRestricted, Some(1165)),
    /* 3479 */ element!(IPduPort, 2443, One, false, 0x0, NotRestricted, None),
    /* 3480 */ element!(IPduPortRef, 2447, One, false, 0x0, NotRestricted, None),
    /* 3481 */ element!(IPduPortRef, 3249, One, false, 0x0, NotRestricted, None),
    /* 3482 */ element!(IPduPortRefs, 2448, ZeroOrOne, false, 0x0, NotRestricted, Some(2252)),
    /* 3483 */ element!(IPduPortRefs, 3250, ZeroOrOne, false, 0x0, NotRestricted, Some(2252)),
    /* 3484 */ element!(IPduRef, 2449, ZeroOrOne, false, 0x0, NotRestricted, Some(2108)),
    /* 3485 */ element!(IPduRef, 3251, ZeroOrOne, false, 0x0, NotRestricted, Some(2122)),
    /* 3486 */ element!(IPduRef, 4378, ZeroOrOne, false, 0x0, NotRestricted, Some(1837)),
    /* 3487 */ element!(IPduRef, 4699, ZeroOrOne, false, 0x0, NotRestricted, Some(3112)),
    /* 3488 */ element!(IPduSignalProcessing, 2444, ZeroOrOne, false, 0x0, NotRestricted, Some(850)),
    /* 3489 */ element!(IPduTiming, 2445, One, false, 0x0, NotRestricted, None),
    /* 3490 */ element!(IPduTimingSpecifications, 2473, ZeroOrOne, false, 0x1C0000, NotRestricted, Some(5899)),
    /* 3491 */ element!(IPduTriggering, 2446, One, false, 0x0, NotRestricted, None),
    /* 3492 */ element!(IPduTriggeringRef, 2452, ZeroOrOne, false, 0x0, NotRestricted, None),
    /* 3493 */ element!(IPduTriggeringRefConditional, 2451, One, false, 0x0, NotRestricted, None),
    /* 3494 */ element!(IPduTriggerings, 2283, ZeroOrOne, false, 0x0, NotRestricted, Some(4907)),
    /* 3495 */ element!(IPduTriggerings, 3381, ZeroOrOne, false, 0x1, NotRestricted, Some(3173)),
    /* 3496 */ element!(IPdus, 3258, ZeroOrOne, false, 0x1C0000, NotRestricted, Some(4907)),
    /* 3497 */ element!(IPv6ExtHeaderFilterList, 2458, One, false, 0x0, NotRestricted, None),
    /* 3498 */ element!(IPv6ExtHeaderFilterSet, 2460, One, false, 0x0, NotRestricted, None),
    /* 3499 */ element!(ISignal, 2462, One, false, 0x0, NotRestricted, None),
    /* 3500 */ element!(ISignalGroup, 2464, One, false, 0x0, NotRestricted, None),
    /* 3501 */ element!(ISignalGroupRef, 2487, ZeroOrOne, false, 0x0, NotRestricted, Some(1962)),
    /* 3502 */ element!(ISignalGroupRef, 2490, ZeroOrOne, false, 0x0, NotRestricted, Some(2097)),
    /* 3503 */ element!(ISignalGroupRef, 2490, ZeroOrOne, false, 0x0, NotRestricted, Some(5261)),
    /* 3504 */ element!(ISignalIPdu, 2468, One, false, 0x0, NotRestricted, None),
    /* 3505 */ element!(ISignalIPduGroup, 2469, One, false, 0x0, NotRestricted, None),
    /* 3506 */ element!(ISignalIPduRef, 4378, ZeroOrOne, false, 0x0, NotRestricted, None),
    /* 3507 */ element!(ISignalIPduRef, 4378, ZeroOrOne, false, 0x0, NotRestricted, Some(2098)),
    /* 3508 */ element!(ISignalIPduRefConditional, 2476, One, false, 0x0, NotRestricted, None),
    /* 3509 */ element!(ISignalIPdus, 2471, ZeroOrOne, false, 0x1C0000, NotRestricted, Some(4907)),
    /* 3510 */ element!(ISignalInIPduRef, 4898, ZeroOrOne, false, 0x0, NotRestricted, Some(1941)),
    /* 3511 */ element!(ISignalMapping, 2478, One, false, 0x0, NotRestricted, None),
    /* 3512 */ element!(ISignalPort, 2480, One, false, 0x0, NotRestricted, None),
    /* 3513 */ element!(ISignalPortRef, 2491, One, false, 0x0, NotRestricted, None),
    /* 3514 */ element!(ISignalPortRefs, 2492, ZeroOrOne, false, 0x0, NotRestricted, Some(2253)),
    /* 3515 */ element!(ISignalProps, 2482, ZeroOrOne, false, 0x1FFFFC, NotRestricted, Some(90)),
    /* 3516 */ element!(ISignalRef, 1016, ZeroOrOne, false, 0x0, NotRestricted, Some(2096)),
    /* 3517 */ element!(ISignalRef, 2465, One, false, 0x0, NotRestricted, None),
    /* 3518 */ element!(ISignalRef, 2465, ZeroOrOne, false, 0x0, NotRestricted, Some(1856)),
    /* 3519 */ element!(ISignalRef, 2465, ZeroOrOne, false, 0x0, NotRestricted, Some(3112)),
    /* 3520 */ element!(ISignalRef, 2465, ZeroOrOne, false, 0x0, NotRestricted, Some(5260)),
    /* 3521 */ element!(ISignalRefs, 2466, ZeroOrOne, false, 0x0, NotRestricted, Some(1938)),
    /* 3522 */ element!(ISignalToIPduMapping, 2486, One, false, 0x0, NotRestricted, None),
    /* 3523 */ element!(ISignalToIPduMappings, 3122, ZeroOrOne, false, 0x0, NotRestricted, Some(4869)),
    /* 3524 */ element!(ISignalToPduMappings, 3122, ZeroOrOne, false, 0x1C0000, NotRestricted, Some(798)),
    /* 3525 */ element!(ISignalTriggering, 2489, One, false, 0x0, NotRestricted, None),
    /* 3526 */ element!(ISignalTriggeringRef, 2479, ZeroOrOne, false, 0x0, NotRestricted, None),
    /* 3527 */ element!(ISignalTriggeringRef, 4063, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(2100)),
    /* 3528 */ element!(ISignalTriggeringRef, 4066, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(1964)),
    /* 3529 */ element!(ISignalTriggeringRef, 4073, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(2107)),
    /* 3530 */ element!(ISignalTriggeringRefConditional, 2493, One, false, 0x0, NotRestricted, None),
    /* 3531 */ element!(ISignalTriggerings, 2450, ZeroOrOne, false, 0x0, NotRestricted, Some(4907)),
    /* 3532 */ element!(ISignalTriggerings, 3252, ZeroOrOne, false, 0x1C0000, NotRestricted, Some(4907)),
    /* 3533 */ element!(ISignalTriggerings, 3382, ZeroOrOne, false, 0x1FFFF8, ClassicPlatform, Some(1638)),
    /* 3534 */ element!(ISignalTriggerings, 3382, ZeroOrOne, false, 0x1FFFFF, ClassicPlatform, Some(1638)),
    /* 3535 */ element!(ISignalType, 2494, ZeroOrOne, false, 0x0, NotRestricted, Some(3819)),
    /* 3536 */ element!(IamModuleInstantiation, 2495, One, false, 0x0, NotRestricted, None),
    /* 3537 */ element!(IamRelevantTlsSecureComPropsRef, 4829, One, false, 0x0, NotRestricted, None),
    /* 3538 */ element!(IamRelevantTlsSecureComPropsRefs, 4830, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(4948)),
    /* 3539 */ element!(IcmpRule, 2498, ZeroOrOne, false, 0x0, NotRestricted, Some(372)),
    /* 3540 */ element!(IcmpV4Props, 4661, ZeroOrOne, false, 0x0, NotRestricted, Some(1149)),
    /* 3541 */ element!(IcmpV6Props, 4662, ZeroOrOne, false, 0x0, NotRestricted, Some(1150)),
    /* 3542 */ element!(IcvFreshnessValueId, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(3637)),
    /* 3543 */ element!(IcvSecureComPropss, 2363, ZeroOrOne, false, 0x100000, NotRestricted, Some(1875)),
    /* 3544 */ element!(IcvSecured, 2380, ZeroOrOne, false, 0x0, ClassicPlatform, Some(733)),
    /* 3545 */ element!(IcvVerification, 2381, ZeroOrOne, false, 0x0, ClassicPlatform, Some(505)),
    /* 3546 */ element!(Id, 2231, ZeroOrOne, false, 0x0, NotRestricted, Some(4806)),
    /* 3547 */ element!(Id, 2231, ZeroOrOne, false, 0x0, NotRestricted, Some(4808)),
    /* 3548 */ element!(Id, 2231, ZeroOrOne, false, 0x0, NotRestricted, Some(5654)),
    /* 3549 */ element!(Id, 3494, ZeroOrOne, false, 0x0, ClassicPlatform, Some(210)),
    /* 3550 */ element!(Id, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(1151)),
    /* 3551 */ element!(Id, 3494, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3729)),
    /* 3552 */ element!(Id, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(4129)),
    /* 3553 */ element!(Id, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(4155)),
    /* 3554 */ element!(Id, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(4157)),
    /* 3555 */ element!(Id, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(4168)),
    /* 3556 */ element!(Id, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(4807)),
    /* 3557 */ element!(Id, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(4809)),
    /* 3558 */ element!(Id, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(5623)),
    /* 3559 */ element!(Id, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(5655)),
    /* 3560 */ element!(Ident, 428, ZeroOrOne, false, 0x0, NotRestricted, Some(3216)),
    /* 3561 */ element!(Ident, 977, ZeroOrOne, false, 0x0, NotRestricted, Some(3214)),
    /* 3562 */ element!(Ident, 1443, ZeroOrOne, false, 0x0, NotRestricted, Some(2781)),
    /* 3563 */ element!(Ident, 2126, ZeroOrOne, false, 0x0, NotRestricted, Some(2782)),
    /* 3564 */ element!(Ident, 2813, ZeroOrOne, false, 0x0, ClassicPlatform, Some(3217)),
    /* 3565 */ element!(Ident, 2990, ZeroOrOne, false, 0x0, NotRestricted, Some(2783)),
    /* 3566 */ element!(Ident, 3418, ZeroOrOne, false, 0x0, NotRestricted, Some(3218)),
    /* 3567 */ element!(Ident, 4856, ZeroOrOne, false, 0x0, NotRestricted, Some(3219)),
    /* 3568 */ element!(Ident, 4856, ZeroOrOne, false, 0x0, NotRestricted, Some(3220)),
    /* 3569 */ element!(Ident, 4869, ZeroOrOne, false, 0x0, NotRestricted, Some(3215)),
    /* 3570 */ element!(IdenticalMapping, 298, ZeroOrOne, false, 0x0, NotRestricted, Some(1211)),
    /* 3571 */ element!(IdentifiableRef, 601, ZeroOrOne, false, 0x0, NotRestricted, Some(167)),
    /* 3572 */ element!(IdentifiableRef, 601, ZeroOrOne, false, 0x0, NotRestricted, Some(4728)),
    /* 3573 */ element!(Identifier, 2642, ZeroOrOne, false, 0x0, NotRestricted, Some(4005)),
    /* 3574 */ element!(Identifier, 2642, ZeroOrOne, false, 0x0, ClassicPlatform, Some(5900)),
    /* 3575 */ element!(Identifier, 4393, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(4167)),
    /* 3576 */ element!(Identifier, 4393, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5622)),
    /* 3577 */ element!(IdentitiyNumber, 2642, ZeroOrOne, false, 0x0, ClassicPlatform, Some(1191)),
    /* 3578 */ element!(Identity, 4393, ZeroOrOne, false, 0x0, NotRestricted, Some(3642)),
    /* 3579 */ element!(IdentityCertificateAuthorityRef, 1072, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(232)),
    /* 3580 */ element!(IdentityRef, 1072, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3674)),
    /* 3581 */ element!(IdleSlope, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(616)),
    /* 3582 */ element!(IdleSlope, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(617)),
    /* 3583 */ element!(IdsCommonElementRef, 2502, ZeroOrOne, false, 0x0, NotRestricted, None),
    /* 3584 */ element!(IdsCommonElementRefConditional, 2501, One, false, 0x0, NotRestricted, None),
    /* 3585 */ element!(IdsDesign, 2503, One, false, 0x0, NotRestricted, None),
    /* 3586 */ element!(IdsMgrCustomTimestampNeeds, 2505, One, false, 0x0, NotRestricted, None),
    /* 3587 */ element!(IdsMgrNeeds, 2506, One, false, 0x0, NotRestricted, None),
    /* 3588 */ element!(IdsPlatformInstantiationRef, 2514, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5449)),
    /* 3589 */ element!(IdsPlatformInstantiationRef, 2536, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5449)),
    /* 3590 */ element!(IdsTimeBaseRef, 2507, One, false, 0x0, NotRestricted, None),
    /* 3591 */ element!(IdsTimeBaseRefs, 2508, ZeroOrOne, false, 0x100000, AdaptivePlatform, Some(5085)),
    /* 3592 */ element!(IdsmContextProviderInterface, 2512, One, false, 0x0, NotRestricted, None),
    /* 3593 */ element!(IdsmContextProviderMapping, 2513, One, false, 0x0, NotRestricted, None),
    /* 3594 */ element!(IdsmInstance, 2515, One, false, 0x0, NotRestricted, None),
    /* 3595 */ element!(IdsmInstanceId, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(4025)),
    /* 3596 */ element!(IdsmInstanceRef, 2521, ZeroOrOne, false, 0x0, NotRestricted, None),
    /* 3597 */ element!(IdsmInstanceRefConditional, 2520, One, false, 0x0, NotRestricted, None),
    /* 3598 */ element!(IdsmInstances, 3908, ZeroOrOne, false, 0x1C0000, NotRestricted, Some(4943)),
    /* 3599 */ element!(IdsmModuleInstantiation, 2523, One, false, 0x0, NotRestricted, None),
    /* 3600 */ element!(IdsmModuleInstantiationRef, 2518, ZeroOrOne, false, 0x1F0000, AdaptivePlatform, Some(5133)),
    /* 3601 */ element!(IdsmProperties, 2526, One, false, 0x0, NotRestricted, None),
    /* 3602 */ element!(IdsmQualifiedEventReceiverInterface, 2529, One, false, 0x0, NotRestricted, None),
    /* 3603 */ element!(IdsmQualifiedEventReceiverMapping, 2530, One, false, 0x0, NotRestricted, None),
    /* 3604 */ element!(IdsmRateLimitation, 2531, One, false, 0x0, NotRestricted, None),
    /* 3605 */ element!(IdsmRateLimitationRef, 2533, ZeroOrOne, false, 0x0, NotRestricted, None),
    /* 3606 */ element!(IdsmRateLimitationRefConditional, 2532, One, false, 0x0, NotRestricted, None),
    /* 3607 */ element!(IdsmReportingModeProviderInterface, 2534, One, false, 0x0, NotRestricted, None),
    /* 3608 */ element!(IdsmReportingModeProviderMapping, 2535, One, false, 0x0, NotRestricted, None),
    /* 3609 */ element!(IdsmTimestampProviderInterface, 2541, One, false, 0x0, NotRestricted, None),
    /* 3610 */ element!(IdsmTimestampProviderMapping, 2542, One, false, 0x0, NotRestricted, None),
    /* 3611 */ element!(IdsmTrafficLimitation, 2543, One, false, 0x0, NotRestricted, None),
    /* 3612 */ element!(IdsmTrafficLimitationRef, 2545, ZeroOrOne, false, 0x0, NotRestricted, None),
    /* 3613 */ element!(IdsmTrafficLimitationRefConditional, 2544, One, false, 0x0, NotRestricted, None),
    /* 3614 */ element!(Ie, 2625, One, false, 0x0, NotRestricted, Some(4729)),
    /* 3615 */ element!(IeeE1722TpConnectionRef, 2575, ZeroOrOne, false, 0x0, NotRestricted, None),
    /* 3616 */ element!(Ieee1722AcfBusPartRawDataStreamConsumerMapping, 2546, One, false, 0x0, NotRestricted, None),
    /* 3617 */ element!(Ieee1722AcfBusRawDataStreamConsumerMapping, 2549, One, false, 0x0, NotRestricted, None),
    /* 3618 */ element!(Ieee1722RawDataStreamConsumerInterface, 2552, One, false, 0x0, NotRestricted, None),
    /* 3619 */ element!(Ieee1722RawDataStreamConsumerMapping, 2553, One, false, 0x0, NotRestricted, None),
    /* 3620 */ element!(Ieee1722RawDataStreamProducerInterface, 2555, One, false, 0x0, NotRestricted, None),
    /* 3621 */ element!(Ieee1722RawDataStreamProducerMapping, 2556, One, false, 0x0, NotRestricted, None),
    /* 3622 */ element!(Ieee1722StreamRef, 2554, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(2091)),
    /* 3623 */ element!(Ieee1722Tp, 2557, One, false, 0x0, NotRestricted, None),
    /* 3624 */ element!(Ieee1722TpAafConnection, 2559, One, false, 0x0, NotRestricted, None),
    /* 3625 */ element!(Ieee1722TpAcfCan, 2563, One, false, 0x0, NotRestricted, None),
    /* 3626 */ element!(Ieee1722TpAcfCanPart, 2565, One, false, 0x0, NotRestricted, None),
    /* 3627 */ element!(Ieee1722TpAcfConnection, 2566, One, false, 0x0, NotRestricted, None),
    /* 3628 */ element!(Ieee1722TpAcfLin, 2568, One, false, 0x0, NotRestricted, None),
    /* 3629 */ element!(Ieee1722TpAcfLinPart, 2569, One, false, 0x0, NotRestricted, None),
    /* 3630 */ element!(Ieee1722TpConfig, 2571, One, false, 0x0, NotRestricted, None),
    /* 3631 */ element!(Ieee1722TpConnectionRefConditional, 2574, One, false, 0x0, NotRestricted, None),
    /* 3632 */ element!(Ieee1722TpCrfConnection, 2576, One, false, 0x0, NotRestricted, None),
    /* 3633 */ element!(Ieee1722TpEthernetFrame, 2579, One, false, 0x0, NotRestricted, None),
    /* 3634 */ element!(Ieee1722TpIidcConnection, 2580, One, false, 0x0, NotRestricted, None),
    /* 3635 */ element!(Ieee1722TpRule, 4385, ZeroOrOne, false, 0x0, ClassicPlatform, Some(803)),
    /* 3636 */ element!(Ieee1722TpRvfConnection, 2582, One, false, 0x0, NotRestricted, None),
    /* 3637 */ element!(IgnoreAfterTx, 2642, ZeroOrOne, false, 0x0, NotRestricted, Some(930)),
    /* 3638 */ element!(IgnoreOrderAllowed, 298, ZeroOrOne, false, 0x0, ClassicPlatform, Some(436)),
    /* 3639 */ element!(IidcChannel, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(825)),
    /* 3640 */ element!(IidcDataBlockSize, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(826)),
    /* 3641 */ element!(IidcFractionNumber, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(827)),
    /* 3642 */ element!(IidcSourcePacketHeader, 298, ZeroOrOne, false, 0x0, NotRestricted, Some(560)),
    /* 3643 */ element!(IidcStreamFormat, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(828)),
    /* 3644 */ element!(IidcSy, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(829)),
    /* 3645 */ element!(IidcTCode, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(831)),
    /* 3646 */ element!(IidcTag, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(830)),
    /* 3647 */ element!(IkeAuthenticationMethod, 2586, ZeroOrOne, false, 0x0, NotRestricted, Some(3634)),
    /* 3648 */ element!(IkeCipherSuiteName, 4393, ZeroOrOne, false, 0x0, NotRestricted, Some(1156)),
    /* 3649 */ element!(IkeOverTime, 2229, ZeroOrOne, false, 0x0, NotRestricted, Some(3850)),
    /* 3650 */ element!(IkeRandTime, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(3619)),
    /* 3651 */ element!(IkeReauthTime, 2229, ZeroOrOne, false, 0x0, NotRestricted, Some(3650)),
    /* 3652 */ element!(IkeRekeyTime, 2229, ZeroOrOne, false, 0x0, NotRestricted, Some(3651)),
    /* 3653 */ element!(ImmediateNvDataStorage, 298, ZeroOrOne, false, 0x0, NotRestricted, Some(234)),
    /* 3654 */ element!(ImmediateResumeTime, 2229, ZeroOrOne, false, 0x0, NotRestricted, Some(646)),
    /* 3655 */ element!(ImplConstantRef, 701, ZeroOrOne, false, 0x0, NotRestricted, Some(22)),
    /* 3656 */ element!(ImplInitValue, 2477, ZeroOrOne, false, 0x0, NotRestricted, Some(4795)),
    /* 3657 */ element!(ImplementationArrayElementRef, 2629, ZeroOrOne, false, 0x0, NotRestricted, Some(1965)),
    /* 3658 */ element!(ImplementationConfigClasses, 1860, ZeroOrOne, false, 0x0, ClassicPlatform, Some(2470)),
    /* 3659 */ element!(ImplementationConfigVariant, 1871, ZeroOrOne, false, 0x0, ClassicPlatform, Some(2543)),
    /* 3660 */ element!(ImplementationDataType, 2590, One, false, 0x0, NotRestricted, None),
    /* 3661 */ element!(ImplementationDataTypeElement, 215, ZeroOrOne, false, 0x0, NotRestricted, Some(5703)),
    /* 3662 */ element!(ImplementationDataTypeElement, 2591, One, false, 0x0, NotRestricted, None),
    /* 3663 */ element!(ImplementationDataTypeElementExtension, 2592, One, false, 0x0, NotRestricted, None),
    /* 3664 */ element!(ImplementationDataTypeElementInAutosarDataPrototypeRef, 2595, One, false, 0x0, NotRestricted, None),
    /* 3665 */ element!(ImplementationDataTypeElementInPortInterfaceRef, 2597, One, false, 0x0, NotRestricted, None),
    /* 3666 */ element!(ImplementationDataTypeElementInSystemRef, 2601, One, false, 0x0, NotRestricted, None),
    /* 3667 */ element!(ImplementationDataTypeElementRef, 2594, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5451)),
    /* 3668 */ element!(ImplementationDataTypeExtension, 2606, One, false, 0x0, NotRestricted, None),
    /* 3669 */ element!(ImplementationDataTypeRef, 997, ZeroOrOne, false, 0x0, NotRestricted, Some(3469)),
    /* 3670 */ element!(ImplementationDataTypeRef, 997, ZeroOrOne, false, 0x0, NotRestricted, Some(4777)),
    /* 3671 */ element!(ImplementationDataTypeRef, 997, ZeroOrOne, false, 0x0, NotRestricted, Some(4778)),
    /* 3672 */ element!(ImplementationDataTypeRef, 2607, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5450)),
    /* 3673 */ element!(ImplementationDataTypeRef, 5030, ZeroOrOne, false, 0x0, NotRestricted, Some(3488)),
    /* 3674 */ element!(ImplementationDataTypeSubElementRef, 2609, One, false, 0x0, NotRestricted, None),
    /* 3675 */ element!(ImplementationPropss, 2104, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3270)),
    /* 3676 */ element!(ImplementationRecordElementRef, 2629, ZeroOrOne, false, 0x0, NotRestricted, Some(1857)),
    /* 3677 */ element!(ImplementationRecordElementRef, 2629, ZeroOrOne, false, 0x0, NotRestricted, Some(1966)),
    /* 3678 */ element!(ImplementationRef, 311, One, false, 0x0, NotRestricted, None),
    /* 3679 */ element!(ImplementationRefs, 312, ZeroOrOne, false, 0x0, ClassicPlatform, Some(4311)),
    /* 3680 */ element!(ImplementedEntryRef, 404, ZeroOrOne, false, 0x0, ClassicPlatform, Some(2854)),
    /* 3681 */ element!(ImplementedEntrys, 393, ZeroOrOne, false, 0x1FFF00, ClassicPlatform, Some(2454)),
    /* 3682 */ element!(ImplementedInRef, 3873, ZeroOrOne, false, 0x0, NotRestricted, Some(1676)),
    /* 3683 */ element!(ImplementsLegacyStringSerialization, 298, ZeroOrOne, false, 0x0, NotRestricted, Some(3952)),
    /* 3684 */ element!(ImplementsLegacyStringSerialization, 298, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3953)),
    /* 3685 */ element!(ImplementsSomeipStringHandling, 298, ZeroOrOne, false, 0x0, NotRestricted, Some(3967)),
    /* 3686 */ element!(ImplicitDataAccessIref, 5019, One, false, 0x0, NotRestricted, None),
    /* 3687 */ element!(ImplicitDataAccessIrefs, 934, ZeroOrOne, false, 0x1C0000, NotRestricted, Some(5342)),
    /* 3688 */ element!(ImplicitInterRunnableVariables, 3156, ZeroOrOne, false, 0x1FFF80, NotRestricted, Some(1270)),
    /* 3689 */ element!(ImpliedOperationRef, 32, One, false, 0x0, NotRestricted, None),
    /* 3690 */ element!(ImpliedOperationRefs, 27, ZeroOrOne, false, 0x0, NotRestricted, Some(4684)),
    /* 3691 */ element!(Importance, 4393, ZeroOrOne, false, 0x0, NotRestricted, Some(3452)),
    /* 3692 */ element!(ImpositionTime, 2616, One, false, 0x0, NotRestricted, None),
    /* 3693 */ element!(ImpositionTimeDefinitionGroup, 2617, One, false, 0x0, NotRestricted, None),
    /* 3694 */ element!(ImpositionTimes, 2618, ZeroOrOne, false, 0x0, NotRestricted, Some(867)),
    /* 3695 */ element!(InMeasurementSet, 2935, ZeroOrOne, false, 0x1FFFC0, NotRestricted, Some(2280)),
    /* 3696 */ element!(InPlace, 298, ZeroOrOne, false, 0x0, NotRestricted, Some(1231)),
    /* 3697 */ element!(InScope, 298, ZeroOrOne, false, 0x0, NotRestricted, Some(6024)),
    /* 3698 */ element!(IncludeRef, 2265, One, false, 0x0, NotRestricted, None),
    /* 3699 */ element!(IncludeRefs, 2266, ZeroOrOne, false, 0x0, NotRestricted, Some(943)),
    /* 3700 */ element!(IncludedDataTypeSet, 2619, One, false, 0x0, NotRestricted, None),
    /* 3701 */ element!(IncludedDataTypeSets, 353, ZeroOrOne, false, 0x1FFF80, NotRestricted, Some(2902)),
    /* 3702 */ element!(IncludedDataTypeSets, 4525, ZeroOrOne, false, 0x1FFF80, NotRestricted, Some(2903)),
    /* 3703 */ element!(IncludedLibraryRef, 2120, One, false, 0x0, NotRestricted, None),
    /* 3704 */ element!(IncludedLibraryRefs, 2121, ZeroOrOne, false, 0x0, NotRestricted, Some(1256)),
    /* 3705 */ element!(IncludedModeDeclarationGroupSet, 2621, One, false, 0x0, NotRestricted, None),
    /* 3706 */ element!(IncludedModeDeclarationGroupSets, 354, ZeroOrOne, false, 0x1E0000, NotRestricted, Some(3403)),
    /* 3707 */ element!(IncludedModeDeclarationGroupSets, 4526, ZeroOrOne, false, 0x1FFF80, NotRestricted, Some(3403)),
    /* 3708 */ element!(IncludedVariantRef, 3506, One, false, 0x0, NotRestricted, None),
    /* 3709 */ element!(IncludedVariantRefs, 3507, ZeroOrOne, false, 0x0, NotRestricted, Some(2793)),
    /* 3710 */ element!(IndentSample, 2624, ZeroOrOne, false, 0x0, NotRestricted, Some(4722)),
    /* 3711 */ element!(Index, 2642, ZeroOrOne, false, 0x0, ClassicPlatform, Some(1180)),
    /* 3712 */ element!(Index, 2642, ZeroOrOne, false, 0x0, NotRestricted, Some(1744)),
    /* 3713 */ element!(Index, 2642, ZeroOrOne, false, 0x0, ClassicPlatform, Some(4023)),
    /* 3714 */ element!(Index, 2642, ZeroOrOne, false, 0x0, ClassicPlatform, Some(4024)),
    /* 3715 */ element!(Index, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(659)),
    /* 3716 */ element!(Index, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(4144)),
    /* 3717 */ element!(Index, 3494, ZeroOrOne, false, 0x0, ClassicPlatform, Some(5951)),
    /* 3718 */ element!(IndexDataTypeRef, 157, ZeroOrOne, false, 0x0, NotRestricted, Some(4925)),
    /* 3719 */ element!(IndexedArrayElement, 2626, ZeroOrOne, false, 0x0, NotRestricted, Some(1985)),
    /* 3720 */ element!(IndexedArrayElement, 2626, ZeroOrOne, false, 0x0, NotRestricted, Some(1986)),
    /* 3721 */ element!(Indications, 187, ZeroOrOne, false, 0x1C0000, NotRestricted, Some(5562)),
    /* 3722 */ element!(Indications, 665, ZeroOrOne, false, 0x0, NotRestricted, Some(3174)),
    /* 3723 */ element!(IndicatorFailureCycleCounterThreshold, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(3723)),
    /* 3724 */ element!(IndicatorRef, 1192, ZeroOrOne, false, 0x0, NotRestricted, Some(2244)),
    /* 3725 */ element!(IndicatorRef, 1359, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(2067)),
    /* 3726 */ element!(IndicatorStatusNeeds, 2630, One, false, 0x0, NotRestricted, None),
    /* 3727 */ element!(IndirectApi, 298, ZeroOrOne, false, 0x0, NotRestricted, Some(1227)),
    /* 3728 */ element!(IndustryGroup, 2642, ZeroOrOne, false, 0x0, ClassicPlatform, Some(1316)),
    /* 3729 */ element!(InfoType, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(2720)),
    /* 3730 */ element!(InfoTypeRef, 1514, ZeroOrOne, false, 0x0, NotRestricted, Some(5626)),
    /* 3731 */ element!(InformalFormula, 2987, ZeroOrOne, false, 0x0, ClassicPlatform, Some(1317)),
    /* 3732 */ element!(InformalFormula, 2987, ZeroOrOne, false, 0x0, ClassicPlatform, Some(1318)),
    /* 3733 */ element!(InfrastructureServices, 2631, ZeroOrOne, false, 0x0, ClassicPlatform, Some(647)),
    /* 3734 */ element!(IngressPortRef, 4578, One, false, 0x0, NotRestricted, None),
    /* 3735 */ element!(IngressPortRefs, 4580, ZeroOrOne, false, 0x0, ClassicPlatform, Some(2046)),
    /* 3736 */ element!(IngressPriority, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(1511)),
    /* 3737 */ element!(IngressVlanId, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(1293)),
    /* 3738 */ element!(InhibitSources, 1344, ZeroOrOne, false, 0x0, NotRestricted, Some(5340)),
    /* 3739 */ element!(InhibitingFidRef, 3173, ZeroOrOne, false, 0x0, NotRestricted, Some(5671)),
    /* 3740 */ element!(InhibitingSecondaryFidRef, 3174, One, false, 0x0, NotRestricted, None),
    /* 3741 */ element!(InhibitingSecondaryFidRefs, 1299, ZeroOrOne, false, 0x0, NotRestricted, Some(5723)),
    /* 3742 */ element!(InhibitionMask, 1367, ZeroOrOne, false, 0x0, NotRestricted, Some(5760)),
    /* 3743 */ element!(InhibitionSourceRef, 1366, ZeroOrOne, false, 0x0, NotRestricted, Some(5697)),
    /* 3744 */ element!(InitEvent, 2632, One, false, 0x0, NotRestricted, None),
    /* 3745 */ element!(InitResource, 1102, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5573)),
    /* 3746 */ element!(InitValue, 298, ZeroOrOne, false, 0x0, NotRestricted, Some(620)),
    /* 3747 */ element!(InitValue, 2134, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(2474)),
    /* 3748 */ element!(InitValue, 2138, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(1322)),
    /* 3749 */ element!(InitValue, 2477, ZeroOrOne, false, 0x0, NotRestricted, Some(1323)),
    /* 3750 */ element!(InitValue, 2477, ZeroOrOne, false, 0x0, ClassicPlatform, Some(1324)),
    /* 3751 */ element!(InitValue, 2477, ZeroOrOne, false, 0x0, NotRestricted, Some(1663)),
    /* 3752 */ element!(InitValue, 2477, ZeroOrOne, false, 0x0, NotRestricted, Some(2475)),
    /* 3753 */ element!(InitValue, 2477, ZeroOrOne, false, 0x0, NotRestricted, Some(2477)),
    /* 3754 */ element!(InitValue, 2477, ZeroOrOne, false, 0x0, NotRestricted, Some(2905)),
    /* 3755 */ element!(InitValue, 2477, ZeroOrOne, false, 0x0, NotRestricted, Some(2906)),
    /* 3756 */ element!(InitValue, 3270, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3392)),
    /* 3757 */ element!(InitValue, 3310, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3324)),
    /* 3758 */ element!(InitValue, 3310, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3393)),
    /* 3759 */ element!(InitValue, 4393, ZeroOrOne, false, 0x0, NotRestricted, Some(2476)),
    /* 3760 */ element!(InitValue, 5078, ZeroOrOne, false, 0x0, NotRestricted, Some(2476)),
    /* 3761 */ element!(InitValues, 3439, ZeroOrOne, false, 0x0, NotRestricted, Some(5800)),
    /* 3762 */ element!(InitValues, 3474, ZeroOrOne, false, 0x0, NotRestricted, Some(5801)),
    /* 3763 */ element!(InitialCheckpointRef, 2861, One, false, 0x0, NotRestricted, None),
    /* 3764 */ element!(InitialCheckpointRefs, 2863, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(2199)),
    /* 3765 */ element!(InitialDelayMaxValue, 2229, ZeroOrOne, false, 0x0, NotRestricted, Some(11)),
    /* 3766 */ element!(InitialDelayMinValue, 2229, ZeroOrOne, false, 0x0, NotRestricted, Some(12)),
    /* 3767 */ element!(InitialDynamicPart, 298, ZeroOrOne, false, 0x0, NotRestricted, Some(933)),
    /* 3768 */ element!(InitialEventStatus, 1368, ZeroOrOne, false, 0x0, NotRestricted, Some(5627)),
    /* 3769 */ element!(InitialFindBehavior, 2633, ZeroOrOne, false, 0x0, NotRestricted, Some(434)),
    /* 3770 */ element!(InitialInactivityTime, 2229, ZeroOrOne, false, 0x0, NotRestricted, Some(3773)),
    /* 3771 */ element!(InitialModeRef, 2995, ZeroOrOne, false, 0x0, NotRestricted, Some(2904)),
    /* 3772 */ element!(InitialNad, 2642, ZeroOrOne, false, 0x0, ClassicPlatform, Some(1319)),
    /* 3773 */ element!(InitialNad, 2642, ZeroOrOne, false, 0x0, ClassicPlatform, Some(4145)),
    /* 3774 */ element!(InitialOfferBehavior, 2633, ZeroOrOne, false, 0x0, NotRestricted, Some(435)),
    /* 3775 */ element!(InitialRefOffset, 2642, ZeroOrOne, false, 0x0, NotRestricted, Some(2721)),
    /* 3776 */ element!(InitialRepetitionsBaseDelay, 2229, ZeroOrOne, false, 0x0, NotRestricted, Some(14)),
    /* 3777 */ element!(InitialRepetitionsMax, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(9)),
    /* 3778 */ element!(InitialStatus, 2067, ZeroOrOne, false, 0x0, NotRestricted, Some(619)),
    /* 3779 */ element!(InitialStatus, 4384, ZeroOrOne, false, 0x0, NotRestricted, Some(621)),
    /* 3780 */ element!(InitialVehicleAnnouncementTime, 2229, ZeroOrOne, false, 0x0, NotRestricted, Some(3786)),
    /* 3781 */ element!(InitializationVectorLength, 3494, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(1364)),
    /* 3782 */ element!(InitializedParameterRef, 2931, ZeroOrOne, false, 0x0, ClassicPlatform, Some(5661)),
    /* 3783 */ element!(InnerGroupIref, 2636, One, false, 0x0, NotRestricted, None),
    /* 3784 */ element!(InnerGroupIrefs, 3455, ZeroOrOne, false, 0x0, NotRestricted, Some(1375)),
    /* 3785 */ element!(InnerPortIref, 1096, ZeroOrOne, false, 0x0, NotRestricted, Some(3027)),
    /* 3786 */ element!(Inplace, 298, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3813)),
    /* 3787 */ element!(Inplace, 298, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(4266)),
    /* 3788 */ element!(Input, 4393, ZeroOrOne, false, 0x0, NotRestricted, Some(2541)),
    /* 3789 */ element!(Input, 5078, ZeroOrOne, false, 0x0, NotRestricted, Some(2541)),
    /* 3790 */ element!(InputDatas, 439, ZeroOrOne, false, 0x0, NotRestricted, Some(5513)),
    /* 3791 */ element!(InputVariableTypeRef, 4430, ZeroOrOne, false, 0x0, NotRestricted, Some(4785)),
    /* 3792 */ element!(InstallationBehavior, 4196, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3567)),
    /* 3793 */ element!(InstanceId, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(1019)),
    /* 3794 */ element!(InstanceId, 4393, ZeroOrOne, false, 0x0, NotRestricted, Some(3598)),
    /* 3795 */ element!(InstanceIdProps, 3601, ZeroOrOne, false, 0x0, NotRestricted, Some(5909)),
    /* 3796 */ element!(InstanceIdentifier, 83, ZeroOrOne, false, 0x0, NotRestricted, Some(4093)),
    /* 3797 */ element!(InstanceIdentifier, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(1325)),
    /* 3798 */ element!(InstanceIdentifier, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(1326)),
    /* 3799 */ element!(InstanceIds, 4905, ZeroOrOne, false, 0x0, NotRestricted, Some(5907)),
    /* 3800 */ element!(InstanceInMemory, 2610, ZeroOrOne, false, 0x0, NotRestricted, Some(2185)),
    /* 3801 */ element!(Instances, 2168, ZeroOrOne, false, 0x1FFFFF, ClassicPlatform, Some(40)),
    /* 3802 */ element!(InstantiationDataDefProps, 2640, One, false, 0x0, NotRestricted, None),
    /* 3803 */ element!(InstantiationDataDefPropss, 3144, ZeroOrOne, false, 0x1C0000, ClassicPlatform, Some(3043)),
    /* 3804 */ element!(InstantiationDataDefPropss, 3144, ZeroOrOne, false, 0x1FFF80, NotRestricted, Some(3048)),
    /* 3805 */ element!(InstantiationDataDefPropss, 3144, ZeroOrOne, false, 0x1C0000, NotRestricted, Some(3049)),
    /* 3806 */ element!(InstantiationRteEventPropss, 677, ZeroOrOne, false, 0x1FFFF8, ClassicPlatform, Some(3446)),
    /* 3807 */ element!(InstantiationTimingEventProps, 2641, One, false, 0x0, NotRestricted, None),
    /* 3808 */ element!(IntegerValueVariationPoint, 2231, One, false, 0x0, NotRestricted, None),
    /* 3809 */ element!(IntendedFilename, 4978, ZeroOrOne, false, 0x0, NotRestricted, Some(4150)),
    /* 3810 */ element!(IntendedPartialInitializationCount, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(4210)),
    /* 3811 */ element!(IntendedTargetMachineRef, 3116, One, false, 0x0, NotRestricted, None),
    /* 3812 */ element!(IntendedTargetMachineRef, 3116, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(4926)),
    /* 3813 */ element!(IntendedTargetMachineRef, 4205, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(4927)),
    /* 3814 */ element!(IntendedTargetMachineRefs, 4172, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(4926)),
    /* 3815 */ element!(InterMessageTime, 2229, ZeroOrOne, false, 0x0, NotRestricted, Some(1770)),
    /* 3816 */ element!(InterfaceBlueprintMapping, 2643, One, false, 0x0, NotRestricted, None),
    /* 3817 */ element!(InterfaceBlueprintMappings, 293, ZeroOrOne, false, 0x0, NotRestricted, Some(5640)),
    /* 3818 */ element!(InterfaceBlueprintRef, 3440, ZeroOrOne, false, 0x0, NotRestricted, Some(5631)),
    /* 3819 */ element!(InterfaceMapping, 2644, One, false, 0x0, NotRestricted, None),
    /* 3820 */ element!(InterfaceMappingSet, 2650, One, false, 0x0, NotRestricted, None),
    /* 3821 */ element!(InterfaceMappings, 2651, ZeroOrOne, false, 0x1FC00, NotRestricted, Some(1428)),
    /* 3822 */ element!(InterfaceMappings, 4029, ZeroOrOne, false, 0x0, NotRestricted, Some(5550)),
    /* 3823 */ element!(InterfaceRef, 3440, ZeroOrOne, false, 0x0, NotRestricted, Some(4796)),
    /* 3824 */ element!(InterfaceRef, 3475, ZeroOrOne, false, 0x0, NotRestricted, Some(4796)),
    /* 3825 */ element!(InterfaceVersion, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(2916)),
    /* 3826 */ element!(InternalBehavior, 60, ZeroOrOne, false, 0x0, NotRestricted, Some(3407)),
    /* 3827 */ element!(InternalBehaviors, 46, ZeroOrOne, false, 0x1FFC00, AdaptivePlatform, Some(3408)),
    /* 3828 */ element!(InternalBehaviors, 247, ZeroOrOne, false, 0x1FFFFF, NotRestricted, Some(2760)),
    /* 3829 */ element!(InternalBehaviors, 394, ZeroOrOne, false, 0x1FFFFF, ClassicPlatform, Some(3191)),
    /* 3830 */ element!(InternalConstrs, 2658, ZeroOrOne, false, 0x0, NotRestricted, Some(888)),
    /* 3831 */ element!(InternalPriorityValue, 3494, ZeroOrOne, false, 0x0, ClassicPlatform, Some(1342)),
    /* 3832 */ element!(InternalTriggerOccurredEvent, 2659, One, false, 0x0, NotRestricted, None),
    /* 3833 */ element!(InternalTriggeringPoint, 2661, One, false, 0x0, NotRestricted, None),
    /* 3834 */ element!(InternalTriggeringPointPolicys, 355, ZeroOrOne, false, 0x1FFF80, NotRestricted, Some(1741)),
    /* 3835 */ element!(InternalTriggeringPoints, 356, ZeroOrOne, false, 0x1FFF80, ClassicPlatform, Some(140)),
    /* 3836 */ element!(InternalTriggeringPoints, 3823, ZeroOrOne, false, 0x1FFF00, NotRestricted, Some(2785)),
    /* 3837 */ element!(InternetHeaderLength, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(1067)),
    /* 3838 */ element!(InterpolationRoutine, 2662, One, false, 0x0, NotRestricted, None),
    /* 3839 */ element!(InterpolationRoutineMapping, 2663, One, false, 0x0, NotRestricted, None),
    /* 3840 */ element!(InterpolationRoutineMappingSet, 2665, One, false, 0x0, NotRestricted, None),
    /* 3841 */ element!(InterpolationRoutineMappingSetRef, 4613, One, false, 0x0, NotRestricted, None),
    /* 3842 */ element!(InterpolationRoutineMappingSetRefs, 4614, ZeroOrOne, false, 0x0, NotRestricted, Some(5005)),
    /* 3843 */ element!(InterpolationRoutineMappings, 2666, ZeroOrOne, false, 0x0, NotRestricted, Some(5792)),
    /* 3844 */ element!(InterpolationRoutineRef, 404, ZeroOrOne, false, 0x0, ClassicPlatform, Some(5782)),
    /* 3845 */ element!(InterpolationRoutines, 2664, ZeroOrOne, false, 0x0, NotRestricted, Some(4749)),
    /* 3846 */ element!(InterruptCategory, 374, ZeroOrOne, false, 0x0, NotRestricted, Some(231)),
    /* 3847 */ element!(InterruptSource, 4393, ZeroOrOne, false, 0x0, NotRestricted, Some(118)),
    /* 3848 */ element!(InterruptSource, 5078, ZeroOrOne, false, 0x0, NotRestricted, Some(118)),
    /* 3849 */ element!(IntervalLength, 2229, ZeroOrOne, false, 0x0, NotRestricted, Some(3552)),
    /* 3850 */ element!(Introduction, 1803, ZeroOrOne, false, 0x0, NotRestricted, Some(5345)),
    /* 3851 */ element!(Introduction, 1803, ZeroOrOne, false, 0x0, NotRestricted, Some(5399)),
    /* 3852 */ element!(Introduction, 1803, ZeroOrOne, false, 0x0, NotRestricted, Some(5406)),
    /* 3853 */ element!(Introduction, 1803, ZeroOrOne, false, 0x0, NotRestricted, Some(5407)),
    /* 3854 */ element!(Introduction, 1803, ZeroOrOne, false, 0x0, NotRestricted, Some(5408)),
    /* 3855 */ element!(Introduction, 1803, ZeroOrOne, false, 0x0, NotRestricted, Some(5409)),
    /* 3856 */ element!(Introduction, 1803, ZeroOrOne, false, 0x0, NotRestricted, Some(5410)),
    /* 3857 */ element!(Introduction, 1803, ZeroOrOne, false, 0x0, NotRestricted, Some(5411)),
    /* 3858 */ element!(Introduction, 1803, ZeroOrOne, false, 0x0, ClassicPlatform, Some(5412)),
    /* 3859 */ element!(Introduction, 1803, ZeroOrOne, false, 0x0, NotRestricted, Some(5413)),
    /* 3860 */ element!(Introduction, 1803, ZeroOrOne, false, 0x0, NotRestricted, Some(5414)),
    /* 3861 */ element!(InvalidValue, 2477, ZeroOrOne, false, 0x0, NotRestricted, Some(1687)),
    /* 3862 */ element!(InvalidationPolicy, 2667, One, false, 0x0, NotRestricted, None),
    /* 3863 */ element!(InvalidationPolicys, 3952, ZeroOrOne, false, 0x0, NotRestricted, Some(1344)),
    /* 3864 */ element!(InverseProtocolVersion, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(1045)),
    /* 3865 */ element!(Invert, 2642, ZeroOrOne, false, 0x0, ClassicPlatform, Some(211)),
    /* 3866 */ element!(InvertCondition, 2668, One, false, 0x0, NotRestricted, None),
    /* 3867 */ element!(Invocation, 440, ZeroOrOne, false, 0x0, NotRestricted, Some(5789)),
    /* 3868 */ element!(IoControlClassRef, 1373, ZeroOrOne, false, 0x0, NotRestricted, Some(5282)),
    /* 3869 */ element!(IoHwAbstractionServerAnnotation, 2670, One, false, 0x0, NotRestricted, None),
    /* 3870 */ element!(IoHwAbstractionServerAnnotations, 3485, ZeroOrOne, false, 0x0, NotRestricted, Some(149)),
    /* 3871 */ element!(IpAddress, 4393, ZeroOrOne, false, 0x0, NotRestricted, Some(3988)),
    /* 3872 */ element!(IpAddress, 5078, ZeroOrOne, false, 0x0, NotRestricted, Some(1399)),
    /* 3873 */ element!(IpAddressKeepBehavior, 2672, ZeroOrOne, false, 0x0, NotRestricted, Some(630)),
    /* 3874 */ element!(IpAddressPrefixLength, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(1174)),
    /* 3875 */ element!(IpIamAuthenticConnectionProps, 2673, One, false, 0x0, NotRestricted, None),
    /* 3876 */ element!(IpIamRemoteSubject, 2675, One, false, 0x0, NotRestricted, None),
    /* 3877 */ element!(IpProtocol, 2455, ZeroOrOne, false, 0x0, NotRestricted, Some(3746)),
    /* 3878 */ element!(IpProtocol, 2696, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3747)),
    /* 3879 */ element!(IpSecConfig, 2677, ZeroOrOne, false, 0x0, NotRestricted, Some(1655)),
    /* 3880 */ element!(IpSecConfigProps, 2680, One, false, 0x0, NotRestricted, None),
    /* 3881 */ element!(IpSecConfigPropsRef, 2678, ZeroOrOne, false, 0x0, NotRestricted, Some(1136)),
    /* 3882 */ element!(IpSecIamRemoteSubject, 2684, One, false, 0x0, NotRestricted, None),
    /* 3883 */ element!(IpSecRule, 2687, One, false, 0x0, NotRestricted, None),
    /* 3884 */ element!(IpSecRules, 2679, ZeroOrOne, false, 0x0, NotRestricted, Some(1164)),
    /* 3885 */ element!(IpTpRule, 4391, ZeroOrOne, false, 0x0, ClassicPlatform, Some(802)),
    /* 3886 */ element!(IpV4Address, 2697, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3835)),
    /* 3887 */ element!(IpV6Address, 2698, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3836)),
    /* 3888 */ element!(IpV6PathMtuEnabled, 298, ZeroOrOne, false, 0x0, NotRestricted, Some(1196)),
    /* 3889 */ element!(IpV6PathMtuTimeout, 2229, ZeroOrOne, false, 0x0, NotRestricted, Some(1263)),
    /* 3890 */ element!(Ipv4Address, 2697, ZeroOrOne, false, 0x0, ClassicPlatform, Some(1070)),
    /* 3891 */ element!(Ipv4Address, 2697, ZeroOrOne, false, 0x0, NotRestricted, Some(1171)),
    /* 3892 */ element!(Ipv4Address, 2697, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3635)),
    /* 3893 */ element!(Ipv4Address, 2697, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3714)),
    /* 3894 */ element!(Ipv4Address, 2697, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(4073)),
    /* 3895 */ element!(Ipv4Address, 2697, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(6038)),
    /* 3896 */ element!(Ipv4AddressMask, 2697, ZeroOrOne, false, 0x0, ClassicPlatform, Some(1069)),
    /* 3897 */ element!(Ipv4AddressSource, 2699, ZeroOrOne, false, 0x0, NotRestricted, Some(509)),
    /* 3898 */ element!(Ipv4Configuration, 2702, One, false, 0x0, NotRestricted, None),
    /* 3899 */ element!(Ipv4DhcpServerConfiguration, 2704, ZeroOrOne, false, 0x0, NotRestricted, Some(367)),
    /* 3900 */ element!(Ipv4MulticastIpAddress, 2697, ZeroOrOne, false, 0x0, NotRestricted, Some(1555)),
    /* 3901 */ element!(Ipv4MulticastIpAddress, 2697, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(1556)),
    /* 3902 */ element!(Ipv4MulticastIpAddress, 2697, ZeroOrOne, false, 0x0, NotRestricted, Some(1557)),
    /* 3903 */ element!(Ipv4MulticastIpAddress, 2697, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(1557)),
    /* 3904 */ element!(Ipv4Props, 2706, ZeroOrOne, false, 0x0, NotRestricted, Some(391)),
    /* 3905 */ element!(Ipv4Rule, 2707, One, false, 0x0, NotRestricted, None),
    /* 3906 */ element!(Ipv6Address, 2698, ZeroOrOne, false, 0x0, ClassicPlatform, Some(1072)),
    /* 3907 */ element!(Ipv6Address, 2698, ZeroOrOne, false, 0x0, NotRestricted, Some(1172)),
    /* 3908 */ element!(Ipv6Address, 2698, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3636)),
    /* 3909 */ element!(Ipv6Address, 2698, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3715)),
    /* 3910 */ element!(Ipv6Address, 2698, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(4074)),
    /* 3911 */ element!(Ipv6Address, 2698, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(6039)),
    /* 3912 */ element!(Ipv6AddressMask, 2698, ZeroOrOne, false, 0x0, ClassicPlatform, Some(1071)),
    /* 3913 */ element!(Ipv6AddressSource, 2708, ZeroOrOne, false, 0x0, NotRestricted, Some(509)),
    /* 3914 */ element!(Ipv6Configuration, 2709, One, false, 0x0, NotRestricted, None),
    /* 3915 */ element!(Ipv6DhcpServerConfiguration, 2711, ZeroOrOne, false, 0x0, NotRestricted, Some(368)),
    /* 3916 */ element!(Ipv6MulticastIpAddress, 2698, ZeroOrOne, false, 0x0, NotRestricted, Some(1558)),
    /* 3917 */ element!(Ipv6MulticastIpAddress, 2698, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(1559)),
    /* 3918 */ element!(Ipv6MulticastIpAddress, 2698, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(1560)),
    /* 3919 */ element!(Ipv6MulticastIpAddress, 2698, ZeroOrOne, false, 0x0, NotRestricted, Some(1561)),
    /* 3920 */ element!(Ipv6MulticastIpAddress, 2698, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(1561)),
    /* 3921 */ element!(Ipv6Props, 2714, ZeroOrOne, false, 0x0, NotRestricted, Some(392)),
    /* 3922 */ element!(Ipv6Rule, 2715, One, false, 0x0, NotRestricted, None),
    /* 3923 */ element!(IsActivationLineDependent, 298, ZeroOrOne, false, 0x0, NotRestricted, Some(3814)),
    /* 3924 */ element!(IsActivationLineDependent, 298, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3814)),
    /* 3925 */ element!(IsAutoValue, 298, ZeroOrOne, false, 0x0, ClassicPlatform, Some(1266)),
    /* 3926 */ element!(IsAutoValue, 298, ZeroOrOne, false, 0x0, ClassicPlatform, Some(1267)),
    /* 3927 */ element!(IsDefault, 298, ZeroOrOne, false, 0x0, NotRestricted, Some(3827)),
    /* 3928 */ element!(IsDefault, 298, ZeroOrOne, false, 0x0, NotRestricted, Some(3974)),
    /* 3929 */ element!(IsDefault, 298, ZeroOrOne, false, 0x0, NotRestricted, Some(4265)),
    /* 3930 */ element!(IsDeltaPackage, 298, ZeroOrOne, false, 0x0, NotRestricted, Some(3833)),
    /* 3931 */ element!(IsDynamicLengthFieldSize, 298, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(4080)),
    /* 3932 */ element!(IsDynamicLengthFieldSize, 298, ZeroOrOne, false, 0x0, NotRestricted, Some(4202)),
    /* 3933 */ element!(IsEvent, 298, ZeroOrOne, false, 0x0, ClassicPlatform, Some(1311)),
    /* 3934 */ element!(IsExternal, 298, ZeroOrOne, false, 0x0, ClassicPlatform, Some(4026)),
    /* 3935 */ element!(IsGlobal, 298, ZeroOrOne, false, 0x0, NotRestricted, Some(4686)),
    /* 3936 */ element!(IsMandatory, 298, ZeroOrOne, false, 0x0, ClassicPlatform, Some(3976)),
    /* 3937 */ element!(IsObdRelevant, 298, ZeroOrOne, false, 0x0, NotRestricted, Some(3970)),
    /* 3938 */ element!(IsOptional, 298, ZeroOrOne, false, 0x0, ClassicPlatform, Some(1264)),
    /* 3939 */ element!(IsOptional, 298, ZeroOrOne, false, 0x0, NotRestricted, Some(4081)),
    /* 3940 */ element!(IsOptional, 298, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(4082)),
    /* 3941 */ element!(IsOptional, 298, ZeroOrOne, false, 0x0, NotRestricted, Some(4083)),
    /* 3942 */ element!(IsPipeliningPermitted, 298, ZeroOrOne, false, 0x0, NotRestricted, Some(2636)),
    /* 3943 */ element!(IsPrivate, 298, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3575)),
    /* 3944 */ element!(IsReentrant, 298, ZeroOrOne, false, 0x0, NotRestricted, Some(1787)),
    /* 3945 */ element!(IsReentrant, 298, ZeroOrOne, false, 0x0, ClassicPlatform, Some(1788)),
    /* 3946 */ element!(IsRequired, 298, ZeroOrOne, false, 0x0, NotRestricted, Some(4222)),
    /* 3947 */ element!(IsService, 298, ZeroOrOne, false, 0x0, ClassicPlatform, Some(4668)),
    /* 3948 */ element!(IsService, 2231, ZeroOrOne, false, 0x0, ClassicPlatform, Some(4669)),
    /* 3949 */ element!(IsStructWithOptionalElement, 298, ZeroOrOne, false, 0x0, NotRestricted, Some(3992)),
    /* 3950 */ element!(IsSynchronous, 298, ZeroOrOne, false, 0x0, NotRestricted, Some(2656)),
    /* 3951 */ element!(IsSynchronous, 298, ZeroOrOne, false, 0x0, ClassicPlatform, Some(2657)),
    /* 3952 */ element!(IsSystemWideGlobalTimeMaster, 298, ZeroOrOne, false, 0x0, NotRestricted, Some(1219)),
    /* 3953 */ element!(IsUnused, 298, ZeroOrOne, false, 0x0, ClassicPlatform, Some(1265)),
    /* 3954 */ element!(IsVariadicTemplate, 298, ZeroOrOne, false, 0x0, NotRestricted, Some(3954)),
    /* 3955 */ element!(IssuedBy, 4393, ZeroOrOne, false, 0x0, NotRestricted, Some(4802)),
    /* 3956 */ element!(IssuedBy, 4393, ZeroOrOne, false, 0x0, NotRestricted, Some(5667)),
    /* 3957 */ element!(IssuedBy, 5078, ZeroOrOne, false, 0x0, NotRestricted, Some(6054)),
    /* 3958 */ element!(IssuedTriggers, 405, ZeroOrOne, false, 0x1C0000, NotRestricted, Some(72)),
    /* 3959 */ element!(ItRef, 144, ZeroOrOne, false, 0x0, NotRestricted, Some(4335)),
    /* 3960 */ element!(Item, 2716, Any, false, 0xC0000, NotRestricted, Some(6061)),
    /* 3961 */ element!(ItemDefinitions, 278, ZeroOrOne, true, 0x0, ClassicPlatform, Some(3432)),
    /* 3962 */ element!(ItemLabel, 3064, ZeroOrOne, false, 0x0, NotRestricted, Some(4798)),
    /* 3963 */ element!(Items, 279, ZeroOrOne, true, 0x0, ClassicPlatform, Some(3346)),
    /* 3964 */ element!(IumprGroup, 4393, ZeroOrOne, false, 0x0, NotRestricted, Some(561)),
    /* 3965 */ element!(IumprGroup, 5078, ZeroOrOne, false, 0x0, NotRestricted, Some(562)),
    /* 3966 */ element!(IumprGroupIdentifiers, 1381, ZeroOrOne, false, 0x1F0000, NotRestricted, Some(3255)),
    /* 3967 */ element!(IumprRef, 1382, One, false, 0x0, NotRestricted, None),
    /* 3968 */ element!(IumprRef, 1387, ZeroOrOne, false, 0x0, ClassicPlatform, Some(5039)),
    /* 3969 */ element!(IumprRefs, 1383, ZeroOrOne, false, 0x180000, NotRestricted, Some(4930)),
    /* 3970 */ element!(IumprRefs, 1383, ZeroOrOne, false, 0x180000, NotRestricted, Some(4931)),
    /* 3971 */ element!(J1939Cluster, 2717, One, false, 0x0, NotRestricted, None),
    /* 3972 */ element!(J1939ClusterConditional, 2718, One, false, 0x0, NotRestricted, None),
    /* 3973 */ element!(J1939ClusterVariants, 2719, ZeroOrOne, false, 0x1FFC00, NotRestricted, Some(4408)),
    /* 3974 */ element!(J1939ControllerApplication, 2720, One, false, 0x0, NotRestricted, None),
    /* 3975 */ element!(J1939ControllerApplicationRef, 2722, ZeroOrOne, false, 0x0, ClassicPlatform, Some(2109)),
    /* 3976 */ element!(J1939ControllerApplicationToJ1939NmNodeMapping, 2721, One, false, 0x0, NotRestricted, None),
    /* 3977 */ element!(J1939ControllerApplicationToJ1939NmNodeMappings, 4624, ZeroOrOne, false, 0x0, ClassicPlatform, Some(1427)),
    /* 3978 */ element!(J1939DcmDm19Support, 2723, One, false, 0x0, NotRestricted, None),
    /* 3979 */ element!(J1939DcmIPdu, 2724, One, false, 0x0, NotRestricted, None),
    /* 3980 */ element!(J1939DtcValue, 2231, ZeroOrOne, false, 0x0, ClassicPlatform, Some(4077)),
    /* 3981 */ element!(J1939NmCluster, 2726, One, false, 0x0, NotRestricted, None),
    /* 3982 */ element!(J1939NmEcu, 2727, One, false, 0x0, NotRestricted, None),
    /* 3983 */ element!(J1939NmNode, 2728, One, false, 0x0, NotRestricted, None),
    /* 3984 */ element!(J1939NmNodeRef, 1392, ZeroOrOne, false, 0x0, ClassicPlatform, Some(1347)),
    /* 3985 */ element!(J1939ProtectedIPdu, 2730, One, false, 0x0, NotRestricted, None),
    /* 3986 */ element!(J1939Requestable, 298, ZeroOrOne, false, 0x0, NotRestricted, Some(1131)),
    /* 3987 */ element!(J1939RmIncomingRequestServiceNeeds, 2732, One, false, 0x0, NotRestricted, None),
    /* 3988 */ element!(J1939RmOutgoingRequestServiceNeeds, 2733, One, false, 0x0, NotRestricted, None),
    /* 3989 */ element!(J1939SharedAddressCluster, 2734, One, false, 0x0, NotRestricted, None),
    /* 3990 */ element!(J1939SharedAddressClusters, 4615, ZeroOrOne, false, 0x1FFF00, ClassicPlatform, Some(279)),
    /* 3991 */ element!(J1939TpConfig, 2737, One, false, 0x0, NotRestricted, None),
    /* 3992 */ element!(J1939TpConnection, 2740, One, false, 0x0, NotRestricted, None),
    /* 3993 */ element!(J1939TpNode, 2746, One, false, 0x0, NotRestricted, None),
    /* 3994 */ element!(J1939TpPg, 2747, One, false, 0x0, NotRestricted, None),
    /* 3995 */ element!(Jitter, 3068, ZeroOrOne, false, 0x0, NotRestricted, Some(2950)),
    /* 3996 */ element!(Jitter, 3068, ZeroOrOne, false, 0x0, NotRestricted, Some(2951)),
    /* 3997 */ element!(JobPrimitiveRef, 845, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5231)),
    /* 3998 */ element!(JobRef, 4832, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(1905)),
    /* 3999 */ element!(JobRequirements, 3869, ZeroOrOne, false, 0x0, NotRestricted, Some(319)),
    /* 4000 */ element!(JobRequirements, 4806, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(319)),
    /* 4001 */ element!(JumpToBootLoader, 1400, ZeroOrOne, false, 0x0, ClassicPlatform, Some(4089)),
    /* 4002 */ element!(KInitResource, 1102, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5575)),
    /* 4003 */ element!(KRunResource, 1102, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5576)),
    /* 4004 */ element!(KeepAliveInterval, 2229, ZeroOrOne, false, 0x0, NotRestricted, Some(2542)),
    /* 4005 */ element!(KeepAliveProbesMax, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(1493)),
    /* 4006 */ element!(KeepAliveTime, 2229, ZeroOrOne, false, 0x0, NotRestricted, Some(2601)),
    /* 4007 */ element!(KeepAlives, 298, ZeroOrOne, false, 0x0, NotRestricted, Some(1302)),
    /* 4008 */ element!(Key, 159, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(1348)),
    /* 4009 */ element!(Key, 161, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3405)),
    /* 4010 */ element!(Key, 4393, ZeroOrOne, false, 0x0, NotRestricted, Some(483)),
    /* 4011 */ element!(KeyExchangeAuthenticationRef, 4814, One, false, 0x0, NotRestricted, None),
    /* 4012 */ element!(KeyExchangeAuthenticationRefs, 4815, ZeroOrOne, false, 0x0, NotRestricted, Some(5109)),
    /* 4013 */ element!(KeyExchangeRef, 4839, One, false, 0x0, NotRestricted, None),
    /* 4014 */ element!(KeyExchangeRefs, 4840, ZeroOrOne, false, 0x0, NotRestricted, Some(5122)),
    /* 4015 */ element!(KeyExchangeRefs, 4840, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5152)),
    /* 4016 */ element!(KeyExchangeRefs, 4840, ZeroOrOne, false, 0x0, NotRestricted, Some(5153)),
    /* 4017 */ element!(KeyGeneration, 898, ZeroOrOne, false, 0x0, NotRestricted, Some(3834)),
    /* 4018 */ element!(KeyId, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(4238)),
    /* 4019 */ element!(KeyIdentityRef, 3584, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(1868)),
    /* 4020 */ element!(KeyRef, 3585, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(1906)),
    /* 4021 */ element!(KeyServerPriority, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(3629)),
    /* 4022 */ element!(KeySize, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(5737)),
    /* 4023 */ element!(KeySlotAllowedModification, 851, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(2307)),
    /* 4024 */ element!(KeySlotContentAllowedUsages, 860, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(2304)),
    /* 4025 */ element!(KeySlotId, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(1153)),
    /* 4026 */ element!(KeySlotOnlyEnabled, 298, ZeroOrOne, false, 0x0, NotRestricted, Some(1115)),
    /* 4027 */ element!(KeySlotRef, 2538, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(2049)),
    /* 4028 */ element!(KeySlotRef, 2538, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(4967)),
    /* 4029 */ element!(KeySlotRef, 2538, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5240)),
    /* 4030 */ element!(KeySlotUsage, 867, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3753)),
    /* 4031 */ element!(KeySlotUsages, 869, ZeroOrOne, false, 0x100000, AdaptivePlatform, Some(3367)),
    /* 4032 */ element!(KeySlotUsedForStartUp, 298, ZeroOrOne, false, 0x0, NotRestricted, Some(1116)),
    /* 4033 */ element!(KeySlotUsedForSync, 298, ZeroOrOne, false, 0x0, NotRestricted, Some(1117)),
    /* 4034 */ element!(KeySlots, 879, ZeroOrOne, false, 0x9C00, AdaptivePlatform, Some(3351)),
    /* 4035 */ element!(KeySlots, 891, ZeroOrOne, false, 0x1F0000, AdaptivePlatform, Some(3410)),
    /* 4036 */ element!(KeyStorageType, 4393, ZeroOrOne, false, 0x0, NotRestricted, Some(3881)),
    /* 4037 */ element!(KeyValuePairs, 3308, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3411)),
    /* 4038 */ element!(KeyValuePairs, 3317, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3412)),
    /* 4039 */ element!(KeyValueStorageRef, 3324, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5250)),
    /* 4040 */ element!(KeyValueStorageRef, 3327, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5250)),
    /* 4041 */ element!(Keyword, 2753, One, false, 0x0, NotRestricted, None),
    /* 4042 */ element!(KeywordSet, 2755, One, false, 0x0, NotRestricted, None),
    /* 4043 */ element!(Keywords, 2756, ZeroOrOne, false, 0x0, NotRestricted, Some(4750)),
    /* 4044 */ element!(Kind, 918, ZeroOrOne, false, 0x0, NotRestricted, Some(2544)),
    /* 4045 */ element!(Kind, 1645, ZeroOrOne, false, 0x0, ClassicPlatform, Some(3903)),
    /* 4046 */ element!(L1, 2761, Any, false, 0x0, NotRestricted, Some(4811)),
    /* 4047 */ element!(L10, 2762, Any, false, 0x0, NotRestricted, Some(4815)),
    /* 4048 */ element!(L2, 2760, Any, false, 0x0, NotRestricted, Some(5625)),
    /* 4049 */ element!(L2, 2760, Any, false, 0x0, NotRestricted, Some(5756)),
    /* 4050 */ element!(L4, 2759, Any, false, 0x0, NotRestricted, Some(4799)),
    /* 4051 */ element!(L5, 2763, Any, false, 0x0, NotRestricted, Some(5833)),
    /* 4052 */ element!(LGraphic, 2758, Any, false, 0x0, NotRestricted, None),
    /* 4053 */ element!(Label, 3069, ZeroOrOne, false, 0x0, NotRestricted, Some(4791)),
    /* 4054 */ element!(Label, 3069, ZeroOrOne, false, 0x0, NotRestricted, Some(4855)),
    /* 4055 */ element!(Label, 3069, ZeroOrOne, false, 0x0, NotRestricted, Some(4856)),
    /* 4056 */ element!(Label, 3069, ZeroOrOne, false, 0x0, NotRestricted, Some(5391)),
    /* 4057 */ element!(Label, 3069, ZeroOrOne, false, 0x0, NotRestricted, Some(5524)),
    /* 4058 */ element!(Label, 4096, ZeroOrOne, false, 0x0, NotRestricted, Some(3453)),
    /* 4059 */ element!(Label1, 4096, ZeroOrOne, false, 0x0, NotRestricted, Some(3453)),
    /* 4060 */ element!(LabeledItem, 2764, Any, false, 0xC0000, NotRestricted, Some(5423)),
    /* 4061 */ element!(LabeledList, 2765, One, false, 0x0, NotRestricted, Some(5357)),
    /* 4062 */ element!(LabeledList, 2765, One, false, 0xC0000, NotRestricted, Some(5357)),
    /* 4063 */ element!(Language, 2757, ZeroOrOne, false, 0x0, NotRestricted, Some(3490)),
    /* 4064 */ element!(LastEgressSchedulerRef, 757, ZeroOrOne, false, 0x0, NotRestricted, Some(785)),
    /* 4065 */ element!(LatencyBudget, 1044, ZeroOrOne, false, 0x0, NotRestricted, Some(551)),
    /* 4066 */ element!(LatencyBudgetDuration, 2229, ZeroOrOne, false, 0x0, NotRestricted, Some(2338)),
    /* 4067 */ element!(LatencyConstraintType, 2766, ZeroOrOne, false, 0x0, NotRestricted, Some(3132)),
    /* 4068 */ element!(LatencyTimingConstraint, 2767, One, false, 0x0, NotRestricted, None),
    /* 4069 */ element!(LatestTx, 2642, ZeroOrOne, false, 0x0, NotRestricted, Some(3009)),
    /* 4070 */ element!(LcObjectRef, 24, ZeroOrOne, false, 0x0, NotRestricted, Some(953)),
    /* 4071 */ element!(LcStateRef, 2771, ZeroOrOne, false, 0x0, NotRestricted, Some(4337)),
    /* 4072 */ element!(LcStates, 2779, ZeroOrOne, false, 0x0, NotRestricted, Some(868)),
    /* 4073 */ element!(LdapUrl, 4978, ZeroOrOne, false, 0x0, NotRestricted, Some(4726)),
    /* 4074 */ element!(LeafElementIref, 165, ZeroOrOne, false, 0x0, NotRestricted, Some(5435)),
    /* 4075 */ element!(LegislatedFreezeFrameContentUdsObds, 1657, ZeroOrOne, false, 0x1C0000, NotRestricted, Some(5124)),
    /* 4076 */ element!(LegislatedFreezeFrameContentWwhObds, 1663, ZeroOrOne, false, 0x1C0000, NotRestricted, Some(5125)),
    /* 4077 */ element!(Length, 2642, ZeroOrOne, false, 0x0, NotRestricted, Some(1710)),
    /* 4078 */ element!(Length, 2642, ZeroOrOne, false, 0x0, NotRestricted, Some(2417)),
    /* 4079 */ element!(Length, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(871)),
    /* 4080 */ element!(Length, 3494, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3859)),
    /* 4081 */ element!(Length, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(3860)),
    /* 4082 */ element!(Length, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(3890)),
    /* 4083 */ element!(Length, 3494, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(4104)),
    /* 4084 */ element!(Length, 3494, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(4105)),
    /* 4085 */ element!(LengthClientId, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(3694)),
    /* 4086 */ element!(LengthExp, 3140, ZeroOrOne, false, 0x0, NotRestricted, Some(2881)),
    /* 4087 */ element!(LengthSequenceCounter, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(3044)),
    /* 4088 */ element!(LengthVerification, 298, ZeroOrOne, false, 0x0, NotRestricted, Some(742)),
    /* 4089 */ element!(LetDataExchangeParadigm, 2769, ZeroOrOne, false, 0x0, ClassicPlatform, Some(2529)),
    /* 4090 */ element!(LetIntervalRef, 1990, One, false, 0x0, NotRestricted, None),
    /* 4091 */ element!(LetIntervalRefs, 1991, ZeroOrOne, false, 0x0, ClassicPlatform, Some(3476)),
    /* 4092 */ element!(LicenseRef, 4197, One, false, 0x0, NotRestricted, None),
    /* 4093 */ element!(LicenseRefs, 4198, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3503)),
    /* 4094 */ element!(LifeCycleInfo, 2770, One, false, 0x0, NotRestricted, None),
    /* 4095 */ element!(LifeCycleInfoSet, 2772, One, false, 0x0, NotRestricted, None),
    /* 4096 */ element!(LifeCycleInfos, 2773, ZeroOrOne, false, 0x0, NotRestricted, Some(5424)),
    /* 4097 */ element!(LifeCycleState, 2777, One, false, 0x0, NotRestricted, None),
    /* 4098 */ element!(LifeCycleStateDefinitionGroup, 2778, One, false, 0x0, NotRestricted, None),
    /* 4099 */ element!(Lifespan, 1045, ZeroOrOne, false, 0x0, NotRestricted, Some(552)),
    /* 4100 */ element!(LifespanDuration, 2229, ZeroOrOne, false, 0x0, NotRestricted, Some(2339)),
    /* 4101 */ element!(Limit, 2780, One, false, 0x0, NotRestricted, None),
    /* 4102 */ element!(LimitKind, 924, ZeroOrOne, false, 0x0, NotRestricted, Some(4868)),
    /* 4103 */ element!(LinChecksum, 2782, ZeroOrOne, false, 0x0, ClassicPlatform, Some(5914)),
    /* 4104 */ element!(LinCluster, 2783, One, false, 0x0, NotRestricted, None),
    /* 4105 */ element!(LinClusterConditional, 2784, One, false, 0x0, NotRestricted, None),
    /* 4106 */ element!(LinClusterVariants, 2785, ZeroOrOne, false, 0x1FFC00, NotRestricted, Some(4408)),
    /* 4107 */ element!(LinCommunicationConnector, 2786, One, false, 0x0, NotRestricted, None),
    /* 4108 */ element!(LinConfigurableFrame, 2789, One, false, 0x0, NotRestricted, None),
    /* 4109 */ element!(LinConfigurableFrames, 2787, ZeroOrOne, false, 0x0, ClassicPlatform, Some(1369)),
    /* 4110 */ element!(LinConfigurableFrames, 2814, ZeroOrOne, false, 0x0, ClassicPlatform, Some(1383)),
    /* 4111 */ element!(LinErrorResponse, 2793, ZeroOrOne, false, 0x0, ClassicPlatform, Some(946)),
    /* 4112 */ element!(LinEventTriggeredFrame, 2795, One, false, 0x0, NotRestricted, None),
    /* 4113 */ element!(LinFrameTriggering, 2798, One, false, 0x0, NotRestricted, None),
    /* 4114 */ element!(LinIdentifier, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(1656)),
    /* 4115 */ element!(LinMaster, 2799, One, false, 0x0, NotRestricted, None),
    /* 4116 */ element!(LinMasterConditional, 2800, One, false, 0x0, NotRestricted, None),
    /* 4117 */ element!(LinMasterVariants, 2802, ZeroOrOne, false, 0x1C0000, NotRestricted, Some(4408)),
    /* 4118 */ element!(LinNmCluster, 2803, One, false, 0x0, NotRestricted, None),
    /* 4119 */ element!(LinOrderedConfigurableFrame, 2804, One, false, 0x0, NotRestricted, None),
    /* 4120 */ element!(LinOrderedConfigurableFrames, 2788, ZeroOrOne, false, 0x0, ClassicPlatform, Some(1370)),
    /* 4121 */ element!(LinOrderedConfigurableFrames, 2815, ZeroOrOne, false, 0x0, ClassicPlatform, Some(1382)),
    /* 4122 */ element!(LinPhysicalChannel, 2806, One, false, 0x0, NotRestricted, None),
    /* 4123 */ element!(LinPidToCanIdMappings, 467, ZeroOrOne, false, 0x0, ClassicPlatform, Some(2316)),
    /* 4124 */ element!(LinScheduleTable, 2808, One, false, 0x0, NotRestricted, None),
    /* 4125 */ element!(LinSlave, 2810, One, false, 0x0, NotRestricted, None),
    /* 4126 */ element!(LinSlaveConditional, 2811, One, false, 0x0, NotRestricted, None),
    /* 4127 */ element!(LinSlaveConfig, 2812, One, false, 0x0, NotRestricted, None),
    /* 4128 */ element!(LinSlaveEcuRef, 2816, ZeroOrOne, false, 0x0, ClassicPlatform, Some(2110)),
    /* 4129 */ element!(LinSlaveVariants, 2817, ZeroOrOne, false, 0x1C0000, NotRestricted, Some(4408)),
    /* 4130 */ element!(LinSlaves, 2801, ZeroOrOne, false, 0x0, ClassicPlatform, Some(1371)),
    /* 4131 */ element!(LinSporadicFrame, 2818, One, false, 0x0, NotRestricted, None),
    /* 4132 */ element!(LinTpConfig, 2821, One, false, 0x0, NotRestricted, None),
    /* 4133 */ element!(LinTpConnection, 2825, One, false, 0x0, NotRestricted, None),
    /* 4134 */ element!(LinTpNSduRef, 4699, ZeroOrOne, false, 0x0, ClassicPlatform, Some(2092)),
    /* 4135 */ element!(LinTpNode, 2828, One, false, 0x0, NotRestricted, None),
    /* 4136 */ element!(LinUnconditionalFrame, 2830, One, false, 0x0, NotRestricted, None),
    /* 4137 */ element!(LinUnconditionalFrameRef, 2819, One, false, 0x0, NotRestricted, None),
    /* 4138 */ element!(LinUnconditionalFrameRefs, 2797, ZeroOrOne, false, 0x0, ClassicPlatform, Some(45)),
    /* 4139 */ element!(Linker, 2831, One, false, 0x0, NotRestricted, None),
    /* 4140 */ element!(Linkers, 2613, ZeroOrOne, false, 0x0, ClassicPlatform, Some(2545)),
    /* 4141 */ element!(List, 2832, One, false, 0xC0000, NotRestricted, Some(5415)),
    /* 4142 */ element!(List, 2832, One, false, 0x0, NotRestricted, Some(5416)),
    /* 4143 */ element!(ListenNoise, 2642, ZeroOrOne, false, 0x0, NotRestricted, Some(5943)),
    /* 4144 */ element!(ListenTimeout, 2642, ZeroOrOne, false, 0x0, NotRestricted, Some(5955)),
    /* 4145 */ element!(LiteralPrefix, 2500, ZeroOrOne, false, 0x0, NotRestricted, Some(1396)),
    /* 4146 */ element!(Literals, 113, ZeroOrOne, false, 0x100000, AdaptivePlatform, Some(3358)),
    /* 4147 */ element!(Literals, 1896, ZeroOrOne, false, 0x1FFF80, ClassicPlatform, Some(107)),
    /* 4148 */ element!(Liveliness, 1046, ZeroOrOne, false, 0x0, NotRestricted, Some(553)),
    /* 4149 */ element!(LivelinessLeaseDuration, 2229, ZeroOrOne, false, 0x0, NotRestricted, Some(2341)),
    /* 4150 */ element!(LivelinessProtectionKind, 1056, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(625)),
    /* 4151 */ element!(LivenessKind, 1047, ZeroOrOne, false, 0x0, NotRestricted, Some(2340)),
    /* 4152 */ element!(LoadBalancingPriority, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(719)),
    /* 4153 */ element!(LoadBalancingPriority, 3494, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(4030)),
    /* 4154 */ element!(LoadBalancingWeight, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(720)),
    /* 4155 */ element!(LoadBalancingWeight, 3494, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(4033)),
    /* 4156 */ element!(LocMeasurementSet, 2935, ZeroOrOne, false, 0x1FFFC0, NotRestricted, Some(2281)),
    /* 4157 */ element!(LocalCertificateRef, 2690, One, false, 0x0, NotRestricted, None),
    /* 4158 */ element!(LocalCertificateRefs, 2691, ZeroOrOne, false, 0x0, NotRestricted, Some(5064)),
    /* 4159 */ element!(LocalComAccessControlEnabled, 298, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5830)),
    /* 4160 */ element!(LocalCommConnectorRef, 2035, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5208)),
    /* 4161 */ element!(LocalCommConnectorRef, 2048, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(4072)),
    /* 4162 */ element!(LocalDebugDatas, 319, ZeroOrOne, false, 0x0, NotRestricted, Some(35)),
    /* 4163 */ element!(LocalEndpointConfig, 2047, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3293)),
    /* 4164 */ element!(LocalId, 4393, ZeroOrOne, false, 0x0, NotRestricted, Some(3612)),
    /* 4165 */ element!(LocalIpSecRuleRef, 2685, One, false, 0x0, NotRestricted, None),
    /* 4166 */ element!(LocalIpSecRuleRefs, 2686, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5180)),
    /* 4167 */ element!(LocalNetworkEndpointRef, 2674, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(4936)),
    /* 4168 */ element!(LocalParameterRef, 258, ZeroOrOne, false, 0x0, NotRestricted, Some(1290)),
    /* 4169 */ element!(LocalPortRangeEnd, 3494, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(4187)),
    /* 4170 */ element!(LocalPortRangeEnd, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(4188)),
    /* 4171 */ element!(LocalPortRangeStart, 3494, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(4183)),
    /* 4172 */ element!(LocalPortRangeStart, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(4184)),
    /* 4173 */ element!(LocalPortRef, 4131, ZeroOrOne, false, 0x0, NotRestricted, Some(5174)),
    /* 4174 */ element!(LocalSupervision, 2833, One, false, 0x0, NotRestricted, None),
    /* 4175 */ element!(LocalSupervisionEntityRef, 2337, One, false, 0x0, NotRestricted, None),
    /* 4176 */ element!(LocalSupervisionEntityRefs, 2338, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(2152)),
    /* 4177 */ element!(LocalSupervisionRef, 2339, One, false, 0x0, NotRestricted, None),
    /* 4178 */ element!(LocalSupervisionRefs, 2340, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(2111)),
    /* 4179 */ element!(LocalSupervisions, 2341, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(280)),
    /* 4180 */ element!(LocalSupervisions, 3401, ZeroOrOne, false, 0x1E000, AdaptivePlatform, Some(281)),
    /* 4181 */ element!(LocalTcpPortRef, 4288, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3384)),
    /* 4182 */ element!(LocalUdpPortRef, 4288, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3385)),
    /* 4183 */ element!(LocalUnicastAddresses, 1011, ZeroOrOne, false, 0x180000, NotRestricted, Some(2923)),
    /* 4184 */ element!(LocalUnicastAddresses, 1011, ZeroOrOne, false, 0x180000, NotRestricted, Some(2924)),
    /* 4185 */ element!(LocalUnicastAddresss, 2073, ZeroOrOne, false, 0x1C0000, NotRestricted, Some(2921)),
    /* 4186 */ element!(LocalUnicastAddresss, 2073, ZeroOrOne, false, 0x1C0000, NotRestricted, Some(2922)),
    /* 4187 */ element!(LocalVariableRef, 3162, ZeroOrOne, false, 0x0, NotRestricted, Some(5175)),
    /* 4188 */ element!(LogAndTraceInstantiation, 2838, One, false, 0x0, NotRestricted, None),
    /* 4189 */ element!(LogAndTraceInterface, 2845, One, false, 0x0, NotRestricted, None),
    /* 4190 */ element!(LogAndTraceMessageCollectionSet, 2846, One, false, 0x0, NotRestricted, None),
    /* 4191 */ element!(LogAndTraceMessageCollectionSetRef, 2867, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(1836)),
    /* 4192 */ element!(LogAndTraceMessageCollectionSetRef, 3486, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(1902)),
    /* 4193 */ element!(LogChannelId, 4393, ZeroOrOne, false, 0x0, ClassicPlatform, Some(3926)),
    /* 4194 */ element!(LogChannelId, 4393, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3929)),
    /* 4195 */ element!(LogSinkRef, 2840, One, false, 0x0, NotRestricted, None),
    /* 4196 */ element!(LogSinkRef, 2840, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(2071)),
    /* 4197 */ element!(LogSinkRefs, 2841, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(2021)),
    /* 4198 */ element!(LogTraceDefaultLogLevel, 2848, ZeroOrOne, false, 0x0, NotRestricted, Some(3516)),
    /* 4199 */ element!(LogTraceDefaultLogLevel, 2848, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3516)),
    /* 4200 */ element!(LogTraceDefaultLogThreshold, 2848, ZeroOrOne, false, 0x0, ClassicPlatform, Some(3515)),
    /* 4201 */ element!(LogTraceFilePath, 4978, ZeroOrOne, false, 0x0, NotRestricted, Some(3678)),
    /* 4202 */ element!(LogTraceFilePath, 4978, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3678)),
    /* 4203 */ element!(LogTraceLogMode, 2849, ZeroOrOne, false, 0x0, NotRestricted, Some(3679)),
    /* 4204 */ element!(LogTraceLogMode, 2849, One, false, 0x0, NotRestricted, Some(3679)),
    /* 4205 */ element!(LogTraceLogMode, 2849, One, false, 0x0, AdaptivePlatform, Some(3679)),
    /* 4206 */ element!(LogTraceLogModes, 1726, ZeroOrOne, false, 0x0, NotRestricted, None),
    /* 4207 */ element!(LogTraceLogModes, 3539, ZeroOrOne, false, 0x0, NotRestricted, None),
    /* 4208 */ element!(LogTracePortId, 4393, ZeroOrOne, false, 0x0, NotRestricted, Some(3924)),
    /* 4209 */ element!(LogTraceProcessDesc, 4393, ZeroOrOne, false, 0x0, NotRestricted, Some(3526)),
    /* 4210 */ element!(LogTraceProcessId, 4393, ZeroOrOne, false, 0x0, NotRestricted, Some(3945)),
    /* 4211 */ element!(LoggingBehavior, 2850, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3959)),
    /* 4212 */ element!(LogicAddress, 1766, ZeroOrOne, false, 0x0, NotRestricted, Some(890)),
    /* 4213 */ element!(LogicAddress, 2642, ZeroOrOne, false, 0x0, NotRestricted, Some(2927)),
    /* 4214 */ element!(LogicAddress, 2851, One, false, 0x0, NotRestricted, None),
    /* 4215 */ element!(LogicAddresss, 4104, ZeroOrOne, false, 0x1C0000, NotRestricted, Some(271)),
    /* 4216 */ element!(LogicalAddress, 3494, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(432)),
    /* 4217 */ element!(LogicalAddress, 3494, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(891)),
    /* 4218 */ element!(LogicalAddress, 3494, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3915)),
    /* 4219 */ element!(LogicalExpression, 2852, One, false, 0x0, NotRestricted, None),
    /* 4220 */ element!(LogicalExpressionArgumentRef, 3371, One, false, 0x0, NotRestricted, None),
    /* 4221 */ element!(LogicalExpressionArgumentRef, 3808, One, false, 0x0, NotRestricted, None),
    /* 4222 */ element!(LogicalExpressionArgumentRefs, 2855, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(1989)),
    /* 4223 */ element!(LogicalExpressionArgumentRefs, 3367, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(1989)),
    /* 4224 */ element!(LogicalExpressions, 220, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(282)),
    /* 4225 */ element!(LogicalExpressions, 3342, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(282)),
    /* 4226 */ element!(LogicalExpressions, 3402, ZeroOrOne, false, 0x8000, AdaptivePlatform, Some(323)),
    /* 4227 */ element!(LogicalOperator, 2856, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(845)),
    /* 4228 */ element!(LogicalOperator, 3368, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(845)),
    /* 4229 */ element!(LogicalSupervision, 2857, One, false, 0x0, NotRestricted, None),
    /* 4230 */ element!(LogicalSupervisions, 2342, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(283)),
    /* 4231 */ element!(LogicalSupervisions, 2836, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(284)),
    /* 4232 */ element!(LogicalSupervisions, 4413, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(285)),
    /* 4233 */ element!(LongName, 3069, ZeroOrOne, false, 0x0, NotRestricted, Some(5804)),
    /* 4234 */ element!(LongName1, 4096, ZeroOrOne, false, 0x0, NotRestricted, Some(5805)),
    /* 4235 */ element!(LowerBound, 3068, ZeroOrOne, false, 0x0, NotRestricted, Some(2929)),
    /* 4236 */ element!(LowerBoundary, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(634)),
    /* 4237 */ element!(LowerCanId, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(1400)),
    /* 4238 */ element!(LowerCanId, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(3537)),
    /* 4239 */ element!(LowerLimit, 2780, ZeroOrOne, false, 0x0, NotRestricted, Some(5806)),
    /* 4240 */ element!(LowerLimit, 2780, ZeroOrOne, false, 0x0, NotRestricted, Some(5807)),
    /* 4241 */ element!(LowerLimit, 2780, ZeroOrOne, false, 0x0, NotRestricted, Some(5808)),
    /* 4242 */ element!(LowerLimit, 2781, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(4239)),
    /* 4243 */ element!(LowerMultiplicity, 2231, ZeroOrOne, false, 0x0, ClassicPlatform, Some(2930)),
    /* 4244 */ element!(LowerMultiplicity, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(2564)),
    /* 4245 */ element!(LowerMultiplicity, 3494, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3489)),
    /* 4246 */ element!(LowerRef, 4784, ZeroOrOne, false, 0x0, NotRestricted, Some(1791)),
    /* 4247 */ element!(LtMessageCollectionToPortPrototypeMapping, 2866, One, false, 0x0, NotRestricted, None),
    /* 4248 */ element!(LuminousIntensityExp, 3140, ZeroOrOne, false, 0x0, NotRestricted, Some(2882)),
    /* 4249 */ element!(M, 3494, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(4070)),
    /* 4250 */ element!(MacAddress, 2868, ZeroOrOne, false, 0x0, ClassicPlatform, Some(1076)),
    /* 4251 */ element!(MacAddressMask, 2868, ZeroOrOne, false, 0x0, ClassicPlatform, Some(1075)),
    /* 4252 */ element!(MacAddressStreamId, 2868, ZeroOrOne, false, 0x0, NotRestricted, Some(1406)),
    /* 4253 */ element!(MacAddressVlanAssignments, 764, ZeroOrOne, false, 0x100000, NotRestricted, Some(2637)),
    /* 4254 */ element!(MacAddressVlanMembership, 2869, One, false, 0x0, NotRestricted, None),
    /* 4255 */ element!(MacLayerType, 2034, ZeroOrOne, false, 0x0, NotRestricted, Some(2548)),
    /* 4256 */ element!(MacLayerType, 2034, ZeroOrOne, false, 0x0, NotRestricted, Some(2549)),
    /* 4257 */ element!(MacMulticastAddress, 2868, ZeroOrOne, false, 0x0, NotRestricted, Some(51)),
    /* 4258 */ element!(MacMulticastAddressRef, 765, One, false, 0x0, NotRestricted, None),
    /* 4259 */ element!(MacMulticastAddressRef, 2870, One, false, 0x0, NotRestricted, None),
    /* 4260 */ element!(MacMulticastAddressRefs, 766, ZeroOrOne, false, 0x0, NotRestricted, Some(170)),
    /* 4261 */ element!(MacMulticastAddressRefs, 2871, ZeroOrOne, false, 0x0, NotRestricted, Some(494)),
    /* 4262 */ element!(MacMulticastConfiguration, 2874, One, false, 0x0, NotRestricted, None),
    /* 4263 */ element!(MacMulticastGroup, 2875, One, false, 0x0, NotRestricted, None),
    /* 4264 */ element!(MacMulticastGroupRef, 765, ZeroOrOne, false, 0x0, NotRestricted, Some(1924)),
    /* 4265 */ element!(MacMulticastGroups, 2017, ZeroOrOne, false, 0x0, NotRestricted, Some(1407)),
    /* 4266 */ element!(MacSecCipherSuiteConfig, 2877, One, false, 0x0, NotRestricted, None),
    /* 4267 */ element!(MacSecGlobalKayProps, 2882, One, false, 0x0, NotRestricted, None),
    /* 4268 */ element!(MacSecKayConfig, 2887, ZeroOrOne, false, 0x0, NotRestricted, Some(1767)),
    /* 4269 */ element!(MacSecKayParticipant, 2885, One, false, 0x0, NotRestricted, None),
    /* 4270 */ element!(MacSecParticipantSet, 2891, One, false, 0x0, NotRestricted, None),
    /* 4271 */ element!(MacSecProps, 2894, One, false, 0x0, NotRestricted, None),
    /* 4272 */ element!(MacSecPropss, 767, ZeroOrOne, false, 0x0, NotRestricted, Some(1766)),
    /* 4273 */ element!(MacUnicastAddress, 2868, ZeroOrOne, false, 0x0, NotRestricted, Some(1509)),
    /* 4274 */ element!(Machine, 2896, One, false, 0x0, NotRestricted, None),
    /* 4275 */ element!(MachineDesign, 2898, One, false, 0x0, NotRestricted, None),
    /* 4276 */ element!(MachineDesignRef, 3116, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(2115)),
    /* 4277 */ element!(MachineDesignRef, 3532, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5008)),
    /* 4278 */ element!(MachineId, 3494, ZeroOrOne, false, 0x0, ClassicPlatform, Some(5936)),
    /* 4279 */ element!(MachineModeIref, 3028, One, false, 0x0, NotRestricted, None),
    /* 4280 */ element!(MachineModeIrefs, 3018, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5328)),
    /* 4281 */ element!(MachineModeMachines, 2913, ZeroOrOne, false, 0x2000, AdaptivePlatform, Some(2386)),
    /* 4282 */ element!(MachineModeRequestPhmActionItem, 2914, One, false, 0x0, NotRestricted, None),
    /* 4283 */ element!(MachineRef, 2921, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(4314)),
    /* 4284 */ element!(MachineRef, 3116, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(2205)),
    /* 4285 */ element!(MachineRef, 3549, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5006)),
    /* 4286 */ element!(MachineRef, 3549, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5007)),
    /* 4287 */ element!(MachineTiming, 2920, One, false, 0x0, NotRestricted, None),
    /* 4288 */ element!(MacroInitialOffsetA, 2642, ZeroOrOne, false, 0x0, NotRestricted, Some(1339)),
    /* 4289 */ element!(MacroInitialOffsetB, 2642, ZeroOrOne, false, 0x0, NotRestricted, Some(1340)),
    /* 4290 */ element!(MacroPerCycle, 2642, ZeroOrOne, false, 0x0, NotRestricted, Some(3006)),
    /* 4291 */ element!(MacrotickDuration, 2229, ZeroOrOne, false, 0x0, NotRestricted, Some(932)),
    /* 4292 */ element!(MacrotickDuration, 5077, ZeroOrOne, false, 0x0, NotRestricted, Some(932)),
    /* 4293 */ element!(MainFunctionPeriod, 2229, ZeroOrOne, false, 0x0, NotRestricted, Some(3675)),
    /* 4294 */ element!(MajorProtocolVersion, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(1020)),
    /* 4295 */ element!(MajorVersion, 84, ZeroOrOne, false, 0x0, NotRestricted, Some(1414)),
    /* 4296 */ element!(MajorVersion, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(1035)),
    /* 4297 */ element!(MajorVersion, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(1413)),
    /* 4298 */ element!(MajorVersion, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(1415)),
    /* 4299 */ element!(MajorVersion, 3494, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(1417)),
    /* 4300 */ element!(MajorVersion, 3494, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(2377)),
    /* 4301 */ element!(ManagedCouplingPorts, 2000, ZeroOrOne, false, 0x0, NotRestricted, Some(259)),
    /* 4302 */ element!(ManagedModeGroups, 406, ZeroOrOne, false, 0x1C0000, NotRestricted, Some(50)),
    /* 4303 */ element!(ManagedPhysicalChannelRef, 3419, One, false, 0x0, NotRestricted, None),
    /* 4304 */ element!(ManagedPhysicalChannelRefs, 3383, ZeroOrOne, false, 0x0, ClassicPlatform, Some(1792)),
    /* 4305 */ element!(Mandatory, 298, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3807)),
    /* 4306 */ element!(ManufacturerCode, 2642, ZeroOrOne, false, 0x0, ClassicPlatform, Some(1419)),
    /* 4307 */ element!(ManufacturerValidationOrderRef, 1577, One, false, 0x0, NotRestricted, None),
    /* 4308 */ element!(ManufacturerValidationOrderRefs, 1574, ZeroOrOne, true, 0x0, AdaptivePlatform, Some(4952)),
    /* 4309 */ element!(Map, 2922, ZeroOrOne, false, 0x0, NotRestricted, Some(1268)),
    /* 4310 */ element!(MapElementTuples, 163, ZeroOrOne, true, 0x0, AdaptivePlatform, Some(3404)),
    /* 4311 */ element!(MappedApDataElementIref, 939, ZeroOrOne, false, 0x0, NotRestricted, Some(5589)),
    /* 4312 */ element!(MappedBswServiceDependencyRef, 1301, ZeroOrOne, false, 0x0, NotRestricted, Some(4765)),
    /* 4313 */ element!(MappedBswServiceDependencyRef, 1336, ZeroOrOne, false, 0x0, NotRestricted, Some(4765)),
    /* 4314 */ element!(MappedDataElementIref, 962, ZeroOrOne, false, 0x0, NotRestricted, Some(5590)),
    /* 4315 */ element!(MappedFlatSwcServiceDependencyRef, 1303, ZeroOrOne, false, 0x0, NotRestricted, Some(5485)),
    /* 4316 */ element!(MappedFlatSwcServiceDependencyRef, 1337, ZeroOrOne, false, 0x0, NotRestricted, Some(5485)),
    /* 4317 */ element!(MappedFunctionRef, 1338, ZeroOrOne, false, 0x0, NotRestricted, Some(5636)),
    /* 4318 */ element!(MappedOperationIref, 3186, ZeroOrOne, false, 0x0, NotRestricted, Some(1860)),
    /* 4319 */ element!(MappedSecurityEvents, 3909, ZeroOrOne, false, 0x1F0000, NotRestricted, Some(3315)),
    /* 4320 */ element!(MappedSwcServiceDependencyInExecutableIref, 4539, ZeroOrOne, false, 0x0, NotRestricted, Some(5482)),
    /* 4321 */ element!(MappedSwcServiceDependencyInSystemIref, 4541, ZeroOrOne, false, 0x0, NotRestricted, Some(5483)),
    /* 4322 */ element!(MappedSwcServiceDependencyIref, 4538, ZeroOrOne, false, 0x0, NotRestricted, Some(5481)),
    /* 4323 */ element!(MappedSwcServiceDependencyIref, 4539, ZeroOrOne, false, 0x0, AdaptivePlatform, None),
    /* 4324 */ element!(MappedSwcServiceDependencyIref, 4541, ZeroOrOne, false, 0x0, NotRestricted, Some(5484)),
    /* 4325 */ element!(MappingConstraints, 4625, ZeroOrOne, false, 0x1C0000, ClassicPlatform, Some(423)),
    /* 4326 */ element!(MappingDirection, 2923, ZeroOrOne, false, 0x0, NotRestricted, Some(2528)),
    /* 4327 */ element!(MappingDirection, 3100, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3847)),
    /* 4328 */ element!(MappingRef, 4476, ZeroOrOne, false, 0x0, NotRestricted, Some(1867)),
    /* 4329 */ element!(MappingScope, 2924, ZeroOrOne, false, 0x0, NotRestricted, Some(3968)),
    /* 4330 */ element!(MappingScope, 2924, ZeroOrOne, false, 0x0, NotRestricted, Some(3969)),
    /* 4331 */ element!(Mappings, 705, ZeroOrOne, false, 0x0, NotRestricted, Some(417)),
    /* 4332 */ element!(Mappings, 2252, ZeroOrOne, false, 0x0, NotRestricted, Some(2391)),
    /* 4333 */ element!(Mappings, 4641, ZeroOrOne, false, 0x1FFFFF, NotRestricted, Some(8)),
    /* 4334 */ element!(Mappings, 4880, ZeroOrOne, false, 0x0, NotRestricted, Some(1446)),
    /* 4335 */ element!(Mask, 2642, ZeroOrOne, false, 0x0, ClassicPlatform, Some(212)),
    /* 4336 */ element!(Mask, 2642, ZeroOrOne, false, 0x0, NotRestricted, Some(1455)),
    /* 4337 */ element!(Mask, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(1287)),
    /* 4338 */ element!(MassExp, 3140, ZeroOrOne, false, 0x0, NotRestricted, Some(2883)),
    /* 4339 */ element!(Master, 298, ZeroOrOne, false, 0x0, NotRestricted, Some(1642)),
    /* 4340 */ element!(Master, 2364, ZeroOrOne, false, 0x0, NotRestricted, Some(5734)),
    /* 4341 */ element!(MasterEventRef, 1406, ZeroOrOne, false, 0x0, NotRestricted, Some(5641)),
    /* 4342 */ element!(MasterRef, 2378, ZeroOrOne, false, 0x0, NotRestricted, Some(5642)),
    /* 4343 */ element!(MasterToSlaveEventMappings, 1405, ZeroOrOne, false, 0x0, NotRestricted, Some(5533)),
    /* 4344 */ element!(MasteredTriggerRef, 4926, ZeroOrOne, false, 0x0, NotRestricted, Some(3164)),
    /* 4345 */ element!(MatchingCriterionRef, 3497, ZeroOrOne, false, 0x0, NotRestricted, Some(4781)),
    /* 4346 */ element!(MatchingEgressRuleRef, 2155, One, false, 0x0, NotRestricted, None),
    /* 4347 */ element!(MatchingEgressRuleRefs, 2156, ZeroOrOne, true, 0x0, NotRestricted, Some(4373)),
    /* 4348 */ element!(MatchingIngressRuleRef, 2155, One, false, 0x0, NotRestricted, None),
    /* 4349 */ element!(MatchingIngressRuleRefs, 2157, ZeroOrOne, true, 0x0, NotRestricted, Some(4374)),
    /* 4350 */ element!(MatchingRuleRef, 2158, One, false, 0x0, NotRestricted, None),
    /* 4351 */ element!(MatchingRuleRefs, 2159, ZeroOrOne, true, 0x0, NotRestricted, Some(4372)),
    /* 4352 */ element!(Max, 2231, ZeroOrOne, false, 0x0, ClassicPlatform, Some(1459)),
    /* 4353 */ element!(Max, 2642, ZeroOrOne, false, 0x0, NotRestricted, Some(5964)),
    /* 4354 */ element!(Max, 2780, ZeroOrOne, false, 0x0, ClassicPlatform, Some(1459)),
    /* 4355 */ element!(Max, 2781, ZeroOrOne, false, 0x0, NotRestricted, Some(1499)),
    /* 4356 */ element!(Max, 2781, ZeroOrOne, false, 0x0, NotRestricted, Some(2607)),
    /* 4357 */ element!(Max, 2781, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3783)),
    /* 4358 */ element!(Max, 3140, ZeroOrOne, false, 0x0, NotRestricted, Some(5769)),
    /* 4359 */ element!(Max, 3494, ZeroOrOne, false, 0x0, ClassicPlatform, Some(1086)),
    /* 4360 */ element!(Max, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(1121)),
    /* 4361 */ element!(Max, 3494, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5942)),
    /* 4362 */ element!(MaxAliveCycle, 2229, ZeroOrOne, false, 0x0, NotRestricted, Some(1474)),
    /* 4363 */ element!(MaxAliveCycle, 5077, ZeroOrOne, false, 0x0, NotRestricted, Some(1473)),
    /* 4364 */ element!(MaxAr, 2642, ZeroOrOne, false, 0x0, NotRestricted, Some(3704)),
    /* 4365 */ element!(MaxAr, 2642, ZeroOrOne, false, 0x0, ClassicPlatform, Some(4873)),
    /* 4366 */ element!(MaxAs, 2642, ZeroOrOne, false, 0x0, NotRestricted, Some(3705)),
    /* 4367 */ element!(MaxAs, 2642, ZeroOrOne, false, 0x0, ClassicPlatform, Some(4874)),
    /* 4368 */ element!(MaxAvailablePersistencyStorageSpace, 3494, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(4035)),
    /* 4369 */ element!(MaxBaseTypeSize, 2642, ZeroOrOne, false, 0x0, NotRestricted, Some(893)),
    /* 4370 */ element!(MaxBaseTypeSize, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(894)),
    /* 4371 */ element!(MaxBlockSize, 2642, ZeroOrOne, false, 0x0, ClassicPlatform, Some(2960)),
    /* 4372 */ element!(MaxBlockSize, 3494, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3829)),
    /* 4373 */ element!(MaxBs, 2642, ZeroOrOne, false, 0x0, NotRestricted, Some(3722)),
    /* 4374 */ element!(MaxBs, 3494, ZeroOrOne, false, 0x0, ClassicPlatform, Some(2382)),
    /* 4375 */ element!(MaxBufferRequest, 2642, ZeroOrOne, false, 0x0, NotRestricted, Some(1725)),
    /* 4376 */ element!(MaxBufferRequest, 2642, ZeroOrOne, false, 0x0, NotRestricted, Some(4872)),
    /* 4377 */ element!(MaxBufferSize, 2642, ZeroOrOne, false, 0x0, ClassicPlatform, Some(3911)),
    /* 4378 */ element!(MaxBytesInInterval, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(3550)),
    /* 4379 */ element!(MaxCommMode, 2925, ZeroOrOne, false, 0x0, NotRestricted, Some(1471)),
    /* 4380 */ element!(MaxConversations, 3494, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(1485)),
    /* 4381 */ element!(MaxCycleRepetitions, 3494, ZeroOrOne, false, 0x0, ClassicPlatform, Some(5)),
    /* 4382 */ element!(MaxCycles, 2642, ZeroOrOne, false, 0x0, ClassicPlatform, Some(1276)),
    /* 4383 */ element!(MaxDataLength, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(1480)),
    /* 4384 */ element!(MaxDataLength, 3494, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(1481)),
    /* 4385 */ element!(MaxDeadline, 2229, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(633)),
    /* 4386 */ element!(MaxDeltaCounter, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(1469)),
    /* 4387 */ element!(MaxDeltaCounter, 3494, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(1469)),
    /* 4388 */ element!(MaxDeltaCounterInit, 2231, ZeroOrOne, false, 0x0, ClassicPlatform, Some(1321)),
    /* 4389 */ element!(MaxDeltaCounterInit, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(1320)),
    /* 4390 */ element!(MaxDestinationPortNumber, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(1087)),
    /* 4391 */ element!(MaxDidToRead, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(4149)),
    /* 4392 */ element!(MaxDiff, 3140, ZeroOrOne, false, 0x0, NotRestricted, Some(1479)),
    /* 4393 */ element!(MaxErrorStateInit, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(1460)),
    /* 4394 */ element!(MaxErrorStateInit, 3494, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(1460)),
    /* 4395 */ element!(MaxErrorStateInit, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(1461)),
    /* 4396 */ element!(MaxErrorStateInvalid, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(1462)),
    /* 4397 */ element!(MaxErrorStateInvalid, 3494, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(1462)),
    /* 4398 */ element!(MaxErrorStateInvalid, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(1463)),
    /* 4399 */ element!(MaxErrorStateValid, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(1464)),
    /* 4400 */ element!(MaxErrorStateValid, 3494, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(1464)),
    /* 4401 */ element!(MaxErrorStateValid, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(1465)),
    /* 4402 */ element!(MaxEventsInInterval, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(3549)),
    /* 4403 */ element!(MaxExpBs, 3494, ZeroOrOne, false, 0x0, ClassicPlatform, Some(2383)),
    /* 4404 */ element!(MaxFcWait, 2642, ZeroOrOne, false, 0x0, ClassicPlatform, Some(3700)),
    /* 4405 */ element!(MaxFcWait, 2642, ZeroOrOne, false, 0x0, ClassicPlatform, Some(3701)),
    /* 4406 */ element!(MaxFcWait, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(3698)),
    /* 4407 */ element!(MaxFrIf, 2642, ZeroOrOne, false, 0x0, NotRestricted, Some(1722)),
    /* 4408 */ element!(MaxFrIf, 2642, ZeroOrOne, false, 0x0, ClassicPlatform, Some(4875)),
    /* 4409 */ element!(MaxGradient, 2229, ZeroOrOne, false, 0x0, NotRestricted, Some(3706)),
    /* 4410 */ element!(MaxGradient, 3140, ZeroOrOne, false, 0x0, NotRestricted, Some(4400)),
    /* 4411 */ element!(MaxGradient, 3140, ZeroOrOne, false, 0x0, NotRestricted, Some(4401)),
    /* 4412 */ element!(MaxHeaderId, 2642, ZeroOrOne, false, 0x0, NotRestricted, Some(2550)),
    /* 4413 */ element!(MaxInitialVehicleAnnouncementTime, 2229, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5941)),
    /* 4414 */ element!(MaxInstances, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(2346)),
    /* 4415 */ element!(MaxLength, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(892)),
    /* 4416 */ element!(MaxLength, 3494, ZeroOrOne, false, 0x0, ClassicPlatform, Some(1458)),
    /* 4417 */ element!(MaxLength, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(2558)),
    /* 4418 */ element!(MaxMajorVersion, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(1027)),
    /* 4419 */ element!(MaxMargin, 3494, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(588)),
    /* 4420 */ element!(MaxMinorVersion, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(1029)),
    /* 4421 */ element!(MaxNoNewOrRepeatedData, 3494, ZeroOrOne, false, 0x0, ClassicPlatform, Some(991)),
    /* 4422 */ element!(MaxNoNewOrRepeatedData, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(2947)),
    /* 4423 */ element!(MaxNoNewOrRepeatedData, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(2948)),
    /* 4424 */ element!(MaxNoNewOrRepeatedData, 3494, ZeroOrOne, false, 0x0, ClassicPlatform, Some(2949)),
    /* 4425 */ element!(MaxNumChangeOfDataIdentfierEvents, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(2963)),
    /* 4426 */ element!(MaxNumComparisionOfValueEvents, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(2964)),
    /* 4427 */ element!(MaxNumberFreezeFrameRecords, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(3721)),
    /* 4428 */ element!(MaxNumberOfAllowedUpdates, 3494, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3864)),
    /* 4429 */ element!(MaxNumberOfConnections, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(3697)),
    /* 4430 */ element!(MaxNumberOfElements, 2231, ZeroOrOne, false, 0x0, NotRestricted, Some(1487)),
    /* 4431 */ element!(MaxNumberOfElements, 2231, ZeroOrOne, false, 0x0, NotRestricted, Some(2961)),
    /* 4432 */ element!(MaxNumberOfElements, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(2871)),
    /* 4433 */ element!(MaxNumberOfEventEntries, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(3902)),
    /* 4434 */ element!(MaxNumberOfFiles, 3494, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(4124)),
    /* 4435 */ element!(MaxNumberOfFiles, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(4125)),
    /* 4436 */ element!(MaxNumberOfFiles, 3494, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(4126)),
    /* 4437 */ element!(MaxNumberOfNpduPerCycle, 2642, ZeroOrOne, false, 0x0, ClassicPlatform, Some(4891)),
    /* 4438 */ element!(MaxNumberOfOccurrences, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(2962)),
    /* 4439 */ element!(MaxNumberOfParallelTransfers, 3494, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(4278)),
    /* 4440 */ element!(MaxNumberOfRequestCorrectlyReceivedResponsePending, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(1491)),
    /* 4441 */ element!(MaxNumberOfRespPendingFrames, 2642, ZeroOrOne, false, 0x0, ClassicPlatform, Some(414)),
    /* 4442 */ element!(MaxNumberOfRespPendingFrames, 3494, ZeroOrOne, false, 0x0, ClassicPlatform, Some(415)),
    /* 4443 */ element!(MaxNumberOfStoredDtcStatusChangedEvents, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(2959)),
    /* 4444 */ element!(MaxNumberOfTimeQuantaPerBit, 2642, ZeroOrOne, false, 0x0, NotRestricted, Some(1492)),
    /* 4445 */ element!(MaxPeriodicDidToRead, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(5643)),
    /* 4446 */ element!(MaxProgressionMismatchThreshold, 2229, ZeroOrOne, false, 0x0, NotRestricted, Some(3699)),
    /* 4447 */ element!(MaxPwmL, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(2551)),
    /* 4448 */ element!(MaxPwmO, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(2568)),
    /* 4449 */ element!(MaxPwmS, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(2552)),
    /* 4450 */ element!(MaxRequestBytes, 3494, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(2555)),
    /* 4451 */ element!(MaxRetries, 2642, ZeroOrOne, false, 0x0, NotRestricted, Some(3702)),
    /* 4452 */ element!(MaxRetries, 2642, ZeroOrOne, false, 0x0, ClassicPlatform, Some(4871)),
    /* 4453 */ element!(MaxRptEventId, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(1145)),
    /* 4454 */ element!(MaxRunCycleLoop, 3494, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(2965)),
    /* 4455 */ element!(MaxSamplePoint, 2229, ZeroOrOne, false, 0x0, NotRestricted, Some(2943)),
    /* 4456 */ element!(MaxSamplePoint, 5077, ZeroOrOne, false, 0x0, NotRestricted, Some(2943)),
    /* 4457 */ element!(MaxSamples, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(2346)),
    /* 4458 */ element!(MaxSamplesPerInstance, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(2346)),
    /* 4459 */ element!(MaxSduSize, 3494, ZeroOrOne, false, 0x0, ClassicPlatform, Some(639)),
    /* 4460 */ element!(MaxServicePointId, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(1146)),
    /* 4461 */ element!(MaxSizeToFill, 2642, ZeroOrOne, false, 0x0, NotRestricted, Some(1192)),
    /* 4462 */ element!(MaxSizeToFill, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(1192)),
    /* 4463 */ element!(MaxSlots, 2642, ZeroOrOne, false, 0x0, ClassicPlatform, Some(1277)),
    /* 4464 */ element!(MaxSlotsPerCycle, 3494, ZeroOrOne, false, 0x0, ClassicPlatform, Some(4)),
    /* 4465 */ element!(MaxSourceElement, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(5645)),
    /* 4466 */ element!(MaxSourcePortNumber, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(1088)),
    /* 4467 */ element!(MaxSupportedDidLength, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(2966)),
    /* 4468 */ element!(MaxSyncJumpWidth, 2229, ZeroOrOne, false, 0x0, NotRestricted, Some(2942)),
    /* 4469 */ element!(MaxSyncJumpWidth, 5077, ZeroOrOne, false, 0x0, NotRestricted, Some(2942)),
    /* 4470 */ element!(MaxTesterConnections, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(1470)),
    /* 4471 */ element!(MaxTesterConnections, 3494, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(1470)),
    /* 4472 */ element!(MaxTransitTime, 2229, ZeroOrOne, false, 0x0, NotRestricted, Some(699)),
    /* 4473 */ element!(MaxTrcvDelayCompensationOffset, 2229, ZeroOrOne, false, 0x0, NotRestricted, Some(2554)),
    /* 4474 */ element!(MaxValue, 2229, ZeroOrOne, false, 0x0, NotRestricted, Some(1468)),
    /* 4475 */ element!(MaxWithoutClockCorrectionFatal, 2642, ZeroOrOne, false, 0x0, NotRestricted, Some(5850)),
    /* 4476 */ element!(MaxWithoutClockCorrectionPassive, 2642, ZeroOrOne, false, 0x0, NotRestricted, Some(5851)),
    /* 4477 */ element!(Maximum, 3068, ZeroOrOne, false, 0x0, ClassicPlatform, Some(2954)),
    /* 4478 */ element!(Maximum, 3068, ZeroOrOne, false, 0x0, NotRestricted, Some(2956)),
    /* 4479 */ element!(Maximum, 3068, ZeroOrOne, false, 0x0, NotRestricted, Some(2969)),
    /* 4480 */ element!(Maximum, 3068, ZeroOrOne, false, 0x0, NotRestricted, Some(3054)),
    /* 4481 */ element!(MaximumAllowedSize, 3494, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3181)),
    /* 4482 */ element!(MaximumAllowedSize, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(3182)),
    /* 4483 */ element!(MaximumDistances, 692, ZeroOrOne, false, 0x0, NotRestricted, Some(3002)),
    /* 4484 */ element!(MaximumDurationOfCampaign, 2229, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(1502)),
    /* 4485 */ element!(MaximumDynamicPayloadLength, 2642, ZeroOrOne, false, 0x0, NotRestricted, Some(1498)),
    /* 4486 */ element!(MaximumExecutionTime, 3068, ZeroOrOne, false, 0x0, NotRestricted, Some(2958)),
    /* 4487 */ element!(MaximumExecutionTime, 3068, ZeroOrOne, false, 0x0, NotRestricted, Some(2970)),
    /* 4488 */ element!(MaximumIntendedBindingTime, 282, ZeroOrOne, false, 0x0, NotRestricted, Some(501)),
    /* 4489 */ element!(MaximumInterArrivalTime, 3068, ZeroOrOne, false, 0x0, NotRestricted, Some(2972)),
    /* 4490 */ element!(MaximumKeyLength, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(2957)),
    /* 4491 */ element!(MaximumLength, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(4086)),
    /* 4492 */ element!(MaximumMemoryConsumption, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(2955)),
    /* 4493 */ element!(MaximumMemoryConsumption, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(2971)),
    /* 4494 */ element!(MaximumMessageLength, 2926, ZeroOrOne, false, 0x0, NotRestricted, Some(5809)),
    /* 4495 */ element!(MaximumNumberOfRetries, 3494, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3703)),
    /* 4496 */ element!(MaximumReceiveBufferLength, 2642, ZeroOrOne, false, 0x0, NotRestricted, Some(911)),
    /* 4497 */ element!(MaximumResidenceTime, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(643)),
    /* 4498 */ element!(MaximumSegmentLength, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(3858)),
    /* 4499 */ element!(MaximumSegmentLength, 3494, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3858)),
    /* 4500 */ element!(MaximumSegmentLengthRequest, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(3856)),
    /* 4501 */ element!(MaximumSegmentLengthRequest, 3494, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3856)),
    /* 4502 */ element!(MaximumSegmentLengthResponse, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(3857)),
    /* 4503 */ element!(MaximumSegmentLengthResponse, 3494, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3857)),
    /* 4504 */ element!(MaximumSelectedBindingTime, 282, ZeroOrOne, false, 0x0, NotRestricted, Some(500)),
    /* 4505 */ element!(MaximumSupportedUcmMasterVersion, 3721, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3939)),
    /* 4506 */ element!(MaximumSupportedUcmVersion, 3721, ZeroOrOne, false, 0x0, NotRestricted, Some(3940)),
    /* 4507 */ element!(MaximumTransmissionUnit, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(3986)),
    /* 4508 */ element!(MaximumTransmissionUnit, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(4240)),
    /* 4509 */ element!(MaximumTransmitBufferLength, 2642, ZeroOrOne, false, 0x0, NotRestricted, Some(912)),
    /* 4510 */ element!(MayBeUnconnected, 298, ZeroOrOne, false, 0x0, ClassicPlatform, Some(1230)),
    /* 4511 */ element!(McDataAccessDetails, 2927, ZeroOrOne, false, 0x0, NotRestricted, Some(2259)),
    /* 4512 */ element!(McDataAssignments, 2932, ZeroOrOne, false, 0x0, NotRestricted, Some(132)),
    /* 4513 */ element!(McDataAssignments, 3766, ZeroOrOne, false, 0x0, NotRestricted, Some(2023)),
    /* 4514 */ element!(McDataAssignments, 3766, ZeroOrOne, false, 0x0, NotRestricted, Some(2024)),
    /* 4515 */ element!(McDataInstance, 2930, One, false, 0x0, NotRestricted, None),
    /* 4516 */ element!(McDataInstanceRef, 2947, One, false, 0x0, NotRestricted, None),
    /* 4517 */ element!(McDataInstanceRef, 3729, One, false, 0x0, NotRestricted, None),
    /* 4518 */ element!(McDataInstanceRef, 4445, ZeroOrOne, false, 0x0, NotRestricted, Some(5176)),
    /* 4519 */ element!(McDataInstanceRefs, 2948, ZeroOrOne, false, 0x1FE000, NotRestricted, Some(2261)),
    /* 4520 */ element!(McDataInstanceRefs, 3730, ZeroOrOne, false, 0x1FFFC0, NotRestricted, Some(2261)),
    /* 4521 */ element!(McDataInstanceRefs, 3730, ZeroOrOne, false, 0x0, NotRestricted, Some(3149)),
    /* 4522 */ element!(McDataInstanceVarRef, 4445, ZeroOrOne, false, 0x0, NotRestricted, Some(5177)),
    /* 4523 */ element!(McFunction, 2500, ZeroOrOne, false, 0x0, NotRestricted, Some(2573)),
    /* 4524 */ element!(McFunction, 2934, One, false, 0x0, NotRestricted, None),
    /* 4525 */ element!(McFunctionDataRefSetConditional, 2936, One, false, 0x0, NotRestricted, None),
    /* 4526 */ element!(McFunctionDataRefSetVariants, 2939, ZeroOrOne, false, 0x1F0000, NotRestricted, Some(4408)),
    /* 4527 */ element!(McFunctionRef, 2950, One, false, 0x0, NotRestricted, None),
    /* 4528 */ element!(McFunctionRefs, 2951, ZeroOrOne, false, 0x1FE000, NotRestricted, Some(25)),
    /* 4529 */ element!(McGroup, 2942, One, false, 0x0, NotRestricted, None),
    /* 4530 */ element!(McGroupDataRefSetConditional, 2944, One, false, 0x0, NotRestricted, None),
    /* 4531 */ element!(McGroupDataRefSetVariants, 2949, ZeroOrOne, false, 0x1F0000, NotRestricted, Some(4408)),
    /* 4532 */ element!(McParameterElementGroup, 2954, One, false, 0x0, NotRestricted, None),
    /* 4533 */ element!(McParameterInstances, 2933, ZeroOrOne, false, 0x1FFFF8, NotRestricted, Some(36)),
    /* 4534 */ element!(McSupport, 2955, ZeroOrOne, false, 0x1FFFFF, ClassicPlatform, Some(2974)),
    /* 4535 */ element!(McSwEmulationMethodSupport, 2958, One, false, 0x0, NotRestricted, None),
    /* 4536 */ element!(McVariableInstances, 2933, ZeroOrOne, false, 0x1FFFF8, NotRestricted, Some(37)),
    /* 4537 */ element!(McdIdentifier, 4393, ZeroOrOne, false, 0x0, NotRestricted, Some(4042)),
    /* 4538 */ element!(MeasurableSystemConstantValuesRef, 3510, One, false, 0x0, NotRestricted, None),
    /* 4539 */ element!(MeasurableSystemConstantValuesRefs, 2957, ZeroOrOne, false, 0x0, NotRestricted, Some(2393)),
    /* 4540 */ element!(MeasuredExecutionTime, 2961, One, false, 0x0, NotRestricted, None),
    /* 4541 */ element!(MeasuredHeapUsage, 2962, One, false, 0x0, NotRestricted, None),
    /* 4542 */ element!(MeasuredStackUsage, 2963, One, false, 0x0, NotRestricted, None),
    /* 4543 */ element!(MemAlignment, 2642, ZeroOrOne, false, 0x0, NotRestricted, Some(6022)),
    /* 4544 */ element!(MemAlignment, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(3841)),
    /* 4545 */ element!(MemClassSymbol, 475, ZeroOrOne, false, 0x0, NotRestricted, Some(495)),
    /* 4546 */ element!(MemUsage, 3494, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(1510)),
    /* 4547 */ element!(MemoryAllocationKeywordPolicy, 2964, ZeroOrOne, false, 0x0, NotRestricted, Some(992)),
    /* 4548 */ element!(MemoryConsumption, 3494, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(1773)),
    /* 4549 */ element!(MemoryConsumption, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(2312)),
    /* 4550 */ element!(MemoryConsumption, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(2313)),
    /* 4551 */ element!(MemoryConsumption, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(6015)),
    /* 4552 */ element!(MemoryConsumption, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(6016)),
    /* 4553 */ element!(MemoryDestinationRef, 1412, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(2116)),
    /* 4554 */ element!(MemoryDestinationRef, 1658, One, false, 0x0, NotRestricted, None),
    /* 4555 */ element!(MemoryDestinationRefs, 1659, ZeroOrOne, false, 0x0, NotRestricted, Some(2858)),
    /* 4556 */ element!(MemoryEntryStorageTrigger, 1416, ZeroOrOne, false, 0x0, NotRestricted, Some(895)),
    /* 4557 */ element!(MemoryEntryStorageTrigger, 1416, ZeroOrOne, false, 0x0, NotRestricted, Some(899)),
    /* 4558 */ element!(MemoryHighAddress, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(5758)),
    /* 4559 */ element!(MemoryHighAddressLabel, 4393, ZeroOrOne, false, 0x0, NotRestricted, Some(5380)),
    /* 4560 */ element!(MemoryId, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(5624)),
    /* 4561 */ element!(MemoryLowAddress, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(5634)),
    /* 4562 */ element!(MemoryLowAddressLabel, 4393, ZeroOrOne, false, 0x0, NotRestricted, Some(5379)),
    /* 4563 */ element!(MemoryRangeRef, 1408, One, false, 0x0, NotRestricted, None),
    /* 4564 */ element!(MemoryRangeRefs, 1409, ZeroOrOne, false, 0x0, NotRestricted, Some(5616)),
    /* 4565 */ element!(MemorySection, 2965, One, false, 0x0, NotRestricted, None),
    /* 4566 */ element!(MemorySectionLocation, 2968, One, false, 0x0, NotRestricted, None),
    /* 4567 */ element!(MemorySectionLocations, 2122, ZeroOrOne, false, 0x0, NotRestricted, Some(1776)),
    /* 4568 */ element!(MemorySections, 3682, ZeroOrOne, false, 0x1FFF80, ClassicPlatform, Some(128)),
    /* 4569 */ element!(MemoryUsage, 2974, One, false, 0x0, NotRestricted, None),
    /* 4570 */ element!(MemoryUsages, 3683, ZeroOrOne, false, 0x1C0000, AdaptivePlatform, Some(335)),
    /* 4571 */ element!(MessageCompliance, 2003, ZeroOrOne, false, 0x0, NotRestricted, Some(599)),
    /* 4572 */ element!(MessageId, 3494, ZeroOrOne, false, 0x0, ClassicPlatform, Some(1512)),
    /* 4573 */ element!(MessageId, 3494, ZeroOrOne, false, 0x0, ClassicPlatform, Some(1513)),
    /* 4574 */ element!(MessageId, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(2891)),
    /* 4575 */ element!(MessageId, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(3782)),
    /* 4576 */ element!(MessageLineNumber, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(3872)),
    /* 4577 */ element!(MessageLinkLength, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(2328)),
    /* 4578 */ element!(MessageLinkPosition, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(2329)),
    /* 4579 */ element!(MessageSourceFile, 4393, ZeroOrOne, false, 0x0, NotRestricted, Some(3877)),
    /* 4580 */ element!(MessageType, 2564, ZeroOrOne, false, 0x0, NotRestricted, Some(818)),
    /* 4581 */ element!(MessageType, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(1036)),
    /* 4582 */ element!(MessageType, 4248, ZeroOrOne, false, 0x0, NotRestricted, Some(2725)),
    /* 4583 */ element!(MessageTypeInfo, 4393, ZeroOrOne, false, 0x0, NotRestricted, Some(3865)),
    /* 4584 */ element!(MetaDataFields, 788, ZeroOrOne, false, 0x0, ClassicPlatform, Some(3289)),
    /* 4585 */ element!(MetaDataItem, 2976, One, false, 0x0, NotRestricted, None),
    /* 4586 */ element!(MetaDataItemSet, 2977, One, false, 0x0, NotRestricted, None),
    /* 4587 */ element!(MetaDataItemSets, 3953, ZeroOrOne, false, 0x0, NotRestricted, Some(3274)),
    /* 4588 */ element!(MetaDataItemType, 4757, ZeroOrOne, false, 0x0, NotRestricted, Some(3272)),
    /* 4589 */ element!(MetaDataItems, 2980, ZeroOrOne, true, 0x0, NotRestricted, Some(3414)),
    /* 4590 */ element!(MetaDataLength, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(1604)),
    /* 4591 */ element!(MetadataProtectionKind, 1056, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(602)),
    /* 4592 */ element!(MethodActivationRoutingGroups, 2074, ZeroOrOne, false, 0x180000, NotRestricted, Some(2751)),
    /* 4593 */ element!(MethodActivationRoutingGroups, 2074, ZeroOrOne, false, 0x1C0000, NotRestricted, Some(2751)),
    /* 4594 */ element!(MethodCallRef, 4020, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(1926)),
    /* 4595 */ element!(MethodCallRef, 4875, One, false, 0x0, NotRestricted, None),
    /* 4596 */ element!(MethodCallRefs, 4876, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5681)),
    /* 4597 */ element!(MethodDeployments, 3610, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3290)),
    /* 4598 */ element!(MethodDeployments, 4016, ZeroOrOne, false, 0x0, NotRestricted, Some(1517)),
    /* 4599 */ element!(MethodDeployments, 4016, ZeroOrOne, false, 0x180000, AdaptivePlatform, Some(1517)),
    /* 4600 */ element!(MethodId, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(1037)),
    /* 4601 */ element!(MethodId, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(5935)),
    /* 4602 */ element!(MethodId, 3494, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5935)),
    /* 4603 */ element!(MethodIref, 3667, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5105)),
    /* 4604 */ element!(MethodMapping, 2982, One, false, 0x0, NotRestricted, None),
    /* 4605 */ element!(MethodMapping, 4068, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(1433)),
    /* 4606 */ element!(MethodMappings, 2649, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(1424)),
    /* 4607 */ element!(MethodMappings, 4006, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(1433)),
    /* 4608 */ element!(MethodQosPropss, 1061, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(1388)),
    /* 4609 */ element!(MethodQosPropss, 1061, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(1390)),
    /* 4610 */ element!(MethodRef, 1052, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(2210)),
    /* 4611 */ element!(MethodRef, 1611, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5058)),
    /* 4612 */ element!(MethodRef, 1957, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(1932)),
    /* 4613 */ element!(MethodRef, 2144, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(1850)),
    /* 4614 */ element!(MethodRef, 2148, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(1850)),
    /* 4615 */ element!(MethodRef, 2983, One, false, 0x0, NotRestricted, None),
    /* 4616 */ element!(MethodRef, 2983, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(1859)),
    /* 4617 */ element!(MethodRef, 3621, One, false, 0x0, NotRestricted, None),
    /* 4618 */ element!(MethodRef, 4046, ZeroOrOne, false, 0x0, NotRestricted, Some(1931)),
    /* 4619 */ element!(MethodRef, 4046, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(1931)),
    /* 4620 */ element!(MethodRef, 4069, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(1927)),
    /* 4621 */ element!(MethodRef, 4252, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(2208)),
    /* 4622 */ element!(MethodRef, 4725, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(2975)),
    /* 4623 */ element!(MethodRefs, 3622, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5134)),
    /* 4624 */ element!(MethodRefs, 4877, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5683)),
    /* 4625 */ element!(MethodReplyTopicName, 4393, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(1565)),
    /* 4626 */ element!(MethodRequestPropss, 3674, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(400)),
    /* 4627 */ element!(MethodRequestTopicName, 4393, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(1567)),
    /* 4628 */ element!(MethodResponsePropss, 3674, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(399)),
    /* 4629 */ element!(MethodReturnRef, 4020, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(1928)),
    /* 4630 */ element!(MethodReturnRef, 4875, One, false, 0x0, NotRestricted, None),
    /* 4631 */ element!(MethodReturnRefs, 4878, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5682)),
    /* 4632 */ element!(MethodTopicsAccessRuleRef, 1034, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(445)),
    /* 4633 */ element!(Methods, 4032, ZeroOrOne, false, 0x1C0000, AdaptivePlatform, Some(5563)),
    /* 4634 */ element!(MicroInitialOffsetA, 2642, ZeroOrOne, false, 0x0, NotRestricted, Some(1621)),
    /* 4635 */ element!(MicroInitialOffsetB, 2642, ZeroOrOne, false, 0x0, NotRestricted, Some(1622)),
    /* 4636 */ element!(MicroPerCycle, 2642, ZeroOrOne, false, 0x0, NotRestricted, Some(3000)),
    /* 4637 */ element!(MicrotickDuration, 2229, ZeroOrOne, false, 0x0, NotRestricted, Some(931)),
    /* 4638 */ element!(MicrotickDuration, 5077, ZeroOrOne, false, 0x0, NotRestricted, Some(931)),
    /* 4639 */ element!(Min, 2231, ZeroOrOne, false, 0x0, ClassicPlatform, Some(1521)),
    /* 4640 */ element!(Min, 2642, ZeroOrOne, false, 0x0, NotRestricted, Some(5963)),
    /* 4641 */ element!(Min, 2780, ZeroOrOne, false, 0x0, ClassicPlatform, Some(1521)),
    /* 4642 */ element!(Min, 2781, ZeroOrOne, false, 0x0, NotRestricted, Some(1540)),
    /* 4643 */ element!(Min, 2781, ZeroOrOne, false, 0x0, NotRestricted, Some(2547)),
    /* 4644 */ element!(Min, 2781, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3695)),
    /* 4645 */ element!(Min, 3140, ZeroOrOne, false, 0x0, NotRestricted, Some(5770)),
    /* 4646 */ element!(Min, 3494, ZeroOrOne, false, 0x0, ClassicPlatform, Some(1089)),
    /* 4647 */ element!(Min, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(1122)),
    /* 4648 */ element!(Min, 3494, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(1401)),
    /* 4649 */ element!(MinAliveCycle, 2229, ZeroOrOne, false, 0x0, NotRestricted, Some(1531)),
    /* 4650 */ element!(MinAliveCycle, 5077, ZeroOrOne, false, 0x0, NotRestricted, Some(1530)),
    /* 4651 */ element!(MinDataLength, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(1535)),
    /* 4652 */ element!(MinDataLength, 3494, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(1536)),
    /* 4653 */ element!(MinDeadline, 2229, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(686)),
    /* 4654 */ element!(MinDestinationPortNumber, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(1090)),
    /* 4655 */ element!(MinHeaderId, 2642, ZeroOrOne, false, 0x0, NotRestricted, Some(2565)),
    /* 4656 */ element!(MinLength, 3494, ZeroOrOne, false, 0x0, ClassicPlatform, Some(1520)),
    /* 4657 */ element!(MinLength, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(2563)),
    /* 4658 */ element!(MinMajorVersion, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(1026)),
    /* 4659 */ element!(MinMargin, 3494, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(589)),
    /* 4660 */ element!(MinMinorVersion, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(1028)),
    /* 4661 */ element!(MinNumberOfElements, 2231, ZeroOrOne, false, 0x0, NotRestricted, Some(1538)),
    /* 4662 */ element!(MinNumberOfOccurrences, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(2983)),
    /* 4663 */ element!(MinNumberOfTimeQuantaPerBit, 2642, ZeroOrOne, false, 0x0, NotRestricted, Some(1539)),
    /* 4664 */ element!(MinOkStateInit, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(1522)),
    /* 4665 */ element!(MinOkStateInit, 3494, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(1522)),
    /* 4666 */ element!(MinOkStateInit, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(1523)),
    /* 4667 */ element!(MinOkStateInvalid, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(1524)),
    /* 4668 */ element!(MinOkStateInvalid, 3494, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(1524)),
    /* 4669 */ element!(MinOkStateInvalid, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(1525)),
    /* 4670 */ element!(MinOkStateValid, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(1526)),
    /* 4671 */ element!(MinOkStateValid, 3494, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(1526)),
    /* 4672 */ element!(MinOkStateValid, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(1527)),
    /* 4673 */ element!(MinPwmL, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(2566)),
    /* 4674 */ element!(MinPwmO, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(2553)),
    /* 4675 */ element!(MinPwmS, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(2567)),
    /* 4676 */ element!(MinRptEventId, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(1404)),
    /* 4677 */ element!(MinSamplePoint, 2229, ZeroOrOne, false, 0x0, NotRestricted, Some(2978)),
    /* 4678 */ element!(MinSamplePoint, 5077, ZeroOrOne, false, 0x0, NotRestricted, Some(2978)),
    /* 4679 */ element!(MinServicePointId, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(1405)),
    /* 4680 */ element!(MinSourcePortNumber, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(1091)),
    /* 4681 */ element!(MinSyncJumpWidth, 2229, ZeroOrOne, false, 0x0, NotRestricted, Some(2977)),
    /* 4682 */ element!(MinSyncJumpWidth, 5077, ZeroOrOne, false, 0x0, NotRestricted, Some(2977)),
    /* 4683 */ element!(MinTrcvDelayCompensationOffset, 2229, ZeroOrOne, false, 0x0, NotRestricted, Some(2569)),
    /* 4684 */ element!(MinValue, 2229, ZeroOrOne, false, 0x0, NotRestricted, Some(1529)),
    /* 4685 */ element!(Minimum, 3068, ZeroOrOne, false, 0x0, NotRestricted, Some(2976)),
    /* 4686 */ element!(Minimum, 3068, ZeroOrOne, false, 0x0, ClassicPlatform, Some(2979)),
    /* 4687 */ element!(Minimum, 3068, ZeroOrOne, false, 0x0, NotRestricted, Some(2981)),
    /* 4688 */ element!(Minimum, 3068, ZeroOrOne, false, 0x0, NotRestricted, Some(3055)),
    /* 4689 */ element!(MinimumDelay, 2229, ZeroOrOne, false, 0x0, NotRestricted, Some(1528)),
    /* 4690 */ element!(MinimumDelay, 5077, ZeroOrOne, false, 0x0, NotRestricted, Some(1528)),
    /* 4691 */ element!(MinimumDistances, 692, ZeroOrOne, false, 0x0, NotRestricted, Some(3003)),
    /* 4692 */ element!(MinimumExecutionTime, 3068, ZeroOrOne, false, 0x0, NotRestricted, Some(2982)),
    /* 4693 */ element!(MinimumExecutionTime, 3068, ZeroOrOne, false, 0x0, NotRestricted, Some(2985)),
    /* 4694 */ element!(MinimumFifoLength, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(1013)),
    /* 4695 */ element!(MinimumIntendedBindingTime, 282, ZeroOrOne, false, 0x0, NotRestricted, Some(486)),
    /* 4696 */ element!(MinimumInterArrivalTime, 3068, ZeroOrOne, false, 0x0, NotRestricted, Some(2570)),
    /* 4697 */ element!(MinimumInterArrivalTime, 3068, ZeroOrOne, false, 0x0, NotRestricted, Some(2987)),
    /* 4698 */ element!(MinimumInterArrivalTime, 3068, ZeroOrOne, false, 0x0, NotRestricted, Some(2988)),
    /* 4699 */ element!(MinimumIntervalLength, 2229, ZeroOrOne, false, 0x0, NotRestricted, Some(4119)),
    /* 4700 */ element!(MinimumMemoryConsumption, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(2980)),
    /* 4701 */ element!(MinimumMemoryConsumption, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(2986)),
    /* 4702 */ element!(MinimumMulticastSeperationTime, 2229, ZeroOrOne, false, 0x0, NotRestricted, Some(3710)),
    /* 4703 */ element!(MinimumNumberOfRequests, 3494, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(2984)),
    /* 4704 */ element!(MinimumRxContainerQueueSize, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(3712)),
    /* 4705 */ element!(MinimumSelectedBindingTime, 282, ZeroOrOne, false, 0x0, NotRestricted, Some(485)),
    /* 4706 */ element!(MinimumSendInterval, 2229, ZeroOrOne, false, 0x0, NotRestricted, Some(3711)),
    /* 4707 */ element!(MinimumSeparationTime, 2229, ZeroOrOne, false, 0x0, NotRestricted, Some(3709)),
    /* 4708 */ element!(MinimumStartInterval, 2229, ZeroOrOne, false, 0x0, NotRestricted, Some(2602)),
    /* 4709 */ element!(MinimumStartInterval, 5077, ZeroOrOne, false, 0x0, NotRestricted, Some(2602)),
    /* 4710 */ element!(MinimumSupportedUcmMasterVersion, 3721, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3941)),
    /* 4711 */ element!(MinimumSupportedUcmVersion, 3721, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3942)),
    /* 4712 */ element!(MinimumSustainedSize, 3494, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3183)),
    /* 4713 */ element!(MinimumSustainedSize, 3494, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3184)),
    /* 4714 */ element!(MinimumSustainedSize, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(3185)),
    /* 4715 */ element!(MinimumSustainedSize, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(3186)),
    /* 4716 */ element!(MinimumTimerGranularity, 2229, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3866)),
    /* 4717 */ element!(MinimumTxContainerQueueSize, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(3713)),
    /* 4718 */ element!(MinislotActionPointOffset, 2642, ZeroOrOne, false, 0x0, NotRestricted, Some(2729)),
    /* 4719 */ element!(MinislotDuration, 2642, ZeroOrOne, false, 0x0, NotRestricted, Some(2843)),
    /* 4720 */ element!(MinorProtocolVersion, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(1021)),
    /* 4721 */ element!(MinorVersion, 84, ZeroOrOne, false, 0x0, NotRestricted, Some(1546)),
    /* 4722 */ element!(MinorVersion, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(1543)),
    /* 4723 */ element!(MinorVersion, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(1544)),
    /* 4724 */ element!(MinorVersion, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(1545)),
    /* 4725 */ element!(MinorVersion, 3494, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(1548)),
    /* 4726 */ element!(MinorVersion, 3494, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(2378)),
    /* 4727 */ element!(MirrorSourceLinToCanRangeBaseId, 3494, ZeroOrOne, false, 0x0, ClassicPlatform, Some(188)),
    /* 4728 */ element!(MirrorStatusCanId, 3494, ZeroOrOne, false, 0x0, ClassicPlatform, Some(217)),
    /* 4729 */ element!(MirroringProtocol, 2984, ZeroOrOne, false, 0x0, ClassicPlatform, Some(3662)),
    /* 4730 */ element!(MixedBusTypeCollection, 298, ZeroOrOne, false, 0x0, NotRestricted, Some(525)),
    /* 4731 */ element!(MkaParticipantRef, 2889, One, false, 0x0, NotRestricted, None),
    /* 4732 */ element!(MkaParticipantRefs, 2890, ZeroOrOne, false, 0x0, NotRestricted, Some(1810)),
    /* 4733 */ element!(MkaParticipants, 2893, ZeroOrOne, false, 0x0, NotRestricted, Some(369)),
    /* 4734 */ element!(MlGraphic, 2988, Any, false, 0x0, NotRestricted, None),
    /* 4735 */ element!(Mode, 2456, ZeroOrOne, false, 0x0, NotRestricted, Some(3779)),
    /* 4736 */ element!(ModeAccessPoint, 2989, One, false, 0x0, NotRestricted, None),
    /* 4737 */ element!(ModeAccessPoints, 3824, ZeroOrOne, false, 0x1FFF00, NotRestricted, Some(3107)),
    /* 4738 */ element!(ModeCondition, 2394, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(788)),
    /* 4739 */ element!(ModeCondition, 2395, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(788)),
    /* 4740 */ element!(ModeConditionRef, 4421, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(1825)),
    /* 4741 */ element!(ModeDeclaration, 2993, One, false, 0x0, NotRestricted, None),
    /* 4742 */ element!(ModeDeclarationGroup, 2994, One, false, 0x0, NotRestricted, None),
    /* 4743 */ element!(ModeDeclarationGroupPrototype, 2998, One, false, 0x0, NotRestricted, None),
    /* 4744 */ element!(ModeDeclarationGroupPrototypeIref, 2999, ZeroOrOne, false, 0x0, NotRestricted, Some(3112)),
    /* 4745 */ element!(ModeDeclarationGroupPrototypeIref, 3006, ZeroOrOne, false, 0x0, ClassicPlatform, Some(1551)),
    /* 4746 */ element!(ModeDeclarationGroupPrototypeRef, 3039, ZeroOrOne, false, 0x0, NotRestricted, None),
    /* 4747 */ element!(ModeDeclarationGroupPrototypeRefConditional, 3009, One, false, 0x0, NotRestricted, None),
    /* 4748 */ element!(ModeDeclarationGroupRef, 2622, One, false, 0x0, NotRestricted, None),
    /* 4749 */ element!(ModeDeclarationGroupRefs, 2623, ZeroOrOne, false, 0x0, NotRestricted, Some(5701)),
    /* 4750 */ element!(ModeDeclarationMapping, 3010, One, false, 0x0, NotRestricted, None),
    /* 4751 */ element!(ModeDeclarationMappingSet, 3012, One, false, 0x0, NotRestricted, None),
    /* 4752 */ element!(ModeDeclarationMappingSetRef, 3008, ZeroOrOne, false, 0x0, NotRestricted, Some(5519)),
    /* 4753 */ element!(ModeDeclarationMappings, 3013, ZeroOrOne, false, 0x0, NotRestricted, Some(5541)),
    /* 4754 */ element!(ModeDeclarationRef, 2398, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(2118)),
    /* 4755 */ element!(ModeDeclarationRef, 3039, ZeroOrOne, false, 0x0, ClassicPlatform, Some(3112)),
    /* 4756 */ element!(ModeDeclarationRef, 4704, One, false, 0x0, NotRestricted, None),
    /* 4757 */ element!(ModeDeclarationRef, 4705, ZeroOrOne, false, 0x0, NotRestricted, Some(3081)),
    /* 4758 */ element!(ModeDeclarationRef, 4912, One, false, 0x0, NotRestricted, None),
    /* 4759 */ element!(ModeDeclarationRefs, 3022, ZeroOrOne, false, 0x0, NotRestricted, Some(2016)),
    /* 4760 */ element!(ModeDeclarationRefs, 4913, ZeroOrOne, false, 0x0, NotRestricted, Some(2017)),
    /* 4761 */ element!(ModeDeclarations, 2996, ZeroOrOne, false, 0x1C0000, NotRestricted, Some(2727)),
    /* 4762 */ element!(ModeDependentStartupConfig, 3014, One, false, 0x0, NotRestricted, None),
    /* 4763 */ element!(ModeDependentStartupConfigs, 3540, ZeroOrOne, false, 0x0, NotRestricted, Some(156)),
    /* 4764 */ element!(ModeDrivenFalseConditions, 4900, ZeroOrOne, false, 0x0, NotRestricted, Some(707)),
    /* 4765 */ element!(ModeDrivenTransmissionModeCondition, 3021, One, false, 0x0, NotRestricted, None),
    /* 4766 */ element!(ModeDrivenTrueConditions, 4900, ZeroOrOne, false, 0x0, NotRestricted, Some(708)),
    /* 4767 */ element!(ModeElementRef, 1281, ZeroOrOne, false, 0x0, NotRestricted, Some(5207)),
    /* 4768 */ element!(ModeElements, 1284, ZeroOrOne, false, 0x0, NotRestricted, Some(3268)),
    /* 4769 */ element!(ModeGroup, 2998, ZeroOrOne, false, 0x0, NotRestricted, Some(2726)),
    /* 4770 */ element!(ModeGroupIref, 2991, ZeroOrOne, false, 0x0, NotRestricted, Some(2989)),
    /* 4771 */ element!(ModeGroupIref, 3196, ZeroOrOne, false, 0x0, NotRestricted, Some(2990)),
    /* 4772 */ element!(ModeGroupIref, 3196, ZeroOrOne, false, 0x0, NotRestricted, Some(5454)),
    /* 4773 */ element!(ModeGroupRef, 379, ZeroOrOne, false, 0x0, NotRestricted, Some(5453)),
    /* 4774 */ element!(ModeGroupRef, 3039, ZeroOrOne, false, 0x0, NotRestricted, Some(48)),
    /* 4775 */ element!(ModeGroupRef, 3039, ZeroOrOne, false, 0x0, NotRestricted, Some(1550)),
    /* 4776 */ element!(ModeGroupRef, 3039, ZeroOrOne, false, 0x0, NotRestricted, Some(2908)),
    /* 4777 */ element!(ModeGroupRef, 3041, ZeroOrOne, false, 0x0, NotRestricted, Some(4780)),
    /* 4778 */ element!(ModeGroupRef, 3047, ZeroOrOne, false, 0x0, NotRestricted, Some(1550)),
    /* 4779 */ element!(ModeGroupRef, 4359, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5009)),
    /* 4780 */ element!(ModeInBswInstanceRef, 3025, One, false, 0x0, NotRestricted, None),
    /* 4781 */ element!(ModeInSwcInstanceRef, 3034, One, false, 0x0, NotRestricted, None),
    /* 4782 */ element!(ModeInstance, 4804, ZeroOrOne, false, 0x0, NotRestricted, Some(5303)),
    /* 4783 */ element!(ModeInterfaceMapping, 3037, One, false, 0x0, NotRestricted, None),
    /* 4784 */ element!(ModeIref, 3027, One, false, 0x0, NotRestricted, None),
    /* 4785 */ element!(ModeIref, 3027, ZeroOrOne, false, 0x0, NotRestricted, Some(4979)),
    /* 4786 */ element!(ModeIref, 3197, ZeroOrOne, false, 0x0, NotRestricted, Some(4980)),
    /* 4787 */ element!(ModeIref, 3591, One, false, 0x0, NotRestricted, None),
    /* 4788 */ element!(ModeIrefs, 384, ZeroOrOne, true, 0x0, NotRestricted, Some(2019)),
    /* 4789 */ element!(ModeIrefs, 4534, ZeroOrOne, true, 0x0, NotRestricted, Some(3088)),
    /* 4790 */ element!(ModeManagerErrorBehavior, 3023, ZeroOrOne, false, 0x0, ClassicPlatform, Some(5475)),
    /* 4791 */ element!(ModeMapping, 3007, ZeroOrOne, false, 0x0, NotRestricted, Some(1443)),
    /* 4792 */ element!(ModePortAnnotation, 3038, One, false, 0x0, NotRestricted, None),
    /* 4793 */ element!(ModePortAnnotations, 3487, ZeroOrOne, false, 0x0, NotRestricted, Some(151)),
    /* 4794 */ element!(ModeReceiverPolicys, 357, ZeroOrOne, false, 0x1FFF80, NotRestricted, Some(1272)),
    /* 4795 */ element!(ModeRef, 4789, One, false, 0x0, NotRestricted, Some(4752)),
    /* 4796 */ element!(ModeReporterPortIref, 3596, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(1934)),
    /* 4797 */ element!(ModeRequestTypeMap, 3040, One, false, 0x0, NotRestricted, None),
    /* 4798 */ element!(ModeRequestTypeMaps, 1000, ZeroOrOne, false, 0x0, NotRestricted, Some(4747)),
    /* 4799 */ element!(ModeSenderPolicys, 358, ZeroOrOne, false, 0x1FFF80, NotRestricted, Some(1271)),
    /* 4800 */ element!(ModeSwitchEventTriggeredActivity, 3042, One, false, 0x0, NotRestricted, None),
    /* 4801 */ element!(ModeSwitchEventTriggeredActivitys, 3145, ZeroOrOne, false, 0x1FFF00, ClassicPlatform, Some(5542)),
    /* 4802 */ element!(ModeSwitchInterface, 3044, One, false, 0x0, NotRestricted, None),
    /* 4803 */ element!(ModeSwitchPoint, 3045, One, false, 0x0, NotRestricted, None),
    /* 4804 */ element!(ModeSwitchPoints, 3825, ZeroOrOne, false, 0x1FFF00, NotRestricted, Some(3108)),
    /* 4805 */ element!(ModeSwitchReceiverComSpec, 3046, One, false, 0x0, NotRestricted, None),
    /* 4806 */ element!(ModeSwitchSenderComSpec, 3048, One, false, 0x0, NotRestricted, None),
    /* 4807 */ element!(ModeSwitchedAck, 3051, ZeroOrOne, false, 0x0, NotRestricted, Some(1244)),
    /* 4808 */ element!(ModeSwitchedAckEvent, 3049, One, false, 0x0, NotRestricted, None),
    /* 4809 */ element!(ModeTransition, 3052, One, false, 0x0, NotRestricted, None),
    /* 4810 */ element!(ModeTransitions, 2997, ZeroOrOne, false, 0x0, ClassicPlatform, Some(5520)),
    /* 4811 */ element!(ModeUserErrorBehavior, 3023, ZeroOrOne, false, 0x0, ClassicPlatform, Some(5596)),
    /* 4812 */ element!(ModelObjectReference, 2329, ZeroOrOne, false, 0x0, NotRestricted, Some(4719)),
    /* 4813 */ element!(Modes, 4712, ZeroOrOne, false, 0x0, NotRestricted, Some(142)),
    /* 4814 */ element!(Modification, 3054, One, false, 0x0, NotRestricted, None),
    /* 4815 */ element!(Modification, 4568, ZeroOrOne, false, 0x0, ClassicPlatform, Some(644)),
    /* 4816 */ element!(Modifications, 1797, ZeroOrOne, false, 0x0, NotRestricted, Some(4901)),
    /* 4817 */ element!(ModifiedDatas, 439, ZeroOrOne, false, 0x0, NotRestricted, Some(4327)),
    /* 4818 */ element!(ModuleDescriptionRef, 1908, ZeroOrOne, false, 0x0, ClassicPlatform, Some(2257)),
    /* 4819 */ element!(ModuleId, 3494, ZeroOrOne, false, 0x0, ClassicPlatform, Some(2266)),
    /* 4820 */ element!(ModuleInstantiationRef, 2312, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(2032)),
    /* 4821 */ element!(ModuleInstantiationRef, 4199, One, false, 0x0, NotRestricted, None),
    /* 4822 */ element!(ModuleInstantiationRefs, 4200, ZeroOrOne, false, 0x1FE000, AdaptivePlatform, Some(4975)),
    /* 4823 */ element!(ModuleInstantiations, 2915, ZeroOrOne, false, 0x1FC000, AdaptivePlatform, Some(358)),
    /* 4824 */ element!(ModuleRef, 1880, One, false, 0x0, NotRestricted, None),
    /* 4825 */ element!(ModuleRefs, 1881, ZeroOrOne, false, 0x0, ClassicPlatform, Some(2250)),
    /* 4826 */ element!(MolarAmountExp, 3140, ZeroOrOne, false, 0x0, NotRestricted, Some(2884)),
    /* 4827 */ element!(MonitoredIdentifierRef, 1636, ZeroOrOne, false, 0x0, NotRestricted, Some(4162)),
    /* 4828 */ element!(Monotony, 3055, ZeroOrOne, false, 0x0, NotRestricted, Some(4241)),
    /* 4829 */ element!(Monotony, 3055, ZeroOrOne, false, 0x0, NotRestricted, Some(4402)),
    /* 4830 */ element!(Monotony, 3055, ZeroOrOne, false, 0x0, NotRestricted, Some(5810)),
    /* 4831 */ element!(MoreFragments, 298, ZeroOrOne, false, 0x0, NotRestricted, Some(1058)),
    /* 4832 */ element!(MsgIdMask, 2642, ZeroOrOne, false, 0x0, NotRestricted, Some(1011)),
    /* 4833 */ element!(MsgIdMatch, 2642, ZeroOrOne, false, 0x0, NotRestricted, Some(1012)),
    /* 4834 */ element!(MsrQueryArg, 3056, Any, false, 0x0, NotRestricted, Some(4397)),
    /* 4835 */ element!(MsrQueryChapter, 3057, One, false, 0x0, NotRestricted, Some(5400)),
    /* 4836 */ element!(MsrQueryName, 4393, ZeroOrOne, false, 0x0, NotRestricted, Some(4403)),
    /* 4837 */ element!(MsrQueryName, 5078, ZeroOrOne, false, 0x0, NotRestricted, Some(4403)),
    /* 4838 */ element!(MsrQueryP1, 3058, One, false, 0x0, NotRestricted, Some(5402)),
    /* 4839 */ element!(MsrQueryP2, 3059, One, false, 0x0, NotRestricted, Some(5401)),
    /* 4840 */ element!(MsrQueryProps, 3060, ZeroOrOne, false, 0x0, NotRestricted, Some(4730)),
    /* 4841 */ element!(MsrQueryProps, 3060, ZeroOrOne, false, 0x0, NotRestricted, Some(4731)),
    /* 4842 */ element!(MsrQueryProps, 3060, ZeroOrOne, false, 0x0, NotRestricted, Some(4732)),
    /* 4843 */ element!(MsrQueryProps, 3060, ZeroOrOne, false, 0x0, NotRestricted, Some(4733)),
    /* 4844 */ element!(MsrQueryResultChapter, 3061, ZeroOrOne, false, 0x0, NotRestricted, Some(5713)),
    /* 4845 */ element!(MsrQueryResultP1, 4852, ZeroOrOne, false, 0x0, NotRestricted, Some(5713)),
    /* 4846 */ element!(MsrQueryResultP2, 1803, ZeroOrOne, false, 0x0, NotRestricted, Some(5713)),
    /* 4847 */ element!(MsrQueryResultTopic1, 3062, ZeroOrOne, false, 0x0, NotRestricted, Some(5713)),
    /* 4848 */ element!(MsrQueryTopic1, 3063, One, false, 0x0, NotRestricted, Some(5403)),
    /* 4849 */ element!(MulticastConnectorRef, 4115, One, false, 0x0, NotRestricted, None),
    /* 4850 */ element!(MulticastConnectorRefs, 4116, ZeroOrOne, false, 0x180000, NotRestricted, Some(178)),
    /* 4851 */ element!(MulticastCredentials, 3613, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3387)),
    /* 4852 */ element!(MulticastCredentials, 3613, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3388)),
    /* 4853 */ element!(MulticastRef, 529, ZeroOrOne, false, 0x0, ClassicPlatform, Some(2669)),
    /* 4854 */ element!(MulticastRef, 2187, ZeroOrOne, false, 0x0, NotRestricted, Some(2669)),
    /* 4855 */ element!(MulticastRef, 2829, ZeroOrOne, false, 0x0, ClassicPlatform, Some(2669)),
    /* 4856 */ element!(MulticastSdIpAddressRef, 4279, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5136)),
    /* 4857 */ element!(MulticastSecureComPropsRef, 4280, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(1903)),
    /* 4858 */ element!(MulticastSegmentation, 298, ZeroOrOne, false, 0x0, NotRestricted, Some(3798)),
    /* 4859 */ element!(MulticastThreshold, 3494, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(2578)),
    /* 4860 */ element!(MulticastThreshold, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(2579)),
    /* 4861 */ element!(MulticastUdpPort, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(3838)),
    /* 4862 */ element!(MultipleConfigurationContainer, 298, ZeroOrOne, false, 0x0, ClassicPlatform, Some(2619)),
    /* 4863 */ element!(MultiplexedIPdu, 3070, One, false, 0x0, NotRestricted, None),
    /* 4864 */ element!(MultiplicityConfigClasses, 1874, ZeroOrOne, false, 0x0, ClassicPlatform, Some(2471)),
    /* 4865 */ element!(MultiplicityConfigClasses, 1874, ZeroOrOne, false, 0x0, ClassicPlatform, Some(2622)),
    /* 4866 */ element!(MultiplicityRestriction, 3074, ZeroOrOne, false, 0x0, NotRestricted, Some(1562)),
    /* 4867 */ element!(MultiplicityRestriction, 3074, ZeroOrOne, false, 0x0, NotRestricted, Some(2572)),
    /* 4868 */ element!(N, 3494, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(4071)),
    /* 4869 */ element!(N, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(4120)),
    /* 4870 */ element!(NDataSets, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(1617)),
    /* 4871 */ element!(NPdu, 3075, One, false, 0x0, NotRestricted, None),
    /* 4872 */ element!(NPduRef, 2748, One, false, 0x0, NotRestricted, None),
    /* 4873 */ element!(NPduRef, 4132, One, false, 0x0, NotRestricted, None),
    /* 4874 */ element!(NPduRef, 4132, ZeroOrOne, false, 0x0, NotRestricted, Some(2006)),
    /* 4875 */ element!(NPduRefs, 2171, ZeroOrOne, false, 0x0, NotRestricted, Some(23)),
    /* 4876 */ element!(NPduRefs, 2228, ZeroOrOne, false, 0x0, ClassicPlatform, Some(1811)),
    /* 4877 */ element!(NRomBlocks, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(1603)),
    /* 4878 */ element!(NaglesAlgorithm, 298, ZeroOrOne, false, 0x0, NotRestricted, Some(1303)),
    /* 4879 */ element!(Name, 1695, ZeroOrOne, false, 0x0, NotRestricted, Some(920)),
    /* 4880 */ element!(Name, 3659, ZeroOrOne, false, 0x0, NotRestricted, Some(2293)),
    /* 4881 */ element!(Name, 4393, ZeroOrOne, false, 0x0, NotRestricted, Some(352)),
    /* 4882 */ element!(Name, 4393, ZeroOrOne, false, 0x0, NotRestricted, Some(1374)),
    /* 4883 */ element!(Name, 5078, ZeroOrOne, false, 0x0, NotRestricted, Some(352)),
    /* 4884 */ element!(Name, 5078, ZeroOrOne, false, 0x0, NotRestricted, Some(1374)),
    /* 4885 */ element!(NameTokenValueVariationPoint, 3076, One, false, 0x0, NotRestricted, None),
    /* 4886 */ element!(NamedCurveId, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(717)),
    /* 4887 */ element!(Namespaces, 78, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3224)),
    /* 4888 */ element!(Namespaces, 78, ZeroOrOne, true, 0x0, AdaptivePlatform, Some(3224)),
    /* 4889 */ element!(Namespaces, 78, ZeroOrOne, true, 0x0, AdaptivePlatform, Some(3225)),
    /* 4890 */ element!(Namespaces, 89, ZeroOrOne, true, 0x0, AdaptivePlatform, Some(3279)),
    /* 4891 */ element!(Namespaces, 2608, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5630)),
    /* 4892 */ element!(Namespaces, 3465, ZeroOrOne, true, 0x8000, AdaptivePlatform, Some(5465)),
    /* 4893 */ element!(Namespaces, 3465, ZeroOrOne, true, 0xF000, AdaptivePlatform, Some(5465)),
    /* 4894 */ element!(Namespaces, 3465, ZeroOrOne, true, 0xFC00, AdaptivePlatform, Some(5465)),
    /* 4895 */ element!(Namespaces, 3465, ZeroOrOne, true, 0x18000, AdaptivePlatform, Some(5465)),
    /* 4896 */ element!(Namespaces, 3465, ZeroOrOne, true, 0x1FC00, AdaptivePlatform, Some(5465)),
    /* 4897 */ element!(Namespaces, 3465, ZeroOrOne, true, 0xC0000, AdaptivePlatform, Some(5465)),
    /* 4898 */ element!(Namespaces, 3465, ZeroOrOne, true, 0x100000, AdaptivePlatform, Some(5465)),
    /* 4899 */ element!(Namespaces, 3465, ZeroOrOne, true, 0x180000, AdaptivePlatform, Some(5465)),
    /* 4900 */ element!(Namespaces, 3465, ZeroOrOne, true, 0x1C0000, AdaptivePlatform, Some(5465)),
    /* 4901 */ element!(Namespaces, 3465, ZeroOrOne, true, 0x1E0000, AdaptivePlatform, Some(5465)),
    /* 4902 */ element!(Namespaces, 3465, ZeroOrOne, true, 0x1F0000, AdaptivePlatform, Some(5465)),
    /* 4903 */ element!(Namespaces, 3465, ZeroOrOne, true, 0x1F8000, AdaptivePlatform, Some(5465)),
    /* 4904 */ element!(Namespaces, 3465, ZeroOrOne, true, 0x1FC000, AdaptivePlatform, Some(5465)),
    /* 4905 */ element!(Namespaces, 3465, ZeroOrOne, true, 0x1FF000, AdaptivePlatform, Some(5465)),
    /* 4906 */ element!(Namespaces, 3465, ZeroOrOne, true, 0x1FFC00, AdaptivePlatform, Some(5465)),
    /* 4907 */ element!(Namespaces, 3465, ZeroOrOne, true, 0x1FFE00, AdaptivePlatform, Some(5465)),
    /* 4908 */ element!(NasTimeout, 2229, ZeroOrOne, false, 0x0, ClassicPlatform, Some(5959)),
    /* 4909 */ element!(NativeDeclaration, 3077, ZeroOrOne, false, 0x0, NotRestricted, Some(3845)),
    /* 4910 */ element!(NativeDeclaration, 3077, ZeroOrOne, false, 0x0, NotRestricted, Some(3846)),
    /* 4911 */ element!(NdpProps, 2713, ZeroOrOne, false, 0x0, NotRestricted, Some(396)),
    /* 4912 */ element!(NeedsOriginalData, 298, ZeroOrOne, false, 0x0, NotRestricted, Some(2620)),
    /* 4913 */ element!(NeighborCacheSize, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(4249)),
    /* 4914 */ element!(NestedContextDatas, 3897, ZeroOrOne, true, 0x0, NotRestricted, Some(5778)),
    /* 4915 */ element!(NestedElementRef, 1993, One, false, 0x0, NotRestricted, None),
    /* 4916 */ element!(NestedElementRefs, 1992, ZeroOrOne, true, 0x0, ClassicPlatform, Some(3474)),
    /* 4917 */ element!(NestedElements, 2427, ZeroOrOne, false, 0x1C0000, NotRestricted, Some(3475)),
    /* 4918 */ element!(NetworkConfiguration, 2037, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(1579)),
    /* 4919 */ element!(NetworkConfiguration, 4965, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(370)),
    /* 4920 */ element!(NetworkConfigurationDesignRef, 1779, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(2074)),
    /* 4921 */ element!(NetworkConfigurationRef, 1775, One, false, 0x0, NotRestricted, None),
    /* 4922 */ element!(NetworkConfigurationRef, 2509, One, false, 0x0, NotRestricted, None),
    /* 4923 */ element!(NetworkConfigurationRef, 2509, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(1579)),
    /* 4924 */ element!(NetworkConfigurationRefs, 1776, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(1579)),
    /* 4925 */ element!(NetworkConfigurationRefs, 1780, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(1579)),
    /* 4926 */ element!(NetworkConfigurations, 1756, ZeroOrOne, false, 0x0, NotRestricted, Some(1581)),
    /* 4927 */ element!(NetworkConfigurations, 2842, ZeroOrOne, false, 0x0, NotRestricted, Some(1582)),
    /* 4928 */ element!(NetworkConfigurations, 3106, ZeroOrOne, false, 0x0, NotRestricted, Some(1580)),
    /* 4929 */ element!(NetworkEndpoint, 3078, One, false, 0x0, NotRestricted, None),
    /* 4930 */ element!(NetworkEndpointAddresses, 3079, ZeroOrOne, false, 0x0, NotRestricted, Some(801)),
    /* 4931 */ element!(NetworkEndpointRef, 172, One, false, 0x0, NotRestricted, None),
    /* 4932 */ element!(NetworkEndpointRef, 172, ZeroOrOne, false, 0x0, NotRestricted, Some(2211)),
    /* 4933 */ element!(NetworkEndpointRef, 3081, ZeroOrOne, false, 0x0, NotRestricted, None),
    /* 4934 */ element!(NetworkEndpointRefConditional, 3080, One, false, 0x0, NotRestricted, None),
    /* 4935 */ element!(NetworkEndpointRefs, 2023, ZeroOrOne, false, 0x0, ClassicPlatform, Some(1586)),
    /* 4936 */ element!(NetworkEndpoints, 2041, ZeroOrOne, false, 0x1FFE00, NotRestricted, Some(288)),
    /* 4937 */ element!(NetworkHandlePortMapping, 3082, One, false, 0x0, NotRestricted, None),
    /* 4938 */ element!(NetworkHandleRef, 3083, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5079)),
    /* 4939 */ element!(NetworkHandles, 3107, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(2642)),
    /* 4940 */ element!(NetworkId, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(5652)),
    /* 4941 */ element!(NetworkIdleTime, 2642, ZeroOrOne, false, 0x0, NotRestricted, Some(2846)),
    /* 4942 */ element!(NetworkInterfaceId, 3494, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3686)),
    /* 4943 */ element!(NetworkInterfaceRef, 2509, One, false, 0x0, NotRestricted, None),
    /* 4944 */ element!(NetworkInterfaceRef, 2509, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3467)),
    /* 4945 */ element!(NetworkInterfaceRefs, 2510, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3467)),
    /* 4946 */ element!(NetworkInterfaces, 1750, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(4354)),
    /* 4947 */ element!(NetworkInterfaces, 1757, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(1583)),
    /* 4948 */ element!(NetworkLayerRule, 2152, ZeroOrOne, false, 0x0, NotRestricted, Some(379)),
    /* 4949 */ element!(NetworkManagementPortInterface, 3085, One, false, 0x0, NotRestricted, None),
    /* 4950 */ element!(NetworkManagementVectorLength, 2642, ZeroOrOne, false, 0x0, NotRestricted, Some(1362)),
    /* 4951 */ element!(NetworkMask, 2697, ZeroOrOne, false, 0x0, NotRestricted, Some(463)),
    /* 4952 */ element!(NetworkMask, 2697, ZeroOrOne, false, 0x0, NotRestricted, Some(1584)),
    /* 4953 */ element!(NetworkMask, 2698, ZeroOrOne, false, 0x0, NotRestricted, Some(463)),
    /* 4954 */ element!(NetworkRepresentation, 4477, ZeroOrOne, false, 0x1C0000, ClassicPlatform, Some(52)),
    /* 4955 */ element!(NetworkRepresentation, 4477, ZeroOrOne, false, 0xC0000, NotRestricted, Some(843)),
    /* 4956 */ element!(NetworkRepresentation, 4477, ZeroOrOne, false, 0x100000, NotRestricted, Some(844)),
    /* 4957 */ element!(NetworkRepresentation, 4477, ZeroOrOne, false, 0x1C0000, AdaptivePlatform, Some(1685)),
    /* 4958 */ element!(NetworkRepresentation, 4477, ZeroOrOne, false, 0x1C0000, NotRestricted, Some(2759)),
    /* 4959 */ element!(NetworkRepresentationProps, 4477, ZeroOrOne, false, 0x1C0000, NotRestricted, Some(2439)),
    /* 4960 */ element!(NetworkRepresentationProps, 4477, ZeroOrOne, false, 0x1C0000, NotRestricted, Some(2440)),
    /* 4961 */ element!(NetworkSegmentId, 3086, ZeroOrOne, false, 0x0, NotRestricted, Some(658)),
    /* 4962 */ element!(NetworkSegmentId, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(4156)),
    /* 4963 */ element!(NetworkTimeConsumerRef, 4603, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(4939)),
    /* 4964 */ element!(NetworkTimeMasterRef, 4598, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(4941)),
    /* 4965 */ element!(NetworkTimeProviderRef, 4606, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(4940)),
    /* 4966 */ element!(NetworkTimeSlaveRef, 4600, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(4942)),
    /* 4967 */ element!(NewNad, 2642, ZeroOrOne, false, 0x0, ClassicPlatform, Some(2996)),
    /* 4968 */ element!(NewNad, 2642, ZeroOrOne, false, 0x0, ClassicPlatform, Some(2997)),
    /* 4969 */ element!(NextHeader, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(1064)),
    /* 4970 */ element!(NextHigherCertificateRef, 4811, ZeroOrOne, false, 0x0, NotRestricted, Some(3059)),
    /* 4971 */ element!(NextStateIref, 2161, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5158)),
    /* 4972 */ element!(NmActiveCoordinator, 298, ZeroOrOne, false, 0x0, ClassicPlatform, Some(1728)),
    /* 4973 */ element!(NmBusLoadReductionEnabled, 298, ZeroOrOne, false, 0x0, ClassicPlatform, Some(975)),
    /* 4974 */ element!(NmBusSynchronizationEnabled, 298, ZeroOrOne, false, 0x0, ClassicPlatform, Some(974)),
    /* 4975 */ element!(NmBusloadReductionActive, 298, ZeroOrOne, false, 0x0, NotRestricted, Some(1345)),
    /* 4976 */ element!(NmBusloadReductionEnabled, 298, ZeroOrOne, false, 0x0, ClassicPlatform, Some(975)),
    /* 4977 */ element!(NmCarWakeUpBitPosition, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(2522)),
    /* 4978 */ element!(NmCarWakeUpFilterEnabled, 298, ZeroOrOne, false, 0x0, NotRestricted, Some(1247)),
    /* 4979 */ element!(NmCarWakeUpFilterEnabled, 298, ZeroOrOne, false, 0x0, NotRestricted, Some(1248)),
    /* 4980 */ element!(NmCarWakeUpFilterEnabled, 298, ZeroOrOne, false, 0x0, NotRestricted, Some(1730)),
    /* 4981 */ element!(NmCarWakeUpFilterNodeId, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(2425)),
    /* 4982 */ element!(NmCarWakeUpFilterNodeId, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(2426)),
    /* 4983 */ element!(NmCarWakeUpRxEnabled, 298, ZeroOrOne, false, 0x0, NotRestricted, Some(1226)),
    /* 4984 */ element!(NmCarWakeUpRxEnabled, 298, ZeroOrOne, false, 0x0, NotRestricted, Some(1729)),
    /* 4985 */ element!(NmCbvPosition, 2642, ZeroOrOne, false, 0x0, NotRestricted, Some(662)),
    /* 4986 */ element!(NmCbvPosition, 2642, ZeroOrOne, false, 0x0, NotRestricted, Some(663)),
    /* 4987 */ element!(NmChannelActive, 298, ZeroOrOne, false, 0x0, NotRestricted, Some(1724)),
    /* 4988 */ element!(NmChannelActive, 298, ZeroOrOne, false, 0x0, ClassicPlatform, Some(5831)),
    /* 4989 */ element!(NmChannelId, 3494, ZeroOrOne, false, 0x0, ClassicPlatform, Some(3912)),
    /* 4990 */ element!(NmChannelSleepMaster, 298, ZeroOrOne, false, 0x0, ClassicPlatform, Some(4892)),
    /* 4991 */ element!(NmClusterCouplings, 3090, ZeroOrOne, false, 0x1F8000, ClassicPlatform, Some(289)),
    /* 4992 */ element!(NmClusters, 3091, ZeroOrOne, false, 0x1F8000, NotRestricted, Some(286)),
    /* 4993 */ element!(NmComControlEnabled, 298, ZeroOrOne, false, 0x0, ClassicPlatform, Some(983)),
    /* 4994 */ element!(NmConfig, 3089, One, false, 0x0, NotRestricted, None),
    /* 4995 */ element!(NmControlBitVectorActive, 298, ZeroOrOne, false, 0x0, NotRestricted, Some(5948)),
    /* 4996 */ element!(NmControlBitVectorEnabled, 298, ZeroOrOne, false, 0x0, ClassicPlatform, Some(977)),
    /* 4997 */ element!(NmCoordCluster, 3494, ZeroOrOne, false, 0x0, ClassicPlatform, Some(1589)),
    /* 4998 */ element!(NmCoordSyncSupport, 298, ZeroOrOne, false, 0x0, ClassicPlatform, Some(2645)),
    /* 4999 */ element!(NmCoordinator, 3093, ZeroOrOne, false, 0x0, ClassicPlatform, Some(1588)),
    /* 5000 */ element!(NmCoordinatorRole, 3096, ZeroOrOne, false, 0x0, ClassicPlatform, Some(3963)),
    /* 5001 */ element!(NmCycletimeMainFunction, 2229, ZeroOrOne, false, 0x0, ClassicPlatform, Some(3025)),
    /* 5002 */ element!(NmCycletimeMainFunction, 5077, ZeroOrOne, false, 0x0, NotRestricted, Some(3025)),
    /* 5003 */ element!(NmDataCycle, 2642, ZeroOrOne, false, 0x0, NotRestricted, Some(1598)),
    /* 5004 */ element!(NmDataDisabled, 298, ZeroOrOne, false, 0x0, ClassicPlatform, Some(917)),
    /* 5005 */ element!(NmDataEnabled, 298, ZeroOrOne, false, 0x0, NotRestricted, Some(2653)),
    /* 5006 */ element!(NmDataInformation, 298, ZeroOrOne, false, 0x0, NotRestricted, Some(516)),
    /* 5007 */ element!(NmDetectionLock, 2229, ZeroOrOne, false, 0x0, NotRestricted, Some(3152)),
    /* 5008 */ element!(NmDetectionLock, 5077, ZeroOrOne, false, 0x0, NotRestricted, Some(3152)),
    /* 5009 */ element!(NmEcu, 3097, One, false, 0x0, NotRestricted, None),
    /* 5010 */ element!(NmGlobalCoordinatorTime, 2229, ZeroOrOne, false, 0x0, ClassicPlatform, Some(3707)),
    /* 5011 */ element!(NmHandleRef, 3104, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5043)),
    /* 5012 */ element!(NmHandleToFunctionGroupStateMapping, 3101, One, false, 0x0, NotRestricted, None),
    /* 5013 */ element!(NmHwVoteEnabled, 298, ZeroOrOne, false, 0x0, ClassicPlatform, Some(2650)),
    /* 5014 */ element!(NmIfEcuRef, 3117, ZeroOrOne, false, 0x0, ClassicPlatform, Some(2120)),
    /* 5015 */ element!(NmIfEcus, 3092, ZeroOrOne, false, 0x1F8000, ClassicPlatform, Some(287)),
    /* 5016 */ element!(NmImmediateNmCycleTime, 2229, ZeroOrOne, false, 0x0, NotRestricted, Some(614)),
    /* 5017 */ element!(NmImmediateNmCycleTime, 2229, ZeroOrOne, false, 0x0, NotRestricted, Some(615)),
    /* 5018 */ element!(NmImmediateNmTransmissions, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(649)),
    /* 5019 */ element!(NmImmediateRestartEnabled, 298, ZeroOrOne, false, 0x0, ClassicPlatform, Some(986)),
    /* 5020 */ element!(NmInstanceId, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(2728)),
    /* 5021 */ element!(NmInstantiation, 3105, One, false, 0x0, NotRestricted, None),
    /* 5022 */ element!(NmInteractsWithSmMapping, 3108, One, false, 0x0, NotRestricted, None),
    /* 5023 */ element!(NmLightTimeout, 2229, ZeroOrOne, false, 0x0, NotRestricted, Some(704)),
    /* 5024 */ element!(NmMainFunctionAcrossFrCycle, 298, ZeroOrOne, false, 0x0, ClassicPlatform, Some(1702)),
    /* 5025 */ element!(NmMainFunctionPeriod, 2229, ZeroOrOne, false, 0x0, NotRestricted, Some(667)),
    /* 5026 */ element!(NmMainFunctionPeriod, 5077, ZeroOrOne, false, 0x0, NotRestricted, Some(667)),
    /* 5027 */ element!(NmMessageTimeoutTime, 2229, ZeroOrOne, false, 0x0, NotRestricted, Some(5889)),
    /* 5028 */ element!(NmMessageTimeoutTime, 2229, ZeroOrOne, false, 0x0, ClassicPlatform, Some(5889)),
    /* 5029 */ element!(NmMessageTimeoutTime, 2229, ZeroOrOne, false, 0x0, NotRestricted, Some(5890)),
    /* 5030 */ element!(NmMessageTimeoutTime, 5077, ZeroOrOne, false, 0x0, NotRestricted, Some(5888)),
    /* 5031 */ element!(NmMsgCycleOffset, 2229, ZeroOrOne, false, 0x0, NotRestricted, Some(1592)),
    /* 5032 */ element!(NmMsgCycleOffset, 5077, ZeroOrOne, false, 0x0, NotRestricted, Some(1592)),
    /* 5033 */ element!(NmMsgCycleTime, 2229, ZeroOrOne, false, 0x0, NotRestricted, Some(1714)),
    /* 5034 */ element!(NmMsgCycleTime, 5077, ZeroOrOne, false, 0x0, NotRestricted, Some(1713)),
    /* 5035 */ element!(NmMsgCycleTime, 5077, ZeroOrOne, false, 0x0, NotRestricted, Some(1715)),
    /* 5036 */ element!(NmMsgReducedTime, 2229, ZeroOrOne, false, 0x0, NotRestricted, Some(1591)),
    /* 5037 */ element!(NmMsgReducedTime, 5077, ZeroOrOne, false, 0x0, NotRestricted, Some(1591)),
    /* 5038 */ element!(NmMultipleChannelsEnabled, 298, ZeroOrOne, false, 0x0, ClassicPlatform, Some(976)),
    /* 5039 */ element!(NmNetworkHandle, 3110, One, false, 0x0, NotRestricted, None),
    /* 5040 */ element!(NmNetworkHandleRef, 3083, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5137)),
    /* 5041 */ element!(NmNetworkHandleRef, 3083, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5138)),
    /* 5042 */ element!(NmNetworkTimeout, 2229, ZeroOrOne, false, 0x0, NotRestricted, Some(1575)),
    /* 5043 */ element!(NmNetworkTimeout, 2229, ZeroOrOne, false, 0x0, NotRestricted, Some(1576)),
    /* 5044 */ element!(NmNetworkTimeout, 5077, ZeroOrOne, false, 0x0, NotRestricted, Some(1574)),
    /* 5045 */ element!(NmNetworkTimeout, 5077, ZeroOrOne, false, 0x0, NotRestricted, Some(1577)),
    /* 5046 */ element!(NmNidPosition, 2642, ZeroOrOne, false, 0x0, NotRestricted, Some(597)),
    /* 5047 */ element!(NmNodeDetectionEnabled, 298, ZeroOrOne, false, 0x0, ClassicPlatform, Some(984)),
    /* 5048 */ element!(NmNodeDetectionEnabled, 298, ZeroOrOne, false, 0x0, ClassicPlatform, Some(985)),
    /* 5049 */ element!(NmNodeId, 2642, ZeroOrOne, false, 0x0, NotRestricted, Some(1590)),
    /* 5050 */ element!(NmNodeIdEnabled, 298, ZeroOrOne, false, 0x0, ClassicPlatform, Some(987)),
    /* 5051 */ element!(NmNodeIdEnabled, 298, ZeroOrOne, false, 0x0, ClassicPlatform, Some(988)),
    /* 5052 */ element!(NmNodeRef, 1392, ZeroOrOne, false, 0x0, ClassicPlatform, Some(5685)),
    /* 5053 */ element!(NmNodeRef, 3094, One, false, 0x0, NotRestricted, None),
    /* 5054 */ element!(NmNodeRefs, 3095, ZeroOrOne, false, 0x0, ClassicPlatform, Some(6037)),
    /* 5055 */ element!(NmNodes, 3088, ZeroOrOne, false, 0x1C0000, NotRestricted, Some(290)),
    /* 5056 */ element!(NmPassiveModeEnabled, 298, ZeroOrOne, false, 0x0, ClassicPlatform, Some(981)),
    /* 5057 */ element!(NmPassiveModeEnabled, 298, ZeroOrOne, false, 0x0, ClassicPlatform, Some(3900)),
    /* 5058 */ element!(NmPdu, 3121, One, false, 0x0, NotRestricted, None),
    /* 5059 */ element!(NmPduRef, 3124, ZeroOrOne, false, 0x0, NotRestricted, None),
    /* 5060 */ element!(NmPduRefConditional, 3123, One, false, 0x0, NotRestricted, None),
    /* 5061 */ element!(NmPduRxIndicationEnabled, 298, ZeroOrOne, false, 0x0, ClassicPlatform, Some(2647)),
    /* 5062 */ element!(NmPdus, 2472, ZeroOrOne, false, 0x1C0000, NotRestricted, Some(4907)),
    /* 5063 */ element!(NmPnHandleMultipleNetworkRequests, 298, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(2459)),
    /* 5064 */ element!(NmPncParticipation, 298, ZeroOrOne, false, 0x0, NotRestricted, Some(777)),
    /* 5065 */ element!(NmRangeConfig, 509, ZeroOrOne, false, 0x0, NotRestricted, Some(544)),
    /* 5066 */ element!(NmReadySleepCount, 2642, ZeroOrOne, false, 0x0, NotRestricted, Some(3985)),
    /* 5067 */ element!(NmReadySleepTime, 2229, ZeroOrOne, false, 0x0, NotRestricted, Some(3180)),
    /* 5068 */ element!(NmRemoteSleepIndEnabled, 298, ZeroOrOne, false, 0x0, ClassicPlatform, Some(2646)),
    /* 5069 */ element!(NmRemoteSleepIndicationTime, 2229, ZeroOrOne, false, 0x0, NotRestricted, Some(5878)),
    /* 5070 */ element!(NmRemoteSleepIndicationTime, 2229, ZeroOrOne, false, 0x0, ClassicPlatform, Some(5878)),
    /* 5071 */ element!(NmRemoteSleepIndicationTime, 5077, ZeroOrOne, false, 0x0, NotRestricted, Some(5878)),
    /* 5072 */ element!(NmRepeatMessageBitActive, 298, ZeroOrOne, false, 0x0, NotRestricted, Some(5949)),
    /* 5073 */ element!(NmRepeatMessageBitEnable, 298, ZeroOrOne, false, 0x0, ClassicPlatform, Some(989)),
    /* 5074 */ element!(NmRepeatMessageTime, 2229, ZeroOrOne, false, 0x0, NotRestricted, Some(5879)),
    /* 5075 */ element!(NmRepeatMessageTime, 5077, ZeroOrOne, false, 0x0, NotRestricted, Some(5879)),
    /* 5076 */ element!(NmRepeatMsgIndEnabled, 298, ZeroOrOne, false, 0x0, ClassicPlatform, Some(2648)),
    /* 5077 */ element!(NmRepeatMsgIndEnabled, 298, ZeroOrOne, false, 0x0, ClassicPlatform, Some(2649)),
    /* 5078 */ element!(NmRepeatMsgIndicationEnabled, 298, ZeroOrOne, false, 0x0, ClassicPlatform, Some(962)),
    /* 5079 */ element!(NmRepeatMsgIndicationEnabled, 298, ZeroOrOne, false, 0x0, ClassicPlatform, Some(963)),
    /* 5080 */ element!(NmRepetitionCycle, 2642, ZeroOrOne, false, 0x0, NotRestricted, Some(1599)),
    /* 5081 */ element!(NmScheduleVariant, 2210, ZeroOrOne, false, 0x0, ClassicPlatform, Some(1129)),
    /* 5082 */ element!(NmShutdownDelayTimer, 2229, ZeroOrOne, false, 0x0, ClassicPlatform, Some(1727)),
    /* 5083 */ element!(NmShutdownDelayTimer, 5077, ZeroOrOne, false, 0x0, NotRestricted, Some(4878)),
    /* 5084 */ element!(NmStateChangeIndEnabled, 298, ZeroOrOne, false, 0x0, ClassicPlatform, Some(982)),
    /* 5085 */ element!(NmStateRequest, 3125, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3760)),
    /* 5086 */ element!(NmSynchronizationPointEnabled, 298, ZeroOrOne, false, 0x0, ClassicPlatform, Some(961)),
    /* 5087 */ element!(NmSynchronizingNetwork, 298, ZeroOrOne, false, 0x0, ClassicPlatform, Some(1261)),
    /* 5088 */ element!(NmUserDataEnabled, 298, ZeroOrOne, false, 0x0, ClassicPlatform, Some(2651)),
    /* 5089 */ element!(NmUserDataLength, 2642, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(627)),
    /* 5090 */ element!(NmUserDataLength, 2642, ZeroOrOne, false, 0x0, NotRestricted, Some(629)),
    /* 5091 */ element!(NmUserDataOffset, 3494, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(2580)),
    /* 5092 */ element!(NmVariant, 3126, ZeroOrOne, false, 0x0, NotRestricted, Some(610)),
    /* 5093 */ element!(NmVectorEarlyUpdate, 298, ZeroOrOne, false, 0x0, NotRestricted, Some(1112)),
    /* 5094 */ element!(NmVoteInformation, 298, ZeroOrOne, false, 0x0, NotRestricted, Some(517)),
    /* 5095 */ element!(NmVotingCycle, 2642, ZeroOrOne, false, 0x0, NotRestricted, Some(1600)),
    /* 5096 */ element!(NmWaitBusSleepTime, 2229, ZeroOrOne, false, 0x0, NotRestricted, Some(5880)),
    /* 5097 */ element!(NmWaitBusSleepTime, 5077, ZeroOrOne, false, 0x0, NotRestricted, Some(5880)),
    /* 5098 */ element!(NoCheckpointSupervision, 3127, One, false, 0x0, NotRestricted, None),
    /* 5099 */ element!(NoCheckpointSupervisions, 2344, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(797)),
    /* 5100 */ element!(NoSupervision, 3130, One, false, 0x0, NotRestricted, None),
    /* 5101 */ element!(NoSupervisions, 2345, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(291)),
    /* 5102 */ element!(NodeIdentifier, 4393, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(4147)),
    /* 5103 */ element!(NodeName, 2729, ZeroOrOne, false, 0x0, ClassicPlatform, Some(1593)),
    /* 5104 */ element!(NodePorts, 751, ZeroOrOne, false, 0x1F0000, NotRestricted, Some(4907)),
    /* 5105 */ element!(NodeRef, 1399, ZeroOrOne, false, 0x0, ClassicPlatform, Some(5446)),
    /* 5106 */ element!(NodeRef, 1399, ZeroOrOne, false, 0x0, ClassicPlatform, Some(5447)),
    /* 5107 */ element!(NodeRef, 1399, ZeroOrOne, false, 0x0, ClassicPlatform, Some(5635)),
    /* 5108 */ element!(NodeRef, 1399, ZeroOrOne, false, 0x0, ClassicPlatform, Some(5706)),
    /* 5109 */ element!(Nominal, 3068, ZeroOrOne, false, 0x0, NotRestricted, Some(2998)),
    /* 5110 */ element!(NominalExecutionTime, 3068, ZeroOrOne, false, 0x0, NotRestricted, Some(2999)),
    /* 5111 */ element!(NominalExecutionTime, 3068, ZeroOrOne, false, 0x0, NotRestricted, Some(3001)),
    /* 5112 */ element!(NonOsModuleInstantiationRef, 3550, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5828)),
    /* 5113 */ element!(NonVerboseMode, 298, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3817)),
    /* 5114 */ element!(NonVerboseMode, 298, ZeroOrOne, false, 0x0, ClassicPlatform, Some(3818)),
    /* 5115 */ element!(NonqueuedReceiverComSpec, 3133, One, false, 0x0, NotRestricted, None),
    /* 5116 */ element!(NonqueuedSenderComSpec, 3134, One, false, 0x0, NotRestricted, None),
    /* 5117 */ element!(NotAvailableValueSpecification, 3136, One, false, 0x0, NotRestricted, None),
    /* 5118 */ element!(Notation, 2386, ZeroOrOne, false, 0x0, NotRestricted, Some(3538)),
    /* 5119 */ element!(Note, 3137, One, false, 0x0, NotRestricted, Some(5358)),
    /* 5120 */ element!(Note, 3137, One, false, 0xC0000, NotRestricted, Some(5358)),
    /* 5121 */ element!(NotificationPortIref, 3206, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(4699)),
    /* 5122 */ element!(NotificationState, 5036, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3997)),
    /* 5123 */ element!(NotificationTime, 1160, ZeroOrOne, false, 0x0, NotRestricted, Some(3892)),
    /* 5124 */ element!(Notifications, 4362, ZeroOrOne, false, 0x1C0000, AdaptivePlatform, Some(3430)),
    /* 5125 */ element!(NotifiedStatuss, 2402, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(4712)),
    /* 5126 */ element!(Notifier, 1033, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3423)),
    /* 5127 */ element!(Notifier, 4238, ZeroOrOne, false, 0x0, NotRestricted, Some(3422)),
    /* 5128 */ element!(Notifier, 4239, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3423)),
    /* 5129 */ element!(Notifier, 4988, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3423)),
    /* 5130 */ element!(NotifierDataElementRef, 2084, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(1899)),
    /* 5131 */ element!(NotifierRef, 1953, ZeroOrOne, false, 0x0, NotRestricted, Some(1914)),
    /* 5132 */ element!(NotifierSignalTriggeringRef, 4063, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(2099)),
    /* 5133 */ element!(NrcValue, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(4114)),
    /* 5134 */ element!(Ntu, 2229, ZeroOrOne, false, 0x0, NotRestricted, Some(5938)),
    /* 5135 */ element!(Ntu, 5077, ZeroOrOne, false, 0x0, NotRestricted, Some(5939)),
    /* 5136 */ element!(NumFailedSecurityAccess, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(5653)),
    /* 5137 */ element!(Number, 4393, ZeroOrOne, false, 0x0, NotRestricted, Some(5404)),
    /* 5138 */ element!(Number, 5078, ZeroOrOne, false, 0x0, NotRestricted, Some(5404)),
    /* 5139 */ element!(NumberOfBits, 2642, ZeroOrOne, false, 0x0, NotRestricted, Some(1606)),
    /* 5140 */ element!(NumberOfConnectedClients, 3494, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(4153)),
    /* 5141 */ element!(NumberOfInstructions, 3135, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(4151)),
    /* 5142 */ element!(NumberOfMinislots, 2642, ZeroOrOne, false, 0x0, NotRestricted, Some(1601)),
    /* 5143 */ element!(NumberOfNotifierSets, 3494, ZeroOrOne, false, 0x0, ClassicPlatform, Some(4043)),
    /* 5144 */ element!(NumberOfParallelTcpSessions, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(3696)),
    /* 5145 */ element!(NumberOfRepetitions, 2642, ZeroOrOne, false, 0x0, NotRestricted, Some(650)),
    /* 5146 */ element!(NumberOfRestartAttempts, 3494, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3608)),
    /* 5147 */ element!(NumberOfStaticSlots, 2642, ZeroOrOne, false, 0x0, NotRestricted, Some(3008)),
    /* 5148 */ element!(NumberOfWorkers, 3494, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(1619)),
    /* 5149 */ element!(NumericalRuleBasedValueSpecification, 3139, One, false, 0x0, NotRestricted, None),
    /* 5150 */ element!(NumericalValue, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(4244)),
    /* 5151 */ element!(NumericalValueSpecification, 3141, One, false, 0x0, NotRestricted, None),
    /* 5152 */ element!(NumericalValueVariationPoint, 2231, One, false, 0x0, NotRestricted, None),
    /* 5153 */ element!(NvBlockDataMapping, 3142, One, false, 0x0, NotRestricted, None),
    /* 5154 */ element!(NvBlockDataMappings, 456, ZeroOrOne, false, 0x1C0000, ClassicPlatform, Some(636)),
    /* 5155 */ element!(NvBlockDataMappings, 3146, ZeroOrOne, false, 0x1C0000, ClassicPlatform, Some(635)),
    /* 5156 */ element!(NvBlockDescriptor, 3143, One, false, 0x0, NotRestricted, None),
    /* 5157 */ element!(NvBlockDescriptors, 3154, ZeroOrOne, false, 0x1FFFFF, ClassicPlatform, Some(2443)),
    /* 5158 */ element!(NvBlockNeeds, 3149, One, false, 0x0, NotRestricted, None),
    /* 5159 */ element!(NvBlockNeeds, 3149, ZeroOrOne, false, 0x0, ClassicPlatform, Some(2516)),
    /* 5160 */ element!(NvBlockSwComponentType, 3152, One, false, 0x0, NotRestricted, None),
    /* 5161 */ element!(NvDataInterface, 3155, One, false, 0x0, NotRestricted, None),
    /* 5162 */ element!(NvDataPortAnnotation, 3157, One, false, 0x0, NotRestricted, None),
    /* 5163 */ element!(NvDataPortAnnotations, 3488, ZeroOrOne, false, 0x0, NotRestricted, Some(152)),
    /* 5164 */ element!(NvDatas, 3156, ZeroOrOne, false, 0x0, NotRestricted, Some(2775)),
    /* 5165 */ element!(NvProvideComSpec, 3158, One, false, 0x0, NotRestricted, None),
    /* 5166 */ element!(NvRamBlockElement, 260, ZeroOrOne, false, 0x0, ClassicPlatform, Some(1893)),
    /* 5167 */ element!(NvRequireComSpec, 3161, One, false, 0x0, NotRestricted, None),
    /* 5168 */ element!(ObdControlServiceNeeds, 3163, One, false, 0x0, NotRestricted, None),
    /* 5169 */ element!(ObdDtcNumber, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(5369)),
    /* 5170 */ element!(ObdDtcNumber, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(5372)),
    /* 5171 */ element!(ObdDtcValue, 2231, ZeroOrOne, false, 0x0, NotRestricted, Some(5927)),
    /* 5172 */ element!(ObdDtcValue3Byte, 2231, ZeroOrOne, false, 0x0, NotRestricted, Some(18)),
    /* 5173 */ element!(ObdInfoServiceNeeds, 3164, One, false, 0x0, NotRestricted, None),
    /* 5174 */ element!(ObdMid, 2231, ZeroOrOne, false, 0x0, NotRestricted, Some(5656)),
    /* 5175 */ element!(ObdMonitorServiceNeeds, 3165, One, false, 0x0, NotRestricted, None),
    /* 5176 */ element!(ObdPidServiceNeeds, 3168, One, false, 0x0, NotRestricted, None),
    /* 5177 */ element!(ObdPropss, 1660, ZeroOrOne, false, 0x100000, NotRestricted, Some(3296)),
    /* 5178 */ element!(ObdRatioDenominatorNeeds, 3170, One, false, 0x0, NotRestricted, None),
    /* 5179 */ element!(ObdRatioServiceNeeds, 3171, One, false, 0x0, NotRestricted, None),
    /* 5180 */ element!(ObdRelevance, 298, ZeroOrOne, false, 0x0, NotRestricted, Some(2795)),
    /* 5181 */ element!(ObdSupport, 1430, ZeroOrOne, false, 0x0, NotRestricted, Some(4031)),
    /* 5182 */ element!(ObjectDefinitionRef, 20, One, false, 0x0, NotRestricted, None),
    /* 5183 */ element!(ObjectDefinitionRefs, 21, ZeroOrOne, false, 0x0, NotRestricted, Some(4322)),
    /* 5184 */ element!(ObjectDefintionRef, 22, One, false, 0x0, NotRestricted, None),
    /* 5185 */ element!(ObjectDefintionRefs, 23, ZeroOrOne, false, 0x0, NotRestricted, Some(929)),
    /* 5186 */ element!(ObjectIref, 81, ZeroOrOne, false, 0x0, NotRestricted, Some(5263)),
    /* 5187 */ element!(ObjectRef, 24, One, false, 0x0, NotRestricted, None),
    /* 5188 */ element!(ObjectRef, 3710, One, false, 0x0, NotRestricted, None),
    /* 5189 */ element!(ObjectRefs, 25, ZeroOrOne, false, 0x0, NotRestricted, Some(3463)),
    /* 5190 */ element!(ObjectRefs, 3711, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5212)),
    /* 5191 */ element!(OccurrenceCounterProcessing, 1431, ZeroOrOne, false, 0x0, NotRestricted, Some(3670)),
    /* 5192 */ element!(OccurrenceExpression, 4707, ZeroOrOne, false, 0x0, NotRestricted, Some(3010)),
    /* 5193 */ element!(OfferCyclicDelay, 2229, ZeroOrOne, false, 0x0, NotRestricted, Some(1659)),
    /* 5194 */ element!(OfferCyclicDelay, 2229, ZeroOrOne, false, 0x0, NotRestricted, Some(1660)),
    /* 5195 */ element!(Offset, 2229, ZeroOrOne, false, 0x0, NotRestricted, Some(3179)),
    /* 5196 */ element!(Offset, 2642, ZeroOrOne, false, 0x0, ClassicPlatform, Some(4009)),
    /* 5197 */ element!(Offset, 2642, ZeroOrOne, false, 0x0, ClassicPlatform, Some(4010)),
    /* 5198 */ element!(Offset, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(213)),
    /* 5199 */ element!(Offset, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(1634)),
    /* 5200 */ element!(Offset, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(2540)),
    /* 5201 */ element!(Offset, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(3664)),
    /* 5202 */ element!(Offset, 3494, ZeroOrOne, false, 0x0, ClassicPlatform, Some(4009)),
    /* 5203 */ element!(OffsetCorrectionAdaptionInterval, 2229, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(622)),
    /* 5204 */ element!(OffsetCorrectionAdaptionInterval, 2229, ZeroOrOne, false, 0x0, NotRestricted, Some(623)),
    /* 5205 */ element!(OffsetCorrectionJumpThreshold, 2229, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5853)),
    /* 5206 */ element!(OffsetCorrectionJumpThreshold, 2229, ZeroOrOne, false, 0x0, NotRestricted, Some(5854)),
    /* 5207 */ element!(OffsetCorrectionOut, 2642, ZeroOrOne, false, 0x0, NotRestricted, Some(1411)),
    /* 5208 */ element!(OffsetCorrectionStart, 2642, ZeroOrOne, false, 0x0, NotRestricted, Some(2633)),
    /* 5209 */ element!(OffsetSiToUnit, 2229, ZeroOrOne, false, 0x0, NotRestricted, Some(4810)),
    /* 5210 */ element!(OffsetSiToUnit, 5077, ZeroOrOne, false, 0x0, NotRestricted, Some(6055)),
    /* 5211 */ element!(OffsetTimeDomainRef, 2365, ZeroOrOne, false, 0x0, NotRestricted, Some(1948)),
    /* 5212 */ element!(OffsetTimingConstraint, 3176, One, false, 0x0, NotRestricted, None),
    /* 5213 */ element!(Offsets, 692, ZeroOrOne, false, 0x0, NotRestricted, Some(3011)),
    /* 5214 */ element!(OfnsDataIdList, 3494, One, false, 0x0, NotRestricted, None),
    /* 5215 */ element!(OfnsDataIdLists, 502, ZeroOrOne, true, 0x0, NotRestricted, Some(2699)),
    /* 5216 */ element!(OfsDataIdList, 3494, One, false, 0x0, NotRestricted, None),
    /* 5217 */ element!(OfsDataIdLists, 2274, ZeroOrOne, true, 0x0, NotRestricted, Some(2700)),
    /* 5218 */ element!(OfsSubTlv, 298, ZeroOrOne, false, 0x0, NotRestricted, Some(729)),
    /* 5219 */ element!(OnBoardMonitorId, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(1636)),
    /* 5220 */ element!(OnChangeDataPrototypes, 4896, ZeroOrOne, false, 0x0, NotRestricted, Some(4963)),
    /* 5221 */ element!(OnFailPermissiveMode, 2881, ZeroOrOne, false, 0x0, NotRestricted, Some(4195)),
    /* 5222 */ element!(OnFailPermissiveModeTimeout, 2229, ZeroOrOne, false, 0x0, NotRestricted, Some(5887)),
    /* 5223 */ element!(OnTransitionValue, 3494, ZeroOrOne, false, 0x0, ClassicPlatform, Some(3189)),
    /* 5224 */ element!(OneEveryN, 3922, ZeroOrOne, false, 0x0, NotRestricted, Some(3416)),
    /* 5225 */ element!(Op, 1401, ZeroOrOne, false, 0x0, NotRestricted, Some(4116)),
    /* 5226 */ element!(OperationArgumentInstanceIref, 3178, ZeroOrOne, false, 0x0, NotRestricted, Some(4822)),
    /* 5227 */ element!(OperationCycle, 3182, ZeroOrOne, false, 0x0, NotRestricted, Some(1650)),
    /* 5228 */ element!(OperationCycleAutomaticEnd, 298, ZeroOrOne, false, 0x0, NotRestricted, Some(1249)),
    /* 5229 */ element!(OperationCycleAutostart, 298, ZeroOrOne, false, 0x0, NotRestricted, Some(1253)),
    /* 5230 */ element!(OperationCycleRef, 1191, ZeroOrOne, false, 0x0, NotRestricted, Some(1968)),
    /* 5231 */ element!(OperationCycleRef, 1191, ZeroOrOne, false, 0x0, NotRestricted, Some(2068)),
    /* 5232 */ element!(OperationInvokedEvent, 3187, One, false, 0x0, NotRestricted, None),
    /* 5233 */ element!(OperationIref, 3186, One, false, 0x0, NotRestricted, None),
    /* 5234 */ element!(OperationIref, 3202, ZeroOrOne, false, 0x0, NotRestricted, Some(5439)),
    /* 5235 */ element!(OperationIref, 3202, ZeroOrOne, false, 0x0, NotRestricted, Some(5441)),
    /* 5236 */ element!(OperationIref, 3593, ZeroOrOne, false, 0x0, ClassicPlatform, Some(3013)),
    /* 5237 */ element!(OperationIrefs, 4561, ZeroOrOne, false, 0x0, NotRestricted, Some(2213)),
    /* 5238 */ element!(OperationMappings, 562, ZeroOrOne, false, 0x180000, NotRestricted, Some(1442)),
    /* 5239 */ element!(OperationMappings, 567, ZeroOrOne, false, 0x1C0000, ClassicPlatform, Some(5811)),
    /* 5240 */ element!(OperationMode, 298, ZeroOrOne, false, 0x0, NotRestricted, Some(1759)),
    /* 5241 */ element!(OperationPrototypeIref, 3183, ZeroOrOne, false, 0x0, NotRestricted, Some(3112)),
    /* 5242 */ element!(OperationRef, 544, ZeroOrOne, false, 0x0, NotRestricted, Some(1652)),
    /* 5243 */ element!(OperationRef, 544, ZeroOrOne, false, 0x0, NotRestricted, Some(5440)),
    /* 5244 */ element!(OperationRef, 544, ZeroOrOne, false, 0x0, NotRestricted, Some(5580)),
    /* 5245 */ element!(OperationRef, 4715, ZeroOrOne, false, 0x0, NotRestricted, Some(3080)),
    /* 5246 */ element!(Operations, 563, ZeroOrOne, false, 0x1C0000, ClassicPlatform, Some(245)),
    /* 5247 */ element!(Operations, 644, ZeroOrOne, false, 0x0, NotRestricted, Some(2212)),
    /* 5248 */ element!(Operations, 644, ZeroOrOne, false, 0x0, NotRestricted, Some(2761)),
    /* 5249 */ element!(Operations, 644, ZeroOrOne, false, 0x0, NotRestricted, Some(2789)),
    /* 5250 */ element!(Operations, 644, ZeroOrOne, false, 0x0, NotRestricted, Some(2790)),
    /* 5251 */ element!(Operator, 4138, ZeroOrOne, false, 0x0, NotRestricted, Some(4857)),
    /* 5252 */ element!(Operator, 4158, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(4857)),
    /* 5253 */ element!(OptAppRecordElementInMethodIref, 197, One, false, 0x0, NotRestricted, None),
    /* 5254 */ element!(OptAppRecordElementInMethodIref, 197, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(4977)),
    /* 5255 */ element!(OptAppRecordElementInMethodIrefs, 4039, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(4977)),
    /* 5256 */ element!(OptAppRecordElementInServiceInterfaceIref, 198, One, false, 0x0, NotRestricted, None),
    /* 5257 */ element!(OptAppRecordElementInServiceInterfaceIref, 198, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(4978)),
    /* 5258 */ element!(OptAppRecordElementInServiceInterfaceIrefs, 4040, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(4978)),
    /* 5259 */ element!(OptArgumentRef, 4041, One, false, 0x0, NotRestricted, None),
    /* 5260 */ element!(OptArgumentRef, 4041, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(4983)),
    /* 5261 */ element!(OptArgumentRefs, 4042, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(4983)),
    /* 5262 */ element!(OptImplRecordElement, 2595, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3310)),
    /* 5263 */ element!(OptImplRecordElements, 4043, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3309)),
    /* 5264 */ element!(Option, 2500, One, false, 0x0, NotRestricted, None),
    /* 5265 */ element!(OptionArgument, 4393, ZeroOrOne, false, 0x0, NotRestricted, Some(3621)),
    /* 5266 */ element!(OptionKind, 642, ZeroOrOne, false, 0x0, NotRestricted, Some(4251)),
    /* 5267 */ element!(OptionName, 4393, ZeroOrOne, false, 0x0, NotRestricted, Some(3620)),
    /* 5268 */ element!(Optional, 298, ZeroOrOne, false, 0x0, NotRestricted, Some(3808)),
    /* 5269 */ element!(OptionalElements, 4033, ZeroOrOne, false, 0x1C00, AdaptivePlatform, Some(3382)),
    /* 5270 */ element!(Options, 2970, ZeroOrOne, false, 0x0, NotRestricted, Some(3116)),
    /* 5271 */ element!(Options, 2970, ZeroOrOne, false, 0x0, NotRestricted, Some(3977)),
    /* 5272 */ element!(Options, 4393, ZeroOrOne, false, 0x0, NotRestricted, Some(2525)),
    /* 5273 */ element!(Options, 4393, ZeroOrOne, false, 0x0, NotRestricted, Some(2546)),
    /* 5274 */ element!(Options, 5078, ZeroOrOne, false, 0x0, NotRestricted, Some(2525)),
    /* 5275 */ element!(Options, 5078, ZeroOrOne, false, 0x0, NotRestricted, Some(2546)),
    /* 5276 */ element!(OrderedElements, 2115, ZeroOrOne, false, 0x0, ClassicPlatform, Some(3321)),
    /* 5277 */ element!(OrderedMaster, 3188, One, false, 0x0, NotRestricted, None),
    /* 5278 */ element!(OrderedMasterList, 4768, ZeroOrOne, true, 0x0, NotRestricted, Some(484)),
    /* 5279 */ element!(Origin, 4393, ZeroOrOne, false, 0x0, ClassicPlatform, Some(2638)),
    /* 5280 */ element!(Origin, 4393, ZeroOrOne, false, 0x0, ClassicPlatform, Some(2639)),
    /* 5281 */ element!(Origin, 4393, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(4037)),
    /* 5282 */ element!(Origin, 4393, ZeroOrOne, false, 0x0, ClassicPlatform, Some(4268)),
    /* 5283 */ element!(Origin, 5078, ZeroOrOne, false, 0x0, NotRestricted, Some(2638)),
    /* 5284 */ element!(OsArtiAdapterLaunchBehavior, 3190, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3580)),
    /* 5285 */ element!(OsModuleInstantiation, 3191, One, false, 0x0, NotRestricted, None),
    /* 5286 */ element!(OsTaskExecutionEvent, 3193, One, false, 0x0, NotRestricted, None),
    /* 5287 */ element!(OsTaskProxy, 3195, One, false, 0x0, NotRestricted, None),
    /* 5288 */ element!(OsTaskProxyRef, 1828, ZeroOrOne, false, 0x0, ClassicPlatform, Some(1813)),
    /* 5289 */ element!(OutMeasurementSet, 2935, ZeroOrOne, false, 0x1FFFC0, NotRestricted, Some(2282)),
    /* 5290 */ element!(OutMeasurmentSet, 2935, ZeroOrOne, false, 0x0, NotRestricted, Some(928)),
    /* 5291 */ element!(OuterPortRef, 3433, ZeroOrOne, false, 0x0, NotRestricted, Some(3028)),
    /* 5292 */ element!(OuterPorts, 3456, ZeroOrOne, false, 0x1C0000, NotRestricted, Some(1696)),
    /* 5293 */ element!(OutgoingCallbacks, 402, ZeroOrOne, false, 0x1FFF80, ClassicPlatform, Some(2445)),
    /* 5294 */ element!(OverrideId, 3494, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(4201)),
    /* 5295 */ element!(OverrideInitialStateIref, 2161, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3072)),
    /* 5296 */ element!(OwnerRef, 857, One, false, 0x0, NotRestricted, None),
    /* 5297 */ element!(OwnerRefs, 856, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(4924)),
    /* 5298 */ element!(Ownership, 1053, ZeroOrOne, false, 0x0, NotRestricted, Some(554)),
    /* 5299 */ element!(OwnershipKind, 1054, ZeroOrOne, false, 0x0, NotRestricted, Some(2342)),
    /* 5300 */ element!(OwnershipStrength, 1055, ZeroOrOne, false, 0x0, NotRestricted, Some(555)),
    /* 5301 */ element!(OwnershipStrength, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(2343)),
    /* 5302 */ element!(P, 3065, One, false, 0x0, NotRestricted, Some(4753)),
    /* 5303 */ element!(P, 3065, One, false, 0xC0000, NotRestricted, Some(4753)),
    /* 5304 */ element!(P2Max, 2229, ZeroOrOne, false, 0x0, ClassicPlatform, Some(99)),
    /* 5305 */ element!(P2Max, 2229, ZeroOrOne, false, 0x0, ClassicPlatform, Some(100)),
    /* 5306 */ element!(P2Max, 5077, ZeroOrOne, false, 0x0, NotRestricted, Some(99)),
    /* 5307 */ element!(P2ServerMax, 2229, ZeroOrOne, false, 0x0, NotRestricted, Some(4830)),
    /* 5308 */ element!(P2StarServerMax, 2229, ZeroOrOne, false, 0x0, NotRestricted, Some(4829)),
    /* 5309 */ element!(P2Timing, 2229, ZeroOrOne, false, 0x0, ClassicPlatform, Some(1697)),
    /* 5310 */ element!(P2Timing, 2229, ZeroOrOne, false, 0x0, ClassicPlatform, Some(1698)),
    /* 5311 */ element!(P2Timing, 5077, ZeroOrOne, false, 0x0, NotRestricted, Some(1697)),
    /* 5312 */ element!(PModeGroupInAtomicSwcInstanceRef, 3196, One, false, 0x0, NotRestricted, None),
    /* 5313 */ element!(PPortInCompositionInstanceRef, 3203, One, false, 0x0, NotRestricted, None),
    /* 5314 */ element!(PPortPrototype, 3205, One, false, 0x0, NotRestricted, None),
    /* 5315 */ element!(PPortPrototypeInExecutableIref, 3206, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3231)),
    /* 5316 */ element!(PPortPrototypeInExecutableIref, 3206, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3244)),
    /* 5317 */ element!(PPortPrototypeInExecutableIref, 3206, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3245)),
    /* 5318 */ element!(PPortPrototypeInExecutableIref, 3206, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3246)),
    /* 5319 */ element!(PPortPrototypeInExecutableIref, 3206, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3247)),
    /* 5320 */ element!(PPortPrototypeInExecutableIref, 3206, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3248)),
    /* 5321 */ element!(PPortPrototypeInExecutableIref, 3206, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3249)),
    /* 5322 */ element!(PPortPrototypeInExecutableIref, 3206, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3250)),
    /* 5323 */ element!(PPortPrototypeInExecutableIref, 3206, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3251)),
    /* 5324 */ element!(PPortPrototypeInExecutableIref, 3206, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(4675)),
    /* 5325 */ element!(PPortPrototypeInExecutableIref, 3206, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(4860)),
    /* 5326 */ element!(PPortPrototypeInExecutableIref, 3206, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5044)),
    /* 5327 */ element!(PPortPrototypeInExecutableIref, 3206, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5048)),
    /* 5328 */ element!(PPortPrototypeInExecutableIref, 3206, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5129)),
    /* 5329 */ element!(PPortPrototypeIref, 3206, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(1814)),
    /* 5330 */ element!(PPortPrototypeIref, 3206, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(4700)),
    /* 5331 */ element!(PTriggerInAtomicSwcTypeInstanceRef, 3213, One, false, 0x0, NotRestricted, None),
    /* 5332 */ element!(PackageRef, 3646, ZeroOrOne, false, 0x0, NotRestricted, Some(3485)),
    /* 5333 */ element!(PackagerId, 3494, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3923)),
    /* 5334 */ element!(PackagerSignatureRef, 4216, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5090)),
    /* 5335 */ element!(PackagerSignatureRef, 5039, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5090)),
    /* 5336 */ element!(PackagingPinName, 4393, ZeroOrOne, false, 0x0, NotRestricted, Some(3555)),
    /* 5337 */ element!(PackingByteOrder, 474, ZeroOrOne, false, 0x0, NotRestricted, Some(3730)),
    /* 5338 */ element!(PackingByteOrder, 474, ZeroOrOne, false, 0x0, NotRestricted, Some(4877)),
    /* 5339 */ element!(PaddingActivation, 298, ZeroOrOne, false, 0x0, ClassicPlatform, Some(5822)),
    /* 5340 */ element!(PaddingValue, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(2608)),
    /* 5341 */ element!(Parameter, 3696, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3383)),
    /* 5342 */ element!(ParameterAccess, 3214, One, false, 0x0, NotRestricted, None),
    /* 5343 */ element!(ParameterAccessedForDebugRef, 3225, One, false, 0x0, NotRestricted, None),
    /* 5344 */ element!(ParameterAccessedForDebugRefs, 320, ZeroOrOne, false, 0x0, NotRestricted, Some(1297)),
    /* 5345 */ element!(ParameterAccesss, 3826, ZeroOrOne, false, 0x1FFF00, NotRestricted, Some(3031)),
    /* 5346 */ element!(ParameterDataPrototype, 3215, One, false, 0x0, NotRestricted, None),
    /* 5347 */ element!(ParameterDataPrototypeIref, 3216, ZeroOrOne, false, 0x0, ClassicPlatform, Some(1705)),
    /* 5348 */ element!(ParameterElementAccess, 1440, ZeroOrOne, false, 0x0, NotRestricted, Some(3427)),
    /* 5349 */ element!(ParameterId, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(2629)),
    /* 5350 */ element!(ParameterImplementationDataTypeElement, 210, ZeroOrOne, false, 0x0, NotRestricted, Some(5700)),
    /* 5351 */ element!(ParameterInstance, 257, ZeroOrOne, false, 0x0, NotRestricted, Some(5139)),
    /* 5352 */ element!(ParameterInterface, 3222, One, false, 0x0, NotRestricted, None),
    /* 5353 */ element!(ParameterPolicys, 359, ZeroOrOne, false, 0x1FFF80, NotRestricted, Some(1735)),
    /* 5354 */ element!(ParameterPortAnnotation, 3224, One, false, 0x0, NotRestricted, None),
    /* 5355 */ element!(ParameterPortAnnotations, 3489, ZeroOrOne, false, 0x0, NotRestricted, Some(153)),
    /* 5356 */ element!(ParameterProvideComSpec, 3226, One, false, 0x0, NotRestricted, None),
    /* 5357 */ element!(ParameterRef, 3225, ZeroOrOne, false, 0x0, NotRestricted, Some(2731)),
    /* 5358 */ element!(ParameterRef, 3225, ZeroOrOne, false, 0x0, NotRestricted, Some(2732)),
    /* 5359 */ element!(ParameterRef, 3225, ZeroOrOne, false, 0x0, NotRestricted, Some(2909)),
    /* 5360 */ element!(ParameterRequireComSpec, 3227, One, false, 0x0, NotRestricted, None),
    /* 5361 */ element!(ParameterSize, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(3504)),
    /* 5362 */ element!(ParameterSwComponentType, 3228, One, false, 0x0, NotRestricted, None),
    /* 5363 */ element!(ParameterValues, 1876, ZeroOrOne, false, 0x1FFFFF, ClassicPlatform, Some(101)),
    /* 5364 */ element!(Parameters, 1892, ZeroOrOne, false, 0x0, ClassicPlatform, Some(903)),
    /* 5365 */ element!(Parameters, 1917, ZeroOrOne, false, 0x1FFF80, ClassicPlatform, Some(3018)),
    /* 5366 */ element!(Parameters, 3223, ZeroOrOne, false, 0x0, NotRestricted, Some(2730)),
    /* 5367 */ element!(ParentCategory, 4393, ZeroOrOne, false, 0x0, NotRestricted, Some(5526)),
    /* 5368 */ element!(ParentShortLabel, 4393, ZeroOrOne, false, 0x0, NotRestricted, Some(5732)),
    /* 5369 */ element!(PartialNetworkRef, 3111, One, false, 0x0, NotRestricted, None),
    /* 5370 */ element!(PartialNetworkRefs, 3112, ZeroOrOne, false, 0x180000, AdaptivePlatform, Some(1862)),
    /* 5371 */ element!(ParticipatingJ1939ClusterRef, 2735, One, false, 0x0, NotRestricted, None),
    /* 5372 */ element!(ParticipatingJ1939ClusterRefs, 2736, ZeroOrOne, false, 0x0, ClassicPlatform, Some(4674)),
    /* 5373 */ element!(PartitionName, 4393, ZeroOrOne, false, 0x0, NotRestricted, Some(822)),
    /* 5374 */ element!(PartitionRef, 4556, ZeroOrOne, false, 0x0, ClassicPlatform, Some(4972)),
    /* 5375 */ element!(Partitions, 1832, ZeroOrOne, false, 0x0, ClassicPlatform, Some(1661)),
    /* 5376 */ element!(Parts, 1275, ZeroOrOne, true, 0x0, NotRestricted, Some(3364)),
    /* 5377 */ element!(Parts, 4137, ZeroOrOne, true, 0x0, AdaptivePlatform, Some(3413)),
    /* 5378 */ element!(Parts, 4157, ZeroOrOne, true, 0x0, AdaptivePlatform, Some(3413)),
    /* 5379 */ element!(Parts, 4354, ZeroOrOne, true, 0x0, AdaptivePlatform, Some(3363)),
    /* 5380 */ element!(PassThroughSwConnector, 3230, One, false, 0x0, NotRestricted, None),
    /* 5381 */ element!(Path, 4393, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3916)),
    /* 5382 */ element!(Path, 4978, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3735)),
    /* 5383 */ element!(PathMtuDiscoveryEnabled, 298, ZeroOrOne, false, 0x0, NotRestricted, Some(755)),
    /* 5384 */ element!(PathMtuEnabled, 298, ZeroOrOne, false, 0x0, NotRestricted, Some(1195)),
    /* 5385 */ element!(PathMtuTimeout, 2229, ZeroOrOne, false, 0x0, NotRestricted, Some(1262)),
    /* 5386 */ element!(Pattern, 4393, ZeroOrOne, false, 0x0, NotRestricted, Some(605)),
    /* 5387 */ element!(PatternJitter, 3068, ZeroOrOne, false, 0x0, NotRestricted, Some(2952)),
    /* 5388 */ element!(PatternJitter, 3068, ZeroOrOne, false, 0x0, NotRestricted, Some(2953)),
    /* 5389 */ element!(PatternLength, 3068, ZeroOrOne, false, 0x0, NotRestricted, Some(2848)),
    /* 5390 */ element!(PatternLength, 3068, ZeroOrOne, false, 0x0, NotRestricted, Some(2849)),
    /* 5391 */ element!(PatternPeriod, 3068, ZeroOrOne, false, 0x0, NotRestricted, Some(3150)),
    /* 5392 */ element!(PatternPeriod, 3068, ZeroOrOne, false, 0x0, NotRestricted, Some(3151)),
    /* 5393 */ element!(PayloadBytePatternRule, 3235, One, false, 0x0, NotRestricted, None),
    /* 5394 */ element!(PayloadBytePatternRulePart, 3236, One, false, 0x0, NotRestricted, None),
    /* 5395 */ element!(PayloadBytePatternRuleParts, 3237, ZeroOrOne, false, 0x0, NotRestricted, Some(371)),
    /* 5396 */ element!(PayloadBytePatternRules, 2153, ZeroOrOne, false, 0x0, NotRestricted, Some(377)),
    /* 5397 */ element!(PayloadLength, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(1046)),
    /* 5398 */ element!(PayloadLengthStatic, 2642, ZeroOrOne, false, 0x0, NotRestricted, Some(1137)),
    /* 5399 */ element!(PayloadPreambleIndicator, 298, ZeroOrOne, false, 0x0, NotRestricted, Some(2655)),
    /* 5400 */ element!(PayloadRef, 3889, ZeroOrOne, false, 0x0, NotRestricted, Some(1865)),
    /* 5401 */ element!(PayloadType, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(1047)),
    /* 5402 */ element!(Payloads, 2731, ZeroOrOne, false, 0x100000, NotRestricted, Some(2248)),
    /* 5403 */ element!(PcmBitDepth, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(814)),
    /* 5404 */ element!(PdelayLatencyThreshold, 2229, ZeroOrOne, false, 0x0, NotRestricted, Some(5852)),
    /* 5405 */ element!(PdelayRequestPeriod, 2229, ZeroOrOne, false, 0x0, NotRestricted, Some(661)),
    /* 5406 */ element!(PdelayRespAndRespFollowUpTimeout, 2229, ZeroOrOne, false, 0x0, NotRestricted, Some(5891)),
    /* 5407 */ element!(PdelayResponseEnabled, 298, ZeroOrOne, false, 0x0, NotRestricted, Some(724)),
    /* 5408 */ element!(PduActivationRoutingGroup, 3238, One, false, 0x0, NotRestricted, None),
    /* 5409 */ element!(PduActivationRoutingGroups, 2074, ZeroOrOne, false, 0x0, NotRestricted, Some(2753)),
    /* 5410 */ element!(PduActivationRoutingGroups, 2074, ZeroOrOne, false, 0x0, NotRestricted, Some(2755)),
    /* 5411 */ element!(PduCollectionMaxBufferSize, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(642)),
    /* 5412 */ element!(PduCollectionPduTimeout, 2229, ZeroOrOne, false, 0x0, NotRestricted, Some(706)),
    /* 5413 */ element!(PduCollectionSemantics, 3242, ZeroOrOne, false, 0x0, NotRestricted, Some(2467)),
    /* 5414 */ element!(PduCollectionTimeout, 2229, ZeroOrOne, false, 0x0, NotRestricted, Some(698)),
    /* 5415 */ element!(PduCollectionTrigger, 3243, ZeroOrOne, false, 0x0, NotRestricted, Some(768)),
    /* 5416 */ element!(PduCounterSize, 2642, ZeroOrOne, false, 0x0, NotRestricted, Some(2410)),
    /* 5417 */ element!(PduCounterStartPosition, 2642, ZeroOrOne, false, 0x0, NotRestricted, Some(1743)),
    /* 5418 */ element!(PduCounterThreshold, 2642, ZeroOrOne, false, 0x0, NotRestricted, Some(5857)),
    /* 5419 */ element!(PduCounters, 2474, ZeroOrOne, false, 0x1C0000, NotRestricted, Some(139)),
    /* 5420 */ element!(PduMaxLength, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(473)),
    /* 5421 */ element!(PduPools, 2172, ZeroOrOne, false, 0x0, NotRestricted, Some(1721)),
    /* 5422 */ element!(PduPools, 2213, ZeroOrOne, false, 0x1C0000, ClassicPlatform, Some(363)),
    /* 5423 */ element!(PduRef, 2573, ZeroOrOne, false, 0x0, ClassicPlatform, Some(2204)),
    /* 5424 */ element!(PduRef, 3247, ZeroOrOne, false, 0x0, NotRestricted, Some(1855)),
    /* 5425 */ element!(PduRef, 3247, ZeroOrOne, false, 0x0, NotRestricted, Some(5172)),
    /* 5426 */ element!(PduReplicationVoting, 2642, ZeroOrOne, false, 0x0, NotRestricted, Some(1618)),
    /* 5427 */ element!(PduReplications, 2475, ZeroOrOne, false, 0x1C0000, NotRestricted, Some(1709)),
    /* 5428 */ element!(PduToFrameMapping, 3246, One, false, 0x0, NotRestricted, None),
    /* 5429 */ element!(PduToFrameMappings, 2278, ZeroOrOne, false, 0x1C0000, NotRestricted, Some(42)),
    /* 5430 */ element!(PduTriggering, 3248, One, false, 0x0, NotRestricted, None),
    /* 5431 */ element!(PduTriggeringRef, 1727, ZeroOrOne, false, 0x0, NotRestricted, Some(1864)),
    /* 5432 */ element!(PduTriggeringRef, 2322, One, false, 0x0, NotRestricted, None),
    /* 5433 */ element!(PduTriggeringRef, 3254, ZeroOrOne, false, 0x0, NotRestricted, None),
    /* 5434 */ element!(PduTriggeringRef, 3889, ZeroOrOne, false, 0x0, NotRestricted, Some(1863)),
    /* 5435 */ element!(PduTriggeringRefConditional, 3253, One, false, 0x0, NotRestricted, None),
    /* 5436 */ element!(PduTriggeringRefs, 2323, ZeroOrOne, false, 0x0, NotRestricted, Some(1816)),
    /* 5437 */ element!(PduTriggerings, 2284, ZeroOrOne, false, 0x1C0000, NotRestricted, Some(4907)),
    /* 5438 */ element!(PduTriggerings, 2366, ZeroOrOne, false, 0x1C0000, NotRestricted, Some(3206)),
    /* 5439 */ element!(PduTriggerings, 3384, ZeroOrOne, false, 0x1FFFF8, ClassicPlatform, Some(1639)),
    /* 5440 */ element!(PduTriggerings, 3384, ZeroOrOne, false, 0x1FFFFE, ClassicPlatform, Some(1639)),
    /* 5441 */ element!(PdurIPduGroup, 3257, One, false, 0x0, NotRestricted, None),
    /* 5442 */ element!(PdurTpChunkSize, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(1690)),
    /* 5443 */ element!(Pdus, 4125, ZeroOrOne, false, 0x0, NotRestricted, Some(6008)),
    /* 5444 */ element!(Pdus, 4133, ZeroOrOne, false, 0x0, NotRestricted, Some(1699)),
    /* 5445 */ element!(PerInstanceMemory, 3259, One, false, 0x0, NotRestricted, None),
    /* 5446 */ element!(PerInstanceMemoryRef, 3725, ZeroOrOne, false, 0x0, NotRestricted, Some(5702)),
    /* 5447 */ element!(PerInstanceMemorySize, 3260, One, false, 0x0, NotRestricted, None),
    /* 5448 */ element!(PerInstanceMemorySizes, 4521, ZeroOrOne, false, 0x1C0000, ClassicPlatform, Some(117)),
    /* 5449 */ element!(PerInstanceMemorys, 4527, ZeroOrOne, false, 0x1FFF80, NotRestricted, Some(488)),
    /* 5450 */ element!(PerInstanceParameterRef, 417, ZeroOrOne, false, 0x0, NotRestricted, Some(3019)),
    /* 5451 */ element!(PerInstanceParameters, 360, ZeroOrOne, false, 0x1FFF80, NotRestricted, Some(866)),
    /* 5452 */ element!(PerInstanceParameters, 3223, ZeroOrOne, false, 0x1FFFFF, NotRestricted, Some(533)),
    /* 5453 */ element!(PerStateTimeout, 3261, One, false, 0x0, NotRestricted, None),
    /* 5454 */ element!(PerStateTimeouts, 2916, ZeroOrOne, false, 0x7C00, AdaptivePlatform, Some(3312)),
    /* 5455 */ element!(Period, 2229, ZeroOrOne, false, 0x0, NotRestricted, Some(1718)),
    /* 5456 */ element!(Period, 2229, ZeroOrOne, false, 0x0, NotRestricted, Some(2301)),
    /* 5457 */ element!(Period, 2229, ZeroOrOne, false, 0x0, NotRestricted, Some(4177)),
    /* 5458 */ element!(Period, 2229, ZeroOrOne, false, 0x0, ClassicPlatform, Some(4245)),
    /* 5459 */ element!(Period, 2229, ZeroOrOne, false, 0x0, NotRestricted, Some(5665)),
    /* 5460 */ element!(Period, 3068, ZeroOrOne, false, 0x0, NotRestricted, Some(3026)),
    /* 5461 */ element!(Period, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(2478)),
    /* 5462 */ element!(Period, 5077, ZeroOrOne, false, 0x0, NotRestricted, Some(1717)),
    /* 5463 */ element!(Period, 5077, ZeroOrOne, false, 0x0, NotRestricted, Some(2301)),
    /* 5464 */ element!(PeriodBegin, 2776, ZeroOrOne, false, 0x0, NotRestricted, Some(2634)),
    /* 5465 */ element!(PeriodEnd, 2776, ZeroOrOne, false, 0x0, NotRestricted, Some(1007)),
    /* 5466 */ element!(PeriodicEventTriggering, 3263, One, false, 0x0, NotRestricted, None),
    /* 5467 */ element!(PeriodicRateCategory, 1448, ZeroOrOne, false, 0x0, NotRestricted, Some(4112)),
    /* 5468 */ element!(PeriodicRates, 1464, ZeroOrOne, false, 0x0, NotRestricted, Some(5600)),
    /* 5469 */ element!(PeriodicResponseUudtRef, 3889, One, false, 0x0, NotRestricted, None),
    /* 5470 */ element!(PeriodicResponseUudtRefs, 1195, ZeroOrOne, false, 0x0, NotRestricted, Some(1827)),
    /* 5471 */ element!(PermissibleSignalPath, 3264, One, false, 0x0, NotRestricted, None),
    /* 5472 */ element!(PermissionCertificateAuthorityRef, 1072, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(233)),
    /* 5473 */ element!(PermissionToCreateChildProcess, 298, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3616)),
    /* 5474 */ element!(PermitMultipleReferencesToEe, 298, ZeroOrOne, false, 0x0, ClassicPlatform, Some(1308)),
    /* 5475 */ element!(PersistencyAccess, 2310, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(4128)),
    /* 5476 */ element!(PersistencyCentralStorageUri, 4978, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3925)),
    /* 5477 */ element!(PersistencyDataElement, 3267, One, false, 0x0, NotRestricted, None),
    /* 5478 */ element!(PersistencyDataProvidedComSpec, 3268, One, false, 0x0, NotRestricted, None),
    /* 5479 */ element!(PersistencyDataRequiredComSpec, 3271, One, false, 0x0, NotRestricted, None),
    /* 5480 */ element!(PersistencyDeploymentElementRef, 4761, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5211)),
    /* 5481 */ element!(PersistencyDeploymentElementRef, 4761, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5242)),
    /* 5482 */ element!(PersistencyDeploymentElementToCryptoKeySlotMapping, 3274, One, false, 0x0, NotRestricted, None),
    /* 5483 */ element!(PersistencyDeploymentRef, 2305, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5150)),
    /* 5484 */ element!(PersistencyDeploymentRef, 2308, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5046)),
    /* 5485 */ element!(PersistencyDeploymentRef, 3277, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5242)),
    /* 5486 */ element!(PersistencyDeploymentRef, 3279, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5242)),
    /* 5487 */ element!(PersistencyDeploymentRef, 3281, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5242)),
    /* 5488 */ element!(PersistencyDeploymentToCryptoKeySlotMapping, 3276, One, false, 0x0, NotRestricted, None),
    /* 5489 */ element!(PersistencyDeploymentToDltLogChannelMapping, 3278, One, false, 0x0, NotRestricted, None),
    /* 5490 */ element!(PersistencyDeploymentToDltLogSinkMapping, 3280, One, false, 0x0, NotRestricted, None),
    /* 5491 */ element!(PersistencyDeploymentUri, 3282, One, false, 0x0, NotRestricted, None),
    /* 5492 */ element!(PersistencyFile, 3284, One, false, 0x0, NotRestricted, None),
    /* 5493 */ element!(PersistencyFileArray, 3285, One, false, 0x0, NotRestricted, None),
    /* 5494 */ element!(PersistencyFileArrayRef, 3294, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5245)),
    /* 5495 */ element!(PersistencyFileArrayRef, 3319, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5245)),
    /* 5496 */ element!(PersistencyFileElement, 3289, One, false, 0x0, NotRestricted, None),
    /* 5497 */ element!(PersistencyFileProxy, 3290, One, false, 0x0, NotRestricted, None),
    /* 5498 */ element!(PersistencyFileProxyInterface, 3291, One, false, 0x0, NotRestricted, None),
    /* 5499 */ element!(PersistencyFileProxyToFileMapping, 3293, One, false, 0x0, NotRestricted, None),
    /* 5500 */ element!(PersistencyFileRequiredComSpec, 3295, One, false, 0x0, NotRestricted, None),
    /* 5501 */ element!(PersistencyFileStorage, 3296, One, false, 0x0, NotRestricted, None),
    /* 5502 */ element!(PersistencyFileStorageInterface, 3298, One, false, 0x0, NotRestricted, None),
    /* 5503 */ element!(PersistencyKeyValueDatabase, 3303, One, false, 0x0, NotRestricted, None),
    /* 5504 */ element!(PersistencyKeyValueDatabaseInterface, 3304, One, false, 0x0, NotRestricted, None),
    /* 5505 */ element!(PersistencyKeyValuePair, 3309, One, false, 0x0, NotRestricted, None),
    /* 5506 */ element!(PersistencyKeyValueStorage, 3312, One, false, 0x0, NotRestricted, None),
    /* 5507 */ element!(PersistencyKeyValueStorageInterface, 3313, One, false, 0x0, NotRestricted, None),
    /* 5508 */ element!(PersistencyPortPrototypeIref, 3481, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5217)),
    /* 5509 */ element!(PersistencyPortPrototypeToFileArrayMapping, 3318, One, false, 0x0, NotRestricted, None),
    /* 5510 */ element!(PersistencyPortPrototypeToFileStorageMapping, 3321, One, false, 0x0, NotRestricted, None),
    /* 5511 */ element!(PersistencyPortPrototypeToKeyValueDatabaseMapping, 3323, One, false, 0x0, NotRestricted, None),
    /* 5512 */ element!(PersistencyPortPrototypeToKeyValueStorageMapping, 3326, One, false, 0x0, NotRestricted, None),
    /* 5513 */ element!(PersistencyProvidedComSpec, 3328, One, false, 0x0, NotRestricted, None),
    /* 5514 */ element!(PersistencyRedundancyCrc, 3329, One, false, 0x0, NotRestricted, None),
    /* 5515 */ element!(PersistencyRedundancyHash, 3332, One, false, 0x0, NotRestricted, None),
    /* 5516 */ element!(PersistencyRedundancyMOutOfN, 3333, One, false, 0x0, NotRestricted, None),
    /* 5517 */ element!(PersistentStorage, 298, ZeroOrOne, false, 0x0, NotRestricted, Some(3586)),
    /* 5518 */ element!(Pgn, 2642, ZeroOrOne, false, 0x0, ClassicPlatform, Some(1703)),
    /* 5519 */ element!(PhmAction, 3334, One, false, 0x0, NotRestricted, None),
    /* 5520 */ element!(PhmActionList, 3337, One, false, 0x0, NotRestricted, None),
    /* 5521 */ element!(PhmArbitration, 3341, One, false, 0x0, NotRestricted, None),
    /* 5522 */ element!(PhmCheckpoint, 3344, One, false, 0x0, NotRestricted, None),
    /* 5523 */ element!(PhmCheckpointIref, 3345, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(1331)),
    /* 5524 */ element!(PhmContributionRef, 3351, One, false, 0x0, NotRestricted, None),
    /* 5525 */ element!(PhmContributionRefs, 3352, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(4982)),
    /* 5526 */ element!(PhmContributionToMachineMapping, 3350, One, false, 0x0, NotRestricted, None),
    /* 5527 */ element!(PhmHealthChannelInterface, 3355, One, false, 0x0, NotRestricted, None),
    /* 5528 */ element!(PhmHealthChannelRecoveryNotificationInterface, 3357, One, false, 0x0, NotRestricted, None),
    /* 5529 */ element!(PhmHealthChannelStatus, 3358, One, false, 0x0, NotRestricted, None),
    /* 5530 */ element!(PhmLogicalExpression, 3364, One, false, 0x0, NotRestricted, None),
    /* 5531 */ element!(PhmRecoveryActionInterface, 3369, One, false, 0x0, NotRestricted, None),
    /* 5532 */ element!(PhmRule, 3370, One, false, 0x0, NotRestricted, None),
    /* 5533 */ element!(PhmSupervisedEntityInterface, 3374, One, false, 0x0, NotRestricted, None),
    /* 5534 */ element!(PhmSupervisionRecoveryNotificationInterface, 3376, One, false, 0x0, NotRestricted, None),
    /* 5535 */ element!(PhysConstrs, 3377, ZeroOrOne, false, 0x0, NotRestricted, Some(889)),
    /* 5536 */ element!(PhysicalChannelRef, 3419, ZeroOrOne, false, 0x0, NotRestricted, None),
    /* 5537 */ element!(PhysicalChannelRef, 3419, One, false, 0x0, NotRestricted, None),
    /* 5538 */ element!(PhysicalChannelRef, 4696, One, false, 0x0, NotRestricted, None),
    /* 5539 */ element!(PhysicalChannelRef, 4696, ZeroOrOne, false, 0x0, NotRestricted, Some(2734)),
    /* 5540 */ element!(PhysicalChannelRef, 4696, ZeroOrOne, false, 0x0, NotRestricted, Some(2735)),
    /* 5541 */ element!(PhysicalChannelRef, 4696, ZeroOrOne, false, 0x0, NotRestricted, Some(2736)),
    /* 5542 */ element!(PhysicalChannelRefConditional, 3385, One, false, 0x0, NotRestricted, None),
    /* 5543 */ element!(PhysicalChannelRefs, 2270, ZeroOrOne, true, 0x0, NotRestricted, Some(2762)),
    /* 5544 */ element!(PhysicalChannelRefs, 2270, ZeroOrOne, false, 0x0, NotRestricted, Some(2763)),
    /* 5545 */ element!(PhysicalChannelRefs, 3420, ZeroOrOne, false, 0x0, NotRestricted, Some(5191)),
    /* 5546 */ element!(PhysicalChannelRefs, 3420, ZeroOrOne, false, 0x180000, NotRestricted, Some(5193)),
    /* 5547 */ element!(PhysicalChannels, 647, ZeroOrOne, false, 0x1FFFF8, NotRestricted, Some(5324)),
    /* 5548 */ element!(PhysicalChannels, 647, ZeroOrOne, false, 0x1FFFFF, NotRestricted, Some(5324)),
    /* 5549 */ element!(PhysicalDimension, 3386, One, false, 0x0, NotRestricted, None),
    /* 5550 */ element!(PhysicalDimensionMapping, 3387, One, false, 0x0, NotRestricted, None),
    /* 5551 */ element!(PhysicalDimensionMappingRef, 678, ZeroOrOne, false, 0x0, NotRestricted, Some(5030)),
    /* 5552 */ element!(PhysicalDimensionMappingSet, 3389, One, false, 0x0, NotRestricted, None),
    /* 5553 */ element!(PhysicalDimensionMappings, 3390, ZeroOrOne, false, 0x0, NotRestricted, Some(3317)),
    /* 5554 */ element!(PhysicalDimensionRef, 4976, ZeroOrOne, false, 0x0, NotRestricted, Some(3481)),
    /* 5555 */ element!(PhysicalLayerType, 2042, ZeroOrOne, false, 0x0, NotRestricted, Some(2581)),
    /* 5556 */ element!(PhysicalProps, 4477, ZeroOrOne, false, 0x1C0000, NotRestricted, Some(2442)),
    /* 5557 */ element!(PhysicalRequestRef, 1198, ZeroOrOne, false, 0x0, NotRestricted, Some(1933)),
    /* 5558 */ element!(Pid, 3494, ZeroOrOne, false, 0x0, ClassicPlatform, Some(1132)),
    /* 5559 */ element!(PidRef, 1450, One, false, 0x0, NotRestricted, None),
    /* 5560 */ element!(PidRef, 1450, ZeroOrOne, false, 0x0, NotRestricted, Some(5456)),
    /* 5561 */ element!(PidRefs, 1451, ZeroOrOne, false, 0x0, NotRestricted, Some(5457)),
    /* 5562 */ element!(PidSize, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(3125)),
    /* 5563 */ element!(PinNumber, 2642, ZeroOrOne, false, 0x0, NotRestricted, Some(3556)),
    /* 5564 */ element!(PlatformActionItem, 3391, One, false, 0x0, NotRestricted, None),
    /* 5565 */ element!(PlatformHealthManagementContribution, 3393, One, false, 0x0, NotRestricted, None),
    /* 5566 */ element!(PlatformModuleEthernetEndpointConfiguration, 3407, One, false, 0x0, NotRestricted, None),
    /* 5567 */ element!(PlatformPhmActionItem, 3411, One, false, 0x0, NotRestricted, None),
    /* 5568 */ element!(PlatformTimeBases, 4782, ZeroOrOne, false, 0x1C0000, NotRestricted, Some(2262)),
    /* 5569 */ element!(PlcaLocalNodeCount, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(648)),
    /* 5570 */ element!(PlcaLocalNodeId, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(3719)),
    /* 5571 */ element!(PlcaMaxBurstCount, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(530)),
    /* 5572 */ element!(PlcaMaxBurstTimer, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(1368)),
    /* 5573 */ element!(PlcaProps, 3413, ZeroOrOne, false, 0x0, NotRestricted, Some(1674)),
    /* 5574 */ element!(PlcaTransmitOpportunityTimer, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(5892)),
    /* 5575 */ element!(PnResetTime, 2229, ZeroOrOne, false, 0x0, NotRestricted, Some(2590)),
    /* 5576 */ element!(PnResetTimer, 2229, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(2591)),
    /* 5577 */ element!(PncClusterVectorLength, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(1689)),
    /* 5578 */ element!(PncConsumedProvidedServiceInstanceGroups, 3421, ZeroOrOne, false, 0x1C0000, NotRestricted, Some(426)),
    /* 5579 */ element!(PncFilterArrayMask, 3494, One, false, 0x0, NotRestricted, None),
    /* 5580 */ element!(PncFilterArrayMasks, 649, ZeroOrOne, true, 0x0, NotRestricted, Some(197)),
    /* 5581 */ element!(PncFilterDataMask, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(195)),
    /* 5582 */ element!(PncFilterDataMask, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(196)),
    /* 5583 */ element!(PncGatewayType, 3414, ZeroOrOne, false, 0x0, ClassicPlatform, Some(526)),
    /* 5584 */ element!(PncGroupRef, 3422, One, false, 0x0, NotRestricted, None),
    /* 5585 */ element!(PncGroupRefs, 3423, ZeroOrOne, false, 0x180000, ClassicPlatform, Some(1168)),
    /* 5586 */ element!(PncIdentifier, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(1176)),
    /* 5587 */ element!(PncMapping, 3415, One, false, 0x0, NotRestricted, None),
    /* 5588 */ element!(PncMappingRef, 768, One, false, 0x0, NotRestricted, None),
    /* 5589 */ element!(PncMappingRefs, 769, ZeroOrOne, false, 0x180000, NotRestricted, Some(2215)),
    /* 5590 */ element!(PncMappings, 4626, ZeroOrOne, false, 0x1C0000, NotRestricted, Some(1448)),
    /* 5591 */ element!(PncNmRequest, 298, ZeroOrOne, false, 0x0, NotRestricted, Some(528)),
    /* 5592 */ element!(PncPdurGroupRef, 3424, One, false, 0x0, NotRestricted, None),
    /* 5593 */ element!(PncPdurGroupRefs, 3425, ZeroOrOne, false, 0x180000, ClassicPlatform, Some(5192)),
    /* 5594 */ element!(PncPrepareSleepTimer, 2229, ZeroOrOne, false, 0x0, NotRestricted, Some(5870)),
    /* 5595 */ element!(PncPrepareSleepTimer, 2229, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5870)),
    /* 5596 */ element!(PncSynchronousWakeup, 298, ZeroOrOne, false, 0x0, NotRestricted, Some(1258)),
    /* 5597 */ element!(PncVectorLength, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(1365)),
    /* 5598 */ element!(PncVectorOffset, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(82)),
    /* 5599 */ element!(PncWakeupCanId, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(218)),
    /* 5600 */ element!(PncWakeupCanIdExtended, 298, ZeroOrOne, false, 0x0, NotRestricted, Some(748)),
    /* 5601 */ element!(PncWakeupCanIdMask, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(193)),
    /* 5602 */ element!(PncWakeupDataMask, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(194)),
    /* 5603 */ element!(PncWakeupDlc, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(449)),
    /* 5604 */ element!(PncWakeupEnable, 298, ZeroOrOne, false, 0x0, NotRestricted, Some(1259)),
    /* 5605 */ element!(Policy, 2457, ZeroOrOne, false, 0x0, NotRestricted, Some(127)),
    /* 5606 */ element!(PolicyAction, 771, ZeroOrOne, false, 0x0, NotRestricted, Some(584)),
    /* 5607 */ element!(PortAddress, 2642, ZeroOrOne, false, 0x0, NotRestricted, Some(3987)),
    /* 5608 */ element!(PortApiOption, 3431, One, false, 0x0, NotRestricted, None),
    /* 5609 */ element!(PortApiOptions, 4528, ZeroOrOne, false, 0x1FFF80, NotRestricted, Some(1691)),
    /* 5610 */ element!(PortArgValues, 3432, ZeroOrOne, true, 0x0, NotRestricted, Some(131)),
    /* 5611 */ element!(PortBlueprint, 3435, One, false, 0x0, NotRestricted, None),
    /* 5612 */ element!(PortBlueprintInitValue, 3436, One, false, 0x0, NotRestricted, None),
    /* 5613 */ element!(PortBlueprintMapping, 3441, One, false, 0x0, NotRestricted, None),
    /* 5614 */ element!(PortBlueprintMappings, 294, ZeroOrOne, false, 0x0, NotRestricted, Some(5639)),
    /* 5615 */ element!(PortBlueprintRef, 3442, ZeroOrOne, false, 0x0, NotRestricted, Some(2737)),
    /* 5616 */ element!(PortConfigs, 4283, ZeroOrOne, false, 0x0, NotRestricted, Some(5906)),
    /* 5617 */ element!(PortDefinedArgumentBlueprint, 3444, One, false, 0x0, NotRestricted, None),
    /* 5618 */ element!(PortDefinedArgumentBlueprints, 568, ZeroOrOne, true, 0x1C0000, ClassicPlatform, Some(5794)),
    /* 5619 */ element!(PortDefinedArgumentValue, 3446, One, false, 0x0, NotRestricted, None),
    /* 5620 */ element!(PortElementToComResourceMappings, 4627, ZeroOrOne, false, 0x1F0000, ClassicPlatform, Some(6029)),
    /* 5621 */ element!(PortElementToCommunicationResourceMapping, 3448, One, false, 0x0, NotRestricted, None),
    /* 5622 */ element!(PortGroup, 3450, One, false, 0x0, NotRestricted, None),
    /* 5623 */ element!(PortGroups, 4469, ZeroOrOne, false, 0x1C0000, NotRestricted, Some(56)),
    /* 5624 */ element!(PortInstantiationBehavior, 3457, ZeroOrOne, false, 0x0, NotRestricted, Some(4220)),
    /* 5625 */ element!(PortInterfaceBlueprintMapping, 3458, One, false, 0x0, NotRestricted, None),
    /* 5626 */ element!(PortInterfaceBlueprintRef, 3475, ZeroOrOne, false, 0x0, NotRestricted, Some(5631)),
    /* 5627 */ element!(PortInterfaceMappingSet, 3463, One, false, 0x0, NotRestricted, None),
    /* 5628 */ element!(PortInterfaceMappings, 3464, ZeroOrOne, false, 0x1C0000, NotRestricted, Some(2479)),
    /* 5629 */ element!(PortInterfaceRef, 3461, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(4767)),
    /* 5630 */ element!(PortInterfaceRef, 3469, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5691)),
    /* 5631 */ element!(PortInterfaceToDataTypeMapping, 3466, One, false, 0x0, NotRestricted, None),
    /* 5632 */ element!(PortNumber, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(1742)),
    /* 5633 */ element!(PortNumber, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(4097)),
    /* 5634 */ element!(PortPrototypeBlueprint, 3470, One, false, 0x0, NotRestricted, None),
    /* 5635 */ element!(PortPrototypeBlueprintInitValue, 3471, One, false, 0x0, NotRestricted, None),
    /* 5636 */ element!(PortPrototypeBlueprintMapping, 3476, One, false, 0x0, NotRestricted, None),
    /* 5637 */ element!(PortPrototypeBlueprintRef, 3477, ZeroOrOne, false, 0x0, NotRestricted, Some(2739)),
    /* 5638 */ element!(PortPrototypeBlueprintRef, 4746, ZeroOrOne, false, 0x0, NotRestricted, Some(6032)),
    /* 5639 */ element!(PortPrototypeIref, 3206, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5011)),
    /* 5640 */ element!(PortPrototypeIref, 3481, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(1944)),
    /* 5641 */ element!(PortPrototypeIref, 3481, ZeroOrOne, false, 0x0, NotRestricted, Some(1946)),
    /* 5642 */ element!(PortPrototypeIref, 3481, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5123)),
    /* 5643 */ element!(PortPrototypeIref, 3481, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5217)),
    /* 5644 */ element!(PortPrototypeIref, 3481, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5243)),
    /* 5645 */ element!(PortPrototypeIref, 3596, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(1945)),
    /* 5646 */ element!(PortPrototypeIref, 3596, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5243)),
    /* 5647 */ element!(PortPrototypeIref, 4747, ZeroOrOne, false, 0x0, NotRestricted, Some(6017)),
    /* 5648 */ element!(PortPrototypeProps, 3490, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3500)),
    /* 5649 */ element!(PortPrototypeRef, 212, ZeroOrOne, false, 0x0, NotRestricted, Some(5194)),
    /* 5650 */ element!(PortPrototypeRef, 866, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5051)),
    /* 5651 */ element!(PortPrototypeRef, 885, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(4864)),
    /* 5652 */ element!(PortPrototypeRef, 960, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(4819)),
    /* 5653 */ element!(PortPrototypeRef, 3433, ZeroOrOne, false, 0x0, NotRestricted, None),
    /* 5654 */ element!(PortPrototypeRef, 3433, ZeroOrOne, false, 0x0, NotRestricted, Some(2376)),
    /* 5655 */ element!(PortPrototypeRef, 3433, ZeroOrOne, false, 0x0, NotRestricted, Some(4816)),
    /* 5656 */ element!(PortPrototypeRef, 3433, ZeroOrOne, false, 0x0, NotRestricted, Some(4817)),
    /* 5657 */ element!(PortPrototypeRef, 3433, ZeroOrOne, false, 0x0, NotRestricted, Some(4820)),
    /* 5658 */ element!(PortPrototypeRef, 3443, ZeroOrOne, false, 0x0, NotRestricted, Some(2738)),
    /* 5659 */ element!(PortPrototypeRefConditional, 3491, One, false, 0x0, NotRestricted, None),
    /* 5660 */ element!(PortPrototypeSlugFragment, 4393, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3558)),
    /* 5661 */ element!(PortRef, 3433, ZeroOrOne, false, 0x0, NotRestricted, Some(3014)),
    /* 5662 */ element!(PortRef, 4729, ZeroOrOne, false, 0x0, NotRestricted, Some(3015)),
    /* 5663 */ element!(PortRef, 4748, ZeroOrOne, false, 0x0, NotRestricted, Some(6031)),
    /* 5664 */ element!(PortScheduler, 2031, ZeroOrOne, false, 0x0, NotRestricted, Some(679)),
    /* 5665 */ element!(Ports, 4470, ZeroOrOne, false, 0x1FFE00, NotRestricted, Some(2740)),
    /* 5666 */ element!(Ports, 4470, ZeroOrOne, false, 0x1FFFFF, NotRestricted, Some(2740)),
    /* 5667 */ element!(Position, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(5670)),
    /* 5668 */ element!(Position, 4393, ZeroOrOne, false, 0x0, NotRestricted, Some(5698)),
    /* 5669 */ element!(Position, 5078, ZeroOrOne, false, 0x0, NotRestricted, Some(5698)),
    /* 5670 */ element!(Position, 5078, ZeroOrOne, false, 0x0, NotRestricted, Some(5777)),
    /* 5671 */ element!(PositionInTable, 2642, ZeroOrOne, false, 0x0, ClassicPlatform, Some(2288)),
    /* 5672 */ element!(PositiveIntegerValueVariationPoint, 2231, One, false, 0x0, NotRestricted, None),
    /* 5673 */ element!(PossibleApErrorRef, 577, One, false, 0x0, NotRestricted, None),
    /* 5674 */ element!(PossibleApErrorRefs, 578, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(4976)),
    /* 5675 */ element!(PossibleApErrorSetRef, 579, One, false, 0x0, NotRestricted, None),
    /* 5676 */ element!(PossibleApErrorSetRefs, 580, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5214)),
    /* 5677 */ element!(PossibleErrorReaction, 3495, One, false, 0x0, NotRestricted, None),
    /* 5678 */ element!(PossibleErrorReactions, 4894, ZeroOrOne, false, 0x0, NotRestricted, Some(863)),
    /* 5679 */ element!(PossibleErrorRef, 581, One, false, 0x0, NotRestricted, None),
    /* 5680 */ element!(PossibleErrorRefs, 582, ZeroOrOne, false, 0x0, ClassicPlatform, Some(1758)),
    /* 5681 */ element!(PossibleErrors, 564, ZeroOrOne, false, 0x0, NotRestricted, Some(159)),
    /* 5682 */ element!(PossibleErrors, 4037, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5528)),
    /* 5683 */ element!(PostBuildChangeable, 298, ZeroOrOne, false, 0x0, ClassicPlatform, Some(2466)),
    /* 5684 */ element!(PostBuildValueAccessRef, 5031, ZeroOrOne, false, 0x0, NotRestricted, Some(5504)),
    /* 5685 */ element!(PostBuildVariantCondition, 3496, One, false, 0x0, NotRestricted, None),
    /* 5686 */ element!(PostBuildVariantConditions, 5028, ZeroOrOne, false, 0x0, NotRestricted, Some(4831)),
    /* 5687 */ element!(PostBuildVariantConditions, 5032, ZeroOrOne, false, 0x0, NotRestricted, Some(5434)),
    /* 5688 */ element!(PostBuildVariantCriterion, 3498, One, false, 0x0, NotRestricted, None),
    /* 5689 */ element!(PostBuildVariantCriterionValue, 3499, One, false, 0x0, NotRestricted, None),
    /* 5690 */ element!(PostBuildVariantCriterionValueSet, 3500, One, false, 0x0, NotRestricted, None),
    /* 5691 */ element!(PostBuildVariantCriterionValueSetRef, 2248, One, false, 0x0, NotRestricted, None),
    /* 5692 */ element!(PostBuildVariantCriterionValueSetRef, 3508, One, false, 0x0, NotRestricted, None),
    /* 5693 */ element!(PostBuildVariantCriterionValueSetRefs, 2249, ZeroOrOne, false, 0x0, NotRestricted, Some(2352)),
    /* 5694 */ element!(PostBuildVariantCriterionValueSetRefs, 3509, ZeroOrOne, false, 0x0, NotRestricted, Some(4821)),
    /* 5695 */ element!(PostBuildVariantCriterionValues, 3501, ZeroOrOne, false, 0x0, NotRestricted, Some(4739)),
    /* 5696 */ element!(PostBuildVariantMultiplicity, 298, ZeroOrOne, false, 0x0, ClassicPlatform, Some(1304)),
    /* 5697 */ element!(PostBuildVariantMultiplicity, 298, ZeroOrOne, false, 0x0, ClassicPlatform, Some(1306)),
    /* 5698 */ element!(PostBuildVariantSupport, 298, ZeroOrOne, false, 0x0, ClassicPlatform, Some(1305)),
    /* 5699 */ element!(PostBuildVariantUsed, 298, ZeroOrOne, false, 0x0, ClassicPlatform, Some(1310)),
    /* 5700 */ element!(PostBuildVariantValue, 298, ZeroOrOne, false, 0x0, ClassicPlatform, Some(1307)),
    /* 5701 */ element!(PostVerificationReboot, 298, ZeroOrOne, false, 0x0, NotRestricted, Some(1784)),
    /* 5702 */ element!(Posts, 1606, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5438)),
    /* 5703 */ element!(PowerDownTime, 3494, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3962)),
    /* 5704 */ element!(PrPortPrototype, 3502, One, false, 0x0, NotRestricted, None),
    /* 5705 */ element!(PreActivateIref, 2295, One, false, 0x0, NotRestricted, None),
    /* 5706 */ element!(PreActivateIrefs, 4221, ZeroOrOne, true, 0x0, AdaptivePlatform, Some(3086)),
    /* 5707 */ element!(PreActivateRef, 4228, One, false, 0x0, NotRestricted, None),
    /* 5708 */ element!(PreActivateRefs, 4225, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5021)),
    /* 5709 */ element!(PreActivationReboot, 298, ZeroOrOne, false, 0x0, NotRestricted, Some(1785)),
    /* 5710 */ element!(PreMapping, 298, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3885)),
    /* 5711 */ element!(PreSharedKeyRef, 2692, ZeroOrOne, false, 0x0, NotRestricted, Some(5069)),
    /* 5712 */ element!(PreSharedKeyRef, 4816, ZeroOrOne, false, 0x0, NotRestricted, Some(5070)),
    /* 5713 */ element!(PreSharedKeyRef, 4837, ZeroOrOne, false, 0x0, NotRestricted, Some(5071)),
    /* 5714 */ element!(PreconfiguredConfigurationRef, 342, One, false, 0x0, NotRestricted, None),
    /* 5715 */ element!(PreconfiguredConfigurationRefs, 341, ZeroOrOne, false, 0x0, ClassicPlatform, Some(2229)),
    /* 5716 */ element!(PredecessorActionRef, 437, One, false, 0x0, NotRestricted, None),
    /* 5717 */ element!(PredecessorActionRefs, 451, ZeroOrOne, false, 0x0, NotRestricted, Some(3484)),
    /* 5718 */ element!(PredecessorFifoRef, 780, ZeroOrOne, false, 0x0, NotRestricted, Some(545)),
    /* 5719 */ element!(PredecessorRef, 777, One, false, 0x0, NotRestricted, None),
    /* 5720 */ element!(PredecessorRefs, 778, ZeroOrOne, true, 0x0, NotRestricted, Some(1693)),
    /* 5721 */ element!(PredefinedText, 298, ZeroOrOne, false, 0x0, NotRestricted, Some(3801)),
    /* 5722 */ element!(PredefinedVariant, 3505, One, false, 0x0, NotRestricted, None),
    /* 5723 */ element!(Preemptability, 3194, ZeroOrOne, false, 0x0, ClassicPlatform, Some(3741)),
    /* 5724 */ element!(Prefix, 2500, ZeroOrOne, false, 0x0, NotRestricted, Some(3029)),
    /* 5725 */ element!(PrefixRef, 2971, ZeroOrOne, false, 0x0, NotRestricted, Some(3030)),
    /* 5726 */ element!(PrepareRollback, 4949, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3934)),
    /* 5727 */ element!(PrepareUpdate, 4949, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3935)),
    /* 5728 */ element!(PrestorageFreezeFrame, 298, ZeroOrOne, false, 0x0, NotRestricted, Some(3884)),
    /* 5729 */ element!(PrestoredFreezeframeStoredInNvm, 298, ZeroOrOne, false, 0x0, NotRestricted, Some(1235)),
    /* 5730 */ element!(PrestoredFreezeframeStoredInNvm, 298, ZeroOrOne, false, 0x0, NotRestricted, Some(1236)),
    /* 5731 */ element!(PreviousContractVersion, 4394, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3937)),
    /* 5732 */ element!(PreviousDataTypeRef, 3302, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5141)),
    /* 5733 */ element!(PreviousExecutableVersion, 4394, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3949)),
    /* 5734 */ element!(Primitive, 887, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3278)),
    /* 5735 */ element!(Primitive, 887, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3352)),
    /* 5736 */ element!(PrimitiveAttributeCondition, 3513, One, false, 0x0, NotRestricted, None),
    /* 5737 */ element!(PrimitiveAttributeTailoring, 3515, One, false, 0x0, NotRestricted, None),
    /* 5738 */ element!(PrimitiveFamily, 4393, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(4100)),
    /* 5739 */ element!(PrimitiveTypeMappings, 589, ZeroOrOne, false, 0x0, NotRestricted, Some(1437)),
    /* 5740 */ element!(Priority, 2231, ZeroOrOne, false, 0x0, NotRestricted, Some(1764)),
    /* 5741 */ element!(Priority, 2231, ZeroOrOne, false, 0x0, NotRestricted, Some(5673)),
    /* 5742 */ element!(Priority, 3494, One, false, 0x0, NotRestricted, None),
    /* 5743 */ element!(Priority, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(489)),
    /* 5744 */ element!(Priority, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(608)),
    /* 5745 */ element!(Priority, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(666)),
    /* 5746 */ element!(Priority, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(2368)),
    /* 5747 */ element!(Priority, 3494, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3645)),
    /* 5748 */ element!(Priority, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(3646)),
    /* 5749 */ element!(Priority, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(3647)),
    /* 5750 */ element!(Priority, 3494, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3648)),
    /* 5751 */ element!(Priority, 3494, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3649)),
    /* 5752 */ element!(Priority, 3494, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3743)),
    /* 5753 */ element!(Priority, 3494, ZeroOrOne, false, 0x0, ClassicPlatform, Some(3744)),
    /* 5754 */ element!(Priority, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(3745)),
    /* 5755 */ element!(Priority, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(3944)),
    /* 5756 */ element!(PriorityId, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(1762)),
    /* 5757 */ element!(Prioritys, 782, ZeroOrOne, false, 0x0, NotRestricted, Some(491)),
    /* 5758 */ element!(PrivacyLevel, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(3190)),
    /* 5759 */ element!(PrivacyLevel, 3517, ZeroOrOne, false, 0x0, NotRestricted, Some(2741)),
    /* 5760 */ element!(Prm, 2320, Any, false, 0x0, NotRestricted, Some(5425)),
    /* 5761 */ element!(PrmChar, 3519, Any, false, 0x0, NotRestricted, Some(5527)),
    /* 5762 */ element!(PrmUnit, 2625, ZeroOrOne, false, 0x0, NotRestricted, Some(4801)),
    /* 5763 */ element!(Prms, 3523, One, false, 0x0, NotRestricted, Some(4714)),
    /* 5764 */ element!(Process, 3524, One, false, 0x0, NotRestricted, None),
    /* 5765 */ element!(ProcessArgument, 3525, One, false, 0x0, NotRestricted, None),
    /* 5766 */ element!(ProcessArguments, 4329, ZeroOrOne, true, 0x0, AdaptivePlatform, Some(3348)),
    /* 5767 */ element!(ProcessDesign, 3526, One, false, 0x0, NotRestricted, None),
    /* 5768 */ element!(ProcessDesignRef, 3, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5052)),
    /* 5769 */ element!(ProcessDesignRef, 672, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5121)),
    /* 5770 */ element!(ProcessDesignRef, 1559, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(2134)),
    /* 5771 */ element!(ProcessDesignRef, 1721, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(2135)),
    /* 5772 */ element!(ProcessDesignRef, 2384, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5015)),
    /* 5773 */ element!(ProcessDesignRef, 2384, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5099)),
    /* 5774 */ element!(ProcessDesignToMachineDesignMapping, 3531, One, false, 0x0, NotRestricted, None),
    /* 5775 */ element!(ProcessDesignToMachineDesignMappingSet, 3533, One, false, 0x0, NotRestricted, None),
    /* 5776 */ element!(ProcessDesignToMachineDesignMappings, 3534, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5543)),
    /* 5777 */ element!(ProcessExecutionError, 3538, One, false, 0x0, NotRestricted, None),
    /* 5778 */ element!(ProcessModeIref, 3031, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5330)),
    /* 5779 */ element!(ProcessModeMachine, 2998, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(2387)),
    /* 5780 */ element!(ProcessPhmActionItem, 3541, One, false, 0x0, NotRestricted, None),
    /* 5781 */ element!(ProcessRef, 3, ZeroOrOne, false, 0x100000, AdaptivePlatform, Some(2223)),
    /* 5782 */ element!(ProcessRef, 153, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(2221)),
    /* 5783 */ element!(ProcessRef, 1228, ZeroOrOne, false, 0x1E0000, AdaptivePlatform, Some(2223)),
    /* 5784 */ element!(ProcessRef, 1279, ZeroOrOne, false, 0x1C0000, AdaptivePlatform, Some(2223)),
    /* 5785 */ element!(ProcessRef, 1279, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5052)),
    /* 5786 */ element!(ProcessRef, 1351, ZeroOrOne, false, 0xC000, AdaptivePlatform, Some(2223)),
    /* 5787 */ element!(ProcessRef, 1551, ZeroOrOne, false, 0x2000, AdaptivePlatform, Some(2223)),
    /* 5788 */ element!(ProcessRef, 1555, ZeroOrOne, false, 0x1C000, AdaptivePlatform, Some(2223)),
    /* 5789 */ element!(ProcessRef, 1559, ZeroOrOne, false, 0x1F0000, AdaptivePlatform, Some(2223)),
    /* 5790 */ element!(ProcessRef, 1565, ZeroOrOne, false, 0x3F000, AdaptivePlatform, Some(2223)),
    /* 5791 */ element!(ProcessRef, 1617, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(2223)),
    /* 5792 */ element!(ProcessRef, 1617, ZeroOrOne, false, 0x180000, AdaptivePlatform, Some(2223)),
    /* 5793 */ element!(ProcessRef, 1629, ZeroOrOne, false, 0x7000, AdaptivePlatform, Some(2223)),
    /* 5794 */ element!(ProcessRef, 1731, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(2130)),
    /* 5795 */ element!(ProcessRef, 2292, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5014)),
    /* 5796 */ element!(ProcessRef, 2292, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5144)),
    /* 5797 */ element!(ProcessRef, 2292, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5145)),
    /* 5798 */ element!(ProcessRef, 2309, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(2)),
    /* 5799 */ element!(ProcessRef, 2384, ZeroOrOne, false, 0x1FC000, AdaptivePlatform, Some(2223)),
    /* 5800 */ element!(ProcessRef, 3084, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5142)),
    /* 5801 */ element!(ProcessRef, 3084, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5145)),
    /* 5802 */ element!(ProcessRef, 3131, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(2131)),
    /* 5803 */ element!(ProcessRef, 3131, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(2216)),
    /* 5804 */ element!(ProcessRef, 3131, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5251)),
    /* 5805 */ element!(ProcessRef, 3132, ZeroOrOne, false, 0x0, NotRestricted, Some(2128)),
    /* 5806 */ element!(ProcessRef, 3132, ZeroOrOne, false, 0x0, NotRestricted, Some(2219)),
    /* 5807 */ element!(ProcessRef, 3320, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5251)),
    /* 5808 */ element!(ProcessRef, 3325, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5252)),
    /* 5809 */ element!(ProcessRef, 3403, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(2132)),
    /* 5810 */ element!(ProcessRef, 3530, ZeroOrOne, false, 0x1FF000, AdaptivePlatform, Some(2223)),
    /* 5811 */ element!(ProcessRef, 3542, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(2221)),
    /* 5812 */ element!(ProcessRef, 3551, ZeroOrOne, false, 0x1F0000, AdaptivePlatform, Some(2129)),
    /* 5813 */ element!(ProcessRef, 3551, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5013)),
    /* 5814 */ element!(ProcessRef, 3619, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(2128)),
    /* 5815 */ element!(ProcessRef, 3637, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(2221)),
    /* 5816 */ element!(ProcessRef, 3705, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5252)),
    /* 5817 */ element!(ProcessRef, 3920, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(2220)),
    /* 5818 */ element!(ProcessRef, 3920, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5143)),
    /* 5819 */ element!(ProcessRef, 3920, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5251)),
    /* 5820 */ element!(ProcessRef, 4226, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5022)),
    /* 5821 */ element!(ProcessRef, 4408, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(568)),
    /* 5822 */ element!(ProcessRef, 4408, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(2133)),
    /* 5823 */ element!(ProcessRef, 4414, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(1935)),
    /* 5824 */ element!(ProcessRef, 4414, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(2217)),
    /* 5825 */ element!(ProcessRef, 4414, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(2218)),
    /* 5826 */ element!(ProcessRef, 4414, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5251)),
    /* 5827 */ element!(ProcessRef, 4773, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(2180)),
    /* 5828 */ element!(ProcessStateIref, 3031, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5330)),
    /* 5829 */ element!(ProcessStateMachine, 2998, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(2388)),
    /* 5830 */ element!(ProcessToMachineMapping, 3547, One, false, 0x0, NotRestricted, None),
    /* 5831 */ element!(ProcessToMachineMappingSet, 3552, One, false, 0x0, NotRestricted, None),
    /* 5832 */ element!(ProcessToMachineMappings, 3553, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5544)),
    /* 5833 */ element!(ProcessingKind, 3557, ZeroOrOne, false, 0x0, NotRestricted, Some(3559)),
    /* 5834 */ element!(ProcessingStyle, 1452, ZeroOrOne, false, 0x0, NotRestricted, Some(3585)),
    /* 5835 */ element!(ProcessingUnitRef, 1841, ZeroOrOne, false, 0x0, ClassicPlatform, Some(1669)),
    /* 5836 */ element!(Processor, 3558, One, false, 0x0, NotRestricted, None),
    /* 5837 */ element!(ProcessorCore, 3559, One, false, 0x0, NotRestricted, None),
    /* 5838 */ element!(ProcessorMode, 4393, ZeroOrOne, false, 0x0, NotRestricted, Some(2473)),
    /* 5839 */ element!(ProcessorMode, 5078, ZeroOrOne, false, 0x0, NotRestricted, Some(2473)),
    /* 5840 */ element!(ProcessorSpeed, 4393, ZeroOrOne, false, 0x0, NotRestricted, Some(2596)),
    /* 5841 */ element!(ProcessorSpeed, 5078, ZeroOrOne, false, 0x0, NotRestricted, Some(2596)),
    /* 5842 */ element!(Processors, 2917, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5565)),
    /* 5843 */ element!(ProductId, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(1022)),
    /* 5844 */ element!(ProductRelease, 3721, ZeroOrOne, false, 0x0, NotRestricted, Some(5989)),
    /* 5845 */ element!(ProfileBehavior, 1960, ZeroOrOne, false, 0x0, NotRestricted, Some(191)),
    /* 5846 */ element!(ProfileName, 4393, ZeroOrOne, false, 0x0, NotRestricted, Some(824)),
    /* 5847 */ element!(ProfileName, 4393, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(824)),
    /* 5848 */ element!(ProgCode, 3561, ZeroOrOne, false, 0x0, NotRestricted, Some(5812)),
    /* 5849 */ element!(ProgrammingLanguage, 3562, ZeroOrOne, false, 0x0, ClassicPlatform, Some(1765)),
    /* 5850 */ element!(PropSeg, 2642, ZeroOrOne, false, 0x0, NotRestricted, Some(2484)),
    /* 5851 */ element!(PropSeg, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(2484)),
    /* 5852 */ element!(Propability, 2229, ZeroOrOne, false, 0x0, NotRestricted, Some(3035)),
    /* 5853 */ element!(Propability, 5077, ZeroOrOne, false, 0x0, NotRestricted, Some(3035)),
    /* 5854 */ element!(PropagationDelay, 2229, ZeroOrOne, false, 0x0, NotRestricted, Some(1193)),
    /* 5855 */ element!(Propertys, 3694, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3370)),
    /* 5856 */ element!(Props, 4817, ZeroOrOne, false, 0x0, NotRestricted, Some(2780)),
    /* 5857 */ element!(Protocol, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(1061)),
    /* 5858 */ element!(Protocol, 4393, ZeroOrOne, false, 0x0, NotRestricted, Some(1708)),
    /* 5859 */ element!(Protocol, 4393, ZeroOrOne, false, 0x0, NotRestricted, Some(2586)),
    /* 5860 */ element!(ProtocolKind, 4393, ZeroOrOne, false, 0x0, NotRestricted, Some(4677)),
    /* 5861 */ element!(ProtocolName, 4393, ZeroOrOne, false, 0x0, NotRestricted, Some(2995)),
    /* 5862 */ element!(ProtocolName, 5078, ZeroOrOne, false, 0x0, NotRestricted, Some(2995)),
    /* 5863 */ element!(ProtocolVersion, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(1038)),
    /* 5864 */ element!(ProtocolVersion, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(1048)),
    /* 5865 */ element!(ProtocolVersion, 4393, ZeroOrOne, false, 0x0, NotRestricted, Some(1141)),
    /* 5866 */ element!(ProtocolVersion, 4393, ZeroOrOne, false, 0x0, NotRestricted, Some(3192)),
    /* 5867 */ element!(ProtocolVersion, 4393, ZeroOrOne, false, 0x0, ClassicPlatform, Some(5993)),
    /* 5868 */ element!(ProtocolVersion, 4393, ZeroOrOne, false, 0x0, ClassicPlatform, Some(5994)),
    /* 5869 */ element!(ProtocolVersion, 5078, ZeroOrOne, false, 0x0, NotRestricted, Some(3192)),
    /* 5870 */ element!(ProtocolVersion, 5078, ZeroOrOne, false, 0x0, NotRestricted, Some(5993)),
    /* 5871 */ element!(ProvideResources, 789, ZeroOrOne, false, 0x0, ClassicPlatform, Some(3371)),
    /* 5872 */ element!(ProvidedClientServerEntrys, 395, ZeroOrOne, false, 0x1FFF80, ClassicPlatform, Some(2491)),
    /* 5873 */ element!(ProvidedComSpecs, 5, ZeroOrOne, false, 0x180000, NotRestricted, Some(1771)),
    /* 5874 */ element!(ProvidedComSpecs, 3478, ZeroOrOne, false, 0x0, NotRestricted, Some(1771)),
    /* 5875 */ element!(ProvidedDataRef, 316, ZeroOrOne, false, 0x0, NotRestricted, Some(2837)),
    /* 5876 */ element!(ProvidedDatas, 396, ZeroOrOne, false, 0x1FFF80, ClassicPlatform, Some(2447)),
    /* 5877 */ element!(ProvidedDdsEventQosProps, 3563, One, false, 0x0, NotRestricted, None),
    /* 5878 */ element!(ProvidedDdsOperations, 1009, ZeroOrOne, false, 0x180000, NotRestricted, Some(327)),
    /* 5879 */ element!(ProvidedDdsServiceInstance, 3565, One, false, 0x0, NotRestricted, None),
    /* 5880 */ element!(ProvidedDdsServiceInstanceEvents, 1010, ZeroOrOne, false, 0x180000, NotRestricted, Some(326)),
    /* 5881 */ element!(ProvidedEntrys, 402, ZeroOrOne, false, 0x1FFF80, ClassicPlatform, Some(2453)),
    /* 5882 */ element!(ProvidedEventGroups, 3580, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(1380)),
    /* 5883 */ element!(ProvidedInterfaceTref, 3212, ZeroOrOne, false, 0x0, NotRestricted, Some(2914)),
    /* 5884 */ element!(ProvidedMemoryRef, 1841, ZeroOrOne, false, 0x0, NotRestricted, Some(2198)),
    /* 5885 */ element!(ProvidedModeGroupRef, 3039, ZeroOrOne, false, 0x0, NotRestricted, Some(3041)),
    /* 5886 */ element!(ProvidedModeGroups, 397, ZeroOrOne, false, 0x1FFF80, ClassicPlatform, Some(63)),
    /* 5887 */ element!(ProvidedOuterPortRef, 3231, ZeroOrOne, false, 0x0, NotRestricted, Some(5674)),
    /* 5888 */ element!(ProvidedPortPrototypeIref, 3208, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5050)),
    /* 5889 */ element!(ProvidedRequiredInterfaceTref, 3503, ZeroOrOne, false, 0x0, NotRestricted, Some(5458)),
    /* 5890 */ element!(ProvidedServiceInstance, 3571, One, false, 0x0, NotRestricted, None),
    /* 5891 */ element!(ProvidedServiceInstanceRef, 720, ZeroOrOne, false, 0x0, NotRestricted, Some(1936)),
    /* 5892 */ element!(ProvidedServiceInstanceRef, 3574, ZeroOrOne, false, 0x0, NotRestricted, None),
    /* 5893 */ element!(ProvidedServiceInstanceRef, 3577, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(1869)),
    /* 5894 */ element!(ProvidedServiceInstanceRefConditional, 3573, One, false, 0x0, NotRestricted, None),
    /* 5895 */ element!(ProvidedServiceInstanceToSwClusterDesignPPortPrototypeMapping, 3576, One, false, 0x0, NotRestricted, None),
    /* 5896 */ element!(ProvidedServiceInstances, 173, ZeroOrOne, false, 0x0, NotRestricted, Some(1772)),
    /* 5897 */ element!(ProvidedServiceInstances, 711, ZeroOrOne, false, 0x1C0000, NotRestricted, Some(4917)),
    /* 5898 */ element!(ProvidedServicePortIref, 3206, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(4698)),
    /* 5899 */ element!(ProvidedSomeipServiceInstance, 3578, One, false, 0x0, NotRestricted, None),
    /* 5900 */ element!(ProvidedUserDefinedServiceInstance, 3582, One, false, 0x0, NotRestricted, None),
    /* 5901 */ element!(ProviderIref, 3203, ZeroOrOne, false, 0x0, NotRestricted, Some(1327)),
    /* 5902 */ element!(ProviderRateDeviationMax, 3494, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3863)),
    /* 5903 */ element!(ProviderRef, 4672, ZeroOrOne, false, 0x0, ClassicPlatform, Some(223)),
    /* 5904 */ element!(ProviderRef, 4672, ZeroOrOne, false, 0x0, ClassicPlatform, Some(4834)),
    /* 5905 */ element!(ProviderSoftwareClusterRef, 1402, ZeroOrOne, false, 0x0, ClassicPlatform, Some(4928)),
    /* 5906 */ element!(ProviedeDataRef, 317, ZeroOrOne, false, 0x0, NotRestricted, Some(2837)),
    /* 5907 */ element!(PskIdentity, 3512, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(366)),
    /* 5908 */ element!(PskIdentity, 4393, ZeroOrOne, false, 0x0, NotRestricted, Some(4053)),
    /* 5909 */ element!(PskIdentity, 4836, ZeroOrOne, false, 0x0, NotRestricted, Some(1760)),
    /* 5910 */ element!(PskIdentityHint, 4393, ZeroOrOne, false, 0x0, NotRestricted, Some(4051)),
    /* 5911 */ element!(PskIdentityToKeySlotMapping, 3583, One, false, 0x0, NotRestricted, None),
    /* 5912 */ element!(PskIdentityToKeySlotMappings, 4823, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(1423)),
    /* 5913 */ element!(Publisher, 4393, ZeroOrOne, false, 0x0, NotRestricted, Some(5675)),
    /* 5914 */ element!(Publisher, 5078, ZeroOrOne, false, 0x0, NotRestricted, Some(5859)),
    /* 5915 */ element!(PulseTest, 3586, ZeroOrOne, false, 0x0, NotRestricted, Some(3966)),
    /* 5916 */ element!(PureLocalTimeBase, 3587, One, false, 0x0, NotRestricted, None),
    /* 5917 */ element!(PurposeOfUpdateRef, 4222, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3069)),
    /* 5918 */ element!(Puts, 1606, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5436)),
    /* 5919 */ element!(PwmL, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(2504)),
    /* 5920 */ element!(PwmO, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(2506)),
    /* 5921 */ element!(PwmS, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(2505)),
    /* 5922 */ element!(QosProfile, 4393, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(1184)),
    /* 5923 */ element!(QosProfile, 4393, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(1185)),
    /* 5924 */ element!(QosProfile, 4393, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(1186)),
    /* 5925 */ element!(QosProfile, 4393, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(1187)),
    /* 5926 */ element!(QueueLength, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(10)),
    /* 5927 */ element!(QueueLength, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(1356)),
    /* 5928 */ element!(QueueLength, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(1357)),
    /* 5929 */ element!(QueueLength, 3494, ZeroOrOne, false, 0x0, ClassicPlatform, Some(1358)),
    /* 5930 */ element!(QueueLength, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(1361)),
    /* 5931 */ element!(QueueLength, 3494, ZeroOrOne, false, 0x0, ClassicPlatform, Some(1361)),
    /* 5932 */ element!(QueueSize, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(668)),
    /* 5933 */ element!(QueueSize, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(1366)),
    /* 5934 */ element!(QueueSize, 3494, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(1366)),
    /* 5935 */ element!(QueuedReceiverComSpec, 3588, One, false, 0x0, NotRestricted, None),
    /* 5936 */ element!(QueuedSenderComSpec, 3589, One, false, 0x0, NotRestricted, None),
    /* 5937 */ element!(RModeGroupInAtomicSwcInstanceRef, 3590, One, false, 0x0, NotRestricted, None),
    /* 5938 */ element!(RPortInCompositionInstanceRef, 3594, One, false, 0x0, NotRestricted, None),
    /* 5939 */ element!(RPortPrototype, 3595, One, false, 0x0, NotRestricted, None),
    /* 5940 */ element!(RPortPrototypeInExecutableIref, 3596, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3229)),
    /* 5941 */ element!(RPortPrototypeInExecutableIref, 3596, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3230)),
    /* 5942 */ element!(RPortPrototypeInExecutableIref, 3596, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3231)),
    /* 5943 */ element!(RPortPrototypeInExecutableIref, 3596, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3232)),
    /* 5944 */ element!(RPortPrototypeInExecutableIref, 3596, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3234)),
    /* 5945 */ element!(RPortPrototypeInExecutableIref, 3596, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3235)),
    /* 5946 */ element!(RPortPrototypeInExecutableIref, 3596, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3236)),
    /* 5947 */ element!(RPortPrototypeInExecutableIref, 3596, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3237)),
    /* 5948 */ element!(RPortPrototypeInExecutableIref, 3596, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3239)),
    /* 5949 */ element!(RPortPrototypeInExecutableIref, 3596, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3241)),
    /* 5950 */ element!(RPortPrototypeInExecutableIref, 3596, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3242)),
    /* 5951 */ element!(RPortPrototypeInExecutableIref, 3596, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3243)),
    /* 5952 */ element!(RPortPrototypeInExecutableIref, 3596, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(4676)),
    /* 5953 */ element!(RPortPrototypeInExecutableIref, 3596, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5047)),
    /* 5954 */ element!(RPortPrototypeInExecutableIref, 3596, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5130)),
    /* 5955 */ element!(RPortPrototypeIref, 3596, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(1818)),
    /* 5956 */ element!(RPortPrototypeIref, 3596, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5011)),
    /* 5957 */ element!(RPortPrototypeProps, 3601, One, false, 0x0, NotRestricted, None),
    /* 5958 */ element!(RPortPrototypeRef, 54, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(1819)),
    /* 5959 */ element!(RPortPrototypeRef, 54, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(2138)),
    /* 5960 */ element!(RTriggerInAtomicSwcInstanceRef, 3602, One, false, 0x0, NotRestricted, None),
    /* 5961 */ element!(RamBlock, 5016, ZeroOrOne, false, 0x0, ClassicPlatform, Some(569)),
    /* 5962 */ element!(RamBlockInitValue, 3159, ZeroOrOne, false, 0x0, NotRestricted, Some(5628)),
    /* 5963 */ element!(RamBlockStatusControl, 3604, ZeroOrOne, false, 0x0, NotRestricted, Some(3613)),
    /* 5964 */ element!(RamLocationRef, 3162, ZeroOrOne, false, 0x0, NotRestricted, Some(2268)),
    /* 5965 */ element!(RangeMax, 2642, ZeroOrOne, false, 0x0, NotRestricted, Some(1457)),
    /* 5966 */ element!(RangeMin, 2642, ZeroOrOne, false, 0x0, NotRestricted, Some(1519)),
    /* 5967 */ element!(RapidPrototypingScenario, 3605, One, false, 0x0, NotRestricted, None),
    /* 5968 */ element!(RateBasedMonitoredEventRef, 3172, ZeroOrOne, false, 0x0, NotRestricted, Some(3051)),
    /* 5969 */ element!(RateCorrectionMeasurementDuration, 2229, ZeroOrOne, false, 0x0, NotRestricted, Some(848)),
    /* 5970 */ element!(RateCorrectionOut, 2642, ZeroOrOne, false, 0x0, NotRestricted, Some(1412)),
    /* 5971 */ element!(RateCorrectionsPerMeasurementDuration, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(651)),
    /* 5972 */ element!(RateCorrectionsPerMeasurementDuration, 3494, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(1627)),
    /* 5973 */ element!(RateDeviationMeasurementDuration, 2229, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5875)),
    /* 5974 */ element!(RateLimitationFilters, 2519, ZeroOrOne, false, 0x1C0000, NotRestricted, Some(5080)),
    /* 5975 */ element!(RateLimitationFilters, 2527, ZeroOrOne, false, 0x0, NotRestricted, Some(3372)),
    /* 5976 */ element!(RatePolicys, 758, ZeroOrOne, false, 0x0, NotRestricted, Some(1783)),
    /* 5977 */ element!(RatioKind, 1384, ZeroOrOne, false, 0x0, NotRestricted, Some(3566)),
    /* 5978 */ element!(Rationale, 1803, ZeroOrOne, false, 0x0, NotRestricted, Some(5676)),
    /* 5979 */ element!(RawDataStreamClientInterface, 3608, One, false, 0x0, NotRestricted, None),
    /* 5980 */ element!(RawDataStreamDeployment, 3609, One, false, 0x0, NotRestricted, None),
    /* 5981 */ element!(RawDataStreamGrantDesign, 3614, One, false, 0x0, NotRestricted, None),
    /* 5982 */ element!(RawDataStreamInterface, 3617, One, false, 0x0, NotRestricted, None),
    /* 5983 */ element!(RawDataStreamInterfaceRef, 3611, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5100)),
    /* 5984 */ element!(RawDataStreamMethodDeployment, 3620, One, false, 0x0, NotRestricted, None),
    /* 5985 */ element!(RawDataStreamRef, 3615, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5055)),
    /* 5986 */ element!(RawDataStreamServerInterface, 3623, One, false, 0x0, NotRestricted, None),
    /* 5987 */ element!(ReactionCode, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(1014)),
    /* 5988 */ element!(Read, 569, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3331)),
    /* 5989 */ element!(Read, 569, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5646)),
    /* 5990 */ element!(Read, 569, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5647)),
    /* 5991 */ element!(ReadClassRef, 1461, ZeroOrOne, false, 0x0, NotRestricted, Some(5273)),
    /* 5992 */ element!(ReadClassRef, 1471, ZeroOrOne, false, 0x0, NotRestricted, Some(5285)),
    /* 5993 */ element!(ReadDataClassRef, 1465, ZeroOrOne, false, 0x0, NotRestricted, Some(5284)),
    /* 5994 */ element!(ReadDtcInformationClassRef, 1468, ZeroOrOne, false, 0x0, NotRestricted, Some(5283)),
    /* 5995 */ element!(ReadLocalVariables, 3816, ZeroOrOne, false, 0x1FFF00, NotRestricted, Some(3032)),
    /* 5996 */ element!(ReadNvData, 260, ZeroOrOne, false, 0x0, ClassicPlatform, Some(1894)),
    /* 5997 */ element!(ReadScalingDataClassRef, 1474, ZeroOrOne, false, 0x0, NotRestricted, Some(5286)),
    /* 5998 */ element!(ReaderEntityId, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(1023)),
    /* 5999 */ element!(Readonly, 298, ZeroOrOne, false, 0x0, NotRestricted, Some(6066)),
    /* 6000 */ element!(Reason, 3064, ZeroOrOne, false, 0x0, NotRestricted, Some(4902)),
    /* 6001 */ element!(ReceiveActivity, 2057, ZeroOrOne, false, 0x0, NotRestricted, Some(611)),
    /* 6002 */ element!(ReceiveWindowMin, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(1542)),
    /* 6003 */ element!(ReceivedDataRef, 314, ZeroOrOne, false, 0x0, NotRestricted, Some(2836)),
    /* 6004 */ element!(ReceiverAnnotation, 3624, One, false, 0x0, NotRestricted, None),
    /* 6005 */ element!(ReceiverCapability, 3625, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(4136)),
    /* 6006 */ element!(ReceiverIntent, 3627, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(4139)),
    /* 6007 */ element!(ReceiverIref, 5020, One, false, 0x0, NotRestricted, None),
    /* 6008 */ element!(ReceiverIrefs, 1968, ZeroOrOne, false, 0x0, NotRestricted, Some(5677)),
    /* 6009 */ element!(ReceiverRef, 523, One, false, 0x0, NotRestricted, None),
    /* 6010 */ element!(ReceiverRef, 2220, One, false, 0x0, NotRestricted, None),
    /* 6011 */ element!(ReceiverRef, 2742, One, false, 0x0, NotRestricted, None),
    /* 6012 */ element!(ReceiverRef, 2826, One, false, 0x0, NotRestricted, None),
    /* 6013 */ element!(ReceiverRefs, 524, ZeroOrOne, false, 0x0, ClassicPlatform, Some(3148)),
    /* 6014 */ element!(ReceiverRefs, 2221, ZeroOrOne, false, 0x0, ClassicPlatform, Some(3148)),
    /* 6015 */ element!(ReceiverRefs, 2743, ZeroOrOne, false, 0x0, ClassicPlatform, Some(3148)),
    /* 6016 */ element!(ReceiverRefs, 2827, ZeroOrOne, false, 0x0, ClassicPlatform, Some(3148)),
    /* 6017 */ element!(ReceptionDefaultValues, 2483, ZeroOrOne, true, 0x0, NotRestricted, Some(5968)),
    /* 6018 */ element!(ReceptionPolicys, 361, ZeroOrOne, false, 0x1FFF80, NotRestricted, Some(456)),
    /* 6019 */ element!(ReceptionProps, 3628, ZeroOrOne, false, 0x0, NotRestricted, Some(1)),
    /* 6020 */ element!(RecommendedConfigurationRef, 342, One, false, 0x0, NotRestricted, None),
    /* 6021 */ element!(RecommendedConfigurationRefs, 343, ZeroOrOne, false, 0x0, ClassicPlatform, Some(2018)),
    /* 6022 */ element!(RecordElementMappings, 586, ZeroOrOne, false, 0x0, NotRestricted, Some(941)),
    /* 6023 */ element!(RecordElementMappings, 3948, ZeroOrOne, false, 0x0, NotRestricted, Some(942)),
    /* 6024 */ element!(RecordElementRef, 2628, ZeroOrOne, false, 0x0, NotRestricted, Some(1829)),
    /* 6025 */ element!(RecordElementRef, 2628, ZeroOrOne, false, 0x0, NotRestricted, Some(1830)),
    /* 6026 */ element!(RecordElements, 1622, ZeroOrOne, false, 0x180000, NotRestricted, Some(474)),
    /* 6027 */ element!(RecordNumber, 2231, ZeroOrOne, false, 0x0, NotRestricted, Some(3597)),
    /* 6028 */ element!(RecordNumber, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(4219)),
    /* 6029 */ element!(RecordValueSpecification, 3630, One, false, 0x0, NotRestricted, None),
    /* 6030 */ element!(RecoverableInSameOperationCycle, 298, ZeroOrOne, false, 0x0, NotRestricted, Some(1239)),
    /* 6031 */ element!(Recovery, 569, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3328)),
    /* 6032 */ element!(RecoveryActionIref, 3206, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5012)),
    /* 6033 */ element!(RecoveryActionIref, 3567, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(4989)),
    /* 6034 */ element!(RecoveryNotification, 3632, One, false, 0x0, NotRestricted, None),
    /* 6035 */ element!(RecoveryNotification, 3632, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(573)),
    /* 6036 */ element!(RecoveryNotificationRef, 2403, One, false, 0x0, NotRestricted, None),
    /* 6037 */ element!(RecoveryNotificationRef, 3634, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5056)),
    /* 6038 */ element!(RecoveryNotificationRefs, 2404, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(572)),
    /* 6039 */ element!(RecoveryNotificationRetry, 3494, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(1628)),
    /* 6040 */ element!(RecoveryNotificationTimeout, 2229, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(2945)),
    /* 6041 */ element!(RecoveryNotificationToPPortPrototypeMapping, 3633, One, false, 0x0, NotRestricted, None),
    /* 6042 */ element!(RecoveryViaApplicationAction, 3635, One, false, 0x0, NotRestricted, None),
    /* 6043 */ element!(RecoveryViaApplicationActionRef, 3638, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5057)),
    /* 6044 */ element!(RecoveryViaApplicationActionToClientServerOperationMapping, 3636, One, false, 0x0, NotRestricted, None),
    /* 6045 */ element!(Redundancy, 3330, ZeroOrOne, false, 0x0, NotRestricted, Some(4066)),
    /* 6046 */ element!(Redundancy, 3330, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(4066)),
    /* 6047 */ element!(RedundancyHandlings, 3275, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3336)),
    /* 6048 */ element!(RedundancyHandlings, 3300, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3335)),
    /* 6049 */ element!(ReentrancyLevel, 3639, ZeroOrOne, false, 0x0, NotRestricted, Some(3056)),
    /* 6050 */ element!(Ref, 3640, ZeroOrOne, false, 0x0, NotRestricted, Some(4790)),
    /* 6051 */ element!(Ref, 3641, ZeroOrOne, false, 0x0, NotRestricted, Some(4790)),
    /* 6052 */ element!(RefCalprmSet, 2935, ZeroOrOne, false, 0x1FFFC0, NotRestricted, Some(2278)),
    /* 6053 */ element!(RefCalprmSet, 2943, ZeroOrOne, false, 0x1FE000, NotRestricted, Some(2277)),
    /* 6054 */ element!(RefMeasurementSet, 2943, ZeroOrOne, false, 0x1FE000, NotRestricted, Some(2279)),
    /* 6055 */ element!(ReferenceBase, 3642, One, false, 0x0, NotRestricted, None),
    /* 6056 */ element!(ReferenceBases, 209, ZeroOrOne, false, 0x1FFFFC, NotRestricted, Some(4338)),
    /* 6057 */ element!(ReferenceCondition, 3647, One, false, 0x0, NotRestricted, None),
    /* 6058 */ element!(ReferenceRef, 3648, ZeroOrOne, false, 0x0, NotRestricted, Some(3061)),
    /* 6059 */ element!(ReferenceTableRef, 3162, ZeroOrOne, false, 0x0, NotRestricted, Some(2274)),
    /* 6060 */ element!(ReferenceTailoring, 3649, One, false, 0x0, NotRestricted, None),
    /* 6061 */ element!(ReferenceValueRef, 258, ZeroOrOne, false, 0x0, NotRestricted, Some(3085)),
    /* 6062 */ element!(ReferenceValueSpecification, 3651, One, false, 0x0, NotRestricted, None),
    /* 6063 */ element!(ReferenceValues, 1877, ZeroOrOne, false, 0x1FFFFF, ClassicPlatform, Some(102)),
    /* 6064 */ element!(ReferencedBaseline, 263, ZeroOrOne, false, 0x0, NotRestricted, Some(2808)),
    /* 6065 */ element!(ReferencedTdEventSwcRef, 4732, ZeroOrOne, false, 0x0, ClassicPlatform, Some(3090)),
    /* 6066 */ element!(ReferencedTdEventVfbRef, 4750, ZeroOrOne, false, 0x0, NotRestricted, Some(3090)),
    /* 6067 */ element!(References, 1893, ZeroOrOne, false, 0x0, ClassicPlatform, Some(904)),
    /* 6068 */ element!(References, 1918, ZeroOrOne, false, 0x1FFF80, ClassicPlatform, Some(3092)),
    /* 6069 */ element!(ReferrableRef, 3654, ZeroOrOne, false, 0x0, NotRestricted, None),
    /* 6070 */ element!(ReferrableRef, 5075, ZeroOrOne, false, 0x0, NotRestricted, Some(4666)),
    /* 6071 */ element!(RefillAmount, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(3734)),
    /* 6072 */ element!(RefinedEventIref, 2639, ZeroOrOne, false, 0x0, NotRestricted, Some(4691)),
    /* 6073 */ element!(RefinedModuleDefRef, 1880, ZeroOrOne, false, 0x0, ClassicPlatform, Some(1675)),
    /* 6074 */ element!(RegDoesNotRequireStabilitys, 699, ZeroOrOne, false, 0x1FFFF8, NotRestricted, Some(4670)),
    /* 6075 */ element!(RegRequiresStabilitys, 699, ZeroOrOne, false, 0x1FFFF8, NotRestricted, Some(4671)),
    /* 6076 */ element!(RegeneratedPriority, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(2283)),
    /* 6077 */ element!(RegularExpression, 4393, ZeroOrOne, false, 0x0, ClassicPlatform, Some(5705)),
    /* 6078 */ element!(RegularExpression, 5078, ZeroOrOne, false, 0x0, NotRestricted, Some(5704)),
    /* 6079 */ element!(RekeyInterval, 2229, ZeroOrOne, false, 0x0, NotRestricted, Some(4052)),
    /* 6080 */ element!(RelatedTraceItemRef, 1883, ZeroOrOne, false, 0x0, ClassicPlatform, Some(4303)),
    /* 6081 */ element!(Relations, 2257, ZeroOrOne, false, 0x0, NotRestricted, Some(537)),
    /* 6082 */ element!(Relative, 2642, ZeroOrOne, false, 0x0, NotRestricted, Some(1467)),
    /* 6083 */ element!(RelativeRepresentationTime, 2229, ZeroOrOne, false, 0x0, NotRestricted, Some(702)),
    /* 6084 */ element!(RelativeRepresentationTime, 2229, ZeroOrOne, false, 0x0, NotRestricted, Some(703)),
    /* 6085 */ element!(RelativeTolerance, 3656, One, false, 0x0, NotRestricted, None),
    /* 6086 */ element!(ReleaseNotesRef, 4197, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3502)),
    /* 6087 */ element!(ReleasedTriggerPolicys, 362, ZeroOrOne, false, 0x1FFF80, NotRestricted, Some(1736)),
    /* 6088 */ element!(ReleasedTriggerRef, 422, ZeroOrOne, false, 0x0, NotRestricted, Some(2771)),
    /* 6089 */ element!(ReleasedTriggers, 4924, ZeroOrOne, false, 0x1FFF80, ClassicPlatform, Some(27)),
    /* 6090 */ element!(RelevantForDynamicPncMappingRef, 1835, One, false, 0x0, NotRestricted, None),
    /* 6091 */ element!(RelevantForDynamicPncMappingRefs, 3426, ZeroOrOne, false, 0x180000, ClassicPlatform, Some(1861)),
    /* 6092 */ element!(Reliability, 1062, ZeroOrOne, false, 0x0, NotRestricted, Some(556)),
    /* 6093 */ element!(Reliability, 3150, ZeroOrOne, false, 0x0, NotRestricted, Some(2289)),
    /* 6094 */ element!(ReliabilityKind, 1063, ZeroOrOne, false, 0x0, NotRestricted, Some(2344)),
    /* 6095 */ element!(ReliabilityMaxBlockingTime, 2229, ZeroOrOne, false, 0x0, NotRestricted, Some(2345)),
    /* 6096 */ element!(RemappedCanId, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(3632)),
    /* 6097 */ element!(RemappedCanId, 3494, ZeroOrOne, false, 0x0, ClassicPlatform, Some(3632)),
    /* 6098 */ element!(Remark, 1803, ZeroOrOne, false, 0x0, NotRestricted, Some(2290)),
    /* 6099 */ element!(Remark, 1803, ZeroOrOne, false, 0x0, NotRestricted, Some(2291)),
    /* 6100 */ element!(Remark, 1803, ZeroOrOne, false, 0x0, NotRestricted, Some(5394)),
    /* 6101 */ element!(Remark, 1803, ZeroOrOne, false, 0x0, NotRestricted, Some(5405)),
    /* 6102 */ element!(RemoteAccessControlEnabled, 298, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5829)),
    /* 6103 */ element!(RemoteAddresss, 4381, ZeroOrOne, false, 0x1C0000, NotRestricted, Some(2292)),
    /* 6104 */ element!(RemoteCertificateRef, 2690, One, false, 0x0, NotRestricted, None),
    /* 6105 */ element!(RemoteCertificateRef, 4818, ZeroOrOne, false, 0x0, NotRestricted, Some(5081)),
    /* 6106 */ element!(RemoteCertificateRefs, 2693, ZeroOrOne, false, 0x0, NotRestricted, Some(5065)),
    /* 6107 */ element!(RemoteClientConfig, 2053, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3294)),
    /* 6108 */ element!(RemoteConfigs, 3409, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(854)),
    /* 6109 */ element!(RemoteEndpointConfiguration, 3657, One, false, 0x0, NotRestricted, None),
    /* 6110 */ element!(RemoteId, 4393, ZeroOrOne, false, 0x0, NotRestricted, Some(3615)),
    /* 6111 */ element!(RemoteIpAddressRef, 2694, One, false, 0x0, NotRestricted, None),
    /* 6112 */ element!(RemoteIpAddressRefs, 2695, ZeroOrOne, false, 0x0, NotRestricted, Some(846)),
    /* 6113 */ element!(RemoteMulticastConfigRef, 4284, One, false, 0x0, NotRestricted, None),
    /* 6114 */ element!(RemoteMulticastConfigRefs, 4285, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(4934)),
    /* 6115 */ element!(RemoteMulticastSubscriptionAddresss, 719, ZeroOrOne, false, 0x1C0000, NotRestricted, Some(4959)),
    /* 6116 */ element!(RemoteNetworkEndpointRef, 2674, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(4937)),
    /* 6117 */ element!(RemotePortRangeEnd, 3494, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(4189)),
    /* 6118 */ element!(RemotePortRangeEnd, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(4190)),
    /* 6119 */ element!(RemotePortRangeStart, 3494, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(4185)),
    /* 6120 */ element!(RemotePortRangeStart, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(4186)),
    /* 6121 */ element!(RemotePortRef, 4131, ZeroOrOne, false, 0x0, NotRestricted, Some(5173)),
    /* 6122 */ element!(RemoteServerConfig, 2054, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3295)),
    /* 6123 */ element!(RemoteSubjectRef, 620, One, false, 0x0, NotRestricted, None),
    /* 6124 */ element!(RemoteSubjectRef, 620, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(4870)),
    /* 6125 */ element!(RemoteSubjectRefs, 619, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(4870)),
    /* 6126 */ element!(RemoteSubjectRefs, 621, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(4870)),
    /* 6127 */ element!(RemoteUnicastAddresss, 2073, ZeroOrOne, false, 0x1C0000, NotRestricted, Some(4955)),
    /* 6128 */ element!(RemoteUnicastAddresss, 2073, ZeroOrOne, false, 0x1C0000, NotRestricted, Some(4956)),
    /* 6129 */ element!(RemoteUnicastConfigRef, 4286, One, false, 0x0, NotRestricted, None),
    /* 6130 */ element!(RemoteUnicastConfigRefs, 4287, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(1282)),
    /* 6131 */ element!(RemotingTechnology, 3658, ZeroOrOne, false, 0x0, NotRestricted, Some(715)),
    /* 6132 */ element!(RepetitionPeriod, 4765, ZeroOrOne, false, 0x0, NotRestricted, Some(3098)),
    /* 6133 */ element!(ReplaceWith, 5012, ZeroOrOne, false, 0x0, ClassicPlatform, Some(3302)),
    /* 6134 */ element!(ReplayProtection, 298, ZeroOrOne, false, 0x0, NotRestricted, Some(3996)),
    /* 6135 */ element!(ReplayProtectionWindow, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(1281)),
    /* 6136 */ element!(ReplicaPdusRef, 4378, One, false, 0x0, NotRestricted, None),
    /* 6137 */ element!(ReplicaPdusRefs, 4077, ZeroOrOne, false, 0x0, NotRestricted, Some(2025)),
    /* 6138 */ element!(ReplyTopicName, 1043, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(1565)),
    /* 6139 */ element!(ReportBehavior, 3660, ZeroOrOne, false, 0x0, NotRestricted, Some(5832)),
    /* 6140 */ element!(ReportableSecurityEventRef, 2524, One, false, 0x0, NotRestricted, None),
    /* 6141 */ element!(ReportableSecurityEventRefs, 2525, ZeroOrOne, false, 0x1F0000, AdaptivePlatform, Some(328)),
    /* 6142 */ element!(ReportedSecurityEventIref, 3594, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(4678)),
    /* 6143 */ element!(ReportingBehavior, 2117, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(6048)),
    /* 6144 */ element!(ReportingPortPrototypeIref, 3596, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(4701)),
    /* 6145 */ element!(Repository, 4978, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3946)),
    /* 6146 */ element!(RepresentedModelElementRef, 236, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5135)),
    /* 6147 */ element!(RepresentedPortGroupRef, 4543, ZeroOrOne, false, 0x0, NotRestricted, Some(5264)),
    /* 6148 */ element!(RepresentsVin, 298, ZeroOrOne, false, 0x0, NotRestricted, Some(4288)),
    /* 6149 */ element!(Request2Support, 298, ZeroOrOne, false, 0x0, NotRestricted, Some(980)),
    /* 6150 */ element!(RequestConfigurationDesigns, 1751, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(2296)),
    /* 6151 */ element!(RequestConfigurations, 1758, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(2296)),
    /* 6152 */ element!(RequestControlOfOnBoardDeviceClassRef, 1478, ZeroOrOne, false, 0x0, NotRestricted, Some(5267)),
    /* 6153 */ element!(RequestCurrentPowertrainDiagnosticDataClassRef, 1482, ZeroOrOne, false, 0x0, NotRestricted, Some(5268)),
    /* 6154 */ element!(RequestDataSize, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(5742)),
    /* 6155 */ element!(RequestDownloadClassRef, 1485, ZeroOrOne, false, 0x0, NotRestricted, Some(5287)),
    /* 6156 */ element!(RequestEmissionRelatedDtcClassPermanentStatusRef, 1490, ZeroOrOne, false, 0x0, NotRestricted, Some(5270)),
    /* 6157 */ element!(RequestEmissionRelatedDtcClassRef, 1491, ZeroOrOne, false, 0x0, NotRestricted, Some(5269)),
    /* 6158 */ element!(RequestFileTransferClassRef, 1496, ZeroOrOne, false, 0x0, NotRestricted, Some(5288)),
    /* 6159 */ element!(RequestGroupRef, 2467, ZeroOrOne, false, 0x0, NotRestricted, Some(2230)),
    /* 6160 */ element!(RequestMethod, 3661, ZeroOrOne, false, 0x0, NotRestricted, Some(1142)),
    /* 6161 */ element!(RequestOnBoardMonitoringTestResultsClassRef, 1501, ZeroOrOne, false, 0x0, NotRestricted, Some(5271)),
    /* 6162 */ element!(RequestPowertrainFreezeFrameDataRef, 1506, ZeroOrOne, false, 0x0, NotRestricted, Some(5272)),
    /* 6163 */ element!(RequestResponseDelay, 3662, ZeroOrOne, false, 0x0, NotRestricted, Some(1507)),
    /* 6164 */ element!(RequestResponseDelay, 3662, ZeroOrOne, false, 0x0, NotRestricted, Some(1508)),
    /* 6165 */ element!(RequestResponseDelay, 3662, ZeroOrOne, false, 0x0, NotRestricted, Some(2750)),
    /* 6166 */ element!(RequestResult, 569, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5710)),
    /* 6167 */ element!(RequestResult, 1507, ZeroOrOne, false, 0x0, NotRestricted, Some(5486)),
    /* 6168 */ element!(RequestSeedId, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(5849)),
    /* 6169 */ element!(RequestTopicName, 1043, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(1567)),
    /* 6170 */ element!(RequestType, 3663, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(913)),
    /* 6171 */ element!(RequestUploadClassRef, 1511, ZeroOrOne, false, 0x0, NotRestricted, Some(5289)),
    /* 6172 */ element!(RequestVehicleInformationClassRef, 1515, ZeroOrOne, false, 0x0, NotRestricted, Some(5266)),
    /* 6173 */ element!(Requestable, 298, ZeroOrOne, false, 0x0, ClassicPlatform, Some(1701)),
    /* 6174 */ element!(RequestedModeIref, 3028, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(4947)),
    /* 6175 */ element!(RequestedModeIref, 3028, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(4949)),
    /* 6176 */ element!(RequestedModeIref, 3031, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(4944)),
    /* 6177 */ element!(RequesterIref, 3594, ZeroOrOne, false, 0x0, NotRestricted, Some(1328)),
    /* 6178 */ element!(RequesterRef, 4672, One, false, 0x0, NotRestricted, None),
    /* 6179 */ element!(RequesterRefs, 817, ZeroOrOne, false, 0x0, ClassicPlatform, Some(224)),
    /* 6180 */ element!(RequesterSoftwareClusterRef, 1402, ZeroOrOne, false, 0x0, ClassicPlatform, Some(4929)),
    /* 6181 */ element!(RequestorRef, 4672, One, false, 0x0, NotRestricted, None),
    /* 6182 */ element!(RequestorRefs, 4673, ZeroOrOne, false, 0x0, ClassicPlatform, Some(4835)),
    /* 6183 */ element!(Requests, 1508, ZeroOrOne, false, 0x0, NotRestricted, Some(5709)),
    /* 6184 */ element!(Requests, 1622, ZeroOrOne, false, 0x0, NotRestricted, Some(5709)),
    /* 6185 */ element!(Requests, 4363, ZeroOrOne, false, 0x1C0000, AdaptivePlatform, Some(3429)),
    /* 6186 */ element!(RequireResources, 790, ZeroOrOne, false, 0x0, ClassicPlatform, Some(3373)),
    /* 6187 */ element!(RequiredArElementRef, 4175, One, false, 0x0, NotRestricted, None),
    /* 6188 */ element!(RequiredArElementRef, 4208, One, false, 0x0, NotRestricted, None),
    /* 6189 */ element!(RequiredArElementRefs, 4176, ZeroOrOne, false, 0x1FF000, AdaptivePlatform, Some(5222)),
    /* 6190 */ element!(RequiredArElementRefs, 4209, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5227)),
    /* 6191 */ element!(RequiredArtifacts, 2614, ZeroOrOne, false, 0x1C0000, ClassicPlatform, Some(2488)),
    /* 6192 */ element!(RequiredClientServerEntryRef, 309, ZeroOrOne, false, 0x0, NotRestricted, Some(3100)),
    /* 6193 */ element!(RequiredClientServerEntrys, 395, ZeroOrOne, false, 0x1FFF80, ClassicPlatform, Some(2492)),
    /* 6194 */ element!(RequiredComSpecs, 6, ZeroOrOne, false, 0x180000, NotRestricted, Some(2300)),
    /* 6195 */ element!(RequiredComSpecs, 3479, ZeroOrOne, false, 0x0, NotRestricted, Some(2300)),
    /* 6196 */ element!(RequiredDatas, 396, ZeroOrOne, false, 0x1FFF80, ClassicPlatform, Some(2448)),
    /* 6197 */ element!(RequiredDdsEventQosProps, 3664, One, false, 0x0, NotRestricted, None),
    /* 6198 */ element!(RequiredDdsServiceInstance, 3665, One, false, 0x0, NotRestricted, None),
    /* 6199 */ element!(RequiredDesignElementRef, 4177, One, false, 0x0, NotRestricted, None),
    /* 6200 */ element!(RequiredDesignElementRefs, 4178, ZeroOrOne, false, 0x180000, AdaptivePlatform, Some(5200)),
    /* 6201 */ element!(RequiredEntrys, 402, ZeroOrOne, false, 0x1FFF00, ClassicPlatform, Some(1300)),
    /* 6202 */ element!(RequiredEnvironmentRef, 452, ZeroOrOne, false, 0x0, NotRestricted, Some(5605)),
    /* 6203 */ element!(RequiredEventGroups, 3675, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(1381)),
    /* 6204 */ element!(RequiredFibexElementRef, 4147, One, false, 0x0, NotRestricted, None),
    /* 6205 */ element!(RequiredFibexElementRefs, 4179, ZeroOrOne, false, 0x1FF000, AdaptivePlatform, Some(5226)),
    /* 6206 */ element!(RequiredGeneratorTools, 2614, ZeroOrOne, false, 0x1C0000, ClassicPlatform, Some(2284)),
    /* 6207 */ element!(RequiredInterfaceTref, 3212, ZeroOrOne, false, 0x0, NotRestricted, Some(2915)),
    /* 6208 */ element!(RequiredMinorVersion, 84, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3995)),
    /* 6209 */ element!(RequiredModeGroupRef, 3039, ZeroOrOne, false, 0x0, NotRestricted, Some(3099)),
    /* 6210 */ element!(RequiredModeGroups, 397, ZeroOrOne, false, 0x1FFF80, ClassicPlatform, Some(2489)),
    /* 6211 */ element!(RequiredOuterPortRef, 3232, ZeroOrOne, false, 0x0, NotRestricted, Some(5711)),
    /* 6212 */ element!(RequiredPackageElementRef, 4180, One, false, 0x0, NotRestricted, None),
    /* 6213 */ element!(RequiredPackageElementRef, 4210, One, false, 0x0, NotRestricted, None),
    /* 6214 */ element!(RequiredPackageElementRefs, 4181, ZeroOrOne, false, 0x1FF000, AdaptivePlatform, Some(5201)),
    /* 6215 */ element!(RequiredPackageElementRefs, 4211, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5202)),
    /* 6216 */ element!(RequiredPortPrototypeIref, 3600, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5050)),
    /* 6217 */ element!(RequiredRteVendor, 4393, ZeroOrOne, false, 0x0, ClassicPlatform, Some(1190)),
    /* 6218 */ element!(RequiredRteVendor, 5078, ZeroOrOne, false, 0x0, NotRestricted, Some(1190)),
    /* 6219 */ element!(RequiredServiceInstanceId, 83, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(4093)),
    /* 6220 */ element!(RequiredServiceInstanceRef, 3671, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(1873)),
    /* 6221 */ element!(RequiredServiceInstanceToSwClusterDesignRPortPrototypeMapping, 3670, One, false, 0x0, NotRestricted, None),
    /* 6222 */ element!(RequiredServicePortIref, 3596, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(4702)),
    /* 6223 */ element!(RequiredServiceVersion, 4293, ZeroOrOne, false, 0x0, NotRestricted, Some(4387)),
    /* 6224 */ element!(RequiredSomeipServiceInstance, 3672, One, false, 0x0, NotRestricted, None),
    /* 6225 */ element!(RequiredTriggerIref, 3602, ZeroOrOne, false, 0x0, NotRestricted, Some(5466)),
    /* 6226 */ element!(RequiredTriggers, 4924, ZeroOrOne, false, 0x1FFF80, ClassicPlatform, Some(2490)),
    /* 6227 */ element!(RequiredUserDefinedServiceInstance, 3677, One, false, 0x0, NotRestricted, None),
    /* 6228 */ element!(RequirementRef, 4206, One, false, 0x0, NotRestricted, None),
    /* 6229 */ element!(RequirementRefs, 4207, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5235)),
    /* 6230 */ element!(RequiresIndex, 298, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3972)),
    /* 6231 */ element!(RequiresIndex, 298, ZeroOrOne, false, 0x0, ClassicPlatform, Some(5950)),
    /* 6232 */ element!(RequiresSymbolicNameValue, 298, ZeroOrOne, false, 0x0, ClassicPlatform, Some(1252)),
    /* 6233 */ element!(ResetConfirmedBitOnOverflow, 298, ZeroOrOne, false, 0x0, NotRestricted, Some(3825)),
    /* 6234 */ element!(ResetPendingBitOnOverflow, 298, ZeroOrOne, false, 0x0, NotRestricted, Some(3826)),
    /* 6235 */ element!(ResetToDefault, 298, ZeroOrOne, false, 0x0, NotRestricted, Some(2401)),
    /* 6236 */ element!(ResetToDefaultSupported, 298, ZeroOrOne, false, 0x0, NotRestricted, Some(5349)),
    /* 6237 */ element!(ResistantToChangedSw, 298, ZeroOrOne, false, 0x0, NotRestricted, Some(734)),
    /* 6238 */ element!(Resolution, 2229, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(4248)),
    /* 6239 */ element!(ResourceConsumption, 3678, ZeroOrOne, false, 0x1FFF80, ClassicPlatform, Some(113)),
    /* 6240 */ element!(ResourceConsumption, 3678, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3308)),
    /* 6241 */ element!(ResourceDefinitionRef, 280, ZeroOrOne, false, 0x0, ClassicPlatform, Some(6057)),
    /* 6242 */ element!(ResourceDefinitions, 791, ZeroOrOne, false, 0x0, ClassicPlatform, Some(3347)),
    /* 6243 */ element!(ResourceEstimations, 4628, ZeroOrOne, false, 0x1C0000, ClassicPlatform, Some(2303)),
    /* 6244 */ element!(ResourceGroup, 3687, One, false, 0x0, NotRestricted, None),
    /* 6245 */ element!(ResourceGroupRef, 3019, ZeroOrOne, false, 0x0, NotRestricted, Some(1973)),
    /* 6246 */ element!(ResourceGroupRef, 4330, One, false, 0x0, NotRestricted, None),
    /* 6247 */ element!(ResourceGroupRef, 4330, ZeroOrOne, false, 0x0, NotRestricted, Some(1991)),
    /* 6248 */ element!(ResourceGroupRef, 4346, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(1973)),
    /* 6249 */ element!(ResourceGroupRefs, 4331, ZeroOrOne, false, 0x0, NotRestricted, Some(1991)),
    /* 6250 */ element!(ResourceGroups, 3192, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5545)),
    /* 6251 */ element!(ResourceGuardValue, 4393, ZeroOrOne, false, 0x0, ClassicPlatform, Some(4235)),
    /* 6252 */ element!(ResourceIdentifierType, 1077, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5917)),
    /* 6253 */ element!(ResourceLimits, 1067, ZeroOrOne, false, 0x0, NotRestricted, Some(557)),
    /* 6254 */ element!(ResourceNeedsRef, 804, One, false, 0x0, NotRestricted, None),
    /* 6255 */ element!(ResourceNeedsRefs, 805, ZeroOrOne, false, 0x0, ClassicPlatform, Some(2258)),
    /* 6256 */ element!(ResourceRef, 281, ZeroOrOne, false, 0x0, ClassicPlatform, Some(2026)),
    /* 6257 */ element!(ResourceRef, 281, ZeroOrOne, false, 0x0, ClassicPlatform, Some(2420)),
    /* 6258 */ element!(ResourceRef, 281, ZeroOrOne, false, 0x0, ClassicPlatform, Some(3131)),
    /* 6259 */ element!(ResourceRef, 281, ZeroOrOne, false, 0x0, ClassicPlatform, Some(4997)),
    /* 6260 */ element!(ResourceToApplicationPartitionMappings, 4629, ZeroOrOne, false, 0x1F0000, ClassicPlatform, Some(1450)),
    /* 6261 */ element!(Resources, 800, ZeroOrOne, false, 0x1F0000, ClassicPlatform, Some(3374)),
    /* 6262 */ element!(Resources, 3714, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3313)),
    /* 6263 */ element!(Resources, 3714, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3337)),
    /* 6264 */ element!(RespondToReset, 1523, ZeroOrOne, false, 0x0, NotRestricted, Some(3815)),
    /* 6265 */ element!(ResponseDataSize, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(5743)),
    /* 6266 */ element!(ResponseErrorPosition, 2642, ZeroOrOne, false, 0x0, ClassicPlatform, Some(2583)),
    /* 6267 */ element!(ResponseErrorRef, 2794, ZeroOrOne, false, 0x0, ClassicPlatform, Some(3202)),
    /* 6268 */ element!(ResponseGroupRef, 2467, ZeroOrOne, false, 0x0, NotRestricted, Some(2231)),
    /* 6269 */ element!(ResponseOnAllRequestSids, 298, ZeroOrOne, false, 0x0, NotRestricted, Some(1217)),
    /* 6270 */ element!(ResponseOnEventAction, 1517, ZeroOrOne, false, 0x0, NotRestricted, Some(539)),
    /* 6271 */ element!(ResponseOnEventClassRef, 1522, ZeroOrOne, false, 0x0, NotRestricted, Some(5274)),
    /* 6272 */ element!(ResponseOnEventRef, 1198, ZeroOrOne, false, 0x0, NotRestricted, Some(1870)),
    /* 6273 */ element!(ResponseOnEventSchedulerRate, 2229, ZeroOrOne, false, 0x0, NotRestricted, Some(2813)),
    /* 6274 */ element!(ResponseOnSecondDeclinedRequest, 298, ZeroOrOne, false, 0x0, NotRestricted, Some(670)),
    /* 6275 */ element!(ResponseRef, 1198, ZeroOrOne, false, 0x0, NotRestricted, Some(1292)),
    /* 6276 */ element!(ResponseRef, 3177, ZeroOrOne, false, 0x0, NotRestricted, Some(3101)),
    /* 6277 */ element!(Responses, 1622, ZeroOrOne, false, 0x0, NotRestricted, Some(5712)),
    /* 6278 */ element!(RestArrayPropertyDef, 3689, One, false, 0x0, NotRestricted, None),
    /* 6279 */ element!(RestBooleanPropertyDef, 3691, One, false, 0x0, NotRestricted, None),
    /* 6280 */ element!(RestElementDef, 3692, One, false, 0x0, NotRestricted, None),
    /* 6281 */ element!(RestEndpointArgument, 3695, One, false, 0x0, NotRestricted, None),
    /* 6282 */ element!(RestEndpointDelete, 3697, One, false, 0x0, NotRestricted, None),
    /* 6283 */ element!(RestEndpointGet, 3698, One, false, 0x0, NotRestricted, None),
    /* 6284 */ element!(RestEndpointPost, 3699, One, false, 0x0, NotRestricted, None),
    /* 6285 */ element!(RestEndpointPut, 3700, One, false, 0x0, NotRestricted, None),
    /* 6286 */ element!(RestEnumeratorDef, 3701, One, false, 0x0, NotRestricted, None),
    /* 6287 */ element!(RestHttpPortPrototypeMapping, 3702, One, false, 0x0, NotRestricted, None),
    /* 6288 */ element!(RestIntegerPropertyDef, 3707, One, false, 0x0, NotRestricted, None),
    /* 6289 */ element!(RestNumberPropertyDef, 3708, One, false, 0x0, NotRestricted, None),
    /* 6290 */ element!(RestObjectRef, 3709, One, false, 0x0, NotRestricted, None),
    /* 6291 */ element!(RestResourceDef, 3712, One, false, 0x0, NotRestricted, None),
    /* 6292 */ element!(RestServiceInterface, 3716, One, false, 0x0, NotRestricted, None),
    /* 6293 */ element!(RestStringPropertyDef, 3717, One, false, 0x0, NotRestricted, None),
    /* 6294 */ element!(RestSystemTriggeredEvent, 3719, One, false, 0x0, NotRestricted, None),
    /* 6295 */ element!(RestoreAtStart, 298, ZeroOrOne, false, 0x0, NotRestricted, Some(761)),
    /* 6296 */ element!(RestrictUpdate, 298, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3797)),
    /* 6297 */ element!(Restriction, 2236, ZeroOrOne, false, 0x0, NotRestricted, Some(41)),
    /* 6298 */ element!(Restriction, 2236, ZeroOrOne, false, 0x0, NotRestricted, Some(1210)),
    /* 6299 */ element!(Restrictions, 2259, ZeroOrOne, false, 0x0, NotRestricted, Some(538)),
    /* 6300 */ element!(ResultingProperties, 4477, ZeroOrOne, false, 0xC0000, NotRestricted, Some(3197)),
    /* 6301 */ element!(ResultingRptSwPrototypingAccess, 3780, ZeroOrOne, false, 0x0, NotRestricted, Some(879)),
    /* 6302 */ element!(ResumePosition, 3720, ZeroOrOne, false, 0x0, ClassicPlatform, Some(793)),
    /* 6303 */ element!(Retry, 298, ZeroOrOne, false, 0x0, ClassicPlatform, Some(960)),
    /* 6304 */ element!(RetryIntervalTime, 2229, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3763)),
    /* 6305 */ element!(ReturnCode, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(1039)),
    /* 6306 */ element!(ReturnSignalRef, 4931, ZeroOrOne, false, 0x0, NotRestricted, Some(2224)),
    /* 6307 */ element!(ReturnSignalTriggeringRef, 4063, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(2104)),
    /* 6308 */ element!(ReturnType, 4495, ZeroOrOne, false, 0x0, ClassicPlatform, Some(3103)),
    /* 6309 */ element!(ReturnValueProvision, 3781, ZeroOrOne, false, 0x0, ClassicPlatform, Some(3577)),
    /* 6310 */ element!(ReversedTpSduRef, 2179, ZeroOrOne, false, 0x0, NotRestricted, Some(2094)),
    /* 6311 */ element!(ReversedTpSduRef, 4699, ZeroOrOne, false, 0x0, ClassicPlatform, Some(2095)),
    /* 6312 */ element!(RevisionLabel, 3721, One, false, 0x0, NotRestricted, None),
    /* 6313 */ element!(RevisionLabel, 3721, ZeroOrOne, false, 0x0, NotRestricted, Some(4181)),
    /* 6314 */ element!(RevisionLabelP1, 3721, ZeroOrOne, false, 0x0, NotRestricted, Some(4180)),
    /* 6315 */ element!(RevisionLabelP2, 3721, ZeroOrOne, false, 0x0, NotRestricted, Some(4182)),
    /* 6316 */ element!(RevisionLabels, 1975, ZeroOrOne, false, 0x0, NotRestricted, Some(4721)),
    /* 6317 */ element!(RidNumber, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(5376)),
    /* 6318 */ element!(Role, 2131, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(4048)),
    /* 6319 */ element!(Role, 2131, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(4049)),
    /* 6320 */ element!(Role, 2500, ZeroOrOne, false, 0x0, NotRestricted, Some(144)),
    /* 6321 */ element!(Role, 2500, ZeroOrOne, false, 0x0, NotRestricted, Some(2405)),
    /* 6322 */ element!(Role, 2500, ZeroOrOne, false, 0x0, ClassicPlatform, Some(2589)),
    /* 6323 */ element!(Role, 2500, ZeroOrOne, false, 0x0, ClassicPlatform, Some(3104)),
    /* 6324 */ element!(Role, 2500, ZeroOrOne, false, 0x0, NotRestricted, Some(3512)),
    /* 6325 */ element!(Role, 2500, ZeroOrOne, false, 0x0, NotRestricted, Some(3975)),
    /* 6326 */ element!(Role, 2500, ZeroOrOne, false, 0x0, NotRestricted, Some(4008)),
    /* 6327 */ element!(Role, 2500, ZeroOrOne, false, 0x0, ClassicPlatform, Some(4734)),
    /* 6328 */ element!(Role, 2500, ZeroOrOne, false, 0x0, NotRestricted, Some(4823)),
    /* 6329 */ element!(Role, 2500, ZeroOrOne, false, 0x0, NotRestricted, Some(4824)),
    /* 6330 */ element!(Role, 2500, ZeroOrOne, false, 0x0, NotRestricted, Some(4825)),
    /* 6331 */ element!(Role, 2500, ZeroOrOne, false, 0x0, NotRestricted, Some(4827)),
    /* 6332 */ element!(Role, 2895, ZeroOrOne, false, 0x0, NotRestricted, Some(2310)),
    /* 6333 */ element!(Role, 4393, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(4084)),
    /* 6334 */ element!(Role, 4393, ZeroOrOne, false, 0x0, NotRestricted, Some(5814)),
    /* 6335 */ element!(RoleBasedBswModuleEntryAssignment, 3722, One, false, 0x0, NotRestricted, None),
    /* 6336 */ element!(RoleBasedDataAssignment, 3724, One, false, 0x0, NotRestricted, None),
    /* 6337 */ element!(RoleBasedDataTypeAssignment, 3726, One, false, 0x0, NotRestricted, None),
    /* 6338 */ element!(RoleBasedMcDataAssignment, 3728, One, false, 0x0, NotRestricted, None),
    /* 6339 */ element!(RoleBasedPortAssignment, 3731, One, false, 0x0, NotRestricted, None),
    /* 6340 */ element!(RoleBasedResourceDependency, 3732, One, false, 0x0, NotRestricted, None),
    /* 6341 */ element!(RolloutQualifications, 5040, ZeroOrOne, true, 0x0, AdaptivePlatform, Some(5714)),
    /* 6342 */ element!(RomBlock, 3215, ZeroOrOne, false, 0x0, ClassicPlatform, Some(570)),
    /* 6343 */ element!(RomBlockInitValue, 3159, ZeroOrOne, false, 0x0, NotRestricted, Some(5629)),
    /* 6344 */ element!(RomLocationRef, 3225, ZeroOrOne, false, 0x0, NotRestricted, Some(2269)),
    /* 6345 */ element!(RootArgumentDataPrototypeRef, 3181, ZeroOrOne, false, 0x0, NotRestricted, None),
    /* 6346 */ element!(RootAutosarDataPrototypeRef, 199, ZeroOrOne, false, 0x0, AdaptivePlatform, None),
    /* 6347 */ element!(RootAutosarDataPrototypeRef, 199, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(4969)),
    /* 6348 */ element!(RootComposition, 3733, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3400)),
    /* 6349 */ element!(RootContextRef, 966, ZeroOrOne, false, 0x0, NotRestricted, Some(4680)),
    /* 6350 */ element!(RootDataPrototypeInCsRef, 2600, ZeroOrOne, false, 0x0, ClassicPlatform, None),
    /* 6351 */ element!(RootDataPrototypeInSrRef, 2600, ZeroOrOne, false, 0x0, ClassicPlatform, None),
    /* 6352 */ element!(RootDataPrototypeRef, 946, ZeroOrOne, false, 0x0, AdaptivePlatform, None),
    /* 6353 */ element!(RootDataPrototypeRef, 954, ZeroOrOne, false, 0x0, AdaptivePlatform, None),
    /* 6354 */ element!(RootDataPrototypeRef, 954, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5776)),
    /* 6355 */ element!(RootDataPrototypeRef, 967, ZeroOrOne, false, 0x0, NotRestricted, None),
    /* 6356 */ element!(RootDataPrototypeRef, 1945, ZeroOrOne, false, 0x0, AdaptivePlatform, None),
    /* 6357 */ element!(RootDataPrototypeRef, 1945, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5313)),
    /* 6358 */ element!(RootDataPrototypeRef, 2600, ZeroOrOne, false, 0x0, NotRestricted, Some(5312)),
    /* 6359 */ element!(RootDataPrototypeRef, 2605, ZeroOrOne, false, 0x0, NotRestricted, None),
    /* 6360 */ element!(RootDataPrototypeRef, 2605, ZeroOrOne, false, 0x0, NotRestricted, Some(5312)),
    /* 6361 */ element!(RootDataPrototypeRef, 3626, ZeroOrOne, false, 0x0, NotRestricted, Some(5317)),
    /* 6362 */ element!(RootParameterDataPrototypeRef, 213, ZeroOrOne, false, 0x0, NotRestricted, Some(5314)),
    /* 6363 */ element!(RootParameterDataPrototypeRef, 258, ZeroOrOne, false, 0x0, NotRestricted, Some(5604)),
    /* 6364 */ element!(RootRef, 2255, ZeroOrOne, false, 0x0, NotRestricted, Some(2887)),
    /* 6365 */ element!(RootSoftwareCompositions, 4643, ZeroOrOne, false, 0x1FFFC0, NotRestricted, Some(7)),
    /* 6366 */ element!(RootSwComponentPrototype, 3736, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5715)),
    /* 6367 */ element!(RootSwCompositionPrototype, 3738, One, false, 0x0, NotRestricted, None),
    /* 6368 */ element!(RootVariableDataPrototypeRef, 3160, ZeroOrOne, false, 0x0, NotRestricted, None),
    /* 6369 */ element!(RootVariableDataPrototypeRef, 3162, ZeroOrOne, false, 0x0, NotRestricted, None),
    /* 6370 */ element!(RootVariableDataPrototypeRef, 3162, ZeroOrOne, false, 0x0, NotRestricted, Some(5315)),
    /* 6371 */ element!(RoughEstimateHeapUsage, 3743, One, false, 0x0, NotRestricted, None),
    /* 6372 */ element!(RoughEstimateOfExecutionTime, 3744, One, false, 0x0, NotRestricted, None),
    /* 6373 */ element!(RoughEstimateStackUsage, 3745, One, false, 0x0, NotRestricted, None),
    /* 6374 */ element!(RoutineControlClassRef, 1527, ZeroOrOne, false, 0x0, NotRestricted, Some(5290)),
    /* 6375 */ element!(RoutineInfo, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(5716)),
    /* 6376 */ element!(RoutineRef, 1528, ZeroOrOne, false, 0x0, NotRestricted, Some(5316)),
    /* 6377 */ element!(RoutineSubfunctionRef, 824, ZeroOrOne, false, 0x0, ClassicPlatform, Some(5132)),
    /* 6378 */ element!(RoutingActivationType, 4393, ZeroOrOne, false, 0x0, NotRestricted, Some(873)),
    /* 6379 */ element!(RoutingGroupRef, 2075, One, false, 0x0, NotRestricted, None),
    /* 6380 */ element!(RoutingGroupRefs, 2076, ZeroOrOne, false, 0x0, NotRestricted, Some(1820)),
    /* 6381 */ element!(RoutingGroupRefs, 2076, ZeroOrOne, false, 0x0, NotRestricted, Some(2752)),
    /* 6382 */ element!(RoutingGroupRefs, 2076, ZeroOrOne, false, 0x0, NotRestricted, Some(2754)),
    /* 6383 */ element!(RoutingGroupRefs, 2076, ZeroOrOne, false, 0x0, NotRestricted, Some(2756)),
    /* 6384 */ element!(Row, 3746, Any, true, 0xC0000, NotRestricted, Some(4716)),
    /* 6385 */ element!(RpImplPolicy, 3771, ZeroOrOne, false, 0x0, NotRestricted, Some(882)),
    /* 6386 */ element!(RptArHookIref, 81, ZeroOrOne, false, 0x0, NotRestricted, Some(4347)),
    /* 6387 */ element!(RptComponent, 3748, One, false, 0x0, NotRestricted, None),
    /* 6388 */ element!(RptComponents, 3778, ZeroOrOne, false, 0x1C0000, NotRestricted, Some(901)),
    /* 6389 */ element!(RptContainer, 3750, One, false, 0x0, NotRestricted, None),
    /* 6390 */ element!(RptContainers, 3754, ZeroOrOne, false, 0x1FFFF8, NotRestricted, Some(2640)),
    /* 6391 */ element!(RptContainers, 3754, ZeroOrOne, false, 0x1FFFF8, NotRestricted, Some(5903)),
    /* 6392 */ element!(RptEnablerImplType, 3756, ZeroOrOne, false, 0x0, NotRestricted, Some(1120)),
    /* 6393 */ element!(RptEventId, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(1782)),
    /* 6394 */ element!(RptExecutableEntity, 3757, One, false, 0x0, NotRestricted, None),
    /* 6395 */ element!(RptExecutableEntityEvent, 3758, One, false, 0x0, NotRestricted, None),
    /* 6396 */ element!(RptExecutableEntityEvents, 3765, ZeroOrOne, false, 0x1C0000, NotRestricted, Some(1002)),
    /* 6397 */ element!(RptExecutableEntityProperties, 3764, ZeroOrOne, false, 0x0, NotRestricted, Some(880)),
    /* 6398 */ element!(RptExecutableEntityProperties, 3764, ZeroOrOne, false, 0x0, NotRestricted, Some(897)),
    /* 6399 */ element!(RptExecutableEntitys, 3749, ZeroOrOne, false, 0x1C0000, NotRestricted, Some(1003)),
    /* 6400 */ element!(RptExecutionContext, 3767, One, false, 0x0, NotRestricted, None),
    /* 6401 */ element!(RptExecutionControl, 3768, ZeroOrOne, false, 0x0, NotRestricted, Some(4247)),
    /* 6402 */ element!(RptHook, 3769, One, false, 0x0, NotRestricted, None),
    /* 6403 */ element!(RptHookAccess, 3747, ZeroOrOne, false, 0x0, NotRestricted, Some(3094)),
    /* 6404 */ element!(RptHooks, 3755, ZeroOrOne, false, 0x1FFFF8, NotRestricted, Some(3105)),
    /* 6405 */ element!(RptImplPolicy, 3771, ZeroOrOne, false, 0x0, NotRestricted, Some(874)),
    /* 6406 */ element!(RptImplPolicy, 3771, ZeroOrOne, false, 0x0, NotRestricted, Some(881)),
    /* 6407 */ element!(RptImplPolicy, 3771, ZeroOrOne, false, 0x0, NotRestricted, Some(898)),
    /* 6408 */ element!(RptPreparationLevel, 3772, ZeroOrOne, false, 0x0, NotRestricted, Some(1418)),
    /* 6409 */ element!(RptProfile, 3773, One, false, 0x0, NotRestricted, None),
    /* 6410 */ element!(RptProfiles, 3606, ZeroOrOne, false, 0x1FFF00, NotRestricted, Some(471)),
    /* 6411 */ element!(RptReadAccess, 3747, ZeroOrOne, false, 0x0, NotRestricted, Some(3095)),
    /* 6412 */ element!(RptReads, 3766, ZeroOrOne, false, 0x1C0000, NotRestricted, Some(6033)),
    /* 6413 */ element!(RptServicePoint, 3774, One, false, 0x0, NotRestricted, None),
    /* 6414 */ element!(RptServicePoint, 3775, ZeroOrOne, false, 0x0, NotRestricted, Some(979)),
    /* 6415 */ element!(RptServicePointPostRef, 3762, One, false, 0x0, NotRestricted, None),
    /* 6416 */ element!(RptServicePointPostRefs, 3761, ZeroOrOne, false, 0x0, NotRestricted, Some(4344)),
    /* 6417 */ element!(RptServicePointPreRef, 3762, One, false, 0x0, NotRestricted, None),
    /* 6418 */ element!(RptServicePointPreRefs, 3763, ZeroOrOne, false, 0x0, NotRestricted, Some(4345)),
    /* 6419 */ element!(RptServicePoints, 3779, ZeroOrOne, false, 0x1C0000, NotRestricted, Some(3377)),
    /* 6420 */ element!(RptSupportData, 3776, ZeroOrOne, false, 0x1FFF00, NotRestricted, Some(3050)),
    /* 6421 */ element!(RptSwPrototypingAccess, 3780, ZeroOrOne, false, 0x0, NotRestricted, Some(896)),
    /* 6422 */ element!(RptSystemRef, 3607, ZeroOrOne, false, 0x1FFFF8, NotRestricted, Some(2662)),
    /* 6423 */ element!(RptWriteAccess, 3747, ZeroOrOne, false, 0x0, NotRestricted, Some(3096)),
    /* 6424 */ element!(RptWrites, 3766, ZeroOrOne, false, 0x1C0000, NotRestricted, Some(6068)),
    /* 6425 */ element!(RteEventInCompositionSeparation, 3784, One, false, 0x0, NotRestricted, None),
    /* 6426 */ element!(RteEventInCompositionToOsTaskProxyMapping, 3786, One, false, 0x0, NotRestricted, None),
    /* 6427 */ element!(RteEventInSystemSeparation, 3793, One, false, 0x0, NotRestricted, None),
    /* 6428 */ element!(RteEventInSystemToOsTaskProxyMapping, 3795, One, false, 0x0, NotRestricted, None),
    /* 6429 */ element!(RteEventIref, 3783, One, false, 0x0, NotRestricted, None),
    /* 6430 */ element!(RteEventIref, 3783, ZeroOrOne, false, 0x0, ClassicPlatform, Some(1821)),
    /* 6431 */ element!(RteEventIref, 3787, One, false, 0x0, NotRestricted, None),
    /* 6432 */ element!(RteEventIref, 3789, One, false, 0x0, NotRestricted, None),
    /* 6433 */ element!(RteEventIref, 3789, ZeroOrOne, false, 0x0, ClassicPlatform, Some(1821)),
    /* 6434 */ element!(RteEventIrefs, 2928, ZeroOrOne, false, 0x0, NotRestricted, Some(2742)),
    /* 6435 */ element!(RteEventIrefs, 3785, ZeroOrOne, false, 0x0, ClassicPlatform, Some(1822)),
    /* 6436 */ element!(RteEventIrefs, 3794, ZeroOrOne, false, 0x0, ClassicPlatform, Some(1822)),
    /* 6437 */ element!(RteEventSeparations, 4463, ZeroOrOne, false, 0x0, ClassicPlatform, Some(2364)),
    /* 6438 */ element!(RteEventSeparations, 4630, ZeroOrOne, false, 0x0, ClassicPlatform, Some(2363)),
    /* 6439 */ element!(RteEventToOsTaskProxyMappings, 4464, ZeroOrOne, false, 0x0, ClassicPlatform, Some(421)),
    /* 6440 */ element!(RteEventToOsTaskProxyMappings, 4631, ZeroOrOne, false, 0x0, ClassicPlatform, Some(420)),
    /* 6441 */ element!(RtePluginProps, 3797, ZeroOrOne, false, 0x1FE000, ClassicPlatform, Some(3036)),
    /* 6442 */ element!(RteResourceEstimation, 3678, ZeroOrOne, false, 0x0, NotRestricted, Some(994)),
    /* 6443 */ element!(RtpTp, 3799, One, false, 0x0, NotRestricted, None),
    /* 6444 */ element!(RtpsProtectionKind, 1056, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(626)),
    /* 6445 */ element!(Rule, 2500, ZeroOrOne, false, 0x0, NotRestricted, Some(4334)),
    /* 6446 */ element!(Rule, 3801, One, false, 0x0, NotRestricted, None),
    /* 6447 */ element!(RuleArguments, 3802, One, false, 0x0, NotRestricted, None),
    /* 6448 */ element!(RuleBasedAxisCont, 3803, One, false, 0x0, NotRestricted, None),
    /* 6449 */ element!(RuleBasedValues, 3806, ZeroOrOne, false, 0x180000, NotRestricted, Some(5717)),
    /* 6450 */ element!(RuleBasedValues, 3806, ZeroOrOne, false, 0x0, NotRestricted, Some(5718)),
    /* 6451 */ element!(RuleBasedValues, 3806, ZeroOrOne, false, 0x0, NotRestricted, Some(5719)),
    /* 6452 */ element!(RuleInitState, 3372, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(618)),
    /* 6453 */ element!(RuleInitState, 3809, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(618)),
    /* 6454 */ element!(Rules, 221, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(329)),
    /* 6455 */ element!(Rules, 3343, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(329)),
    /* 6456 */ element!(Rules, 3404, ZeroOrOne, false, 0x8000, AdaptivePlatform, Some(330)),
    /* 6457 */ element!(Rules, 4367, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3375)),
    /* 6458 */ element!(Rules, 4367, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3376)),
    /* 6459 */ element!(RunMode, 3811, ZeroOrOne, false, 0x0, ClassicPlatform, Some(3110)),
    /* 6460 */ element!(RunResource, 1102, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5574)),
    /* 6461 */ element!(RunnableEntity, 3812, One, false, 0x0, NotRestricted, None),
    /* 6462 */ element!(RunnableEntityArgument, 3813, One, false, 0x0, NotRestricted, None),
    /* 6463 */ element!(RunnableEntityGroup, 3818, One, false, 0x0, NotRestricted, None),
    /* 6464 */ element!(RunnableEntityGroupIref, 2637, One, false, 0x0, NotRestricted, None),
    /* 6465 */ element!(RunnableEntityGroupIrefs, 3819, ZeroOrOne, false, 0x1C0000, NotRestricted, Some(5473)),
    /* 6466 */ element!(RunnableEntityIref, 3821, One, false, 0x0, NotRestricted, None),
    /* 6467 */ element!(RunnableEntityIrefs, 3820, ZeroOrOne, false, 0x1C0000, NotRestricted, Some(5341)),
    /* 6468 */ element!(RunnableMappings, 4511, ZeroOrOne, false, 0x1C0000, ClassicPlatform, Some(47)),
    /* 6469 */ element!(RunnableRef, 3796, ZeroOrOne, false, 0x0, ClassicPlatform, Some(3112)),
    /* 6470 */ element!(Runnables, 4529, ZeroOrOne, false, 0x1FFFFF, NotRestricted, Some(4705)),
    /* 6471 */ element!(RunsInsideExclusiveAreaRef, 2119, One, false, 0x0, NotRestricted, None),
    /* 6472 */ element!(RunsInsideExclusiveAreaRefs, 2100, ZeroOrOne, false, 0x0, NotRestricted, Some(2865)),
    /* 6473 */ element!(RunsInsides, 2097, ZeroOrOne, false, 0x1C0000, NotRestricted, Some(2866)),
    /* 6474 */ element!(RuntimeError, 3830, One, false, 0x0, NotRestricted, None),
    /* 6475 */ element!(RuntimeIpAddressConfiguration, 3829, ZeroOrOne, false, 0x0, NotRestricted, Some(3894)),
    /* 6476 */ element!(RuntimePortConfiguration, 3829, ZeroOrOne, false, 0x0, NotRestricted, Some(3895)),
    /* 6477 */ element!(RvfActivePixels, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(832)),
    /* 6478 */ element!(RvfColorSpace, 2581, ZeroOrOne, false, 0x0, NotRestricted, Some(833)),
    /* 6479 */ element!(RvfEventDefault, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(834)),
    /* 6480 */ element!(RvfFrameRate, 2583, ZeroOrOne, false, 0x0, NotRestricted, Some(835)),
    /* 6481 */ element!(RvfInterlaced, 298, ZeroOrOne, false, 0x0, NotRestricted, Some(571)),
    /* 6482 */ element!(RvfPixelDepth, 2584, ZeroOrOne, false, 0x0, NotRestricted, Some(836)),
    /* 6483 */ element!(RvfPixelFormat, 2585, ZeroOrOne, false, 0x0, NotRestricted, Some(837)),
    /* 6484 */ element!(RvfTotalLines, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(838)),
    /* 6485 */ element!(RxAcceptContainedIPdu, 3831, ZeroOrOne, false, 0x0, NotRestricted, Some(774)),
    /* 6486 */ element!(RxIdentifierRange, 3832, ZeroOrOne, false, 0x0, NotRestricted, Some(1662)),
    /* 6487 */ element!(RxIdentifierRange, 3832, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(1662)),
    /* 6488 */ element!(RxMask, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(1182)),
    /* 6489 */ element!(RxMask, 3494, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(1182)),
    /* 6490 */ element!(RxNmPduRef, 3118, One, false, 0x0, NotRestricted, None),
    /* 6491 */ element!(RxNmPduRefs, 3119, ZeroOrOne, false, 0x0, ClassicPlatform, Some(6034)),
    /* 6492 */ element!(RxPduPoolRef, 2222, ZeroOrOne, false, 0x0, ClassicPlatform, Some(33)),
    /* 6493 */ element!(RxPduTriggeringRef, 1727, ZeroOrOne, false, 0x0, ClassicPlatform, Some(1802)),
    /* 6494 */ element!(RxSecurityVerification, 298, ZeroOrOne, false, 0x0, NotRestricted, Some(3663)),
    /* 6495 */ element!(RxTimeoutTime, 2229, ZeroOrOne, false, 0x0, NotRestricted, Some(5896)),
    /* 6496 */ element!(S3ServerTimeout, 2229, ZeroOrOne, false, 0x0, NotRestricted, Some(5865)),
    /* 6497 */ element!(SaOverTime, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(3849)),
    /* 6498 */ element!(SaRandTime, 2229, ZeroOrOne, false, 0x0, NotRestricted, Some(3601)),
    /* 6499 */ element!(SaRekeyTime, 2229, ZeroOrOne, false, 0x0, NotRestricted, Some(3652)),
    /* 6500 */ element!(SafeTranslation, 298, ZeroOrOne, false, 0x0, NotRestricted, Some(478)),
    /* 6501 */ element!(SafetyCondition, 4393, One, false, 0x0, NotRestricted, None),
    /* 6502 */ element!(SafetyConditions, 5045, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(4063)),
    /* 6503 */ element!(SafetyMargin, 2642, ZeroOrOne, false, 0x0, NotRestricted, Some(95)),
    /* 6504 */ element!(SafetyPolicy, 4393, ZeroOrOne, false, 0x0, NotRestricted, Some(3554)),
    /* 6505 */ element!(SakRef, 2886, ZeroOrOne, false, 0x0, NotRestricted, Some(2200)),
    /* 6506 */ element!(SakRekeyTimeSpan, 2229, ZeroOrOne, false, 0x0, NotRestricted, Some(5871)),
    /* 6507 */ element!(SampleClockPeriod, 2229, ZeroOrOne, false, 0x0, NotRestricted, Some(2326)),
    /* 6508 */ element!(SampleClockPeriod, 5077, ZeroOrOne, false, 0x0, NotRestricted, Some(2326)),
    /* 6509 */ element!(SamplesPerMicrotick, 2642, ZeroOrOne, false, 0x0, NotRestricted, Some(1624)),
    /* 6510 */ element!(SaveConfiguration, 298, ZeroOrOne, false, 0x0, ClassicPlatform, Some(3909)),
    /* 6511 */ element!(SaveConfigurationEntry, 3833, One, false, 0x0, NotRestricted, None),
    /* 6512 */ element!(ScaleConstr, 3834, One, false, 0x0, NotRestricted, None),
    /* 6513 */ element!(ScaleConstrs, 3378, ZeroOrOne, true, 0x0, NotRestricted, Some(4755)),
    /* 6514 */ element!(ScalingInfoSize, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(2409)),
    /* 6515 */ element!(ScheduleChangeNextTimeBase, 298, ZeroOrOne, false, 0x0, ClassicPlatform, Some(3739)),
    /* 6516 */ element!(ScheduleTables, 2807, ZeroOrOne, false, 0x1C0000, ClassicPlatform, Some(2327)),
    /* 6517 */ element!(SchedulerMaxNumber, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(5644)),
    /* 6518 */ element!(SchedulerNamePrefixRef, 407, ZeroOrOne, false, 0x0, NotRestricted, Some(58)),
    /* 6519 */ element!(SchedulerNamePrefixs, 363, ZeroOrOne, false, 0x1FFF80, NotRestricted, Some(1665)),
    /* 6520 */ element!(SchedulingPolicy, 4393, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(4087)),
    /* 6521 */ element!(SchedulingPriority, 2642, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(4828)),
    /* 6522 */ element!(Scope, 1928, ZeroOrOne, false, 0x0, ClassicPlatform, Some(2592)),
    /* 6523 */ element!(Scope, 3331, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3578)),
    /* 6524 */ element!(Scope, 5014, ZeroOrOne, false, 0x0, NotRestricted, Some(3497)),
    /* 6525 */ element!(ScopeEventRef, 4593, One, false, 0x0, NotRestricted, None),
    /* 6526 */ element!(ScopeEventRefs, 4594, ZeroOrOne, false, 0x0, NotRestricted, Some(2860)),
    /* 6527 */ element!(ScopeRef, 67, ZeroOrOne, false, 0x0, NotRestricted, Some(6019)),
    /* 6528 */ element!(ScopeRef, 2768, One, false, 0x0, NotRestricted, None),
    /* 6529 */ element!(ScopeRef, 2768, ZeroOrOne, false, 0x0, NotRestricted, Some(2856)),
    /* 6530 */ element!(ScopeRefs, 4595, ZeroOrOne, false, 0x0, NotRestricted, Some(2857)),
    /* 6531 */ element!(Sd, 3835, One, false, 0x0, NotRestricted, Some(4756)),
    /* 6532 */ element!(SdClientConfig, 3836, ZeroOrOne, false, 0x0, NotRestricted, Some(2374)),
    /* 6533 */ element!(SdClientConfig, 3836, ZeroOrOne, false, 0x0, NotRestricted, Some(3052)),
    /* 6534 */ element!(SdClientConfig, 4266, ZeroOrOne, false, 0x0, NotRestricted, Some(242)),
    /* 6535 */ element!(SdClientConfigRef, 3676, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(242)),
    /* 6536 */ element!(SdClientEventGroupTimingConfigRef, 4262, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(240)),
    /* 6537 */ element!(SdClientEventTimingConfig, 4263, ZeroOrOne, false, 0x0, NotRestricted, Some(240)),
    /* 6538 */ element!(SdClientTimerConfigs, 708, ZeroOrOne, false, 0x1C0000, NotRestricted, Some(241)),
    /* 6539 */ element!(SdClientTimerConfigs, 723, ZeroOrOne, false, 0x1C0000, NotRestricted, Some(243)),
    /* 6540 */ element!(SdServerConfig, 3838, ZeroOrOne, false, 0x0, NotRestricted, Some(2371)),
    /* 6541 */ element!(SdServerConfig, 3838, ZeroOrOne, false, 0x0, NotRestricted, Some(2375)),
    /* 6542 */ element!(SdServerConfig, 4275, ZeroOrOne, false, 0x0, NotRestricted, Some(2372)),
    /* 6543 */ element!(SdServerConfigRef, 3581, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(2372)),
    /* 6544 */ element!(SdServerEgTimingConfigs, 2077, ZeroOrOne, false, 0x1C0000, NotRestricted, Some(2370)),
    /* 6545 */ element!(SdServerEventConfig, 4274, ZeroOrOne, false, 0x0, NotRestricted, Some(2369)),
    /* 6546 */ element!(SdServerEventGroupTimingConfigRef, 4256, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(2369)),
    /* 6547 */ element!(SdServerTimerConfigs, 3575, ZeroOrOne, false, 0x1C0000, NotRestricted, Some(2373)),
    /* 6548 */ element!(Sdf, 3839, One, false, 0x0, NotRestricted, Some(4756)),
    /* 6549 */ element!(Sdg, 3840, One, false, 0x0, NotRestricted, None),
    /* 6550 */ element!(Sdg, 3840, ZeroOrOne, false, 0x0, NotRestricted, Some(146)),
    /* 6551 */ element!(Sdg, 3840, One, false, 0xC0000, NotRestricted, Some(3258)),
    /* 6552 */ element!(SdgAggregationWithVariation, 3841, One, false, 0x0, NotRestricted, None),
    /* 6553 */ element!(SdgCaption, 3842, ZeroOrOne, false, 0x0, NotRestricted, Some(3257)),
    /* 6554 */ element!(SdgCaptionRef, 3855, ZeroOrOne, false, 0x0, NotRestricted, Some(3460)),
    /* 6555 */ element!(SdgClass, 3843, One, false, 0x0, NotRestricted, None),
    /* 6556 */ element!(SdgClassRef, 3854, ZeroOrOne, false, 0x0, NotRestricted, Some(2444)),
    /* 6557 */ element!(SdgClasses, 3848, ZeroOrOne, false, 0x0, NotRestricted, Some(3016)),
    /* 6558 */ element!(SdgConstraintRef, 3845, One, false, 0x0, NotRestricted, None),
    /* 6559 */ element!(SdgConstraintRefs, 3846, ZeroOrOne, false, 0x0, NotRestricted, Some(2354)),
    /* 6560 */ element!(SdgDef, 3847, One, false, 0x0, NotRestricted, None),
    /* 6561 */ element!(SdgForeignReference, 3849, One, false, 0x0, NotRestricted, None),
    /* 6562 */ element!(SdgForeignReferenceWithVariation, 3850, One, false, 0x0, NotRestricted, None),
    /* 6563 */ element!(SdgPrimitiveAttribute, 3851, One, false, 0x0, NotRestricted, None),
    /* 6564 */ element!(SdgPrimitiveAttributeWithVariation, 3852, One, false, 0x0, NotRestricted, None),
    /* 6565 */ element!(SdgReference, 3853, One, false, 0x0, NotRestricted, None),
    /* 6566 */ element!(SdgTailoring, 3856, One, false, 0x0, NotRestricted, None),
    /* 6567 */ element!(SdgTailorings, 540, ZeroOrOne, false, 0x0, NotRestricted, Some(2441)),
    /* 6568 */ element!(Sdgs, 65, ZeroOrOne, false, 0x1F8000, NotRestricted, Some(4895)),
    /* 6569 */ element!(Sdgs, 2140, ZeroOrOne, false, 0x0, NotRestricted, Some(4895)),
    /* 6570 */ element!(Sdgs, 3770, ZeroOrOne, false, 0x0, NotRestricted, Some(4895)),
    /* 6571 */ element!(Sdgs, 3770, ZeroOrOne, false, 0x0, NotRestricted, Some(5355)),
    /* 6572 */ element!(Sdgs, 3770, ZeroOrOne, false, 0x0, NotRestricted, Some(5356)),
    /* 6573 */ element!(Sdgs, 3770, ZeroOrOne, false, 0x0, NotRestricted, Some(5781)),
    /* 6574 */ element!(SduRef, 2573, One, false, 0x0, NotRestricted, None),
    /* 6575 */ element!(SduRef, 2573, ZeroOrOne, false, 0x0, NotRestricted, Some(2123)),
    /* 6576 */ element!(SduRef, 2573, ZeroOrOne, false, 0x0, ClassicPlatform, Some(2123)),
    /* 6577 */ element!(SduRef, 2749, One, false, 0x0, NotRestricted, None),
    /* 6578 */ element!(SduRefs, 2570, ZeroOrOne, false, 0x0, ClassicPlatform, Some(2243)),
    /* 6579 */ element!(SduRefs, 2750, ZeroOrOne, false, 0x0, ClassicPlatform, Some(1809)),
    /* 6580 */ element!(SduType, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(2324)),
    /* 6581 */ element!(SdxRef, 5075, One, false, 0x0, NotRestricted, Some(1990)),
    /* 6582 */ element!(Sdxf, 3653, One, false, 0x1C0000, NotRestricted, Some(94)),
    /* 6583 */ element!(SearchBehavior, 3857, ZeroOrOne, false, 0x0, NotRestricted, Some(4032)),
    /* 6584 */ element!(SearchIntention, 3858, ZeroOrOne, false, 0x0, NotRestricted, Some(4029)),
    /* 6585 */ element!(SearchIntention, 3858, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(4029)),
    /* 6586 */ element!(SecOcComPropsForMulticastRef, 3994, One, false, 0x0, NotRestricted, None),
    /* 6587 */ element!(SecOcComPropsForMulticastRefs, 3995, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(1996)),
    /* 6588 */ element!(SecOcCryptoMappingRef, 3255, ZeroOrOne, false, 0x0, NotRestricted, Some(5106)),
    /* 6589 */ element!(SecOcCryptoServiceMapping, 3859, One, false, 0x0, NotRestricted, None),
    /* 6590 */ element!(SecOcDeployment, 3861, One, false, 0x0, NotRestricted, None),
    /* 6591 */ element!(SecOcJobMapping, 3863, One, false, 0x0, NotRestricted, None),
    /* 6592 */ element!(SecOcJobMappings, 3862, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(1441)),
    /* 6593 */ element!(SecOcJobRequirement, 3865, One, false, 0x0, NotRestricted, None),
    /* 6594 */ element!(SecOcJobRequirementRef, 3864, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(1874)),
    /* 6595 */ element!(SecOcJobSemantic, 3866, ZeroOrOne, false, 0x0, NotRestricted, Some(3671)),
    /* 6596 */ element!(SecOcSecureComProps, 3867, One, false, 0x0, NotRestricted, None),
    /* 6597 */ element!(SecOcSecureComPropsRef, 3871, ZeroOrOne, false, 0x0, NotRestricted, None),
    /* 6598 */ element!(SecOcSecureComPropsRefConditional, 3870, One, false, 0x0, NotRestricted, None),
    /* 6599 */ element!(SecondApplicationErrorRef, 554, ZeroOrOne, false, 0x0, NotRestricted, Some(5720)),
    /* 6600 */ element!(SecondDataPrototypeRef, 3940, ZeroOrOne, false, 0x0, NotRestricted, Some(2330)),
    /* 6601 */ element!(SecondElementInstanceIref, 81, One, false, 0x0, NotRestricted, None),
    /* 6602 */ element!(SecondElementInstanceIrefs, 5054, ZeroOrOne, false, 0x0, NotRestricted, Some(1338)),
    /* 6603 */ element!(SecondElementRef, 24, One, false, 0x0, NotRestricted, None),
    /* 6604 */ element!(SecondElementRefs, 5055, ZeroOrOne, false, 0x0, NotRestricted, Some(2014)),
    /* 6605 */ element!(SecondElements, 4400, ZeroOrOne, false, 0x1C0000, NotRestricted, Some(5722)),
    /* 6606 */ element!(SecondKeySlotId, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(1152)),
    /* 6607 */ element!(SecondModeGroupRef, 3039, ZeroOrOne, false, 0x0, NotRestricted, Some(1552)),
    /* 6608 */ element!(SecondModeRef, 3053, ZeroOrOne, false, 0x0, NotRestricted, Some(5721)),
    /* 6609 */ element!(SecondOperationRef, 544, ZeroOrOne, false, 0x0, NotRestricted, Some(2331)),
    /* 6610 */ element!(SecondPhysicalDimensionRef, 3388, ZeroOrOne, false, 0x0, NotRestricted, Some(5612)),
    /* 6611 */ element!(SecondPortRef, 750, ZeroOrOne, false, 0x0, NotRestricted, Some(2226)),
    /* 6612 */ element!(SecondToFirstDataTransformationRef, 971, ZeroOrOne, false, 0x0, NotRestricted, Some(4310)),
    /* 6613 */ element!(SecondTriggerRef, 4926, ZeroOrOne, false, 0x0, NotRestricted, Some(28)),
    /* 6614 */ element!(SecondValue, 2231, ZeroOrOne, false, 0x0, NotRestricted, Some(5958)),
    /* 6615 */ element!(SecondaryFreshnessValueId, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(3640)),
    /* 6616 */ element!(SectionInitializationPolicy, 4423, ZeroOrOne, false, 0x0, NotRestricted, Some(2538)),
    /* 6617 */ element!(SectionNamePrefix, 3872, One, false, 0x0, NotRestricted, None),
    /* 6618 */ element!(SectionNamePrefixs, 3684, ZeroOrOne, false, 0x1C0000, ClassicPlatform, Some(57)),
    /* 6619 */ element!(SectionType, 2973, ZeroOrOne, false, 0x0, NotRestricted, Some(710)),
    /* 6620 */ element!(SecureComConfigRef, 3876, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(2206)),
    /* 6621 */ element!(SecureComConfigToCryptoKeySlotMapping, 3874, One, false, 0x0, NotRestricted, None),
    /* 6622 */ element!(SecureComConfigToKeySlotMappings, 880, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(324)),
    /* 6623 */ element!(SecureComConfigs, 57, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(401)),
    /* 6624 */ element!(SecureComPropsForDdsRef, 1079, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(1823)),
    /* 6625 */ element!(SecureComPropsForTcpRef, 3410, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(1995)),
    /* 6626 */ element!(SecureComPropsForTcpRef, 3996, One, false, 0x0, NotRestricted, None),
    /* 6627 */ element!(SecureComPropsForTcpRef, 3996, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(1994)),
    /* 6628 */ element!(SecureComPropsForTcpRefs, 3997, ZeroOrOne, false, 0x0, NotRestricted, Some(1994)),
    /* 6629 */ element!(SecureComPropsForUdpRef, 3410, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(1998)),
    /* 6630 */ element!(SecureComPropsForUdpRef, 3996, One, false, 0x0, NotRestricted, None),
    /* 6631 */ element!(SecureComPropsForUdpRef, 3996, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(1997)),
    /* 6632 */ element!(SecureComPropsForUdpRefs, 3998, ZeroOrOne, false, 0x0, NotRestricted, Some(1997)),
    /* 6633 */ element!(SecureComPropsRef, 4021, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(2177)),
    /* 6634 */ element!(SecureComPropsSet, 3877, One, false, 0x0, NotRestricted, None),
    /* 6635 */ element!(SecureComPropss, 3878, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5548)),
    /* 6636 */ element!(SecureCommunicationAuthenticationProps, 3879, One, false, 0x0, NotRestricted, None),
    /* 6637 */ element!(SecureCommunicationDeployments, 2918, ZeroOrOne, false, 0x1FFC00, AdaptivePlatform, Some(2674)),
    /* 6638 */ element!(SecureCommunicationFreshnessProps, 3880, One, false, 0x0, NotRestricted, None),
    /* 6639 */ element!(SecureCommunicationProps, 3881, ZeroOrOne, false, 0x0, NotRestricted, Some(2428)),
    /* 6640 */ element!(SecureCommunicationPropsSet, 3882, One, false, 0x0, NotRestricted, None),
    /* 6641 */ element!(SecureOnBoardCommunicationNeeds, 3885, One, false, 0x0, NotRestricted, None),
    /* 6642 */ element!(SecurePropsForExternalCommRef, 4318, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5186)),
    /* 6643 */ element!(SecurePropsForTcpRef, 4318, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5184)),
    /* 6644 */ element!(SecurePropsForUdpRef, 4318, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5185)),
    /* 6645 */ element!(SecureTranslation, 298, ZeroOrOne, false, 0x0, NotRestricted, Some(479)),
    /* 6646 */ element!(SecuredAreaLength, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(3693)),
    /* 6647 */ element!(SecuredAreaOffset, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(3759)),
    /* 6648 */ element!(SecuredIPdu, 3886, One, false, 0x0, NotRestricted, None),
    /* 6649 */ element!(SecuredRxVerification, 298, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3803)),
    /* 6650 */ element!(SecurityAccessClassRef, 1540, ZeroOrOne, false, 0x0, NotRestricted, Some(5291)),
    /* 6651 */ element!(SecurityAccessLevel, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(3828)),
    /* 6652 */ element!(SecurityDelayTime, 2229, ZeroOrOne, false, 0x0, NotRestricted, Some(5598)),
    /* 6653 */ element!(SecurityDelayTimeOnBoot, 2229, ZeroOrOne, false, 0x0, NotRestricted, Some(2631)),
    /* 6654 */ element!(SecurityDelayTimeOnBoot, 2229, ZeroOrOne, false, 0x0, NotRestricted, Some(2632)),
    /* 6655 */ element!(SecurityEventContextData, 3892, One, false, 0x0, NotRestricted, None),
    /* 6656 */ element!(SecurityEventContextDataDefinition, 3893, One, false, 0x0, NotRestricted, None),
    /* 6657 */ element!(SecurityEventContextDataDefinitionRef, 3895, ZeroOrOne, false, 0x0, NotRestricted, None),
    /* 6658 */ element!(SecurityEventContextDataDefinitionRefConditional, 3894, One, false, 0x0, NotRestricted, None),
    /* 6659 */ element!(SecurityEventContextDataDefinitions, 3915, ZeroOrOne, false, 0x100000, NotRestricted, Some(808)),
    /* 6660 */ element!(SecurityEventContextDataElement, 3896, One, false, 0x0, NotRestricted, None),
    /* 6661 */ element!(SecurityEventContextDataElementRef, 3899, ZeroOrOne, false, 0x0, NotRestricted, None),
    /* 6662 */ element!(SecurityEventContextDataElementRefConditional, 3898, One, false, 0x0, NotRestricted, None),
    /* 6663 */ element!(SecurityEventContextMappingApplication, 3902, One, false, 0x0, NotRestricted, None),
    /* 6664 */ element!(SecurityEventContextMappingBswModule, 3903, One, false, 0x0, NotRestricted, None),
    /* 6665 */ element!(SecurityEventContextMappingCommConnector, 3904, One, false, 0x0, NotRestricted, None),
    /* 6666 */ element!(SecurityEventContextMappingFunctionalCluster, 3907, One, false, 0x0, NotRestricted, None),
    /* 6667 */ element!(SecurityEventContextProps, 3910, One, false, 0x0, NotRestricted, None),
    /* 6668 */ element!(SecurityEventDefinition, 3913, One, false, 0x0, NotRestricted, None),
    /* 6669 */ element!(SecurityEventDefinitionRef, 3544, ZeroOrOne, false, 0x0, NotRestricted, None),
    /* 6670 */ element!(SecurityEventDefinitionRef, 3544, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5115)),
    /* 6671 */ element!(SecurityEventDefinitionRefConditional, 3914, One, false, 0x0, NotRestricted, None),
    /* 6672 */ element!(SecurityEventFilterChain, 3916, One, false, 0x0, NotRestricted, None),
    /* 6673 */ element!(SecurityEventFilterChainRef, 3918, ZeroOrOne, false, 0x0, NotRestricted, None),
    /* 6674 */ element!(SecurityEventFilterChainRefConditional, 3917, One, false, 0x0, NotRestricted, None),
    /* 6675 */ element!(SecurityEventMapping, 3919, One, false, 0x0, NotRestricted, None),
    /* 6676 */ element!(SecurityEventPropsRef, 1313, ZeroOrOne, false, 0x0, ClassicPlatform, Some(5146)),
    /* 6677 */ element!(SecurityEventRef, 1313, ZeroOrOne, false, 0x0, ClassicPlatform, Some(5131)),
    /* 6678 */ element!(SecurityEventRef, 2313, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(2139)),
    /* 6679 */ element!(SecurityEventRef, 3544, One, false, 0x0, NotRestricted, None),
    /* 6680 */ element!(SecurityEventRef, 3921, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5101)),
    /* 6681 */ element!(SecurityEventRefs, 3545, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3058)),
    /* 6682 */ element!(SecurityEventReportInstanceDefinition, 3923, One, false, 0x0, NotRestricted, None),
    /* 6683 */ element!(SecurityEventReportInstanceDefinitionRef, 3900, ZeroOrOne, false, 0x100000, NotRestricted, Some(5114)),
    /* 6684 */ element!(SecurityEventReportInstanceValue, 3925, One, false, 0x0, NotRestricted, None),
    /* 6685 */ element!(SecurityEventReportInterface, 3927, One, false, 0x0, NotRestricted, None),
    /* 6686 */ element!(SecurityEventReportToSecurityEventDefinitionMapping, 3928, One, false, 0x0, NotRestricted, None),
    /* 6687 */ element!(SecurityEvents, 3912, ZeroOrOne, false, 0x1C0000, NotRestricted, Some(4962)),
    /* 6688 */ element!(SecurityLevelRef, 1541, One, false, 0x0, NotRestricted, None),
    /* 6689 */ element!(SecurityLevelRef, 1541, ZeroOrOne, false, 0x1FFFC0, NotRestricted, Some(5082)),
    /* 6690 */ element!(SecurityLevelRef, 1547, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(2140)),
    /* 6691 */ element!(SecurityLevelRefs, 1125, ZeroOrOne, false, 0x180000, NotRestricted, Some(5514)),
    /* 6692 */ element!(SeedSize, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(5738)),
    /* 6693 */ element!(SegmentByteOrder, 474, ZeroOrOne, false, 0x0, NotRestricted, Some(3731)),
    /* 6694 */ element!(SegmentLength, 2642, ZeroOrOne, false, 0x0, NotRestricted, Some(450)),
    /* 6695 */ element!(SegmentPosition, 2642, ZeroOrOne, false, 0x0, NotRestricted, Some(2349)),
    /* 6696 */ element!(SegmentPosition, 3935, One, false, 0x0, NotRestricted, None),
    /* 6697 */ element!(SegmentPositions, 3073, ZeroOrOne, false, 0x0, NotRestricted, Some(2757)),
    /* 6698 */ element!(SegmentReceptionTimeoutTime, 2229, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5895)),
    /* 6699 */ element!(SegmentReceptionTimeoutTimeRequest, 2229, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5893)),
    /* 6700 */ element!(SegmentReceptionTimeoutTimeResponse, 2229, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5894)),
    /* 6701 */ element!(SegmentRef, 2768, One, false, 0x0, NotRestricted, None),
    /* 6702 */ element!(SegmentRefs, 4793, ZeroOrOne, false, 0x0, NotRestricted, Some(32)),
    /* 6703 */ element!(SegmentationSupported, 298, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(1204)),
    /* 6704 */ element!(SegmentationSupported, 298, ZeroOrOne, false, 0x0, ClassicPlatform, Some(1205)),
    /* 6705 */ element!(SelectBlockForFirstInitAll, 298, ZeroOrOne, false, 0x0, NotRestricted, Some(1250)),
    /* 6706 */ element!(Selections, 2267, ZeroOrOne, false, 0x0, NotRestricted, Some(3118)),
    /* 6707 */ element!(SelectorFieldByteOrder, 474, ZeroOrOne, false, 0x0, NotRestricted, Some(3732)),
    /* 6708 */ element!(SelectorFieldCode, 2642, ZeroOrOne, false, 0x0, NotRestricted, Some(3113)),
    /* 6709 */ element!(SelectorFieldLength, 2642, ZeroOrOne, false, 0x0, NotRestricted, Some(3119)),
    /* 6710 */ element!(SelectorFieldStartPosition, 2642, ZeroOrOne, false, 0x0, NotRestricted, Some(4888)),
    /* 6711 */ element!(SendActivity, 2056, ZeroOrOne, false, 0x0, NotRestricted, Some(182)),
    /* 6712 */ element!(SendIndication, 3936, ZeroOrOne, false, 0x0, ClassicPlatform, Some(2355)),
    /* 6713 */ element!(SendPolicys, 364, ZeroOrOne, false, 0x1FFF80, NotRestricted, Some(1738)),
    /* 6714 */ element!(SendRespPendOnTransToBoot, 298, ZeroOrOne, false, 0x0, NotRestricted, Some(3046)),
    /* 6715 */ element!(SendRespPendOnTransToBoot, 2231, ZeroOrOne, false, 0x0, NotRestricted, Some(3046)),
    /* 6716 */ element!(SenderAnnotation, 3937, One, false, 0x0, NotRestricted, None),
    /* 6717 */ element!(SenderCapability, 3938, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(4137)),
    /* 6718 */ element!(SenderIntent, 3941, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(4140)),
    /* 6719 */ element!(SenderIref, 5020, ZeroOrOne, false, 0x0, NotRestricted, Some(5725)),
    /* 6720 */ element!(SenderRecArrayElementMapping, 3942, One, false, 0x0, NotRestricted, None),
    /* 6721 */ element!(SenderRecArrayTypeMapping, 3943, One, false, 0x0, NotRestricted, None),
    /* 6722 */ element!(SenderRecRecordElementMapping, 3945, One, false, 0x0, NotRestricted, None),
    /* 6723 */ element!(SenderRecRecordTypeMapping, 3947, One, false, 0x0, NotRestricted, None),
    /* 6724 */ element!(SenderReceiverAnnotations, 3492, ZeroOrOne, false, 0x0, NotRestricted, Some(312)),
    /* 6725 */ element!(SenderReceiverCompositeElementToSignalMapping, 3949, One, false, 0x0, NotRestricted, None),
    /* 6726 */ element!(SenderReceiverInterface, 3951, One, false, 0x0, NotRestricted, None),
    /* 6727 */ element!(SenderReceiverToSignalGroupMapping, 3954, One, false, 0x0, NotRestricted, None),
    /* 6728 */ element!(SenderReceiverToSignalMapping, 3956, One, false, 0x0, NotRestricted, None),
    /* 6729 */ element!(SenderToSignalTextTableMapping, 4754, ZeroOrOne, false, 0x0, NotRestricted, Some(4859)),
    /* 6730 */ element!(SendingNodeRef, 1399, One, false, 0x0, NotRestricted, None),
    /* 6731 */ element!(SendingNodeRefs, 1395, ZeroOrOne, false, 0x0, ClassicPlatform, Some(3210)),
    /* 6732 */ element!(SensorActuatorRef, 3958, ZeroOrOne, false, 0x0, NotRestricted, Some(1795)),
    /* 6733 */ element!(SensorActuatorSwComponentType, 3957, One, false, 0x0, NotRestricted, None),
    /* 6734 */ element!(SensorInstanceId, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(3633)),
    /* 6735 */ element!(SeparateSignalPath, 3959, One, false, 0x0, NotRestricted, None),
    /* 6736 */ element!(SeparatedComponentIref, 658, One, false, 0x0, NotRestricted, None),
    /* 6737 */ element!(SeparatedComponentIrefs, 662, ZeroOrOne, false, 0x0, NotRestricted, Some(3165)),
    /* 6738 */ element!(SeparationCycleExponent, 2642, ZeroOrOne, false, 0x0, ClassicPlatform, Some(1008)),
    /* 6739 */ element!(SeparationTime, 2229, ZeroOrOne, false, 0x0, NotRestricted, Some(2396)),
    /* 6740 */ element!(SeparationTime, 2229, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(2396)),
    /* 6741 */ element!(SeparationTime, 2229, ZeroOrOne, false, 0x0, NotRestricted, Some(2397)),
    /* 6742 */ element!(SeparationTimeRequest, 2229, ZeroOrOne, false, 0x0, NotRestricted, Some(2394)),
    /* 6743 */ element!(SeparationTimeRequest, 2229, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(2394)),
    /* 6744 */ element!(SeparationTimeResponse, 2229, ZeroOrOne, false, 0x0, NotRestricted, Some(2395)),
    /* 6745 */ element!(SeparationTimeResponse, 2229, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(2395)),
    /* 6746 */ element!(SequenceCounter, 3976, ZeroOrOne, false, 0x0, NotRestricted, Some(3045)),
    /* 6747 */ element!(SequenceCounterJumpWidth, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(2556)),
    /* 6748 */ element!(SequenceOffset, 2642, ZeroOrOne, false, 0x0, NotRestricted, Some(3114)),
    /* 6749 */ element!(SequentialInstructionsBegin, 3135, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(1595)),
    /* 6750 */ element!(SequentialInstructionsEnd, 3135, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(6002)),
    /* 6751 */ element!(SerializationTechnology, 3977, One, false, 0x0, NotRestricted, None),
    /* 6752 */ element!(SerializationTechnologyRef, 591, ZeroOrOne, false, 0x0, NotRestricted, Some(716)),
    /* 6753 */ element!(Serializer, 3978, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(791)),
    /* 6754 */ element!(SerializerRef, 591, ZeroOrOne, false, 0x0, NotRestricted, Some(3060)),
    /* 6755 */ element!(ServerArgumentImplPolicy, 3979, ZeroOrOne, false, 0x0, NotRestricted, Some(4308)),
    /* 6756 */ element!(ServerCallPoints, 3827, ZeroOrOne, false, 0x1FFF00, ClassicPlatform, Some(2746)),
    /* 6757 */ element!(ServerComSpec, 3980, One, false, 0x0, NotRestricted, None),
    /* 6758 */ element!(ServerNameIdentification, 4393, ZeroOrOne, false, 0x0, NotRestricted, Some(2366)),
    /* 6759 */ element!(ServerPortRef, 4126, ZeroOrOne, false, 0x0, NotRestricted, Some(2367)),
    /* 6760 */ element!(ServerServiceMajorVersion, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(1416)),
    /* 6761 */ element!(ServerServiceMinorVersion, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(1547)),
    /* 6762 */ element!(ServiceBusy, 4949, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3750)),
    /* 6763 */ element!(ServiceControl, 4078, ZeroOrOne, false, 0x0, NotRestricted, Some(511)),
    /* 6764 */ element!(ServiceDependencys, 61, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5551)),
    /* 6765 */ element!(ServiceDependencys, 365, ZeroOrOne, false, 0x1FFFFC, NotRestricted, Some(672)),
    /* 6766 */ element!(ServiceDependencys, 4530, ZeroOrOne, false, 0x1FFFC0, NotRestricted, Some(673)),
    /* 6767 */ element!(ServiceDeploymentRef, 611, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5074)),
    /* 6768 */ element!(ServiceDeploymentRef, 615, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5074)),
    /* 6769 */ element!(ServiceDeploymentRef, 631, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5074)),
    /* 6770 */ element!(ServiceDeploymentRef, 641, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5073)),
    /* 6771 */ element!(ServiceDiscoverConfigs, 2905, ZeroOrOne, false, 0x0, NotRestricted, Some(2392)),
    /* 6772 */ element!(ServiceDiscoverConfigs, 2919, ZeroOrOne, false, 0x0, NotRestricted, Some(2392)),
    /* 6773 */ element!(ServiceDiscoveryConfigs, 2906, ZeroOrOne, false, 0x1E0000, AdaptivePlatform, Some(2392)),
    /* 6774 */ element!(ServiceElementMappingRef, 4083, One, false, 0x0, NotRestricted, None),
    /* 6775 */ element!(ServiceElementMappingRefs, 4084, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(2175)),
    /* 6776 */ element!(ServiceElementSecureComConfigRef, 637, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(2145)),
    /* 6777 */ element!(ServiceFindTimeToLive, 3494, ZeroOrOne, false, 0x0, ClassicPlatform, Some(4088)),
    /* 6778 */ element!(ServiceId, 3494, ZeroOrOne, false, 0x0, ClassicPlatform, Some(2275)),
    /* 6779 */ element!(ServiceId, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(5929)),
    /* 6780 */ element!(ServiceIdentifier, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(4091)),
    /* 6781 */ element!(ServiceIdentifier, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(4092)),
    /* 6782 */ element!(ServiceInstanceCollectionSet, 3987, One, false, 0x0, NotRestricted, None),
    /* 6783 */ element!(ServiceInstanceId, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(1032)),
    /* 6784 */ element!(ServiceInstanceId, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(1177)),
    /* 6785 */ element!(ServiceInstanceId, 3494, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(1177)),
    /* 6786 */ element!(ServiceInstanceId, 3494, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(1178)),
    /* 6787 */ element!(ServiceInstancePortConfig, 3989, One, false, 0x0, NotRestricted, None),
    /* 6788 */ element!(ServiceInstanceRef, 622, One, false, 0x0, NotRestricted, None),
    /* 6789 */ element!(ServiceInstanceRef, 622, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(4988)),
    /* 6790 */ element!(ServiceInstanceRef, 622, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5032)),
    /* 6791 */ element!(ServiceInstanceRef, 930, One, false, 0x0, NotRestricted, None),
    /* 6792 */ element!(ServiceInstanceRef, 1141, ZeroOrOne, false, 0x0, ClassicPlatform, Some(5037)),
    /* 6793 */ element!(ServiceInstanceRef, 1352, One, false, 0x0, NotRestricted, None),
    /* 6794 */ element!(ServiceInstanceRef, 1352, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(2141)),
    /* 6795 */ element!(ServiceInstanceRef, 1571, One, false, 0x0, NotRestricted, None),
    /* 6796 */ element!(ServiceInstanceRef, 1571, ZeroOrOne, false, 0x0, NotRestricted, Some(5726)),
    /* 6797 */ element!(ServiceInstanceRef, 1593, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5075)),
    /* 6798 */ element!(ServiceInstanceRef, 1597, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5083)),
    /* 6799 */ element!(ServiceInstanceRef, 1601, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5075)),
    /* 6800 */ element!(ServiceInstanceRef, 1618, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5075)),
    /* 6801 */ element!(ServiceInstanceRef, 3991, ZeroOrOne, false, 0x0, NotRestricted, Some(1878)),
    /* 6802 */ element!(ServiceInstanceRef, 3999, One, false, 0x0, NotRestricted, None),
    /* 6803 */ element!(ServiceInstanceRef, 3999, ZeroOrOne, false, 0x0, NotRestricted, Some(1877)),
    /* 6804 */ element!(ServiceInstanceRef, 4007, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(1876)),
    /* 6805 */ element!(ServiceInstanceRef, 4007, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(1878)),
    /* 6806 */ element!(ServiceInstanceRef, 4051, One, false, 0x0, NotRestricted, None),
    /* 6807 */ element!(ServiceInstanceRefs, 931, ZeroOrOne, false, 0x0, NotRestricted, Some(5998)),
    /* 6808 */ element!(ServiceInstanceRefs, 1353, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(2143)),
    /* 6809 */ element!(ServiceInstanceRefs, 1572, ZeroOrOne, false, 0x180000, NotRestricted, Some(5535)),
    /* 6810 */ element!(ServiceInstanceRefs, 3427, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(1824)),
    /* 6811 */ element!(ServiceInstanceRefs, 4000, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(1877)),
    /* 6812 */ element!(ServiceInstanceRefs, 4052, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(4315)),
    /* 6813 */ element!(ServiceInstanceToApplicationEndpointMapping, 3990, One, false, 0x0, NotRestricted, None),
    /* 6814 */ element!(ServiceInstanceToPortPrototypeMapping, 4001, One, false, 0x0, NotRestricted, None),
    /* 6815 */ element!(ServiceInstanceToPortPrototypeMappingRef, 1728, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(1678)),
    /* 6816 */ element!(ServiceInstanceToPortPrototypeMappingRef, 4727, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3117)),
    /* 6817 */ element!(ServiceInstanceToSignalMapping, 4002, One, false, 0x0, NotRestricted, None),
    /* 6818 */ element!(ServiceInstanceToSignalMappingSet, 4008, One, false, 0x0, NotRestricted, None),
    /* 6819 */ element!(ServiceInstanceToSignalMappings, 4009, ZeroOrOne, false, 0x0, NotRestricted, Some(4751)),
    /* 6820 */ element!(ServiceInstances, 3988, ZeroOrOne, false, 0x1C0000, NotRestricted, Some(2380)),
    /* 6821 */ element!(ServiceInterface, 4011, One, false, 0x0, NotRestricted, None),
    /* 6822 */ element!(ServiceInterfaceApplicationErrorMapping, 4012, One, false, 0x0, NotRestricted, None),
    /* 6823 */ element!(ServiceInterfaceDeploymentRef, 58, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(1880)),
    /* 6824 */ element!(ServiceInterfaceElementMappingRef, 3233, One, false, 0x0, NotRestricted, None),
    /* 6825 */ element!(ServiceInterfaceElementMappingRefs, 3234, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(1881)),
    /* 6826 */ element!(ServiceInterfaceElementSecureComConfig, 4018, One, false, 0x0, NotRestricted, None),
    /* 6827 */ element!(ServiceInterfaceEventMapping, 4022, One, false, 0x0, NotRestricted, None),
    /* 6828 */ element!(ServiceInterfaceFieldMapping, 4024, One, false, 0x0, NotRestricted, None),
    /* 6829 */ element!(ServiceInterfaceId, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(1033)),
    /* 6830 */ element!(ServiceInterfaceId, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(1040)),
    /* 6831 */ element!(ServiceInterfaceId, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(5933)),
    /* 6832 */ element!(ServiceInterfaceId, 3494, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5933)),
    /* 6833 */ element!(ServiceInterfaceId, 4393, ZeroOrOne, false, 0x0, NotRestricted, Some(5932)),
    /* 6834 */ element!(ServiceInterfaceId, 4393, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5932)),
    /* 6835 */ element!(ServiceInterfaceMapping, 4026, One, false, 0x0, NotRestricted, None),
    /* 6836 */ element!(ServiceInterfaceMappingSet, 4027, One, false, 0x0, NotRestricted, None),
    /* 6837 */ element!(ServiceInterfaceMethodMapping, 4031, One, false, 0x0, NotRestricted, None),
    /* 6838 */ element!(ServiceInterfacePedigree, 4034, One, false, 0x0, NotRestricted, None),
    /* 6839 */ element!(ServiceInterfaceRef, 59, ZeroOrOne, false, 0x0, NotRestricted, Some(1880)),
    /* 6840 */ element!(ServiceInterfaceRef, 4017, ZeroOrOne, false, 0x0, NotRestricted, Some(1879)),
    /* 6841 */ element!(ServiceInterfaceRef, 4017, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(1879)),
    /* 6842 */ element!(ServiceInterfaceRef, 4035, One, false, 0x0, NotRestricted, None),
    /* 6843 */ element!(ServiceInterfaceRef, 4907, ZeroOrOne, false, 0x0, NotRestricted, Some(5693)),
    /* 6844 */ element!(ServiceInterfaceRefs, 4036, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(2146)),
    /* 6845 */ element!(ServiceInterfaceSubElement, 4038, One, false, 0x0, NotRestricted, None),
    /* 6846 */ element!(ServiceInterfaceTref, 4907, ZeroOrOne, false, 0x0, NotRestricted, Some(2144)),
    /* 6847 */ element!(ServiceInterfaceTriggerMapping, 4044, One, false, 0x0, NotRestricted, None),
    /* 6848 */ element!(ServiceInterfaceVersion, 4293, ZeroOrOne, false, 0x0, NotRestricted, Some(2747)),
    /* 6849 */ element!(ServiceInterfaceVersion, 4294, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(2747)),
    /* 6850 */ element!(ServiceItems, 388, ZeroOrOne, false, 0x1FFFFF, ClassicPlatform, Some(64)),
    /* 6851 */ element!(ServiceKind, 4047, ZeroOrOne, false, 0x0, ClassicPlatform, Some(4044)),
    /* 6852 */ element!(ServiceNeeds, 429, ZeroOrOne, false, 0x0, NotRestricted, Some(2792)),
    /* 6853 */ element!(ServiceNeeds, 4544, ZeroOrOne, false, 0x0, NotRestricted, Some(2792)),
    /* 6854 */ element!(ServiceOfferTimeToLive, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(695)),
    /* 6855 */ element!(ServicePointSymbolPost, 475, ZeroOrOne, false, 0x0, NotRestricted, Some(353)),
    /* 6856 */ element!(ServicePointSymbolPre, 475, ZeroOrOne, false, 0x0, NotRestricted, Some(354)),
    /* 6857 */ element!(ServiceProxySwComponentType, 4048, One, false, 0x0, NotRestricted, None),
    /* 6858 */ element!(ServiceRequestCallbackType, 1562, ZeroOrOne, false, 0x0, NotRestricted, Some(5477)),
    /* 6859 */ element!(ServiceResourceRef, 818, ZeroOrOne, false, 0x0, ClassicPlatform, Some(2379)),
    /* 6860 */ element!(ServiceSwComponentType, 4049, One, false, 0x0, NotRestricted, None),
    /* 6861 */ element!(ServiceTables, 1202, ZeroOrOne, false, 0x1FFFC0, NotRestricted, Some(5537)),
    /* 6862 */ element!(ServiceTables, 1456, ZeroOrOne, false, 0x1FFF00, NotRestricted, Some(5727)),
    /* 6863 */ element!(ServiceTiming, 4050, One, false, 0x0, NotRestricted, None),
    /* 6864 */ element!(SessionControlClassRef, 1585, ZeroOrOne, false, 0x0, NotRestricted, Some(5292)),
    /* 6865 */ element!(SessionHandling, 4313, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(756)),
    /* 6866 */ element!(SessionHandlingSr, 4313, ZeroOrOne, false, 0x0, NotRestricted, Some(756)),
    /* 6867 */ element!(SessionId, 3494, ZeroOrOne, false, 0x0, ClassicPlatform, Some(3494)),
    /* 6868 */ element!(SessionIdSupport, 298, ZeroOrOne, false, 0x0, ClassicPlatform, Some(3816)),
    /* 6869 */ element!(SessionIdSupport, 298, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3816)),
    /* 6870 */ element!(Set, 1048, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3426)),
    /* 6871 */ element!(Set, 4249, ZeroOrOne, false, 0x0, NotRestricted, Some(3424)),
    /* 6872 */ element!(Set, 4250, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3425)),
    /* 6873 */ element!(Set, 4994, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3425)),
    /* 6874 */ element!(SetFunctionGroupStateIref, 2295, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5119)),
    /* 6875 */ element!(SetterCallRef, 4019, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(1915)),
    /* 6876 */ element!(SetterCallSignalRef, 4063, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(2105)),
    /* 6877 */ element!(SetterOperationRef, 2983, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(1833)),
    /* 6878 */ element!(SetterRef, 2136, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(2875)),
    /* 6879 */ element!(SetterRef, 3981, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(2877)),
    /* 6880 */ element!(SetterReturnRef, 4019, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(1916)),
    /* 6881 */ element!(SetterReturnSignalRef, 4063, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(2106)),
    /* 6882 */ element!(Severity, 1678, ZeroOrOne, false, 0x0, NotRestricted, Some(447)),
    /* 6883 */ element!(Severity, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(3605)),
    /* 6884 */ element!(Severity, 4054, ZeroOrOne, false, 0x0, NotRestricted, Some(2404)),
    /* 6885 */ element!(ShallNotRunOnRef, 3555, One, false, 0x0, NotRestricted, None),
    /* 6886 */ element!(ShallNotRunOnRefs, 3554, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5169)),
    /* 6887 */ element!(ShallRunOnRef, 3555, One, false, 0x0, NotRestricted, None),
    /* 6888 */ element!(ShallRunOnRefs, 3556, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5168)),
    /* 6889 */ element!(Shaper, 763, ZeroOrOne, false, 0x0, NotRestricted, Some(847)),
    /* 6890 */ element!(Shared, 298, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3588)),
    /* 6891 */ element!(SharedAxisTypeRef, 4430, ZeroOrOne, false, 0x0, NotRestricted, Some(4784)),
    /* 6892 */ element!(SharedParameters, 3223, ZeroOrOne, false, 0x1FFFFF, NotRestricted, Some(532)),
    /* 6893 */ element!(SharedTimer, 298, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(2644)),
    /* 6894 */ element!(ShortLabel, 2500, ZeroOrOne, false, 0x0, NotRestricted, Some(169)),
    /* 6895 */ element!(ShortLabel, 2500, ZeroOrOne, false, 0x0, NotRestricted, Some(2931)),
    /* 6896 */ element!(ShortLabel, 2500, ZeroOrOne, false, 0x0, NotRestricted, Some(4213)),
    /* 6897 */ element!(ShortLabel, 2500, ZeroOrOne, false, 0x0, NotRestricted, Some(4214)),
    /* 6898 */ element!(ShortLabel, 2500, ZeroOrOne, false, 0x0, NotRestricted, Some(4217)),
    /* 6899 */ element!(ShortLabel, 2500, ZeroOrOne, false, 0x0, NotRestricted, Some(4218)),
    /* 6900 */ element!(ShortLabel, 2500, ZeroOrOne, false, 0x0, NotRestricted, Some(4292)),
    /* 6901 */ element!(ShortLabel, 2500, ZeroOrOne, false, 0x0, NotRestricted, Some(4395)),
    /* 6902 */ element!(ShortLabel, 2500, ZeroOrOne, false, 0x0, NotRestricted, Some(4396)),
    /* 6903 */ element!(ShortLabel, 2500, ZeroOrOne, false, 0x0, NotRestricted, Some(4803)),
    /* 6904 */ element!(ShortLabel, 2500, ZeroOrOne, false, 0x0, NotRestricted, Some(4804)),
    /* 6905 */ element!(ShortLabel, 2500, ZeroOrOne, false, 0x0, NotRestricted, Some(4908)),
    /* 6906 */ element!(ShortLabel, 2500, ZeroOrOne, false, 0x0, NotRestricted, Some(5779)),
    /* 6907 */ element!(ShortLabel, 4393, ZeroOrOne, false, 0x0, NotRestricted, Some(4107)),
    /* 6908 */ element!(ShortLabel, 4393, ZeroOrOne, false, 0x0, NotRestricted, Some(4833)),
    /* 6909 */ element!(ShortLabel, 5078, ZeroOrOne, false, 0x0, NotRestricted, Some(4107)),
    /* 6910 */ element!(ShortLabel, 5078, ZeroOrOne, false, 0x0, NotRestricted, Some(4832)),
    /* 6911 */ element!(ShortLabelPattern, 4393, ZeroOrOne, false, 0x0, NotRestricted, Some(3511)),
    /* 6912 */ element!(ShortName, 2500, One, false, 0x0, NotRestricted, Some(5785)),
    /* 6913 */ element!(ShortNameFragment, 4055, One, false, 0x0, NotRestricted, None),
    /* 6914 */ element!(ShortNameFragments, 3655, ZeroOrOne, false, 0x0, NotRestricted, Some(5786)),
    /* 6915 */ element!(ShortNamePattern, 4393, ZeroOrOne, false, 0x0, NotRestricted, Some(4158)),
    /* 6916 */ element!(ShortTermAdjustment, 298, ZeroOrOne, false, 0x0, NotRestricted, Some(2402)),
    /* 6917 */ element!(ShortTermAdjustmentSupported, 298, ZeroOrOne, false, 0x0, NotRestricted, Some(3896)),
    /* 6918 */ element!(Shutdown, 569, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3332)),
    /* 6919 */ element!(SignalAge, 3068, ZeroOrOne, false, 0x0, NotRestricted, Some(2946)),
    /* 6920 */ element!(SignalBasedEventDeployment, 4056, One, false, 0x0, NotRestricted, None),
    /* 6921 */ element!(SignalBasedEventElementToISignalTriggeringMapping, 4058, One, false, 0x0, NotRestricted, None),
    /* 6922 */ element!(SignalBasedEventRef, 4059, ZeroOrOne, false, 0x0, NotRestricted, Some(1958)),
    /* 6923 */ element!(SignalBasedFieldDeployment, 4060, One, false, 0x0, NotRestricted, None),
    /* 6924 */ element!(SignalBasedFieldRef, 4064, ZeroOrOne, false, 0x0, NotRestricted, Some(1984)),
    /* 6925 */ element!(SignalBasedFieldToISignalTriggeringMapping, 4062, One, false, 0x0, NotRestricted, None),
    /* 6926 */ element!(SignalBasedFireAndForgetMethodToISignalTriggeringMapping, 4065, One, false, 0x0, NotRestricted, None),
    /* 6927 */ element!(SignalBasedMethodDeployment, 4067, One, false, 0x0, NotRestricted, None),
    /* 6928 */ element!(SignalBasedMethodRef, 4070, ZeroOrOne, false, 0x0, NotRestricted, Some(2209)),
    /* 6929 */ element!(SignalBasedMethodToISignalTriggeringMapping, 4068, One, false, 0x0, NotRestricted, None),
    /* 6930 */ element!(SignalBasedServiceInterfaceDeployment, 4071, One, false, 0x0, NotRestricted, None),
    /* 6931 */ element!(SignalBasedTriggerToISignalTriggeringMapping, 4072, One, false, 0x0, NotRestricted, None),
    /* 6932 */ element!(SignalFan, 4074, ZeroOrOne, false, 0x0, NotRestricted, Some(2508)),
    /* 6933 */ element!(SignalGroupRef, 2467, ZeroOrOne, false, 0x0, NotRestricted, Some(2232)),
    /* 6934 */ element!(SignalIPduCounter, 4075, One, false, 0x0, NotRestricted, None),
    /* 6935 */ element!(SignalIPduReplication, 4076, One, false, 0x0, NotRestricted, None),
    /* 6936 */ element!(SignalMappings, 2319, ZeroOrOne, false, 0x1C0000, NotRestricted, Some(2406)),
    /* 6937 */ element!(SignalPathConstraints, 4632, ZeroOrOne, false, 0x1C0000, ClassicPlatform, Some(424)),
    /* 6938 */ element!(SignalServiceTranslationElementProps, 4079, One, false, 0x0, NotRestricted, None),
    /* 6939 */ element!(SignalServiceTranslationEventProps, 4081, One, false, 0x0, NotRestricted, None),
    /* 6940 */ element!(SignalServiceTranslationEventPropss, 4094, ZeroOrOne, false, 0x0, NotRestricted, Some(535)),
    /* 6941 */ element!(SignalServiceTranslationProps, 4085, One, false, 0x0, NotRestricted, None),
    /* 6942 */ element!(SignalServiceTranslationPropsSet, 4092, One, false, 0x0, NotRestricted, None),
    /* 6943 */ element!(SignalServiceTranslationPropss, 4093, ZeroOrOne, false, 0x0, NotRestricted, Some(293)),
    /* 6944 */ element!(SignalToReceiverTextTableMapping, 4754, ZeroOrOne, false, 0x0, NotRestricted, Some(4858)),
    /* 6945 */ element!(Signals, 645, ZeroOrOne, false, 0x0, NotRestricted, Some(2764)),
    /* 6946 */ element!(Signals, 645, ZeroOrOne, false, 0x0, NotRestricted, Some(2765)),
    /* 6947 */ element!(Signals, 645, ZeroOrOne, false, 0x0, NotRestricted, Some(2830)),
    /* 6948 */ element!(Signals, 645, ZeroOrOne, false, 0x0, NotRestricted, Some(2831)),
    /* 6949 */ element!(SignatureSchemeId, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(718)),
    /* 6950 */ element!(SignatureSchemeRef, 4819, One, false, 0x0, NotRestricted, None),
    /* 6951 */ element!(SignatureSchemeRefs, 4820, ZeroOrOne, false, 0x0, NotRestricted, Some(5195)),
    /* 6952 */ element!(SignatureSupportAp, 2537, ZeroOrOne, false, 0x1F0000, AdaptivePlatform, Some(2868)),
    /* 6953 */ element!(SignatureSupportCp, 2539, ZeroOrOne, false, 0x1F0000, ClassicPlatform, Some(2869)),
    /* 6954 */ element!(Significance, 1586, ZeroOrOne, false, 0x0, NotRestricted, Some(2407)),
    /* 6955 */ element!(SimulatedExecutionTime, 4095, One, false, 0x0, NotRestricted, None),
    /* 6956 */ element!(Size, 2231, ZeroOrOne, false, 0x0, NotRestricted, Some(2408)),
    /* 6957 */ element!(Size, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(3120)),
    /* 6958 */ element!(Size, 3494, ZeroOrOne, false, 0x0, ClassicPlatform, Some(3187)),
    /* 6959 */ element!(Size, 3494, ZeroOrOne, false, 0x0, ClassicPlatform, Some(4050)),
    /* 6960 */ element!(Size, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(5739)),
    /* 6961 */ element!(SizeOfArrayLengthField, 3494, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(410)),
    /* 6962 */ element!(SizeOfArrayLengthField, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(3875)),
    /* 6963 */ element!(SizeOfArrayLengthFields, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(3122)),
    /* 6964 */ element!(SizeOfStringLengthField, 3494, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(407)),
    /* 6965 */ element!(SizeOfStringLengthField, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(3876)),
    /* 6966 */ element!(SizeOfStringLengthFields, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(3121)),
    /* 6967 */ element!(SizeOfStructLengthField, 3494, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(411)),
    /* 6968 */ element!(SizeOfStructLengthField, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(3873)),
    /* 6969 */ element!(SizeOfStructLengthFields, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(3123)),
    /* 6970 */ element!(SizeOfUnionLengthField, 3494, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(408)),
    /* 6971 */ element!(SizeOfUnionLengthField, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(3874)),
    /* 6972 */ element!(SizeOfUnionLengthFields, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(3124)),
    /* 6973 */ element!(SizeOfUnionTypeSelectorField, 3494, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(409)),
    /* 6974 */ element!(SlaveActAsPassiveCommunicationSlave, 298, ZeroOrOne, false, 0x0, NotRestricted, Some(4221)),
    /* 6975 */ element!(SlaveEventRef, 1406, ZeroOrOne, false, 0x0, NotRestricted, Some(5740)),
    /* 6976 */ element!(SlaveQualifiedUnexpectedLinkDownTime, 2229, ZeroOrOne, false, 0x0, NotRestricted, Some(4260)),
    /* 6977 */ element!(SlaveRef, 2379, ZeroOrOne, false, 0x0, NotRestricted, Some(5741)),
    /* 6978 */ element!(Slaves, 2369, ZeroOrOne, false, 0x1C0000, NotRestricted, Some(5569)),
    /* 6979 */ element!(SleepModeExecutionDelay, 2229, ZeroOrOne, false, 0x0, NotRestricted, Some(859)),
    /* 6980 */ element!(SleepModeSupported, 298, ZeroOrOne, false, 0x0, ClassicPlatform, Some(2615)),
    /* 6981 */ element!(SleepRepetitionDelayOfSleepRequest, 2229, ZeroOrOne, false, 0x0, NotRestricted, Some(857)),
    /* 6982 */ element!(SleepRepetitionsOfSleepRequest, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(438)),
    /* 6983 */ element!(SleepTime, 2229, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(4108)),
    /* 6984 */ element!(SlotCapacity, 3494, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(229)),
    /* 6985 */ element!(SlotCapacity, 3494, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(230)),
    /* 6986 */ element!(SlotCapacity, 3494, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(1341)),
    /* 6987 */ element!(SlotId, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(1291)),
    /* 6988 */ element!(SlotType, 863, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3811)),
    /* 6989 */ element!(SmInteractsWithNmMapping, 4099, One, false, 0x0, NotRestricted, None),
    /* 6990 */ element!(SnapshotRecordContents, 1663, ZeroOrOne, false, 0x1C0000, NotRestricted, Some(5618)),
    /* 6991 */ element!(SoAdConfig, 4101, ZeroOrOne, false, 0x180000, ClassicPlatform, Some(2418)),
    /* 6992 */ element!(SoAdRoutingGroup, 4108, One, false, 0x0, NotRestricted, None),
    /* 6993 */ element!(SoConIPduIdentifier, 4109, One, false, 0x0, NotRestricted, None),
    /* 6994 */ element!(SoConIPduIdentifierRef, 3239, ZeroOrOne, false, 0x0, NotRestricted, None),
    /* 6995 */ element!(SoConIPduIdentifierRefConditional, 4110, One, false, 0x0, NotRestricted, None),
    /* 6996 */ element!(SocketAddress, 4111, One, false, 0x0, NotRestricted, None),
    /* 6997 */ element!(SocketAddressRef, 4118, ZeroOrOne, false, 0x0, NotRestricted, None),
    /* 6998 */ element!(SocketAddressRefConditional, 4117, One, false, 0x0, NotRestricted, None),
    /* 6999 */ element!(SocketAddresss, 4105, ZeroOrOne, false, 0x1C0000, NotRestricted, Some(294)),
    /* 7000 */ element!(SocketConnection, 4120, One, false, 0x0, NotRestricted, None),
    /* 7001 */ element!(SocketConnectionBundle, 4123, One, false, 0x0, NotRestricted, None),
    /* 7002 */ element!(SocketConnectionBundleRef, 4691, ZeroOrOne, false, 0x0, NotRestricted, Some(2510)),
    /* 7003 */ element!(SocketConnectionIpduIdentifier, 4128, One, false, 0x0, NotRestricted, None),
    /* 7004 */ element!(SocketConnectionIpduIdentifierSet, 4129, One, false, 0x0, NotRestricted, None),
    /* 7005 */ element!(SocketConnectionRef, 1764, One, false, 0x0, NotRestricted, None),
    /* 7006 */ element!(SocketConnectionRefs, 1765, ZeroOrOne, false, 0x0, NotRestricted, Some(922)),
    /* 7007 */ element!(SocketOption, 4393, One, false, 0x0, NotRestricted, None),
    /* 7008 */ element!(SocketOptions, 2036, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(4099)),
    /* 7009 */ element!(SocketOptions, 2051, ZeroOrOne, false, 0x0, NotRestricted, None),
    /* 7010 */ element!(SocketOptions, 2051, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(4099)),
    /* 7011 */ element!(SocketProtocol, 4107, ZeroOrOne, false, 0x0, NotRestricted, Some(3984)),
    /* 7012 */ element!(SoftwareActivationDependencyCompareCondition, 4134, One, false, 0x0, NotRestricted, None),
    /* 7013 */ element!(SoftwareActivationDependencyFormula, 4136, One, false, 0x0, NotRestricted, None),
    /* 7014 */ element!(SoftwareActivationDependencyRef, 4135, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5017)),
    /* 7015 */ element!(SoftwareCluster, 4140, One, false, 0x0, NotRestricted, None),
    /* 7016 */ element!(SoftwareClusterComResourceRef, 4651, ZeroOrOne, false, 0x0, ClassicPlatform, Some(349)),
    /* 7017 */ element!(SoftwareClusterDependency, 4152, One, false, 0x0, NotRestricted, None),
    /* 7018 */ element!(SoftwareClusterDependencyCompareCondition, 4153, One, false, 0x0, NotRestricted, None),
    /* 7019 */ element!(SoftwareClusterDependencyFormula, 4156, One, false, 0x0, NotRestricted, None),
    /* 7020 */ element!(SoftwareClusterDesign, 4161, One, false, 0x0, NotRestricted, None),
    /* 7021 */ element!(SoftwareClusterDesignDependency, 4163, One, false, 0x0, NotRestricted, None),
    /* 7022 */ element!(SoftwareClusterDiagnosticDeploymentProps, 4186, One, false, 0x0, NotRestricted, None),
    /* 7023 */ element!(SoftwareClusterDoipDiagnosticAddress, 4195, One, false, 0x0, NotRestricted, None),
    /* 7024 */ element!(SoftwareClusterId, 3494, ZeroOrOne, false, 0x0, ClassicPlatform, Some(4174)),
    /* 7025 */ element!(SoftwareClusterId, 3494, ZeroOrOne, false, 0x0, ClassicPlatform, Some(4175)),
    /* 7026 */ element!(SoftwareClusterRef, 811, ZeroOrOne, false, 0x0, ClassicPlatform, Some(2419)),
    /* 7027 */ element!(SoftwareClusterRef, 4154, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5020)),
    /* 7028 */ element!(SoftwareClusterRef, 4223, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5018)),
    /* 7029 */ element!(SoftwareClusterRequirement, 4201, One, false, 0x0, NotRestricted, None),
    /* 7030 */ element!(SoftwareClusterSovdAddress, 4212, One, false, 0x0, NotRestricted, None),
    /* 7031 */ element!(SoftwareClusterToApplicationPartitionMapping, 808, ZeroOrOne, false, 0x0, ClassicPlatform, Some(1451)),
    /* 7032 */ element!(SoftwareClusterToApplicationPartitionMappings, 4633, ZeroOrOne, false, 0x180000, ClassicPlatform, Some(2938)),
    /* 7033 */ element!(SoftwareClusterToResourceMappings, 4634, ZeroOrOne, false, 0x1F0000, ClassicPlatform, Some(6030)),
    /* 7034 */ element!(SoftwareClusterUdsDiagnosticAddress, 4215, One, false, 0x0, NotRestricted, None),
    /* 7035 */ element!(SoftwareCompositionTref, 3742, ZeroOrOne, false, 0x0, NotRestricted, Some(6003)),
    /* 7036 */ element!(SoftwareContext, 4217, ZeroOrOne, false, 0x0, ClassicPlatform, Some(428)),
    /* 7037 */ element!(SoftwareContext, 4217, ZeroOrOne, false, 0x0, NotRestricted, Some(429)),
    /* 7038 */ element!(SoftwareContext, 4217, ZeroOrOne, false, 0x0, NotRestricted, Some(1777)),
    /* 7039 */ element!(SoftwareMemorySectionRef, 2969, ZeroOrOne, false, 0x0, NotRestricted, Some(2117)),
    /* 7040 */ element!(SoftwarePackage, 4218, One, false, 0x0, NotRestricted, None),
    /* 7041 */ element!(SoftwarePackageStep, 4224, One, false, 0x0, NotRestricted, None),
    /* 7042 */ element!(SoftwarePackageSteps, 4951, ZeroOrOne, true, 0x0, AdaptivePlatform, Some(3417)),
    /* 7043 */ element!(SoftwarePackageStoring, 4230, One, false, 0x0, NotRestricted, None),
    /* 7044 */ element!(SomeipDataPrototypeTransformationProps, 4235, One, false, 0x0, NotRestricted, None),
    /* 7045 */ element!(SomeipEvent, 4238, One, false, 0x0, NotRestricted, None),
    /* 7046 */ element!(SomeipEventDeployment, 4239, One, false, 0x0, NotRestricted, None),
    /* 7047 */ element!(SomeipEventGroup, 4241, One, false, 0x0, NotRestricted, None),
    /* 7048 */ element!(SomeipEventProps, 4244, One, false, 0x0, NotRestricted, None),
    /* 7049 */ element!(SomeipField, 4246, One, false, 0x0, NotRestricted, None),
    /* 7050 */ element!(SomeipFieldDeployment, 4247, One, false, 0x0, NotRestricted, None),
    /* 7051 */ element!(SomeipMethod, 4249, One, false, 0x0, NotRestricted, None),
    /* 7052 */ element!(SomeipMethodDeployment, 4250, One, false, 0x0, NotRestricted, None),
    /* 7053 */ element!(SomeipMethodProps, 4251, One, false, 0x0, NotRestricted, None),
    /* 7054 */ element!(SomeipProvidedEventGroup, 4254, One, false, 0x0, NotRestricted, None),
    /* 7055 */ element!(SomeipRemoteMulticastConfig, 4257, One, false, 0x0, NotRestricted, None),
    /* 7056 */ element!(SomeipRemoteUnicastConfig, 4258, One, false, 0x0, NotRestricted, None),
    /* 7057 */ element!(SomeipRequiredEventGroup, 4261, One, false, 0x0, NotRestricted, None),
    /* 7058 */ element!(SomeipRule, 4253, ZeroOrOne, false, 0x0, NotRestricted, Some(376)),
    /* 7059 */ element!(SomeipSdClientEventGroupTimingConfig, 4263, One, false, 0x0, NotRestricted, None),
    /* 7060 */ element!(SomeipSdClientEventGroupTimingConfigRef, 4265, ZeroOrOne, false, 0x0, NotRestricted, None),
    /* 7061 */ element!(SomeipSdClientEventGroupTimingConfigRefConditional, 4264, One, false, 0x0, NotRestricted, None),
    /* 7062 */ element!(SomeipSdClientServiceInstanceConfig, 4266, One, false, 0x0, NotRestricted, None),
    /* 7063 */ element!(SomeipSdClientServiceInstanceConfigRef, 4269, ZeroOrOne, false, 0x0, NotRestricted, None),
    /* 7064 */ element!(SomeipSdClientServiceInstanceConfigRefConditional, 4268, One, false, 0x0, NotRestricted, None),
    /* 7065 */ element!(SomeipSdRule, 4270, ZeroOrOne, false, 0x0, NotRestricted, Some(375)),
    /* 7066 */ element!(SomeipSdServerEventGroupTimingConfig, 4271, One, false, 0x0, NotRestricted, None),
    /* 7067 */ element!(SomeipSdServerEventGroupTimingConfigRef, 4273, ZeroOrOne, false, 0x0, NotRestricted, None),
    /* 7068 */ element!(SomeipSdServerEventGroupTimingConfigRefConditional, 4272, One, false, 0x0, NotRestricted, None),
    /* 7069 */ element!(SomeipSdServerServiceInstanceConfig, 4275, One, false, 0x0, NotRestricted, None),
    /* 7070 */ element!(SomeipSdServerServiceInstanceConfigRef, 4277, ZeroOrOne, false, 0x0, NotRestricted, None),
    /* 7071 */ element!(SomeipSdServerServiceInstanceConfigRefConditional, 4276, One, false, 0x0, NotRestricted, None),
    /* 7072 */ element!(SomeipServiceDiscovery, 4278, One, false, 0x0, NotRestricted, None),
    /* 7073 */ element!(SomeipServiceDiscoveryPort, 3494, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(4161)),
    /* 7074 */ element!(SomeipServiceInstanceToMachineMapping, 4282, One, false, 0x0, NotRestricted, None),
    /* 7075 */ element!(SomeipServiceInterface, 4289, One, false, 0x0, NotRestricted, None),
    /* 7076 */ element!(SomeipServiceInterfaceDeployment, 4290, One, false, 0x0, NotRestricted, None),
    /* 7077 */ element!(SomeipServiceVersion, 4294, One, false, 0x0, NotRestricted, None),
    /* 7078 */ element!(SomeipTpChannel, 4296, One, false, 0x0, NotRestricted, None),
    /* 7079 */ element!(SomeipTpConfig, 4297, One, false, 0x0, NotRestricted, None),
    /* 7080 */ element!(SomeipTpConnection, 4300, One, false, 0x0, NotRestricted, None),
    /* 7081 */ element!(SomeipTransformationDescription, 4303, One, false, 0x0, NotRestricted, None),
    /* 7082 */ element!(SomeipTransformationISignalProps, 4304, One, false, 0x0, NotRestricted, None),
    /* 7083 */ element!(SomeipTransformationISignalPropsConditional, 4305, One, false, 0x0, NotRestricted, None),
    /* 7084 */ element!(SomeipTransformationISignalPropsVariants, 4311, ZeroOrOne, false, 0x1F0000, NotRestricted, Some(4408)),
    /* 7085 */ element!(SomeipTransformationProps, 4312, One, false, 0x0, NotRestricted, None),
    /* 7086 */ element!(SomeipTransformationPropsRef, 4237, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5213)),
    /* 7087 */ element!(SouceCanIdRef, 460, ZeroOrOne, false, 0x0, NotRestricted, Some(5196)),
    /* 7088 */ element!(SourceAddressCode, 3494, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(4179)),
    /* 7089 */ element!(SourceAddressMask, 3494, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(4148)),
    /* 7090 */ element!(SourceAddressRangeEnd, 3494, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(2703)),
    /* 7091 */ element!(SourceAddressRangeEnd, 3494, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3127)),
    /* 7092 */ element!(SourceAddressRangeStart, 3494, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(2702)),
    /* 7093 */ element!(SourceAddressRangeStart, 3494, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3128)),
    /* 7094 */ element!(SourceCanIdCode, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(5962)),
    /* 7095 */ element!(SourceCanIdMask, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(1454)),
    /* 7096 */ element!(SourceCanIdRef, 461, ZeroOrOne, false, 0x0, NotRestricted, Some(5196)),
    /* 7097 */ element!(SourceChannel, 462, ZeroOrOne, false, 0x180000, ClassicPlatform, Some(689)),
    /* 7098 */ element!(SourceEecRef, 4586, One, false, 0x0, NotRestricted, None),
    /* 7099 */ element!(SourceEecRefs, 4587, ZeroOrOne, false, 0x0, ClassicPlatform, Some(3129)),
    /* 7100 */ element!(SourceElementRef, 603, One, false, 0x0, NotRestricted, None),
    /* 7101 */ element!(SourceElementRefs, 604, ZeroOrOne, false, 0x0, NotRestricted, Some(1649)),
    /* 7102 */ element!(SourceEventRef, 3984, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(1978)),
    /* 7103 */ element!(SourceEventRef, 4588, One, false, 0x0, NotRestricted, None),
    /* 7104 */ element!(SourceEventRefs, 4589, ZeroOrOne, false, 0x0, ClassicPlatform, Some(2861)),
    /* 7105 */ element!(SourceFieldRef, 3986, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(1918)),
    /* 7106 */ element!(SourceFrameRef, 2277, ZeroOrOne, false, 0x0, NotRestricted, Some(2424)),
    /* 7107 */ element!(SourceIPduRef, 2442, ZeroOrOne, false, 0x0, NotRestricted, Some(2424)),
    /* 7108 */ element!(SourceId, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(4068)),
    /* 7109 */ element!(SourceId, 3494, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5389)),
    /* 7110 */ element!(SourceInstanceIref, 81, One, false, 0x0, NotRestricted, None),
    /* 7111 */ element!(SourceInstanceIrefs, 605, ZeroOrOne, false, 0x0, NotRestricted, Some(1648)),
    /* 7112 */ element!(SourceIpAddress, 2697, ZeroOrOne, false, 0x0, NotRestricted, Some(1096)),
    /* 7113 */ element!(SourceIpAddress, 2698, ZeroOrOne, false, 0x0, NotRestricted, Some(1099)),
    /* 7114 */ element!(SourceIpv4Address, 4386, ZeroOrOne, false, 0x0, ClassicPlatform, Some(1094)),
    /* 7115 */ element!(SourceIpv6Address, 4387, ZeroOrOne, false, 0x0, ClassicPlatform, Some(1097)),
    /* 7116 */ element!(SourceLinPidRef, 473, ZeroOrOne, false, 0x0, ClassicPlatform, Some(5196)),
    /* 7117 */ element!(SourceMacAddress, 2868, ZeroOrOne, false, 0x0, NotRestricted, Some(1101)),
    /* 7118 */ element!(SourceMacAddress, 2868, ZeroOrOne, false, 0x0, NotRestricted, Some(3758)),
    /* 7119 */ element!(SourceMacAddress, 4388, ZeroOrOne, false, 0x0, ClassicPlatform, Some(1102)),
    /* 7120 */ element!(SourceMacAddressMask, 2868, ZeroOrOne, false, 0x0, NotRestricted, Some(1100)),
    /* 7121 */ element!(SourceMaxAddress, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(1052)),
    /* 7122 */ element!(SourceMethodRef, 4046, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(1930)),
    /* 7123 */ element!(SourceMinAddress, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(1051)),
    /* 7124 */ element!(SourceNetworkMask, 2697, ZeroOrOne, false, 0x0, NotRestricted, Some(1095)),
    /* 7125 */ element!(SourceNetworkMask, 2698, ZeroOrOne, false, 0x0, NotRestricted, Some(1098)),
    /* 7126 */ element!(SourcePorts, 4392, ZeroOrOne, false, 0x0, ClassicPlatform, Some(1093)),
    /* 7127 */ element!(SourcePossibleErrorRef, 4013, ZeroOrOne, false, 0x0, NotRestricted, Some(5256)),
    /* 7128 */ element!(SourceRef, 76, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(2234)),
    /* 7129 */ element!(SourceRef, 2180, ZeroOrOne, false, 0x0, NotRestricted, Some(3130)),
    /* 7130 */ element!(SourceRef, 3177, ZeroOrOne, false, 0x0, NotRestricted, Some(3159)),
    /* 7131 */ element!(SourceServiceInterfaceRef, 4017, One, false, 0x0, NotRestricted, None),
    /* 7132 */ element!(SourceServiceInterfaceRefs, 4030, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(2381)),
    /* 7133 */ element!(SourceSignalRef, 2479, ZeroOrOne, false, 0x0, NotRestricted, Some(2424)),
    /* 7134 */ element!(SourceTriggerRef, 3985, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(1950)),
    /* 7135 */ element!(SovdGatewayInstantiation, 4314, One, false, 0x0, NotRestricted, None),
    /* 7136 */ element!(SovdLockRef, 1126, ZeroOrOne, false, 0x180000, AdaptivePlatform, Some(5517)),
    /* 7137 */ element!(SovdServerInstantiation, 4319, One, false, 0x0, NotRestricted, None),
    /* 7138 */ element!(SovdValidationOrderRef, 1575, One, false, 0x0, NotRestricted, None),
    /* 7139 */ element!(SovdValidationOrderRefs, 1576, ZeroOrOne, true, 0x0, AdaptivePlatform, Some(4954)),
    /* 7140 */ element!(SparseTimestampEnabled, 298, ZeroOrOne, false, 0x0, NotRestricted, Some(753)),
    /* 7141 */ element!(SpecificChannelRef, 2355, ZeroOrOne, false, 0x0, NotRestricted, Some(5494)),
    /* 7142 */ element!(SpecificChannels, 1171, ZeroOrOne, false, 0x0, NotRestricted, Some(5471)),
    /* 7143 */ element!(SpecificPhysicalChannelRef, 1169, ZeroOrOne, false, 0x0, NotRestricted, Some(5497)),
    /* 7144 */ element!(SpecificationDocumentScope, 4320, One, false, 0x0, NotRestricted, None),
    /* 7145 */ element!(SpecificationDocumentScopes, 4323, ZeroOrOne, false, 0x0, NotRestricted, Some(2687)),
    /* 7146 */ element!(SpecificationScope, 4322, ZeroOrOne, false, 0x0, NotRestricted, Some(3135)),
    /* 7147 */ element!(Speed, 2642, ZeroOrOne, false, 0x0, NotRestricted, Some(3983)),
    /* 7148 */ element!(Speedup, 2229, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3607)),
    /* 7149 */ element!(Spn, 3494, ZeroOrOne, false, 0x0, ClassicPlatform, Some(4115)),
    /* 7150 */ element!(SpnRef, 1396, One, false, 0x0, NotRestricted, None),
    /* 7151 */ element!(SpnRef, 1396, ZeroOrOne, false, 0x0, ClassicPlatform, Some(4970)),
    /* 7152 */ element!(SpnRef, 1396, ZeroOrOne, false, 0x0, ClassicPlatform, Some(5708)),
    /* 7153 */ element!(SpnRefs, 1390, ZeroOrOne, true, 0x0, ClassicPlatform, Some(5546)),
    /* 7154 */ element!(SpnRefs, 1390, ZeroOrOne, true, 0x0, ClassicPlatform, Some(5547)),
    /* 7155 */ element!(SporadicEventTriggering, 4324, One, false, 0x0, NotRestricted, None),
    /* 7156 */ element!(Srvt, 2229, ZeroOrOne, false, 0x0, NotRestricted, Some(1503)),
    /* 7157 */ element!(SspOffset, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(2512)),
    /* 7158 */ element!(Ssrc, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(2660)),
    /* 7159 */ element!(StMin, 2229, ZeroOrOne, false, 0x0, ClassicPlatform, Some(2398)),
    /* 7160 */ element!(StMin, 5077, ZeroOrOne, false, 0x0, NotRestricted, Some(2398)),
    /* 7161 */ element!(StackUsages, 3685, ZeroOrOne, false, 0x1FFF80, ClassicPlatform, Some(336)),
    /* 7162 */ element!(Standard, 4393, ZeroOrOne, false, 0x0, NotRestricted, Some(147)),
    /* 7163 */ element!(Standard, 5078, ZeroOrOne, false, 0x0, NotRestricted, Some(147)),
    /* 7164 */ element!(StandardRevision, 4393, One, false, 0x0, NotRestricted, None),
    /* 7165 */ element!(StandardRevisions, 268, ZeroOrOne, false, 0x0, NotRestricted, Some(2446)),
    /* 7166 */ element!(Start, 569, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5744)),
    /* 7167 */ element!(Start, 1619, ZeroOrOne, false, 0x0, NotRestricted, Some(5487)),
    /* 7168 */ element!(StartActionRef, 437, One, false, 0x0, NotRestricted, None),
    /* 7169 */ element!(StartActionRefs, 449, ZeroOrOne, false, 0x0, NotRestricted, Some(5803)),
    /* 7170 */ element!(StartAddress, 3494, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(2630)),
    /* 7171 */ element!(StartIndex, 2642, ZeroOrOne, false, 0x0, ClassicPlatform, Some(3137)),
    /* 7172 */ element!(StartIref, 3001, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5155)),
    /* 7173 */ element!(StartOnEventRef, 3796, ZeroOrOne, false, 0x0, NotRestricted, Some(3074)),
    /* 7174 */ element!(StartPosition, 2642, ZeroOrOne, false, 0x0, NotRestricted, Some(3842)),
    /* 7175 */ element!(StartPosition, 2642, ZeroOrOne, false, 0x0, NotRestricted, Some(4887)),
    /* 7176 */ element!(StartStateMachineRef, 4373, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5155)),
    /* 7177 */ element!(StartsOnEventRef, 334, ZeroOrOne, false, 0x0, NotRestricted, Some(2851)),
    /* 7178 */ element!(StartupConfig, 4327, One, false, 0x0, NotRestricted, None),
    /* 7179 */ element!(StartupConfigRef, 3020, ZeroOrOne, false, 0x0, NotRestricted, Some(1937)),
    /* 7180 */ element!(StartupConfigRef, 4347, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(1937)),
    /* 7181 */ element!(StartupConfigSet, 4332, One, false, 0x0, NotRestricted, None),
    /* 7182 */ element!(StartupConfigs, 4333, ZeroOrOne, false, 0x0, NotRestricted, Some(2635)),
    /* 7183 */ element!(StartupOption, 4335, One, false, 0x0, NotRestricted, None),
    /* 7184 */ element!(StartupOptions, 4334, ZeroOrOne, false, 0x0, NotRestricted, Some(157)),
    /* 7185 */ element!(State, 2268, ZeroOrOne, false, 0x0, NotRestricted, Some(507)),
    /* 7186 */ element!(State, 3930, ZeroOrOne, false, 0x0, NotRestricted, Some(3428)),
    /* 7187 */ element!(State, 4393, ZeroOrOne, false, 0x0, NotRestricted, Some(2597)),
    /* 7188 */ element!(State, 4393, ZeroOrOne, false, 0x0, NotRestricted, Some(2801)),
    /* 7189 */ element!(State, 4393, ZeroOrOne, false, 0x0, NotRestricted, Some(5331)),
    /* 7190 */ element!(State, 4393, ZeroOrOne, false, 0x0, NotRestricted, Some(5767)),
    /* 7191 */ element!(State, 5078, ZeroOrOne, false, 0x0, NotRestricted, Some(2597)),
    /* 7192 */ element!(State, 5078, ZeroOrOne, false, 0x0, NotRestricted, Some(5331)),
    /* 7193 */ element!(State, 5078, ZeroOrOne, false, 0x0, NotRestricted, Some(5767)),
    /* 7194 */ element!(State, 5078, ZeroOrOne, false, 0x0, NotRestricted, Some(6043)),
    /* 7195 */ element!(StateClientInterface, 4336, One, false, 0x0, NotRestricted, None),
    /* 7196 */ element!(StateDepFirewallRef, 1830, One, false, 0x0, NotRestricted, None),
    /* 7197 */ element!(StateDepFirewallRefs, 51, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(1107)),
    /* 7198 */ element!(StateDependentFirewall, 4338, One, false, 0x0, NotRestricted, None),
    /* 7199 */ element!(StateDependentFirewallRef, 738, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(1106)),
    /* 7200 */ element!(StateDependentStartupConfig, 4343, One, false, 0x0, NotRestricted, None),
    /* 7201 */ element!(StateDependentStartupConfigs, 3546, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(156)),
    /* 7202 */ element!(StateMachine, 2998, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3402)),
    /* 7203 */ element!(StateManagemenPhmErrorInterface, 4348, One, false, 0x0, NotRestricted, None),
    /* 7204 */ element!(StateManagementActionList, 4349, One, false, 0x0, NotRestricted, None),
    /* 7205 */ element!(StateManagementBasedOnTcpFlags, 298, ZeroOrOne, false, 0x0, NotRestricted, Some(3804)),
    /* 7206 */ element!(StateManagementCompareFormula, 4353, One, false, 0x0, NotRestricted, None),
    /* 7207 */ element!(StateManagementDiagTriggerInterface, 4355, One, false, 0x0, NotRestricted, None),
    /* 7208 */ element!(StateManagementEmErrorInterface, 4356, One, false, 0x0, NotRestricted, None),
    /* 7209 */ element!(StateManagementErrorCompareRule, 4357, One, false, 0x0, NotRestricted, None),
    /* 7210 */ element!(StateManagementFunctionGroupSwitchNotificationInterface, 4358, One, false, 0x0, NotRestricted, None),
    /* 7211 */ element!(StateManagementModuleInstantiation, 4360, One, false, 0x0, NotRestricted, None),
    /* 7212 */ element!(StateManagementNmActionItem, 4364, One, false, 0x0, NotRestricted, None),
    /* 7213 */ element!(StateManagementPhmErrorInterface, 4365, One, false, 0x0, NotRestricted, None),
    /* 7214 */ element!(StateManagementRequestError, 4366, One, false, 0x0, NotRestricted, None),
    /* 7215 */ element!(StateManagementRequestRule, 4368, One, false, 0x0, NotRestricted, None),
    /* 7216 */ element!(StateManagementRequestTrigger, 4369, One, false, 0x0, NotRestricted, None),
    /* 7217 */ element!(StateManagementSetFunctionGroupStateActionItem, 4370, One, false, 0x0, NotRestricted, None),
    /* 7218 */ element!(StateManagementSleepActionItem, 4371, One, false, 0x0, NotRestricted, None),
    /* 7219 */ element!(StateManagementStateMachineActionItem, 4372, One, false, 0x0, NotRestricted, None),
    /* 7220 */ element!(StateManagementStateNotification, 4374, One, false, 0x0, NotRestricted, None),
    /* 7221 */ element!(StateManagementSyncActionItem, 4375, One, false, 0x0, NotRestricted, None),
    /* 7222 */ element!(StateManagementTriggerCompareRule, 4376, One, false, 0x0, NotRestricted, None),
    /* 7223 */ element!(StateRef, 3262, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5858)),
    /* 7224 */ element!(StateReferences, 4420, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(331)),
    /* 7225 */ element!(StateRequestPortIref, 3596, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5461)),
    /* 7226 */ element!(StateRequestRef, 3109, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5157)),
    /* 7227 */ element!(StaticMemorys, 3156, ZeroOrOne, false, 0x1FFF80, NotRestricted, Some(864)),
    /* 7228 */ element!(StaticPart, 4377, One, false, 0x0, NotRestricted, None),
    /* 7229 */ element!(StaticParts, 3072, ZeroOrOne, false, 0x1C0000, NotRestricted, Some(3139)),
    /* 7230 */ element!(StaticRemoteMulticastAddresses, 1011, ZeroOrOne, false, 0x180000, NotRestricted, Some(4957)),
    /* 7231 */ element!(StaticRemoteMulticastAddresses, 1011, ZeroOrOne, false, 0x180000, NotRestricted, Some(4958)),
    /* 7232 */ element!(StaticRemoteUnicastAddresses, 1011, ZeroOrOne, false, 0x180000, NotRestricted, Some(4960)),
    /* 7233 */ element!(StaticRemoteUnicastAddresses, 1011, ZeroOrOne, false, 0x180000, NotRestricted, Some(4961)),
    /* 7234 */ element!(StaticSlotDuration, 2642, ZeroOrOne, false, 0x0, NotRestricted, Some(2844)),
    /* 7235 */ element!(StaticSocketConnection, 4379, One, false, 0x0, NotRestricted, None),
    /* 7236 */ element!(StaticSocketConnectionRef, 1764, ZeroOrOne, false, 0x0, NotRestricted, Some(2509)),
    /* 7237 */ element!(StaticSocketConnections, 4119, ZeroOrOne, false, 0x1C0000, NotRestricted, Some(805)),
    /* 7238 */ element!(StatusBitHandlingTestFailedSinceLastClear, 1620, ZeroOrOne, false, 0x0, NotRestricted, Some(3823)),
    /* 7239 */ element!(StatusBitHandlingTestFailedSinceLastClear, 1620, ZeroOrOne, false, 0x0, NotRestricted, Some(3824)),
    /* 7240 */ element!(StatusBitStorageTestFailed, 298, ZeroOrOne, false, 0x0, NotRestricted, Some(4889)),
    /* 7241 */ element!(StatusBitStorageTestFailed, 298, ZeroOrOne, false, 0x0, ClassicPlatform, Some(4890)),
    /* 7242 */ element!(StatusId, 3494, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(652)),
    /* 7243 */ element!(StatusId, 3494, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(654)),
    /* 7244 */ element!(StatusIref, 3359, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(690)),
    /* 7245 */ element!(StatusRef, 2400, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(2020)),
    /* 7246 */ element!(StatusSubTlv, 298, ZeroOrOne, false, 0x0, NotRestricted, Some(730)),
    /* 7247 */ element!(Statuss, 3356, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(664)),
    /* 7248 */ element!(Std, 4382, One, false, 0x0, NotRestricted, Some(4717)),
    /* 7249 */ element!(StdCppImplementationDataType, 4383, One, false, 0x0, NotRestricted, None),
    /* 7250 */ element!(StdRef, 149, One, false, 0x0, NotRestricted, None),
    /* 7251 */ element!(StdRefs, 150, ZeroOrOne, false, 0x0, NotRestricted, Some(4336)),
    /* 7252 */ element!(StepSize, 2229, ZeroOrOne, false, 0x0, NotRestricted, Some(3522)),
    /* 7253 */ element!(StimEnabler, 3756, ZeroOrOne, false, 0x0, NotRestricted, Some(523)),
    /* 7254 */ element!(StimulusRef, 3177, ZeroOrOne, false, 0x0, NotRestricted, Some(3140)),
    /* 7255 */ element!(Stop, 569, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5745)),
    /* 7256 */ element!(Stop, 1621, ZeroOrOne, false, 0x0, NotRestricted, Some(5488)),
    /* 7257 */ element!(StopIref, 3001, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5156)),
    /* 7258 */ element!(StopStateMachineRef, 4373, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5156)),
    /* 7259 */ element!(StorageConditionGroupRef, 1315, ZeroOrOne, false, 0x0, ClassicPlatform, Some(1882)),
    /* 7260 */ element!(StorageConditions, 1625, ZeroOrOne, false, 0x1FFFC0, NotRestricted, Some(2027)),
    /* 7261 */ element!(StorageStateEvaluation, 298, ZeroOrOne, false, 0x0, NotRestricted, Some(1246)),
    /* 7262 */ element!(StoreAtShutdown, 298, ZeroOrOne, false, 0x0, NotRestricted, Some(744)),
    /* 7263 */ element!(StoreCyclic, 298, ZeroOrOne, false, 0x0, NotRestricted, Some(747)),
    /* 7264 */ element!(StoreEmergency, 298, ZeroOrOne, false, 0x0, NotRestricted, Some(746)),
    /* 7265 */ element!(StoreEventEnabled, 298, ZeroOrOne, false, 0x0, NotRestricted, Some(2468)),
    /* 7266 */ element!(StoreEventSupport, 1631, ZeroOrOne, false, 0x0, NotRestricted, None),
    /* 7267 */ element!(StoreEventSupport, 1631, ZeroOrOne, false, 0x0, NotRestricted, Some(504)),
    /* 7268 */ element!(StoreImmediate, 298, ZeroOrOne, false, 0x0, NotRestricted, Some(745)),
    /* 7269 */ element!(StoreOnChange, 298, ZeroOrOne, false, 0x0, NotRestricted, Some(3809)),
    /* 7270 */ element!(Storing, 4231, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3544)),
    /* 7271 */ element!(StreamFilterPortRange, 4389, One, false, 0x0, NotRestricted, None),
    /* 7272 */ element!(StreamFilterRule, 4575, ZeroOrOne, false, 0x0, ClassicPlatform, Some(806)),
    /* 7273 */ element!(StreamFilters, 742, ZeroOrOne, true, 0x0, ClassicPlatform, Some(297)),
    /* 7274 */ element!(StreamGateRef, 4572, ZeroOrOne, false, 0x0, ClassicPlatform, Some(1883)),
    /* 7275 */ element!(StreamGates, 743, ZeroOrOne, false, 0x0, ClassicPlatform, Some(298)),
    /* 7276 */ element!(StreamId, 3494, ZeroOrOne, false, 0x0, ClassicPlatform, Some(1054)),
    /* 7277 */ element!(StreamIdentificationHandleRef, 4573, One, false, 0x0, NotRestricted, None),
    /* 7278 */ element!(StreamIdentificationHandleRefs, 4574, ZeroOrOne, false, 0x0, ClassicPlatform, Some(2154)),
    /* 7279 */ element!(StreamIdentificationWildcard, 298, ZeroOrOne, false, 0x0, ClassicPlatform, Some(779)),
    /* 7280 */ element!(StreamIdentifier, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(1154)),
    /* 7281 */ element!(StreamIdentifier, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(1155)),
    /* 7282 */ element!(StreamsPerFrame, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(74)),
    /* 7283 */ element!(StringEncoding, 4393, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(413)),
    /* 7284 */ element!(StructuredReq, 4395, One, false, 0x0, NotRestricted, Some(3433)),
    /* 7285 */ element!(StructuredReq, 4395, One, false, 0xC0000, NotRestricted, Some(3433)),
    /* 7286 */ element!(Sub, 4423, One, false, 0x0, NotRestricted, Some(4762)),
    /* 7287 */ element!(Sub, 4423, One, false, 0x0, NotRestricted, Some(4764)),
    /* 7288 */ element!(Sub, 4423, One, false, 0x0, NotRestricted, Some(6050)),
    /* 7289 */ element!(SubAttributeTailorings, 3516, ZeroOrOne, false, 0x0, NotRestricted, Some(2672)),
    /* 7290 */ element!(SubContainers, 1878, ZeroOrOne, false, 0x1FFFFF, ClassicPlatform, Some(104)),
    /* 7291 */ element!(SubContainers, 1911, ZeroOrOne, false, 0x1FFF80, ClassicPlatform, Some(2824)),
    /* 7292 */ element!(SubDomainRef, 2370, One, false, 0x0, NotRestricted, None),
    /* 7293 */ element!(SubDomainRefs, 2371, ZeroOrOne, false, 0x0, NotRestricted, Some(207)),
    /* 7294 */ element!(SubElementMapping, 4399, One, false, 0x0, NotRestricted, None),
    /* 7295 */ element!(SubElementMappings, 972, ZeroOrOne, false, 0x180000, NotRestricted, Some(5660)),
    /* 7296 */ element!(SubElements, 319, ZeroOrOne, true, 0x1C0000, NotRestricted, Some(951)),
    /* 7297 */ element!(SubElements, 319, ZeroOrOne, true, 0x1C0000, NotRestricted, Some(2452)),
    /* 7298 */ element!(SubElements, 828, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(952)),
    /* 7299 */ element!(SubElements, 829, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5566)),
    /* 7300 */ element!(SubElements, 829, ZeroOrOne, true, 0x0, AdaptivePlatform, Some(5566)),
    /* 7301 */ element!(SubElements, 1444, ZeroOrOne, false, 0x0, NotRestricted, Some(4296)),
    /* 7302 */ element!(SubElements, 1444, ZeroOrOne, false, 0x0, NotRestricted, Some(4297)),
    /* 7303 */ element!(SubElements, 2933, ZeroOrOne, true, 0xC0000, NotRestricted, Some(5322)),
    /* 7304 */ element!(SubFunctionRef, 2940, One, false, 0x0, NotRestricted, None),
    /* 7305 */ element!(SubFunctionRefs, 2941, ZeroOrOne, false, 0x1FFFC0, NotRestricted, Some(65)),
    /* 7306 */ element!(SubGroupRef, 2952, One, false, 0x0, NotRestricted, None),
    /* 7307 */ element!(SubGroupRefs, 2953, ZeroOrOne, false, 0x1FE000, NotRestricted, Some(66)),
    /* 7308 */ element!(SubNodeChannelRef, 2355, ZeroOrOne, false, 0x0, NotRestricted, Some(5495)),
    /* 7309 */ element!(SubNodeChannels, 1172, ZeroOrOne, false, 0x0, NotRestricted, Some(4078)),
    /* 7310 */ element!(SubNodeNumber, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(5509)),
    /* 7311 */ element!(SubNodePhysicalChannelRef, 1169, ZeroOrOne, false, 0x0, NotRestricted, Some(5498)),
    /* 7312 */ element!(SubSdgRef, 3854, ZeroOrOne, false, 0x0, NotRestricted, Some(2643)),
    /* 7313 */ element!(SubSoftwareClusterRef, 4182, One, false, 0x0, NotRestricted, None),
    /* 7314 */ element!(SubSoftwareClusterRef, 4213, One, false, 0x0, NotRestricted, None),
    /* 7315 */ element!(SubSoftwareClusterRefs, 4183, ZeroOrOne, false, 0x3F000, AdaptivePlatform, Some(5187)),
    /* 7316 */ element!(SubSoftwareClusterRefs, 4214, ZeroOrOne, false, 0xF000, AdaptivePlatform, Some(5188)),
    /* 7317 */ element!(SubTlvConfig, 2006, ZeroOrOne, false, 0x0, NotRestricted, Some(691)),
    /* 7318 */ element!(SubType, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(1769)),
    /* 7319 */ element!(Subfunction, 1257, One, false, 0x0, NotRestricted, None),
    /* 7320 */ element!(Subfunctions, 1254, ZeroOrOne, false, 0x0, NotRestricted, Some(3553)),
    /* 7321 */ element!(SubmessageType, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(587)),
    /* 7322 */ element!(SubnetNumber, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(5510)),
    /* 7323 */ element!(SubscribeEventgroupRetryDelay, 2229, ZeroOrOne, false, 0x0, NotRestricted, Some(3687)),
    /* 7324 */ element!(SubscribeEventgroupRetryMax, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(3591)),
    /* 7325 */ element!(SubstitutedFrameRef, 2819, One, false, 0x0, NotRestricted, None),
    /* 7326 */ element!(SubstitutedFrameRefs, 2820, ZeroOrOne, true, 0x0, ClassicPlatform, Some(1920)),
    /* 7327 */ element!(Subtitle, 4393, ZeroOrOne, false, 0x0, NotRestricted, Some(5746)),
    /* 7328 */ element!(Subtitle, 5078, ZeroOrOne, false, 0x0, NotRestricted, Some(5746)),
    /* 7329 */ element!(SuccessorRef, 1985, One, false, 0x0, NotRestricted, None),
    /* 7330 */ element!(SuccessorRef, 1993, One, false, 0x0, NotRestricted, None),
    /* 7331 */ element!(SuccessorRef, 1995, One, false, 0x0, NotRestricted, None),
    /* 7332 */ element!(SuccessorRefs, 1986, ZeroOrOne, false, 0x0, ClassicPlatform, Some(2928)),
    /* 7333 */ element!(SuccessorRefs, 1994, ZeroOrOne, false, 0x0, ClassicPlatform, Some(2928)),
    /* 7334 */ element!(SuccessorRefs, 1996, ZeroOrOne, false, 0x0, ClassicPlatform, Some(2928)),
    /* 7335 */ element!(Sup, 4423, One, false, 0x0, NotRestricted, Some(4762)),
    /* 7336 */ element!(Sup, 4423, One, false, 0x0, NotRestricted, Some(4763)),
    /* 7337 */ element!(Sup, 4423, One, false, 0x0, NotRestricted, Some(4764)),
    /* 7338 */ element!(SupervisedEntityCheckpointNeeds, 4402, One, false, 0x0, NotRestricted, None),
    /* 7339 */ element!(SupervisedEntityCheckpointNeedsRef, 4404, ZeroOrOne, false, 0x0, NotRestricted, None),
    /* 7340 */ element!(SupervisedEntityCheckpointNeedsRefConditional, 4403, One, false, 0x0, NotRestricted, None),
    /* 7341 */ element!(SupervisedEntityId, 3494, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(563)),
    /* 7342 */ element!(SupervisedEntityId, 3494, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(657)),
    /* 7343 */ element!(SupervisedEntityIref, 3596, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(1872)),
    /* 7344 */ element!(SupervisedEntityNeeds, 4405, One, false, 0x0, NotRestricted, None),
    /* 7345 */ element!(SupervisionCheckpoint, 4407, One, false, 0x0, NotRestricted, None),
    /* 7346 */ element!(SupervisionCondition, 2396, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(789)),
    /* 7347 */ element!(SupervisionCycle, 2229, ZeroOrOne, false, 0x0, NotRestricted, Some(503)),
    /* 7348 */ element!(SupervisionCycle, 2229, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(694)),
    /* 7349 */ element!(SupervisionEntity, 4409, One, false, 0x0, NotRestricted, None),
    /* 7350 */ element!(SupervisionEntitys, 3405, ZeroOrOne, false, 0xC00, AdaptivePlatform, Some(299)),
    /* 7351 */ element!(SupervisionMode, 4416, One, false, 0x0, NotRestricted, None),
    /* 7352 */ element!(SupervisionModeCondition, 4419, One, false, 0x0, NotRestricted, None),
    /* 7353 */ element!(SupervisionModeConditions, 3406, ZeroOrOne, false, 0x1E0000, AdaptivePlatform, Some(300)),
    /* 7354 */ element!(SupervisionModes, 2346, ZeroOrOne, false, 0x1E0000, AdaptivePlatform, Some(301)),
    /* 7355 */ element!(SupervisionRef, 2406, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(2085)),
    /* 7356 */ element!(SupplierId, 3494, ZeroOrOne, false, 0x0, ClassicPlatform, Some(1351)),
    /* 7357 */ element!(SupplierId, 3494, ZeroOrOne, false, 0x0, ClassicPlatform, Some(1352)),
    /* 7358 */ element!(SupplierValidationOrderRef, 1577, One, false, 0x0, NotRestricted, None),
    /* 7359 */ element!(SupplierValidationOrderRefs, 1578, ZeroOrOne, true, 0x0, AdaptivePlatform, Some(4953)),
    /* 7360 */ element!(SupportBufferLocking, 4422, ZeroOrOne, false, 0x0, NotRestricted, Some(4021)),
    /* 7361 */ element!(SupportDirtyFlag, 298, ZeroOrOne, false, 0x0, ClassicPlatform, Some(2611)),
    /* 7362 */ element!(SupportInfo, 1446, ZeroOrOne, false, 0x0, NotRestricted, Some(4090)),
    /* 7363 */ element!(SupportInfoBit, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(6021)),
    /* 7364 */ element!(SupportInfoByte, 1632, ZeroOrOne, false, 0x0, NotRestricted, Some(4165)),
    /* 7365 */ element!(SupportInfoByte, 1632, ZeroOrOne, false, 0x0, NotRestricted, Some(5747)),
    /* 7366 */ element!(SupportedCipherSuites, 4841, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(248)),
    /* 7367 */ element!(SupportedConfigVariant, 1871, One, false, 0x0, NotRestricted, None),
    /* 7368 */ element!(SupportedConfigVariants, 1912, ZeroOrOne, false, 0x0, ClassicPlatform, Some(2621)),
    /* 7369 */ element!(SupportedFeatures, 3434, ZeroOrOne, false, 0x0, NotRestricted, Some(4298)),
    /* 7370 */ element!(SupportedTimerGranularity, 2229, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3878)),
    /* 7371 */ element!(SupportingMaterial, 1803, ZeroOrOne, false, 0x0, NotRestricted, Some(5397)),
    /* 7372 */ element!(SupportsAsynchronousModeSwitch, 298, ZeroOrOne, false, 0x0, NotRestricted, Some(2617)),
    /* 7373 */ element!(SupportsAsynchronousModeSwitch, 298, ZeroOrOne, false, 0x0, NotRestricted, Some(3568)),
    /* 7374 */ element!(SupportsMultipleInstantiation, 298, ZeroOrOne, false, 0x0, NotRestricted, Some(1295)),
    /* 7375 */ element!(SupportsMultipleNotifierSets, 298, ZeroOrOne, false, 0x0, ClassicPlatform, Some(3973)),
    /* 7376 */ element!(SwAddrMethod, 4424, One, false, 0x0, NotRestricted, None),
    /* 7377 */ element!(SwAddrMethodRef, 2972, ZeroOrOne, false, 0x0, NotRestricted, Some(96)),
    /* 7378 */ element!(SwAddrMethodRef, 2972, ZeroOrOne, false, 0x0, NotRestricted, Some(97)),
    /* 7379 */ element!(SwAddrmethodRef, 2972, ZeroOrOne, false, 0x0, NotRestricted, Some(3472)),
    /* 7380 */ element!(SwAlignment, 74, ZeroOrOne, false, 0x0, NotRestricted, Some(2797)),
    /* 7381 */ element!(SwArraysize, 5010, ZeroOrOne, false, 0x0, NotRestricted, Some(1124)),
    /* 7382 */ element!(SwArraysize, 5010, ZeroOrOne, false, 0x0, NotRestricted, Some(1125)),
    /* 7383 */ element!(SwArraysize, 5010, ZeroOrOne, false, 0x0, NotRestricted, Some(3754)),
    /* 7384 */ element!(SwArraysize, 5010, ZeroOrOne, false, 0x0, NotRestricted, Some(5835)),
    /* 7385 */ element!(SwAxisCont, 4425, One, false, 0x0, NotRestricted, None),
    /* 7386 */ element!(SwAxisConts, 202, ZeroOrOne, true, 0x0, NotRestricted, Some(5521)),
    /* 7387 */ element!(SwAxisConts, 205, ZeroOrOne, true, 0x0, NotRestricted, Some(5521)),
    /* 7388 */ element!(SwAxisGeneric, 4426, ZeroOrOne, false, 0x0, NotRestricted, Some(6063)),
    /* 7389 */ element!(SwAxisGrouped, 4429, One, false, 0x0, NotRestricted, None),
    /* 7390 */ element!(SwAxisIndex, 261, ZeroOrOne, false, 0x0, NotRestricted, Some(900)),
    /* 7391 */ element!(SwAxisIndex, 261, ZeroOrOne, false, 0x0, NotRestricted, Some(4269)),
    /* 7392 */ element!(SwAxisIndex, 261, ZeroOrOne, false, 0x0, NotRestricted, Some(4894)),
    /* 7393 */ element!(SwAxisIndividual, 4431, One, false, 0x0, NotRestricted, None),
    /* 7394 */ element!(SwAxisType, 4435, One, false, 0x0, NotRestricted, None),
    /* 7395 */ element!(SwAxisTypeRef, 4427, ZeroOrOne, false, 0x0, NotRestricted, Some(171)),
    /* 7396 */ element!(SwBaseType, 4437, One, false, 0x0, NotRestricted, None),
    /* 7397 */ element!(SwBitRepresentation, 4438, ZeroOrOne, false, 0x0, NotRestricted, Some(905)),
    /* 7398 */ element!(SwCalibrationAccess, 4439, ZeroOrOne, false, 0x0, NotRestricted, Some(875)),
    /* 7399 */ element!(SwCalibrationAccess, 4439, ZeroOrOne, false, 0x0, NotRestricted, Some(2588)),
    /* 7400 */ element!(SwCalibrationAccess, 4439, ZeroOrOne, false, 0x0, ClassicPlatform, Some(3443)),
    /* 7401 */ element!(SwCalibrationNotes, 535, One, false, 0x0, NotRestricted, None),
    /* 7402 */ element!(SwCalibrationNotes, 535, ZeroOrOne, false, 0x0, NotRestricted, Some(4357)),
    /* 7403 */ element!(SwCalibrationNotess, 4455, ZeroOrOne, false, 0x0, NotRestricted, Some(4356)),
    /* 7404 */ element!(SwCalprmAxis, 4440, Any, false, 0x0, NotRestricted, Some(1640)),
    /* 7405 */ element!(SwCalprmAxisSet, 4442, ZeroOrOne, false, 0x0, NotRestricted, Some(5813)),
    /* 7406 */ element!(SwCalprmImpl, 4443, One, false, 0x0, NotRestricted, None),
    /* 7407 */ element!(SwCalprmImpls, 4447, ZeroOrOne, false, 0x0, NotRestricted, Some(4376)),
    /* 7408 */ element!(SwCalprmPrototypeRef, 4444, ZeroOrOne, false, 0x0, NotRestricted, Some(4381)),
    /* 7409 */ element!(SwCarbDoc, 535, One, false, 0x0, NotRestricted, None),
    /* 7410 */ element!(SwCarbDoc, 535, ZeroOrOne, false, 0x0, NotRestricted, Some(4389)),
    /* 7411 */ element!(SwCarbDocs, 4456, ZeroOrOne, false, 0x0, NotRestricted, Some(4388)),
    /* 7412 */ element!(SwClassAttrInstanceImpl, 4446, ZeroOrOne, false, 0x0, NotRestricted, Some(3455)),
    /* 7413 */ element!(SwClassImpl, 4450, One, false, 0x0, NotRestricted, None),
    /* 7414 */ element!(SwClassImpls, 4448, ZeroOrOne, false, 0x0, NotRestricted, Some(4377)),
    /* 7415 */ element!(SwClassInstance, 4452, One, false, 0x0, NotRestricted, None),
    /* 7416 */ element!(SwClassPrototypeRef, 4451, ZeroOrOne, false, 0x0, NotRestricted, Some(4379)),
    /* 7417 */ element!(SwClusterDesignProvidedPortIref, 3208, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5045)),
    /* 7418 */ element!(SwClusterDesignRequiredPortIref, 3600, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5053)),
    /* 7419 */ element!(SwClusterMappings, 4635, ZeroOrOne, false, 0x1F0000, ClassicPlatform, Some(2940)),
    /* 7420 */ element!(SwClusterRef, 813, One, false, 0x0, NotRestricted, None),
    /* 7421 */ element!(SwClusterRefs, 814, ZeroOrOne, false, 0x0, ClassicPlatform, Some(2934)),
    /* 7422 */ element!(SwClusters, 815, ZeroOrOne, false, 0x1C0000, ClassicPlatform, Some(2935)),
    /* 7423 */ element!(SwClusters, 4653, ZeroOrOne, false, 0x1F0000, ClassicPlatform, Some(225)),
    /* 7424 */ element!(SwCodeSyntax, 4453, One, false, 0x0, NotRestricted, None),
    /* 7425 */ element!(SwCompToEcuMappingRef, 1845, One, false, 0x0, NotRestricted, None),
    /* 7426 */ element!(SwCompToEcuMappingRefs, 1846, ZeroOrOne, false, 0x0, ClassicPlatform, Some(2249)),
    /* 7427 */ element!(SwComparisonVariables, 4434, ZeroOrOne, false, 0x0, NotRestricted, Some(5973)),
    /* 7428 */ element!(SwComponentAssignments, 806, ZeroOrOne, false, 0x1F0000, ClassicPlatform, Some(4772)),
    /* 7429 */ element!(SwComponentDocumentation, 4454, One, false, 0x0, NotRestricted, None),
    /* 7430 */ element!(SwComponentDocumentations, 4471, ZeroOrOne, false, 0x1FFE00, NotRestricted, Some(3213)),
    /* 7431 */ element!(SwComponentDocumentations, 4471, ZeroOrOne, false, 0x1FFFFE, NotRestricted, Some(3213)),
    /* 7432 */ element!(SwComponentIref, 658, ZeroOrOne, false, 0x0, ClassicPlatform, Some(6023)),
    /* 7433 */ element!(SwComponentMappingConstraints, 4462, One, false, 0x0, NotRestricted, None),
    /* 7434 */ element!(SwComponentPrototype, 4466, One, false, 0x0, NotRestricted, None),
    /* 7435 */ element!(SwComponentPrototypeAssignment, 4467, One, false, 0x0, NotRestricted, None),
    /* 7436 */ element!(SwComponentPrototypeIref, 657, ZeroOrOne, false, 0x0, ClassicPlatform, Some(5637)),
    /* 7437 */ element!(SwComponentPrototypeIref, 658, ZeroOrOne, false, 0x0, ClassicPlatform, Some(2255)),
    /* 7438 */ element!(SwComponentPrototypeIref, 658, ZeroOrOne, false, 0x0, ClassicPlatform, Some(5462)),
    /* 7439 */ element!(SwComponentPrototypeRef, 3004, Any, true, 0x0, AdaptivePlatform, None),
    /* 7440 */ element!(SwCompositions, 807, ZeroOrOne, false, 0x1F0000, ClassicPlatform, Some(2421)),
    /* 7441 */ element!(SwDataDefProps, 4477, ZeroOrOne, false, 0xC0000, NotRestricted, Some(455)),
    /* 7442 */ element!(SwDataDefProps, 4477, ZeroOrOne, false, 0xC0000, NotRestricted, Some(3037)),
    /* 7443 */ element!(SwDataDefProps, 4477, ZeroOrOne, false, 0x0, NotRestricted, Some(3038)),
    /* 7444 */ element!(SwDataDefProps, 4477, ZeroOrOne, false, 0x1C0000, NotRestricted, Some(3038)),
    /* 7445 */ element!(SwDataDefProps, 4477, ZeroOrOne, false, 0x1C0000, ClassicPlatform, Some(3039)),
    /* 7446 */ element!(SwDataDefProps, 4477, ZeroOrOne, false, 0xC0000, NotRestricted, Some(3040)),
    /* 7447 */ element!(SwDataDefProps, 4477, ZeroOrOne, false, 0x1C0000, NotRestricted, Some(3198)),
    /* 7448 */ element!(SwDataDefProps, 4477, ZeroOrOne, false, 0x100000, AdaptivePlatform, Some(3226)),
    /* 7449 */ element!(SwDataDefProps, 4477, ZeroOrOne, false, 0x1C0000, NotRestricted, Some(3441)),
    /* 7450 */ element!(SwDataDefProps, 4477, ZeroOrOne, false, 0x1C0000, NotRestricted, Some(4326)),
    /* 7451 */ element!(SwDataDefProps, 4477, ZeroOrOne, false, 0x1C0000, NotRestricted, Some(4896)),
    /* 7452 */ element!(SwDataDefProps, 4477, ZeroOrOne, false, 0x1C0000, NotRestricted, Some(4897)),
    /* 7453 */ element!(SwDataDefProps, 4477, ZeroOrOne, false, 0x1C0000, NotRestricted, Some(5472)),
    /* 7454 */ element!(SwDataDefProps, 4477, ZeroOrOne, false, 0x0, NotRestricted, Some(5790)),
    /* 7455 */ element!(SwDataDefProps, 4477, ZeroOrOne, false, 0x0, NotRestricted, Some(5825)),
    /* 7456 */ element!(SwDataDefProps, 4477, ZeroOrOne, false, 0x0, NotRestricted, Some(5826)),
    /* 7457 */ element!(SwDataDefProps, 4477, ZeroOrOne, false, 0x0, NotRestricted, Some(5827)),
    /* 7458 */ element!(SwDataDefProps, 4477, ZeroOrOne, false, 0x1C0000, NotRestricted, Some(5995)),
    /* 7459 */ element!(SwDataDefPropsConditional, 4478, One, false, 0x0, NotRestricted, None),
    /* 7460 */ element!(SwDataDefPropsVariants, 4481, ZeroOrOne, false, 0x1C0000, NotRestricted, Some(4408)),
    /* 7461 */ element!(SwDataDependency, 4482, ZeroOrOne, false, 0x0, NotRestricted, Some(869)),
    /* 7462 */ element!(SwDataDependencyArgs, 4483, ZeroOrOne, false, 0x0, NotRestricted, Some(2521)),
    /* 7463 */ element!(SwDataDependencyFormula, 683, ZeroOrOne, false, 0x0, NotRestricted, Some(4375)),
    /* 7464 */ element!(SwDiagnosticsNotes, 535, One, false, 0x0, NotRestricted, None),
    /* 7465 */ element!(SwDiagnosticsNotes, 535, ZeroOrOne, false, 0x0, NotRestricted, Some(4359)),
    /* 7466 */ element!(SwDiagnosticsNotess, 4457, ZeroOrOne, false, 0x0, NotRestricted, Some(4358)),
    /* 7467 */ element!(SwFeatureDef, 535, One, false, 0x0, NotRestricted, None),
    /* 7468 */ element!(SwFeatureDef, 535, ZeroOrOne, false, 0x0, NotRestricted, Some(4364)),
    /* 7469 */ element!(SwFeatureDefs, 4458, ZeroOrOne, false, 0x0, NotRestricted, Some(4365)),
    /* 7470 */ element!(SwFeatureDesc, 535, One, false, 0x0, NotRestricted, None),
    /* 7471 */ element!(SwFeatureDesc, 535, ZeroOrOne, false, 0x0, NotRestricted, Some(4367)),
    /* 7472 */ element!(SwFeatureDescs, 4459, ZeroOrOne, false, 0x0, NotRestricted, Some(4366)),
    /* 7473 */ element!(SwFillCharacter, 2642, ZeroOrOne, false, 0x0, NotRestricted, Some(1016)),
    /* 7474 */ element!(SwGenericAxisDesc, 1803, ZeroOrOne, false, 0x0, NotRestricted, Some(172)),
    /* 7475 */ element!(SwGenericAxisParam, 4484, One, false, 0x0, NotRestricted, None),
    /* 7476 */ element!(SwGenericAxisParamType, 4485, One, false, 0x0, NotRestricted, None),
    /* 7477 */ element!(SwGenericAxisParamTypeRef, 4492, ZeroOrOne, false, 0x0, NotRestricted, Some(3461)),
    /* 7478 */ element!(SwGenericAxisParamTypeRef, 4494, ZeroOrOne, false, 0x0, NotRestricted, Some(1704)),
    /* 7479 */ element!(SwGenericAxisParamTypeRef, 4494, ZeroOrOne, false, 0x0, NotRestricted, Some(3487)),
    /* 7480 */ element!(SwGenericAxisParamTypes, 4436, ZeroOrOne, false, 0x0, NotRestricted, Some(1706)),
    /* 7481 */ element!(SwGenericAxisParams, 4428, ZeroOrOne, false, 0x0, NotRestricted, Some(2429)),
    /* 7482 */ element!(SwHostVariable, 4509, ZeroOrOne, false, 0x0, NotRestricted, Some(427)),
    /* 7483 */ element!(SwImplMappings, 4636, ZeroOrOne, false, 0x1C0000, ClassicPlatform, Some(2939)),
    /* 7484 */ element!(SwImplPolicy, 4487, ZeroOrOne, false, 0x0, NotRestricted, Some(1273)),
    /* 7485 */ element!(SwImplPolicy, 4487, ZeroOrOne, false, 0x0, NotRestricted, Some(4281)),
    /* 7486 */ element!(SwImplPolicy, 4487, ZeroOrOne, false, 0x0, ClassicPlatform, Some(4281)),
    /* 7487 */ element!(SwImplPolicy, 4487, ZeroOrOne, false, 0x0, ClassicPlatform, Some(4282)),
    /* 7488 */ element!(SwIntendedResolution, 3140, ZeroOrOne, false, 0x0, NotRestricted, Some(3047)),
    /* 7489 */ element!(SwInterpolationMethod, 2500, ZeroOrOne, false, 0x0, NotRestricted, Some(4711)),
    /* 7490 */ element!(SwIsVirtual, 298, ZeroOrOne, false, 0x0, NotRestricted, Some(4385)),
    /* 7491 */ element!(SwMaintenanceNotes, 535, One, false, 0x0, NotRestricted, None),
    /* 7492 */ element!(SwMaintenanceNotes, 535, ZeroOrOne, false, 0x0, NotRestricted, Some(4361)),
    /* 7493 */ element!(SwMaintenanceNotess, 4460, ZeroOrOne, false, 0x0, NotRestricted, Some(4360)),
    /* 7494 */ element!(SwMappings, 4637, ZeroOrOne, false, 0x1C0000, ClassicPlatform, Some(2941)),
    /* 7495 */ element!(SwMaxAxisPoints, 2231, ZeroOrOne, false, 0x0, NotRestricted, Some(1483)),
    /* 7496 */ element!(SwMaxTextSize, 2231, ZeroOrOne, false, 0x0, NotRestricted, Some(2562)),
    /* 7497 */ element!(SwMcBaseType, 4488, One, false, 0x0, NotRestricted, None),
    /* 7498 */ element!(SwMinAxisPoints, 2231, ZeroOrOne, false, 0x0, NotRestricted, Some(1537)),
    /* 7499 */ element!(SwNumberOfAxisPoints, 2231, ZeroOrOne, false, 0x0, NotRestricted, Some(3004)),
    /* 7500 */ element!(SwPointerTargetProps, 4489, ZeroOrOne, false, 0x80000, NotRestricted, Some(2487)),
    /* 7501 */ element!(SwRecordLayout, 4490, One, false, 0x0, NotRestricted, None),
    /* 7502 */ element!(SwRecordLayoutComponent, 2500, ZeroOrOne, false, 0x0, NotRestricted, Some(4007)),
    /* 7503 */ element!(SwRecordLayoutGroup, 4491, One, false, 0x0, NotRestricted, Some(3305)),
    /* 7504 */ element!(SwRecordLayoutGroup, 4491, ZeroOrOne, false, 0x0, NotRestricted, Some(4843)),
    /* 7505 */ element!(SwRecordLayoutGroupAxis, 261, ZeroOrOne, false, 0x0, NotRestricted, Some(4236)),
    /* 7506 */ element!(SwRecordLayoutGroupFrom, 3629, ZeroOrOne, false, 0x0, NotRestricted, Some(4237)),
    /* 7507 */ element!(SwRecordLayoutGroupIndex, 4393, ZeroOrOne, false, 0x0, NotRestricted, Some(3517)),
    /* 7508 */ element!(SwRecordLayoutGroupIndex, 5078, ZeroOrOne, false, 0x0, NotRestricted, Some(4353)),
    /* 7509 */ element!(SwRecordLayoutGroupStep, 2642, ZeroOrOne, false, 0x0, NotRestricted, Some(4250)),
    /* 7510 */ element!(SwRecordLayoutGroupTo, 3629, ZeroOrOne, false, 0x0, NotRestricted, Some(4232)),
    /* 7511 */ element!(SwRecordLayoutRef, 4479, ZeroOrOne, false, 0x0, NotRestricted, Some(1786)),
    /* 7512 */ element!(SwRecordLayoutRef, 4479, One, false, 0x0, NotRestricted, Some(3462)),
    /* 7513 */ element!(SwRecordLayoutRef, 4479, ZeroOrOne, false, 0x0, NotRestricted, Some(5319)),
    /* 7514 */ element!(SwRecordLayoutV, 4493, One, false, 0x0, NotRestricted, Some(1707)),
    /* 7515 */ element!(SwRecordLayoutVAxis, 261, ZeroOrOne, false, 0x0, NotRestricted, Some(3906)),
    /* 7516 */ element!(SwRecordLayoutVFixValue, 2642, ZeroOrOne, false, 0x0, NotRestricted, Some(4233)),
    /* 7517 */ element!(SwRecordLayoutVIndex, 4393, ZeroOrOne, false, 0x0, NotRestricted, Some(3146)),
    /* 7518 */ element!(SwRecordLayoutVIndex, 5078, ZeroOrOne, false, 0x0, NotRestricted, Some(3145)),
    /* 7519 */ element!(SwRecordLayoutVProp, 4393, ZeroOrOne, false, 0x0, NotRestricted, Some(3855)),
    /* 7520 */ element!(SwRecordLayoutVProp, 5078, ZeroOrOne, false, 0x0, NotRestricted, Some(3854)),
    /* 7521 */ element!(SwRefreshTiming, 3068, ZeroOrOne, false, 0x0, NotRestricted, Some(4398)),
    /* 7522 */ element!(SwServiceArg, 4495, One, false, 0x0, NotRestricted, None),
    /* 7523 */ element!(SwServiceImplPolicy, 4496, ZeroOrOne, false, 0x0, ClassicPlatform, Some(861)),
    /* 7524 */ element!(SwSyscond, 693, ZeroOrOne, false, 0x0, NotRestricted, Some(4300)),
    /* 7525 */ element!(SwSystemconst, 4497, One, false, 0x0, NotRestricted, None),
    /* 7526 */ element!(SwSystemconstRef, 4500, ZeroOrOne, false, 0x0, NotRestricted, Some(4836)),
    /* 7527 */ element!(SwSystemconstValue, 4499, One, false, 0x0, NotRestricted, None),
    /* 7528 */ element!(SwSystemconstantValueSet, 4501, One, false, 0x0, NotRestricted, None),
    /* 7529 */ element!(SwSystemconstantValueSetRef, 2250, One, false, 0x0, NotRestricted, None),
    /* 7530 */ element!(SwSystemconstantValueSetRef, 3510, One, false, 0x0, NotRestricted, None),
    /* 7531 */ element!(SwSystemconstantValueSetRefs, 2251, ZeroOrOne, false, 0x0, NotRestricted, Some(2353)),
    /* 7532 */ element!(SwSystemconstantValueSetRefs, 3511, ZeroOrOne, false, 0x0, NotRestricted, Some(4854)),
    /* 7533 */ element!(SwSystemconstantValues, 4502, ZeroOrOne, false, 0x0, NotRestricted, Some(4758)),
    /* 7534 */ element!(SwTestDesc, 535, One, false, 0x0, NotRestricted, None),
    /* 7535 */ element!(SwTestDesc, 535, ZeroOrOne, false, 0x0, NotRestricted, Some(4363)),
    /* 7536 */ element!(SwTestDescs, 4461, ZeroOrOne, false, 0x0, NotRestricted, Some(4362)),
    /* 7537 */ element!(SwTextProps, 4503, ZeroOrOne, false, 0x0, NotRestricted, Some(6047)),
    /* 7538 */ element!(SwValueBlockSize, 2231, ZeroOrOne, false, 0x0, NotRestricted, Some(5735)),
    /* 7539 */ element!(SwValueBlockSizeMults, 4480, ZeroOrOne, true, 0x0, NotRestricted, Some(4028)),
    /* 7540 */ element!(SwValueCont, 3805, ZeroOrOne, false, 0x180000, NotRestricted, Some(5763)),
    /* 7541 */ element!(SwValueCont, 4505, ZeroOrOne, false, 0x0, NotRestricted, Some(5762)),
    /* 7542 */ element!(SwValuesPhys, 4506, ZeroOrOne, false, 0x0, NotRestricted, Some(6044)),
    /* 7543 */ element!(SwVariableImpl, 4507, One, false, 0x0, NotRestricted, None),
    /* 7544 */ element!(SwVariableImpls, 4449, ZeroOrOne, false, 0x0, NotRestricted, Some(4378)),
    /* 7545 */ element!(SwVariablePrototypeRef, 4508, ZeroOrOne, false, 0x0, NotRestricted, Some(4380)),
    /* 7546 */ element!(SwVariableRefs, 4434, ZeroOrOne, true, 0x0, NotRestricted, Some(2265)),
    /* 7547 */ element!(SwVersion, 3721, ZeroOrOne, false, 0x0, ClassicPlatform, Some(2422)),
    /* 7548 */ element!(SwcBehaviorRef, 4520, ZeroOrOne, false, 0x0, ClassicPlatform, Some(2937)),
    /* 7549 */ element!(SwcBswMapping, 4510, One, false, 0x0, NotRestricted, None),
    /* 7550 */ element!(SwcBswMappingRef, 2615, ZeroOrOne, false, 0x0, ClassicPlatform, Some(3440)),
    /* 7551 */ element!(SwcBswRunnableMapping, 4514, One, false, 0x0, NotRestricted, None),
    /* 7552 */ element!(SwcBswSynchronizedModeGroupPrototype, 4515, One, false, 0x0, NotRestricted, None),
    /* 7553 */ element!(SwcBswSynchronizedTrigger, 4516, One, false, 0x0, NotRestricted, None),
    /* 7554 */ element!(SwcExclusiveAreaPolicy, 4517, One, false, 0x0, NotRestricted, None),
    /* 7555 */ element!(SwcFlatServiceDependencyRef, 1303, ZeroOrOne, false, 0x0, ClassicPlatform, Some(1884)),
    /* 7556 */ element!(SwcFlatServiceDependencyRef, 1303, ZeroOrOne, false, 0x0, ClassicPlatform, Some(1885)),
    /* 7557 */ element!(SwcImplementation, 4519, One, false, 0x0, NotRestricted, None),
    /* 7558 */ element!(SwcInternalBehavior, 4522, One, false, 0x0, NotRestricted, None),
    /* 7559 */ element!(SwcMappingConstraintRef, 4472, One, false, 0x0, NotRestricted, None),
    /* 7560 */ element!(SwcMappingConstraintRefs, 4473, ZeroOrOne, false, 0x0, ClassicPlatform, Some(1999)),
    /* 7561 */ element!(SwcModeGroupIref, 3196, ZeroOrOne, false, 0x0, NotRestricted, Some(2749)),
    /* 7562 */ element!(SwcModeManagerErrorEvent, 4532, One, false, 0x0, NotRestricted, None),
    /* 7563 */ element!(SwcModeSwitchEvent, 4533, One, false, 0x0, NotRestricted, None),
    /* 7564 */ element!(SwcModeSwitchEventRef, 3043, ZeroOrOne, false, 0x0, NotRestricted, Some(5025)),
    /* 7565 */ element!(SwcRunnableRef, 3796, ZeroOrOne, false, 0x0, NotRestricted, Some(2936)),
    /* 7566 */ element!(SwcServiceDependency, 4535, One, false, 0x0, NotRestricted, None),
    /* 7567 */ element!(SwcServiceDependencyInExecutableIref, 4539, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3233)),
    /* 7568 */ element!(SwcServiceDependencyInExecutableIref, 4539, ZeroOrOne, false, 0x0, NotRestricted, Some(3236)),
    /* 7569 */ element!(SwcServiceDependencyInExecutableIref, 4539, ZeroOrOne, false, 0x0, NotRestricted, Some(3237)),
    /* 7570 */ element!(SwcServiceDependencyInExecutableIref, 4539, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3238)),
    /* 7571 */ element!(SwcServiceDependencyInExecutableIref, 4539, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3240)),
    /* 7572 */ element!(SwcServiceDependencyInExecutableIref, 4539, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3241)),
    /* 7573 */ element!(SwcServiceDependencyInExecutableIref, 4539, ZeroOrOne, false, 0x0, NotRestricted, Some(3243)),
    /* 7574 */ element!(SwcServiceDependencyInExecutableIref, 4539, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3244)),
    /* 7575 */ element!(SwcServiceDependencyInExecutableIref, 4539, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3245)),
    /* 7576 */ element!(SwcServiceDependencyInExecutableIref, 4539, ZeroOrOne, false, 0x0, NotRestricted, Some(3252)),
    /* 7577 */ element!(SwcServiceDependencyInExecutableIref, 4539, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3253)),
    /* 7578 */ element!(SwcServiceDependencyInExecutableIref, 4539, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5060)),
    /* 7579 */ element!(SwcServiceDependencyInSystemIref, 4541, ZeroOrOne, false, 0x0, ClassicPlatform, Some(1330)),
    /* 7580 */ element!(SwcServiceDependencyIref, 4538, ZeroOrOne, false, 0x0, NotRestricted, Some(1330)),
    /* 7581 */ element!(SwcServiceDependencyIref, 4538, ZeroOrOne, false, 0x0, ClassicPlatform, Some(1330)),
    /* 7582 */ element!(SwcTiming, 4545, One, false, 0x0, NotRestricted, None),
    /* 7583 */ element!(SwcToApplicationPartitionMapping, 4548, One, false, 0x0, NotRestricted, None),
    /* 7584 */ element!(SwcToApplicationPartitionMappings, 795, ZeroOrOne, false, 0x1F0000, ClassicPlatform, Some(6028)),
    /* 7585 */ element!(SwcToApplicationPartitionMappings, 4465, ZeroOrOne, false, 0x0, ClassicPlatform, Some(422)),
    /* 7586 */ element!(SwcToApplicationPartitionMappings, 4638, ZeroOrOne, false, 0x1FFF00, ClassicPlatform, Some(119)),
    /* 7587 */ element!(SwcToEcuMapping, 4550, One, false, 0x0, NotRestricted, None),
    /* 7588 */ element!(SwcToEcuMappingConstraint, 4552, One, false, 0x0, NotRestricted, None),
    /* 7589 */ element!(SwcToEcuMappingConstraintType, 4554, ZeroOrOne, false, 0x0, NotRestricted, Some(3888)),
    /* 7590 */ element!(SwcToImplMapping, 4557, One, false, 0x0, NotRestricted, None),
    /* 7591 */ element!(SwcToSwcOperationArguments, 4559, One, false, 0x0, NotRestricted, None),
    /* 7592 */ element!(SwcToSwcSignal, 4562, One, false, 0x0, NotRestricted, None),
    /* 7593 */ element!(SwcTriggerIref, 3213, ZeroOrOne, false, 0x0, NotRestricted, Some(2748)),
    /* 7594 */ element!(SwitchAsynchronousTrafficShaperGroupEntry, 4564, One, false, 0x0, NotRestricted, None),
    /* 7595 */ element!(SwitchFlowMeteringEntry, 4565, One, false, 0x0, NotRestricted, None),
    /* 7596 */ element!(SwitchMacAddressLearningMode, 4566, ZeroOrOne, false, 0x0, NotRestricted, Some(565)),
    /* 7597 */ element!(SwitchStreamFilterEntry, 4569, One, false, 0x0, NotRestricted, None),
    /* 7598 */ element!(SwitchStreamGateEntry, 4576, One, false, 0x0, NotRestricted, None),
    /* 7599 */ element!(SwitchStreamIdentification, 4577, One, false, 0x0, NotRestricted, None),
    /* 7600 */ element!(SwitchStreamIdentifications, 744, ZeroOrOne, true, 0x0, ClassicPlatform, Some(332)),
    /* 7601 */ element!(Symbol, 475, ZeroOrOne, false, 0x0, NotRestricted, Some(355)),
    /* 7602 */ element!(Symbol, 475, ZeroOrOne, false, 0x0, NotRestricted, Some(3141)),
    /* 7603 */ element!(Symbol, 475, ZeroOrOne, false, 0x0, NotRestricted, Some(3142)),
    /* 7604 */ element!(Symbol, 475, ZeroOrOne, false, 0x0, NotRestricted, Some(3143)),
    /* 7605 */ element!(Symbol, 475, ZeroOrOne, false, 0x0, NotRestricted, Some(3144)),
    /* 7606 */ element!(Symbol, 475, ZeroOrOne, false, 0x0, NotRestricted, Some(5748)),
    /* 7607 */ element!(Symbol, 2500, ZeroOrOne, false, 0x0, NotRestricted, Some(682)),
    /* 7608 */ element!(Symbol, 4582, ZeroOrOne, false, 0xFE000, NotRestricted, Some(3207)),
    /* 7609 */ element!(Symbol, 4582, ZeroOrOne, false, 0x0, ClassicPlatform, Some(4166)),
    /* 7610 */ element!(Symbol, 4582, ZeroOrOne, false, 0x0, ClassicPlatform, Some(4252)),
    /* 7611 */ element!(SymbolProps, 4581, One, false, 0x0, NotRestricted, None),
    /* 7612 */ element!(SymbolProps, 4581, ZeroOrOne, false, 0x1FFFFC, NotRestricted, Some(5463)),
    /* 7613 */ element!(SymbolProps, 4581, ZeroOrOne, false, 0x1FFFFC, NotRestricted, Some(5464)),
    /* 7614 */ element!(SymbolWindow, 2642, ZeroOrOne, false, 0x0, NotRestricted, Some(2847)),
    /* 7615 */ element!(SymbolWindowActionPointOffset, 2642, ZeroOrOne, false, 0x0, NotRestricted, Some(1620)),
    /* 7616 */ element!(SymbolicNameProps, 4583, ZeroOrOne, false, 0x0, NotRestricted, Some(3518)),
    /* 7617 */ element!(SymbolicNameValue, 298, ZeroOrOne, false, 0x0, ClassicPlatform, Some(2493)),
    /* 7618 */ element!(SyncConfirmationTimeout, 2229, ZeroOrOne, false, 0x0, NotRestricted, Some(5759)),
    /* 7619 */ element!(SyncCounterInit, 3494, ZeroOrOne, false, 0x0, ClassicPlatform, Some(991)),
    /* 7620 */ element!(SyncCounterInit, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(1596)),
    /* 7621 */ element!(SyncCounterInit, 3494, ZeroOrOne, false, 0x0, ClassicPlatform, Some(1597)),
    /* 7622 */ element!(SyncCounterInit, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(1614)),
    /* 7623 */ element!(SyncDataIdList, 3494, One, false, 0x0, NotRestricted, None),
    /* 7624 */ element!(SyncDataIdLists, 2275, ZeroOrOne, true, 0x0, NotRestricted, Some(2701)),
    /* 7625 */ element!(SyncFrameIdCountMax, 2642, ZeroOrOne, false, 0x0, NotRestricted, Some(1486)),
    /* 7626 */ element!(SyncInterval, 2229, ZeroOrOne, false, 0x0, NotRestricted, Some(2658)),
    /* 7627 */ element!(SyncJumpWidth, 2642, ZeroOrOne, false, 0x0, NotRestricted, Some(3007)),
    /* 7628 */ element!(SyncJumpWidth, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(2598)),
    /* 7629 */ element!(SyncLossThreshold, 2229, ZeroOrOne, false, 0x0, NotRestricted, Some(5650)),
    /* 7630 */ element!(SyncLossTimeout, 2229, ZeroOrOne, false, 0x0, NotRestricted, Some(3879)),
    /* 7631 */ element!(SyncNodeMax, 2642, ZeroOrOne, false, 0x0, NotRestricted, Some(2967)),
    /* 7632 */ element!(SyncPeriod, 2229, ZeroOrOne, false, 0x0, NotRestricted, Some(5666)),
    /* 7633 */ element!(SyncTimeBaseMgrUserNeeds, 4584, One, false, 0x0, NotRestricted, None),
    /* 7634 */ element!(SynchronizationConstraintType, 4596, ZeroOrOne, false, 0x0, NotRestricted, Some(1312)),
    /* 7635 */ element!(SynchronizationPointConstraint, 4585, One, false, 0x0, NotRestricted, None),
    /* 7636 */ element!(SynchronizationTimingConstraint, 4592, One, false, 0x0, NotRestricted, None),
    /* 7637 */ element!(SynchronizedMasterTimeBase, 4597, One, false, 0x0, NotRestricted, None),
    /* 7638 */ element!(SynchronizedModeGroups, 4512, ZeroOrOne, false, 0x1C0000, ClassicPlatform, Some(54)),
    /* 7639 */ element!(SynchronizedSlaveTimeBase, 4599, One, false, 0x0, NotRestricted, None),
    /* 7640 */ element!(SynchronizedTimeBaseConsumer, 4601, One, false, 0x0, NotRestricted, None),
    /* 7641 */ element!(SynchronizedTimeBaseConsumerInterface, 4602, One, false, 0x0, NotRestricted, None),
    /* 7642 */ element!(SynchronizedTimeBaseProvider, 4604, One, false, 0x0, NotRestricted, None),
    /* 7643 */ element!(SynchronizedTimeBaseProviderInterface, 4605, One, false, 0x0, NotRestricted, None),
    /* 7644 */ element!(SynchronizedTriggers, 4513, ZeroOrOne, false, 0x1C0000, ClassicPlatform, Some(53)),
    /* 7645 */ element!(SynchronousServerCallPoint, 4607, One, false, 0x0, NotRestricted, None),
    /* 7646 */ element!(SyscRef, 4500, One, false, 0x0, NotRestricted, Some(5304)),
    /* 7647 */ element!(SyscStringRef, 4498, One, false, 0x0, NotRestricted, Some(6045)),
    /* 7648 */ element!(System, 4608, One, false, 0x0, NotRestricted, None),
    /* 7649 */ element!(SystemDocumentations, 4654, ZeroOrOne, false, 0x1FFFFE, ClassicPlatform, Some(1750)),
    /* 7650 */ element!(SystemMapping, 4616, One, false, 0x0, NotRestricted, None),
    /* 7651 */ element!(SystemMemoryUsage, 4642, One, false, 0x0, NotRestricted, None),
    /* 7652 */ element!(SystemMemoryUsages, 3686, ZeroOrOne, false, 0x38000, AdaptivePlatform, Some(337)),
    /* 7653 */ element!(SystemRef, 4656, ZeroOrOne, false, 0x0, NotRestricted, Some(4317)),
    /* 7654 */ element!(SystemSignal, 4644, One, false, 0x0, NotRestricted, None),
    /* 7655 */ element!(SystemSignalGroup, 4645, One, false, 0x0, NotRestricted, None),
    /* 7656 */ element!(SystemSignalGroupRef, 2467, ZeroOrOne, false, 0x0, NotRestricted, Some(2160)),
    /* 7657 */ element!(SystemSignalGroupRef, 4648, ZeroOrOne, false, 0x0, ClassicPlatform, Some(2665)),
    /* 7658 */ element!(SystemSignalGroupToComResourceMappings, 4639, ZeroOrOne, false, 0x180000, ClassicPlatform, Some(1431)),
    /* 7659 */ element!(SystemSignalGroupToCommunicationResourceMapping, 4647, One, false, 0x0, NotRestricted, None),
    /* 7660 */ element!(SystemSignalRef, 1397, ZeroOrOne, false, 0x0, ClassicPlatform, Some(4971)),
    /* 7661 */ element!(SystemSignalRef, 2484, One, false, 0x0, NotRestricted, None),
    /* 7662 */ element!(SystemSignalRef, 2484, ZeroOrOne, false, 0x0, NotRestricted, Some(1886)),
    /* 7663 */ element!(SystemSignalRef, 2484, ZeroOrOne, false, 0x0, NotRestricted, Some(2155)),
    /* 7664 */ element!(SystemSignalRef, 2484, ZeroOrOne, false, 0x0, NotRestricted, Some(2157)),
    /* 7665 */ element!(SystemSignalRef, 2484, ZeroOrOne, false, 0x0, NotRestricted, Some(2158)),
    /* 7666 */ element!(SystemSignalRef, 2484, ZeroOrOne, false, 0x0, NotRestricted, Some(2159)),
    /* 7667 */ element!(SystemSignalRef, 2484, ZeroOrOne, false, 0x0, NotRestricted, Some(2235)),
    /* 7668 */ element!(SystemSignalRef, 2484, ZeroOrOne, false, 0x0, NotRestricted, Some(2236)),
    /* 7669 */ element!(SystemSignalRef, 2484, ZeroOrOne, false, 0x0, NotRestricted, Some(2237)),
    /* 7670 */ element!(SystemSignalRef, 2484, ZeroOrOne, false, 0x0, NotRestricted, Some(2238)),
    /* 7671 */ element!(SystemSignalRef, 4652, ZeroOrOne, false, 0x0, ClassicPlatform, Some(2664)),
    /* 7672 */ element!(SystemSignalRef, 4931, ZeroOrOne, false, 0x0, NotRestricted, Some(2156)),
    /* 7673 */ element!(SystemSignalRef, 4931, ZeroOrOne, false, 0x0, NotRestricted, Some(4770)),
    /* 7674 */ element!(SystemSignalRefs, 4646, ZeroOrOne, false, 0x0, NotRestricted, Some(1939)),
    /* 7675 */ element!(SystemSignalToComResourceMappings, 4640, ZeroOrOne, false, 0x180000, ClassicPlatform, Some(1430)),
    /* 7676 */ element!(SystemSignalToCommunicationResourceMapping, 4650, One, false, 0x0, NotRestricted, None),
    /* 7677 */ element!(SystemTiming, 4655, One, false, 0x0, NotRestricted, None),
    /* 7678 */ element!(SystemTriggeredEvents, 3715, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5567)),
    /* 7679 */ element!(SystemVersion, 3721, ZeroOrOne, false, 0x0, NotRestricted, Some(5981)),
    /* 7680 */ element!(TaType, 3087, ZeroOrOne, false, 0x0, ClassicPlatform, Some(1573)),
    /* 7681 */ element!(Table, 4657, ZeroOrOne, false, 0x0, NotRestricted, Some(5381)),
    /* 7682 */ element!(Table, 4657, One, false, 0xC0000, NotRestricted, Some(5382)),
    /* 7683 */ element!(TableCaption, 533, ZeroOrOne, false, 0x0, NotRestricted, Some(4406)),
    /* 7684 */ element!(TableEntrys, 2809, ZeroOrOne, false, 0x0, ClassicPlatform, Some(3111)),
    /* 7685 */ element!(TagId, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(4098)),
    /* 7686 */ element!(TagWithOptionalValue, 4658, One, false, 0x0, NotRestricted, None),
    /* 7687 */ element!(TailoringRef, 1800, One, false, 0x0, NotRestricted, None),
    /* 7688 */ element!(TailoringRefs, 1801, ZeroOrOne, false, 0x0, NotRestricted, Some(448)),
    /* 7689 */ element!(TargetApplicationRecordElementRef, 200, ZeroOrOne, false, 0x0, AdaptivePlatform, None),
    /* 7690 */ element!(TargetApplicationRecordElementRef, 200, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5199)),
    /* 7691 */ element!(TargetCategory, 2500, ZeroOrOne, false, 0x0, NotRestricted, Some(5796)),
    /* 7692 */ element!(TargetChannel, 462, ZeroOrOne, false, 0x180000, ClassicPlatform, Some(692)),
    /* 7693 */ element!(TargetComponentRef, 660, ZeroOrOne, false, 0x0, NotRestricted, None),
    /* 7694 */ element!(TargetDataElementRef, 3162, ZeroOrOne, false, 0x0, NotRestricted, None),
    /* 7695 */ element!(TargetDataElementRef, 5018, ZeroOrOne, false, 0x0, NotRestricted, None),
    /* 7696 */ element!(TargetDataPrototypeGroupRef, 2635, ZeroOrOne, false, 0x0, NotRestricted, Some(5753)),
    /* 7697 */ element!(TargetDataPrototypeInCsRef, 937, ZeroOrOne, false, 0x0, ClassicPlatform, None),
    /* 7698 */ element!(TargetDataPrototypeInSrRef, 937, ZeroOrOne, false, 0x0, ClassicPlatform, None),
    /* 7699 */ element!(TargetDataPrototypeRef, 168, ZeroOrOne, false, 0x0, NotRestricted, None),
    /* 7700 */ element!(TargetDataPrototypeRef, 214, ZeroOrOne, false, 0x0, NotRestricted, Some(5198)),
    /* 7701 */ element!(TargetDataPrototypeRef, 258, ZeroOrOne, false, 0x0, NotRestricted, Some(4838)),
    /* 7702 */ element!(TargetDataPrototypeRef, 258, ZeroOrOne, false, 0x0, NotRestricted, Some(4839)),
    /* 7703 */ element!(TargetDataPrototypeRef, 944, ZeroOrOne, false, 0x0, NotRestricted, None),
    /* 7704 */ element!(TargetDataPrototypeRef, 947, ZeroOrOne, false, 0x0, AdaptivePlatform, None),
    /* 7705 */ element!(TargetDataPrototypeRef, 955, ZeroOrOne, false, 0x0, AdaptivePlatform, None),
    /* 7706 */ element!(TargetDataPrototypeRef, 961, ZeroOrOne, false, 0x0, AdaptivePlatform, None),
    /* 7707 */ element!(TargetDataPrototypeRef, 968, ZeroOrOne, false, 0x0, NotRestricted, Some(5753)),
    /* 7708 */ element!(TargetDataPrototypeRef, 1946, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(4840)),
    /* 7709 */ element!(TargetDataPrototypeRef, 2594, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5197)),
    /* 7710 */ element!(TargetDataPrototypeRef, 2611, ZeroOrOne, false, 0x0, NotRestricted, Some(5198)),
    /* 7711 */ element!(TargetDataPrototypeRef, 3162, ZeroOrOne, false, 0x0, NotRestricted, None),
    /* 7712 */ element!(TargetDataPrototypeRef, 3462, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(4840)),
    /* 7713 */ element!(TargetDataPrototypeRef, 5024, ZeroOrOne, false, 0x0, NotRestricted, Some(5699)),
    /* 7714 */ element!(TargetDataPrototypeRef, 5026, ZeroOrOne, false, 0x0, NotRestricted, None),
    /* 7715 */ element!(TargetDataProtoypeRef, 5026, ZeroOrOne, false, 0x0, NotRestricted, None),
    /* 7716 */ element!(TargetEecRef, 4586, One, false, 0x0, NotRestricted, None),
    /* 7717 */ element!(TargetEecRefs, 4590, ZeroOrOne, false, 0x0, ClassicPlatform, Some(3147)),
    /* 7718 */ element!(TargetElementRef, 1442, ZeroOrOne, false, 0x0, NotRestricted, Some(5754)),
    /* 7719 */ element!(TargetEventRef, 2082, ZeroOrOne, false, 0x0, AdaptivePlatform, None),
    /* 7720 */ element!(TargetEventRef, 3788, ZeroOrOne, false, 0x0, NotRestricted, None),
    /* 7721 */ element!(TargetEventRef, 3984, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(1977)),
    /* 7722 */ element!(TargetEventRef, 4588, One, false, 0x0, NotRestricted, None),
    /* 7723 */ element!(TargetEventRefs, 4591, ZeroOrOne, false, 0x0, ClassicPlatform, Some(2862)),
    /* 7724 */ element!(TargetFieldRef, 2133, ZeroOrOne, false, 0x0, AdaptivePlatform, None),
    /* 7725 */ element!(TargetFieldRef, 3986, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(1917)),
    /* 7726 */ element!(TargetFrameRef, 2277, ZeroOrOne, false, 0x0, NotRestricted, Some(2673)),
    /* 7727 */ element!(TargetHealthChannelRef, 3354, ZeroOrOne, false, 0x0, AdaptivePlatform, None),
    /* 7728 */ element!(TargetIPdu, 4659, ZeroOrOne, false, 0x0, NotRestricted, Some(2673)),
    /* 7729 */ element!(TargetIPduRef, 2442, ZeroOrOne, false, 0x0, NotRestricted, Some(1166)),
    /* 7730 */ element!(TargetImplementationDataTypeElementRef, 2598, ZeroOrOne, false, 0x0, NotRestricted, Some(4723)),
    /* 7731 */ element!(TargetImplementationDataTypeElementRef, 2602, ZeroOrOne, false, 0x0, NotRestricted, Some(4724)),
    /* 7732 */ element!(TargetMethodRef, 3621, ZeroOrOne, false, 0x0, AdaptivePlatform, None),
    /* 7733 */ element!(TargetMethodRef, 3669, ZeroOrOne, false, 0x0, AdaptivePlatform, None),
    /* 7734 */ element!(TargetMethodRef, 4046, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(1929)),
    /* 7735 */ element!(TargetModeDeclarationGroupPrototypeRef, 3005, ZeroOrOne, false, 0x0, AdaptivePlatform, None),
    /* 7736 */ element!(TargetModeDeclarationGroupPrototypeRef, 4143, ZeroOrOne, false, 0x0, NotRestricted, None),
    /* 7737 */ element!(TargetModeDeclarationRef, 2163, ZeroOrOne, false, 0x0, AdaptivePlatform, None),
    /* 7738 */ element!(TargetModeDeclarationRef, 2297, ZeroOrOne, false, 0x0, AdaptivePlatform, None),
    /* 7739 */ element!(TargetModeDeclarationRef, 2995, ZeroOrOne, false, 0x0, NotRestricted, None),
    /* 7740 */ element!(TargetModeDeclarationRef, 3000, ZeroOrOne, false, 0x0, NotRestricted, None),
    /* 7741 */ element!(TargetModeDeclarationRef, 3030, ZeroOrOne, false, 0x0, AdaptivePlatform, None),
    /* 7742 */ element!(TargetModeDeclarationRef, 3033, ZeroOrOne, false, 0x0, AdaptivePlatform, None),
    /* 7743 */ element!(TargetModeDeclarationRef, 3201, ZeroOrOne, false, 0x0, NotRestricted, Some(2594)),
    /* 7744 */ element!(TargetModeGroupRef, 3039, ZeroOrOne, false, 0x0, NotRestricted, None),
    /* 7745 */ element!(TargetModeRef, 2995, ZeroOrOne, false, 0x0, NotRestricted, None),
    /* 7746 */ element!(TargetModeRef, 3201, ZeroOrOne, false, 0x0, NotRestricted, None),
    /* 7747 */ element!(TargetModuleId, 3494, ZeroOrOne, false, 0x0, ClassicPlatform, Some(81)),
    /* 7748 */ element!(TargetModuleRefs, 389, ZeroOrOne, false, 0x0, ClassicPlatform, Some(2240)),
    /* 7749 */ element!(TargetOperationRef, 544, ZeroOrOne, false, 0x0, NotRestricted, None),
    /* 7750 */ element!(TargetOperationRef, 3185, ZeroOrOne, false, 0x0, NotRestricted, None),
    /* 7751 */ element!(TargetPPortPrototypeRef, 3207, ZeroOrOne, false, 0x0, AdaptivePlatform, None),
    /* 7752 */ element!(TargetPPortPrototypeRef, 3211, ZeroOrOne, false, 0x0, AdaptivePlatform, None),
    /* 7753 */ element!(TargetPPortRef, 3204, ZeroOrOne, false, 0x0, NotRestricted, None),
    /* 7754 */ element!(TargetParameterDataPrototypeRef, 3220, ZeroOrOne, false, 0x0, NotRestricted, None),
    /* 7755 */ element!(TargetPduTriggerings, 2366, ZeroOrOne, false, 0x1C0000, ClassicPlatform, Some(2124)),
    /* 7756 */ element!(TargetPhmCheckpointRef, 3349, ZeroOrOne, false, 0x0, AdaptivePlatform, None),
    /* 7757 */ element!(TargetPhmSupervisedEntityIref, 3596, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(1332)),
    /* 7758 */ element!(TargetPortPrototypeRef, 3484, ZeroOrOne, false, 0x0, AdaptivePlatform, None),
    /* 7759 */ element!(TargetPossibleErrorRef, 4013, ZeroOrOne, false, 0x0, NotRestricted, Some(5257)),
    /* 7760 */ element!(TargetProvidedOperationRef, 544, ZeroOrOne, false, 0x0, NotRestricted, None),
    /* 7761 */ element!(TargetRPortPrototypeRef, 3599, ZeroOrOne, false, 0x0, AdaptivePlatform, None),
    /* 7762 */ element!(TargetRPortPrototypeRef, 3668, ZeroOrOne, false, 0x0, AdaptivePlatform, None),
    /* 7763 */ element!(TargetRPortRef, 3592, ZeroOrOne, false, 0x0, NotRestricted, None),
    /* 7764 */ element!(TargetRef, 76, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(2239)),
    /* 7765 */ element!(TargetRef, 82, ZeroOrOne, false, 0x0, NotRestricted, Some(4837)),
    /* 7766 */ element!(TargetRef, 2180, One, false, 0x0, NotRestricted, None),
    /* 7767 */ element!(TargetRef, 2611, ZeroOrOne, false, 0x0, NotRestricted, Some(3093)),
    /* 7768 */ element!(TargetRef, 3177, ZeroOrOne, false, 0x0, NotRestricted, Some(3160)),
    /* 7769 */ element!(TargetRef, 3454, ZeroOrOne, false, 0x0, NotRestricted, Some(1372)),
    /* 7770 */ element!(TargetRef, 4543, ZeroOrOne, false, 0x0, NotRestricted, Some(1376)),
    /* 7771 */ element!(TargetRefs, 2181, ZeroOrOne, false, 0x0, NotRestricted, Some(3148)),
    /* 7772 */ element!(TargetRequiredOperationRef, 544, ZeroOrOne, false, 0x0, NotRestricted, None),
    /* 7773 */ element!(TargetRteEventRef, 3788, ZeroOrOne, false, 0x0, NotRestricted, None),
    /* 7774 */ element!(TargetRteEventRef, 3792, ZeroOrOne, false, 0x0, ClassicPlatform, None),
    /* 7775 */ element!(TargetRunnableEntityGroupRef, 2638, ZeroOrOne, false, 0x0, NotRestricted, Some(5752)),
    /* 7776 */ element!(TargetRunnableEntityRef, 3822, ZeroOrOne, false, 0x0, NotRestricted, Some(5749)),
    /* 7777 */ element!(TargetSignalRef, 2479, ZeroOrOne, false, 0x0, NotRestricted, Some(2673)),
    /* 7778 */ element!(TargetStatusRef, 3363, ZeroOrOne, false, 0x0, AdaptivePlatform, None),
    /* 7779 */ element!(TargetSwcServiceDependencyRef, 1303, ZeroOrOne, false, 0x0, NotRestricted, None),
    /* 7780 */ element!(TargetSwcServiceDependencyRef, 1337, ZeroOrOne, false, 0x0, NotRestricted, None),
    /* 7781 */ element!(TargetSwcServiceDependencyRef, 4540, ZeroOrOne, false, 0x0, NotRestricted, None),
    /* 7782 */ element!(TargetTriggerRef, 3985, ZeroOrOne, false, 0x0, AdaptivePlatform, None),
    /* 7783 */ element!(TargetTriggerRef, 3985, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(1951)),
    /* 7784 */ element!(TargetTriggerRef, 4736, ZeroOrOne, false, 0x0, NotRestricted, Some(5750)),
    /* 7785 */ element!(TargetTriggerRef, 4926, ZeroOrOne, false, 0x0, NotRestricted, None),
    /* 7786 */ element!(TargetType, 4393, ZeroOrOne, false, 0x0, NotRestricted, Some(4208)),
    /* 7787 */ element!(TargetVariableAccessRef, 4734, ZeroOrOne, false, 0x0, NotRestricted, None),
    /* 7788 */ element!(TargetVariableDataPrototypeRef, 314, ZeroOrOne, false, 0x0, NotRestricted, Some(5751)),
    /* 7789 */ element!(Task, 2500, ZeroOrOne, false, 0x0, NotRestricted, Some(2994)),
    /* 7790 */ element!(Tbody, 4660, ZeroOrOne, false, 0x0, NotRestricted, Some(4800)),
    /* 7791 */ element!(TcpAliveCheckResponseTimeout, 2229, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5883)),
    /* 7792 */ element!(TcpCongestionAvoidanceEnabled, 298, ZeroOrOne, false, 0x0, NotRestricted, Some(969)),
    /* 7793 */ element!(TcpConnectTimeout, 2229, ZeroOrOne, false, 0x0, NotRestricted, Some(2603)),
    /* 7794 */ element!(TcpDelayedAckTimeout, 2229, ZeroOrOne, false, 0x0, NotRestricted, Some(2944)),
    /* 7795 */ element!(TcpFastRecoveryEnabled, 298, ZeroOrOne, false, 0x0, NotRestricted, Some(967)),
    /* 7796 */ element!(TcpFastRetransmitEnabled, 298, ZeroOrOne, false, 0x0, NotRestricted, Some(968)),
    /* 7797 */ element!(TcpFinWait2Timeout, 2229, ZeroOrOne, false, 0x0, NotRestricted, Some(5885)),
    /* 7798 */ element!(TcpGeneralInactivityTime, 2229, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5882)),
    /* 7799 */ element!(TcpInitialInactivityTime, 2229, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5886)),
    /* 7800 */ element!(TcpIpArpNumGratuitousArpOnStartup, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(4243)),
    /* 7801 */ element!(TcpIpArpPacketQueueEnabled, 298, ZeroOrOne, false, 0x0, NotRestricted, Some(3898)),
    /* 7802 */ element!(TcpIpArpRequestTimeout, 2229, ZeroOrOne, false, 0x0, NotRestricted, Some(4215)),
    /* 7803 */ element!(TcpIpArpTableEntryTimeout, 2229, ZeroOrOne, false, 0x0, NotRestricted, Some(4255)),
    /* 7804 */ element!(TcpIpAutoIpInitTimeout, 2229, ZeroOrOne, false, 0x0, NotRestricted, Some(4223)),
    /* 7805 */ element!(TcpIpDhcpV6CnfDelayMax, 2229, ZeroOrOne, false, 0x0, NotRestricted, Some(1476)),
    /* 7806 */ element!(TcpIpDhcpV6CnfDelayMin, 2229, ZeroOrOne, false, 0x0, NotRestricted, Some(1534)),
    /* 7807 */ element!(TcpIpDhcpV6InfDelayMax, 2229, ZeroOrOne, false, 0x0, NotRestricted, Some(1477)),
    /* 7808 */ element!(TcpIpDhcpV6InfDelayMin, 2229, ZeroOrOne, false, 0x0, NotRestricted, Some(1532)),
    /* 7809 */ element!(TcpIpDhcpV6SolDelayMax, 2229, ZeroOrOne, false, 0x0, NotRestricted, Some(1478)),
    /* 7810 */ element!(TcpIpDhcpV6SolDelayMin, 2229, ZeroOrOne, false, 0x0, NotRestricted, Some(1533)),
    /* 7811 */ element!(TcpIpIcmpPropsRef, 1836, One, false, 0x0, NotRestricted, None),
    /* 7812 */ element!(TcpIpIcmpPropsRef, 1836, ZeroOrOne, false, 0x0, ClassicPlatform, Some(948)),
    /* 7813 */ element!(TcpIpIcmpPropsRef, 1836, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(1408)),
    /* 7814 */ element!(TcpIpIcmpPropsRefs, 2907, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(1408)),
    /* 7815 */ element!(TcpIpIcmpV4EchoReplyEnabled, 298, ZeroOrOne, false, 0x0, NotRestricted, Some(3899)),
    /* 7816 */ element!(TcpIpIcmpV4Ttl, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(3990)),
    /* 7817 */ element!(TcpIpIcmpV6EchoReplyAvoidFragmentation, 298, ZeroOrOne, false, 0x0, NotRestricted, Some(3810)),
    /* 7818 */ element!(TcpIpIcmpV6EchoReplyEnabled, 298, ZeroOrOne, false, 0x0, NotRestricted, Some(3899)),
    /* 7819 */ element!(TcpIpIcmpV6HopLimit, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(459)),
    /* 7820 */ element!(TcpIpIcmpV6MsgDestinationUnreachableEnabled, 298, ZeroOrOne, false, 0x0, NotRestricted, Some(3492)),
    /* 7821 */ element!(TcpIpIcmpV6MsgParameterProblemEnabled, 298, ZeroOrOne, false, 0x0, NotRestricted, Some(1194)),
    /* 7822 */ element!(TcpIpIpFragmentationRxEnabled, 298, ZeroOrOne, false, 0x0, NotRestricted, Some(965)),
    /* 7823 */ element!(TcpIpIpNumFragments, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(2557)),
    /* 7824 */ element!(TcpIpIpNumReassDgrams, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(2560)),
    /* 7825 */ element!(TcpIpIpReassTimeout, 2229, ZeroOrOne, false, 0x0, NotRestricted, Some(2604)),
    /* 7826 */ element!(TcpIpIpReassemblyBufferCount, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(1613)),
    /* 7827 */ element!(TcpIpIpReassemblyBufferSize, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(2411)),
    /* 7828 */ element!(TcpIpIpReassemblySegmentCount, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(2559)),
    /* 7829 */ element!(TcpIpIpReassemblyTimeout, 2229, ZeroOrOne, false, 0x0, NotRestricted, Some(2605)),
    /* 7830 */ element!(TcpIpIpTxFragmentBufferCount, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(3199)),
    /* 7831 */ element!(TcpIpIpTxFragmentBufferSize, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(2411)),
    /* 7832 */ element!(TcpIpNdpDefaultReachableTime, 2229, ZeroOrOne, false, 0x0, NotRestricted, Some(385)),
    /* 7833 */ element!(TcpIpNdpDefaultRetransTimer, 2229, ZeroOrOne, false, 0x0, NotRestricted, Some(412)),
    /* 7834 */ element!(TcpIpNdpDefaultRouterListSize, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(1484)),
    /* 7835 */ element!(TcpIpNdpDefensiveProcessing, 298, ZeroOrOne, false, 0x0, NotRestricted, Some(1197)),
    /* 7836 */ element!(TcpIpNdpDelayFirstProbeTime, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(856)),
    /* 7837 */ element!(TcpIpNdpDelayFirstProbeTimeValue, 2229, ZeroOrOne, false, 0x0, NotRestricted, Some(856)),
    /* 7838 */ element!(TcpIpNdpDestinationCacheSize, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(1488)),
    /* 7839 */ element!(TcpIpNdpDynamicHopLimitEnabled, 298, ZeroOrOne, false, 0x0, NotRestricted, Some(1200)),
    /* 7840 */ element!(TcpIpNdpDynamicMtuEnabled, 298, ZeroOrOne, false, 0x0, NotRestricted, Some(115)),
    /* 7841 */ element!(TcpIpNdpDynamicReachableTimeEnabled, 298, ZeroOrOne, false, 0x0, NotRestricted, Some(1198)),
    /* 7842 */ element!(TcpIpNdpDynamicRetransTimeEnabled, 298, ZeroOrOne, false, 0x0, NotRestricted, Some(1199)),
    /* 7843 */ element!(TcpIpNdpMaxRandomFactor, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(1500)),
    /* 7844 */ element!(TcpIpNdpMaxRtrSolicitationDelay, 2229, ZeroOrOne, false, 0x0, NotRestricted, Some(1475)),
    /* 7845 */ element!(TcpIpNdpMaxRtrSolicitations, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(1482)),
    /* 7846 */ element!(TcpIpNdpMinRandomFactor, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(1541)),
    /* 7847 */ element!(TcpIpNdpNeighborUnreachabilityDetectionEnabled, 298, ZeroOrOne, false, 0x0, NotRestricted, Some(1571)),
    /* 7848 */ element!(TcpIpNdpNumMulticastSolicitations, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(1490)),
    /* 7849 */ element!(TcpIpNdpNumUnicastSolicitations, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(1497)),
    /* 7850 */ element!(TcpIpNdpPacketQueueEnabled, 298, ZeroOrOne, false, 0x0, NotRestricted, Some(971)),
    /* 7851 */ element!(TcpIpNdpPrefixListSize, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(1489)),
    /* 7852 */ element!(TcpIpNdpRandomReachableTimeEnabled, 298, ZeroOrOne, false, 0x0, NotRestricted, Some(1202)),
    /* 7853 */ element!(TcpIpNdpRndRtrSolicitationDelayEnabled, 298, ZeroOrOne, false, 0x0, NotRestricted, Some(1201)),
    /* 7854 */ element!(TcpIpNdpRtrSolicitationInterval, 2229, ZeroOrOne, false, 0x0, NotRestricted, Some(1343)),
    /* 7855 */ element!(TcpIpNdpSlaacDadNumberOfTransmissions, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(1602)),
    /* 7856 */ element!(TcpIpNdpSlaacDadRetransmissionDelay, 2229, ZeroOrOne, false, 0x0, NotRestricted, Some(2399)),
    /* 7857 */ element!(TcpIpNdpSlaacDelayEnabled, 298, ZeroOrOne, false, 0x0, NotRestricted, Some(1203)),
    /* 7858 */ element!(TcpIpNdpSlaacOptimisticDadEnabled, 298, ZeroOrOne, false, 0x0, NotRestricted, Some(956)),
    /* 7859 */ element!(TcpIpPropsRef, 1837, One, false, 0x0, NotRestricted, None),
    /* 7860 */ element!(TcpIpPropsRef, 1837, ZeroOrOne, false, 0x0, ClassicPlatform, Some(950)),
    /* 7861 */ element!(TcpIpPropsRef, 1837, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(1410)),
    /* 7862 */ element!(TcpIpPropsRefs, 2908, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(1410)),
    /* 7863 */ element!(TcpIpTlsUseSecurityExtensionForceEncryptThenMac, 298, ZeroOrOne, false, 0x0, NotRestricted, Some(521)),
    /* 7864 */ element!(TcpKeepAliveEnabled, 298, ZeroOrOne, false, 0x0, NotRestricted, Some(964)),
    /* 7865 */ element!(TcpKeepAliveInterval, 2229, ZeroOrOne, false, 0x0, NotRestricted, Some(2542)),
    /* 7866 */ element!(TcpKeepAliveProbesMax, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(1494)),
    /* 7867 */ element!(TcpKeepAliveTime, 2229, ZeroOrOne, false, 0x0, NotRestricted, Some(2600)),
    /* 7868 */ element!(TcpLocalPort, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(4191)),
    /* 7869 */ element!(TcpMaxRtx, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(1496)),
    /* 7870 */ element!(TcpMsl, 2229, ZeroOrOne, false, 0x0, NotRestricted, Some(1501)),
    /* 7871 */ element!(TcpNagleEnabled, 298, ZeroOrOne, false, 0x0, NotRestricted, Some(966)),
    /* 7872 */ element!(TcpOptionFilterList, 4663, One, false, 0x0, NotRestricted, None),
    /* 7873 */ element!(TcpOptionFilterLists, 4666, ZeroOrOne, false, 0x0, ClassicPlatform, Some(325)),
    /* 7874 */ element!(TcpOptionFilterSet, 4665, One, false, 0x0, NotRestricted, None),
    /* 7875 */ element!(TcpPort, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(2676)),
    /* 7876 */ element!(TcpPort, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(3507)),
    /* 7877 */ element!(TcpPort, 3494, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3761)),
    /* 7878 */ element!(TcpPort, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(3837)),
    /* 7879 */ element!(TcpPort, 3494, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3870)),
    /* 7880 */ element!(TcpPort, 3494, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(4117)),
    /* 7881 */ element!(TcpPort, 3494, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(4170)),
    /* 7882 */ element!(TcpPort, 3494, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(6040)),
    /* 7883 */ element!(TcpPort, 4909, ZeroOrOne, false, 0x0, NotRestricted, Some(2677)),
    /* 7884 */ element!(TcpPortRef, 4288, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(4913)),
    /* 7885 */ element!(TcpPortRef, 4288, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(6026)),
    /* 7886 */ element!(TcpProps, 4667, ZeroOrOne, false, 0x0, NotRestricted, Some(2667)),
    /* 7887 */ element!(TcpReceiveWindowMax, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(465)),
    /* 7888 */ element!(TcpRemotePort, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(4192)),
    /* 7889 */ element!(TcpRetransmissionTimeout, 2229, ZeroOrOne, false, 0x0, NotRestricted, Some(705)),
    /* 7890 */ element!(TcpRetransmissionTimeout, 2229, ZeroOrOne, false, 0x0, NotRestricted, Some(5881)),
    /* 7891 */ element!(TcpRole, 4668, ZeroOrOne, false, 0x0, NotRestricted, Some(765)),
    /* 7892 */ element!(TcpRule, 4669, One, false, 0x0, NotRestricted, None),
    /* 7893 */ element!(TcpSlowStartEnabled, 298, ZeroOrOne, false, 0x0, NotRestricted, Some(970)),
    /* 7894 */ element!(TcpSynMaxRtx, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(1495)),
    /* 7895 */ element!(TcpSynReceivedTimeout, 2229, ZeroOrOne, false, 0x0, NotRestricted, Some(5884)),
    /* 7896 */ element!(TcpTp, 4670, One, false, 0x0, NotRestricted, None),
    /* 7897 */ element!(TcpTpConfig, 4670, ZeroOrOne, false, 0x0, NotRestricted, Some(2678)),
    /* 7898 */ element!(TcpTpPort, 4859, ZeroOrOne, false, 0x0, NotRestricted, Some(2666)),
    /* 7899 */ element!(TcpTtl, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(460)),
    /* 7900 */ element!(TcpUdpConfig, 3800, ZeroOrOne, false, 0x0, NotRestricted, Some(2675)),
    /* 7901 */ element!(TdCpSoftwareClusterMapping, 4671, One, false, 0x0, NotRestricted, None),
    /* 7902 */ element!(TdCpSoftwareClusterMappingSet, 4674, One, false, 0x0, NotRestricted, None),
    /* 7903 */ element!(TdCpSoftwareClusterResourceMapping, 4678, One, false, 0x0, NotRestricted, None),
    /* 7904 */ element!(TdCpSoftwareClusterResourceToTdMappings, 4675, ZeroOrOne, false, 0x1F0000, ClassicPlatform, Some(1449)),
    /* 7905 */ element!(TdCpSoftwareClusterToTdMappings, 4676, ZeroOrOne, false, 0x1F0000, ClassicPlatform, Some(1452)),
    /* 7906 */ element!(TdEventBswInternalBehavior, 4680, One, false, 0x0, NotRestricted, None),
    /* 7907 */ element!(TdEventBswInternalBehaviorType, 4681, ZeroOrOne, false, 0x0, ClassicPlatform, Some(3133)),
    /* 7908 */ element!(TdEventBswModeDeclaration, 4682, One, false, 0x0, NotRestricted, None),
    /* 7909 */ element!(TdEventBswModeDeclarationType, 4683, ZeroOrOne, false, 0x0, ClassicPlatform, Some(3133)),
    /* 7910 */ element!(TdEventBswModule, 4684, One, false, 0x0, NotRestricted, None),
    /* 7911 */ element!(TdEventBswModuleType, 4685, ZeroOrOne, false, 0x0, ClassicPlatform, Some(3133)),
    /* 7912 */ element!(TdEventComplex, 4686, One, false, 0x0, NotRestricted, None),
    /* 7913 */ element!(TdEventFrClusterCycleStart, 4687, One, false, 0x0, NotRestricted, None),
    /* 7914 */ element!(TdEventFrame, 4689, One, false, 0x0, NotRestricted, None),
    /* 7915 */ element!(TdEventFrameEthernet, 4690, One, false, 0x0, NotRestricted, None),
    /* 7916 */ element!(TdEventIPdu, 4698, One, false, 0x0, NotRestricted, None),
    /* 7917 */ element!(TdEventISignal, 4701, One, false, 0x0, NotRestricted, None),
    /* 7918 */ element!(TdEventModeDeclaration, 4703, One, false, 0x0, NotRestricted, None),
    /* 7919 */ element!(TdEventModeDeclarationType, 4706, ZeroOrOne, false, 0x0, NotRestricted, Some(3133)),
    /* 7920 */ element!(TdEventOperation, 4714, One, false, 0x0, NotRestricted, None),
    /* 7921 */ element!(TdEventOperationType, 4716, ZeroOrOne, false, 0x0, NotRestricted, Some(3133)),
    /* 7922 */ element!(TdEventServiceInstanceDiscovery, 4717, One, false, 0x0, NotRestricted, None),
    /* 7923 */ element!(TdEventServiceInstanceDiscoveryType, 4718, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3133)),
    /* 7924 */ element!(TdEventServiceInstanceEvent, 4719, One, false, 0x0, NotRestricted, None),
    /* 7925 */ element!(TdEventServiceInstanceEventType, 4721, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3133)),
    /* 7926 */ element!(TdEventServiceInstanceField, 4722, One, false, 0x0, NotRestricted, None),
    /* 7927 */ element!(TdEventServiceInstanceFieldType, 4723, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3133)),
    /* 7928 */ element!(TdEventServiceInstanceMethod, 4724, One, false, 0x0, NotRestricted, None),
    /* 7929 */ element!(TdEventServiceInstanceMethodType, 4726, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3133)),
    /* 7930 */ element!(TdEventSlletPort, 4728, One, false, 0x0, NotRestricted, None),
    /* 7931 */ element!(TdEventSwcInternalBehavior, 4730, One, false, 0x0, NotRestricted, None),
    /* 7932 */ element!(TdEventSwcInternalBehaviorReference, 4731, One, false, 0x0, NotRestricted, None),
    /* 7933 */ element!(TdEventSwcInternalBehaviorType, 4733, ZeroOrOne, false, 0x0, ClassicPlatform, Some(3133)),
    /* 7934 */ element!(TdEventTrigger, 4735, One, false, 0x0, NotRestricted, None),
    /* 7935 */ element!(TdEventTriggerType, 4737, ZeroOrOne, false, 0x0, NotRestricted, Some(3133)),
    /* 7936 */ element!(TdEventTtCanCycleStart, 4738, One, false, 0x0, NotRestricted, None),
    /* 7937 */ element!(TdEventType, 4694, ZeroOrOne, false, 0x0, NotRestricted, Some(4852)),
    /* 7938 */ element!(TdEventType, 4697, ZeroOrOne, false, 0x0, NotRestricted, Some(3133)),
    /* 7939 */ element!(TdEventType, 4700, ZeroOrOne, false, 0x0, NotRestricted, Some(3133)),
    /* 7940 */ element!(TdEventType, 4702, ZeroOrOne, false, 0x0, NotRestricted, Some(3133)),
    /* 7941 */ element!(TdEventVariableDataPrototype, 4740, One, false, 0x0, NotRestricted, None),
    /* 7942 */ element!(TdEventVariableDataPrototypeType, 4742, ZeroOrOne, false, 0x0, NotRestricted, Some(3133)),
    /* 7943 */ element!(TdEventVfbPortGroup, 4743, One, false, 0x0, NotRestricted, None),
    /* 7944 */ element!(TdEventVfbPortRef, 4744, One, false, 0x0, NotRestricted, None),
    /* 7945 */ element!(TdEventVfbPortRefs, 4745, ZeroOrOne, false, 0x0, NotRestricted, Some(1139)),
    /* 7946 */ element!(TdEventVfbReference, 4749, One, false, 0x0, NotRestricted, None),
    /* 7947 */ element!(TdHeaderIdFilters, 4692, ZeroOrOne, false, 0x0, NotRestricted, Some(2539)),
    /* 7948 */ element!(TdHeaderIdRange, 4751, One, false, 0x0, NotRestricted, None),
    /* 7949 */ element!(TdPduTriggeringFilterRef, 4302, One, false, 0x0, NotRestricted, None),
    /* 7950 */ element!(TdPduTriggeringFilterRefs, 4693, ZeroOrOne, false, 0x0, NotRestricted, Some(2503)),
    /* 7951 */ element!(TdletZoneClock, 4752, One, false, 0x0, NotRestricted, None),
    /* 7952 */ element!(TearDownActionRef, 437, One, false, 0x0, NotRestricted, None),
    /* 7953 */ element!(TearDownActionRefs, 450, ZeroOrOne, false, 0x0, NotRestricted, Some(5815)),
    /* 7954 */ element!(TemperatureExp, 3140, ZeroOrOne, false, 0x0, NotRestricted, Some(2885)),
    /* 7955 */ element!(TemplateArguments, 830, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3221)),
    /* 7956 */ element!(TemplateArguments, 830, ZeroOrOne, true, 0x0, AdaptivePlatform, Some(3228)),
    /* 7957 */ element!(TemplateTypeRef, 833, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5112)),
    /* 7958 */ element!(TerminatingCheckpointRef, 3128, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(2151)),
    /* 7959 */ element!(TerminatingCheckpointTimeoutUntilTermination, 2229, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(693)),
    /* 7960 */ element!(TerminationBehavior, 4753, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3762)),
    /* 7961 */ element!(TestId, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(2679)),
    /* 7962 */ element!(TestIdRef, 1479, ZeroOrOne, false, 0x0, NotRestricted, Some(5755)),
    /* 7963 */ element!(TestIdentifier, 1633, ZeroOrOne, false, 0x0, NotRestricted, Some(4109)),
    /* 7964 */ element!(TestPattern, 4393, ZeroOrOne, false, 0x0, NotRestricted, Some(908)),
    /* 7965 */ element!(TestPattern, 5078, ZeroOrOne, false, 0x0, NotRestricted, Some(908)),
    /* 7966 */ element!(TestResultRef, 1502, ZeroOrOne, false, 0x0, NotRestricted, Some(5084)),
    /* 7967 */ element!(TestedItemRef, 4397, One, false, 0x0, NotRestricted, None),
    /* 7968 */ element!(TestedItemRefs, 4398, ZeroOrOne, false, 0x0, NotRestricted, Some(3478)),
    /* 7969 */ element!(TexMath, 3066, ZeroOrOne, false, 0x0, NotRestricted, Some(6051)),
    /* 7970 */ element!(Text, 4393, ZeroOrOne, false, 0x0, NotRestricted, Some(1148)),
    /* 7971 */ element!(Text, 4393, ZeroOrOne, false, 0x0, NotRestricted, Some(4847)),
    /* 7972 */ element!(Text, 5078, ZeroOrOne, false, 0x0, NotRestricted, Some(4847)),
    /* 7973 */ element!(TextTableMapping, 4754, One, false, 0x0, NotRestricted, None),
    /* 7974 */ element!(TextTableMappings, 973, ZeroOrOne, false, 0x0, NotRestricted, Some(162)),
    /* 7975 */ element!(TextTableMappings, 4401, ZeroOrOne, false, 0x0, NotRestricted, Some(3445)),
    /* 7976 */ element!(TextTableValuePair, 4756, One, false, 0x0, NotRestricted, None),
    /* 7977 */ element!(TextValueSpecification, 4757, One, false, 0x0, NotRestricted, None),
    /* 7978 */ element!(TextualCondition, 4758, One, false, 0x0, NotRestricted, None),
    /* 7979 */ element!(Tfoot, 4660, ZeroOrOne, false, 0x0, NotRestricted, Some(5614)),
    /* 7980 */ element!(Tgroup, 4759, Any, true, 0x0, NotRestricted, Some(67)),
    /* 7981 */ element!(Thead, 4660, ZeroOrOne, false, 0x0, NotRestricted, Some(5620)),
    /* 7982 */ element!(Threshold, 2231, ZeroOrOne, false, 0x0, NotRestricted, Some(1605)),
    /* 7983 */ element!(Threshold, 3934, ZeroOrOne, false, 0x0, NotRestricted, Some(3431)),
    /* 7984 */ element!(ThresholdNumber, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(3551)),
    /* 7985 */ element!(ThresholdSize, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(688)),
    /* 7986 */ element!(TimeBase, 2229, ZeroOrOne, false, 0x0, ClassicPlatform, Some(5863)),
    /* 7987 */ element!(TimeBase, 5077, ZeroOrOne, false, 0x0, NotRestricted, Some(5864)),
    /* 7988 */ element!(TimeBaseConsumerRef, 1107, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5162)),
    /* 7989 */ element!(TimeBaseJitter, 2229, ZeroOrOne, false, 0x0, ClassicPlatform, Some(2802)),
    /* 7990 */ element!(TimeBaseJitter, 5077, ZeroOrOne, false, 0x0, NotRestricted, Some(2803)),
    /* 7991 */ element!(TimeBaseKind, 4777, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(790)),
    /* 7992 */ element!(TimeBaseProviderRef, 4762, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5244)),
    /* 7993 */ element!(TimeBaseProviderToPersistencyMapping, 4760, One, false, 0x0, NotRestricted, None),
    /* 7994 */ element!(TimeBaseResourceRef, 2843, One, false, 0x0, NotRestricted, None),
    /* 7995 */ element!(TimeBaseResourceRef, 2843, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(2207)),
    /* 7996 */ element!(TimeBaseResourceRef, 2843, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5181)),
    /* 7997 */ element!(TimeBaseResourceRef, 4764, ZeroOrOne, false, 0x0, NotRestricted, None),
    /* 7998 */ element!(TimeBaseResourceRef, 4955, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5147)),
    /* 7999 */ element!(TimeBaseResourceRefConditional, 4763, One, false, 0x0, NotRestricted, None),
    /* 8000 */ element!(TimeBaseResourceRefs, 2844, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5181)),
    /* 8001 */ element!(TimeBasedFdcThresholdStorageValue, 4781, ZeroOrOne, false, 0x0, NotRestricted, Some(5855)),
    /* 8002 */ element!(TimeBases, 2511, ZeroOrOne, false, 0x1C0000, AdaptivePlatform, Some(5086)),
    /* 8003 */ element!(TimeBases, 4771, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3277)),
    /* 8004 */ element!(TimeBr, 2229, ZeroOrOne, false, 0x0, NotRestricted, Some(3765)),
    /* 8005 */ element!(TimeBr, 2229, ZeroOrOne, false, 0x0, ClassicPlatform, Some(5862)),
    /* 8006 */ element!(TimeBr, 5077, ZeroOrOne, false, 0x0, NotRestricted, Some(5862)),
    /* 8007 */ element!(TimeBuffer, 2229, ZeroOrOne, false, 0x0, NotRestricted, Some(1726)),
    /* 8008 */ element!(TimeBuffer, 2229, ZeroOrOne, false, 0x0, ClassicPlatform, Some(4879)),
    /* 8009 */ element!(TimeBuffer, 5077, ZeroOrOne, false, 0x0, NotRestricted, Some(4879)),
    /* 8010 */ element!(TimeCs, 2229, ZeroOrOne, false, 0x0, NotRestricted, Some(3766)),
    /* 8011 */ element!(TimeCs, 2229, ZeroOrOne, false, 0x0, ClassicPlatform, Some(5861)),
    /* 8012 */ element!(TimeCs, 5077, ZeroOrOne, false, 0x0, NotRestricted, Some(5860)),
    /* 8013 */ element!(TimeExp, 3140, ZeroOrOne, false, 0x0, NotRestricted, Some(2886)),
    /* 8014 */ element!(TimeFailedThreshold, 4781, ZeroOrOne, false, 0x0, NotRestricted, Some(5843)),
    /* 8015 */ element!(TimeFrIf, 2229, ZeroOrOne, false, 0x0, NotRestricted, Some(1723)),
    /* 8016 */ element!(TimeFrIf, 2229, ZeroOrOne, false, 0x0, ClassicPlatform, Some(4880)),
    /* 8017 */ element!(TimeFrIf, 5077, ZeroOrOne, false, 0x0, NotRestricted, Some(4880)),
    /* 8018 */ element!(TimeHardwareCorrectionThreshold, 2229, ZeroOrOne, false, 0x0, NotRestricted, Some(3520)),
    /* 8019 */ element!(TimeInterval, 2229, ZeroOrOne, false, 0x0, NotRestricted, Some(3547)),
    /* 8020 */ element!(TimeInterval, 2229, ZeroOrOne, false, 0x0, NotRestricted, Some(3548)),
    /* 8021 */ element!(TimeInterval, 2229, ZeroOrOne, false, 0x0, NotRestricted, Some(5873)),
    /* 8022 */ element!(TimeLeapFutureThreshold, 2229, ZeroOrOne, false, 0x0, NotRestricted, Some(641)),
    /* 8023 */ element!(TimeLeapHealingCounter, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(671)),
    /* 8024 */ element!(TimeLeapPastThreshold, 2229, ZeroOrOne, false, 0x0, NotRestricted, Some(640)),
    /* 8025 */ element!(TimeMark, 2642, ZeroOrOne, false, 0x0, NotRestricted, Some(6006)),
    /* 8026 */ element!(TimeMasterPriority, 2642, ZeroOrOne, false, 0x0, NotRestricted, Some(3153)),
    /* 8027 */ element!(TimeOffset, 4765, ZeroOrOne, false, 0x0, NotRestricted, Some(4254)),
    /* 8028 */ element!(TimePassedThreshold, 4781, ZeroOrOne, false, 0x0, NotRestricted, Some(5844)),
    /* 8029 */ element!(TimePeriod, 4765, ZeroOrOne, false, 0x0, NotRestricted, Some(1716)),
    /* 8030 */ element!(TimeSeg1, 2642, ZeroOrOne, false, 0x0, NotRestricted, Some(2481)),
    /* 8031 */ element!(TimeSeg1, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(2480)),
    /* 8032 */ element!(TimeSeg2, 2642, ZeroOrOne, false, 0x0, NotRestricted, Some(2483)),
    /* 8033 */ element!(TimeSeg2, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(2482)),
    /* 8034 */ element!(TimeSubTlv, 298, ZeroOrOne, false, 0x0, NotRestricted, Some(731)),
    /* 8035 */ element!(TimeSyncClient, 4767, ZeroOrOne, false, 0x0, NotRestricted, Some(386)),
    /* 8036 */ element!(TimeSyncCorrection, 4769, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3276)),
    /* 8037 */ element!(TimeSyncModuleInstantiation, 4770, One, false, 0x0, NotRestricted, None),
    /* 8038 */ element!(TimeSyncPPortPrototypeIref, 3206, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(1333)),
    /* 8039 */ element!(TimeSyncPortPrototypeIref, 3596, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(1334)),
    /* 8040 */ element!(TimeSyncPortPrototypeToTimeBaseMapping, 4772, One, false, 0x0, NotRestricted, None),
    /* 8041 */ element!(TimeSyncRPortPrototypeIref, 3596, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(1335)),
    /* 8042 */ element!(TimeSyncServer, 4774, ZeroOrOne, false, 0x0, NotRestricted, Some(387)),
    /* 8043 */ element!(TimeSyncServerIdentifier, 4393, ZeroOrOne, false, 0x0, NotRestricted, Some(1183)),
    /* 8044 */ element!(TimeSyncServerRef, 3189, ZeroOrOne, false, 0x0, NotRestricted, Some(1925)),
    /* 8045 */ element!(TimeSyncTechnology, 4775, ZeroOrOne, false, 0x0, NotRestricted, Some(700)),
    /* 8046 */ element!(TimeSyncTechnology, 4775, ZeroOrOne, false, 0x0, NotRestricted, Some(701)),
    /* 8047 */ element!(TimeSynchronization, 4776, ZeroOrOne, false, 0x0, ClassicPlatform, Some(683)),
    /* 8048 */ element!(TimeSynchronizationMasterInterface, 4778, One, false, 0x0, NotRestricted, None),
    /* 8049 */ element!(TimeSynchronizationPureLocalInterface, 4779, One, false, 0x0, NotRestricted, None),
    /* 8050 */ element!(TimeSynchronizationSlaveInterface, 4780, One, false, 0x0, NotRestricted, None),
    /* 8051 */ element!(TimeToLive, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(696)),
    /* 8052 */ element!(TimeToLive, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(697)),
    /* 8053 */ element!(TimeTriggeredCanLevel, 2642, ZeroOrOne, false, 0x0, NotRestricted, Some(1643)),
    /* 8054 */ element!(TimeValue, 3068, One, false, 0x0, NotRestricted, None),
    /* 8055 */ element!(TimeValueValueVariationPoint, 4781, One, false, 0x0, NotRestricted, None),
    /* 8056 */ element!(Timeout, 1976, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3263)),
    /* 8057 */ element!(Timeout, 1976, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3264)),
    /* 8058 */ element!(Timeout, 1976, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3285)),
    /* 8059 */ element!(Timeout, 2229, ZeroOrOne, false, 0x0, NotRestricted, Some(16)),
    /* 8060 */ element!(Timeout, 2229, ZeroOrOne, false, 0x0, NotRestricted, Some(480)),
    /* 8061 */ element!(Timeout, 2229, ZeroOrOne, false, 0x0, NotRestricted, Some(1625)),
    /* 8062 */ element!(Timeout, 2229, ZeroOrOne, false, 0x0, NotRestricted, Some(1626)),
    /* 8063 */ element!(Timeout, 2229, ZeroOrOne, false, 0x0, NotRestricted, Some(3767)),
    /* 8064 */ element!(Timeout, 2229, ZeroOrOne, false, 0x0, NotRestricted, Some(5868)),
    /* 8065 */ element!(Timeout, 2229, ZeroOrOne, false, 0x0, ClassicPlatform, Some(5869)),
    /* 8066 */ element!(Timeout, 5077, ZeroOrOne, false, 0x0, NotRestricted, Some(1625)),
    /* 8067 */ element!(Timeout, 5077, ZeroOrOne, false, 0x0, NotRestricted, Some(1626)),
    /* 8068 */ element!(Timeout, 5077, ZeroOrOne, false, 0x0, NotRestricted, Some(1686)),
    /* 8069 */ element!(Timeout, 5077, ZeroOrOne, false, 0x0, NotRestricted, Some(5868)),
    /* 8070 */ element!(Timeout, 5077, ZeroOrOne, false, 0x0, NotRestricted, Some(5869)),
    /* 8071 */ element!(TimeoutAr, 2229, ZeroOrOne, false, 0x0, ClassicPlatform, Some(4273)),
    /* 8072 */ element!(TimeoutAr, 2229, ZeroOrOne, false, 0x0, NotRestricted, Some(4275)),
    /* 8073 */ element!(TimeoutAr, 2229, ZeroOrOne, false, 0x0, ClassicPlatform, Some(4893)),
    /* 8074 */ element!(TimeoutAr, 5077, ZeroOrOne, false, 0x0, NotRestricted, Some(4273)),
    /* 8075 */ element!(TimeoutAr, 5077, ZeroOrOne, false, 0x0, NotRestricted, Some(4893)),
    /* 8076 */ element!(TimeoutAs, 2229, ZeroOrOne, false, 0x0, ClassicPlatform, Some(4271)),
    /* 8077 */ element!(TimeoutAs, 2229, ZeroOrOne, false, 0x0, ClassicPlatform, Some(4272)),
    /* 8078 */ element!(TimeoutAs, 2229, ZeroOrOne, false, 0x0, NotRestricted, Some(4274)),
    /* 8079 */ element!(TimeoutAs, 2229, ZeroOrOne, false, 0x0, ClassicPlatform, Some(5866)),
    /* 8080 */ element!(TimeoutAs, 5077, ZeroOrOne, false, 0x0, NotRestricted, Some(4271)),
    /* 8081 */ element!(TimeoutAs, 5077, ZeroOrOne, false, 0x0, NotRestricted, Some(4272)),
    /* 8082 */ element!(TimeoutBr, 2229, ZeroOrOne, false, 0x0, ClassicPlatform, Some(4256)),
    /* 8083 */ element!(TimeoutBr, 2229, ZeroOrOne, false, 0x0, ClassicPlatform, Some(5956)),
    /* 8084 */ element!(TimeoutBr, 5077, ZeroOrOne, false, 0x0, NotRestricted, Some(5956)),
    /* 8085 */ element!(TimeoutBs, 2229, ZeroOrOne, false, 0x0, NotRestricted, Some(3772)),
    /* 8086 */ element!(TimeoutBs, 2229, ZeroOrOne, false, 0x0, ClassicPlatform, Some(4881)),
    /* 8087 */ element!(TimeoutBs, 2229, ZeroOrOne, false, 0x0, ClassicPlatform, Some(4882)),
    /* 8088 */ element!(TimeoutBs, 5077, ZeroOrOne, false, 0x0, NotRestricted, Some(4882)),
    /* 8089 */ element!(TimeoutBs, 5077, ZeroOrOne, false, 0x0, NotRestricted, Some(4885)),
    /* 8090 */ element!(TimeoutCheck, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(3643)),
    /* 8091 */ element!(TimeoutCr, 2229, ZeroOrOne, false, 0x0, ClassicPlatform, Some(3774)),
    /* 8092 */ element!(TimeoutCr, 2229, ZeroOrOne, false, 0x0, NotRestricted, Some(3775)),
    /* 8093 */ element!(TimeoutCr, 2229, ZeroOrOne, false, 0x0, ClassicPlatform, Some(4883)),
    /* 8094 */ element!(TimeoutCr, 2229, ZeroOrOne, false, 0x0, ClassicPlatform, Some(4884)),
    /* 8095 */ element!(TimeoutCr, 5077, ZeroOrOne, false, 0x0, NotRestricted, Some(4883)),
    /* 8096 */ element!(TimeoutCr, 5077, ZeroOrOne, false, 0x0, NotRestricted, Some(4884)),
    /* 8097 */ element!(TimeoutCs, 2229, ZeroOrOne, false, 0x0, ClassicPlatform, Some(2804)),
    /* 8098 */ element!(TimeoutCs, 2229, ZeroOrOne, false, 0x0, ClassicPlatform, Some(4257)),
    /* 8099 */ element!(TimeoutCs, 5077, ZeroOrOne, false, 0x0, NotRestricted, Some(2804)),
    /* 8100 */ element!(TimeoutSubstitutionValue, 2485, ZeroOrOne, false, 0x0, NotRestricted, Some(502)),
    /* 8101 */ element!(TimeoutSubstitutionValue, 2485, ZeroOrOne, false, 0x0, ClassicPlatform, Some(4164)),
    /* 8102 */ element!(TimestampFormat, 4393, ZeroOrOne, false, 0x0, NotRestricted, Some(2870)),
    /* 8103 */ element!(TimestampInterval, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(228)),
    /* 8104 */ element!(TimestampRxAcceptanceWindow, 2229, ZeroOrOne, false, 0x0, NotRestricted, Some(4006)),
    /* 8105 */ element!(TimestampSupport, 298, ZeroOrOne, false, 0x0, ClassicPlatform, Some(3795)),
    /* 8106 */ element!(TimingArgumentRef, 4787, One, false, 0x0, NotRestricted, Some(5308)),
    /* 8107 */ element!(TimingArguments, 4796, ZeroOrOne, false, 0x1FFF00, NotRestricted, Some(5311)),
    /* 8108 */ element!(TimingClockSyncAccuracy, 4783, One, false, 0x0, NotRestricted, None),
    /* 8109 */ element!(TimingClockSyncAccuracys, 4798, ZeroOrOne, false, 0x1C0000, NotRestricted, Some(44)),
    /* 8110 */ element!(TimingClocks, 4799, ZeroOrOne, false, 0x1C0000, NotRestricted, Some(43)),
    /* 8111 */ element!(TimingCondition, 4785, One, false, 0x0, NotRestricted, None),
    /* 8112 */ element!(TimingConditionFormula, 4786, ZeroOrOne, false, 0x0, NotRestricted, Some(4787)),
    /* 8113 */ element!(TimingConditionRef, 4791, ZeroOrOne, false, 0x0, NotRestricted, Some(68)),
    /* 8114 */ element!(TimingConditionRef, 4791, One, false, 0x0, NotRestricted, Some(5305)),
    /* 8115 */ element!(TimingConditions, 4800, ZeroOrOne, false, 0x1F0000, NotRestricted, Some(3154)),
    /* 8116 */ element!(TimingConditions, 4800, ZeroOrOne, false, 0x1FE000, NotRestricted, Some(3154)),
    /* 8117 */ element!(TimingConditions, 4800, ZeroOrOne, false, 0x1FFF00, NotRestricted, Some(3154)),
    /* 8118 */ element!(TimingDescriptionEventChain, 4792, One, false, 0x0, NotRestricted, None),
    /* 8119 */ element!(TimingDescriptionRef, 4677, ZeroOrOne, false, 0x0, ClassicPlatform, Some(3157)),
    /* 8120 */ element!(TimingDescriptions, 4801, ZeroOrOne, false, 0x1F0000, NotRestricted, Some(3158)),
    /* 8121 */ element!(TimingDescriptions, 4801, ZeroOrOne, false, 0x1FE000, NotRestricted, Some(3158)),
    /* 8122 */ element!(TimingDescriptions, 4801, ZeroOrOne, false, 0x1FFFC0, NotRestricted, Some(3158)),
    /* 8123 */ element!(TimingEvent, 4794, One, false, 0x0, NotRestricted, None),
    /* 8124 */ element!(TimingEventRef, 3147, ZeroOrOne, false, 0x0, ClassicPlatform, Some(6056)),
    /* 8125 */ element!(TimingEventRef, 4788, One, false, 0x0, NotRestricted, Some(5306)),
    /* 8126 */ element!(TimingGuarantees, 4802, ZeroOrOne, false, 0x1F0000, NotRestricted, Some(3155)),
    /* 8127 */ element!(TimingGuarantees, 4802, ZeroOrOne, false, 0x1FE000, NotRestricted, Some(3155)),
    /* 8128 */ element!(TimingGuarantees, 4802, ZeroOrOne, false, 0x1FFFC0, NotRestricted, Some(3155)),
    /* 8129 */ element!(TimingModeInstance, 4803, One, false, 0x0, NotRestricted, None),
    /* 8130 */ element!(TimingModeRef, 4789, One, false, 0x0, NotRestricted, Some(5301)),
    /* 8131 */ element!(TimingModes, 4712, ZeroOrOne, false, 0x1FFF00, NotRestricted, Some(5309)),
    /* 8132 */ element!(TimingProps, 4295, ZeroOrOne, false, 0x0, NotRestricted, Some(338)),
    /* 8133 */ element!(TimingProps, 4295, ZeroOrOne, false, 0x0, NotRestricted, Some(339)),
    /* 8134 */ element!(TimingRequirements, 4802, ZeroOrOne, false, 0x1F0000, NotRestricted, Some(3156)),
    /* 8135 */ element!(TimingRequirements, 4802, ZeroOrOne, false, 0x1FE000, NotRestricted, Some(3156)),
    /* 8136 */ element!(TimingRequirements, 4802, ZeroOrOne, false, 0x1FFFC0, NotRestricted, Some(3156)),
    /* 8137 */ element!(TimingResource, 4795, ZeroOrOne, false, 0x1F0000, NotRestricted, Some(3161)),
    /* 8138 */ element!(TimingResource, 4795, ZeroOrOne, false, 0x1FE000, NotRestricted, Some(3161)),
    /* 8139 */ element!(TimingResource, 4795, ZeroOrOne, false, 0x1FFF00, NotRestricted, Some(3161)),
    /* 8140 */ element!(TimingVariableRef, 4790, One, false, 0x0, NotRestricted, Some(5307)),
    /* 8141 */ element!(TimingVariables, 4797, ZeroOrOne, false, 0x1FFF00, NotRestricted, Some(5310)),
    /* 8142 */ element!(TlsCipherSuite, 4805, One, false, 0x0, NotRestricted, None),
    /* 8143 */ element!(TlsCipherSuites, 4842, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(247)),
    /* 8144 */ element!(TlsCipherSuites, 4842, ZeroOrOne, false, 0x0, NotRestricted, Some(3379)),
    /* 8145 */ element!(TlsConnectionGroup, 4807, One, false, 0x0, NotRestricted, None),
    /* 8146 */ element!(TlsConnectionRef, 4808, One, false, 0x0, NotRestricted, None),
    /* 8147 */ element!(TlsConnectionRefs, 4809, ZeroOrOne, false, 0x0, NotRestricted, Some(1796)),
    /* 8148 */ element!(TlsCryptoCipherSuite, 4810, One, false, 0x0, NotRestricted, None),
    /* 8149 */ element!(TlsCryptoMappingRef, 176, ZeroOrOne, false, 0x0, NotRestricted, Some(5061)),
    /* 8150 */ element!(TlsCryptoServiceMapping, 4821, One, false, 0x0, NotRestricted, None),
    /* 8151 */ element!(TlsDeployment, 4822, One, false, 0x0, NotRestricted, None),
    /* 8152 */ element!(TlsIamRemoteSubject, 4825, One, false, 0x0, NotRestricted, None),
    /* 8153 */ element!(TlsJobMapping, 4831, One, false, 0x0, NotRestricted, None),
    /* 8154 */ element!(TlsJobMappings, 4824, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(1441)),
    /* 8155 */ element!(TlsJobRequirement, 4834, One, false, 0x0, NotRestricted, None),
    /* 8156 */ element!(TlsJobRequirementRef, 4833, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(1887)),
    /* 8157 */ element!(TlsJobSemantic, 4835, ZeroOrOne, false, 0x0, NotRestricted, Some(3671)),
    /* 8158 */ element!(TlsSecureComProps, 4838, One, false, 0x0, NotRestricted, None),
    /* 8159 */ element!(TlsSecureComProps, 4838, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3307)),
    /* 8160 */ element!(TlsSecureComPropsRef, 2052, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5203)),
    /* 8161 */ element!(TlsSecureComPropsRef, 3706, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5577)),
    /* 8162 */ element!(TlvAppRecordElementInMethodIref, 197, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(4915)),
    /* 8163 */ element!(TlvAppRecordElementInServiceInterfaceIref, 198, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(4916)),
    /* 8164 */ element!(TlvArgumentRef, 4847, ZeroOrOne, false, 0x0, NotRestricted, Some(4919)),
    /* 8165 */ element!(TlvDataId, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(4096)),
    /* 8166 */ element!(TlvDataId0Ref, 4306, One, false, 0x0, NotRestricted, None),
    /* 8167 */ element!(TlvDataId0Refs, 4307, ZeroOrOne, false, 0x0, NotRestricted, Some(5027)),
    /* 8168 */ element!(TlvDataIdDefinition, 4844, One, false, 0x0, NotRestricted, None),
    /* 8169 */ element!(TlvDataIdDefinitionRef, 4306, One, false, 0x0, NotRestricted, None),
    /* 8170 */ element!(TlvDataIdDefinitionRef, 4308, One, false, 0x0, NotRestricted, None),
    /* 8171 */ element!(TlvDataIdDefinitionRefs, 4309, ZeroOrOne, false, 0x0, NotRestricted, Some(5026)),
    /* 8172 */ element!(TlvDataIdDefinitionRefs, 4881, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5028)),
    /* 8173 */ element!(TlvDataIdDefinitionSet, 4845, One, false, 0x0, NotRestricted, None),
    /* 8174 */ element!(TlvDataIdDefinitions, 4846, ZeroOrOne, false, 0x1F8000, NotRestricted, Some(3343)),
    /* 8175 */ element!(TlvDataIds, 4310, ZeroOrOne, false, 0x1FE000, NotRestricted, Some(3380)),
    /* 8176 */ element!(TlvDataIds, 4882, ZeroOrOne, false, 0x6000, AdaptivePlatform, Some(3380)),
    /* 8177 */ element!(TlvImplRecordElement, 2595, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3311)),
    /* 8178 */ element!(TlvImplementationDataTypeElementRef, 4848, ZeroOrOne, false, 0x0, NotRestricted, Some(4920)),
    /* 8179 */ element!(TlvRecordElementRef, 4849, ZeroOrOne, false, 0x0, NotRestricted, Some(4921)),
    /* 8180 */ element!(TlvSubElementRef, 4850, ZeroOrOne, false, 0x1E000, AdaptivePlatform, Some(4922)),
    /* 8181 */ element!(ToRef, 330, ZeroOrOne, false, 0x0, ClassicPlatform, Some(5916)),
    /* 8182 */ element!(Tol, 3140, ZeroOrOne, false, 0x0, NotRestricted, Some(5771)),
    /* 8183 */ element!(Tolerance, 3068, ZeroOrOne, false, 0x0, NotRestricted, Some(2973)),
    /* 8184 */ element!(Tolerance, 4766, ZeroOrOne, false, 0x0, NotRestricted, Some(1684)),
    /* 8185 */ element!(ToleratedFailedCycles, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(1616)),
    /* 8186 */ element!(Tool, 4393, ZeroOrOne, false, 0x0, NotRestricted, Some(4384)),
    /* 8187 */ element!(Tool, 5078, ZeroOrOne, false, 0x0, NotRestricted, Some(4383)),
    /* 8188 */ element!(ToolVersion, 4393, ZeroOrOne, false, 0x0, NotRestricted, Some(4382)),
    /* 8189 */ element!(ToolVersion, 5078, ZeroOrOne, false, 0x0, NotRestricted, Some(4382)),
    /* 8190 */ element!(Topic1, 4851, One, false, 0xC0000, NotRestricted, Some(4851)),
    /* 8191 */ element!(Topic1, 4851, Any, true, 0x0, NotRestricted, Some(5427)),
    /* 8192 */ element!(TopicData, 1085, ZeroOrOne, false, 0x0, NotRestricted, Some(558)),
    /* 8193 */ element!(TopicData, 4393, ZeroOrOne, false, 0x0, NotRestricted, Some(2347)),
    /* 8194 */ element!(TopicName, 4393, ZeroOrOne, false, 0x0, NotRestricted, Some(823)),
    /* 8195 */ element!(TopicName, 4393, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(1568)),
    /* 8196 */ element!(TpAddress, 2642, ZeroOrOne, false, 0x0, NotRestricted, Some(124)),
    /* 8197 */ element!(TpAddress, 2642, ZeroOrOne, false, 0x0, ClassicPlatform, Some(124)),
    /* 8198 */ element!(TpAddress, 4393, ZeroOrOne, false, 0x0, NotRestricted, Some(5908)),
    /* 8199 */ element!(TpAddress, 4854, One, false, 0x0, NotRestricted, None),
    /* 8200 */ element!(TpAddressExtensionValue, 2642, ZeroOrOne, false, 0x0, ClassicPlatform, Some(1241)),
    /* 8201 */ element!(TpAddressRef, 529, ZeroOrOne, false, 0x0, ClassicPlatform, Some(2161)),
    /* 8202 */ element!(TpAddressRef, 2187, ZeroOrOne, false, 0x0, NotRestricted, Some(2161)),
    /* 8203 */ element!(TpAddressRef, 2829, One, false, 0x0, NotRestricted, None),
    /* 8204 */ element!(TpAddressRef, 2829, ZeroOrOne, false, 0x0, ClassicPlatform, Some(2161)),
    /* 8205 */ element!(TpAddressRef, 2829, ZeroOrOne, false, 0x0, ClassicPlatform, Some(2162)),
    /* 8206 */ element!(TpAddressRefs, 1838, ZeroOrOne, false, 0x0, NotRestricted, Some(1731)),
    /* 8207 */ element!(TpAddresss, 516, ZeroOrOne, false, 0x1C0000, ClassicPlatform, Some(302)),
    /* 8208 */ element!(TpAddresss, 2175, ZeroOrOne, false, 0x1C0000, NotRestricted, Some(306)),
    /* 8209 */ element!(TpAddresss, 2822, ZeroOrOne, false, 0x1C0000, ClassicPlatform, Some(303)),
    /* 8210 */ element!(TpAddresss, 2822, ZeroOrOne, false, 0x1C0000, ClassicPlatform, Some(307)),
    /* 8211 */ element!(TpChannelRef, 4301, ZeroOrOne, false, 0x0, NotRestricted, Some(168)),
    /* 8212 */ element!(TpChannels, 517, ZeroOrOne, false, 0x1C0000, ClassicPlatform, Some(359)),
    /* 8213 */ element!(TpChannels, 2176, ZeroOrOne, false, 0x1C0000, NotRestricted, Some(357)),
    /* 8214 */ element!(TpChannels, 4298, ZeroOrOne, false, 0x0, NotRestricted, Some(799)),
    /* 8215 */ element!(TpConfiguration, 86, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(388)),
    /* 8216 */ element!(TpConfiguration, 177, ZeroOrOne, false, 0x0, NotRestricted, Some(388)),
    /* 8217 */ element!(TpConnectionControlRef, 2223, ZeroOrOne, false, 0x0, ClassicPlatform, Some(2179)),
    /* 8218 */ element!(TpConnectionControls, 2214, ZeroOrOne, false, 0x1C0000, ClassicPlatform, Some(361)),
    /* 8219 */ element!(TpConnectionRef, 1777, One, false, 0x0, NotRestricted, None),
    /* 8220 */ element!(TpConnectionRefs, 1778, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(1888)),
    /* 8221 */ element!(TpConnections, 518, ZeroOrOne, false, 0x1C0000, ClassicPlatform, Some(2357)),
    /* 8222 */ element!(TpConnections, 1792, ZeroOrOne, false, 0x0, NotRestricted, Some(340)),
    /* 8223 */ element!(TpConnections, 2010, ZeroOrOne, false, 0x0, NotRestricted, Some(2362)),
    /* 8224 */ element!(TpConnections, 2173, ZeroOrOne, false, 0x0, NotRestricted, Some(1140)),
    /* 8225 */ element!(TpConnections, 2215, ZeroOrOne, false, 0x1C0000, ClassicPlatform, Some(362)),
    /* 8226 */ element!(TpConnections, 2572, ZeroOrOne, false, 0x180000, NotRestricted, Some(277)),
    /* 8227 */ element!(TpConnections, 2738, ZeroOrOne, false, 0x1C0000, ClassicPlatform, Some(364)),
    /* 8228 */ element!(TpConnections, 2823, ZeroOrOne, false, 0x1C0000, ClassicPlatform, Some(365)),
    /* 8229 */ element!(TpConnections, 4299, ZeroOrOne, false, 0x0, NotRestricted, Some(2362)),
    /* 8230 */ element!(TpEcu, 4857, One, false, 0x0, NotRestricted, None),
    /* 8231 */ element!(TpEcus, 519, ZeroOrOne, false, 0x1C0000, ClassicPlatform, Some(305)),
    /* 8232 */ element!(TpEcus, 2216, ZeroOrOne, false, 0x1C0000, ClassicPlatform, Some(304)),
    /* 8233 */ element!(TpNodes, 520, ZeroOrOne, false, 0x1C0000, ClassicPlatform, Some(2358)),
    /* 8234 */ element!(TpNodes, 2177, ZeroOrOne, false, 0x1C0000, NotRestricted, Some(2356)),
    /* 8235 */ element!(TpNodes, 2217, ZeroOrOne, false, 0x1C0000, ClassicPlatform, Some(2359)),
    /* 8236 */ element!(TpNodes, 2739, ZeroOrOne, false, 0x1C0000, ClassicPlatform, Some(2360)),
    /* 8237 */ element!(TpNodes, 2824, ZeroOrOne, false, 0x1C0000, ClassicPlatform, Some(2361)),
    /* 8238 */ element!(TpPgs, 2744, ZeroOrOne, false, 0x0, ClassicPlatform, Some(1346)),
    /* 8239 */ element!(TpProtocolType, 2752, ZeroOrOne, false, 0x0, ClassicPlatform, Some(1768)),
    /* 8240 */ element!(TpSduRef, 1795, ZeroOrOne, false, 0x0, NotRestricted, Some(5178)),
    /* 8241 */ element!(TpSduRef, 2012, One, false, 0x0, NotRestricted, None),
    /* 8242 */ element!(TpSduRef, 2751, ZeroOrOne, false, 0x0, ClassicPlatform, Some(1808)),
    /* 8243 */ element!(TpSduRef, 4302, ZeroOrOne, false, 0x0, NotRestricted, Some(1961)),
    /* 8244 */ element!(TpSduRef, 4699, One, false, 0x0, NotRestricted, None),
    /* 8245 */ element!(TpSduRef, 4699, ZeroOrOne, false, 0x0, ClassicPlatform, Some(1961)),
    /* 8246 */ element!(TpSduRefs, 2013, ZeroOrOne, false, 0x0, NotRestricted, Some(1866)),
    /* 8247 */ element!(TpSduRefs, 2745, ZeroOrOne, false, 0x0, ClassicPlatform, Some(1734)),
    /* 8248 */ element!(TpTechnology, 4393, ZeroOrOne, false, 0x0, NotRestricted, Some(1570)),
    /* 8249 */ element!(Trace, 4864, One, false, 0x0, NotRestricted, Some(5766)),
    /* 8250 */ element!(Trace, 4864, One, false, 0xC0000, NotRestricted, Some(5766)),
    /* 8251 */ element!(TraceMessageRef, 4861, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(2072)),
    /* 8252 */ element!(TraceRef, 151, ZeroOrOne, false, 0x0, NotRestricted, Some(5300)),
    /* 8253 */ element!(TraceRef, 2985, One, false, 0x0, NotRestricted, Some(3451)),
    /* 8254 */ element!(TraceRef, 4865, One, false, 0x0, NotRestricted, None),
    /* 8255 */ element!(TraceRefs, 4866, ZeroOrOne, false, 0x0, NotRestricted, Some(3479)),
    /* 8256 */ element!(TraceSwitch, 4862, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(508)),
    /* 8257 */ element!(TraceSwitchConfiguration, 4860, One, false, 0x0, NotRestricted, None),
    /* 8258 */ element!(TraceSwitchConfigurations, 2109, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(384)),
    /* 8259 */ element!(TraceableTable, 4863, One, false, 0x0, NotRestricted, Some(5387)),
    /* 8260 */ element!(TracedFailures, 1998, ZeroOrOne, false, 0x1C0000, NotRestricted, Some(6025)),
    /* 8261 */ element!(TrafficClass, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(574)),
    /* 8262 */ element!(TrafficClass, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(1063)),
    /* 8263 */ element!(TrafficClassPreemptionSupport, 2030, ZeroOrOne, false, 0x0, NotRestricted, Some(739)),
    /* 8264 */ element!(TrafficLimitationFilters, 2522, ZeroOrOne, false, 0x1C0000, NotRestricted, Some(5087)),
    /* 8265 */ element!(TrafficLimitationFilters, 2528, ZeroOrOne, false, 0x0, NotRestricted, Some(3381)),
    /* 8266 */ element!(TrafficShaperGroupRef, 748, ZeroOrOne, false, 0x0, NotRestricted, Some(2163)),
    /* 8267 */ element!(TrafficShaperGroups, 745, ZeroOrOne, false, 0x0, ClassicPlatform, Some(308)),
    /* 8268 */ element!(TranceiverStandbyDelay, 2229, ZeroOrOne, false, 0x0, NotRestricted, Some(2850)),
    /* 8269 */ element!(TransferExitClassRef, 1640, ZeroOrOne, false, 0x0, NotRestricted, Some(5293)),
    /* 8270 */ element!(TransferProperty, 4867, ZeroOrOne, false, 0x0, NotRestricted, Some(510)),
    /* 8271 */ element!(TransferRef, 4226, One, false, 0x0, NotRestricted, None),
    /* 8272 */ element!(TransferRefs, 4232, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5024)),
    /* 8273 */ element!(Transfers, 4227, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3266)),
    /* 8274 */ element!(TransformationComSpecPropss, 545, ZeroOrOne, false, 0x0, NotRestricted, Some(5298)),
    /* 8275 */ element!(TransformationComSpecPropss, 545, ZeroOrOne, false, 0x0, NotRestricted, Some(5299)),
    /* 8276 */ element!(TransformationDescriptions, 4890, ZeroOrOne, false, 0x1C0000, NotRestricted, Some(69)),
    /* 8277 */ element!(TransformationISignalPropss, 2488, ZeroOrOne, false, 0x1C0000, NotRestricted, Some(70)),
    /* 8278 */ element!(TransformationISignalPropss, 2488, ZeroOrOne, false, 0x1C0000, NotRestricted, Some(71)),
    /* 8279 */ element!(TransformationPropsMappingSetRef, 2110, ZeroOrOne, false, 0x0, NotRestricted, Some(1940)),
    /* 8280 */ element!(TransformationPropsRef, 978, ZeroOrOne, false, 0x0, NotRestricted, Some(255)),
    /* 8281 */ element!(TransformationPropsRef, 4883, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5692)),
    /* 8282 */ element!(TransformationPropsRef, 4888, ZeroOrOne, false, 0x0, NotRestricted, Some(5692)),
    /* 8283 */ element!(TransformationPropsSet, 4870, One, false, 0x0, NotRestricted, None),
    /* 8284 */ element!(TransformationPropsToServiceInterfaceElementMapping, 4872, One, false, 0x0, NotRestricted, None),
    /* 8285 */ element!(TransformationPropsToServiceInterfaceElementMappingSet, 4879, One, false, 0x0, NotRestricted, None),
    /* 8286 */ element!(TransformationPropsToServiceInterfaceMapping, 4885, One, false, 0x0, NotRestricted, None),
    /* 8287 */ element!(TransformationPropsToServiceInterfaceMappingSet, 4886, One, false, 0x0, NotRestricted, None),
    /* 8288 */ element!(TransformationPropsToServiceInterfaceMappingSetRef, 2111, ZeroOrOne, false, 0x0, NotRestricted, Some(1940)),
    /* 8289 */ element!(TransformationPropsToServiceInterfaceMappings, 4887, ZeroOrOne, false, 0x0, NotRestricted, Some(1445)),
    /* 8290 */ element!(TransformationPropss, 4871, ZeroOrOne, false, 0x0, NotRestricted, Some(5904)),
    /* 8291 */ element!(TransformationTechnology, 4889, One, false, 0x0, NotRestricted, None),
    /* 8292 */ element!(TransformationTechnologys, 991, ZeroOrOne, false, 0x1FFFC0, NotRestricted, Some(5905)),
    /* 8293 */ element!(TransformerChainRef, 993, One, false, 0x0, NotRestricted, None),
    /* 8294 */ element!(TransformerChainRefs, 994, ZeroOrOne, true, 0x0, NotRestricted, Some(4123)),
    /* 8295 */ element!(TransformerClass, 4891, ZeroOrOne, false, 0x0, NotRestricted, Some(2610)),
    /* 8296 */ element!(TransformerHardErrorEvent, 4892, One, false, 0x0, NotRestricted, None),
    /* 8297 */ element!(TransformerRef, 993, ZeroOrOne, false, 0x0, NotRestricted, Some(2164)),
    /* 8298 */ element!(TransformerStatusForwarding, 992, ZeroOrOne, false, 0x0, NotRestricted, Some(4261)),
    /* 8299 */ element!(TransformingSystemSignalRef, 4649, ZeroOrOne, false, 0x0, NotRestricted, Some(1682)),
    /* 8300 */ element!(TransientFault, 4893, One, false, 0x0, NotRestricted, None),
    /* 8301 */ element!(TransitToInvalidExtended, 298, ZeroOrOne, false, 0x0, NotRestricted, Some(935)),
    /* 8302 */ element!(TransitionRef, 1089, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(2241)),
    /* 8303 */ element!(TransitionRef, 2864, One, false, 0x0, NotRestricted, None),
    /* 8304 */ element!(TransitionRefs, 2865, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(2242)),
    /* 8305 */ element!(Transitions, 2347, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(256)),
    /* 8306 */ element!(Transitions, 2837, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(257)),
    /* 8307 */ element!(Transitions, 4415, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(258)),
    /* 8308 */ element!(TranslatedVlanId, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(1421)),
    /* 8309 */ element!(TranslationTargetIref, 5020, ZeroOrOne, false, 0x0, ClassicPlatform, Some(1896)),
    /* 8310 */ element!(TransmissionAcknowledge, 3051, ZeroOrOne, false, 0x0, ClassicPlatform, Some(2298)),
    /* 8311 */ element!(TransmissionDeadline, 2229, ZeroOrOne, false, 0x0, ClassicPlatform, Some(5867)),
    /* 8312 */ element!(TransmissionMode, 4902, ZeroOrOne, false, 0x0, NotRestricted, Some(2796)),
    /* 8313 */ element!(TransmissionModeCondition, 4897, One, false, 0x0, NotRestricted, None),
    /* 8314 */ element!(TransmissionModeConditions, 4901, ZeroOrOne, false, 0x0, NotRestricted, Some(2770)),
    /* 8315 */ element!(TransmissionModeDeclaration, 4899, ZeroOrOne, false, 0x0, NotRestricted, Some(77)),
    /* 8316 */ element!(TransmissionModeFalseTiming, 4903, ZeroOrOne, false, 0x0, NotRestricted, Some(5897)),
    /* 8317 */ element!(TransmissionModeTrueTiming, 4903, ZeroOrOne, false, 0x0, NotRestricted, Some(5898)),
    /* 8318 */ element!(TransmissionProps, 4895, ZeroOrOne, false, 0x0, NotRestricted, Some(3399)),
    /* 8319 */ element!(TransmissionStartSequenceDuration, 2642, ZeroOrOne, false, 0x0, NotRestricted, Some(1607)),
    /* 8320 */ element!(TransmissionTrigger, 298, ZeroOrOne, false, 0x0, ClassicPlatform, Some(769)),
    /* 8321 */ element!(TransmissionTrigger, 298, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(770)),
    /* 8322 */ element!(TransmissionTrigger, 298, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(771)),
    /* 8323 */ element!(TransmitCancellation, 298, ZeroOrOne, false, 0x0, ClassicPlatform, Some(4276)),
    /* 8324 */ element!(TransmitCancellation, 298, ZeroOrOne, false, 0x0, NotRestricted, Some(4277)),
    /* 8325 */ element!(TransmitCancellation, 298, ZeroOrOne, false, 0x0, ClassicPlatform, Some(6012)),
    /* 8326 */ element!(TransmitPduRef, 2182, One, false, 0x0, NotRestricted, None),
    /* 8327 */ element!(TransmitPduRefs, 2183, ZeroOrOne, false, 0x0, NotRestricted, Some(1732)),
    /* 8328 */ element!(TransmitterRef, 523, ZeroOrOne, false, 0x0, ClassicPlatform, Some(3130)),
    /* 8329 */ element!(TransmitterRef, 2220, ZeroOrOne, false, 0x0, ClassicPlatform, Some(3130)),
    /* 8330 */ element!(TransmitterRef, 2742, ZeroOrOne, false, 0x0, ClassicPlatform, Some(3130)),
    /* 8331 */ element!(TransmitterRef, 2826, ZeroOrOne, false, 0x0, ClassicPlatform, Some(3130)),
    /* 8332 */ element!(TransportLayerIndependentIdCollectionSet, 4904, One, false, 0x0, NotRestricted, None),
    /* 8333 */ element!(TransportLayerIndependentInstanceId, 4906, One, false, 0x0, NotRestricted, None),
    /* 8334 */ element!(TransportLayerIndependentInstanceIdRef, 3992, ZeroOrOne, false, 0x0, NotRestricted, Some(1947)),
    /* 8335 */ element!(TransportLayerRule, 2160, ZeroOrOne, false, 0x0, NotRestricted, Some(380)),
    /* 8336 */ element!(TransportPduRef, 4302, ZeroOrOne, false, 0x0, NotRestricted, Some(2227)),
    /* 8337 */ element!(TransportPlugin, 4393, One, false, 0x0, AdaptivePlatform, Some(957)),
    /* 8338 */ element!(TransportPlugins, 1076, ZeroOrOne, false, 0x0, NotRestricted, None),
    /* 8339 */ element!(TransportPriority, 1086, ZeroOrOne, false, 0x0, NotRestricted, Some(559)),
    /* 8340 */ element!(TransportPriority, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(2348)),
    /* 8341 */ element!(TransportProtocol, 4393, One, false, 0x0, NotRestricted, None),
    /* 8342 */ element!(TransportProtocol, 4908, ZeroOrOne, false, 0x0, NotRestricted, Some(3622)),
    /* 8343 */ element!(TransportProtocol, 4908, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3622)),
    /* 8344 */ element!(TransportProtocol, 4908, ZeroOrOne, false, 0x0, NotRestricted, Some(3623)),
    /* 8345 */ element!(TransportProtocol, 4908, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3623)),
    /* 8346 */ element!(TransportProtocol, 4908, One, false, 0x0, AdaptivePlatform, Some(3626)),
    /* 8347 */ element!(TransportProtocols, 1035, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3625)),
    /* 8348 */ element!(TransportProtocols, 1050, ZeroOrOne, false, 0x0, NotRestricted, None),
    /* 8349 */ element!(TransportProtocols, 1082, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3624)),
    /* 8350 */ element!(TrcvDelayCompensationOffset, 2229, ZeroOrOne, false, 0x0, NotRestricted, Some(2511)),
    /* 8351 */ element!(TrcvPwmModeEnabled, 298, ZeroOrOne, false, 0x0, NotRestricted, Some(2469)),
    /* 8352 */ element!(Trigger, 1475, ZeroOrOne, false, 0x0, NotRestricted, Some(3742)),
    /* 8353 */ element!(Trigger, 1475, ZeroOrOne, false, 0x0, NotRestricted, Some(4246)),
    /* 8354 */ element!(Trigger, 3243, ZeroOrOne, false, 0x0, NotRestricted, Some(775)),
    /* 8355 */ element!(Trigger, 4910, One, false, 0x0, NotRestricted, None),
    /* 8356 */ element!(Trigger, 4944, ZeroOrOne, false, 0x0, NotRestricted, Some(5912)),
    /* 8357 */ element!(TriggerDirectImplementations, 366, ZeroOrOne, false, 0x1FFF80, NotRestricted, Some(2449)),
    /* 8358 */ element!(TriggerIPduSendCondition, 4911, One, false, 0x0, NotRestricted, None),
    /* 8359 */ element!(TriggerIPduSendConditions, 3256, ZeroOrOne, false, 0x0, NotRestricted, Some(709)),
    /* 8360 */ element!(TriggerInterface, 4921, One, false, 0x0, NotRestricted, None),
    /* 8361 */ element!(TriggerInterfaceMapping, 4922, One, false, 0x0, NotRestricted, None),
    /* 8362 */ element!(TriggerIref, 2127, ZeroOrOne, false, 0x0, NotRestricted, Some(3163)),
    /* 8363 */ element!(TriggerIref, 3213, ZeroOrOne, false, 0x0, NotRestricted, Some(5910)),
    /* 8364 */ element!(TriggerIref, 3602, ZeroOrOne, false, 0x0, NotRestricted, Some(3075)),
    /* 8365 */ element!(TriggerIref, 4914, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5219)),
    /* 8366 */ element!(TriggerIref, 4917, ZeroOrOne, false, 0x0, NotRestricted, Some(5467)),
    /* 8367 */ element!(TriggerIref, 4917, ZeroOrOne, false, 0x0, ClassicPlatform, Some(5911)),
    /* 8368 */ element!(TriggerMapping, 4925, One, false, 0x0, NotRestricted, None),
    /* 8369 */ element!(TriggerMappings, 4010, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(1434)),
    /* 8370 */ element!(TriggerMappings, 4923, ZeroOrOne, false, 0x0, NotRestricted, Some(1444)),
    /* 8371 */ element!(TriggerMode, 4927, ZeroOrOne, false, 0x0, NotRestricted, Some(1169)),
    /* 8372 */ element!(TriggerPeriod, 3068, ZeroOrOne, false, 0x0, ClassicPlatform, Some(1664)),
    /* 8373 */ element!(TriggerPortAnnotation, 4928, One, false, 0x0, NotRestricted, None),
    /* 8374 */ element!(TriggerPortAnnotations, 3493, ZeroOrOne, false, 0x0, NotRestricted, Some(154)),
    /* 8375 */ element!(TriggerRef, 2145, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(1890)),
    /* 8376 */ element!(TriggerRef, 2149, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(1890)),
    /* 8377 */ element!(TriggerRef, 3985, One, false, 0x0, NotRestricted, None),
    /* 8378 */ element!(TriggerRef, 3985, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(1889)),
    /* 8379 */ element!(TriggerRef, 3985, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(1949)),
    /* 8380 */ element!(TriggerRef, 4736, ZeroOrOne, false, 0x0, NotRestricted, Some(2183)),
    /* 8381 */ element!(TriggerRef, 4736, ZeroOrOne, false, 0x0, NotRestricted, Some(3082)),
    /* 8382 */ element!(TriggerRef, 4926, ZeroOrOne, false, 0x0, NotRestricted, None),
    /* 8383 */ element!(TriggerRef, 4926, ZeroOrOne, false, 0x0, NotRestricted, Some(2910)),
    /* 8384 */ element!(TriggerRef, 4926, ZeroOrOne, false, 0x0, NotRestricted, Some(3162)),
    /* 8385 */ element!(TriggerRef, 5063, ZeroOrOne, false, 0x0, NotRestricted, Some(4768)),
    /* 8386 */ element!(TriggerRefConditional, 4929, One, false, 0x0, NotRestricted, None),
    /* 8387 */ element!(TriggerRefs, 4884, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5684)),
    /* 8388 */ element!(TriggerToSignalMapping, 4930, One, false, 0x0, NotRestricted, None),
    /* 8389 */ element!(TriggeringEventRef, 4593, ZeroOrOne, false, 0x0, ClassicPlatform, Some(1275)),
    /* 8390 */ element!(Triggers, 4045, ZeroOrOne, false, 0x1C0000, AdaptivePlatform, Some(5568)),
    /* 8391 */ element!(Triggers, 4924, ZeroOrOne, false, 0x0, NotRestricted, Some(2772)),
    /* 8392 */ element!(TriggersRecoveryNotification, 298, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(778)),
    /* 8393 */ element!(TroubleCodeJ1939Ref, 1317, ZeroOrOne, false, 0x0, ClassicPlatform, Some(1858)),
    /* 8394 */ element!(TroubleCodeObdRef, 1673, ZeroOrOne, false, 0x0, NotRestricted, Some(5455)),
    /* 8395 */ element!(TroubleCodePropss, 1675, ZeroOrOne, false, 0x100000, NotRestricted, Some(476)),
    /* 8396 */ element!(TroubleCodeUdsRef, 1319, ZeroOrOne, false, 0x0, NotRestricted, Some(1971)),
    /* 8397 */ element!(TroubleCodeUdsRef, 1671, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5001)),
    /* 8398 */ element!(TroubleCodeUdsRef, 1674, ZeroOrOne, false, 0x0, NotRestricted, Some(5468)),
    /* 8399 */ element!(TrueActionListRef, 3373, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(2168)),
    /* 8400 */ element!(TrueActionListRef, 3810, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(2168)),
    /* 8401 */ element!(TrustedPlatformExecutableLaunchBehavior, 4932, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3565)),
    /* 8402 */ element!(Tt, 4933, One, false, 0x0, NotRestricted, Some(4725)),
    /* 8403 */ element!(Tt, 4933, One, false, 0x0, NotRestricted, Some(5383)),
    /* 8404 */ element!(TtCanClusterRef, 4739, ZeroOrOne, false, 0x0, NotRestricted, Some(3112)),
    /* 8405 */ element!(TtcanAbsolutelyScheduledTiming, 4934, One, false, 0x0, NotRestricted, None),
    /* 8406 */ element!(TtcanCluster, 4936, One, false, 0x0, NotRestricted, None),
    /* 8407 */ element!(TtcanClusterConditional, 4937, One, false, 0x0, NotRestricted, None),
    /* 8408 */ element!(TtcanClusterVariants, 4938, ZeroOrOne, false, 0x1FFC00, NotRestricted, Some(4408)),
    /* 8409 */ element!(TtcanCommunicationConnector, 4939, One, false, 0x0, NotRestricted, None),
    /* 8410 */ element!(TtcanCommunicationController, 4940, One, false, 0x0, NotRestricted, None),
    /* 8411 */ element!(TtcanCommunicationControllerConditional, 4941, One, false, 0x0, NotRestricted, None),
    /* 8412 */ element!(TtcanCommunicationControllerVariants, 4942, ZeroOrOne, false, 0x1C0000, NotRestricted, Some(4408)),
    /* 8413 */ element!(TtcanPhysicalChannel, 4943, One, false, 0x0, NotRestricted, None),
    /* 8414 */ element!(Ttl, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(1367)),
    /* 8415 */ element!(Ttl, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(2670)),
    /* 8416 */ element!(Ttl, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(3600)),
    /* 8417 */ element!(Ttl, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(5876)),
    /* 8418 */ element!(TtlMax, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(1065)),
    /* 8419 */ element!(TtlMin, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(1068)),
    /* 8420 */ element!(TwoKeySlotMode, 298, ZeroOrOne, false, 0x0, NotRestricted, Some(1114)),
    /* 8421 */ element!(TxBitRateSwitch, 298, ZeroOrOne, false, 0x0, NotRestricted, Some(2464)),
    /* 8422 */ element!(TxEnableWindowLength, 2642, ZeroOrOne, false, 0x0, NotRestricted, Some(2920)),
    /* 8423 */ element!(TxMask, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(1181)),
    /* 8424 */ element!(TxNmPduRef, 3118, One, false, 0x0, NotRestricted, None),
    /* 8425 */ element!(TxNmPduRefs, 3120, ZeroOrOne, false, 0x0, ClassicPlatform, Some(6064)),
    /* 8426 */ element!(TxPduPoolRef, 2222, ZeroOrOne, false, 0x0, ClassicPlatform, Some(34)),
    /* 8427 */ element!(TxPduTriggeringRef, 1727, ZeroOrOne, false, 0x0, ClassicPlatform, Some(1803)),
    /* 8428 */ element!(Typ, 3140, ZeroOrOne, false, 0x0, NotRestricted, Some(5772)),
    /* 8429 */ element!(Type, 475, ZeroOrOne, false, 0x0, NotRestricted, Some(2992)),
    /* 8430 */ element!(Type, 1360, ZeroOrOne, false, 0x0, NotRestricted, Some(711)),
    /* 8431 */ element!(Type, 1361, ZeroOrOne, false, 0x0, NotRestricted, Some(711)),
    /* 8432 */ element!(Type, 1437, ZeroOrOne, false, 0x0, NotRestricted, Some(1651)),
    /* 8433 */ element!(Type, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(1074)),
    /* 8434 */ element!(Type, 4393, ZeroOrOne, false, 0x0, NotRestricted, Some(3514)),
    /* 8435 */ element!(Type, 5078, ZeroOrOne, false, 0x0, NotRestricted, Some(2992)),
    /* 8436 */ element!(TypeApproval, 4393, ZeroOrOne, false, 0x0, NotRestricted, Some(3539)),
    /* 8437 */ element!(TypeApproval, 4393, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3539)),
    /* 8438 */ element!(TypeBlueprints, 224, ZeroOrOne, false, 0x1C0000, NotRestricted, Some(3448)),
    /* 8439 */ element!(TypeDefinition, 4393, ZeroOrOne, false, 0x0, NotRestricted, Some(38)),
    /* 8440 */ element!(TypeDefinition, 5078, ZeroOrOne, false, 0x0, NotRestricted, Some(38)),
    /* 8441 */ element!(TypeEmitter, 4393, ZeroOrOne, false, 0x0, NotRestricted, Some(3519)),
    /* 8442 */ element!(TypeEmitter, 4393, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3519)),
    /* 8443 */ element!(TypeEmitter, 4393, ZeroOrOne, false, 0x0, NotRestricted, Some(4000)),
    /* 8444 */ element!(TypeMapping, 3950, ZeroOrOne, false, 0x0, NotRestricted, Some(2696)),
    /* 8445 */ element!(TypeMapping, 3955, ZeroOrOne, false, 0x0, NotRestricted, Some(2697)),
    /* 8446 */ element!(TypeOfDtcSupported, 1676, ZeroOrOne, false, 0x0, NotRestricted, Some(3684)),
    /* 8447 */ element!(TypeOfEventCombinationSupported, 1287, ZeroOrOne, false, 0x0, NotRestricted, Some(2350)),
    /* 8448 */ element!(TypeOfFreezeFrameRecordNumeration, 1677, ZeroOrOne, false, 0x0, NotRestricted, Some(3778)),
    /* 8449 */ element!(TypeReference, 827, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3282)),
    /* 8450 */ element!(TypeReferenceRef, 833, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(4935)),
    /* 8451 */ element!(TypeReferenceRef, 833, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5259)),
    /* 8452 */ element!(TypeTailorings, 3650, ZeroOrOne, false, 0x0, NotRestricted, Some(1397)),
    /* 8453 */ element!(TypeTailorings, 3650, ZeroOrOne, false, 0x0, NotRestricted, Some(1398)),
    /* 8454 */ element!(TypeTref, 252, ZeroOrOne, false, 0x0, NotRestricted, Some(5583)),
    /* 8455 */ element!(TypeTref, 996, ZeroOrOne, false, 0x0, NotRestricted, Some(5583)),
    /* 8456 */ element!(TypeTref, 3041, ZeroOrOne, false, 0x0, NotRestricted, Some(2680)),
    /* 8457 */ element!(TypeTref, 4547, ZeroOrOne, false, 0x0, NotRestricted, Some(5918)),
    /* 8458 */ element!(UasId, 2231, ZeroOrOne, false, 0x0, NotRestricted, Some(5757)),
    /* 8459 */ element!(UcmDescription, 4945, One, false, 0x0, NotRestricted, None),
    /* 8460 */ element!(UcmMasterFallbackRef, 4952, One, false, 0x0, NotRestricted, None),
    /* 8461 */ element!(UcmMasterFallbackRefs, 5041, ZeroOrOne, true, 0x0, AdaptivePlatform, Some(5190)),
    /* 8462 */ element!(UcmMasterModuleInstantiation, 4947, One, false, 0x0, NotRestricted, None),
    /* 8463 */ element!(UcmModuleInstantiation, 4948, One, false, 0x0, NotRestricted, None),
    /* 8464 */ element!(UcmModuleInstantiationRef, 4946, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5062)),
    /* 8465 */ element!(UcmNotAvailableOnTheNetwork, 4949, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3751)),
    /* 8466 */ element!(UcmProcessings, 5046, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3267)),
    /* 8467 */ element!(UcmRef, 4952, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5029)),
    /* 8468 */ element!(UcmRef, 4956, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5148)),
    /* 8469 */ element!(UcmSoftwareVersion, 4394, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3756)),
    /* 8470 */ element!(UcmStep, 4950, One, false, 0x0, NotRestricted, None),
    /* 8471 */ element!(UcmSubordinateModuleInstantiation, 4953, One, false, 0x0, NotRestricted, None),
    /* 8472 */ element!(UcmToTimeBaseResourceMapping, 4954, One, false, 0x0, NotRestricted, None),
    /* 8473 */ element!(Ucms, 5042, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3322)),
    /* 8474 */ element!(UdpChecksumHandling, 4957, ZeroOrOne, false, 0x0, NotRestricted, Some(2461)),
    /* 8475 */ element!(UdpCollectionBufferSizeThreshold, 3494, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(2520)),
    /* 8476 */ element!(UdpCollectionBufferTimeout, 2229, ZeroOrOne, false, 0x0, NotRestricted, Some(1504)),
    /* 8477 */ element!(UdpCollectionBufferTimeout, 2229, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(1505)),
    /* 8478 */ element!(UdpCollectionTrigger, 4958, ZeroOrOne, false, 0x0, NotRestricted, Some(757)),
    /* 8479 */ element!(UdpCollectionTrigger, 4958, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(758)),
    /* 8480 */ element!(UdpLocalPort, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(4193)),
    /* 8481 */ element!(UdpMinTxBufferSize, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(2519)),
    /* 8482 */ element!(UdpNmCluster, 4959, One, false, 0x0, NotRestricted, None),
    /* 8483 */ element!(UdpNmClusterCoupling, 4960, One, false, 0x0, NotRestricted, None),
    /* 8484 */ element!(UdpNmClusterRef, 2039, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(1828)),
    /* 8485 */ element!(UdpNmEcu, 4964, One, false, 0x0, NotRestricted, None),
    /* 8486 */ element!(UdpNmNode, 4966, One, false, 0x0, NotRestricted, None),
    /* 8487 */ element!(UdpPort, 3494, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3508)),
    /* 8488 */ element!(UdpPort, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(3509)),
    /* 8489 */ element!(UdpPort, 3494, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3780)),
    /* 8490 */ element!(UdpPort, 3494, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3781)),
    /* 8491 */ element!(UdpPort, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(3839)),
    /* 8492 */ element!(UdpPort, 3494, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3871)),
    /* 8493 */ element!(UdpPort, 3494, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(4118)),
    /* 8494 */ element!(UdpPort, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(5925)),
    /* 8495 */ element!(UdpPort, 3494, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(6041)),
    /* 8496 */ element!(UdpPort, 4909, ZeroOrOne, false, 0x0, NotRestricted, Some(5926)),
    /* 8497 */ element!(UdpPortRef, 4288, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(4914)),
    /* 8498 */ element!(UdpPortRef, 4288, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(6027)),
    /* 8499 */ element!(UdpProps, 4968, ZeroOrOne, false, 0x0, NotRestricted, Some(5919)),
    /* 8500 */ element!(UdpRemotePort, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(4194)),
    /* 8501 */ element!(UdpRule, 4969, One, false, 0x0, NotRestricted, None),
    /* 8502 */ element!(UdpTp, 4970, One, false, 0x0, NotRestricted, None),
    /* 8503 */ element!(UdpTpPort, 4859, ZeroOrOne, false, 0x0, NotRestricted, Some(5921)),
    /* 8504 */ element!(UdpTtl, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(461)),
    /* 8505 */ element!(UdsDtcNumber, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(5370)),
    /* 8506 */ element!(UdsDtcNumber, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(5373)),
    /* 8507 */ element!(UdsDtcValue, 2231, ZeroOrOne, false, 0x0, NotRestricted, Some(5928)),
    /* 8508 */ element!(UdsService, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(1053)),
    /* 8509 */ element!(UnassignFrameId, 4971, One, false, 0x0, NotRestricted, None),
    /* 8510 */ element!(UnassignedFrameTriggeringRef, 179, ZeroOrOne, false, 0x0, ClassicPlatform, Some(2894)),
    /* 8511 */ element!(UncompressedSoftwareClusterSize, 3494, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3905)),
    /* 8512 */ element!(UnicastCredentials, 3612, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(4865)),
    /* 8513 */ element!(UnicastCredentials, 4315, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3301)),
    /* 8514 */ element!(UnicastNetworkEndpointRef, 4279, One, false, 0x0, NotRestricted, None),
    /* 8515 */ element!(UnicastNetworkEndpointRef, 4279, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(1572)),
    /* 8516 */ element!(UnicastNetworkEndpointRefs, 2024, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(1572)),
    /* 8517 */ element!(UnicastSecureComPropsRef, 4280, One, false, 0x0, NotRestricted, None),
    /* 8518 */ element!(UnicastSecureComPropsRefs, 4281, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(1904)),
    /* 8519 */ element!(UnicastUdpCredentials, 3613, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3386)),
    /* 8520 */ element!(UniqueStreamId, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(5930)),
    /* 8521 */ element!(Unit, 4393, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3862)),
    /* 8522 */ element!(Unit, 4972, One, false, 0x0, NotRestricted, None),
    /* 8523 */ element!(UnitAndScalingId, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(5937)),
    /* 8524 */ element!(UnitDisplayName, 2625, ZeroOrOne, false, 0x0, NotRestricted, Some(5602)),
    /* 8525 */ element!(UnitDisplayName, 2625, ZeroOrOne, false, 0x0, NotRestricted, Some(5787)),
    /* 8526 */ element!(UnitGroup, 4973, One, false, 0x0, NotRestricted, None),
    /* 8527 */ element!(UnitGroupRef, 4474, One, false, 0x0, NotRestricted, None),
    /* 8528 */ element!(UnitGroupRefs, 4475, ZeroOrOne, false, 0x0, ClassicPlatform, Some(3444)),
    /* 8529 */ element!(UnitRef, 685, ZeroOrOne, false, 0x0, NotRestricted, Some(1720)),
    /* 8530 */ element!(UnitRef, 685, ZeroOrOne, false, 0x0, NotRestricted, Some(3486)),
    /* 8531 */ element!(UnitRef, 685, ZeroOrOne, false, 0x0, NotRestricted, Some(4814)),
    /* 8532 */ element!(UnitRef, 685, ZeroOrOne, false, 0x0, NotRestricted, Some(4844)),
    /* 8533 */ element!(UnitRef, 685, ZeroOrOne, false, 0x0, NotRestricted, Some(5668)),
    /* 8534 */ element!(UnitRef, 685, ZeroOrOne, false, 0x0, NotRestricted, Some(5669)),
    /* 8535 */ element!(UnitRef, 3804, ZeroOrOne, false, 0x0, NotRestricted, Some(5669)),
    /* 8536 */ element!(UnitRef, 4974, One, false, 0x0, NotRestricted, None),
    /* 8537 */ element!(UnitRefs, 4975, ZeroOrOne, false, 0x0, NotRestricted, Some(5428)),
    /* 8538 */ element!(UnlimitedIntegerValueVariationPoint, 2231, One, false, 0x0, NotRestricted, None),
    /* 8539 */ element!(UnresolvedReferenceRestriction, 4977, ZeroOrOne, false, 0x0, NotRestricted, Some(2593)),
    /* 8540 */ element!(UnusedBitPattern, 2642, ZeroOrOne, false, 0x0, NotRestricted, Some(78)),
    /* 8541 */ element!(UnusedBitPattern, 2642, ZeroOrOne, false, 0x0, NotRestricted, Some(79)),
    /* 8542 */ element!(UnusedBitPattern, 2642, ZeroOrOne, false, 0x0, NotRestricted, Some(80)),
    /* 8543 */ element!(UnusedBitPattern, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(1170)),
    /* 8544 */ element!(Update, 298, ZeroOrOne, false, 0x0, NotRestricted, Some(3659)),
    /* 8545 */ element!(Update, 298, ZeroOrOne, false, 0x0, NotRestricted, Some(3789)),
    /* 8546 */ element!(UpdateIndicationBitPosition, 2642, ZeroOrOne, false, 0x0, NotRestricted, Some(1315)),
    /* 8547 */ element!(UpdateIndicationBitPosition, 2642, ZeroOrOne, false, 0x0, NotRestricted, Some(2773)),
    /* 8548 */ element!(UpdateIndicationBitPosition, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(3170)),
    /* 8549 */ element!(UpdateKind, 1421, ZeroOrOne, false, 0x0, NotRestricted, Some(3964)),
    /* 8550 */ element!(UpdateKind, 1692, ZeroOrOne, false, 0x0, NotRestricted, Some(3581)),
    /* 8551 */ element!(UpdateSessionRejected, 4949, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3752)),
    /* 8552 */ element!(UpdateStrategy, 3266, ZeroOrOne, false, 0x0, NotRestricted, Some(3532)),
    /* 8553 */ element!(UpdateStrategy, 3266, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3532)),
    /* 8554 */ element!(UpdateStrategy, 3266, ZeroOrOne, false, 0x0, NotRestricted, Some(4204)),
    /* 8555 */ element!(UpdateStrategy, 3266, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(4204)),
    /* 8556 */ element!(UpdateStrategy, 3283, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3530)),
    /* 8557 */ element!(UpdateStrategy, 3283, ZeroOrOne, false, 0x0, NotRestricted, Some(3531)),
    /* 8558 */ element!(UpdateStrategy, 3283, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3533)),
    /* 8559 */ element!(UpperBound, 3068, ZeroOrOne, false, 0x0, NotRestricted, Some(3171)),
    /* 8560 */ element!(UpperBoundary, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(712)),
    /* 8561 */ element!(UpperCanId, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(3536)),
    /* 8562 */ element!(UpperCanId, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(5940)),
    /* 8563 */ element!(UpperHeaderBitsToShift, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(3867)),
    /* 8564 */ element!(UpperLimit, 2780, ZeroOrOne, false, 0x0, NotRestricted, Some(5816)),
    /* 8565 */ element!(UpperLimit, 2780, ZeroOrOne, false, 0x0, NotRestricted, Some(5817)),
    /* 8566 */ element!(UpperLimit, 2780, ZeroOrOne, false, 0x0, NotRestricted, Some(5818)),
    /* 8567 */ element!(UpperLimit, 2780, ZeroOrOne, false, 0x0, NotRestricted, Some(5819)),
    /* 8568 */ element!(UpperLimit, 2780, ZeroOrOne, false, 0x0, NotRestricted, Some(5820)),
    /* 8569 */ element!(UpperLimit, 2781, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3880)),
    /* 8570 */ element!(UpperMultiplicity, 2231, ZeroOrOne, false, 0x0, ClassicPlatform, Some(3172)),
    /* 8571 */ element!(UpperMultiplicity, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(2561)),
    /* 8572 */ element!(UpperMultiplicity, 3494, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3491)),
    /* 8573 */ element!(UpperMultiplicityInfinite, 298, ZeroOrOne, false, 0x0, NotRestricted, Some(4667)),
    /* 8574 */ element!(UpperMultiplicityInfinite, 2231, ZeroOrOne, false, 0x0, ClassicPlatform, Some(5902)),
    /* 8575 */ element!(UpperMultiplicityIsInfinite, 298, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3951)),
    /* 8576 */ element!(UpperRef, 4784, ZeroOrOne, false, 0x0, NotRestricted, Some(1921)),
    /* 8577 */ element!(UpstreamReferenceIref, 81, ZeroOrOne, false, 0x0, ClassicPlatform, Some(2273)),
    /* 8578 */ element!(Uri, 4393, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3861)),
    /* 8579 */ element!(Uri, 4978, ZeroOrOne, false, 0x0, NotRestricted, Some(3918)),
    /* 8580 */ element!(Uri, 4978, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3919)),
    /* 8581 */ element!(Uri, 4978, ZeroOrOne, false, 0x0, NotRestricted, Some(3920)),
    /* 8582 */ element!(Uri, 4978, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3921)),
    /* 8583 */ element!(Uri, 4978, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3922)),
    /* 8584 */ element!(Uri, 4978, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(4075)),
    /* 8585 */ element!(Uri, 4978, ZeroOrOne, false, 0x0, NotRestricted, Some(5920)),
    /* 8586 */ element!(Url, 4979, ZeroOrOne, false, 0x0, NotRestricted, Some(5469)),
    /* 8587 */ element!(Url, 4979, ZeroOrOne, false, 0x0, NotRestricted, Some(5470)),
    /* 8588 */ element!(Url, 4979, ZeroOrOne, false, 0x0, NotRestricted, Some(5795)),
    /* 8589 */ element!(Usage, 1099, One, false, 0x0, NotRestricted, None),
    /* 8590 */ element!(Usages, 1098, ZeroOrOne, false, 0x0, NotRestricted, Some(2430)),
    /* 8591 */ element!(UseAsCryptographicIPdu, 298, ZeroOrOne, false, 0x0, NotRestricted, Some(1251)),
    /* 8592 */ element!(UseAuthDataFreshness, 298, ZeroOrOne, false, 0x0, NotRestricted, Some(3882)),
    /* 8593 */ element!(UseAutoValidationAtShutDown, 298, ZeroOrOne, false, 0x0, NotRestricted, Some(1222)),
    /* 8594 */ element!(UseCase, 1803, ZeroOrOne, false, 0x0, NotRestricted, Some(4348)),
    /* 8595 */ element!(UseClientAuthenticationRequest, 298, ZeroOrOne, false, 0x0, NotRestricted, Some(514)),
    /* 8596 */ element!(UseCrcCompMechanism, 298, ZeroOrOne, false, 0x0, NotRestricted, Some(1221)),
    /* 8597 */ element!(UseFreshnessTimestamp, 298, ZeroOrOne, false, 0x0, NotRestricted, Some(4263)),
    /* 8598 */ element!(UseInsteadRef, 24, One, false, 0x0, NotRestricted, None),
    /* 8599 */ element!(UseInsteadRefs, 2775, ZeroOrOne, false, 0x0, NotRestricted, Some(954)),
    /* 8600 */ element!(UseMacAddressForIdentification, 298, ZeroOrOne, false, 0x0, NotRestricted, Some(3791)),
    /* 8601 */ element!(UseSecuredPduHeader, 3890, ZeroOrOne, false, 0x0, NotRestricted, Some(3755)),
    /* 8602 */ element!(UseSecurityExtensionRecordSizeLimit, 298, ZeroOrOne, false, 0x0, NotRestricted, Some(522)),
    /* 8603 */ element!(UseSmartSensorApi, 298, ZeroOrOne, false, 0x0, NotRestricted, Some(3589)),
    /* 8604 */ element!(UseVariableDa, 298, ZeroOrOne, false, 0x0, ClassicPlatform, Some(2768)),
    /* 8605 */ element!(UseVariableSa, 298, ZeroOrOne, false, 0x0, ClassicPlatform, Some(2769)),
    /* 8606 */ element!(UseVehicleIdentificationSyncStatus, 298, ZeroOrOne, false, 0x0, NotRestricted, Some(3618)),
    /* 8607 */ element!(UsedCodeGenerator, 4393, ZeroOrOne, false, 0x0, ClassicPlatform, Some(1688)),
    /* 8608 */ element!(UsedCodeGenerator, 5078, ZeroOrOne, false, 0x0, NotRestricted, Some(1688)),
    /* 8609 */ element!(UsedDataElement, 260, ZeroOrOne, false, 0x0, NotRestricted, Some(2777)),
    /* 8610 */ element!(UsedFidRef, 3173, ZeroOrOne, false, 0x0, NotRestricted, Some(5672)),
    /* 8611 */ element!(UsedImplementationDataTypeRef, 3727, ZeroOrOne, false, 0x0, NotRestricted, Some(5516)),
    /* 8612 */ element!(UsedImpositionTimeDefinitionGroupRef, 148, ZeroOrOne, false, 0x0, NotRestricted, Some(4332)),
    /* 8613 */ element!(UsedLanguages, 3066, ZeroOrOne, false, 0x0, NotRestricted, Some(4905)),
    /* 8614 */ element!(UsedLifeCycleStateDefinitionGroupRef, 2774, ZeroOrOne, false, 0x0, NotRestricted, Some(4333)),
    /* 8615 */ element!(UsedParameterElement, 257, ZeroOrOne, false, 0x0, NotRestricted, Some(2733)),
    /* 8616 */ element!(UsedPimRef, 3725, ZeroOrOne, false, 0x0, NotRestricted, Some(2681)),
    /* 8617 */ element!(UsedSecondaryFidRef, 3174, One, false, 0x0, NotRestricted, None),
    /* 8618 */ element!(UsedSecondaryFidRefs, 3175, ZeroOrOne, false, 0x0, NotRestricted, Some(5724)),
    /* 8619 */ element!(UserDataSubTlv, 298, ZeroOrOne, false, 0x0, NotRestricted, Some(732)),
    /* 8620 */ element!(UserDefinedCluster, 4980, One, false, 0x0, NotRestricted, None),
    /* 8621 */ element!(UserDefinedClusterConditional, 4981, One, false, 0x0, NotRestricted, None),
    /* 8622 */ element!(UserDefinedClusterVariants, 4982, ZeroOrOne, false, 0x1F0000, NotRestricted, Some(4408)),
    /* 8623 */ element!(UserDefinedCommunicationConnector, 4983, One, false, 0x0, NotRestricted, None),
    /* 8624 */ element!(UserDefinedCommunicationController, 4984, One, false, 0x0, NotRestricted, None),
    /* 8625 */ element!(UserDefinedCommunicationControllerConditional, 4985, One, false, 0x0, NotRestricted, None),
    /* 8626 */ element!(UserDefinedCommunicationControllerVariants, 4986, ZeroOrOne, false, 0x1C0000, NotRestricted, Some(4408)),
    /* 8627 */ element!(UserDefinedEthernetFrame, 4987, One, false, 0x0, NotRestricted, None),
    /* 8628 */ element!(UserDefinedEventDeployment, 4988, One, false, 0x0, NotRestricted, None),
    /* 8629 */ element!(UserDefinedFieldDeployment, 4990, One, false, 0x0, NotRestricted, None),
    /* 8630 */ element!(UserDefinedGlobalTimeMaster, 4991, One, false, 0x0, NotRestricted, None),
    /* 8631 */ element!(UserDefinedGlobalTimeSlave, 4992, One, false, 0x0, NotRestricted, None),
    /* 8632 */ element!(UserDefinedIPdu, 4993, One, false, 0x0, NotRestricted, None),
    /* 8633 */ element!(UserDefinedMethodDeployment, 4994, One, false, 0x0, NotRestricted, None),
    /* 8634 */ element!(UserDefinedPdu, 4995, One, false, 0x0, NotRestricted, None),
    /* 8635 */ element!(UserDefinedPhysicalChannel, 4996, One, false, 0x0, NotRestricted, None),
    /* 8636 */ element!(UserDefinedServiceInstanceToMachineMapping, 4997, One, false, 0x0, NotRestricted, None),
    /* 8637 */ element!(UserDefinedServiceInterfaceDeployment, 4998, One, false, 0x0, NotRestricted, None),
    /* 8638 */ element!(UserDefinedTransformationComSpecProps, 4999, One, false, 0x0, NotRestricted, None),
    /* 8639 */ element!(UserDefinedTransformationDescription, 5000, One, false, 0x0, NotRestricted, None),
    /* 8640 */ element!(UserDefinedTransformationISignalProps, 5001, One, false, 0x0, NotRestricted, None),
    /* 8641 */ element!(UserDefinedTransformationISignalPropsConditional, 5002, One, false, 0x0, NotRestricted, None),
    /* 8642 */ element!(UserDefinedTransformationISignalPropsVariants, 5003, ZeroOrOne, false, 0x1C0000, NotRestricted, Some(4408)),
    /* 8643 */ element!(UserDefinedTransformationProps, 5004, One, false, 0x0, NotRestricted, None),
    /* 8644 */ element!(UserRef, 857, One, false, 0x0, NotRestricted, None),
    /* 8645 */ element!(UserRefs, 858, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(4923)),
    /* 8646 */ element!(UsesAddressArbitration, 298, ZeroOrOne, false, 0x0, NotRestricted, Some(766)),
    /* 8647 */ element!(UsesDynamicAddressing, 298, ZeroOrOne, false, 0x0, ClassicPlatform, Some(741)),
    /* 8648 */ element!(UsesEndToEndProtection, 2231, ZeroOrOne, false, 0x0, NotRestricted, Some(4689)),
    /* 8649 */ element!(UsesEndToEndProtection, 2231, ZeroOrOne, false, 0x0, ClassicPlatform, Some(4690)),
    /* 8650 */ element!(UsesMonitorData, 298, ZeroOrOne, false, 0x0, NotRestricted, Some(3796)),
    /* 8651 */ element!(UsesTimeBaseResource, 298, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3956)),
    /* 8652 */ element!(V, 2231, ZeroOrOne, false, 0x0, NotRestricted, Some(5359)),
    /* 8653 */ element!(V, 2231, Any, true, 0x0, NotRestricted, Some(6053)),
    /* 8654 */ element!(V, 3140, One, false, 0x0, NotRestricted, Some(4713)),
    /* 8655 */ element!(V, 3140, One, false, 0x0, NotRestricted, Some(4715)),
    /* 8656 */ element!(V, 3140, One, false, 0x0, NotRestricted, Some(5362)),
    /* 8657 */ element!(V, 3140, ZeroOrOne, false, 0x0, NotRestricted, Some(5657)),
    /* 8658 */ element!(V2XDataManagerNeeds, 5005, One, false, 0x0, NotRestricted, None),
    /* 8659 */ element!(V2XFacUserNeeds, 5006, One, false, 0x0, NotRestricted, None),
    /* 8660 */ element!(V2XMUserNeeds, 5007, One, false, 0x0, NotRestricted, None),
    /* 8661 */ element!(V2XSupported, 5008, ZeroOrOne, false, 0x0, ClassicPlatform, Some(3998)),
    /* 8662 */ element!(VLanRef, 4963, One, false, 0x0, NotRestricted, None),
    /* 8663 */ element!(VLanRefs, 772, ZeroOrOne, false, 0x0, NotRestricted, Some(575)),
    /* 8664 */ element!(ValidBindingTime, 2287, One, false, 0x0, NotRestricted, None),
    /* 8665 */ element!(ValidBindingTimes, 8, ZeroOrOne, false, 0x0, NotRestricted, Some(1394)),
    /* 8666 */ element!(ValidationConfiguration, 1573, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3325)),
    /* 8667 */ element!(ValidationFormula, 1862, ZeroOrOne, false, 0x0, ClassicPlatform, Some(841)),
    /* 8668 */ element!(ValidationRef, 1537, ZeroOrOne, false, 0x0, NotRestricted, Some(1789)),
    /* 8669 */ element!(ValidationRoot, 298, ZeroOrOne, false, 0x0, NotRestricted, Some(2431)),
    /* 8670 */ element!(Value, 159, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5954)),
    /* 8671 */ element!(Value, 161, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3406)),
    /* 8672 */ element!(Value, 273, ZeroOrOne, false, 0x0, ClassicPlatform, Some(3391)),
    /* 8673 */ element!(Value, 1803, ZeroOrOne, false, 0x0, ClassicPlatform, Some(1147)),
    /* 8674 */ element!(Value, 2229, ZeroOrOne, false, 0x0, NotRestricted, Some(186)),
    /* 8675 */ element!(Value, 2231, ZeroOrOne, false, 0x0, NotRestricted, Some(4152)),
    /* 8676 */ element!(Value, 2231, ZeroOrOne, false, 0x0, NotRestricted, Some(4812)),
    /* 8677 */ element!(Value, 2231, ZeroOrOne, false, 0x0, NotRestricted, Some(4813)),
    /* 8678 */ element!(Value, 2231, ZeroOrOne, false, 0x0, NotRestricted, Some(4845)),
    /* 8679 */ element!(Value, 2231, ZeroOrOne, false, 0x0, NotRestricted, Some(4848)),
    /* 8680 */ element!(Value, 2231, ZeroOrOne, false, 0x0, ClassicPlatform, Some(5971)),
    /* 8681 */ element!(Value, 2477, ZeroOrOne, false, 0x0, NotRestricted, Some(2518)),
    /* 8682 */ element!(Value, 3140, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(4176)),
    /* 8683 */ element!(Value, 3140, ZeroOrOne, false, 0x0, ClassicPlatform, Some(4227)),
    /* 8684 */ element!(Value, 3140, ZeroOrOne, false, 0x0, NotRestricted, Some(5761)),
    /* 8685 */ element!(Value, 3438, ZeroOrOne, false, 0x0, NotRestricted, Some(4792)),
    /* 8686 */ element!(Value, 3473, ZeroOrOne, false, 0x0, NotRestricted, Some(4793)),
    /* 8687 */ element!(Value, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(2744)),
    /* 8688 */ element!(Value, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(3665)),
    /* 8689 */ element!(Value, 3494, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3938)),
    /* 8690 */ element!(Value, 4393, ZeroOrOne, false, 0x0, NotRestricted, Some(601)),
    /* 8691 */ element!(Value, 4393, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(4079)),
    /* 8692 */ element!(Value, 5048, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(4178)),
    /* 8693 */ element!(Value, 5048, ZeroOrOne, false, 0x0, ClassicPlatform, Some(4259)),
    /* 8694 */ element!(Value, 5048, ZeroOrOne, false, 0x0, NotRestricted, Some(4846)),
    /* 8695 */ element!(Value, 5048, ZeroOrOne, false, 0x0, ClassicPlatform, Some(5960)),
    /* 8696 */ element!(Value, 5077, ZeroOrOne, false, 0x0, NotRestricted, Some(186)),
    /* 8697 */ element!(ValueAccess, 5033, ZeroOrOne, false, 0x0, NotRestricted, Some(5838)),
    /* 8698 */ element!(ValueAxisDataTypeRef, 4430, ZeroOrOne, false, 0x0, NotRestricted, Some(3062)),
    /* 8699 */ element!(ValueConfigClasses, 1861, ZeroOrOne, false, 0x0, ClassicPlatform, Some(2472)),
    /* 8700 */ element!(ValueDataTypeRef, 3311, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5232)),
    /* 8701 */ element!(ValueIref, 81, ZeroOrOne, false, 0x0, ClassicPlatform, Some(1336)),
    /* 8702 */ element!(ValueIref, 81, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(4694)),
    /* 8703 */ element!(ValueIref, 81, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(4695)),
    /* 8704 */ element!(ValueIref, 81, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(4696)),
    /* 8705 */ element!(ValuePairs, 4755, ZeroOrOne, false, 0x0, NotRestricted, Some(487)),
    /* 8706 */ element!(ValueRef, 103, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(4911)),
    /* 8707 */ element!(ValueRef, 117, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5160)),
    /* 8708 */ element!(ValueRef, 117, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5161)),
    /* 8709 */ element!(ValueRef, 5075, ZeroOrOne, false, 0x0, ClassicPlatform, Some(2535)),
    /* 8710 */ element!(ValueRestriction, 5011, ZeroOrOne, false, 0x0, NotRestricted, Some(3102)),
    /* 8711 */ element!(ValueSpec, 2477, ZeroOrOne, false, 0x180000, NotRestricted, Some(2433)),
    /* 8712 */ element!(ValueTypeRef, 3445, ZeroOrOne, false, 0x0, NotRestricted, Some(2900)),
    /* 8713 */ element!(ValueTypeTref, 3447, ZeroOrOne, false, 0x0, NotRestricted, Some(2901)),
    /* 8714 */ element!(VariableAccess, 5012, One, false, 0x0, NotRestricted, None),
    /* 8715 */ element!(VariableAccessIref, 5013, One, false, 0x0, NotRestricted, None),
    /* 8716 */ element!(VariableAccessIrefs, 2929, ZeroOrOne, false, 0x0, NotRestricted, Some(2774)),
    /* 8717 */ element!(VariableAccessRef, 4734, ZeroOrOne, false, 0x0, ClassicPlatform, Some(3112)),
    /* 8718 */ element!(VariableAccessedForDebugRef, 3162, One, false, 0x0, NotRestricted, None),
    /* 8719 */ element!(VariableAccessedForDebugRefs, 321, ZeroOrOne, false, 0x0, NotRestricted, Some(1298)),
    /* 8720 */ element!(VariableAndParameterInterfaceMapping, 5015, One, false, 0x0, NotRestricted, None),
    /* 8721 */ element!(VariableDataPrototype, 5016, One, false, 0x0, NotRestricted, None),
    /* 8722 */ element!(VariableDataPrototypeIref, 5017, ZeroOrOne, false, 0x0, NotRestricted, Some(3112)),
    /* 8723 */ element!(VariableDataPrototypeIref, 5020, ZeroOrOne, false, 0x0, ClassicPlatform, Some(5972)),
    /* 8724 */ element!(VariableInstance, 260, ZeroOrOne, false, 0x0, NotRestricted, Some(5140)),
    /* 8725 */ element!(VariableInstanceIref, 5023, ZeroOrOne, false, 0x0, NotRestricted, Some(4822)),
    /* 8726 */ element!(VariableLength, 298, ZeroOrOne, false, 0x0, NotRestricted, Some(3812)),
    /* 8727 */ element!(VariableRef, 3160, ZeroOrOne, false, 0x0, NotRestricted, Some(5765)),
    /* 8728 */ element!(VariableRef, 3162, ZeroOrOne, false, 0x0, NotRestricted, Some(2776)),
    /* 8729 */ element!(VariableRef, 3162, ZeroOrOne, false, 0x0, NotRestricted, Some(2911)),
    /* 8730 */ element!(VariableRef, 4711, One, false, 0x0, NotRestricted, Some(4759)),
    /* 8731 */ element!(Variables, 4713, ZeroOrOne, false, 0x0, NotRestricted, Some(143)),
    /* 8732 */ element!(VariantCriterionRef, 3497, ZeroOrOne, false, 0x0, NotRestricted, Some(3482)),
    /* 8733 */ element!(VariantId, 3494, ZeroOrOne, false, 0x0, ClassicPlatform, Some(2513)),
    /* 8734 */ element!(VariantId, 3494, ZeroOrOne, false, 0x0, ClassicPlatform, Some(2514)),
    /* 8735 */ element!(Variation, 298, ZeroOrOne, false, 0x0, NotRestricted, Some(515)),
    /* 8736 */ element!(VariationPoint, 5027, ZeroOrOne, false, 0x0, NotRestricted, Some(4408)),
    /* 8737 */ element!(VariationPoint, 5027, ZeroOrOne, false, 0x0, NotRestricted, Some(4409)),
    /* 8738 */ element!(VariationPoint, 5027, ZeroOrOne, false, 0x0, NotRestricted, Some(4410)),
    /* 8739 */ element!(VariationPoint, 5027, ZeroOrOne, false, 0x0, NotRestricted, Some(4411)),
    /* 8740 */ element!(VariationPoint, 5027, ZeroOrOne, false, 0x0, NotRestricted, Some(4412)),
    /* 8741 */ element!(VariationPoint, 5027, ZeroOrOne, false, 0x0, NotRestricted, Some(4413)),
    /* 8742 */ element!(VariationPoint, 5027, ZeroOrOne, false, 0x0, NotRestricted, Some(4414)),
    /* 8743 */ element!(VariationPoint, 5027, ZeroOrOne, false, 0x0, NotRestricted, Some(4415)),
    /* 8744 */ element!(VariationPoint, 5027, ZeroOrOne, false, 0x0, NotRestricted, Some(4416)),
    /* 8745 */ element!(VariationPoint, 5027, ZeroOrOne, false, 0x0, NotRestricted, Some(4417)),
    /* 8746 */ element!(VariationPoint, 5027, ZeroOrOne, false, 0x0, NotRestricted, Some(4418)),
    /* 8747 */ element!(VariationPoint, 5027, ZeroOrOne, false, 0x0, NotRestricted, Some(4419)),
    /* 8748 */ element!(VariationPoint, 5027, ZeroOrOne, false, 0x0, NotRestricted, Some(4420)),
    /* 8749 */ element!(VariationPoint, 5027, ZeroOrOne, false, 0x0, NotRestricted, Some(4421)),
    /* 8750 */ element!(VariationPoint, 5027, ZeroOrOne, false, 0x0, NotRestricted, Some(4422)),
    /* 8751 */ element!(VariationPoint, 5027, ZeroOrOne, false, 0x0, NotRestricted, Some(4423)),
    /* 8752 */ element!(VariationPoint, 5027, ZeroOrOne, false, 0x0, NotRestricted, Some(4424)),
    /* 8753 */ element!(VariationPoint, 5027, ZeroOrOne, false, 0x0, NotRestricted, Some(4425)),
    /* 8754 */ element!(VariationPoint, 5027, ZeroOrOne, false, 0x0, NotRestricted, Some(4426)),
    /* 8755 */ element!(VariationPoint, 5027, ZeroOrOne, false, 0x0, NotRestricted, Some(4427)),
    /* 8756 */ element!(VariationPoint, 5027, ZeroOrOne, false, 0x0, NotRestricted, Some(4428)),
    /* 8757 */ element!(VariationPoint, 5027, ZeroOrOne, false, 0x0, NotRestricted, Some(4429)),
    /* 8758 */ element!(VariationPoint, 5027, ZeroOrOne, false, 0x0, NotRestricted, Some(4430)),
    /* 8759 */ element!(VariationPoint, 5027, ZeroOrOne, false, 0x0, NotRestricted, Some(4431)),
    /* 8760 */ element!(VariationPoint, 5027, ZeroOrOne, false, 0x0, NotRestricted, Some(4432)),
    /* 8761 */ element!(VariationPoint, 5027, ZeroOrOne, false, 0x0, NotRestricted, Some(4433)),
    /* 8762 */ element!(VariationPoint, 5027, ZeroOrOne, false, 0x0, NotRestricted, Some(4434)),
    /* 8763 */ element!(VariationPoint, 5027, ZeroOrOne, false, 0x0, NotRestricted, Some(4435)),
    /* 8764 */ element!(VariationPoint, 5027, ZeroOrOne, false, 0x0, NotRestricted, Some(4436)),
    /* 8765 */ element!(VariationPoint, 5027, ZeroOrOne, false, 0x0, NotRestricted, Some(4437)),
    /* 8766 */ element!(VariationPoint, 5027, ZeroOrOne, false, 0x0, NotRestricted, Some(4438)),
    /* 8767 */ element!(VariationPoint, 5027, ZeroOrOne, false, 0x0, NotRestricted, Some(4439)),
    /* 8768 */ element!(VariationPoint, 5027, ZeroOrOne, false, 0x0, NotRestricted, Some(4440)),
    /* 8769 */ element!(VariationPoint, 5027, ZeroOrOne, false, 0x0, NotRestricted, Some(4441)),
    /* 8770 */ element!(VariationPoint, 5027, ZeroOrOne, false, 0x0, NotRestricted, Some(4442)),
    /* 8771 */ element!(VariationPoint, 5027, ZeroOrOne, false, 0x0, NotRestricted, Some(4443)),
    /* 8772 */ element!(VariationPoint, 5027, ZeroOrOne, false, 0x0, NotRestricted, Some(4444)),
    /* 8773 */ element!(VariationPoint, 5027, ZeroOrOne, false, 0x0, NotRestricted, Some(4445)),
    /* 8774 */ element!(VariationPoint, 5027, ZeroOrOne, false, 0x0, NotRestricted, Some(4446)),
    /* 8775 */ element!(VariationPoint, 5027, ZeroOrOne, false, 0x0, NotRestricted, Some(4447)),
    /* 8776 */ element!(VariationPoint, 5027, ZeroOrOne, false, 0x0, NotRestricted, Some(4448)),
    /* 8777 */ element!(VariationPoint, 5027, ZeroOrOne, false, 0x0, NotRestricted, Some(4449)),
    /* 8778 */ element!(VariationPoint, 5027, ZeroOrOne, false, 0x0, NotRestricted, Some(4450)),
    /* 8779 */ element!(VariationPoint, 5027, ZeroOrOne, false, 0x0, NotRestricted, Some(4451)),
    /* 8780 */ element!(VariationPoint, 5027, ZeroOrOne, false, 0x0, NotRestricted, Some(4452)),
    /* 8781 */ element!(VariationPoint, 5027, ZeroOrOne, false, 0x0, NotRestricted, Some(4453)),
    /* 8782 */ element!(VariationPoint, 5027, ZeroOrOne, false, 0x0, NotRestricted, Some(4454)),
    /* 8783 */ element!(VariationPoint, 5027, ZeroOrOne, false, 0x0, NotRestricted, Some(4455)),
    /* 8784 */ element!(VariationPoint, 5027, ZeroOrOne, false, 0x0, NotRestricted, Some(4456)),
    /* 8785 */ element!(VariationPoint, 5027, ZeroOrOne, false, 0x0, NotRestricted, Some(4457)),
    /* 8786 */ element!(VariationPoint, 5027, ZeroOrOne, false, 0x0, NotRestricted, Some(4458)),
    /* 8787 */ element!(VariationPoint, 5027, ZeroOrOne, false, 0x0, NotRestricted, Some(4459)),
    /* 8788 */ element!(VariationPoint, 5027, ZeroOrOne, false, 0x0, NotRestricted, Some(4460)),
    /* 8789 */ element!(VariationPoint, 5027, ZeroOrOne, false, 0x0, NotRestricted, Some(4461)),
    /* 8790 */ element!(VariationPoint, 5027, ZeroOrOne, false, 0x0, NotRestricted, Some(4462)),
    /* 8791 */ element!(VariationPoint, 5027, ZeroOrOne, false, 0x0, NotRestricted, Some(4463)),
    /* 8792 */ element!(VariationPoint, 5027, ZeroOrOne, false, 0x0, NotRestricted, Some(4464)),
    /* 8793 */ element!(VariationPoint, 5027, ZeroOrOne, false, 0x0, NotRestricted, Some(4465)),
    /* 8794 */ element!(VariationPoint, 5027, ZeroOrOne, false, 0x0, NotRestricted, Some(4466)),
    /* 8795 */ element!(VariationPoint, 5027, ZeroOrOne, false, 0x0, NotRestricted, Some(4467)),
    /* 8796 */ element!(VariationPoint, 5027, ZeroOrOne, false, 0x0, NotRestricted, Some(4468)),
    /* 8797 */ element!(VariationPoint, 5027, ZeroOrOne, false, 0x0, NotRestricted, Some(4469)),
    /* 8798 */ element!(VariationPoint, 5027, ZeroOrOne, false, 0x0, NotRestricted, Some(4470)),
    /* 8799 */ element!(VariationPoint, 5027, ZeroOrOne, false, 0x0, NotRestricted, Some(4471)),
    /* 8800 */ element!(VariationPoint, 5027, ZeroOrOne, false, 0x0, NotRestricted, Some(4472)),
    /* 8801 */ element!(VariationPoint, 5027, ZeroOrOne, false, 0x0, NotRestricted, Some(4473)),
    /* 8802 */ element!(VariationPoint, 5027, ZeroOrOne, false, 0x0, NotRestricted, Some(4474)),
    /* 8803 */ element!(VariationPoint, 5027, ZeroOrOne, false, 0x0, NotRestricted, Some(4475)),
    /* 8804 */ element!(VariationPoint, 5027, ZeroOrOne, false, 0x0, NotRestricted, Some(4476)),
    /* 8805 */ element!(VariationPoint, 5027, ZeroOrOne, false, 0x0, NotRestricted, Some(4477)),
    /* 8806 */ element!(VariationPoint, 5027, ZeroOrOne, false, 0x0, NotRestricted, Some(4478)),
    /* 8807 */ element!(VariationPoint, 5027, ZeroOrOne, false, 0x0, NotRestricted, Some(4479)),
    /* 8808 */ element!(VariationPoint, 5027, ZeroOrOne, false, 0x0, NotRestricted, Some(4480)),
    /* 8809 */ element!(VariationPoint, 5027, ZeroOrOne, false, 0x0, NotRestricted, Some(4481)),
    /* 8810 */ element!(VariationPoint, 5027, ZeroOrOne, false, 0x0, NotRestricted, Some(4482)),
    /* 8811 */ element!(VariationPoint, 5027, ZeroOrOne, false, 0x0, NotRestricted, Some(4483)),
    /* 8812 */ element!(VariationPoint, 5027, ZeroOrOne, false, 0x0, NotRestricted, Some(4484)),
    /* 8813 */ element!(VariationPoint, 5027, ZeroOrOne, false, 0x0, NotRestricted, Some(4485)),
    /* 8814 */ element!(VariationPoint, 5027, ZeroOrOne, false, 0x0, NotRestricted, Some(4486)),
    /* 8815 */ element!(VariationPoint, 5027, ZeroOrOne, false, 0x0, NotRestricted, Some(4487)),
    /* 8816 */ element!(VariationPoint, 5027, ZeroOrOne, false, 0x0, NotRestricted, Some(4488)),
    /* 8817 */ element!(VariationPoint, 5027, ZeroOrOne, false, 0x0, NotRestricted, Some(4489)),
    /* 8818 */ element!(VariationPoint, 5027, ZeroOrOne, false, 0x0, NotRestricted, Some(4490)),
    /* 8819 */ element!(VariationPoint, 5027, ZeroOrOne, false, 0x0, NotRestricted, Some(4491)),
    /* 8820 */ element!(VariationPoint, 5027, ZeroOrOne, false, 0x0, NotRestricted, Some(4492)),
    /* 8821 */ element!(VariationPoint, 5027, ZeroOrOne, false, 0x0, NotRestricted, Some(4493)),
    /* 8822 */ element!(VariationPoint, 5027, ZeroOrOne, false, 0x0, NotRestricted, Some(4494)),
    /* 8823 */ element!(VariationPoint, 5027, ZeroOrOne, false, 0x0, NotRestricted, Some(4495)),
    /* 8824 */ element!(VariationPoint, 5027, ZeroOrOne, false, 0x0, NotRestricted, Some(4496)),
    /* 8825 */ element!(VariationPoint, 5027, ZeroOrOne, false, 0x0, NotRestricted, Some(4497)),
    /* 8826 */ element!(VariationPoint, 5027, ZeroOrOne, false, 0x0, NotRestricted, Some(4498)),
    /* 8827 */ element!(VariationPoint, 5027, ZeroOrOne, false, 0x0, NotRestricted, Some(4499)),
    /* 8828 */ element!(VariationPoint, 5027, ZeroOrOne, false, 0x0, NotRestricted, Some(4500)),
    /* 8829 */ element!(VariationPoint, 5027, ZeroOrOne, false, 0x0, NotRestricted, Some(4501)),
    /* 8830 */ element!(VariationPoint, 5027, ZeroOrOne, false, 0x0, NotRestricted, Some(4502)),
    /* 8831 */ element!(VariationPoint, 5027, ZeroOrOne, false, 0x0, NotRestricted, Some(4503)),
    /* 8832 */ element!(VariationPoint, 5027, ZeroOrOne, false, 0x0, NotRestricted, Some(4504)),
    /* 8833 */ element!(VariationPoint, 5027, ZeroOrOne, false, 0x0, NotRestricted, Some(4505)),
    /* 8834 */ element!(VariationPoint, 5027, ZeroOrOne, false, 0x0, NotRestricted, Some(4506)),
    /* 8835 */ element!(VariationPoint, 5027, ZeroOrOne, false, 0x0, NotRestricted, Some(4507)),
    /* 8836 */ element!(VariationPoint, 5027, ZeroOrOne, false, 0x0, NotRestricted, Some(4508)),
    /* 8837 */ element!(VariationPoint, 5027, ZeroOrOne, false, 0x0, NotRestricted, Some(4509)),
    /* 8838 */ element!(VariationPoint, 5027, ZeroOrOne, false, 0x0, NotRestricted, Some(4510)),
    /* 8839 */ element!(VariationPoint, 5027, ZeroOrOne, false, 0x0, NotRestricted, Some(4511)),
    /* 8840 */ element!(VariationPoint, 5027, ZeroOrOne, false, 0x0, NotRestricted, Some(4512)),
    /* 8841 */ element!(VariationPoint, 5027, ZeroOrOne, false, 0x0, NotRestricted, Some(4513)),
    /* 8842 */ element!(VariationPoint, 5027, ZeroOrOne, false, 0x0, NotRestricted, Some(4514)),
    /* 8843 */ element!(VariationPoint, 5027, ZeroOrOne, false, 0x0, NotRestricted, Some(4515)),
    /* 8844 */ element!(VariationPoint, 5027, ZeroOrOne, false, 0x0, NotRestricted, Some(4516)),
    /* 8845 */ element!(VariationPoint, 5027, ZeroOrOne, false, 0x0, NotRestricted, Some(4517)),
    /* 8846 */ element!(VariationPoint, 5027, ZeroOrOne, false, 0x0, NotRestricted, Some(4518)),
    /* 8847 */ element!(VariationPoint, 5027, ZeroOrOne, false, 0x0, NotRestricted, Some(4519)),
    /* 8848 */ element!(VariationPoint, 5027, ZeroOrOne, false, 0x0, NotRestricted, Some(4520)),
    /* 8849 */ element!(VariationPoint, 5027, ZeroOrOne, false, 0x0, NotRestricted, Some(4521)),
    /* 8850 */ element!(VariationPoint, 5027, ZeroOrOne, false, 0x0, NotRestricted, Some(4522)),
    /* 8851 */ element!(VariationPoint, 5027, ZeroOrOne, false, 0x0, NotRestricted, Some(4523)),
    /* 8852 */ element!(VariationPoint, 5027, ZeroOrOne, false, 0x0, NotRestricted, Some(4524)),
    /* 8853 */ element!(VariationPoint, 5027, ZeroOrOne, false, 0x0, NotRestricted, Some(4525)),
    /* 8854 */ element!(VariationPoint, 5027, ZeroOrOne, false, 0x0, NotRestricted, Some(4526)),
    /* 8855 */ element!(VariationPoint, 5027, ZeroOrOne, false, 0x0, NotRestricted, Some(4527)),
    /* 8856 */ element!(VariationPoint, 5027, ZeroOrOne, false, 0x0, NotRestricted, Some(4528)),
    /* 8857 */ element!(VariationPoint, 5027, ZeroOrOne, false, 0x0, NotRestricted, Some(4529)),
    /* 8858 */ element!(VariationPoint, 5027, ZeroOrOne, false, 0x0, NotRestricted, Some(4530)),
    /* 8859 */ element!(VariationPoint, 5027, ZeroOrOne, false, 0x0, NotRestricted, Some(4531)),
    /* 8860 */ element!(VariationPoint, 5027, ZeroOrOne, false, 0x0, NotRestricted, Some(4532)),
    /* 8861 */ element!(VariationPoint, 5027, ZeroOrOne, false, 0x0, NotRestricted, Some(4533)),
    /* 8862 */ element!(VariationPoint, 5027, ZeroOrOne, false, 0x0, NotRestricted, Some(4534)),
    /* 8863 */ element!(VariationPoint, 5027, ZeroOrOne, false, 0x0, NotRestricted, Some(4535)),
    /* 8864 */ element!(VariationPoint, 5027, ZeroOrOne, false, 0x0, NotRestricted, Some(4536)),
    /* 8865 */ element!(VariationPoint, 5027, ZeroOrOne, false, 0x0, NotRestricted, Some(4537)),
    /* 8866 */ element!(VariationPoint, 5027, ZeroOrOne, false, 0x0, NotRestricted, Some(4538)),
    /* 8867 */ element!(VariationPoint, 5027, ZeroOrOne, false, 0x0, NotRestricted, Some(4539)),
    /* 8868 */ element!(VariationPoint, 5027, ZeroOrOne, false, 0x0, NotRestricted, Some(4540)),
    /* 8869 */ element!(VariationPoint, 5027, ZeroOrOne, false, 0x0, NotRestricted, Some(4541)),
    /* 8870 */ element!(VariationPoint, 5027, ZeroOrOne, false, 0x0, NotRestricted, Some(4542)),
    /* 8871 */ element!(VariationPoint, 5027, ZeroOrOne, false, 0x0, NotRestricted, Some(4543)),
    /* 8872 */ element!(VariationPoint, 5027, ZeroOrOne, false, 0x0, NotRestricted, Some(4544)),
    /* 8873 */ element!(VariationPoint, 5027, ZeroOrOne, false, 0x0, NotRestricted, Some(4545)),
    /* 8874 */ element!(VariationPoint, 5027, ZeroOrOne, false, 0x0, NotRestricted, Some(4546)),
    /* 8875 */ element!(VariationPoint, 5027, ZeroOrOne, false, 0x0, NotRestricted, Some(4547)),
    /* 8876 */ element!(VariationPoint, 5027, ZeroOrOne, false, 0x0, NotRestricted, Some(4548)),
    /* 8877 */ element!(VariationPoint, 5027, ZeroOrOne, false, 0x0, NotRestricted, Some(4549)),
    /* 8878 */ element!(VariationPoint, 5027, ZeroOrOne, false, 0x0, NotRestricted, Some(4550)),
    /* 8879 */ element!(VariationPoint, 5027, ZeroOrOne, false, 0x0, NotRestricted, Some(4551)),
    /* 8880 */ element!(VariationPoint, 5027, ZeroOrOne, false, 0x0, NotRestricted, Some(4552)),
    /* 8881 */ element!(VariationPoint, 5027, ZeroOrOne, false, 0x0, NotRestricted, Some(4553)),
    /* 8882 */ element!(VariationPoint, 5027, ZeroOrOne, false, 0x0, NotRestricted, Some(4554)),
    /* 8883 */ element!(VariationPoint, 5027, ZeroOrOne, false, 0x0, NotRestricted, Some(4555)),
    /* 8884 */ element!(VariationPoint, 5027, ZeroOrOne, false, 0x0, NotRestricted, Some(4556)),
    /* 8885 */ element!(VariationPoint, 5027, ZeroOrOne, false, 0x0, NotRestricted, Some(4557)),
    /* 8886 */ element!(VariationPoint, 5027, ZeroOrOne, false, 0x0, NotRestricted, Some(4558)),
    /* 8887 */ element!(VariationPoint, 5027, ZeroOrOne, false, 0x0, NotRestricted, Some(4559)),
    /* 8888 */ element!(VariationPoint, 5027, ZeroOrOne, false, 0x0, NotRestricted, Some(4560)),
    /* 8889 */ element!(VariationPoint, 5027, ZeroOrOne, false, 0x0, NotRestricted, Some(4561)),
    /* 8890 */ element!(VariationPoint, 5027, ZeroOrOne, false, 0x0, NotRestricted, Some(4562)),
    /* 8891 */ element!(VariationPoint, 5027, ZeroOrOne, false, 0x0, NotRestricted, Some(4563)),
    /* 8892 */ element!(VariationPoint, 5027, ZeroOrOne, false, 0x0, NotRestricted, Some(4564)),
    /* 8893 */ element!(VariationPoint, 5027, ZeroOrOne, false, 0x0, NotRestricted, Some(4565)),
    /* 8894 */ element!(VariationPoint, 5027, ZeroOrOne, false, 0x0, NotRestricted, Some(4566)),
    /* 8895 */ element!(VariationPoint, 5027, ZeroOrOne, false, 0x0, NotRestricted, Some(4567)),
    /* 8896 */ element!(VariationPoint, 5027, ZeroOrOne, false, 0x0, NotRestricted, Some(4568)),
    /* 8897 */ element!(VariationPoint, 5027, ZeroOrOne, false, 0x0, NotRestricted, Some(4569)),
    /* 8898 */ element!(VariationPoint, 5027, ZeroOrOne, false, 0x0, NotRestricted, Some(4570)),
    /* 8899 */ element!(VariationPoint, 5027, ZeroOrOne, false, 0x0, NotRestricted, Some(4571)),
    /* 8900 */ element!(VariationPoint, 5027, ZeroOrOne, false, 0x0, NotRestricted, Some(4572)),
    /* 8901 */ element!(VariationPoint, 5027, ZeroOrOne, false, 0x0, NotRestricted, Some(4573)),
    /* 8902 */ element!(VariationPoint, 5027, ZeroOrOne, false, 0x0, NotRestricted, Some(4574)),
    /* 8903 */ element!(VariationPoint, 5027, ZeroOrOne, false, 0x0, NotRestricted, Some(4575)),
    /* 8904 */ element!(VariationPoint, 5027, ZeroOrOne, false, 0x0, NotRestricted, Some(4576)),
    /* 8905 */ element!(VariationPoint, 5027, ZeroOrOne, false, 0x0, NotRestricted, Some(4577)),
    /* 8906 */ element!(VariationPoint, 5027, ZeroOrOne, false, 0x0, NotRestricted, Some(4578)),
    /* 8907 */ element!(VariationPoint, 5027, ZeroOrOne, false, 0x0, NotRestricted, Some(4579)),
    /* 8908 */ element!(VariationPoint, 5027, ZeroOrOne, false, 0x0, NotRestricted, Some(4580)),
    /* 8909 */ element!(VariationPoint, 5027, ZeroOrOne, false, 0x0, NotRestricted, Some(4581)),
    /* 8910 */ element!(VariationPoint, 5027, ZeroOrOne, false, 0x0, NotRestricted, Some(4582)),
    /* 8911 */ element!(VariationPoint, 5027, ZeroOrOne, false, 0x0, NotRestricted, Some(4583)),
    /* 8912 */ element!(VariationPoint, 5027, ZeroOrOne, false, 0x0, NotRestricted, Some(4584)),
    /* 8913 */ element!(VariationPoint, 5027, ZeroOrOne, false, 0x0, NotRestricted, Some(4585)),
    /* 8914 */ element!(VariationPoint, 5027, ZeroOrOne, false, 0x0, NotRestricted, Some(4586)),
    /* 8915 */ element!(VariationPoint, 5027, ZeroOrOne, false, 0x0, NotRestricted, Some(4587)),
    /* 8916 */ element!(VariationPoint, 5027, ZeroOrOne, false, 0x0, NotRestricted, Some(4588)),
    /* 8917 */ element!(VariationPoint, 5027, ZeroOrOne, false, 0x0, NotRestricted, Some(4589)),
    /* 8918 */ element!(VariationPoint, 5027, ZeroOrOne, false, 0x0, NotRestricted, Some(4590)),
    /* 8919 */ element!(VariationPoint, 5027, ZeroOrOne, false, 0x0, NotRestricted, Some(4591)),
    /* 8920 */ element!(VariationPoint, 5027, ZeroOrOne, false, 0x0, NotRestricted, Some(4592)),
    /* 8921 */ element!(VariationPoint, 5027, ZeroOrOne, false, 0x0, NotRestricted, Some(4593)),
    /* 8922 */ element!(VariationPoint, 5027, One, false, 0x0, NotRestricted, Some(4594)),
    /* 8923 */ element!(VariationPoint, 5027, ZeroOrOne, false, 0x0, NotRestricted, Some(4595)),
    /* 8924 */ element!(VariationPoint, 5027, ZeroOrOne, false, 0x0, NotRestricted, Some(4596)),
    /* 8925 */ element!(VariationPoint, 5027, ZeroOrOne, false, 0x0, NotRestricted, Some(4597)),
    /* 8926 */ element!(VariationPoint, 5027, ZeroOrOne, false, 0x0, NotRestricted, Some(4598)),
    /* 8927 */ element!(VariationPoint, 5027, ZeroOrOne, false, 0x0, NotRestricted, Some(4599)),
    /* 8928 */ element!(VariationPoint, 5027, ZeroOrOne, false, 0x0, NotRestricted, Some(4600)),
    /* 8929 */ element!(VariationPoint, 5027, ZeroOrOne, false, 0x0, NotRestricted, Some(4601)),
    /* 8930 */ element!(VariationPoint, 5027, ZeroOrOne, false, 0x0, NotRestricted, Some(4602)),
    /* 8931 */ element!(VariationPoint, 5027, ZeroOrOne, false, 0x0, NotRestricted, Some(4603)),
    /* 8932 */ element!(VariationPoint, 5027, ZeroOrOne, false, 0x0, NotRestricted, Some(4604)),
    /* 8933 */ element!(VariationPoint, 5027, ZeroOrOne, false, 0x0, NotRestricted, Some(4605)),
    /* 8934 */ element!(VariationPoint, 5027, ZeroOrOne, false, 0x0, NotRestricted, Some(4606)),
    /* 8935 */ element!(VariationPoint, 5027, ZeroOrOne, false, 0x0, NotRestricted, Some(4607)),
    /* 8936 */ element!(VariationPoint, 5027, ZeroOrOne, false, 0x0, NotRestricted, Some(4608)),
    /* 8937 */ element!(VariationPoint, 5027, ZeroOrOne, false, 0x0, NotRestricted, Some(4609)),
    /* 8938 */ element!(VariationPoint, 5027, ZeroOrOne, false, 0x0, NotRestricted, Some(4610)),
    /* 8939 */ element!(VariationPoint, 5027, ZeroOrOne, false, 0x0, NotRestricted, Some(4611)),
    /* 8940 */ element!(VariationPoint, 5027, ZeroOrOne, false, 0x0, NotRestricted, Some(4612)),
    /* 8941 */ element!(VariationPoint, 5027, ZeroOrOne, false, 0x0, NotRestricted, Some(4613)),
    /* 8942 */ element!(VariationPoint, 5027, ZeroOrOne, false, 0x0, NotRestricted, Some(4614)),
    /* 8943 */ element!(VariationPoint, 5027, ZeroOrOne, false, 0x0, NotRestricted, Some(4615)),
    /* 8944 */ element!(VariationPoint, 5027, ZeroOrOne, false, 0x0, NotRestricted, Some(4616)),
    /* 8945 */ element!(VariationPoint, 5027, ZeroOrOne, false, 0x0, NotRestricted, Some(4617)),
    /* 8946 */ element!(VariationPoint, 5027, ZeroOrOne, false, 0x0, NotRestricted, Some(4618)),
    /* 8947 */ element!(VariationPoint, 5027, ZeroOrOne, false, 0x0, NotRestricted, Some(4619)),
    /* 8948 */ element!(VariationPoint, 5027, ZeroOrOne, false, 0x0, NotRestricted, Some(4620)),
    /* 8949 */ element!(VariationPoint, 5027, ZeroOrOne, false, 0x0, NotRestricted, Some(4621)),
    /* 8950 */ element!(VariationPoint, 5027, ZeroOrOne, false, 0x0, NotRestricted, Some(4622)),
    /* 8951 */ element!(VariationPoint, 5027, ZeroOrOne, false, 0x0, NotRestricted, Some(4623)),
    /* 8952 */ element!(VariationPoint, 5027, ZeroOrOne, false, 0x0, NotRestricted, Some(4624)),
    /* 8953 */ element!(VariationPoint, 5027, ZeroOrOne, false, 0x0, NotRestricted, Some(4625)),
    /* 8954 */ element!(VariationPoint, 5027, ZeroOrOne, false, 0x0, NotRestricted, Some(4626)),
    /* 8955 */ element!(VariationPoint, 5027, ZeroOrOne, false, 0x0, NotRestricted, Some(4627)),
    /* 8956 */ element!(VariationPoint, 5027, ZeroOrOne, false, 0x0, NotRestricted, Some(4628)),
    /* 8957 */ element!(VariationPoint, 5027, ZeroOrOne, false, 0x0, NotRestricted, Some(4629)),
    /* 8958 */ element!(VariationPoint, 5027, ZeroOrOne, false, 0x0, NotRestricted, Some(4630)),
    /* 8959 */ element!(VariationPoint, 5027, ZeroOrOne, false, 0x0, NotRestricted, Some(4631)),
    /* 8960 */ element!(VariationPoint, 5027, ZeroOrOne, false, 0x0, NotRestricted, Some(4632)),
    /* 8961 */ element!(VariationPoint, 5027, ZeroOrOne, false, 0x0, NotRestricted, Some(4633)),
    /* 8962 */ element!(VariationPoint, 5027, ZeroOrOne, false, 0x0, NotRestricted, Some(4634)),
    /* 8963 */ element!(VariationPoint, 5027, ZeroOrOne, false, 0x0, NotRestricted, Some(4635)),
    /* 8964 */ element!(VariationPoint, 5027, ZeroOrOne, false, 0x0, NotRestricted, Some(4636)),
    /* 8965 */ element!(VariationPoint, 5027, ZeroOrOne, false, 0x0, NotRestricted, Some(4637)),
    /* 8966 */ element!(VariationPoint, 5027, ZeroOrOne, false, 0x0, NotRestricted, Some(4638)),
    /* 8967 */ element!(VariationPoint, 5027, ZeroOrOne, false, 0x0, NotRestricted, Some(4639)),
    /* 8968 */ element!(VariationPoint, 5027, ZeroOrOne, false, 0x0, NotRestricted, Some(4640)),
    /* 8969 */ element!(VariationPoint, 5027, ZeroOrOne, false, 0x0, NotRestricted, Some(4641)),
    /* 8970 */ element!(VariationPoint, 5027, ZeroOrOne, false, 0x0, NotRestricted, Some(4642)),
    /* 8971 */ element!(VariationPoint, 5027, ZeroOrOne, false, 0x0, NotRestricted, Some(4643)),
    /* 8972 */ element!(VariationPoint, 5027, ZeroOrOne, false, 0x0, NotRestricted, Some(4644)),
    /* 8973 */ element!(VariationPoint, 5027, ZeroOrOne, false, 0x0, NotRestricted, Some(4645)),
    /* 8974 */ element!(VariationPoint, 5027, ZeroOrOne, false, 0x0, NotRestricted, Some(4646)),
    /* 8975 */ element!(VariationPoint, 5027, ZeroOrOne, false, 0x0, NotRestricted, Some(4647)),
    /* 8976 */ element!(VariationPoint, 5027, ZeroOrOne, false, 0x0, NotRestricted, Some(4648)),
    /* 8977 */ element!(VariationPoint, 5027, ZeroOrOne, false, 0x0, NotRestricted, Some(4649)),
    /* 8978 */ element!(VariationPoint, 5027, ZeroOrOne, false, 0x0, NotRestricted, Some(4650)),
    /* 8979 */ element!(VariationPoint, 5027, ZeroOrOne, false, 0x0, NotRestricted, Some(4651)),
    /* 8980 */ element!(VariationPoint, 5027, ZeroOrOne, false, 0x0, NotRestricted, Some(4652)),
    /* 8981 */ element!(VariationPoint, 5027, ZeroOrOne, false, 0x0, NotRestricted, Some(4653)),
    /* 8982 */ element!(VariationPoint, 5027, ZeroOrOne, false, 0x0, NotRestricted, Some(4654)),
    /* 8983 */ element!(VariationPoint, 5027, ZeroOrOne, false, 0x0, NotRestricted, Some(4655)),
    /* 8984 */ element!(VariationPoint, 5027, ZeroOrOne, false, 0x0, NotRestricted, Some(4656)),
    /* 8985 */ element!(VariationPoint, 5027, ZeroOrOne, false, 0x0, NotRestricted, Some(4657)),
    /* 8986 */ element!(VariationPoint, 5027, ZeroOrOne, false, 0x0, NotRestricted, Some(4658)),
    /* 8987 */ element!(VariationPoint, 5027, ZeroOrOne, false, 0x0, NotRestricted, Some(4659)),
    /* 8988 */ element!(VariationPoint, 5027, ZeroOrOne, false, 0x0, NotRestricted, Some(4660)),
    /* 8989 */ element!(VariationPoint, 5027, ZeroOrOne, false, 0x0, NotRestricted, Some(4661)),
    /* 8990 */ element!(VariationPoint, 5027, ZeroOrOne, false, 0x0, NotRestricted, Some(4662)),
    /* 8991 */ element!(VariationPoint, 5027, ZeroOrOne, false, 0x0, NotRestricted, Some(4663)),
    /* 8992 */ element!(VariationPoint, 5027, ZeroOrOne, false, 0x0, NotRestricted, Some(4664)),
    /* 8993 */ element!(VariationPointProxy, 5029, One, false, 0x0, NotRestricted, None),
    /* 8994 */ element!(VariationPointProxys, 367, ZeroOrOne, false, 0x1FFF80, NotRestricted, Some(1780)),
    /* 8995 */ element!(VariationPointProxys, 4531, ZeroOrOne, false, 0x1FFF80, NotRestricted, Some(1780)),
    /* 8996 */ element!(VariationRestriction, 5034, ZeroOrOne, false, 0x0, NotRestricted, Some(2306)),
    /* 8997 */ element!(VariationRestriction, 5034, ZeroOrOne, false, 0x0, NotRestricted, Some(2486)),
    /* 8998 */ element!(Vcid, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(6000)),
    /* 8999 */ element!(VehicleAnnouncementCount, 3494, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(1629)),
    /* 9000 */ element!(VehicleAnnouncementCount, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(3727)),
    /* 9001 */ element!(VehicleAnnouncementInterval, 2229, ZeroOrOne, false, 0x0, NotRestricted, Some(3787)),
    /* 9002 */ element!(VehicleAnnouncementInterval, 2229, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5877)),
    /* 9003 */ element!(VehicleDescriptionRef, 5043, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5163)),
    /* 9004 */ element!(VehicleDriverNotification, 5035, One, false, 0x0, NotRestricted, None),
    /* 9005 */ element!(VehicleIdentificationSyncStatus, 298, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(520)),
    /* 9006 */ element!(VehiclePackage, 5037, One, false, 0x0, NotRestricted, None),
    /* 9007 */ element!(VehicleRolloutStep, 5044, One, false, 0x0, NotRestricted, None),
    /* 9008 */ element!(VehicleSystem, 2642, ZeroOrOne, false, 0x0, ClassicPlatform, Some(5975)),
    /* 9009 */ element!(VehicleSystemInstance, 2642, ZeroOrOne, false, 0x0, ClassicPlatform, Some(5974)),
    /* 9010 */ element!(Vendor, 4393, ZeroOrOne, false, 0x0, NotRestricted, Some(5978)),
    /* 9011 */ element!(Vendor, 4393, ZeroOrOne, false, 0x0, NotRestricted, Some(5979)),
    /* 9012 */ element!(Vendor, 5078, ZeroOrOne, false, 0x0, NotRestricted, Some(5978)),
    /* 9013 */ element!(Vendor, 5078, ZeroOrOne, false, 0x0, NotRestricted, Some(5979)),
    /* 9014 */ element!(VendorApiInfix, 2500, ZeroOrOne, false, 0x0, ClassicPlatform, Some(1288)),
    /* 9015 */ element!(VendorId, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(1024)),
    /* 9016 */ element!(VendorId, 3494, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5976)),
    /* 9017 */ element!(VendorId, 3494, ZeroOrOne, false, 0x0, ClassicPlatform, Some(5977)),
    /* 9018 */ element!(VendorSignatureRef, 4216, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5091)),
    /* 9019 */ element!(VendorSpecificModuleDefRef, 1880, One, false, 0x0, NotRestricted, None),
    /* 9020 */ element!(VendorSpecificModuleDefRefs, 344, ZeroOrOne, false, 0x0, ClassicPlatform, Some(1797)),
    /* 9021 */ element!(VendorSpecificServiceNeeds, 5047, One, false, 0x0, NotRestricted, None),
    /* 9022 */ element!(Verbatim, 3067, ZeroOrOne, false, 0x0, NotRestricted, Some(20)),
    /* 9023 */ element!(Verbatim, 3067, One, false, 0x0, NotRestricted, Some(5398)),
    /* 9024 */ element!(Verbatim, 3067, One, false, 0x0, NotRestricted, Some(5429)),
    /* 9025 */ element!(Verbatim, 3067, One, false, 0xC0000, NotRestricted, Some(5429)),
    /* 9026 */ element!(Verbatim, 3067, ZeroOrOne, false, 0x0, NotRestricted, Some(6060)),
    /* 9027 */ element!(VerificationHash, 4393, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3685)),
    /* 9028 */ element!(VerificationMethod, 1108, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3292)),
    /* 9029 */ element!(VerificationStatusIndicationMode, 5049, ZeroOrOne, false, 0x0, NotRestricted, Some(4046)),
    /* 9030 */ element!(VerifyIref, 2295, One, false, 0x0, NotRestricted, None),
    /* 9031 */ element!(VerifyIrefs, 4233, ZeroOrOne, true, 0x0, AdaptivePlatform, Some(3087)),
    /* 9032 */ element!(VerifyRef, 4228, One, false, 0x0, NotRestricted, None),
    /* 9033 */ element!(VerifyRefs, 4229, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5023)),
    /* 9034 */ element!(VerifyUpdate, 4949, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3936)),
    /* 9035 */ element!(Version, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(2308)),
    /* 9036 */ element!(Version, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(2309)),
    /* 9037 */ element!(Version, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(5982)),
    /* 9038 */ element!(Version, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(5986)),
    /* 9039 */ element!(Version, 4393, ZeroOrOne, false, 0x0, NotRestricted, Some(997)),
    /* 9040 */ element!(Version, 4393, ZeroOrOne, false, 0x0, NotRestricted, Some(998)),
    /* 9041 */ element!(Version, 4393, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(4069)),
    /* 9042 */ element!(Version, 4393, ZeroOrOne, false, 0x0, NotRestricted, Some(5985)),
    /* 9043 */ element!(Version, 4393, ZeroOrOne, false, 0x0, NotRestricted, Some(5988)),
    /* 9044 */ element!(Version, 4393, ZeroOrOne, false, 0x0, NotRestricted, Some(5990)),
    /* 9045 */ element!(Version, 4393, ZeroOrOne, false, 0x0, NotRestricted, Some(5991)),
    /* 9046 */ element!(Version, 4393, ZeroOrOne, false, 0x0, NotRestricted, Some(5992)),
    /* 9047 */ element!(Version, 4394, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(2799)),
    /* 9048 */ element!(Version, 4394, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3523)),
    /* 9049 */ element!(Version, 4394, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3757)),
    /* 9050 */ element!(Version, 4394, ZeroOrOne, false, 0x0, NotRestricted, Some(4169)),
    /* 9051 */ element!(Version, 4394, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(4169)),
    /* 9052 */ element!(Version, 4394, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5987)),
    /* 9053 */ element!(Version, 4843, ZeroOrOne, false, 0x0, NotRestricted, Some(4280)),
    /* 9054 */ element!(Version, 5078, ZeroOrOne, false, 0x0, NotRestricted, Some(997)),
    /* 9055 */ element!(Version, 5078, ZeroOrOne, false, 0x0, NotRestricted, Some(998)),
    /* 9056 */ element!(VersionDrivenFindBehavior, 4053, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(684)),
    /* 9057 */ element!(VersionDrivenFindBehavior, 4053, ZeroOrOne, false, 0x0, NotRestricted, Some(684)),
    /* 9058 */ element!(Vf, 2231, One, false, 0x0, NotRestricted, Some(3456)),
    /* 9059 */ element!(Vf, 2231, ZeroOrOne, false, 0x0, NotRestricted, Some(4094)),
    /* 9060 */ element!(Vf, 2231, Any, true, 0x0, NotRestricted, Some(4173)),
    /* 9061 */ element!(Vf, 2231, One, true, 0x0, NotRestricted, Some(4741)),
    /* 9062 */ element!(Vf, 2231, One, false, 0x0, NotRestricted, Some(5361)),
    /* 9063 */ element!(Vf, 2231, ZeroOrOne, false, 0x0, NotRestricted, Some(5953)),
    /* 9064 */ element!(VfbTiming, 5050, One, false, 0x0, NotRestricted, None),
    /* 9065 */ element!(VfcIref, 3451, One, false, 0x0, NotRestricted, None),
    /* 9066 */ element!(VfcIrefs, 3428, ZeroOrOne, false, 0x0, NotRestricted, Some(6001)),
    /* 9067 */ element!(Vg, 5009, One, false, 0x0, NotRestricted, Some(3450)),
    /* 9068 */ element!(ViewMap, 5051, One, false, 0x0, NotRestricted, None),
    /* 9069 */ element!(ViewMapSet, 5056, One, false, 0x0, NotRestricted, None),
    /* 9070 */ element!(ViewMaps, 5057, ZeroOrOne, false, 0x0, NotRestricted, Some(5999)),
    /* 9071 */ element!(VinInvalidityPattern, 3494, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(2498)),
    /* 9072 */ element!(ViolatedSafetyConditionBehavior, 5058, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(4045)),
    /* 9073 */ element!(Vlan, 5059, ZeroOrOne, false, 0x0, NotRestricted, Some(5952)),
    /* 9074 */ element!(VlanId, 3494, ZeroOrOne, false, 0x0, ClassicPlatform, Some(1042)),
    /* 9075 */ element!(VlanId, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(1044)),
    /* 9076 */ element!(VlanIdentifier, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(29)),
    /* 9077 */ element!(VlanMembership, 5060, One, false, 0x0, NotRestricted, None),
    /* 9078 */ element!(VlanMemberships, 783, ZeroOrOne, false, 0x0, NotRestricted, Some(1515)),
    /* 9079 */ element!(VlanModifierRef, 784, ZeroOrOne, false, 0x0, NotRestricted, Some(112)),
    /* 9080 */ element!(VlanPriority, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(786)),
    /* 9081 */ element!(VlanPriority, 3494, ZeroOrOne, false, 0x0, ClassicPlatform, Some(1041)),
    /* 9082 */ element!(VlanPriority, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(1043)),
    /* 9083 */ element!(VlanPriority, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(1666)),
    /* 9084 */ element!(VlanRef, 2872, One, false, 0x0, NotRestricted, None),
    /* 9085 */ element!(VlanRef, 3113, One, false, 0x0, NotRestricted, None),
    /* 9086 */ element!(VlanRef, 4963, ZeroOrOne, false, 0x0, NotRestricted, Some(2245)),
    /* 9087 */ element!(VlanRef, 5061, ZeroOrOne, false, 0x0, NotRestricted, Some(2247)),
    /* 9088 */ element!(VlanRefs, 2873, ZeroOrOne, false, 0x0, NotRestricted, Some(493)),
    /* 9089 */ element!(VlanRefs, 3114, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(1891)),
    /* 9090 */ element!(VlanTranslationTables, 759, ZeroOrOne, false, 0x0, NotRestricted, Some(810)),
    /* 9091 */ element!(Vt, 4393, ZeroOrOne, false, 0x0, NotRestricted, Some(4095)),
    /* 9092 */ element!(Vt, 5048, ZeroOrOne, false, 0x0, NotRestricted, Some(5384)),
    /* 9093 */ element!(Vt, 5048, ZeroOrOne, false, 0x0, NotRestricted, Some(5385)),
    /* 9094 */ element!(Vt, 5048, One, false, 0x0, NotRestricted, Some(5386)),
    /* 9095 */ element!(Vt, 5048, One, false, 0x0, NotRestricted, Some(5764)),
    /* 9096 */ element!(Vtf, 3138, One, false, 0xC0000, NotRestricted, Some(3326)),
    /* 9097 */ element!(WaitPoint, 5062, One, false, 0x0, NotRestricted, None),
    /* 9098 */ element!(WaitPoints, 3828, ZeroOrOne, false, 0x0, NotRestricted, Some(2778)),
    /* 9099 */ element!(WakeUpByControllerSupported, 298, ZeroOrOne, false, 0x0, NotRestricted, Some(754)),
    /* 9100 */ element!(WakeUpChannel, 298, ZeroOrOne, false, 0x0, NotRestricted, Some(2246)),
    /* 9101 */ element!(WakeUpOverBusSupported, 298, ZeroOrOne, false, 0x0, ClassicPlatform, Some(927)),
    /* 9102 */ element!(WakeUpPattern, 2642, ZeroOrOne, false, 0x0, NotRestricted, Some(1623)),
    /* 9103 */ element!(WakeupForwardLocalEnabled, 298, ZeroOrOne, false, 0x0, NotRestricted, Some(1208)),
    /* 9104 */ element!(WakeupForwardRemoteEnabled, 298, ZeroOrOne, false, 0x0, NotRestricted, Some(1206)),
    /* 9105 */ element!(WakeupFrameRef, 3429, One, false, 0x0, NotRestricted, None),
    /* 9106 */ element!(WakeupFrameRefs, 3430, ZeroOrOne, false, 0x180000, ClassicPlatform, Some(1993)),
    /* 9107 */ element!(WakeupLocalDetectionTime, 2229, ZeroOrOne, false, 0x0, NotRestricted, Some(2626)),
    /* 9108 */ element!(WakeupLocalDurationTime, 2229, ZeroOrOne, false, 0x0, NotRestricted, Some(2627)),
    /* 9109 */ element!(WakeupLocalEnabled, 298, ZeroOrOne, false, 0x0, NotRestricted, Some(1207)),
    /* 9110 */ element!(WakeupRemoteEnabled, 298, ZeroOrOne, false, 0x0, NotRestricted, Some(1209)),
    /* 9111 */ element!(WakeupRepetitionDelayOfWakeupRequest, 2229, ZeroOrOne, false, 0x0, NotRestricted, Some(858)),
    /* 9112 */ element!(WakeupRepetitionsOfWakeupRequest, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(439)),
    /* 9113 */ element!(WakeupRxIdle, 2642, ZeroOrOne, false, 0x0, NotRestricted, Some(1609)),
    /* 9114 */ element!(WakeupRxLow, 2642, ZeroOrOne, false, 0x0, NotRestricted, Some(1610)),
    /* 9115 */ element!(WakeupRxWindow, 2642, ZeroOrOne, false, 0x0, NotRestricted, Some(3126)),
    /* 9116 */ element!(WakeupSleepOnDatalineConfigRef, 785, ZeroOrOne, false, 0x0, NotRestricted, Some(1677)),
    /* 9117 */ element!(WakeupSymbolRxWindow, 2642, ZeroOrOne, false, 0x0, NotRestricted, Some(1608)),
    /* 9118 */ element!(WakeupTxActive, 2642, ZeroOrOne, false, 0x0, NotRestricted, Some(1612)),
    /* 9119 */ element!(WakeupTxIdle, 2642, ZeroOrOne, false, 0x0, NotRestricted, Some(1611)),
    /* 9120 */ element!(WarningIndicatorRequestedBitNeeds, 5064, One, false, 0x0, NotRestricted, None),
    /* 9121 */ element!(WatchdogActionItem, 5065, One, false, 0x0, NotRestricted, None),
    /* 9122 */ element!(WatchdogPhmActionItem, 5067, One, false, 0x0, NotRestricted, None),
    /* 9123 */ element!(WindowSize, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(2412)),
    /* 9124 */ element!(WindowSize, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(2413)),
    /* 9125 */ element!(WindowSizeInit, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(2414)),
    /* 9126 */ element!(WindowSizeInit, 3494, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(2414)),
    /* 9127 */ element!(WindowSizeInvalid, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(2415)),
    /* 9128 */ element!(WindowSizeInvalid, 3494, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(2415)),
    /* 9129 */ element!(WindowSizeValid, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(2416)),
    /* 9130 */ element!(WindowSizeValid, 3494, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(2416)),
    /* 9131 */ element!(WithAuto, 298, ZeroOrOne, false, 0x0, ClassicPlatform, Some(2613)),
    /* 9132 */ element!(WithAuto, 298, ZeroOrOne, false, 0x0, ClassicPlatform, Some(2614)),
    /* 9133 */ element!(WorstCaseExecutionTime, 3068, ZeroOrOne, false, 0x0, NotRestricted, Some(3195)),
    /* 9134 */ element!(WorstCaseHeapUsage, 5069, One, false, 0x0, NotRestricted, None),
    /* 9135 */ element!(WorstCaseStackUsage, 5070, One, false, 0x0, NotRestricted, None),
    /* 9136 */ element!(Write, 569, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3333)),
    /* 9137 */ element!(Write, 569, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5648)),
    /* 9138 */ element!(Write, 569, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(5649)),
    /* 9139 */ element!(WriteAccess, 298, ZeroOrOne, false, 0x0, AdaptivePlatform, Some(3806)),
    /* 9140 */ element!(WriteClassRef, 1688, ZeroOrOne, false, 0x0, NotRestricted, Some(5275)),
    /* 9141 */ element!(WriteClassRef, 1691, ZeroOrOne, false, 0x0, NotRestricted, Some(5294)),
    /* 9142 */ element!(WriteOnlyOnce, 298, ZeroOrOne, false, 0x0, NotRestricted, Some(792)),
    /* 9143 */ element!(WriteVerification, 298, ZeroOrOne, false, 0x0, NotRestricted, Some(513)),
    /* 9144 */ element!(WriterEntityId, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(1025)),
    /* 9145 */ element!(WritingFrequency, 3494, ZeroOrOne, false, 0x0, NotRestricted, Some(1779)),
    /* 9146 */ element!(WritingPriority, 3151, ZeroOrOne, false, 0x0, NotRestricted, Some(2302)),
    /* 9147 */ element!(WritingStrategyRole, 3724, ZeroOrOne, false, 0x0, ClassicPlatform, Some(3496)),
    /* 9148 */ element!(WritingStrategys, 3148, ZeroOrOne, false, 0x0, ClassicPlatform, Some(3496)),
    /* 9149 */ element!(WrittenLocalVariables, 3816, ZeroOrOne, false, 0x1FFC00, NotRestricted, Some(3033)),
    /* 9150 */ element!(WrittenNvData, 260, ZeroOrOne, false, 0x0, ClassicPlatform, Some(1895)),
    /* 9151 */ element!(WrittenReadNvData, 260, ZeroOrOne, false, 0x0, ClassicPlatform, Some(1892)),
    /* 9152 */ element!(WwhObdDtcClass, 1692, ZeroOrOne, false, 0x0, NotRestricted, Some(4016)),
    /* 9153 */ element!(X, 2642, ZeroOrOne, false, 0x0, NotRestricted, Some(5961)),
    /* 9154 */ element!(XcpPdu, 5071, One, false, 0x0, NotRestricted, None),
    /* 9155 */ element!(Xdoc, 5072, One, false, 0x0, NotRestricted, Some(4720)),
    /* 9156 */ element!(Xfile, 5073, One, false, 0x0, NotRestricted, Some(5375)),
    /* 9157 */ element!(Xref, 5074, One, false, 0x0, NotRestricted, Some(4707)),
    /* 9158 */ element!(Xref, 5074, One, false, 0x0, NotRestricted, Some(4708)),
    /* 9159 */ element!(XrefTarget, 5076, One, false, 0x0, NotRestricted, Some(4393)),
];

pub(crate) static AUTOSAR_ELEMENT: u16 = 0;

#[rustfmt::skip]
pub(crate) static SUBELEMENTS: [SubElement; 21263] = [
    e!(61), e!(62), e!(65), e!(66), e!(109), e!(110), e!(112), e!(184), e!(205), e!(242), e!(243), e!(246), e!(257), e!(263), e!(264), e!(280), e!(289), e!(292), e!(294), e!(303), e!(316), e!(320), e!(329), e!(330), e!(335),
    e!(396), e!(562), e!(584), e!(593), e!(598), e!(618), e!(624), e!(632), e!(661), e!(682), e!(683), e!(684), e!(685), e!(707), e!(728), e!(750), e!(771), e!(782), e!(897), e!(912), e!(915), e!(945), e!(958), e!(965), e!(966),
    e!(967), e!(968), e!(969), e!(970), e!(971), e!(978), e!(979), e!(981), e!(982), e!(985), e!(986), e!(987), e!(1048), e!(1067), e!(1075), e!(1076), e!(1077), e!(1087), e!(1146), e!(1155), e!(1157), e!(1173), e!(1199), e!(1382), e!(1428),
    e!(1461), e!(1492), e!(1409), e!(1410), e!(1412), e!(1416), e!(1424), e!(1425), e!(1426), e!(1427), e!(1453), e!(1458), e!(1464), e!(1472), e!(1476), e!(1482), e!(1483), e!(1496), e!(1485), e!(1487), e!(1488), e!(1503), e!(1506), e!(1509), e!(1514),
    e!(1520), e!(1521), e!(1523), e!(1524), e!(1532), e!(1562), e!(1599), e!(1691), e!(1705), e!(1725), e!(1726), e!(1756), e!(1759), e!(1764), e!(1765), e!(1766), e!(1767), e!(1770), e!(1939), e!(1947), e!(1963), e!(1973), e!(1974), e!(1975), e!(1977),
    e!(1978), e!(1979), e!(1980), e!(1981), e!(1983), e!(1984), e!(1986), e!(1987), e!(1988), e!(1989), e!(1990), e!(1991), e!(1992), e!(1993), e!(2002), e!(2005), e!(2014), e!(2015), e!(2016), e!(2019), e!(2020), e!(2023), e!(2029), e!(2030), e!(2031),
    e!(2035), e!(2038), e!(2039), e!(2040), e!(2041), e!(2044), e!(2046), e!(2047), e!(2048), e!(2049), e!(2050), e!(2051), e!(2052), e!(2053), e!(2054), e!(2055), e!(2056), e!(2058), e!(2059), e!(2060), e!(2061), e!(2062), e!(2063), e!(2064), e!(2065),
    e!(2066), e!(2067), e!(2069), e!(2078), e!(2079), e!(2081), e!(2084), e!(2101), e!(2102), e!(2103), e!(2104), e!(2105), e!(2106), e!(2107), e!(2110), e!(2114), e!(2115), e!(2118), e!(2119), e!(2120), e!(2121), e!(2122), e!(2123), e!(2124), e!(2127),
    e!(2128), e!(2130), e!(2132), e!(2133), e!(2134), e!(2136), e!(2138), e!(2139), e!(2140), e!(2141), e!(2143), e!(2144), e!(2145), e!(2147), e!(2148), e!(2149), e!(2150), e!(2151), e!(2152), e!(2153), e!(2154), e!(2155), e!(2156), e!(2157), e!(2158),
    e!(2159), e!(2160), e!(2161), e!(2164), e!(2165), e!(2166), e!(2167), e!(2168), e!(2169), e!(2170), e!(2171), e!(2172), e!(2173), e!(2175), e!(2180), e!(2184), e!(2185), e!(2188), e!(2189), e!(2190), e!(2191), e!(2192), e!(2193), e!(2194), e!(2195),
    e!(2196), e!(2197), e!(2198), e!(2199), e!(2201), e!(2202), e!(2203), e!(2204), e!(2205), e!(2206), e!(2207), e!(2208), e!(2209), e!(2210), e!(2211), e!(2212), e!(2213), e!(2215), e!(2216), e!(2217), e!(2218), e!(2219), e!(2220), e!(2221), e!(2222),
    e!(2223), e!(2224), e!(2226), e!(2227), e!(2228), e!(2229), e!(2230), e!(2232), e!(2233), e!(2234), e!(2235), e!(2236), e!(2239), e!(2237), e!(2238), e!(2240), e!(2241), e!(2242), e!(2247), e!(2248), e!(2251), e!(2252), e!(2253), e!(2254), e!(2255),
    e!(2259), e!(2260), e!(2261), e!(2262), e!(2263), e!(2264), e!(2265), e!(2266), e!(2267), e!(2268), e!(2269), e!(2270), e!(2271), e!(2272), e!(2273), e!(2275), e!(2276), e!(2277), e!(2278), e!(2279), e!(2280), e!(2281), e!(2282), e!(2283), e!(2285),
    e!(2289), e!(2293), e!(2294), e!(2295), e!(2296), e!(2297), e!(2298), e!(2299), e!(2301), e!(2306), e!(2307), e!(2308), e!(2311), e!(2312), e!(2315), e!(2316), e!(2317), e!(2318), e!(2319), e!(2320), e!(2376), e!(2379), e!(2382), e!(2360), e!(2365),
    e!(2370), e!(2385), e!(2388), e!(2390), e!(2445), e!(2452), e!(2532), e!(2538), e!(2540), e!(2547), e!(2585), e!(2595), e!(2598), e!(2613), e!(2616), e!(2644), e!(2707), e!(2735), e!(2765), e!(2771), e!(2772), e!(2773), e!(2777), e!(2785), e!(2791),
    e!(2792), e!(2793), e!(2795), e!(2799), e!(2807), e!(2920), e!(2926), e!(2944), e!(3084), e!(3096), e!(3118), e!(3128), e!(3131), e!(3141), e!(3148), e!(3169), e!(3171), e!(3175), e!(3179), e!(3255), e!(3257), e!(3279), e!(3280), e!(3287), e!(3294),
    e!(3297), e!(3298), e!(3299), e!(3304), e!(3308), e!(3338), e!(3435), e!(3440), e!(3469), e!(3498), e!(3499), e!(3500), e!(3504), e!(3505), e!(3585), e!(3592), e!(3593), e!(3594), e!(3601), e!(3602), e!(3603), e!(3607), e!(3608), e!(3609), e!(3610),
    e!(3616), e!(3617), e!(3618), e!(3619), e!(3620), e!(3621), e!(3624), e!(3627), e!(3630), e!(3632), e!(3633), e!(3634), e!(3636), e!(3660), e!(3663), e!(3668), e!(3820), e!(3693), e!(3819), e!(3840), e!(3876), e!(3880), e!(3882), e!(3971), e!(3974),
    e!(3979), e!(3985), e!(3991), e!(4042), e!(4095), e!(4098), e!(4104), e!(4112), e!(4131), e!(4132), e!(4136), e!(4189), e!(4190), e!(4247), e!(4267), e!(4270), e!(4274), e!(4275), e!(4287), e!(4524), e!(4529), e!(4742), e!(4751), e!(4802), e!(4863),
    e!(4871), e!(4937), e!(4949), e!(4994), e!(5012), e!(5022), e!(5058), e!(5160), e!(5161), e!(5287), e!(5352), e!(5362), e!(5441), e!(5492), e!(5493), e!(5498), e!(5499), e!(5503), e!(5504), e!(5509), e!(5511), e!(5482), e!(5488), e!(5489), e!(5490),
    e!(5501), e!(5502), e!(5506), e!(5507), e!(5510), e!(5512), e!(5526), e!(5527), e!(5528), e!(5531), e!(5533), e!(5534), e!(5549), e!(5611), e!(5552), e!(5565), e!(5566), e!(5627), e!(5631), e!(5634), e!(5688), e!(5690), e!(5722), e!(5764), e!(5767),
    e!(5775), e!(5774), e!(5777), e!(5831), e!(5879), e!(5895), e!(5899), e!(5900), e!(5967), e!(6198), e!(5979), e!(5980), e!(5981), e!(5982), e!(6044), e!(5986), e!(6034), e!(6041), e!(6221), e!(6224), e!(6227), e!(6287), e!(6292), e!(6560), e!(6634),
    e!(6596), e!(6640), e!(6648), e!(6656), e!(6663), e!(6664), e!(6665), e!(6666), e!(6668), e!(6672), e!(6675), e!(6682), e!(6684), e!(6685), e!(6686), e!(6726), e!(6733), e!(6751), e!(6813), e!(6782), e!(6814), e!(6818), e!(6817), e!(6821), e!(6836),
    e!(6827), e!(6828), e!(6837), e!(6838), e!(6847), e!(6857), e!(6860), e!(6930), e!(6863), e!(6942), e!(6989), e!(6992), e!(7004), e!(7015), e!(7029), e!(7020), e!(7022), e!(7040), e!(7044), e!(7055), e!(7056), e!(7059), e!(7062), e!(7066), e!(7069),
    e!(7074), e!(7075), e!(7076), e!(7079), e!(7178), e!(7181), e!(7195), e!(7198), e!(7203), e!(7207), e!(7208), e!(7210), e!(7213), e!(7249), e!(7376), e!(7394), e!(7396), e!(7415), e!(7424), e!(7497), e!(7433), e!(7501), e!(7525), e!(7528), e!(7549),
    e!(7557), e!(7582), e!(7641), e!(7643), e!(7648), e!(7654), e!(7655), e!(7677), e!(7874), e!(7902), e!(7993), e!(8040), e!(8048), e!(8049), e!(8050), e!(8145), e!(8152), e!(8158), e!(8173), e!(8283), e!(8287), e!(8332), e!(8285), e!(8284), e!(8360),
    e!(8406), e!(8472), e!(8522), e!(8526), e!(8620), e!(8627), e!(8632), e!(8634), e!(8636), e!(8637), e!(9006), e!(9064), e!(9069), e!(9154), e!(608), e!(839), e!(980), e!(1454), e!(1469), e!(1513), e!(1519), e!(1985), e!(2000), e!(2001), e!(2018),
    e!(2068), e!(2080), e!(2082), e!(2083), e!(2131), e!(2135), e!(2142), e!(2174), e!(2214), e!(2225), e!(2231), e!(2284), e!(2310), e!(2314), e!(2322), e!(2401), e!(2408), e!(2414), e!(2415), e!(2427), e!(2433), e!(2434), e!(2496), e!(2581), e!(2755),
    e!(3271), e!(3272), e!(3293), e!(3300), e!(3333), e!(3386), e!(3586), e!(3587), e!(3726), e!(3978), e!(3987), e!(3988), e!(5158), e!(5168), e!(5173), e!(5175), e!(5176), e!(5178), e!(5179), e!(6641), e!(7338), e!(7344), e!(7633), e!(8658), e!(8659),
    e!(8660), e!(9021), e!(9120), e!(518), e!(5548), e!(5862), e!(5869), e!(5861), e!(5866), e!(7147), e!(86), e!(535), e!(534), e!(798), e!(942), e!(1544), e!(1543), e!(1546), e!(1938), e!(2522), e!(3637), e!(4143), e!(4290), e!(4292), e!(4291),
    e!(4475), e!(4476), e!(4718), e!(4719), e!(4941), e!(4950), e!(5142), e!(5147), e!(5208), e!(5398), e!(6503), e!(6508), e!(6507), e!(7234), e!(7614), e!(7615), e!(7631), e!(7625), e!(8268), e!(8319), e!(9113), e!(9114), e!(9117), e!(9115), e!(9118),
    e!(9119), e!(8736), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(1009), e!(4989), e!(4990), e!(5023), e!(5055), e!(5047), e!(5050), e!(5064), e!(5076), e!(5087), e!(5577), e!(8894), e!(4975), e!(4977), e!(4980),
    e!(4981), e!(4984), e!(4986), e!(4987), e!(5030), e!(5034), e!(5044), e!(5017), e!(5018), e!(5029), e!(5033), e!(5042), e!(5046), e!(5071), e!(5075), e!(5069), e!(5074), e!(5090), e!(5097), e!(5096), e!(6912), e!(6914), e!(4233), e!(1880), e!(804),
    e!(141), e!(3860), e!(234), e!(8738), e!(422), e!(423), e!(427), e!(768), e!(960), e!(983), e!(831), e!(901), e!(959), e!(961), e!(962), e!(964), e!(993), e!(1140), e!(1964), e!(2186), e!(2364), e!(2409), e!(2550), e!(2584), e!(2770),
    e!(3090), e!(5375), e!(5575), e!(5591), e!(5594), e!(5596), e!(6980), e!(7812), e!(7860), e!(8206), e!(8661), e!(9101), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(1009), e!(4989), e!(4990), e!(5023), e!(5055),
    e!(5047), e!(5050), e!(5064), e!(5076), e!(5087), e!(5577), e!(8894), e!(4977), e!(4979), e!(4982), e!(4983), e!(4995), e!(5003), e!(5005), e!(5008), e!(5026), e!(5030), e!(5007), e!(5025), e!(5027), e!(5066), e!(5071), e!(5069), e!(5072), e!(5075),
    e!(5074), e!(5080), e!(5095), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(1009), e!(4989), e!(4990), e!(5023), e!(5055), e!(5047), e!(5050), e!(5064), e!(5076), e!(5087), e!(5577), e!(8894), e!(4919), e!(4985),
    e!(4988), e!(5030), e!(5035), e!(5045), e!(5016), e!(5018), e!(5028), e!(5033), e!(5043), e!(5046), e!(5071), e!(5075), e!(5070), e!(5074), e!(5089), e!(5097), e!(5091), e!(5096), e!(9086), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141),
    e!(3860), e!(234), e!(54), e!(4365), e!(4367), e!(4376), e!(4377), e!(4404), e!(4408), e!(4437), e!(4452), e!(6738), e!(8006), e!(8009), e!(8012), e!(8017), e!(8075), e!(8081), e!(8088), e!(8096), e!(8005), e!(8008), e!(8011), e!(8016), e!(8073),
    e!(8077), e!(8082), e!(8087), e!(8094), e!(8098), e!(8853), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(103), e!(745), e!(744), e!(4709), e!(2907), e!(4708), e!(6049), e!(6473), e!(6472), e!(7377), e!(374),
    e!(434), e!(726), e!(1676), e!(1678), e!(1679), e!(1685), e!(1718), e!(2997), e!(3836), e!(4737), e!(4804), e!(5345), e!(5995), e!(6756), e!(7603), e!(9098), e!(9149), e!(8958), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860),
    e!(234), e!(1152), e!(1159), e!(1702), e!(2918), e!(2908), e!(7227), e!(356), e!(637), e!(904), e!(2909), e!(3701), e!(3706), e!(3834), e!(5353), e!(6087), e!(6713), e!(8994), e!(3835), e!(2727), e!(2898), e!(8357), e!(4799), e!(4794), e!(6765),
    e!(5451), e!(6519), e!(6018), e!(2357), e!(9099), e!(21), e!(210), e!(212), e!(934), e!(1788), e!(1843), e!(1844), e!(2987), e!(2988), e!(2994), e!(3004), e!(3140), e!(4025), e!(4026), e!(4032), e!(4033), e!(4069), e!(4144), e!(4288), e!(4289),
    e!(4485), e!(4634), e!(4635), e!(4636), e!(4638), e!(4637), e!(5093), e!(5207), e!(5970), e!(6509), e!(6606), e!(8420), e!(9102), e!(8736), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(397), e!(402),
    e!(872), e!(1121), e!(1182), e!(1184), e!(1191), e!(1197), e!(1863), e!(1860), e!(1895), e!(1969), e!(2117), e!(6229), e!(2187), e!(2045), e!(3792), e!(4093), e!(4822), e!(6086), e!(7316), e!(8437), e!(9016), e!(9018), e!(9048), e!(6912), e!(6914),
    e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(169), e!(1128), e!(2336), e!(2759), e!(3400), e!(3647), e!(6079), e!(3877), e!(4158), e!(4164), e!(4170), e!(4172), e!(4735), e!(5605), e!(5711), e!(5754), e!(6106), e!(6110), e!(6112),
    e!(7868), e!(7888), e!(8480), e!(8500), e!(6118), e!(6120), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(283), e!(328), e!(975), e!(1518), e!(1643), e!(1747), e!(2578), e!(3977), e!(4325), e!(5590), e!(5620),
    e!(6243), e!(6260), e!(6438), e!(6440), e!(6937), e!(7032), e!(7033), e!(7419), e!(7483), e!(7494), e!(7586), e!(7658), e!(7675), e!(8961), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(664), e!(940),
    e!(1047), e!(3301), e!(3450), e!(4140), e!(4534), e!(5849), e!(6191), e!(6206), e!(6239), e!(7547), e!(7550), e!(8608), e!(8607), e!(9017), e!(353), e!(520), e!(1787), e!(5715), e!(6021), e!(9014), e!(9020), e!(6912), e!(6914), e!(4233), e!(1880),
    e!(804), e!(141), e!(3860), e!(234), e!(103), e!(745), e!(744), e!(4709), e!(2907), e!(4708), e!(6049), e!(6473), e!(6472), e!(7377), e!(38), e!(101), e!(711), e!(720), e!(1680), e!(1684), e!(3680), e!(3958), e!(4302), e!(6518), e!(8754),
    e!(3846), e!(3848), e!(3847), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(1010), e!(1786), e!(2473), e!(3186), e!(3295), e!(3337), e!(3339), e!(3340), e!(3351), e!(3352), e!(3353), e!(3356), e!(3542),
    e!(3543), e!(4340), e!(4446), e!(4961), e!(5211), e!(5438), e!(6978), e!(7293), e!(7629), e!(7630), e!(2356), e!(7252), e!(7539), e!(236), e!(7378), e!(7380), e!(511), e!(7397), e!(7399), e!(7538), e!(7405), e!(7537), e!(7427), e!(1089), e!(1563),
    e!(7461), e!(2351), e!(3669), e!(7482), e!(7484), e!(119), e!(7488), e!(7489), e!(3861), e!(4523), e!(7490), e!(7500), e!(7511), e!(7521), e!(8529), e!(8698), e!(8736), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234),
    e!(1152), e!(1159), e!(1702), e!(2918), e!(2908), e!(7227), e!(357), e!(2901), e!(2910), e!(2976), e!(3377), e!(3688), e!(3702), e!(3707), e!(3804), e!(5449), e!(5452), e!(5609), e!(6470), e!(6766), e!(6892), e!(7374), e!(8995), e!(8749), e!(6912),
    e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(6080), e!(2643), e!(2591), e!(4243), e!(8570), e!(8574), e!(6522), e!(1115), e!(3658), e!(5283), e!(4864), e!(5279), e!(5697), e!(5700), e!(6231), e!(8699), e!(1867), e!(7617),
    e!(9131), e!(1818), e!(4354), e!(4641), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(6080), e!(2643), e!(2591), e!(4243), e!(8570), e!(8574), e!(6522), e!(1115), e!(3658), e!(5283), e!(4864), e!(5279), e!(5697),
    e!(5700), e!(6231), e!(8699), e!(1867), e!(7617), e!(9131), e!(1819), e!(4352), e!(4639), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(704), e!(841), e!(1559), e!(4870), e!(4877), e!(5963), e!(5999), e!(6093),
    e!(6237), e!(6295), e!(6705), e!(7262), e!(7263), e!(7264), e!(7268), e!(7269), e!(8593), e!(8596), e!(9142), e!(9143), e!(9145), e!(9146), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(6080), e!(2643), e!(2591),
    e!(4243), e!(8570), e!(8574), e!(6522), e!(1115), e!(3658), e!(5283), e!(4864), e!(5279), e!(5697), e!(5700), e!(6231), e!(8699), e!(1867), e!(7617), e!(9131), e!(1820), e!(4147), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860),
    e!(234), e!(6080), e!(2643), e!(2591), e!(4243), e!(8570), e!(8574), e!(6522), e!(1115), e!(3658), e!(5283), e!(1901), e!(1931), e!(4864), e!(5279), e!(5697), e!(5700), e!(6231), e!(8699), e!(9132), e!(1899), e!(1927), e!(6912), e!(6914), e!(4233),
    e!(1880), e!(804), e!(139), e!(3860), e!(234), e!(8738), e!(1030), e!(1907), e!(3345), e!(4252), e!(5423), e!(8520), e!(9038), e!(9083), e!(4472), e!(6578), e!(2), e!(3), e!(4), e!(144), e!(145), e!(833), e!(2812), e!(5403), e!(7140),
    e!(7282), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(1018), e!(6803), e!(6587), e!(6628), e!(6632), e!(6627), e!(6631), e!(6811), e!(2849), e!(3900), e!(3916), e!(5616), e!(7875), e!(8481), e!(6114),
    e!(6130), e!(7885), e!(8475), e!(8494), e!(8498), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(664), e!(940), e!(1047), e!(3301), e!(3450), e!(4140), e!(4534), e!(5849), e!(6191), e!(6206), e!(6239),
    e!(7547), e!(7550), e!(8608), e!(8607), e!(9017), e!(522), e!(5448), e!(6218), e!(6217), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(1361), e!(4284), e!(4997), e!(5000), e!(5014), e!(5049), e!(5056), e!(5092),
    e!(6491), e!(8425), e!(8893), e!(5032), e!(5037), e!(200), e!(781), e!(4978), e!(4983), e!(5031), e!(5036), e!(5065), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(791), e!(4298), e!(4593), e!(6383), e!(8938),
    e!(221), e!(480), e!(545), e!(555), e!(1172), e!(2847), e!(3796), e!(4185), e!(4721), e!(5891), e!(6127), e!(6532), e!(6539), e!(6781), e!(9057), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(300), e!(304),
    e!(314), e!(1271), e!(1276), e!(2378), e!(1812), e!(2396), e!(2716), e!(4199), e!(4202), e!(4206), e!(4193), e!(4200), e!(5114), e!(6493), e!(6815), e!(6704), e!(6867), e!(8427), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860),
    e!(234), e!(6080), e!(2643), e!(2591), e!(4243), e!(8570), e!(8574), e!(6522), e!(1115), e!(3658), e!(5283), e!(4864), e!(5279), e!(5697), e!(5700), e!(6231), e!(8699), e!(1867), e!(7617), e!(9131), e!(1817), e!(6912), e!(6914), e!(4233), e!(1880),
    e!(804), e!(141), e!(3860), e!(234), e!(6080), e!(2643), e!(2591), e!(4243), e!(8570), e!(8574), e!(6522), e!(1115), e!(3658), e!(5283), e!(4864), e!(5279), e!(5697), e!(5700), e!(6231), e!(8699), e!(1867), e!(7617), e!(9131), e!(2605), e!(6912),
    e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(6080), e!(2643), e!(2591), e!(4243), e!(8570), e!(8574), e!(6522), e!(1115), e!(3658), e!(5283), e!(4864), e!(5279), e!(5697), e!(5700), e!(6231), e!(8699), e!(1867), e!(7617),
    e!(9131), e!(2612), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(6080), e!(2643), e!(2591), e!(4243), e!(8570), e!(8574), e!(6522), e!(1115), e!(3658), e!(5283), e!(4864), e!(5279), e!(5697), e!(5700), e!(6231),
    e!(8699), e!(1867), e!(7617), e!(9131), e!(2619), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(6080), e!(2643), e!(2591), e!(4243), e!(8570), e!(8574), e!(6522), e!(1115), e!(3658), e!(5283), e!(4864), e!(5279),
    e!(5697), e!(5700), e!(6231), e!(8699), e!(1867), e!(7617), e!(9131), e!(2638), e!(1880), e!(803), e!(3860), e!(132), e!(8992), e!(888), e!(1374), e!(1437), e!(1609), e!(1612), e!(2533), e!(4386), e!(4393), e!(4396), e!(4399), e!(4422), e!(4664),
    e!(4667), e!(4670), e!(5199), e!(5845), e!(5846), e!(7622), e!(8563), e!(9123), e!(9125), e!(9127), e!(9129), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(992), e!(1443), e!(2520), e!(2541), e!(5580), e!(5583),
    e!(8837), e!(241), e!(784), e!(2767), e!(3888), e!(3889), e!(4508), e!(4913), e!(4935), e!(5384), e!(5385), e!(5581), e!(8515), e!(8516), e!(53), e!(787), e!(2984), e!(3157), e!(4364), e!(4366), e!(4373), e!(4375), e!(4406), e!(4407), e!(4451),
    e!(4494), e!(4702), e!(4707), e!(4858), e!(4875), e!(5421), e!(8004), e!(8007), e!(8010), e!(8015), e!(8072), e!(8078), e!(8085), e!(8092), e!(8224), e!(8324), e!(8849), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234),
    e!(8738), e!(318), e!(1891), e!(1940), e!(2936), e!(4198), e!(4201), e!(4203), e!(4207), e!(4209), e!(4210), e!(4763), e!(5779), e!(2942), e!(3246), e!(5146), e!(5710), e!(5829), e!(6681), e!(7201), e!(6912), e!(6914), e!(4233), e!(1880), e!(804),
    e!(141), e!(3860), e!(234), e!(8738), e!(91), e!(100), e!(401), e!(1081), e!(3930), e!(1849), e!(4506), e!(2761), e!(4711), e!(5333), e!(5334), e!(5701), e!(5706), e!(5709), e!(5917), e!(7028), e!(8436), e!(8511), e!(9031), e!(6912), e!(6914),
    e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(567), e!(6915), e!(2970), e!(3681), e!(4819), e!(622), e!(5881), e!(5293), e!(617), e!(5886), e!(6210), e!(6089), e!(6226), e!(5872), e!(6193), e!(5876), e!(6196), e!(3829),
    e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(161), e!(163), e!(2162), e!(2738), e!(2985), e!(3007), e!(3228), e!(3225), e!(3226), e!(3653), e!(4075), e!(4076), e!(4427), e!(4555), e!(5177), e!(5740),
    e!(6954), e!(6990), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(6080), e!(2643), e!(2591), e!(4243), e!(8570), e!(8574), e!(6522), e!(1115), e!(3658), e!(5283), e!(4864), e!(5279), e!(5697), e!(5700), e!(6231),
    e!(8699), e!(9132), e!(6232), e!(1925), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(6080), e!(2643), e!(2591), e!(4243), e!(8570), e!(8574), e!(6522), e!(1115), e!(3658), e!(5283), e!(1930), e!(4864), e!(5279),
    e!(5697), e!(5700), e!(6231), e!(8699), e!(9132), e!(1926), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(6080), e!(2643), e!(2591), e!(4243), e!(8570), e!(8574), e!(6522), e!(1115), e!(3658), e!(5283), e!(4864),
    e!(5279), e!(5697), e!(5700), e!(6231), e!(8699), e!(9132), e!(6232), e!(1922), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(6080), e!(2643), e!(2591), e!(4243), e!(8570), e!(8574), e!(6522), e!(1115), e!(3658),
    e!(5283), e!(4864), e!(5279), e!(5697), e!(5700), e!(6231), e!(8699), e!(9132), e!(6232), e!(1923), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(139), e!(3860), e!(234), e!(8738), e!(1030), e!(1907), e!(3345), e!(4252), e!(5423), e!(8520),
    e!(9038), e!(9083), e!(4472), e!(6578), e!(3639), e!(3640), e!(3641), e!(3642), e!(3643), e!(3644), e!(3645), e!(3646), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(139), e!(3860), e!(234), e!(8738), e!(1030), e!(1907), e!(3345), e!(4252),
    e!(5423), e!(8520), e!(9038), e!(9083), e!(4472), e!(6578), e!(6477), e!(6478), e!(6479), e!(6480), e!(6481), e!(6482), e!(6483), e!(6484), e!(7832), e!(7833), e!(7834), e!(7835), e!(7836), e!(7837), e!(7838), e!(7839), e!(7840), e!(7841), e!(7842),
    e!(7843), e!(7844), e!(7845), e!(7846), e!(7847), e!(7848), e!(7849), e!(7850), e!(7851), e!(7852), e!(7853), e!(7854), e!(7855), e!(7856), e!(7857), e!(7858), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(791),
    e!(4298), e!(4593), e!(6383), e!(8938), e!(220), e!(476), e!(2838), e!(3798), e!(4152), e!(4154), e!(4186), e!(4723), e!(5744), e!(6115), e!(6128), e!(6541), e!(6547), e!(6780), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(139), e!(3860),
    e!(234), e!(790), e!(4298), e!(4592), e!(6383), e!(8938), e!(1745), e!(1746), e!(1750), e!(1751), e!(1768), e!(6784), e!(6833), e!(1167), e!(1168), e!(4183), e!(4721), e!(7231), e!(7232), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(139),
    e!(3860), e!(234), e!(790), e!(4298), e!(4592), e!(6383), e!(8938), e!(1745), e!(1746), e!(1750), e!(1751), e!(1768), e!(6784), e!(6833), e!(4184), e!(4722), e!(5878), e!(5880), e!(7230), e!(7233), e!(164), e!(473), e!(884), e!(1782), e!(1797),
    e!(1967), e!(2493), e!(2739), e!(2810), e!(2815), e!(2989), e!(4433), e!(4440), e!(4556), e!(5191), e!(6233), e!(6234), e!(6269), e!(6274), e!(6653), e!(7238), e!(7240), e!(8446), e!(8447), e!(8448), e!(8736), e!(6912), e!(6914), e!(4233), e!(1880),
    e!(804), e!(141), e!(3860), e!(234), e!(6080), e!(2643), e!(2591), e!(4243), e!(8570), e!(8574), e!(6522), e!(1115), e!(3658), e!(4864), e!(5279), e!(5697), e!(5700), e!(6231), e!(8699), e!(9132), e!(6232), e!(1936), e!(6912), e!(6914), e!(4233),
    e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(677), e!(689), e!(2557), e!(4974), e!(4993), e!(4999), e!(5002), e!(5001), e!(5038), e!(5048), e!(5051), e!(5057), e!(5061), e!(5068), e!(5077), e!(5084), e!(5088), e!(8896), e!(6912), e!(6914),
    e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(1126), e!(1391), e!(1398), e!(1401), e!(1830), e!(4253), e!(4255), e!(4260), e!(4272), e!(5555), e!(5573), e!(5589), e!(6001), e!(9078), e!(9079), e!(9116), e!(8804), e!(6912), e!(6914),
    e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(2530), e!(2531), e!(6623), e!(6839), e!(6823), e!(5923), e!(2471), e!(8338), e!(546), e!(557), e!(2350), e!(2858), e!(3026), e!(3032), e!(4609), e!(6219), e!(6912), e!(6914),
    e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(6080), e!(2643), e!(2591), e!(4243), e!(8570), e!(8574), e!(6522), e!(1937), e!(4865), e!(5282), e!(5683), e!(5696), e!(6231), e!(4862), e!(5365), e!(6068), e!(7291), e!(1069), e!(1587),
    e!(1713), e!(2993), e!(3374), e!(3376), e!(4388), e!(4424), e!(4954), e!(6005), e!(6006), e!(6019), e!(6133), e!(7621), e!(8274), e!(8649), e!(197), e!(196), e!(2692), e!(3067), e!(3369), e!(3372), e!(3378), e!(3750), e!(8101), e!(6912), e!(6914),
    e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(2530), e!(2531), e!(6623), e!(6839), e!(6823), e!(547), e!(556), e!(792), e!(4626), e!(6203), e!(6208), e!(6219), e!(6223), e!(6534), e!(6535), e!(9056), e!(6912), e!(6914),
    e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(217), e!(224), e!(306), e!(1136), e!(3872), e!(2327), e!(3163), e!(3871), e!(4850), e!(5383), e!(5411), e!(5414), e!(5607), e!(7237), e!(8416), e!(8474), e!(8945), e!(6912), e!(6914),
    e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(1120), e!(1859), e!(1198), e!(1864), e!(1862), e!(1968), e!(2012), e!(3812), e!(2424), e!(3814), e!(6189), e!(6200), e!(6205), e!(6214), e!(6348), e!(7315), e!(6912), e!(6914),
    e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(3211), e!(3215), e!(3494), e!(5437), e!(8902), e!(10), e!(724), e!(749), e!(751), e!(753), e!(780), e!(3573), e!(3986), e!(6486), e!(6488), e!(8423), e!(6912), e!(6914), e!(4233),
    e!(1880), e!(804), e!(141), e!(3860), e!(2461), e!(234), e!(8738), e!(567), e!(6915), e!(7431), e!(1149), e!(5666), e!(5623), e!(7560), e!(8528), e!(1066), e!(1139), e!(1161), e!(1701), e!(3806), e!(5551), e!(6912), e!(6914), e!(4233), e!(1880),
    e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(2530), e!(2531), e!(6623), e!(6839), e!(6823), e!(5923), e!(2471), e!(8338), e!(2350), e!(2857), e!(3025), e!(3031), e!(4608), e!(6252), e!(6785), e!(6912), e!(6914), e!(4233), e!(1880), e!(804),
    e!(141), e!(3860), e!(234), e!(446), e!(1961), e!(1960), e!(6651), e!(1143), e!(1832), e!(1954), e!(2485), e!(2487), e!(3739), e!(3741), e!(5170), e!(5730), e!(6139), e!(8506), e!(8650), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141),
    e!(3860), e!(234), e!(889), e!(1608), e!(1715), e!(2534), e!(4387), e!(4394), e!(4397), e!(4400), e!(4665), e!(4668), e!(4671), e!(5847), e!(9123), e!(9126), e!(9128), e!(9130), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(139), e!(3860),
    e!(234), e!(8738), e!(1030), e!(1907), e!(3345), e!(4252), e!(5423), e!(8520), e!(9038), e!(9083), e!(4472), e!(6578), e!(502), e!(1445), e!(1446), e!(3217), e!(8103), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234),
    e!(8738), e!(23), e!(1024), e!(2768), e!(1027), e!(1490), e!(2769), e!(3278), e!(5576), e!(5595), e!(6771), e!(6773), e!(7813), e!(7861), e!(7814), e!(7862), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738),
    e!(2530), e!(2531), e!(6623), e!(6839), e!(6823), e!(792), e!(2856), e!(4153), e!(4155), e!(4628), e!(5747), e!(5882), e!(6542), e!(6543), e!(6786), e!(1880), e!(803), e!(3860), e!(132), e!(218), e!(225), e!(483), e!(903), e!(905), e!(906),
    e!(2438), e!(2441), e!(3567), e!(4173), e!(4874), e!(5444), e!(5411), e!(5414), e!(6121), e!(6475), e!(6476), e!(6899), e!(7011), e!(8942), e!(7906), e!(7908), e!(7910), e!(7912), e!(7913), e!(7914), e!(7915), e!(7916), e!(7917), e!(7918), e!(7920),
    e!(7922), e!(7924), e!(7926), e!(7928), e!(7930), e!(7931), e!(7932), e!(7934), e!(7936), e!(7941), e!(7943), e!(7946), e!(8118), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(1361), e!(4284), e!(4997), e!(5000),
    e!(5014), e!(5049), e!(5056), e!(5092), e!(6491), e!(8425), e!(8893), e!(5032), e!(200), e!(1020), e!(5031), e!(5063), e!(3568), e!(130), e!(770), e!(786), e!(1646), e!(3159), e!(4371), e!(4853), e!(5339), e!(6013), e!(8084), e!(8089), e!(8095),
    e!(8099), e!(7680), e!(8083), e!(8086), e!(8093), e!(8097), e!(8245), e!(8325), e!(8328), e!(8785), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(3387), e!(4077), e!(4590), e!(1186), e!(1187), e!(1194),
    e!(1201), e!(1202), e!(3399), e!(4704), e!(4717), e!(6485), e!(7985), e!(8543), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(165), e!(885), e!(2493), e!(2815), e!(4433), e!(4557), e!(7239), e!(7241),
    e!(8448), e!(148), e!(454), e!(459), e!(469), e!(4560), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(567), e!(6915), e!(6080), e!(2643), e!(2591), e!(4243), e!(8570), e!(8574), e!(6522), e!(250),
    e!(5698), e!(6073), e!(7368), e!(1209), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8255), e!(1723), e!(3956), e!(8434), e!(3691), e!(1883), e!(5978), e!(345), e!(1852), e!(8594), e!(1119), e!(7371), e!(6100),
    e!(7968), e!(8833), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(838), e!(234), e!(8738), e!(7649), e!(899), e!(1200), e!(2545), e!(3020), e!(3842), e!(3990), e!(4333), e!(5597), e!(5598), e!(6365), e!(7423), e!(7679),
    e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(466), e!(824), e!(866), e!(869), e!(2678), e!(2697), e!(4012), e!(4014), e!(5712), e!(5755), e!(5856), e!(5909), e!(6105), e!(6951), e!(9053), e!(6912), e!(6914),
    e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(567), e!(6915), e!(3277), e!(6778), e!(6322), e!(3945), e!(3951), e!(715), e!(2946), e!(7523), e!(591), e!(6308), e!(370), e!(6912), e!(6914), e!(4233), e!(1880), e!(804),
    e!(139), e!(3860), e!(234), e!(1773), e!(1915), e!(2499), e!(2501), e!(3416), e!(4065), e!(4099), e!(4148), e!(5298), e!(5300), e!(6092), e!(6253), e!(8192), e!(8339), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234),
    e!(8738), e!(2814), e!(3023), e!(4599), e!(6841), e!(1762), e!(3041), e!(3042), e!(3044), e!(4625), e!(4627), e!(4632), e!(6834), e!(8349), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(5905), e!(6180),
    e!(37), e!(2026), e!(2181), e!(4312), e!(4315), e!(4320), e!(4321), e!(4322), e!(5790), e!(5348), e!(6796), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(190), e!(2435), e!(2464), e!(2466), e!(3296), e!(3770),
    e!(3780), e!(3923), e!(4470), e!(7006), e!(8600), e!(8606), e!(9000), e!(9001), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(6080), e!(2643), e!(2591), e!(4243), e!(8570), e!(8574), e!(6522), e!(1937), e!(4865),
    e!(5282), e!(5683), e!(5696), e!(6231), e!(863), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(139), e!(3860), e!(234), e!(8738), e!(1030), e!(1907), e!(3345), e!(4252), e!(5423), e!(8520), e!(9038), e!(9083), e!(49), e!(51), e!(951),
    e!(952), e!(4730), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(1009), e!(4989), e!(4990), e!(5023), e!(5055), e!(5047), e!(5050), e!(5064), e!(5076), e!(5087), e!(5577), e!(8894), e!(123), e!(8647), e!(6912),
    e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(1023), e!(1796), e!(2740), e!(3264), e!(3452), e!(4276), e!(4281), e!(4823), e!(5454), e!(5842), e!(6637), e!(6772), e!(8401), e!(6912), e!(6914), e!(4233), e!(1880),
    e!(804), e!(141), e!(3860), e!(234), e!(925), e!(1160), e!(1703), e!(3803), e!(4801), e!(5155), e!(5159), e!(5961), e!(6342), e!(7361), e!(8124), e!(9148), e!(9147), e!(8901), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860),
    e!(2461), e!(234), e!(8738), e!(567), e!(6915), e!(7431), e!(1149), e!(5666), e!(5623), e!(7560), e!(8528), e!(3828), e!(7612), e!(670), e!(5157), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(567),
    e!(6915), e!(3948), e!(4902), e!(6851), e!(1348), e!(4713), e!(6046), e!(6048), e!(8553), e!(1598), e!(1697), e!(1699), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(7350), e!(3332), e!(855), e!(4180),
    e!(7353), e!(3334), e!(3414), e!(361), e!(4226), e!(6456), e!(85), e!(96), e!(5809), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(908), e!(1845), e!(3870), e!(4192), e!(4793), e!(5163), e!(5355), e!(5648),
    e!(6724), e!(8374), e!(8948), e!(5873), e!(6194), e!(5889), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(908), e!(1845), e!(3870), e!(4192), e!(4793), e!(5163), e!(5355), e!(5648), e!(6724), e!(8374), e!(8948),
    e!(6194), e!(4510), e!(6207), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(567), e!(6915), e!(3948), e!(4907), e!(6851), e!(4299), e!(4725), e!(2900), e!(3046), e!(4633), e!(5269), e!(5682), e!(8390),
    e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(1120), e!(1859), e!(2479), e!(2760), e!(4505), e!(4484), e!(4710), e!(5335), e!(6145), e!(6341), e!(8473), e!(8461), e!(9003), e!(6912), e!(6914), e!(4233),
    e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(2569), e!(3343), e!(4729), e!(7097), e!(7692), e!(7755), e!(8311), e!(755), e!(756), e!(4123), e!(4727), e!(4728), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860),
    e!(2461), e!(234), e!(8738), e!(567), e!(6915), e!(7431), e!(1149), e!(5666), e!(5623), e!(7560), e!(8528), e!(3828), e!(7612), e!(3383), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(138), e!(3860), e!(234), e!(8738), e!(567), e!(6915),
    e!(3948), e!(4898), e!(6851), e!(204), e!(1447), e!(1497), e!(4023), e!(4024), e!(6984), e!(6988), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(567), e!(6915), e!(3948), e!(4902), e!(6851), e!(204),
    e!(1447), e!(1497), e!(4023), e!(4024), e!(6984), e!(6988), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(160), e!(425), e!(886), e!(887), e!(1118), e!(1123), e!(2809), e!(2818), e!(2842), e!(5728),
    e!(5729), e!(6030), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(138), e!(3860), e!(234), e!(2651), e!(3924), e!(4413), e!(4471), e!(4924), e!(4942), e!(7791), e!(7798), e!(7799), e!(8220), e!(8999), e!(9002), e!(9005), e!(6912), e!(6914),
    e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(2461), e!(234), e!(8738), e!(567), e!(6915), e!(7431), e!(1149), e!(5666), e!(5623), e!(7560), e!(8528), e!(3828), e!(7612), e!(3384), e!(1880), e!(803), e!(3860), e!(132), e!(888), e!(2338),
    e!(2339), e!(2533), e!(4386), e!(4395), e!(4398), e!(4401), e!(4421), e!(4666), e!(4669), e!(4672), e!(7619), e!(9124), e!(9125), e!(9127), e!(9129), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(168),
    e!(2475), e!(2476), e!(2758), e!(3648), e!(3649), e!(3650), e!(3651), e!(3652), e!(6497), e!(6498), e!(6499), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(1361), e!(4284), e!(4997), e!(5000), e!(5014), e!(5049),
    e!(5056), e!(5092), e!(6491), e!(8425), e!(8893), e!(124), e!(5103), e!(3568), e!(14), e!(15), e!(576), e!(656), e!(785), e!(1645), e!(2329), e!(2512), e!(3160), e!(4374), e!(4403), e!(6015), e!(6303), e!(8238), e!(8239), e!(8247), e!(8330),
    e!(8604), e!(8605), e!(8880), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(385), e!(2354), e!(3119), e!(3800), e!(4511), e!(4512), e!(6300), e!(6301), e!(6320), e!(6406), e!(7303), e!(7608), e!(8888), e!(6912),
    e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(908), e!(1845), e!(3870), e!(4192), e!(4793), e!(5163), e!(5355), e!(5648), e!(6724), e!(8374), e!(8948), e!(5873), e!(5883), e!(6912), e!(6914), e!(4233), e!(1880), e!(804),
    e!(141), e!(3860), e!(2461), e!(234), e!(8738), e!(567), e!(6915), e!(7431), e!(1149), e!(5666), e!(5623), e!(7560), e!(8528), e!(1151), e!(1704), e!(3805), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738),
    e!(567), e!(6915), e!(3948), e!(4902), e!(6851), e!(1348), e!(4713), e!(6046), e!(6048), e!(8553), e!(3052), e!(4436), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(2461), e!(234), e!(8738), e!(567), e!(6915), e!(7431),
    e!(1149), e!(5666), e!(5623), e!(7560), e!(8528), e!(3828), e!(7612), e!(6732), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8985), e!(933), e!(5192), e!(1054), e!(3934), e!(4744), e!(5638), e!(5647), e!(5663),
    e!(2731), e!(2962), e!(4757), e!(7919), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(992), e!(1443), e!(2520), e!(2541), e!(5580), e!(5583), e!(8837), e!(5599), e!(5600), e!(5601), e!(5602), e!(5603), e!(6912),
    e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(1361), e!(4284), e!(4997), e!(5000), e!(5014), e!(5049), e!(5056), e!(5092), e!(6491), e!(8425), e!(8893), e!(5020), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141),
    e!(3860), e!(234), e!(8738), e!(1693), e!(1709), e!(3515), e!(3535), e!(3751), e!(4078), e!(4960), e!(6017), e!(7663), e!(8100), e!(8277), e!(111), e!(937), e!(1491), e!(1939), e!(1944), e!(2416), e!(3303), e!(3306), e!(3536), e!(3599), e!(4188),
    e!(5021), e!(5285), e!(7135), e!(7137), e!(7211), e!(8037), e!(8463), e!(8462), e!(8471), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(3387), e!(4077), e!(4590), e!(1186), e!(2517), e!(6707), e!(6709),
    e!(6710), e!(7229), e!(8371), e!(8541), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(133), e!(3860), e!(234), e!(8736), e!(568), e!(6915), e!(3947), e!(4894), e!(6851), e!(4715), e!(6045), e!(8552), e!(2696), e!(3057), e!(4435), e!(6912),
    e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(3387), e!(4077), e!(4590), e!(1186), e!(461), e!(2521), e!(3230), e!(5400), e!(6639), e!(8591), e!(8601), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141),
    e!(3860), e!(234), e!(1607), e!(2871), e!(3033), e!(3233), e!(3314), e!(3319), e!(4594), e!(4629), e!(6633), e!(6649), e!(6875), e!(6880), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(4619), e!(8941), e!(675),
    e!(676), e!(4501), e!(4503), e!(4602), e!(6699), e!(6700), e!(6743), e!(6745), e!(8345), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(6249), e!(6247), e!(8738), e!(2741), e!(2955), e!(5473), e!(5766), e!(6520),
    e!(6521), e!(7184), e!(7960), e!(8056), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(567), e!(6915), e!(58), e!(70), e!(948), e!(1870), e!(2721), e!(5183), e!(5185), e!(5189), e!(6912), e!(6914),
    e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(567), e!(6915), e!(7430), e!(1148), e!(5665), e!(5623), e!(7560), e!(8528), e!(3826), e!(3827), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234),
    e!(188), e!(698), e!(3684), e!(3931), e!(6865), e!(6961), e!(6964), e!(6967), e!(6970), e!(6973), e!(7283), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(567), e!(6915), e!(1848), e!(3867), e!(5717), e!(3183),
    e!(1444), e!(3790), e!(4817), e!(6202), e!(8779), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(308), e!(479), e!(2823), e!(2846), e!(3797), e!(5410), e!(5744), e!(6382), e!(6533), e!(6538), e!(8802), e!(6912),
    e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(567), e!(6915), e!(8738), e!(7444), e!(384), e!(3393), e!(4888), e!(7300), e!(7956), e!(8442), e!(8451), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860),
    e!(234), e!(8738), e!(5905), e!(6180), e!(646), e!(2090), e!(5810), e!(5947), e!(7555), e!(7569), e!(7579), e!(7581), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(165), e!(885), e!(2493), e!(2815),
    e!(4433), e!(4557), e!(7239), e!(7241), e!(8448), e!(8446), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(32), e!(35), e!(3815), e!(4425), e!(4426), e!(4443), e!(4467), e!(6273), e!(7265), e!(7267),
    e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(1144), e!(2490), e!(2854), e!(2862), e!(3290), e!(5172), e!(6882), e!(8395), e!(8507), e!(9152), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141),
    e!(3860), e!(234), e!(4926), e!(2410), e!(2650), e!(2726), e!(3321), e!(3323), e!(4217), e!(4450), e!(4947), e!(6151), e!(9071), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(6979), e!(6981), e!(6982), e!(9103),
    e!(9104), e!(9107), e!(9108), e!(9109), e!(9110), e!(9111), e!(9112), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(666), e!(4211), e!(3675), e!(4716), e!(6143), e!(6366), e!(8288), e!(8279), e!(8258),
    e!(9052), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(140), e!(3860), e!(234), e!(8738), e!(652), e!(1640), e!(1763), e!(2436), e!(4948), e!(5396), e!(6071), e!(7058), e!(7065), e!(8335), e!(6912), e!(6914), e!(4233), e!(1880), e!(804),
    e!(141), e!(3860), e!(234), e!(2973), e!(4179), e!(4178), e!(7347), e!(193), e!(1778), e!(4230), e!(5099), e!(5101), e!(7354), e!(8305), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(992), e!(1443), e!(2520),
    e!(2541), e!(5580), e!(5583), e!(8837), e!(3772), e!(4109), e!(4120), e!(6515), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(2914), e!(2923), e!(3381), e!(3447), e!(3704), e!(4567), e!(7038), e!(8909), e!(4486),
    e!(4692), e!(5110), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(446), e!(1961), e!(1960), e!(6651), e!(1129), e!(3965), e!(1851), e!(3964), e!(5968), e!(8610), e!(8618), e!(6912), e!(6914), e!(4233), e!(1880),
    e!(804), e!(133), e!(3860), e!(234), e!(8736), e!(568), e!(6915), e!(3947), e!(4894), e!(6851), e!(4715), e!(6045), e!(8552), e!(1597), e!(1696), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(1017),
    e!(3903), e!(3920), e!(7876), e!(8488), e!(6108), e!(6625), e!(6629), e!(7884), e!(8497), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(2914), e!(2923), e!(3381), e!(3447), e!(3704), e!(4567), e!(7038), e!(8909),
    e!(117), e!(115), e!(2762), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(4244), e!(8571), e!(8573), e!(3322), e!(4356), e!(4417), e!(4643), e!(4657), e!(5386), e!(8735), e!(8665), e!(6912), e!(6914), e!(4233),
    e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(2914), e!(2923), e!(3381), e!(3447), e!(3704), e!(4567), e!(7038), e!(8909), e!(4487), e!(4693), e!(5111), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(2880),
    e!(8378), e!(8939), e!(674), e!(2840), e!(2863), e!(4499), e!(6698), e!(6740), e!(6753), e!(8343), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(567), e!(6915), e!(8738), g!(3960), e!(510), e!(516), e!(4370),
    e!(509), e!(4544), e!(699), e!(4909), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8985), e!(933), e!(5192), e!(1054), e!(3934), e!(5241), e!(5638), e!(5647), e!(5663), e!(5245), e!(7921), e!(6912), e!(6914),
    e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8985), e!(933), e!(5192), e!(1054), e!(3934), e!(5638), e!(5647), e!(5663), e!(1589), e!(7942), e!(8722), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234),
    e!(567), e!(6915), e!(8738), e!(8110), e!(8109), e!(8117), e!(8122), e!(8128), e!(8136), e!(8139), e!(1064), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(191), e!(849), e!(2968), e!(2967), e!(3001), e!(4419),
    e!(4659), e!(7348), e!(7958), e!(7959), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(2914), e!(2923), e!(3381), e!(3447), e!(3704), e!(4567), e!(7038), e!(8909), e!(524), e!(9133), e!(6912), e!(6914), e!(4233),
    e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(1179), e!(2349), e!(4429), e!(4932), e!(5744), e!(5896), e!(6131), e!(6752), e!(8149), e!(8216), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8255), e!(8113),
    e!(8986), e!(2876), e!(4438), e!(4696), e!(5387), e!(5389), e!(5391), e!(4662), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(1133), e!(4405), e!(7160), e!(8074), e!(8080), e!(7159), e!(8071), e!(8076), e!(8201),
    e!(8787), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(133), e!(3860), e!(234), e!(568), e!(6915), e!(8736), e!(7443), e!(383), e!(4887), e!(7299), e!(7955), e!(8441), e!(8451), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141),
    e!(3860), e!(234), e!(176), e!(4083), e!(203), e!(1448), e!(1475), e!(1498), e!(4023), e!(4024), e!(6985), e!(6988), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(1018), e!(6803), e!(6587), e!(6628),
    e!(6632), e!(6627), e!(6631), e!(6811), e!(6624), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(5905), e!(6180), e!(2683), e!(5810), e!(5946), e!(7556), e!(7568), e!(7579), e!(7580), e!(6912), e!(6914),
    e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(5905), e!(6180), e!(5231), e!(5810), e!(5951), e!(7555), e!(7573), e!(7579), e!(7580), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738),
    e!(654), e!(1803), e!(1811), e!(2717), e!(4194), e!(5113), e!(5382), e!(5934), e!(6703), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(2331), e!(4089), e!(4091), e!(4381), e!(4382), e!(4463), e!(4464), e!(4916),
    e!(7333), e!(8389), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(989), e!(3221), e!(3495), e!(3534), e!(4304), e!(5440), e!(8793), e!(4936), e!(6991), e!(9073), e!(6912), e!(6914), e!(4233), e!(1880), e!(804),
    e!(133), e!(3860), e!(234), e!(8736), e!(1865), e!(5645), e!(5814), e!(1014), e!(4861), e!(7009), e!(7878), e!(8159), e!(8491), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(309), e!(1171), e!(2824), e!(2845),
    e!(4860), e!(5409), e!(6381), e!(6540), e!(6544), e!(8906), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(992), e!(1443), e!(2520), e!(2541), e!(5580), e!(5583), e!(8837), e!(5067), e!(5582), e!(9100), e!(6912),
    e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(3387), e!(4077), e!(4590), e!(1186), e!(3490), e!(3524), e!(5419), e!(5427), e!(8540), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234),
    e!(8738), e!(554), e!(2570), e!(3595), e!(3600), e!(5974), e!(6952), e!(6953), e!(8102), e!(8264), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(2924), e!(3380), e!(3446), e!(7037), e!(8913), e!(496), e!(4493),
    e!(4701), e!(7965), e!(7964), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(446), e!(1961), e!(1960), e!(6651), e!(302), e!(2851), e!(5219), e!(7961), e!(8523), e!(8549), e!(1880), e!(803), e!(3860), e!(132),
    e!(2519), e!(3566), e!(5546), e!(5578), e!(5585), e!(5586), e!(5593), e!(5604), e!(6091), e!(6810), e!(6898), e!(9066), e!(9106), e!(8970), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(133), e!(3860), e!(234), e!(8736), e!(568), e!(6915),
    e!(3947), e!(4892), e!(6851), e!(1122), e!(5988), e!(6918), e!(9136), e!(447), e!(449), e!(450), e!(452), e!(457), e!(467), e!(1606), e!(3229), e!(3232), e!(3234), e!(3236), e!(3237), e!(4577), e!(4578), e!(6615), e!(6646), e!(6647), e!(8597),
    e!(1525), e!(1671), e!(3569), e!(8297), e!(3683), e!(3685), e!(3825), e!(3932), e!(4582), e!(6866), e!(6963), e!(6966), e!(6969), e!(6972), e!(8175), e!(8167), e!(8171), e!(8736), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860),
    e!(234), e!(97), e!(857), e!(2685), e!(2966), e!(4363), e!(4650), e!(2965), e!(4362), e!(4649), e!(8185), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(8110), e!(8109), e!(8117), e!(8122), e!(8128),
    e!(8136), e!(8139), e!(523), e!(1063), e!(7792), e!(7794), e!(7795), e!(7796), e!(7797), e!(7864), e!(7865), e!(7866), e!(7867), e!(7869), e!(7870), e!(7871), e!(7887), e!(7890), e!(7893), e!(7894), e!(7895), e!(7899), e!(6912), e!(6914), e!(4233),
    e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8985), e!(933), e!(5192), e!(1054), e!(3934), e!(5638), e!(5647), e!(5663), e!(7935), e!(8381), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(2886),
    e!(3040), e!(4596), e!(4624), e!(8176), e!(4631), e!(8172), e!(8281), e!(8387), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(138), e!(3860), e!(234), e!(5281), e!(6230), e!(2657), e!(4245), e!(8572), e!(8575), e!(1816), e!(4357), e!(4644),
    e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(138), e!(3860), e!(234), e!(5281), e!(6230), e!(2657), e!(4245), e!(8572), e!(8575), e!(1822), e!(4357), e!(4644), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234),
    e!(8738), e!(567), e!(6915), e!(3948), e!(4901), e!(6851), e!(443), e!(995), e!(3721), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(8110), e!(8109), e!(8116), e!(8121), e!(8127), e!(8135), e!(8138),
    e!(3679), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(8110), e!(8109), e!(8117), e!(8122), e!(8128), e!(8136), e!(8139), e!(521), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860),
    e!(234), e!(8738), e!(214), e!(2348), e!(2474), e!(2687), e!(3579), e!(4150), e!(5472), e!(6444), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(1365), e!(1366), e!(1367), e!(1368), e!(1369), e!(1370), e!(1371),
    e!(1372), e!(1375), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(446), e!(1961), e!(1960), e!(6651), e!(1531), e!(2323), e!(3224), e!(6236), e!(6917), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141),
    e!(3860), e!(234), e!(8738), e!(567), e!(6915), e!(3948), e!(4904), e!(6851), e!(6166), e!(7166), e!(7255), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(5905), e!(6180), e!(2027), e!(4311), e!(4314),
    e!(5790), e!(5348), e!(2182), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(5905), e!(6180), e!(2287), e!(5793), e!(7555), e!(7576), e!(7579), e!(7581), e!(6912), e!(6914), e!(4233), e!(1880), e!(804),
    e!(141), e!(3860), e!(234), e!(446), e!(1961), e!(1960), e!(6651), e!(1632), e!(2313), e!(2324), e!(3115), e!(5834), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(8110), e!(8109), e!(8117), e!(8122),
    e!(8128), e!(8136), e!(8139), e!(2542), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(8110), e!(8109), e!(8115), e!(8120), e!(8126), e!(8134), e!(8137), e!(2940), e!(6912), e!(6914), e!(4233), e!(1880),
    e!(804), e!(141), e!(3860), e!(234), e!(8255), e!(8113), e!(8986), e!(499), e!(2957), e!(3638), e!(3933), e!(5276), e!(5474), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(3211), e!(3215), e!(3494), e!(5437),
    e!(8902), e!(11), e!(209), e!(4574), e!(5399), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(1015), e!(3544), e!(3654), e!(3952), e!(7632), e!(8862), e!(1439), e!(3184), e!(7618), e!(6912), e!(6914), e!(4233),
    e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(1016), e!(3185), e!(3545), e!(8022), e!(8023), e!(8024), e!(8863), e!(1442), e!(6747), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(1015), e!(3544), e!(3654),
    e!(3952), e!(7632), e!(8862), e!(1439), e!(3419), e!(7317), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(1016), e!(3185), e!(3545), e!(8022), e!(8023), e!(8024), e!(8863), e!(1442), e!(8018), e!(6912), e!(6914),
    e!(4233), e!(1880), e!(804), e!(139), e!(3860), e!(234), e!(953), e!(8870), e!(723), e!(727), e!(753), e!(757), e!(758), e!(759), e!(6575), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(567), e!(6915),
    e!(8738), e!(7444), e!(2511), e!(3949), e!(7297), e!(7613), e!(8443), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(989), e!(3221), e!(3495), e!(3534), e!(4304), e!(5440), e!(8793), e!(679), e!(6516), e!(6912),
    e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(1132), e!(2481), e!(4441), e!(5306), e!(5311), e!(5304), e!(5309), e!(8204), e!(8885), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(4927),
    e!(2371), e!(2384), e!(5933), e!(2374), e!(4197), e!(6869), e!(7996), e!(8000), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(8110), e!(8109), e!(8115), e!(8120), e!(8126), e!(8134), e!(8137), e!(4283),
    e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(3379), e!(3445), e!(7036), e!(8910), e!(495), e!(4492), e!(4700), e!(7965), e!(7964), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234),
    e!(186), e!(2925), e!(4545), e!(5270), e!(5725), e!(6957), e!(7379), e!(7607), e!(8911), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(567), e!(6915), e!(3771), e!(4761), e!(4790), e!(4810), e!(4811),
    e!(5223), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(1866), e!(4481), e!(4712), e!(6047), e!(8555), e!(9047), e!(3064), e!(8580), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860),
    e!(234), e!(8738), e!(1866), e!(4481), e!(4712), e!(6047), e!(8555), e!(9047), e!(4038), e!(8582), e!(1069), e!(1587), e!(1713), e!(2993), e!(3374), e!(3376), e!(4388), e!(4424), e!(4954), e!(6005), e!(6006), e!(6019), e!(6133), e!(7621), e!(8274),
    e!(8649), e!(5931), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(448), e!(451), e!(456), e!(464), e!(475), e!(3235), e!(3238), e!(3999), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141),
    e!(3860), e!(234), e!(8738), e!(567), e!(6915), e!(3948), e!(4906), e!(6851), e!(1596), e!(3863), e!(4587), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(8110), e!(8109), e!(8115), e!(8120), e!(8126),
    e!(8134), e!(8137), e!(6812), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(1660), e!(3066), e!(3315), e!(3320), e!(5132), e!(6876), e!(6881), e!(6924), e!(8322), e!(6912), e!(6914), e!(4233), e!(1880), e!(804),
    e!(133), e!(3860), e!(234), e!(195), e!(856), e!(1780), e!(3000), e!(4232), e!(5825), e!(7341), e!(7343), e!(8307), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(8110), e!(8109), e!(8117), e!(8122),
    e!(8128), e!(8136), e!(8139), e!(7653), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8985), e!(933), e!(5192), e!(2561), e!(7002), e!(7236), e!(7937), e!(7947), e!(7950), e!(6912), e!(6914), e!(4233), e!(1880),
    e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(567), e!(6915), e!(56), e!(60), e!(64), e!(68), e!(69), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(138), e!(3860), e!(234), e!(5281), e!(6230), e!(2657), e!(4245), e!(8572),
    e!(8575), e!(1821), e!(4146), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(138), e!(3860), e!(234), e!(567), e!(6915), e!(8738), e!(2657), e!(4245), e!(8572), e!(8575), e!(1205), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(138),
    e!(3860), e!(234), e!(5281), e!(6230), e!(2657), e!(4245), e!(8572), e!(8575), e!(1900), e!(1929), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(138), e!(3860), e!(234), e!(5281), e!(6230), e!(2657), e!(4245), e!(8572), e!(8575), e!(1206),
    e!(2670), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(567), e!(6915), e!(7169), e!(7953), e!(665), e!(659), e!(2509), e!(2754), e!(4444), e!(4447), e!(4448), e!(4449), e!(4455), e!(4468), e!(4473),
    e!(4663), e!(4673), e!(4674), e!(4675), e!(4677), e!(4681), e!(4683), e!(8351), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(140), e!(3860), e!(234), e!(8738), e!(725), e!(735), e!(746), e!(748), e!(775), e!(777), e!(779), e!(6912),
    e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(567), e!(6915), e!(3948), e!(4906), e!(6851), e!(5246), e!(5681), e!(2454), e!(1031), e!(2830), e!(2837), e!(3854), e!(6807), e!(8966), e!(313), e!(893), e!(1073),
    e!(2679), e!(4318), e!(5739), e!(6159), e!(6268), e!(6746), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(477), e!(950), e!(2668), e!(2667), e!(7101), e!(944), e!(7111), e!(6912), e!(6914), e!(4233),
    e!(1880), e!(804), e!(141), e!(3860), e!(4883), e!(5274), e!(9012), e!(9054), e!(234), e!(4881), e!(5272), e!(9010), e!(9039), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(133), e!(3860), e!(234), e!(8736), e!(568), e!(6915), e!(3947),
    e!(4895), e!(6851), e!(996), e!(3722), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8255), e!(8113), e!(8986), e!(2876), e!(5388), e!(5392), e!(5213), e!(5390), e!(6912), e!(6914), e!(4233), e!(1880), e!(804),
    e!(141), e!(3860), e!(234), e!(8738), e!(1006), e!(1383), e!(1406), e!(1408), e!(2552), e!(3089), e!(7596), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(567), e!(6915), e!(3948), e!(4902), e!(6851),
    e!(3943), e!(9139), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(1460), e!(1463), e!(1467), e!(4034), e!(6622), e!(825), e!(1459), e!(1507), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860),
    e!(234), e!(8738), e!(567), e!(6915), e!(3948), e!(4904), e!(6851), e!(5990), e!(9137), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(567), e!(6915), e!(3948), e!(4904), e!(6851), e!(5989), e!(9138),
    e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(33), e!(1351), e!(1617), e!(3223), e!(3868), e!(6235), e!(6916), e!(2652), e!(2651), e!(3924), e!(4413), e!(4471), e!(4918), e!(4923), e!(4920), e!(4925),
    e!(4942), e!(7791), e!(7798), e!(7799), e!(8999), e!(9002), e!(9005), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(1623), e!(1631), e!(1716), e!(2536), e!(2872), e!(4384), e!(4652), e!(5131), e!(6912), e!(6914),
    e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(1624), e!(1631), e!(1716), e!(2537), e!(4384), e!(4612), e!(4652), e!(7109), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(1865), e!(5645),
    e!(5814), e!(4163), e!(7010), e!(8160), e!(6122), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(1865), e!(5645), e!(5814), e!(4163), e!(7010), e!(8160), e!(6107), e!(6912), e!(6914), e!(4233), e!(1880),
    e!(804), e!(141), e!(3860), e!(234), e!(8255), e!(8113), e!(8986), e!(1053), e!(2932), e!(2959), e!(4477), e!(4686), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(989), e!(3221), e!(3495), e!(3534), e!(4304),
    e!(5440), e!(8793), e!(829), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(1008), e!(5422), e!(8210), e!(8225), e!(8218), e!(8232), e!(8235), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141),
    e!(3860), e!(234), e!(1029), e!(8794), e!(8068), e!(1600), e!(1757), e!(3110), e!(3371), e!(8059), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(381), e!(382), e!(387), e!(390), e!(3941), e!(7296), e!(7446),
    e!(8877), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8255), e!(8113), e!(8986), e!(4067), e!(6529), e!(4687), e!(4478), e!(5109), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(4884),
    e!(5275), e!(9013), e!(9055), e!(234), e!(4882), e!(5273), e!(9011), e!(9040), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(1791), e!(6052), e!(3695), e!(5290), e!(4156), e!(5289), e!(7305), e!(6912),
    e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(3387), e!(4077), e!(4590), e!(3523), e!(5006), e!(5094), e!(8542), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(446), e!(1961),
    e!(1960), e!(6651), e!(1634), e!(5349), e!(7163), e!(7162), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(3760), e!(8435), e!(8440), e!(234), e!(3759), e!(7453), e!(8429), e!(8439), e!(8956), e!(6912), e!(6914), e!(4233),
    e!(1880), e!(804), e!(133), e!(3860), e!(234), e!(8736), e!(3059), e!(4482), e!(4714), e!(6047), e!(8554), e!(3063), e!(8579), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(567), e!(6915), e!(3948),
    e!(4905), e!(6851), e!(3411), e!(7247), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(567), e!(6915), e!(3948), e!(4905), e!(6851), e!(854), e!(7342), e!(6912), e!(6914), e!(4233), e!(1880), e!(804),
    e!(141), e!(3860), e!(234), e!(8738), e!(4086), e!(4338), e!(8013), e!(1530), e!(7954), e!(4826), e!(4248), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(1892), e!(4286), e!(5112), e!(5476), e!(5813), e!(6886),
    e!(6888), e!(8057), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(133), e!(3860), e!(234), e!(8736), e!(2529), e!(6623), e!(6839), e!(2471), e!(2859), e!(5925), e!(6785), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(133), e!(3860),
    e!(234), e!(8736), e!(2529), e!(6623), e!(6839), e!(2470), e!(2860), e!(5924), e!(6219), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(26), e!(2960), e!(3415), e!(4568), e!(4570), e!(6618), e!(7161), e!(7652),
    e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(133), e!(3860), e!(234), e!(8736), e!(22), e!(3424), e!(5642), e!(5660), e!(5816), e!(7881), e!(8161), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(691),
    e!(2978), e!(6390), e!(6398), e!(6404), e!(6407), e!(6421), e!(8907), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(2949), e!(4514), e!(6393), e!(6397), e!(6405), e!(6416), e!(6418), e!(8917), e!(6912), e!(6914),
    e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(2816), e!(3030), e!(4605), e!(3082), e!(4607), e!(6804), e!(8369), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(133), e!(3860), e!(234), e!(8736), e!(2813), e!(3022),
    e!(4598), e!(6840), e!(2834), e!(6831), e!(6848), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(2814), e!(3023), e!(4599), e!(6841), e!(2833), e!(6832), e!(6849), e!(6912), e!(6914), e!(4233), e!(1880),
    e!(804), e!(141), e!(3860), e!(234), e!(8255), e!(8113), e!(8986), e!(2876), e!(4698), e!(4489), e!(3995), e!(5460), e!(7469), e!(7472), e!(7536), e!(7403), e!(7493), e!(7466), e!(7411), e!(7468), e!(7471), e!(7535), e!(7402), e!(7492), e!(7465),
    e!(7410), e!(835), e!(8770), e!(435), e!(497), e!(1677), e!(1681), e!(1683), e!(1719), e!(2995), e!(3744), e!(3832), e!(4808), e!(5232), e!(5286), e!(7562), e!(7563), e!(8123), e!(8296), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141),
    e!(3860), e!(234), e!(410), e!(2200), e!(7616), e!(412), e!(417), e!(6147), e!(6853), e!(8959), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8255), e!(8113), e!(8986), e!(2855), e!(6526), e!(6530), e!(7634),
    e!(8183), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8985), e!(933), e!(5192), e!(620), e!(2730), e!(2961), e!(4755), e!(7909), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234),
    e!(655), e!(3389), e!(4912), e!(5859), e!(8276), e!(8295), e!(9043), e!(8814), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(138), e!(3860), e!(234), e!(5281), e!(6230), e!(2657), e!(4245), e!(8572), e!(8575), e!(1815), e!(6912), e!(6914),
    e!(4233), e!(1880), e!(804), e!(138), e!(3860), e!(234), e!(5281), e!(6230), e!(2657), e!(4245), e!(8572), e!(8575), e!(862), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(138), e!(3860), e!(234), e!(5281), e!(6230), e!(2657), e!(4245),
    e!(8572), e!(8575), e!(1924), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(138), e!(3860), e!(234), e!(5281), e!(6230), e!(2657), e!(4245), e!(8572), e!(8575), e!(1920), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(138), e!(3860),
    e!(234), e!(5281), e!(6230), e!(2657), e!(4245), e!(8572), e!(8575), e!(1928), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(138), e!(3860), e!(234), e!(5281), e!(6230), e!(2657), e!(4245), e!(8572), e!(8575), e!(1826), e!(6912), e!(6914),
    e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8255), e!(8113), e!(8986), e!(2876), e!(4691), e!(4483), e!(1109), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(3329), e!(3963), e!(6241), e!(6251),
    e!(6259), e!(5143), e!(7375), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(102), e!(1284), e!(2343), e!(7177), e!(8755), e!(98), e!(4788), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860),
    e!(234), e!(102), e!(1284), e!(2343), e!(7177), e!(8755), e!(5463), e!(5456), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(1008), e!(8207), e!(8212), e!(8221), e!(8231), e!(8233), e!(6912), e!(6914),
    e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(371), e!(1953), e!(3077), e!(5674), e!(5676), e!(5680), e!(8745), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(567), e!(6915), e!(2353),
    e!(8531), e!(1085), e!(1093), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(567), e!(6915), e!(2477), e!(2478), e!(6074), e!(6075), e!(8801), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860),
    e!(234), e!(8738), e!(1414), e!(4584), e!(5871), e!(6186), e!(6242), e!(7025), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(1648), e!(2686), e!(2688), e!(2689), e!(2693), e!(4591), e!(6912), e!(6914),
    e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(460), e!(471), e!(2258), e!(2742), e!(6691), e!(7136), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(5905), e!(6180), e!(1982),
    e!(5315), e!(5783), e!(5942), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(5905), e!(6180), e!(881), e!(5799), e!(7567), e!(5943), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860),
    e!(234), e!(8738), e!(32), e!(35), e!(199), e!(201), e!(7142), e!(7309), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(5905), e!(6180), e!(2025), e!(2032), e!(5326), e!(5783), e!(6912), e!(6914),
    e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(446), e!(1960), e!(6651), e!(2484), e!(2486), e!(5169), e!(8505), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(5905), e!(6180), e!(4313),
    e!(4316), e!(4317), e!(4324), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(5905), e!(6180), e!(3725), e!(5799), e!(7571), e!(5948), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860),
    e!(234), e!(8738), e!(5905), e!(6180), e!(4553), e!(5799), e!(7572), e!(5949), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(31), e!(3558), e!(4558), e!(4559), e!(4561), e!(4562), e!(6912), e!(6914),
    e!(4233), e!(1880), e!(804), e!(139), e!(3860), e!(234), e!(8738), e!(5905), e!(6180), e!(5294), e!(2003), e!(5792), e!(5945), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(139), e!(3860), e!(234), e!(8738), e!(5905), e!(6180), e!(5294),
    e!(2097), e!(5792), e!(5940), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(139), e!(3860), e!(234), e!(8738), e!(5905), e!(6180), e!(5294), e!(2097), e!(5792), e!(5941), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860),
    e!(234), e!(8738), e!(33), e!(2899), e!(2897), e!(6270), e!(6271), e!(7266), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(5905), e!(6180), e!(5316), e!(5799), e!(6690), e!(7574), e!(6912), e!(6914),
    e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(5905), e!(6180), e!(2243), e!(5317), e!(5789), e!(7575), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(2489), e!(3181), e!(3980),
    e!(4045), e!(5108), e!(7152), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(1144), e!(2488), e!(2853), e!(2861), e!(5171), e!(5172), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860),
    e!(234), e!(8738), e!(2367), e!(2387), e!(2400), e!(5329), e!(5804), e!(5955), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(2363), e!(4575), e!(4576), e!(4579), e!(4583), e!(5759), e!(8887), e!(6912), e!(6914),
    e!(4233), e!(1880), e!(804), e!(138), e!(3860), e!(234), e!(2423), e!(2429), e!(2650), e!(2726), e!(4450), e!(4946), e!(6150), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(1837), e!(2594), e!(3659),
    e!(4818), e!(5699), e!(1207), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(7452), e!(8454), e!(3388), e!(3390), e!(3391), e!(3747), e!(8744), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(140), e!(3860),
    e!(234), e!(8738), e!(567), e!(6915), e!(3948), e!(4900), e!(6851), e!(3093), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(437), e!(1789), e!(4488), e!(4695), e!(6081), e!(6299), e!(6912), e!(6914),
    e!(4233), e!(1880), e!(804), e!(140), e!(3860), e!(234), e!(8738), e!(1348), e!(3284), e!(4434), e!(5475), e!(5484), e!(5798), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(4738), e!(6035), e!(6038), e!(3412),
    e!(5125), e!(5821), e!(7244), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(3470), e!(3437), e!(3434), e!(4917), e!(3464), e!(3441), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860),
    e!(234), e!(3470), e!(3437), e!(3434), e!(3275), e!(5336), e!(5563), e!(8869), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(1029), e!(8794), e!(3488), e!(4018), e!(6494), e!(8104), e!(8592), e!(6912), e!(6914),
    e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(1032), e!(1035), e!(1033), e!(1189), e!(3509), e!(5062), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(3501), e!(3518), e!(5338), e!(7175),
    e!(8270), e!(8547), e!(8873), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(138), e!(3860), e!(234), e!(8738), e!(1865), e!(5645), e!(5814), e!(4160), e!(7008), e!(46), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(138), e!(3860),
    e!(234), e!(8738), e!(1865), e!(5645), e!(5814), e!(4160), e!(7008), e!(48), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(138), e!(3860), e!(234), e!(8738), e!(1865), e!(5645), e!(5814), e!(4160), e!(7008), e!(3622), e!(6912), e!(6914),
    e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(3204), e!(5429), e!(6083), e!(7281), e!(7318), e!(9036), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(138), e!(3860), e!(234), e!(8738), e!(3387), e!(4077), e!(4590),
    e!(1186), e!(5402), e!(7156), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(3211), e!(3215), e!(3494), e!(5437), e!(8902), e!(3574), e!(4103), e!(3568), e!(1647), e!(2482), e!(3161), e!(4134), e!(4442), e!(4855),
    e!(5305), e!(5310), e!(6016), e!(8079), e!(8091), e!(8097), e!(8331), e!(8884), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(567), e!(6915), e!(3948), e!(4906), e!(6851), e!(4769), e!(6912), e!(6914),
    e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(567), e!(6915), e!(3948), e!(4906), e!(6851), e!(5164), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8255), e!(8113), e!(8986), e!(7130),
    e!(7768), e!(4685), e!(4479), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(567), e!(6915), e!(3948), e!(4906), e!(6851), e!(5366), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860),
    e!(234), e!(8255), e!(8113), e!(8986), e!(2876), e!(4697), e!(3996), e!(5460), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(133), e!(3860), e!(234), e!(8736), e!(4482), e!(4714), e!(6047), e!(8554), e!(4037), e!(8581), e!(6912), e!(6914),
    e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(567), e!(6915), e!(3948), e!(4903), e!(6851), e!(6031), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(919), e!(1038), e!(4745), e!(5347),
    e!(8367), e!(8723), e!(8807), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(567), e!(6915), e!(3762), e!(3824), e!(5874), e!(6195), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860),
    e!(234), e!(226), e!(3697), e!(4866), e!(8996), e!(1829), e!(7289), e!(8710), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(133), e!(3860), e!(234), e!(8736), e!(568), e!(6915), e!(3947), e!(4896), e!(6851), e!(6263), e!(6912), e!(6914),
    e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(4244), e!(8571), e!(8573), e!(3322), e!(8735), e!(8665), e!(7312), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(4244), e!(8571), e!(8573), e!(3322),
    e!(1896), e!(8735), e!(8665), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(1270), e!(1809), e!(5517), e!(6687), e!(6734), e!(6883), e!(8935), e!(4838), e!(4839), e!(5303), e!(9025), e!(4141), e!(1794), e!(4062),
    e!(3195), e!(3050), e!(5120), e!(8250), e!(7285), e!(7682), e!(8259), e!(5763), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(2694), e!(4208), e!(5640), e!(5770), e!(5812), e!(6805), e!(6912), e!(6914),
    e!(4233), e!(1880), e!(804), e!(140), e!(3860), e!(234), e!(8738), e!(1970), e!(2116), e!(2990), e!(4380), e!(5703), e!(8666), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(133), e!(3860), e!(234), e!(4618), e!(4500), e!(4502), e!(4601),
    e!(6742), e!(6744), e!(8344), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(2828), e!(2848), e!(3901), e!(3917), e!(4859), e!(6545), e!(6546), e!(6912), e!(795), e!(6914), e!(4233), e!(1880), e!(804), e!(141),
    e!(3860), e!(234), e!(8738), e!(3774), e!(5193), e!(5749), e!(6164), e!(6854), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(138), e!(3860), e!(234), e!(8738), e!(567), e!(6915), e!(3948), e!(4898), e!(6851), e!(3262), e!(6912), e!(6914),
    e!(4233), e!(1880), e!(804), e!(140), e!(3860), e!(234), e!(8738), e!(567), e!(6915), e!(3948), e!(4900), e!(6851), e!(4779), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(567), e!(6915), e!(4547),
    e!(5271), e!(6616), e!(6619), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(139), e!(3860), e!(234), e!(436), e!(3073), e!(3164), e!(4459), e!(7274), e!(7278), e!(7279), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(139), e!(3860),
    e!(234), e!(2648), e!(3068), e!(3069), e!(3070), e!(3071), e!(3735), e!(7272), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8255), e!(8113), e!(8986), e!(7099), e!(7104), e!(7717), e!(7723), e!(6912), e!(6914),
    e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(567), e!(6915), e!(3948), e!(4902), e!(6851), e!(7991), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8985), e!(933), e!(5192), e!(2561),
    e!(3216), e!(5539), e!(7938), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8985), e!(933), e!(5192), e!(2561), e!(3487), e!(5540), e!(7939), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860),
    e!(234), e!(8985), e!(933), e!(5192), e!(2561), e!(3519), e!(5541), e!(7940), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8985), e!(933), e!(5192), e!(1055), e!(6469), e!(7933), e!(8717), e!(6912), e!(6914),
    e!(4233), e!(1880), e!(804), e!(133), e!(3860), e!(234), e!(8736), e!(568), e!(6915), e!(3947), e!(4893), e!(6851), e!(7991), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(102), e!(2347), e!(7173), e!(8954),
    e!(5462), e!(5195), e!(5455), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(102), e!(2346), e!(7173), e!(8954), e!(5234), e!(6225), e!(8363), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860),
    e!(234), e!(8738), e!(567), e!(6915), e!(3948), e!(4906), e!(6851), e!(8391), e!(518), e!(5548), e!(5862), e!(5869), e!(5861), e!(5866), e!(7147), e!(688), e!(747), e!(776), e!(517), e!(5135), e!(5134), e!(5240), e!(8736), e!(6912), e!(6914),
    e!(4233), e!(1880), e!(804), e!(140), e!(3860), e!(234), e!(3576), e!(4372), e!(9049), e!(552), e!(6762), e!(8465), e!(8551), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(140), e!(3860), e!(234), e!(3576), e!(4372), e!(9049), e!(4368),
    e!(5726), e!(5727), e!(9034), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(2355), e!(2999), e!(5210), e!(2998), e!(5209), e!(5554), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860),
    e!(234), e!(8255), e!(8113), e!(8986), e!(4480), e!(4688), e!(6527), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(567), e!(6915), e!(8738), e!(7444), e!(2510), e!(2653), e!(6912), e!(6914), e!(4233), e!(1880),
    e!(804), e!(141), e!(3860), e!(234), e!(7452), e!(8455), e!(388), e!(389), e!(3718), e!(4431), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(567), e!(6915), e!(8738), e!(7444), e!(4008), e!(8670), e!(6912),
    e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(567), e!(6915), e!(6056), e!(2672), e!(351), e!(8737), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(7452), e!(8454), e!(2335), e!(6755),
    e!(8438), e!(8792), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(121), e!(7610), e!(3953), e!(8672), e!(1814), e!(494), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(3329),
    e!(3963), e!(6241), e!(6251), e!(6259), e!(1125), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(102), e!(1284), e!(2343), e!(7177), e!(8755), e!(2888), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141),
    e!(3860), e!(234), e!(102), e!(1284), e!(2343), e!(7177), e!(8755), e!(1682), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(102), e!(1284), e!(2343), e!(7177), e!(8755), e!(8384), e!(6912), e!(6914), e!(4233),
    e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(102), e!(1284), e!(2343), e!(7177), e!(8755), e!(2889), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(102), e!(1284), e!(2343), e!(7177), e!(8755), e!(4773),
    e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(102), e!(1284), e!(2343), e!(7177), e!(8755), e!(4774), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(7747), e!(7748), e!(6201),
    e!(2969), e!(6850), e!(8769), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(102), e!(1284), e!(2343), e!(7177), e!(8755), e!(2732), e!(739), e!(740), e!(741), e!(742), e!(4444), e!(4456), e!(4469), e!(4455),
    e!(4468), e!(4663), e!(4678), e!(4682), e!(4677), e!(4681), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(567), e!(6915), e!(914), e!(5239), e!(5618), e!(6912), e!(6914), e!(4233), e!(1880), e!(804),
    e!(141), e!(3860), e!(234), e!(8738), e!(6126), e!(6790), e!(1886), e!(6319), e!(6768), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(5773), e!(6124), e!(6125), e!(3027), e!(6318), e!(6912), e!(6914),
    e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(226), e!(3697), e!(4867), e!(8997), e!(874), e!(8669), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(139), e!(3860), e!(234), e!(8803), e!(3165), e!(7273), e!(7275), e!(7600),
    e!(8267), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(5620), e!(6260), e!(7031), e!(7033), e!(7584), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(138), e!(3860), e!(234), e!(1450), e!(1499),
    e!(5297), e!(6890), e!(6986), e!(8645), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(170), e!(3191), e!(4491), e!(4970), e!(6758), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860),
    e!(234), e!(8738), e!(172), e!(1949), e!(4017), e!(4036), e!(4081), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(3387), e!(4077), e!(4590), e!(1186), e!(1959), e!(6912), e!(6914), e!(4233), e!(1880),
    e!(804), e!(141), e!(3860), e!(234), e!(2880), e!(8378), e!(8939), e!(2895), e!(8195), e!(8347), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(853), e!(1774), e!(1775), e!(4385), e!(4653), e!(8302), e!(6912),
    e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(519), e!(3401), e!(3402), e!(3723), e!(3724), e!(8821), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(3289), e!(5470), e!(5557),
    e!(6272), e!(6275), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(3546), e!(1595), e!(2325), e!(6148), e!(7364), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(138), e!(3860), e!(234), e!(8738),
    e!(5905), e!(6180), e!(5324), e!(5781), e!(5952), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(32), e!(35), e!(840), e!(1116), e!(7320), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141),
    e!(3860), e!(234), e!(8738), e!(1542), e!(6026), e!(6028), e!(8353), e!(8545), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(5905), e!(6180), e!(1982), e!(5783), e!(5944), e!(6912), e!(6914), e!(4233),
    e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(5905), e!(6180), e!(2093), e!(2827), e!(3743), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(5905), e!(6180), e!(6731), e!(7151), e!(7660),
    e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(5905), e!(6180), e!(2095), e!(5783), e!(5950), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(139), e!(3860), e!(234), e!(8738), e!(567), e!(6915),
    e!(3948), e!(4899), e!(6851), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(446), e!(1960), e!(6651), e!(5227), e!(5228), e!(5229), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234),
    e!(8738), e!(2008), e!(5741), e!(5860), e!(6715), e!(6862), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(32), e!(35), e!(4445), e!(5468), e!(6517), e!(6912), e!(6914), e!(4233), e!(1880), e!(804),
    e!(141), e!(3860), e!(234), e!(8738), e!(3547), e!(6167), e!(6375), e!(7167), e!(7256), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(446), e!(1961), e!(1960), e!(6651), e!(1962), e!(6317), e!(6912), e!(6914),
    e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(33), e!(6168), e!(6650), e!(6654), e!(6689), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(28), e!(4022), e!(5136), e!(6652),
    e!(6692), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(2009), e!(2246), e!(2563), e!(5860), e!(6809), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(139), e!(3860), e!(234), e!(8738), e!(5905),
    e!(6180), e!(5319), e!(5792), e!(6797), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(139), e!(3860), e!(234), e!(8738), e!(5905), e!(6180), e!(5320), e!(5792), e!(6799), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(139), e!(3860),
    e!(234), e!(8738), e!(5905), e!(6180), e!(5322), e!(5792), e!(6800), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(2109), e!(2869), e!(4827), e!(7963), e!(8550), e!(6912), e!(6914), e!(4233), e!(1880),
    e!(804), e!(141), e!(3860), e!(234), e!(2362), e!(4079), e!(4955), e!(5268), e!(5721), e!(8726), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(3717), e!(1839), e!(5363), e!(6063), e!(7290), e!(8841), e!(6912),
    e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(6323), e!(6441), e!(7445), e!(8577), e!(2544), e!(8847), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(139), e!(3860), e!(234), e!(50), e!(678), e!(8871), e!(502),
    e!(3217), e!(8103), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(2844), e!(3029), e!(3079), e!(3081), e!(4606), e!(860), e!(1902), e!(1913), e!(2326), e!(2447), e!(2975), e!(3539), e!(3837), e!(4831),
    e!(5857), e!(7112), e!(7124), e!(8418), e!(8419), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(3387), e!(4077), e!(4590), e!(1186), e!(2163), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141),
    e!(3860), e!(234), e!(8738), e!(1801), e!(1806), e!(1807), e!(4096), e!(8614), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(446), e!(1961), e!(1960), e!(6651), e!(1633), e!(3729), e!(6912), e!(6914), e!(4233),
    e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(3483), e!(3485), e!(3532), e!(6588), e!(8359), e!(8904), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(1451), e!(1479), e!(4030), e!(5481), e!(9027),
    e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(1451), e!(1479), e!(4030), e!(5485), e!(9027), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(226), e!(3697), e!(4866),
    e!(8996), e!(8452), e!(8539), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(2924), e!(3380), e!(3446), e!(7037), e!(8913), e!(4550), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(133), e!(3860), e!(234),
    e!(8736), e!(1972), e!(2013), e!(3813), e!(6190), e!(6215), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(140), e!(3860), e!(234), e!(8738), e!(2832), e!(3892), e!(3908), e!(7877), e!(8489), e!(6912), e!(6914), e!(4233), e!(1880), e!(804),
    e!(140), e!(3860), e!(234), e!(1022), e!(5102), e!(6643), e!(6644), e!(6642), e!(8513), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(137), e!(3860), e!(234), e!(8738), e!(567), e!(6915), e!(3948), e!(4897), e!(6851), e!(6912), e!(6914),
    e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(581), e!(6468), e!(7548), e!(7638), e!(7644), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(102), e!(2347), e!(7173), e!(8954), e!(99),
    e!(4789), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(1060), e!(1360), e!(2558), e!(5374), e!(5835), e!(8976), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(139), e!(3860), e!(234), e!(955), e!(999),
    e!(1001), e!(1385), e!(2902), e!(2903), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(6309), e!(5236), e!(8070), e!(8065), e!(8930), e!(722), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860),
    e!(234), e!(8985), e!(933), e!(5192), e!(620), e!(627), e!(7911), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8985), e!(933), e!(5192), e!(2561), e!(1552), e!(3199), e!(6912), e!(6914), e!(4233), e!(1880),
    e!(804), e!(141), e!(3860), e!(234), e!(8985), e!(933), e!(5192), e!(6816), e!(2883), e!(7925), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8985), e!(933), e!(5192), e!(6816), e!(3037), e!(7927), e!(6912),
    e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8985), e!(933), e!(5192), e!(6816), e!(4622), e!(7929), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8985), e!(933), e!(5192), e!(2561),
    e!(1552), e!(8404), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(5827), e!(7995), e!(8039), e!(8038), e!(8041), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738),
    e!(18), e!(20), e!(822), e!(1868), e!(3538), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(3387), e!(4077), e!(4590), e!(1186), e!(821), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141),
    e!(3860), e!(234), e!(989), e!(3220), e!(3533), e!(4304), e!(5439), e!(8793), e!(570), e!(2043), e!(2137), e!(2292), e!(2309), e!(2321), e!(3155), e!(3808), e!(4101), e!(4885), e!(5152), e!(5672), e!(8055), e!(8538), e!(6912), e!(6914), e!(4233),
    e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(2924), e!(3380), e!(3446), e!(7037), e!(8913), e!(4552), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(226), e!(3697), e!(4866), e!(8996), e!(8453), e!(251),
    e!(253), e!(254), e!(259), e!(260), e!(261), e!(265), e!(267), e!(270), e!(272), e!(274), e!(276), e!(278), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(567), e!(6915), e!(8738), e!(7444), e!(2671),
    e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(102), e!(2347), e!(7173), e!(8954), e!(2887), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(139), e!(3860), e!(234), e!(102), e!(1284), e!(2341), e!(7177),
    e!(8755), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(102), e!(1284), e!(2342), e!(7177), e!(8755), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(567), e!(6915), e!(8905),
    e!(2752), e!(5238), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(6126), e!(6790), e!(1885), e!(6767), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(5773),
    e!(6124), e!(6125), e!(2841), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(6126), e!(6790), e!(1888), e!(6769), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738),
    e!(5773), e!(6124), e!(6125), e!(4603), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(139), e!(3860), e!(234), e!(8738), e!(6126), e!(6790), e!(1890), e!(6770), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234),
    e!(8738), e!(5773), e!(6124), e!(6125), e!(8365), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(1856), e!(3329), e!(3936), e!(984), e!(1037), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860),
    e!(234), e!(2555), e!(7421), e!(4278), e!(7422), e!(8974), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(5905), e!(6180), e!(1418), e!(2024), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141),
    e!(3860), e!(234), e!(8738), e!(5905), e!(6180), e!(1417), e!(3270), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(5905), e!(6180), e!(1417), e!(2096), e!(6912), e!(6914), e!(4233), e!(1880), e!(804),
    e!(141), e!(3860), e!(234), e!(8738), e!(5905), e!(6180), e!(1417), e!(6377), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(7298), e!(3940), e!(7448), e!(8449), e!(8736), e!(6912), e!(6914), e!(4233), e!(1880),
    e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(1456), e!(5646), e!(5819), e!(9139), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(4044), e!(6064), e!(7146), e!(1604), e!(6912), e!(6914), e!(4233),
    e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(102), e!(2347), e!(7173), e!(8954), e!(1627), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(102), e!(2347), e!(7173), e!(8954), e!(1628), e!(6912), e!(6914),
    e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(102), e!(2347), e!(7173), e!(8954), e!(2890), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(567), e!(6915), e!(1708), e!(4798), e!(6912),
    e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(102), e!(2347), e!(7173), e!(8954), e!(2891), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(3039), e!(3309), e!(8940), e!(5126), e!(6870),
    e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(136), e!(3860), e!(234), e!(3385), e!(4002), e!(4003), e!(3745), e!(6460), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(139), e!(3860), e!(234), e!(8738), e!(33), e!(458), e!(474),
    e!(823), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(139), e!(3860), e!(234), e!(8738), e!(5905), e!(6180), e!(1512), e!(6792), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(446), e!(1961), e!(1960),
    e!(6651), e!(6858), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(1003), e!(2566), e!(2673), e!(6861), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(390), e!(4432),
    e!(6514), e!(7451), e!(8818), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(5905), e!(6180), e!(1574), e!(1674), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738),
    e!(33), e!(1615), e!(2524), e!(4465), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(2494), e!(2567), e!(5181), e!(6714), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234),
    e!(8738), e!(33), e!(1541), e!(2576), e!(6264), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(5905), e!(6180), e!(1783), e!(2085), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860),
    e!(234), e!(8738), e!(5905), e!(6180), e!(2088), e!(2682), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(5905), e!(6180), e!(2089), e!(5230), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141),
    e!(3860), e!(234), e!(8738), e!(5905), e!(6180), e!(2092), e!(6676), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(5905), e!(6180), e!(2086), e!(7259), e!(6912), e!(6914), e!(4233), e!(1880), e!(804),
    e!(141), e!(3860), e!(234), e!(8738), e!(5905), e!(6180), e!(2094), e!(8393), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(5905), e!(6180), e!(2087), e!(8396), e!(6912), e!(6914), e!(4233), e!(1880),
    e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(5905), e!(6180), e!(107), e!(181), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(5905), e!(6180), e!(108), e!(182), e!(6912), e!(6914), e!(4233),
    e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(1542), e!(6027), e!(8352), e!(8544), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(5905), e!(6180), e!(3269), e!(3968), e!(6912), e!(6914),
    e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(5905), e!(6180), e!(5107), e!(7436), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(5905), e!(6180), e!(4341), e!(6975), e!(6912),
    e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(482), e!(1545), e!(1553), e!(8432), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(140), e!(3860), e!(234), e!(537), e!(1591), e!(5361), e!(386), e!(7301),
    e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(1594), e!(3556), e!(5562), e!(7365), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(5905), e!(6180), e!(1576),
    e!(1675), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(33), e!(2291), e!(6161), e!(7966), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(139), e!(3860), e!(234), e!(8738), e!(5905), e!(6180),
    e!(1622), e!(8668), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(5905), e!(6180), e!(1577), e!(6677), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(133), e!(3860), e!(234), e!(8736), e!(2028),
    e!(2034), e!(5788), e!(7578), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(5905), e!(6180), e!(5325), e!(5783), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738),
    e!(3557), e!(4001), e!(5307), e!(5308), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(140), e!(3860), e!(234), e!(8738), e!(5905), e!(6180), e!(5318), e!(5784), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(139), e!(3860), e!(234),
    e!(8738), e!(5905), e!(6180), e!(1620), e!(6798), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(139), e!(3860), e!(234), e!(8738), e!(1847), e!(3313), e!(5702), e!(5918), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(140), e!(3860),
    e!(234), e!(8738), e!(5905), e!(6180), e!(5321), e!(5784), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(139), e!(3860), e!(234), e!(8738), e!(5905), e!(6180), e!(5323), e!(5791), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141),
    e!(3860), e!(234), e!(8738), e!(5905), e!(6180), e!(879), e!(8397), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(5905), e!(6180), e!(8394), e!(8398), e!(6912), e!(6914), e!(4233), e!(1880), e!(804),
    e!(141), e!(3860), e!(234), e!(446), e!(1960), e!(6651), e!(2483), e!(5123), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(991), e!(2560), e!(2574), e!(3468), e!(8968), e!(6912), e!(6914), e!(4233), e!(1880),
    e!(804), e!(141), e!(3860), e!(234), e!(2331), e!(630), e!(1056), e!(2873), e!(7332), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(2331), e!(631), e!(1056), e!(2937), e!(7334), e!(6912), e!(6914), e!(4233),
    e!(1880), e!(804), e!(141), e!(3860), e!(348), e!(234), e!(8738), e!(347), e!(2804), e!(2806), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(102), e!(2347), e!(7173), e!(8954), e!(8364), e!(6912), e!(6914),
    e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(1008), e!(8208), e!(8213), e!(8234), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(3014), e!(7185), e!(4705), e!(4504), e!(442), e!(6912),
    e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(2575), e!(3206), e!(3478), e!(6936), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(133), e!(3860), e!(234), e!(3410), e!(4739), e!(4754), e!(4796), e!(5823),
    e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(3470), e!(3437), e!(3434), e!(3461), e!(8866), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(957), e!(3521), e!(7656),
    e!(8278), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(4944), e!(3591), e!(4945), e!(8002), e!(6141), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(102), e!(2347), e!(7173),
    e!(8954), e!(2892), e!(4053), e!(231), e!(230), e!(232), e!(154), e!(368), e!(641), e!(640), e!(1582), e!(3003), e!(3074), e!(5915), e!(8380), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(1008),
    e!(8209), e!(8227), e!(8236), e!(3241), e!(8253), e!(8402), e!(575), e!(9157), e!(9159), e!(2527), e!(7337), e!(7286), e!(3614), e!(7248), e!(9155), e!(9156), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738),
    e!(3204), e!(5429), e!(954), e!(4138), e!(5870), e!(9099), e!(5867), e!(408), e!(1117), e!(3265), e!(3773), e!(4111), e!(4908), e!(6510), e!(7356), e!(8733), e!(8736), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234),
    e!(8738), e!(1008), e!(8210), e!(8228), e!(8237), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(133), e!(3860), e!(234), e!(194), e!(1779), e!(3002), e!(4231), e!(8306), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860),
    e!(234), e!(847), e!(843), e!(3764), e!(3076), e!(8304), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(7307), e!(6053), e!(6054), e!(4528), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141),
    e!(3860), e!(234), e!(102), e!(2347), e!(7173), e!(8954), e!(2893), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(3243), e!(3733), e!(3879), e!(4930), e!(5744), e!(6912), e!(6914), e!(4233), e!(1880), e!(804),
    e!(141), e!(3860), e!(234), e!(8738), e!(3250), e!(3260), e!(4327), e!(5011), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(446), e!(1961), e!(1960), e!(6651), e!(7961), e!(6912), e!(6914), e!(4233), e!(1880),
    e!(804), e!(141), e!(3860), e!(234), e!(102), e!(2347), e!(7173), e!(8954), e!(5235), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(4328), e!(8796), e!(5887), e!(6211), e!(6825), e!(6912), e!(6914), e!(4233),
    e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(5337), e!(5424), e!(7174), e!(8546), e!(8856), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8736), e!(5381), e!(8556), e!(1213), e!(3054), e!(6912), e!(6914),
    e!(4233), e!(1880), e!(804), e!(133), e!(3860), e!(234), e!(8736), e!(4039), e!(5508), e!(5643), e!(5808), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(3425), e!(6391), e!(6410), e!(6422), e!(6912),
    e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(3379), e!(3445), e!(7036), e!(8910), e!(4549), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(6396), e!(6412), e!(6424), e!(7602), e!(8914),
    e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(4460), e!(4679), e!(6855), e!(6856), e!(7253), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(3322), e!(2986), e!(797), e!(444),
    e!(6559), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(3229), e!(3232), e!(3236), e!(3237), e!(8597), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(138), e!(3860), e!(234), e!(4415), e!(4914), e!(4956),
    e!(6683), e!(8934), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(3072), e!(3598), e!(4319), e!(146), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(3072),
    e!(3598), e!(4319), e!(147), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(3072), e!(3598), e!(4319), e!(990), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738),
    e!(3072), e!(3598), e!(4319), e!(149), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(156), e!(5224), e!(7186), e!(7983), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234),
    e!(8738), e!(3551), e!(5818), e!(6144), e!(6680), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(138), e!(3860), e!(234), e!(8738), e!(1245), e!(3125), e!(3554), e!(5186), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(133), e!(3860),
    e!(234), e!(8736), e!(5641), e!(5805), e!(6801), e!(8334), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(567), e!(6915), e!(8905), e!(1072), e!(7132), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141),
    e!(3860), e!(234), e!(1660), e!(3066), e!(3527), e!(6922), e!(8321), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(2664), e!(6500), e!(6645), e!(6775), e!(8309), e!(6912), e!(6914), e!(4233), e!(1880), e!(804),
    e!(141), e!(3860), e!(234), e!(1350), e!(1354), e!(1356), e!(6763), e!(6940), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(104), e!(5708), e!(5820), e!(8273), e!(9033), e!(6912), e!(6914), e!(4233), e!(1880),
    e!(804), e!(133), e!(3860), e!(234), e!(2879), e!(2839), e!(4498), e!(6739), e!(8342), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(3039), e!(8940), e!(3311), e!(5128), e!(6872), e!(6912), e!(6914), e!(4233),
    e!(1880), e!(804), e!(140), e!(3860), e!(234), e!(8738), e!(2831), e!(3893), e!(3909), e!(8490), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(6165), e!(7323), e!(7324), e!(8051), e!(6912), e!(796),
    e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(3769), e!(5748), e!(6777), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(187), e!(6962), e!(6965), e!(6968), e!(6971), e!(6912),
    e!(6914), e!(4233), e!(1880), e!(804), e!(140), e!(3860), e!(234), e!(1022), e!(5102), e!(6643), e!(6644), e!(1062), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(140), e!(3860), e!(234), e!(8738), e!(1795), e!(3086), e!(3092), e!(3095),
    e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(140), e!(3860), e!(234), e!(7172), e!(7257), e!(5295), e!(7176), e!(7258), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(3476), e!(6103), e!(7793), e!(7891),
    e!(8946), e!(6896), e!(818), e!(813), e!(1876), e!(7505), e!(7508), e!(7507), e!(7477), e!(7506), e!(7510), e!(7509), e!(7502), g!(3972), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(2334), e!(7384), e!(7441),
    e!(114), e!(8776), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(102), e!(2347), e!(7173), e!(8954), e!(4772), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8985), e!(933),
    e!(5192), e!(623), e!(7907), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8985), e!(933), e!(5192), e!(6816), e!(7923), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8985),
    e!(933), e!(5192), e!(1055), e!(6065), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(138), e!(3860), e!(234), e!(8985), e!(933), e!(5192), e!(1054), e!(7945), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234),
    e!(8985), e!(933), e!(5192), e!(1054), e!(6066), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8985), e!(3942), e!(7254), e!(6276), e!(6702), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860),
    e!(234), e!(8965), e!(4016), e!(8144), e!(8595), e!(8602), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(3039), e!(8940), e!(3312), e!(5129), e!(6873), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141),
    e!(3860), e!(234), e!(8738), e!(3387), e!(4077), e!(4590), e!(820), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(1104), e!(3673), e!(5684), e!(5687), e!(8697), e!(6912), e!(6914), e!(4233), e!(1880), e!(804),
    e!(141), e!(3860), e!(234), e!(6326), e!(3102), e!(6604), e!(3100), e!(6602), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(3379), e!(3445), e!(7036), e!(8910), e!(4551), e!(6912), e!(6914), e!(4234), e!(5138),
    e!(7193), e!(5137), e!(7190), e!(1721), e!(5914), e!(5913), e!(8588), e!(5670), e!(5668), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(226), e!(4867), e!(8997), e!(874), e!(6912), e!(6914), e!(4233), e!(1880),
    e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(567), e!(6915), e!(3690), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(567), e!(6915), e!(4073), e!(6912), e!(6914), e!(4233), e!(1880), e!(804),
    e!(141), e!(3860), e!(234), e!(8738), e!(567), e!(6915), e!(185), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(138), e!(3860), e!(234), e!(3716), e!(1204), e!(1834), e!(2669), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(138),
    e!(3860), e!(234), e!(567), e!(6915), e!(8738), e!(3285), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(139), e!(3860), e!(234), e!(8738), e!(290), e!(342), e!(8612), e!(296), e!(334), e!(339), e!(392), e!(1071), e!(1154), e!(5117),
    e!(5149), e!(5151), e!(6029), e!(6062), e!(7977), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(7452), e!(8455), e!(3939), e!(8747), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234),
    e!(4328), e!(8796), e!(5901), e!(6177), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(121), e!(7610), e!(6958), e!(8693), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(3817), e!(5614),
    e!(234), e!(8738), e!(563), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(4162), e!(5344), e!(8719), e!(8750), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(567),
    e!(6915), e!(595), e!(579), e!(580), e!(585), e!(597), e!(600), e!(607), e!(610), e!(613), e!(614), e!(633), e!(634), e!(648), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(567), e!(6915), e!(6572),
    e!(8780), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), g!(3961), g!(3963), g!(3962), e!(8788), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(1103), e!(441), e!(1165), e!(6567),
    e!(1031), e!(2830), e!(2837), e!(3854), e!(6807), e!(8966), e!(712), e!(920), e!(4085), e!(4087), e!(6306), e!(6754), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(973), e!(977), e!(5545), e!(8964), e!(6912),
    e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(5769), e!(2928), e!(7417), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(5769), e!(2943), e!(7418), e!(1842), e!(2459),
    e!(3858), e!(1841), e!(5671), e!(409), e!(416), e!(696), e!(3549), e!(3865), e!(4335), e!(4967), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(226), e!(3697), e!(6884), e!(1163), e!(6912), e!(6914), e!(4233),
    e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(419), e!(4694), e!(6889), e!(8263), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(7024), e!(7428), e!(7440), e!(6912), e!(6914), e!(4233), e!(1880),
    e!(804), e!(141), e!(3860), e!(234), e!(1856), e!(3329), e!(3936), e!(6255), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(5903), e!(6179), e!(6859), e!(8809), e!(6912), e!(6914), e!(4233), e!(1880), e!(804),
    e!(138), e!(3860), e!(234), e!(8738), e!(4029), e!(5646), e!(5819), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(4029), e!(5646), e!(5819), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(133),
    e!(3860), e!(234), e!(8736), e!(568), e!(6915), e!(5738), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(1505), e!(5646), e!(5819), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860),
    e!(234), e!(174), e!(179), e!(1468), e!(4490), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(173), e!(177), e!(180), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234),
    e!(8738), e!(567), e!(6915), e!(1567), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(1688), e!(2945), e!(8294), e!(8813), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(4328),
    e!(8796), e!(3785), e!(5291), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(136), e!(3860), e!(234), e!(8738), e!(1556), e!(1945), e!(5148), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(33),
    e!(458), e!(474), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(33), e!(963), e!(1541), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(33), e!(2491),
    e!(2492), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(32), e!(35), e!(1352), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(32), e!(35), e!(1538),
    e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(1781), e!(1784), e!(1785), e!(8819), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(32), e!(35), e!(6264), e!(6912),
    e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(446), e!(1960), e!(6651), e!(3778), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(3268), e!(3738), e!(3742), e!(6912), e!(6914),
    e!(4233), e!(1880), e!(804), e!(133), e!(3860), e!(234), e!(8736), e!(5786), e!(6808), e!(7570), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(3365), e!(3966), e!(3970), e!(6912), e!(6914), e!(4233),
    e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(33), e!(1614), e!(5991), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(32), e!(35), e!(4391), e!(6912), e!(6914), e!(4233), e!(1880),
    e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(33), e!(1613), e!(5993), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(33), e!(4564), e!(5992), e!(6912), e!(6914), e!(4233), e!(1880), e!(804),
    e!(141), e!(3860), e!(234), e!(8738), e!(33), e!(1614), e!(5997), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(33), e!(6152), e!(7962), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141),
    e!(3860), e!(234), e!(8738), e!(33), e!(5560), e!(6153), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(33), e!(4564), e!(6155), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860),
    e!(234), e!(8738), e!(33), e!(3227), e!(6162), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(33), e!(4564), e!(6171), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234),
    e!(8738), e!(33), e!(3730), e!(6172), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(33), e!(6374), e!(6376), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738),
    e!(32), e!(35), e!(6893), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(133), e!(3860), e!(234), e!(8736), e!(2033), e!(4323), e!(5787), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(33),
    e!(2257), e!(6864), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(32), e!(35), e!(6496), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(139), e!(3860), e!(234), e!(8738), e!(4611), e!(1211),
    e!(9041), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(446), e!(1960), e!(6651), e!(3779), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(3559), e!(6154), e!(6265),
    e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(133), e!(3860), e!(234), e!(8736), e!(5786), e!(6794), e!(7577), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(33), e!(1614), e!(9140), e!(6912),
    e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(33), e!(4564), e!(9141), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(305), e!(315), e!(1346), e!(8825), e!(6912), e!(6914),
    e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(1272), e!(1277), e!(2397), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(1008), e!(2420), e!(8222), e!(6912), e!(6914), e!(4233),
    e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(226), e!(3697), e!(1533), e!(7688), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(567), e!(6915), e!(4825), e!(6912), e!(6914), e!(4233), e!(1880),
    e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(567), e!(6915), e!(1932), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(2703), e!(2706), e!(2709), e!(8844), e!(5302), e!(9024), e!(4142), e!(1793), e!(4061),
    e!(3194), e!(3049), e!(5119), e!(8249), e!(7284), e!(525), g!(3966), e!(518), e!(5548), e!(5862), e!(5869), e!(5861), e!(5866), e!(7147), e!(1389), e!(1402), e!(1404), e!(4265), e!(8736), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141),
    e!(3860), e!(234), e!(3036), e!(3316), e!(5130), e!(6877), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(567), e!(6915), e!(3801), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860),
    e!(234), e!(404), e!(1107), e!(5693), e!(7531), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(3010), e!(3699), e!(6706), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(138), e!(3860), e!(234),
    e!(8738), e!(3256), e!(5795), e!(5953), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(138), e!(3860), e!(234), e!(8738), e!(2100), e!(3283), e!(5483), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(138), e!(3860), e!(234), e!(8738),
    e!(5752), e!(7090), e!(7092), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(3423), e!(4342), e!(6977), e!(8860), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(7346), e!(6035),
    e!(6038), e!(7355), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(3503), e!(3514), e!(3520), e!(8903), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(139), e!(3860), e!(234), e!(8738), e!(3588), e!(5328),
    e!(5801), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(138), e!(3860), e!(234), e!(8738), e!(3589), e!(5797), e!(5954), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(138), e!(3860), e!(234), e!(8738), e!(3589), e!(5796), e!(5954),
    e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(139), e!(3860), e!(234), e!(50), e!(678), e!(8871), e!(4580), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(139), e!(3860), e!(234), e!(953), e!(8870), e!(4114), e!(6576), e!(6912),
    e!(6914), e!(4233), e!(1880), e!(804), e!(139), e!(3860), e!(234), e!(8738), e!(567), e!(6915), e!(3694), e!(518), e!(5547), e!(5861), e!(5866), e!(7147), e!(688), e!(747), e!(776), e!(4940), e!(6149), e!(8646), e!(8736), e!(6912), e!(6914),
    e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(567), e!(6915), e!(4043), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(567), e!(6915), e!(4072), e!(6912), e!(6914), e!(4233),
    e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(6302), e!(6459), e!(7684), e!(8883), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(3204), e!(5429), e!(7326), e!(6912), e!(6914), e!(4233), e!(1880),
    e!(804), e!(141), e!(3860), e!(234), e!(567), e!(6915), e!(8905), e!(4791), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(139), e!(3860), e!(234), e!(8738), e!(4938), e!(5327), e!(5800), e!(6912), e!(6914), e!(4233), e!(1880), e!(804),
    e!(141), e!(3860), e!(234), e!(8738), e!(4992), e!(4991), e!(5015), e!(1070), e!(1588), e!(1717), e!(3373), e!(4954), e!(6717), e!(6718), e!(8310), e!(8318), e!(8648), e!(1602), e!(3749), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141),
    e!(3860), e!(234), e!(446), e!(1960), e!(6651), e!(1850), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(102), e!(2345), e!(7173), e!(8954), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860),
    e!(234), e!(8738), e!(5458), e!(5723), e!(5753), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(6309), e!(39), e!(7449), e!(8929), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234),
    e!(7452), e!(8454), e!(3752), e!(8762), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(2820), e!(3472), e!(3474), e!(8740), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(1036), e!(234),
    e!(8738), e!(1034), e!(3496), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(2368), e!(4196), e!(5487), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(133), e!(3860), e!(234), e!(8736), e!(5494),
    e!(5644), e!(5826), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(133), e!(3860), e!(234), e!(8736), e!(5495), e!(5644), e!(5807), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(5644), e!(5819),
    e!(3060), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(5644), e!(5819), e!(4040), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(133), e!(3860), e!(234), e!(2981), e!(3005), e!(6452), e!(8399),
    e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(567), e!(6915), e!(5628), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(3709), e!(5694), e!(7532), e!(6912),
    e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(1942), e!(2934), e!(2941), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(5817), e!(6032), e!(6037), e!(6912), e!(6914),
    e!(4233), e!(1880), e!(804), e!(133), e!(3860), e!(234), e!(8736), e!(5815), e!(6033), e!(6043), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(133), e!(3860), e!(234), e!(4242), e!(6238), e!(8521), e!(8569), e!(6912), e!(6914), e!(4233),
    e!(1880), e!(804), e!(133), e!(3860), e!(234), e!(2676), e!(2718), e!(6262), e!(7678), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(709), e!(3124), e!(7035), e!(8962), e!(6912), e!(6914), e!(4233), e!(1880),
    e!(804), e!(141), e!(3860), e!(234), e!(4513), e!(6385), e!(6399), e!(8919), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(133), e!(3860), e!(234), e!(2982), e!(3006), e!(6453), e!(8400), e!(6912), e!(6914), e!(4233), e!(1880), e!(804),
    e!(141), e!(3860), e!(234), e!(4244), e!(8571), e!(8573), e!(1897), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(226), e!(3697), e!(6884), e!(6556), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141),
    e!(3860), e!(234), e!(8965), e!(465), e!(1517), e!(1522), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(2894), e!(3553), e!(6659), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860),
    e!(234), e!(713), e!(4620), e!(6307), e!(6928), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(1673), e!(4957), e!(7086), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(133), e!(3860), e!(234),
    e!(3038), e!(3310), e!(5127), e!(6871), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(1008), e!(8214), e!(8229), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(226),
    e!(3697), e!(1534), e!(2451), e!(6912), e!(4233), e!(7328), e!(7192), e!(6914), e!(4234), e!(7327), e!(7189), e!(1722), e!(8587), e!(5669), e!(5668), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(6437),
    e!(6439), e!(7585), e!(6897), e!(818), e!(814), e!(1877), e!(513), e!(7515), e!(7520), e!(7518), e!(7519), e!(7517), e!(7479), e!(7516), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(5904), e!(6182), e!(8119),
    e!(8980), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(137), e!(3860), e!(234), e!(8985), e!(933), e!(5192), e!(5662), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(140), e!(3860), e!(234), e!(5568), e!(8982), e!(43), e!(44),
    e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(1557), e!(5480), e!(7992), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(140), e!(3860), e!(234), e!(42), e!(4246), e!(8576), e!(8983), e!(155),
    e!(359), e!(672), e!(1100), e!(2956), e!(2958), e!(4068), e!(5212), e!(5466), e!(7155), e!(7635), e!(7636), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(7366), e!(8738), e!(4015), e!(8143), e!(6912), e!(6914),
    e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(567), e!(6915), e!(8905), e!(8370), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(2880), e!(8378), e!(8939), e!(2864), e!(6912), e!(6914), e!(4233),
    e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(6309), e!(40), e!(6524), e!(8924), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(567), e!(6915), e!(8905), e!(1642), e!(6912), e!(6914), e!(4233), e!(1880),
    e!(804), e!(141), e!(3860), e!(234), e!(7452), e!(8454), e!(3753), e!(8746), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(6504), e!(6502), e!(8466), e!(9072), e!(6912), e!(6914), e!(4233), e!(1880), e!(804),
    e!(133), e!(3860), e!(234), e!(8736), e!(2938), e!(9042), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(140), e!(3860), e!(234), e!(8738), e!(3083), e!(5958), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234),
    e!(8738), e!(3392), e!(4889), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(2747), e!(2750), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(4890), e!(8689),
    e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(138), e!(3860), e!(234), e!(3716), e!(1833), e!(8706), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(138), e!(3860), e!(234), e!(3716), e!(1833), e!(8707), e!(6912), e!(6914), e!(4233),
    e!(1880), e!(804), e!(138), e!(3860), e!(234), e!(8738), e!(1203), e!(1835), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(138), e!(3860), e!(234), e!(3716), e!(1833), e!(8704), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(138),
    e!(3860), e!(234), e!(3716), e!(1833), e!(8682), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(138), e!(3860), e!(234), e!(3716), e!(1833), e!(8692), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(138), e!(3860), e!(234), e!(3716),
    e!(1833), e!(8703), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(138), e!(3860), e!(234), e!(3716), e!(1833), e!(8708), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(138), e!(3860), e!(234), e!(3716), e!(1833), e!(8702), e!(6912),
    e!(6914), e!(4233), e!(1880), e!(804), e!(138), e!(3860), e!(234), e!(8738), e!(1884), e!(3286), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(284), e!(2583), e!(5197), e!(6912), e!(6914), e!(4233), e!(1880),
    e!(804), e!(141), e!(3860), e!(234), e!(325), e!(2573), e!(8963), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(395), e!(1504), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860),
    e!(234), e!(6309), e!(431), e!(8923), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(493), e!(3938), e!(6959), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(668), e!(5154),
    e!(8900), e!(518), e!(5548), e!(5862), e!(5869), e!(5861), e!(5866), e!(7147), e!(688), e!(747), e!(776), e!(8736), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8197), e!(8200), e!(8783), e!(6912), e!(6914),
    e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(827), e!(828), e!(8784), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(894), e!(921), e!(8789), e!(6912), e!(6914), e!(4233), e!(1880), e!(804),
    e!(138), e!(3860), e!(234), e!(3361), e!(4159), e!(6102), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(1455), e!(1511), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234),
    e!(8738), e!(1887), e!(6789), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(5773), e!(6222), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(1515), e!(4027),
    e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(1889), e!(6789), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(5773), e!(5898), e!(6912), e!(6914), e!(4233),
    e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(1478), e!(6776), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(1180), e!(5897), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(139),
    e!(3860), e!(234), e!(1000), e!(1002), e!(8266), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(139), e!(3860), e!(234), e!(3582), e!(4236), e!(8560), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738),
    e!(2580), e!(6261), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(321), e!(6257), e!(8808), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(139), e!(3860), e!(234), e!(326), e!(7026), e!(8973), e!(6912),
    e!(6914), e!(4233), e!(1880), e!(804), e!(138), e!(3860), e!(234), e!(8738), e!(1486), e!(5650), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(138), e!(3860), e!(234), e!(8738), e!(1489), e!(5768), e!(6912), e!(6914), e!(4233), e!(1880),
    e!(804), e!(133), e!(3860), e!(234), e!(8736), e!(1493), e!(5651), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(133), e!(3860), e!(234), e!(175), e!(178), e!(4084), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860),
    e!(234), e!(1652), e!(3687), e!(8799), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(1692), e!(8292), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(139), e!(3860), e!(234), e!(8738), e!(1737),
    e!(1758), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(139), e!(3860), e!(234), e!(1755), e!(1772), e!(2472), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(133), e!(3860), e!(234), e!(4618), e!(1761), e!(8348), e!(6912), e!(6914),
    e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(3358), e!(3580), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(398), e!(8590), e!(8876), e!(6912), e!(6914), e!(4233), e!(1880), e!(804),
    e!(135), e!(3860), e!(234), e!(8738), e!(1946), e!(7988), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8001), e!(8014), e!(8028), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234),
    e!(8738), e!(162), e!(7982), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(540), e!(3928), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(33), e!(883),
    e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(33), e!(890), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(33), e!(1537), e!(6912), e!(6914), e!(4233),
    e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(33), e!(1686), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(3193), e!(4768), e!(6912), e!(4233), e!(1879), e!(810), e!(133), e!(3860),
    e!(628), e!(1958), e!(1955), e!(1956), e!(1957), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(3401), e!(8431), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738),
    e!(1593), e!(3555), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(2870), e!(5977), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(5105), e!(7154), e!(6912),
    e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(5106), e!(7153), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(33), e!(5994), e!(6912), e!(6914), e!(4233), e!(1880),
    e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(33), e!(6157), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(33), e!(6156), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860),
    e!(234), e!(8738), e!(33), e!(6158), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(30), e!(6183), e!(6277), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(139), e!(3860), e!(234), e!(8738), e!(4611),
    e!(667), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(30), e!(6184), e!(6277), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(33), e!(8269), e!(6912), e!(6914),
    e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(2498), e!(3366), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(2359), e!(5803), e!(6912), e!(6914), e!(4233), e!(1880), e!(804),
    e!(141), e!(3860), e!(234), e!(8738), e!(340), e!(2546), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(133), e!(3860), e!(234), e!(8736), e!(2395), e!(2716), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(133), e!(3860), e!(234),
    e!(8736), e!(2377), e!(5771), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(133), e!(3860), e!(234), e!(8736), e!(2380), e!(5794), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(1636), e!(1638), e!(6378),
    e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(1637), e!(1639), e!(6378), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(1347), e!(2462), e!(6912), e!(6914), e!(4233),
    e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(988), e!(8301), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(2543), e!(2646), e!(817), e!(812), e!(1625), e!(1610), e!(1635), e!(4389),
    e!(1436), e!(1373), e!(4423), e!(7620), e!(1611), e!(6912), e!(4233), e!(1879), e!(810), e!(133), e!(3860), e!(2702), e!(1644), e!(3502), e!(3507), e!(8842), e!(6912), e!(4233), e!(1879), e!(810), e!(133), e!(3860), e!(2702), e!(6008), e!(6719),
    e!(6906), e!(8843), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(3904), e!(3921), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(3540), e!(3541), e!(6912),
    e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(7886), e!(8499), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(1008), e!(8223), e!(9099), e!(778), e!(1407), e!(4256),
    e!(4273), e!(4496), e!(4507), e!(4509), e!(6974), e!(6976), e!(8736), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(1893), e!(2794), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(133), e!(3860),
    e!(234), e!(8736), e!(2939), e!(9042), e!(296), e!(334), e!(339), e!(392), e!(1071), e!(1154), e!(5149), e!(5151), e!(6029), e!(6062), e!(7977), e!(1070), e!(1588), e!(1717), e!(3373), e!(4954), e!(6717), e!(6718), e!(8310), e!(8318), e!(8648),
    e!(3748), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(134), e!(3860), e!(234), e!(1579), e!(4613), e!(8375), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(140), e!(3860), e!(234), e!(1580), e!(4614), e!(8376), e!(6912), e!(6914),
    e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(1137), e!(8202), e!(8850), e!(3568), e!(498), e!(2333), e!(4855), e!(6014), e!(6311), e!(6492), e!(8217), e!(8329), e!(8426), e!(8852), e!(6912), e!(6914), e!(4233), e!(1880), e!(804),
    e!(141), e!(3860), e!(234), e!(1138), e!(8204), e!(8855), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(1823), e!(4355), e!(4642), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234),
    e!(8738), e!(3015), e!(6364), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(139), e!(3860), e!(234), e!(8738), e!(4820), e!(6678), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(133), e!(3860), e!(234), e!(2972), e!(4176), e!(5824),
    e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(3432), e!(3946), e!(8530), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(3362), e!(4159), e!(6102), e!(6912), e!(6914), e!(4233),
    e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(5975), e!(8265), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(139), e!(3860), e!(234), e!(8738), e!(1008), e!(8226), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(133),
    e!(3860), e!(234), e!(8736), e!(207), e!(3667), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(133), e!(3860), e!(234), e!(8736), e!(3672), e!(4891), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(6309),
    e!(7485), e!(8926), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(3267), e!(7438), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(1134), e!(8205), e!(8881), e!(1117),
    e!(3266), e!(3564), e!(3772), e!(4110), e!(4111), e!(4121), e!(4128), e!(5868), e!(7357), e!(8734), e!(6912), e!(4213), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(122), e!(8944), e!(6912), e!(6914), e!(4233), e!(1880),
    e!(804), e!(133), e!(3860), e!(234), e!(3405), e!(4222), e!(4227), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(140), e!(3860), e!(234), e!(8738), e!(4191), e!(5959), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(138), e!(3860),
    e!(234), e!(4261), e!(9088), e!(8805), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(140), e!(3860), e!(234), e!(8738), e!(693), e!(695), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(140), e!(3860), e!(234), e!(870), e!(1449),
    e!(6505), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(140), e!(3860), e!(234), e!(8738), e!(2779), e!(4733), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(7400), e!(8456), e!(8772), e!(6912), e!(6914),
    e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(6309), e!(4771), e!(8928), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(139), e!(3860), e!(234), e!(8738), e!(5041), e!(7226), e!(6912), e!(6914), e!(4233), e!(1880), e!(804),
    e!(141), e!(3860), e!(234), e!(5284), e!(6250), e!(7370), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(7452), e!(8454), e!(8558), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(133), e!(3860), e!(234),
    e!(8736), e!(2381), e!(5486), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8558), e!(1213), e!(3056), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(133), e!(3860), e!(234), e!(1212), e!(3055), e!(8557),
    e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8556), e!(3757), e!(8700), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(4285), e!(5525), e!(6912), e!(6914), e!(4233),
    e!(1880), e!(804), e!(133), e!(3860), e!(234), e!(3406), e!(4223), e!(4228), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(3784), e!(5292), e!(8949), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141),
    e!(3860), e!(234), e!(8738), e!(1707), e!(5630), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(4277), e!(5772), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738),
    e!(5888), e!(5893), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(4597), e!(5983), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(5773), e!(5985), e!(6912),
    e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(6039), e!(8738), e!(6040), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(6216), e!(6220), e!(6912), e!(6914), e!(4233), e!(1880),
    e!(804), e!(133), e!(3860), e!(234), e!(568), e!(6915), e!(373), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(6779), e!(7601), e!(8920), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860),
    e!(234), e!(5202), e!(5288), e!(6430), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(5196), e!(5288), e!(6433), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(6465), e!(6467),
    e!(8800), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(462), e!(3231), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(138), e!(3860), e!(234), e!(8738), e!(1246), e!(9037), e!(6912), e!(6914),
    e!(4233), e!(1880), e!(804), e!(138), e!(3860), e!(234), e!(8738), e!(1345), e!(7786), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(6142), e!(6670), e!(2454), e!(1031), e!(2830), e!(2837), e!(3854),
    e!(6807), e!(8966), e!(1572), e!(6729), e!(6944), e!(7668), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(5858), e!(9046), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234),
    e!(8738), e!(7102), e!(7721), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(7105), e!(7725), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(133), e!(3860), e!(234), e!(8736), e!(2662), e!(3822),
    e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(7122), e!(7734), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(7134), e!(7783), e!(6912), e!(6914), e!(4233),
    e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(2655), e!(3065), e!(8320), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(139), e!(3860), e!(234), e!(8738), e!(74), e!(5040), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141),
    e!(3860), e!(234), e!(673), e!(6495), e!(6741), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(140), e!(3860), e!(234), e!(73), e!(5124), e!(6185), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(140), e!(3860), e!(234), e!(5639),
    e!(5956), e!(6874), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(844), e!(5523), e!(5822), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(106), e!(2974), e!(4740), e!(6912),
    e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(7474), e!(7480), e!(6912), e!(4233), e!(1879), e!(810), e!(133), e!(3860), g!(3960), e!(510), e!(4543), e!(699), e!(4910), e!(6912), e!(6914), e!(4233), e!(1880),
    e!(804), e!(141), e!(3860), e!(234), e!(324), e!(7437), e!(8810), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(1052), e!(1059), e!(8975), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(139), e!(3860),
    e!(234), e!(1641), e!(3635), e!(3885), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(2513), e!(5556), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(7674),
    e!(8299), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(139), e!(3860), e!(234), e!(7016), e!(7657), e!(8977), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(139), e!(3860), e!(234), e!(7016), e!(7671), e!(8978), e!(6912), e!(6914),
    e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(7904), e!(7905), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(6258), e!(8119), e!(8979), e!(6912), e!(6914), e!(4233), e!(1880), e!(804),
    e!(141), e!(3860), e!(234), e!(8107), e!(8131), e!(8141), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8255), g!(3974), e!(8834), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234),
    e!(3550), e!(8845), e!(5678), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(133), e!(3860), e!(234), e!(3794), e!(3795), e!(6846), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(7486), e!(8372), e!(8773),
    e!(9099), e!(736), e!(287), e!(2971), e!(2992), e!(3775), e!(4339), e!(8026), e!(8053), e!(8422), e!(8736), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(134), e!(3860), e!(234), e!(3576), e!(4439), e!(8469), e!(6912), e!(6914), e!(4233),
    e!(1880), e!(804), e!(140), e!(3860), e!(234), e!(8738), e!(7998), e!(8468), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(8069), e!(234), e!(8064), e!(8385), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(133),
    e!(3860), e!(234), e!(94), e!(83), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(133), e!(3860), e!(234), e!(77), e!(81), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(140), e!(3860), e!(234), e!(7197), e!(7199), e!(6912),
    e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(6764), e!(8742), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(5751), e!(8215), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141),
    e!(3860), e!(234), e!(8738), e!(245), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(133), e!(3860), e!(234), e!(87), e!(5782), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(2746), e!(2749), e!(6912),
    e!(6914), e!(4233), e!(1880), e!(804), e!(133), e!(3860), e!(234), e!(4224), e!(6454), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(858), e!(8584), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(140),
    e!(3860), e!(234), e!(6146), e!(8578), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(5226), e!(8987), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8725), e!(8989), e!(6912),
    e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(7487), e!(8757), e!(6908), e!(815), e!(6316), e!(2468), e!(3061), e!(3809), e!(5367), e!(5368), e!(6911), e!(3062), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141),
    e!(3860), e!(234), e!(8738), e!(710), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(730), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8836), e!(734), e!(4444),
    e!(4455), e!(4468), e!(4473), e!(4663), e!(4677), e!(4681), e!(4683), e!(5340), e!(8421), e!(2754), e!(5851), e!(5919), e!(5920), e!(5921), e!(7157), e!(7628), e!(8031), e!(8033), e!(8351), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141),
    e!(3860), e!(234), e!(7128), e!(7764), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(900), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(399), e!(717), e!(1),
    e!(6901), e!(7605), e!(1875), e!(4337), e!(4241), e!(8565), e!(1086), g!(3965), e!(8798), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(1147), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141),
    e!(3860), e!(234), e!(8738), e!(8711), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(4331), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(138), e!(3860), e!(234), e!(2801), e!(2802), e!(6912),
    e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(5664), e!(5720), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(3581), e!(5718), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(133),
    e!(3860), e!(234), e!(8736), e!(5735), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(4886), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(133), e!(3860), e!(234), e!(1470), e!(5734), e!(6912),
    e!(6914), e!(4233), e!(1880), e!(804), e!(138), e!(3860), e!(234), e!(8738), e!(4031), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(133), e!(3860), e!(234), e!(1466), e!(1494), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141),
    e!(3860), e!(234), e!(1502), e!(4035), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(5932), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(6949), e!(6912),
    e!(6914), e!(4233), e!(1880), e!(804), e!(139), e!(3860), e!(234), e!(1754), e!(8194), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(4361), e!(4648), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(133),
    e!(3860), e!(234), e!(6138), e!(6169), e!(281), e!(3422), e!(3793), e!(4294), e!(4720), e!(5843), e!(5998), e!(7321), e!(9015), e!(9144), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(135), e!(3860), e!(234), e!(4454), e!(9028), e!(6912),
    e!(6914), e!(4233), e!(1880), e!(804), e!(139), e!(3860), e!(234), e!(2808), e!(3245), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(3746), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141),
    e!(3860), e!(234), e!(8738), e!(882), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(1621), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(2684), e!(6912),
    e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(3368), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(2884), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141),
    e!(3860), e!(234), e!(2826), e!(2867), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(3969), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(5052), e!(6912),
    e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(7149), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(4343), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141),
    e!(3860), e!(234), e!(8738), e!(5174), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(5561), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(134), e!(3860), e!(234), e!(8736), e!(2495), e!(6912),
    e!(6914), e!(4233), e!(1880), e!(804), e!(138), e!(3860), e!(234), e!(8738), e!(4611), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(7260), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141),
    e!(3860), e!(234), e!(8738), e!(2398), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(122), e!(2419), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(2539), e!(6912),
    e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(2592), e!(5280), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(2632), e!(8667), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141),
    e!(3860), e!(234), e!(8738), e!(2710), e!(1525), e!(1671), e!(3569), e!(8297), e!(1626), e!(1630), e!(4383), e!(4651), e!(7108), e!(8736), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(2734), e!(6912),
    e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(2780), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8836), e!(2784), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141),
    e!(3860), e!(234), e!(8738), e!(2800), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(1578), e!(2875), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(3133), e!(6912),
    e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8836), e!(3137), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(4876), e!(8851), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141),
    e!(3860), e!(234), e!(8738), e!(4332), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(3016), e!(6298), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(3263), e!(6912),
    e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(5436), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(138), e!(3860), e!(234), e!(4216), e!(8220), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141),
    e!(3860), e!(234), e!(8738), e!(3430), e!(6912), e!(4233), e!(1879), e!(810), e!(133), e!(3860), e!(3482), e!(3484), e!(3531), e!(8736), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(2983), e!(6912),
    e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(2674), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(4402), e!(8019), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141),
    e!(3860), e!(234), e!(4378), e!(8020), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(139), e!(3860), e!(234), e!(567), e!(6915), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(133), e!(3860), e!(234), e!(8736), e!(3821), e!(6912),
    e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(3843), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(455), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141),
    e!(3860), e!(234), e!(8738), e!(4166), e!(1880), e!(803), e!(3860), e!(132), e!(125), e!(127), e!(1799), e!(1802), e!(2405), e!(4951), e!(1880), e!(803), e!(3860), e!(132), e!(126), e!(128), e!(1800), e!(1802), e!(2407), e!(4953), e!(6912),
    e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(3973), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(5372), e!(8960), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141),
    e!(3860), e!(234), e!(5), e!(878), e!(575), e!(3240), e!(8253), e!(8402), e!(9157), e!(9159), e!(2525), e!(7335), e!(7287), e!(3614), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(4106), e!(6912),
    e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8836), e!(4117), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8836), e!(4129), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141),
    e!(3860), e!(234), e!(8738), e!(2399), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(924), e!(4616), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8687), e!(8890), e!(6912),
    e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(3106), e!(6608), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(4753), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141),
    e!(3860), e!(234), e!(2725), e!(2964), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(4928), e!(4939), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(5802), e!(7757), e!(6912),
    e!(6914), e!(4233), e!(1880), e!(804), e!(133), e!(3860), e!(234), e!(95), e!(84), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(133), e!(3860), e!(234), e!(78), e!(82), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(133),
    e!(3860), e!(234), e!(4225), e!(6455), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(845), e!(848), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(7243), e!(8392), e!(6912),
    e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(5553), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(1090), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141),
    e!(3860), e!(234), e!(8738), e!(5695), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(133), e!(3860), e!(234), e!(8736), e!(5776), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(2954), e!(6912),
    e!(6914), e!(4233), e!(1880), e!(804), e!(133), e!(3860), e!(234), e!(90), e!(5811), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(5832), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141),
    e!(3860), e!(234), e!(4019), e!(4020), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(133), e!(3860), e!(234), e!(714), e!(4623), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(1431), e!(4546), e!(6912),
    e!(6914), e!(4233), e!(1880), e!(804), e!(133), e!(3860), e!(234), e!(2719), e!(5855), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(133), e!(3860), e!(234), e!(5190), e!(6333), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(133),
    e!(3860), e!(234), e!(2737), e!(3192), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(336), e!(337), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(6557), e!(6912),
    e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(3998), e!(6594), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(133), e!(3860), e!(234), e!(8736), e!(6635), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141),
    e!(3860), e!(234), e!(447), e!(452), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(1269), e!(4699), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(549), e!(551), e!(6912),
    e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(3849), e!(7984), e!(2454), e!(1031), e!(2830), e!(2837), e!(3854), e!(6807), e!(8966), e!(1571), e!(6933), e!(8445), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141),
    e!(3860), e!(234), e!(8738), e!(6820), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(133), e!(3860), e!(234), e!(8736), e!(6819), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(133), e!(3860), e!(234), e!(7127), e!(7759), e!(6912),
    e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(6844), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(133), e!(3860), e!(234), e!(2879), e!(2817), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(133),
    e!(3860), e!(234), e!(3038), e!(3024), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(140), e!(3860), e!(234), e!(1654), e!(3528), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(3529), e!(8379), e!(6912),
    e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(6943), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(2819), e!(6912), e!(6914), e!(671), e!(2327), e!(3163), e!(5383),
    e!(5443), e!(6759), e!(8474), e!(8943), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(3475), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(2822), e!(2885), e!(6912),
    e!(6914), e!(4233), e!(1880), e!(804), e!(134), e!(3860), e!(234), e!(8736), e!(7182), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(140), e!(3860), e!(234), e!(75), e!(152), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(140),
    e!(3860), e!(234), e!(7225), e!(6457), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(140), e!(3860), e!(234), e!(7225), e!(6458), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(140), e!(3860), e!(234), e!(5121), e!(7202), e!(4409),
    e!(4828), e!(3791), e!(7546), e!(1091), e!(8533), e!(7495), e!(7498), e!(1564), e!(7388), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8457), e!(8795), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141),
    e!(3860), e!(234), e!(8738), e!(7504), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(7450), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(7533), e!(6912),
    e!(6914), e!(4233), e!(1880), e!(804), e!(139), e!(3860), e!(234), e!(2649), e!(4815), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(133), e!(3860), e!(234), e!(4964), e!(8036), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141),
    e!(3860), e!(234), e!(4965), e!(8036), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(7873), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8112), e!(8984), e!(6912),
    e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(4782), e!(8988), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(8147), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141),
    e!(3860), e!(234), e!(5912), e!(8154), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(3998), e!(8156), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(8174), e!(6912),
    e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), g!(3973), e!(8991), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8196), e!(8848), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141),
    e!(3860), e!(234), e!(8255), e!(7681), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(8290), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(133), e!(3860), e!(234), e!(8736), e!(4334), e!(6912),
    e!(6914), e!(4233), e!(1880), e!(804), e!(133), e!(3860), e!(234), e!(8736), e!(8289), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(133), e!(3860), e!(234), e!(8736), e!(3799), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141),
    e!(3860), e!(234), e!(8738), e!(8408), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8836), e!(8412), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(3575), e!(8464), e!(6912),
    e!(6914), e!(4233), e!(1880), e!(804), e!(140), e!(3860), e!(234), e!(4495), e!(6304), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(7042), e!(8467), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141),
    e!(3860), e!(234), e!(8738), e!(8537), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(8622), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8836), e!(8626), e!(6912),
    e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8738), e!(9070), e!(3043), e!(4806), e!(5116), e!(5165), e!(5356), e!(5513), e!(5478), e!(5936), e!(6757), e!(892), e!(1508), e!(4805), e!(5115), e!(5167), e!(5360), e!(5479),
    e!(5500), e!(5935), e!(255), e!(262), e!(266), e!(268), e!(271), e!(273), e!(275), e!(277), e!(279), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(133), e!(3860), e!(234), e!(6176), e!(6912), e!(6914), e!(4233), e!(1880), e!(804),
    e!(139), e!(3860), e!(234), e!(344), e!(1842), e!(2459), e!(3858), e!(1841), e!(5671), e!(409), e!(416), e!(415), e!(4573), e!(1842), e!(2459), e!(3858), e!(1841), e!(5671), e!(409), e!(416), e!(3208), e!(7171), e!(6912), e!(6914), e!(4233),
    e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(3961), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(4379), e!(949), e!(1192), e!(3396), e!(3397), e!(5198), e!(5743), e!(8060), e!(8354), e!(8548), e!(1403),
    e!(1813), e!(2790), e!(2796), e!(3212), e!(3355), e!(4064), e!(5976), e!(9090), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(3943), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(139), e!(3860), e!(234),
    e!(5373), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(140), e!(3860), e!(234), e!(7302), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(139), e!(3860), e!(234), e!(34), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141),
    e!(3860), e!(234), e!(2444), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(138), e!(3860), e!(234), e!(4218), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(2442), e!(1911), e!(1912), e!(3864), e!(5397),
    e!(5401), e!(5864), e!(7121), e!(7123), e!(8508), e!(6313), e!(6314), e!(6315), e!(7194), e!(3957), e!(7188), e!(3955), e!(1724), e!(4816), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(2919), e!(6912), e!(6914),
    e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(1934), e!(2586), e!(2588), e!(2600), e!(2601), e!(2603), e!(2609), e!(2610), e!(2617), e!(2636), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(2625),
    e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8260), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8878), e!(3568), e!(1127), e!(2332), e!(3156), e!(4854), e!(6310), e!(7129),
    e!(7771), e!(8327), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(3180), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(3168), e!(6912), e!(6914), e!(4233), e!(1880), e!(804),
    e!(141), e!(3860), e!(234), e!(6297), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(133), e!(3860), e!(234), e!(6174), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(1359), e!(6912), e!(6914), e!(4233),
    e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(5761), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(5806), e!(6910), e!(819), e!(6908), e!(815), e!(6316), e!(2469), e!(3302), e!(5118), e!(2468), e!(6912),
    e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(216), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8603), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234),
    e!(8430), e!(420), e!(1810), e!(2406), e!(2681), e!(3420), e!(3873), e!(3874), e!(3907), e!(3913), e!(1903), e!(1914), e!(3162), e!(3421), e!(3539), e!(4969), e!(7113), e!(7125), e!(8262), e!(358), e!(2548), e!(3244), e!(3273), e!(3577), e!(3728),
    e!(4306), e!(9008), e!(9009), e!(5870), e!(7987), e!(7990), e!(9099), e!(5867), e!(4130), e!(7986), e!(7989), e!(8736), e!(311), e!(405), e!(406), e!(407), e!(1106), e!(1568), e!(3222), e!(6511), e!(8509), e!(6912), e!(6914), e!(4233), e!(1880),
    e!(804), e!(141), e!(3860), e!(234), e!(4257), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(133), e!(3860), e!(234), e!(6175), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(140), e!(3860), e!(234), e!(4548), e!(6912), e!(6914),
    e!(4233), e!(1880), e!(804), e!(140), e!(3860), e!(234), e!(851), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(133), e!(3860), e!(234), e!(88), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(133), e!(3860), e!(234), e!(89),
    e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(5987), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(133), e!(3860), e!(234), e!(3578), e!(4244), e!(8571), e!(8573), e!(4356), e!(4417), e!(4643), e!(4657),
    e!(5386), e!(440), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(1363), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(1362), e!(4053), e!(231), e!(230), e!(232), e!(1098),
    e!(1584), e!(4102), e!(5833), e!(6919), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(133), e!(3860), e!(234), e!(2654), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(338), e!(6912), e!(6914), e!(4233),
    e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(6435), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(6436), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(6592), e!(6912),
    e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(6595), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(9029), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234),
    e!(4869), e!(1031), e!(2830), e!(2837), e!(3854), e!(6807), e!(8966), e!(1570), e!(7672), e!(8444), e!(5255), e!(5258), e!(5261), e!(5263), e!(5254), e!(5257), e!(5260), e!(5262), e!(8736), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(139),
    e!(3860), e!(234), e!(5085), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(139), e!(3860), e!(234), e!(6983), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(7224), e!(6912), e!(6914), e!(4233), e!(1880),
    e!(804), e!(141), e!(3860), e!(234), e!(1565), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(139), e!(3860), e!(234), e!(4497), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(139), e!(3860), e!(234), e!(3831), e!(6912), e!(6914),
    e!(4233), e!(1880), e!(804), e!(133), e!(3860), e!(234), e!(4966), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(4963), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(134), e!(3860), e!(234), e!(4548),
    e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(223), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860), e!(234), e!(8003), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(141), e!(3860),
    e!(234), e!(7863), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(133), e!(3860), e!(234), e!(8157), e!(1842), e!(2459), e!(3858), e!(1841), e!(5671), e!(409), e!(416), e!(4573), e!(8510), e!(6912), e!(6914), e!(4233), e!(1880), e!(804),
    e!(141), e!(3860), e!(234), e!(9076), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(133), e!(3860), e!(234), e!(92), e!(6912), e!(6914), e!(4233), e!(1880), e!(804), e!(133), e!(3860), e!(234), e!(93), e!(1842), e!(2459), e!(3858),
    e!(1841), e!(5671), e!(409), e!(416), e!(4968), e!(410), e!(2200), e!(7616), e!(3560), e!(411), e!(414), e!(6852), e!(8767), e!(739), e!(740), e!(741), e!(742), e!(5850), e!(7627), e!(8030), e!(8032), e!(5340), e!(5851), e!(7157), e!(7628),
    e!(8031), e!(8033), e!(8350), e!(8421), e!(1842), e!(2459), e!(3858), e!(1841), e!(5671), e!(409), e!(416), e!(701), e!(6912), e!(4233), e!(1879), e!(810), e!(133), e!(3860), e!(1112), e!(1113), e!(6912), e!(6914), e!(1013), e!(3902), e!(3919),
    e!(7876), e!(8484), e!(8488), e!(143), e!(500), e!(830), e!(1551), e!(3047), e!(3048), e!(4832), e!(4833), e!(1880), e!(803), e!(3860), e!(132), e!(3451), e!(3459), e!(3455), e!(8865), e!(4690), e!(1880), e!(803), e!(3860), e!(132), e!(4689),
    e!(8315), e!(8872), e!(420), e!(1798), e!(2404), e!(3873), e!(3891), e!(3897), e!(4952), e!(8414), e!(518), e!(5548), e!(5862), e!(5869), e!(5861), e!(5866), e!(7147), e!(8736), e!(3198), e!(4734), e!(4052), e!(9026), e!(7969), e!(703), e!(3305),
    e!(8828), e!(1880), e!(803), e!(3860), e!(131), e!(1529), e!(5731), e!(5732), e!(5733), e!(71), e!(5519), e!(319), e!(3253), e!(5567), e!(5780), e!(6042), e!(9122), e!(2691), e!(2751), e!(3727), e!(5610), e!(5661), e!(7369), e!(8298), e!(8957),
    e!(6912), e!(4233), e!(1879), e!(810), e!(133), e!(3860), e!(3761), e!(3823), e!(1880), e!(803), e!(3860), e!(132), e!(3886), e!(3887), e!(8493), e!(7880), e!(895), e!(4088), e!(4296), e!(4581), e!(4600), e!(5863), e!(6305), e!(6830), e!(2733),
    e!(2821), e!(4418), e!(4420), e!(4658), e!(4660), e!(6783), e!(6829), e!(1880), e!(803), e!(3860), e!(132), e!(8992), e!(187), e!(697), e!(3825), e!(6912), e!(4233), e!(1879), e!(810), e!(133), e!(3860), e!(7454), e!(7412), e!(861), e!(4390),
    e!(4466), e!(4654), e!(4680), e!(5144), e!(7205), e!(8090), e!(4004), e!(4005), e!(4006), e!(4007), e!(4878), e!(6002), e!(7889), e!(7898), e!(3552), e!(8162), e!(8163), e!(8164), e!(8177), e!(8178), e!(8179), e!(8180), e!(1031), e!(2830), e!(2837),
    e!(3854), e!(6807), e!(8966), e!(8366), e!(7673), e!(6905), e!(1878), e!(558), e!(3189), e!(3190), e!(7524), e!(5686), e!(6550), e!(6912), e!(6914), e!(4234), e!(8586), e!(8187), e!(8189), e!(8186), e!(8188), e!(6910), e!(819), e!(6908), e!(815),
    e!(6316), e!(2469), e!(2468), e!(816), e!(6573), e!(2596), e!(2720), e!(3188), e!(4812), e!(6324), e!(891), e!(902), e!(2701), e!(3317), e!(5244), e!(6878), e!(8275), e!(1603), e!(4336), e!(4353), e!(4640), e!(5200), e!(5461), e!(9153), e!(1906),
    e!(1910), e!(2776), e!(7117), e!(7120), e!(9075), e!(9082), e!(732), e!(2782), e!(3135), e!(4115), e!(4125), e!(8410), e!(8624), e!(3855), e!(642), e!(2453), e!(2559), e!(6442), e!(7426), e!(8971), e!(8861), e!(1434), e!(1917), e!(3292), e!(4301),
    e!(4571), e!(9080), e!(1396), e!(3354), e!(3357), e!(5404), e!(5405), e!(5406), e!(5407), e!(1880), e!(803), e!(3860), e!(132), e!(3454), e!(3463), e!(8868), e!(2458), e!(3852), e!(5420), e!(5442), e!(7107), e!(7728), e!(8858), e!(7685), e!(507),
    e!(1343), e!(1300), e!(6360), e!(1281), e!(7731), e!(3878), e!(4167), e!(4169), e!(4171), e!(6116), e!(6117), e!(6119), e!(3711), e!(4972), e!(4998), e!(5010), e!(5054), e!(5083), e!(5082), e!(542), e!(543), e!(5166), e!(5996), e!(9150), e!(9151),
    e!(8781), e!(505), e!(1237), e!(1302), e!(1294), e!(6345), e!(1262), e!(7714), e!(4240), e!(8568), e!(6513), e!(4410), e!(4392), e!(4830), e!(8532), e!(339), e!(392), e!(1154), e!(5151), e!(6029), e!(6062), e!(7977), e!(6904), e!(3927), e!(3935),
    e!(503), e!(3327), e!(3325), e!(5332), e!(794), e!(3774), e!(5194), e!(6163), e!(6760), e!(6761), e!(8417), e!(6912), e!(6914), e!(4233), e!(1882), e!(810), e!(133), e!(3860), e!(333), e!(1050), e!(6024), e!(3677), e!(6729), e!(6944), e!(7670),
    e!(6912), e!(6914), e!(3395), e!(5412), e!(5413), e!(5415), e!(5431), e!(3394), e!(5412), e!(5413), e!(5415), e!(5425), e!(5434), e!(6380), e!(211), e!(213), e!(5203), e!(5205), e!(5902), e!(5972), e!(5973), e!(6909), e!(6907), e!(4056), e!(3571),
    e!(3117), e!(8743), e!(1241), e!(1233), e!(1306), e!(6359), e!(1249), e!(7699), e!(3307), e!(3427), e!(3623), e!(6443), e!(7896), e!(8502), e!(1842), e!(2459), e!(3858), e!(1841), e!(5671), e!(3219), e!(6912), e!(6914), e!(1283), e!(8774), e!(718),
    e!(721), e!(6912), e!(6914), e!(2695), e!(3944), e!(3950), e!(8771), e!(6912), e!(6914), e!(1283), e!(8774), e!(719), e!(721), e!(765), e!(2788), e!(3147), e!(4122), e!(8413), e!(8635), e!(6900), e!(8748), e!(6445), e!(372), e!(1080), e!(4462),
    e!(3109), e!(5104), e!(5569), e!(5574), e!(6611), e!(8846), e!(206), e!(239), e!(806), e!(3787), e!(3954), e!(7957), e!(1880), e!(803), e!(3860), e!(132), e!(8027), e!(8029), e!(7685), e!(1653), e!(1657), e!(1658), e!(1662), e!(2660), e!(6352),
    e!(1252), e!(7704), g!(938), g!(951), g!(956), e!(1323), e!(1230), e!(1305), e!(6355), e!(1255), e!(7707), e!(3098), e!(3112), e!(6600), e!(6612), e!(7295), e!(7974), e!(1649), e!(1656), e!(1667), e!(3561), e!(4959), e!(8280), e!(2502), e!(2503),
    e!(2504), e!(2505), e!(2506), e!(2507), e!(7805), e!(7806), e!(7807), e!(7808), e!(7809), e!(7810), e!(1039), e!(1044), e!(1665), e!(5330), e!(5785), e!(7458), e!(537), e!(1592), e!(5361), e!(3562), e!(7362), e!(8820), e!(2372), e!(2373), e!(2383),
    e!(3344), e!(6868), e!(8105), e!(731), e!(2781), e!(3134), e!(4107), e!(8409), e!(8623), e!(3717), e!(1838), e!(235), e!(3926), e!(8839), e!(8673), e!(2590), e!(2602), e!(2607), e!(2634), e!(2639), e!(2641), e!(3717), e!(1836), e!(233), e!(3925),
    e!(8840), e!(8701), e!(3717), e!(1838), e!(235), e!(3926), e!(8839), e!(8680), e!(3717), e!(1836), e!(233), e!(3925), e!(8840), e!(8709), e!(1825), e!(4416), e!(4656), e!(6078), e!(6077), e!(8736), e!(3717), e!(1838), e!(235), e!(3926), e!(8839),
    e!(8695), e!(1432), e!(1433), e!(1435), e!(1438), e!(1440), e!(1441), e!(1880), e!(803), e!(3860), e!(132), e!(5145), e!(6132), e!(788), e!(1554), e!(2551), e!(3242), e!(8323), e!(8854), e!(2456), e!(3859), e!(8972), e!(5247), e!(5544), e!(6948),
    e!(1842), e!(2459), e!(3858), e!(1841), e!(5671), e!(702), e!(118), e!(5839), e!(5841), e!(116), e!(5838), e!(5840), e!(1880), e!(803), e!(3860), e!(132), e!(3466), e!(8867), e!(4240), e!(8564), e!(6513), e!(4411), e!(4392), e!(4829), e!(7826),
    e!(7827), e!(7828), e!(7829), e!(7830), e!(7831), e!(4070), e!(4071), e!(5464), e!(5465), e!(6098), e!(8599), e!(1908), e!(3328), e!(4021), e!(4732), e!(6332), e!(7118), e!(6894), e!(808), e!(508), e!(2658), e!(6059), e!(8889), e!(2952), e!(3249),
    e!(3252), e!(4280), e!(6245), e!(7179), e!(2456), e!(3859), e!(8972), e!(5249), e!(5543), e!(6947), e!(319), e!(3253), e!(4282), e!(5567), e!(5780), e!(9122), e!(1333), e!(1223), e!(7758), e!(1315), e!(7727), e!(7761), e!(6278), e!(6279), e!(6288),
    e!(6289), e!(6290), e!(6293), e!(793), e!(931), e!(932), e!(3769), e!(6163), e!(8415), e!(6552), e!(6561), e!(6562), e!(6563), e!(6564), e!(6565), e!(1904), e!(1905), e!(1918), e!(7114), e!(7115), e!(7126), e!(801), e!(8534), e!(8524), e!(7392),
    e!(7382), e!(7542), e!(4409), e!(4828), e!(6891), e!(7390), e!(352), e!(4518), e!(7391), e!(802), g!(3971), e!(7398), e!(2352), e!(512), e!(2455), e!(3857), e!(8969), e!(1058), e!(2568), e!(7589), e!(929), e!(930), e!(6725), e!(6727), e!(6728),
    e!(8388), e!(6912), e!(6914), e!(5746), e!(7626), e!(8043), e!(8046), e!(518), e!(5547), e!(5861), e!(5866), e!(7147), e!(8736), e!(6884), e!(4356), e!(4417), e!(4643), e!(4657), e!(5386), e!(6900), e!(8748), e!(811), e!(7386), e!(7540), e!(6900),
    e!(8748), e!(809), e!(7387), e!(7541), e!(7647), e!(7646), e!(2626), e!(2633), e!(9023), e!(6912), e!(6914), e!(1283), e!(8774), e!(432), e!(52), e!(2723), e!(5885), e!(5928), e!(8760), e!(6912), e!(6914), e!(41), e!(1285), e!(8775), e!(571),
    e!(572), e!(573), e!(574), e!(4293), e!(8861), e!(3292), e!(5215), e!(5217), e!(7624), e!(4053), e!(231), e!(230), e!(232), e!(5243), e!(332), e!(1049), e!(6025), e!(3676), e!(7670), e!(2456), e!(3859), e!(8972), e!(5250), e!(6946), e!(2455),
    e!(3857), e!(8969), e!(936), e!(4329), e!(2455), e!(3857), e!(8969), e!(4330), e!(6737), e!(1629), e!(5606), e!(5745), e!(8021), e!(8663), e!(1322), e!(1229), e!(1303), e!(1251), e!(7703), e!(1232), e!(1304), e!(6356), e!(1254), e!(7706), e!(6912),
    e!(6914), e!(4233), e!(1790), e!(8817), e!(4053), e!(231), e!(230), e!(232), e!(6932), e!(6912), e!(6914), e!(4233), e!(3008), e!(3572), e!(1239), e!(5652), e!(6357), e!(1266), e!(7708), e!(1880), e!(803), e!(3860), e!(132), e!(2715), e!(1880),
    e!(803), e!(3860), e!(131), e!(8651), e!(8895), e!(1380), e!(4996), e!(5004), e!(5081), e!(2457), e!(3856), e!(7106), e!(7726), e!(8857), e!(1210), e!(5865), e!(6160), e!(7897), e!(8585), e!(229), e!(3429), e!(8652), e!(9093), e!(8864), e!(2460),
    e!(3853), e!(7133), e!(7777), e!(8859), e!(157), e!(3866), e!(5736), e!(6057), e!(7978), e!(2328), e!(5518), e!(6173), e!(6579), e!(8242), e!(8402), e!(2526), e!(7337), e!(7286), e!(3614), e!(789), e!(865), e!(1110), e!(6134), e!(6135), e!(481),
    e!(4268), e!(5221), e!(5222), e!(6506), e!(2680), e!(4533), e!(4536), e!(4539), e!(6420), e!(3051), e!(4734), e!(4052), e!(9022), e!(8827), e!(4053), e!(231), e!(230), e!(232), e!(4776), e!(4837), e!(4836), e!(4834), e!(998), e!(997), e!(760),
    e!(3143), e!(3981), e!(4118), e!(8482), e!(4053), e!(231), e!(230), e!(232), e!(8729), e!(1241), e!(1233), e!(1296), e!(1293), e!(7746), e!(4053), e!(231), e!(230), e!(232), e!(5359), e!(913), e!(4783), e!(6835), e!(8361), e!(8720), e!(1327),
    e!(1218), e!(1298), e!(1317), e!(7733), e!(6330), e!(8609), e!(8615), e!(8616), e!(8777), e!(941), e!(4537), e!(6386), e!(6570), e!(8916), e!(8656), e!(9062), e!(9094), e!(9096), e!(8922), e!(800), e!(8535), e!(7381), e!(7392), e!(6451), e!(6912),
    e!(6914), e!(7604), e!(3682), e!(8912), e!(2456), e!(3859), e!(8972), e!(5248), e!(6945), e!(6581), e!(6582), e!(6531), e!(6551), e!(6548), e!(9096), e!(9058), e!(9095), e!(8654), e!(9067), e!(3318), e!(5242), e!(5926), e!(6879), e!(8275), e!(7045),
    e!(1738), e!(6920), e!(7046), e!(8628), e!(7049), e!(6923), e!(1743), e!(7050), e!(8629), e!(7051), e!(6927), e!(1748), e!(7052), e!(8633), e!(6912), e!(6914), e!(2828), e!(6537), e!(6536), e!(1880), e!(803), e!(3860), e!(132), e!(7084), e!(2953),
    e!(3261), e!(6240), e!(6248), e!(7180), e!(7212), e!(7217), e!(7218), e!(7219), e!(7221), e!(1909), e!(2775), e!(7119), e!(9074), e!(9081), e!(7817), e!(7818), e!(7819), e!(7820), e!(7821), e!(541), e!(544), e!(3570), e!(4326), e!(8705), e!(5916),
    e!(7637), e!(7639), e!(7640), e!(7642), e!(8106), e!(8114), e!(8125), e!(8130), e!(8140), e!(4764), e!(4766), e!(8314), e!(8316), e!(8317), e!(4053), e!(231), e!(230), e!(232), e!(8383), e!(1880), e!(803), e!(3860), e!(132), e!(8642), e!(1525),
    e!(1671), e!(3569), e!(8297), e!(8736), e!(1237), e!(1302), e!(6368), e!(1262), e!(7715), e!(4063), e!(8613), e!(2449), e!(6568), e!(4244), e!(8571), e!(8573), e!(158), e!(3959), e!(6099), e!(7251), e!(8252), e!(1264), e!(5649), e!(6362), e!(7700),
    e!(5657), e!(6370), e!(1265), e!(7710), e!(6900), e!(8748), e!(2675), e!(3810), e!(3053), e!(142), e!(3851), e!(350), e!(438), e!(559), e!(4430), e!(4661), e!(2690), e!(5875), e!(5906), e!(8766), e!(2690), e!(248), e!(2911), e!(8756), e!(2723),
    e!(6209), e!(7372), e!(8759), e!(577), e!(578), e!(588), e!(647), e!(2690), e!(6003), e!(8763), e!(5930), e!(6912), e!(6914), e!(7604), e!(8765), e!(799), e!(4344), e!(7789), e!(8768), e!(286), e!(3656), e!(3782), e!(8782), e!(8895), e!(1379),
    e!(4976), e!(5019), e!(16), e!(5756), e!(6580), e!(8998), e!(6912), e!(6914), e!(4233), e!(1881), e!(561), e!(625), e!(923), e!(8790), e!(365), e!(3107), e!(3111), e!(6609), e!(4235), e!(5853), e!(5852), e!(8559), e!(6912), e!(6914), e!(5757),
    e!(8261), e!(208), e!(2979), e!(4428), e!(6296), e!(1739), e!(1741), e!(1742), e!(8816), e!(5141), e!(6749), e!(6750), e!(7148), e!(2073), e!(2074), e!(2075), e!(2076), e!(7088), e!(7089), e!(7091), e!(7093), e!(3568), e!(2437), e!(2440), e!(8240),
    e!(1208), e!(1933), e!(5364), e!(6067), e!(5218), e!(7246), e!(8034), e!(8619), e!(6912), e!(6914), e!(3736), e!(6076), e!(1327), e!(1337), e!(1313), e!(7719), e!(6912), e!(6914), e!(2917), e!(8879), e!(6912), e!(6914), e!(7604), e!(539), e!(1327),
    e!(1337), e!(1313), e!(7724), e!(72), e!(4347), e!(4349), e!(4351), e!(805), e!(3017), e!(4360), e!(4647), e!(5204), e!(5206), e!(5969), e!(5971), e!(3335), e!(3346), e!(3348), e!(8630), e!(3336), e!(3347), e!(3349), e!(8631), e!(6084), e!(7280),
    e!(7318), e!(9035), e!(7685), e!(6358), e!(1280), e!(7730), e!(380), e!(293), e!(3657), e!(3712), e!(3765), e!(3766), e!(3776), e!(3777), e!(5351), e!(7447), e!(8724), e!(8898), e!(6072), e!(6895), e!(8797), e!(5457), e!(7800), e!(7801), e!(7802),
    e!(7803), e!(7822), e!(7823), e!(7824), e!(7825), e!(8403), e!(2528), e!(9158), e!(575), e!(1328), e!(7439), e!(1299), e!(7735), e!(1242), e!(1236), e!(1308), e!(7736), e!(1234), e!(1307), e!(1291), e!(7743), e!(2722), e!(4775), e!(4807), e!(5927),
    e!(6884), e!(4244), e!(8571), e!(8573), e!(763), e!(3146), e!(3983), e!(8486), e!(762), e!(3145), e!(3982), e!(8485), e!(6912), e!(6914), e!(5370), e!(9089), e!(1240), e!(1227), e!(1309), e!(7749), e!(1242), e!(1236), e!(1308), e!(7754), e!(5656),
    e!(6363), e!(1261), e!(7702), e!(189), e!(5446), e!(6956), e!(8953), e!(6523), e!(171), e!(4080), e!(3781), e!(1329), e!(1219), e!(1314), e!(7756), e!(1330), e!(1220), e!(1316), e!(7778), e!(752), e!(2786), e!(3142), e!(4113), e!(1268), e!(5629),
    e!(6354), e!(7712), e!(5624), e!(6583), e!(6584), e!(5957), e!(1332), e!(1222), e!(1295), e!(7732), e!(4244), e!(8571), e!(8573), e!(6058), e!(3895), e!(3911), e!(7882), e!(8495), e!(227), e!(4540), e!(6372), e!(6955), e!(6282), e!(6283), e!(6284),
    e!(6285), e!(2948), e!(4521), e!(6321), e!(8918), e!(4453), e!(4676), e!(6401), e!(6414), e!(6902), e!(1875), e!(4241), e!(8566), e!(6553), e!(6554), g!(3970), e!(8933), e!(1176), e!(1727), e!(1731), e!(5890), e!(6822), e!(6827), e!(6828), e!(6837),
    e!(5416), e!(5417), e!(5418), e!(8874), e!(1130), e!(1124), e!(4215), e!(6999), e!(1040), e!(1141), e!(7014), e!(9050), e!(1041), e!(1142), e!(7027), e!(9051), e!(7012), e!(7013), e!(7018), e!(7019), e!(1971), e!(2991), e!(5703), e!(8666), e!(3789),
    e!(7191), e!(3788), e!(7187), e!(4856), e!(4857), e!(7073), e!(8518), e!(6741), e!(8211), e!(8243), e!(8336), e!(3894), e!(3910), e!(8492), e!(7879), e!(352), e!(4518), e!(489), e!(4522), e!(391), e!(7496), e!(514), e!(7473), e!(8534), e!(8525),
    e!(7383), e!(7542), e!(504), e!(6349), e!(1336), e!(7779), e!(506), e!(1335), e!(1338), e!(7780), e!(1004), e!(3187), e!(5471), e!(6735), e!(3154), e!(7683), e!(7980), e!(8990), e!(4010), e!(6748), e!(8690), e!(8739), e!(375), e!(3197), e!(4813),
    e!(8731), e!(369), e!(2865), e!(4795), e!(8730), e!(956), e!(7981), e!(7979), e!(7790), e!(1712), e!(4706), e!(5220), e!(8312), e!(1334), e!(1224), e!(1318), e!(7782), e!(1244), e!(1238), e!(1312), e!(7784), e!(8895), e!(1381), e!(4973), e!(5019),
    e!(3903), e!(3918), e!(5750), e!(8487), e!(1340), e!(1301), e!(7788), e!(8812), e!(1227), e!(1240), e!(1309), e!(7711), e!(5655), e!(6369), e!(1260), e!(7701), e!(1808), e!(1950), e!(6711), e!(9087), e!(36), e!(8675), e!(8741), e!(27), e!(1364),
    e!(8908), e!(291), e!(5564), e!(9121), e!(1273), e!(7765), e!(8915), e!(6900), e!(8748), e!(4310), e!(6361), e!(1263), e!(7713), e!(6346), e!(1214), e!(7689), e!(6346), e!(1215), e!(7690), e!(564), e!(565), e!(566), e!(490), e!(492), e!(4187),
    e!(7165), e!(1540), e!(1536), e!(560), e!(5625), e!(5636), e!(2690), e!(6192), e!(8752), e!(6912), e!(6914), e!(8753), e!(3239), e!(8181), e!(594), e!(582), e!(606), e!(643), e!(2690), e!(604), e!(8758), e!(2690), e!(5450), e!(8761), e!(2690),
    e!(355), e!(8751), e!(2690), e!(6088), e!(8764), e!(653), e!(3398), e!(3696), e!(1898), e!(7094), e!(7095), e!(6096), e!(7087), e!(7096), e!(9099), e!(736), e!(8736), e!(1554), e!(2551), e!(8786), e!(764), e!(6487), e!(6489), e!(159), e!(5737),
    e!(6060), e!(1049), e!(3720), e!(7669), e!(3209), e!(3479), e!(3512), e!(1240), e!(1227), e!(7693), e!(296), e!(392), e!(6029), e!(1664), e!(2659), e!(8165), e!(403), e!(1846), e!(5380), g!(3964), e!(1097), e!(1083), e!(9063), e!(8657), e!(9092),
    e!(6900), e!(8748), e!(1153), e!(1393), e!(1399), e!(1400), e!(1387), e!(1390), e!(1392), e!(238), e!(3786), e!(8450), e!(1162), e!(5535), e!(3830), e!(6350), e!(1247), e!(7697), e!(6351), e!(1248), e!(7698), e!(6353), e!(1253), e!(7705), e!(1771),
    e!(3516), e!(8967), e!(1752), e!(1753), e!(8815), e!(4414), e!(4457), e!(4458), e!(7141), e!(7143), e!(7322), e!(7308), e!(7310), e!(7311), e!(7023), e!(7030), e!(7034), e!(6912), e!(6914), e!(4785), e!(5133), e!(5225), e!(5376), e!(1039), e!(1043),
    e!(1575), e!(6912), e!(6914), e!(4786), e!(4308), e!(7139), e!(7359), e!(2428), e!(2467), e!(4212), e!(2700), e!(6170), e!(7170), e!(6697), e!(2516), e!(8891), e!(3486), e!(3767), e!(6708), e!(1105), e!(2630), e!(3731), e!(2587), e!(2621), e!(2640),
    e!(705), e!(2631), e!(3732), e!(7288), e!(7336), e!(8402), e!(2705), e!(2708), e!(2704), e!(1948), e!(6474), e!(8300), e!(4161), e!(4181), e!(4182), e!(317), e!(5778), e!(5828), e!(2743), e!(2744), e!(2745), e!(3563), e!(8362), e!(8925), e!(5013),
    e!(5024), e!(5073), e!(7647), e!(7646), e!(3013), e!(8861), e!(5217), e!(7624), e!(754), e!(2763), e!(3200), e!(2713), e!(7082), e!(8640), e!(859), e!(939), e!(8433), e!(6347), e!(1267), e!(7709), e!(8947), e!(3661), e!(5350), e!(1952), e!(2411),
    e!(8047), e!(1340), e!(7696), e!(8811), e!(1340), e!(7775), e!(8932), e!(6903), e!(3929), e!(3844), e!(377), e!(478), e!(3202), e!(1951), e!(3203), e!(4911), e!(3962), g!(3967), e!(8882), e!(3710), e!(4060), e!(8829), e!(1720), e!(354), e!(5844),
    e!(3218), e!(6266), e!(6267), e!(3122), e!(4520), e!(8736), e!(3123), e!(4519), e!(8736), e!(6894), e!(5964), e!(6344), e!(3565), e!(4770), e!(8927), e!(1235), e!(1310), e!(7740), e!(3104), e!(4752), e!(6607), e!(1217), e!(1291), e!(7743), e!(6325),
    e!(7564), e!(8899), e!(2722), e!(4778), e!(7373), e!(1527), e!(1526), e!(1528), e!(3898), e!(3914), e!(4262), e!(761), e!(3144), e!(8483), e!(6900), e!(8748), e!(1805), e!(4055), g!(3967), e!(8831), e!(9059), e!(9091), e!(8921), e!(6900), e!(8748),
    e!(6450), e!(6900), e!(8748), e!(8678), e!(5962), e!(6343), e!(8727), e!(1235), e!(1310), e!(7750), e!(1327), e!(1218), e!(7751), e!(1326), e!(1339), e!(7752), e!(1585), e!(3756), e!(6045), e!(29), e!(1586), e!(3758), e!(5514), e!(5515), e!(5516),
    e!(6523), e!(4249), e!(4868), e!(3407), e!(3409), e!(3413), e!(5570), e!(5571), e!(5572), e!(561), e!(8712), e!(8791), e!(1243), e!(1237), e!(7769), e!(1331), e!(1221), e!(7758), e!(8732), e!(8677), e!(237), e!(1101), g!(3968), e!(6101), e!(4645),
    e!(8428), e!(4358), e!(1311), e!(1290), e!(7739), e!(1326), e!(1339), e!(7762), e!(5624), e!(6583), e!(6585), e!(6900), e!(8748), e!(3045), e!(6900), e!(8748), e!(6061), e!(4541), e!(6371), e!(9134), e!(4542), e!(6373), e!(9135), e!(413), e!(6328),
    e!(8778), e!(6331), e!(8611), e!(8937), e!(5654), e!(6329), e!(8897), e!(2950), e!(6388), e!(6419), e!(6403), e!(6411), e!(6423), e!(1325), e!(1216), e!(7773), e!(1324), e!(1341), e!(7774), e!(8535), e!(7383), e!(6449), e!(6445), e!(376), e!(4461),
    e!(1340), e!(7776), e!(8931), e!(6693), e!(6694), e!(6695), e!(1050), e!(3719), e!(7669), e!(379), e!(6729), e!(6944), g!(3522), e!(7972), e!(7971), e!(7512), e!(7514), e!(7503), e!(2850), e!(7883), e!(8496), e!(5426), e!(6137), e!(8875), e!(807),
    e!(5252), e!(5378), e!(1074), e!(1655), e!(1659), e!(947), e!(2882), e!(8133), e!(946), e!(4621), e!(8132), e!(5265), e!(5266), e!(5267), e!(7206), e!(7209), e!(7222), e!(1042), e!(1045), e!(429), e!(6697), e!(3486), e!(8892), e!(3103), e!(6605),
    e!(7975), e!(7395), e!(7499), e!(7481), e!(7544), e!(7407), e!(7414), e!(5314), e!(5704), e!(5939), e!(7691), e!(7442), e!(3276), e!(7526), e!(8676), e!(237), e!(590), e!(7565), e!(8950), e!(609), e!(7561), e!(8951), e!(650), e!(7593), e!(8952),
    e!(249), e!(2915), e!(8955), e!(1322), e!(1229), e!(7781), e!(1051), e!(1065), e!(7588), e!(6900), e!(8748), e!(8694), e!(8184), e!(8696), e!(8674), e!(867), e!(4000), e!(5907), e!(5713), e!(5908), e!(5910), e!(1555), e!(2564), e!(8736), e!(247),
    e!(7085), e!(8643), e!(2712), e!(7081), e!(8639), e!(1028), e!(8025), e!(8356), e!(1325), e!(1216), e!(7787), e!(1235), e!(1310), e!(7695), e!(6884), e!(8735), e!(8665), e!(4058), e!(4059), e!(6070), e!(8), e!(7), e!(737), e!(738), e!(252),
    e!(269), e!(4009), e!(8671), e!(8947), e!(298), e!(307), e!(8736), e!(484), e!(8736), e!(488), e!(4168), e!(120), e!(7609), e!(528), e!(529), e!(3850), e!(2980), e!(569), e!(1872), e!(603), e!(8736), e!(8067), e!(8062), e!(619), e!(8736),
    e!(626), e!(8736), e!(994), e!(6571), e!(662), e!(8736), e!(687), e!(832), e!(6097), e!(7116), e!(4237), e!(8562), e!(8230), e!(773), e!(2711), e!(8638), e!(4239), e!(8567), e!(3097), e!(6599), e!(911), e!(928), e!(367), e!(378), e!(366),
    e!(7667), e!(367), e!(6022), e!(1011), e!(8736), e!(1026), e!(3438), e!(1228), e!(7693), e!(4074), e!(4958), e!(1078), e!(8736), e!(1092), e!(1084), e!(285), e!(3655), e!(1174), e!(8736), e!(1177), e!(8736), e!(1395), e!(8736), e!(918), e!(1560),
    e!(1413), e!(8736), e!(1411), e!(1420), e!(1456), e!(1481), e!(2480), e!(3997), e!(501), e!(1550), e!(1561), e!(6712), e!(875), e!(1166), e!(1663), e!(2661), e!(1655), e!(3665), e!(1672), e!(3666), e!(7685), e!(1661), e!(1689), e!(8736), e!(301),
    e!(3670), e!(5923), e!(2866), e!(5923), e!(3034), e!(3417), e!(3418), e!(4149), e!(4151), e!(5923), e!(4610), e!(6094), e!(6095), e!(4300), e!(4726), e!(1792), e!(8826), e!(2656), e!(2663), e!(5313), e!(5938), e!(4703), e!(5140), e!(3899), e!(3915),
    e!(1996), e!(8736), e!(2006), e!(8736), e!(536), e!(1358), e!(3768), e!(1618), e!(2036), e!(8736), e!(3768), e!(2497), e!(3937), e!(6714), e!(2070), e!(8736), e!(1039), e!(4767), e!(2072), e!(2077), e!(2091), e!(8736), e!(2896), e!(7261), e!(2111),
    e!(8736), e!(2125), e!(8736), e!(3364), e!(8822), e!(2176), e!(8736), e!(1275), e!(7718), e!(5459), e!(5467), e!(2021), e!(2057), e!(2244), e!(8736), e!(2249), e!(8736), e!(2286), e!(8736), e!(5667), e!(6960), e!(3548), e!(8458), e!(5180), e!(8824),
    e!(2302), e!(8736), e!(2304), e!(8736), e!(4879), e!(9044), e!(2366), e!(8736), e!(2393), e!(8736), e!(2421), e!(2422), e!(1965), e!(8838), e!(2554), e!(8736), e!(2627), e!(2629), e!(151), e!(153), e!(2608), e!(2635), e!(2624), e!(2623), e!(2589),
    e!(2622), e!(1111), e!(1114), e!(2614), e!(8736), e!(2628), e!(2629), e!(2724), e!(2963), e!(5150), e!(2736), e!(3568), e!(8246), e!(4851), e!(8519), e!(4852), e!(8512), e!(3737), e!(8308), e!(2854), e!(8823), e!(2913), e!(8736), e!(5331), e!(5960),
    e!(3018), e!(8736), e!(3905), e!(3922), e!(7892), e!(8501), e!(1286), e!(7737), e!(1028), e!(6987), e!(5965), e!(5966), e!(8230), e!(3151), e!(1840), e!(8684), e!(439), e!(3012), e!(3714), e!(5558), e!(1287), e!(7738), e!(6051), e!(6050), e!(8198),
    e!(8248), e!(3341), e!(8736), e!(7242), e!(7245), e!(3443), e!(8736), e!(3453), e!(3458), e!(1012), e!(3439), e!(3492), e!(8736), e!(3506), e!(8736), e!(3526), e!(8736), e!(3583), e!(8736), e!(3596), e!(8736), e!(3605), e!(8736), e!(1500), e!(4028),
    e!(463), e!(1516), e!(3612), e!(8736), e!(3626), e!(3629), e!(3625), e!(3628), e!(3615), e!(8736), e!(1321), e!(7767), e!(1711), e!(4145), e!(4749), e!(5724), e!(1320), e!(7770), e!(1225), e!(7720), e!(3818), e!(1871), e!(3845), e!(7513), e!(1583),
    e!(3370), e!(3881), e!(3884), g!(3967), e!(8886), e!(3975), e!(3984), e!(877), e!(876), e!(3363), e!(4309), e!(3213), e!(4572), e!(3214), e!(3713), e!(3960), e!(8830), e!(864), e!(868), e!(6590), e!(8151), e!(6434), e!(8716), e!(5884), e!(7039),
    e!(4082), e!(4588), e!(1590), e!(4589), e!(5312), e!(5937), e!(4746), e!(8736), e!(1804), e!(2753), e!(1292), e!(7745), e!(1288), e!(7741), e!(1289), e!(7742), e!(3671), e!(4777), e!(8066), e!(8061), e!(826), e!(6000), e!(4841), e!(4844), e!(4842),
    e!(4845), e!(4840), e!(4846), e!(4843), e!(4847), e!(4046), e!(8832), e!(4051), e!(8835), e!(4933), e!(8736), e!(5059), e!(8736), e!(3755), e!(8728), e!(3715), e!(8044), e!(1297), e!(7744), e!(1297), e!(7760), e!(1226), e!(7753), e!(1297), e!(7785),
    e!(3754), e!(5357), e!(3754), e!(5358), e!(5201), e!(8688), e!(5433), e!(8736), e!(3493), e!(5435), e!(7223), e!(8058), e!(5536), e!(8736), e!(3108), e!(6610), e!(360), e!(5521), e!(1668), e!(8685), e!(5615), e!(5658), e!(8681), e!(8713), e!(5626),
    e!(1873), e!(1669), e!(8686), e!(5637), e!(1874), e!(5653), e!(8736), e!(6004), e!(6716), e!(4345), e!(8677), e!(1088), e!(5758), e!(6), e!(8182), g!(3969), e!(5762), e!(4057), e!(5760), e!(2877), e!(5922), e!(5892), e!(8736), e!(1319), e!(7744),
    e!(1319), e!(7772), e!(1226), e!(7763), e!(1319), e!(7785), e!(1319), e!(7694), e!(1714), e!(8063), e!(12), e!(1099), e!(6069), e!(8736), e!(4880), e!(9045), e!(4474), e!(4684), e!(2878), e!(5922), e!(4305), e!(5341), e!(6256), e!(6327), e!(2728),
    e!(8981), e!(6392), e!(6408), e!(424), e!(428), e!(7158), e!(7900), e!(430), e!(7645), e!(4238), e!(8561), e!(6597), e!(8736), e!(1480), e!(6620), e!(6596), e!(8158), e!(6657), e!(8736), e!(6661), e!(8736), e!(6669), e!(8736), e!(6673), e!(8736),
    e!(6721), e!(6723), e!(515), e!(4369), e!(836), e!(4835), e!(8190), e!(4848), e!(5848), e!(1096), e!(1082), e!(1094), g!(3520), g!(3521), e!(7389), e!(7393), e!(6334), e!(3201), e!(6994), e!(8736), e!(6997), e!(8736), e!(5251), e!(5377), e!(1854),
    e!(1858), e!(1853), e!(1857), e!(129), e!(1966), e!(129), e!(1061), e!(7270), e!(8272), e!(8477), e!(8479), e!(7060), e!(8736), e!(7063), e!(8736), e!(7067), e!(8736), e!(6165), e!(8052), e!(7070), e!(8736), e!(4295), e!(4721), e!(4297), e!(4724),
    e!(8476), e!(8478), e!(7214), e!(7216), e!(3196), e!(4971), e!(3890), e!(3896), e!(3906), e!(3912), e!(4250), e!(4251), e!(4359), e!(4646), e!(297), e!(3674), e!(7339), e!(8736), e!(538), e!(5139), e!(7408), e!(7455), e!(7416), e!(7456), e!(7432),
    e!(8806), e!(7463), e!(7462), e!(7478), e!(9060), e!(7545), e!(7457), e!(2337), e!(5237), e!(6589), e!(8150), e!(1824), e!(7729), e!(7815), e!(7816), e!(4412), e!(4655), e!(3114), e!(6614), e!(7997), e!(8736), e!(9), e!(6085), e!(5278), e!(8045),
    e!(8035), e!(8042), e!(4780), e!(4781), e!(2523), e!(5632), e!(8251), e!(8256), e!(6843), e!(8282), e!(1601), e!(3510), e!(1558), e!(2811), e!(3113), e!(6613), e!(8382), e!(8736), e!(1547), e!(1549), e!(5078), e!(5086), e!(9099), e!(8736), e!(4054),
    g!(3975), e!(9061), e!(8655), e!(346), e!(5122), e!(7686), e!(8664), e!(24), e!(57), e!(1869), e!(486), e!(5182), e!(5184), e!(5187), e!(3689), e!(55), e!(59), e!(63), e!(67), e!(76), e!(79), e!(113), e!(2929), e!(7196), e!(2698),
    e!(2699), e!(6826), e!(7566), e!(2448), e!(6549), e!(183), e!(7611), e!(244), e!(1919), e!(256), e!(3281), e!(258), e!(3282), e!(288), e!(341), e!(7250), e!(295), e!(2748), e!(7664), e!(3021), e!(916), e!(8721), e!(323), e!(331), e!(6448),
    e!(7385), e!(6055), e!(1250), e!(1258), e!(1108), e!(4219), e!(6446), e!(485), e!(394), e!(3207), e!(7558), e!(349), e!(1535), e!(1539), e!(7164), e!(8683), e!(527), e!(526), e!(3816), e!(5613), e!(3678), e!(3662), e!(5343), e!(8718), e!(592),
    e!(1282), e!(2340), e!(587), e!(5714), e!(6020), e!(9019), e!(636), e!(583), e!(589), e!(596), e!(3700), e!(3705), e!(602), e!(601), e!(611), e!(612), e!(635), e!(5346), e!(638), e!(639), e!(644), e!(586), e!(645), e!(649), e!(8993),
    e!(4784), e!(621), e!(616), e!(7429), e!(629), e!(599), e!(615), e!(4743), e!(605), e!(651), e!(8386), e!(4747), e!(7522), e!(6336), e!(6335), e!(3182), e!(660), e!(658), e!(657), e!(2508), e!(7168), e!(7952), e!(5716), e!(5153), e!(5542),
    e!(680), e!(681), e!(686), e!(2565), e!(706), e!(729), e!(733), e!(8405), e!(3291), e!(5214), e!(1376), e!(5079), e!(766), e!(769), e!(772), e!(774), e!(6009), e!(6566), e!(873), e!(896), e!(7665), e!(910), e!(909), e!(922), e!(312),
    e!(917), e!(5617), e!(364), e!(5929), e!(1666), e!(5673), e!(5675), e!(5679), e!(927), e!(926), e!(3359), e!(716), e!(943), e!(2665), e!(7100), e!(7110), e!(6123), e!(972), e!(976), e!(7591), e!(7592), e!(7360), e!(5579), e!(935), e!(6736),
    e!(7434), e!(3807), e!(8653), e!(1095), e!(8054), e!(1650), e!(6463), e!(1156), e!(7061), e!(1178), e!(5894), e!(4934), e!(7077), e!(1169), e!(310), e!(7064), e!(1185), e!(1193), e!(1384), e!(1386), e!(3087), e!(7595), e!(7597), e!(7598), e!(7599),
    e!(7594), e!(1397), e!(2789), e!(1405), e!(1394), e!(2797), e!(418), e!(4254), e!(4258), e!(4271), e!(5588), e!(8662), e!(5719), e!(5742), e!(9077), e!(530), e!(531), e!(532), e!(533), e!(7583), e!(6340), e!(2579), e!(6254), e!(7435), e!(1079),
    e!(322), e!(7420), e!(1415), e!(6178), e!(1429), e!(1430), e!(1477), e!(219), e!(5296), e!(8644), e!(1473), e!(1484), e!(1457), e!(1452), e!(1495), e!(1462), e!(1465), e!(1501), e!(1471), e!(6621), e!(1548), e!(1566), e!(1164), e!(2825), e!(2836),
    e!(6791), e!(1651), e!(3686), e!(7294), e!(7973), e!(1687), e!(8291), e!(8293), e!(1698), e!(4797), e!(1728), e!(1732), e!(1734), e!(1733), e!(1730), e!(1735), e!(1776), e!(1916), e!(2500), e!(8341), e!(4066), e!(4100), e!(8346), e!(5299), e!(5301),
    e!(1740), e!(1744), e!(1749), e!(1769), e!(1736), e!(8337), e!(1760), e!(8193), e!(8340), e!(8589), e!(1943), e!(2022), e!(468), e!(2256), e!(6688), e!(2177), e!(472), e!(470), e!(1976), e!(1510), e!(445), e!(880), e!(198), e!(202), e!(1994),
    e!(1995), e!(1999), e!(2042), e!(2113), e!(1998), e!(3288), e!(5469), e!(2562), e!(1997), e!(2250), e!(1357), e!(1616), e!(7319), e!(2553), e!(2071), e!(2004), e!(1831), e!(3740), e!(3367), e!(2868), e!(2129), e!(6793), e!(2178), e!(2017), e!(2146),
    e!(3967), e!(7150), e!(6730), e!(4563), e!(453), e!(1274), e!(2179), e!(7363), e!(5559), e!(2007), e!(2183), e!(2290), e!(2108), e!(1619), e!(2245), e!(6795), e!(4307), e!(7138), e!(7358), e!(2274), e!(2288), e!(2099), e!(2305), e!(2852), e!(2112),
    e!(2126), e!(2037), e!(4554), e!(2300), e!(2303), e!(2369), e!(2361), e!(2375), e!(3342), e!(2394), e!(2358), e!(299), e!(2391), e!(2392), e!(4205), e!(2386), e!(2389), e!(2417), e!(2412), e!(2426), e!(2431), e!(2787), e!(2425), e!(2430), e!(2432),
    e!(2465), e!(7005), e!(2443), e!(4921), e!(8219), e!(4922), e!(2439), e!(2418), e!(2446), e!(4814), e!(7687), e!(2463), e!(2515), e!(2535), e!(3382), e!(421), e!(426), e!(767), e!(2549), e!(2582), e!(3088), e!(2572), e!(8203), e!(1025), e!(3467),
    e!(7425), e!(228), e!(1921), e!(2606), e!(2645), e!(150), e!(1935), e!(2620), e!(2593), e!(4824), e!(2642), e!(2597), e!(2599), e!(2604), e!(2611), e!(7367), e!(2618), e!(2637), e!(2615), e!(1231), e!(1256), e!(7662), e!(1605), e!(6007), e!(2714),
    e!(6312), e!(2729), e!(7329), e!(2330), e!(4090), e!(4915), e!(7330), e!(7331), e!(2764), e!(2774), e!(8241), e!(1388), e!(4263), e!(2778), e!(240), e!(783), e!(4931), e!(8514), e!(2783), e!(7007), e!(4929), e!(2798), e!(2803), e!(2805), e!(1170),
    e!(5408), e!(6379), e!(7068), e!(2912), e!(2921), e!(743), e!(2916), e!(2906), e!(6471), e!(2930), e!(2927), e!(2931), e!(8257), e!(3703), e!(4566), e!(6569), e!(5393), e!(4346), e!(4348), e!(4350), e!(3116), e!(4872), e!(3129), e!(8199), e!(3127),
    e!(3130), e!(7766), e!(8326), e!(1135), e!(3132), e!(3138), e!(3136), e!(3139), e!(3126), e!(1377), e!(3153), e!(3150), e!(3149), e!(3152), e!(6010), e!(1131), e!(4873), e!(3166), e!(3170), e!(3172), e!(3173), e!(5691), e!(7529), e!(3174), e!(3011),
    e!(3176), e!(3177), e!(3167), e!(3009), e!(3698), e!(3178), e!(5538), e!(5216), e!(7623), e!(5428), e!(3210), e!(700), e!(3259), e!(2098), e!(3205), e!(3477), e!(3511), e!(5432), e!(192), e!(1777), e!(4175), e!(4177), e!(4174), e!(4229), e!(5098),
    e!(5100), e!(7351), e!(852), e!(5854), e!(1007), e!(3350), e!(6598), e!(7292), e!(3408), e!(6036), e!(13), e!(3431), e!(3428), e!(3433), e!(3436), e!(3456), e!(3460), e!(3442), e!(3457), e!(3449), e!(3465), e!(3274), e!(3462), e!(3480), e!(3530),
    e!(215), e!(3497), e!(1690), e!(3517), e!(1188), e!(3508), e!(5060), e!(3489), e!(6934), e!(6935), e!(3375), e!(3513), e!(3360), e!(3584), e!(3590), e!(4943), e!(7999), e!(553), e!(3606), e!(3613), e!(6140), e!(3604), e!(3611), e!(45), e!(47),
    e!(6574), e!(3631), e!(663), e!(938), e!(1046), e!(1257), e!(1278), e!(1279), e!(1342), e!(3444), e!(4139), e!(1855), e!(3692), e!(1710), e!(4748), e!(4048), e!(2843), e!(3028), e!(3078), e!(3080), e!(4604), e!(1158), e!(1700), e!(2905), e!(2904),
    e!(3838), e!(3839), e!(1102), e!(3875), e!(3883), e!(166), e!(2756), e!(4165), e!(167), e!(2757), e!(4157), e!(6104), e!(6111), e!(7804), e!(2402), e!(2403), e!(3972), e!(5371), e!(3992), e!(3993), e!(3158), e!(6011), e!(3994), e!(8244), e!(6577),
    e!(4041), e!(4094), e!(8598), e!(4097), e!(4105), e!(4108), e!(4119), e!(4137), e!(4127), e!(4116), e!(4124), e!(4126), e!(7325), e!(4133), e!(4135), e!(6012), e!(4195), e!(7994), e!(3403), e!(4221), e!(842), e!(846), e!(3075), e!(3763), e!(8303),
    e!(4259), e!(9084), e!(4264), e!(4266), e!(692), e!(694), e!(4731), e!(4269), e!(1474), e!(2766), e!(2413), e!(7072), e!(7811), e!(7859), e!(3448), e!(5453), e!(5836), e!(362), e!(6431), e!(8715), e!(6338), e!(4515), e!(4526), e!(3120), e!(4525),
    e!(7304), e!(4531), e!(3121), e!(4516), e!(4530), e!(4527), e!(7306), e!(4535), e!(4538), e!(4532), e!(2922), e!(5264), e!(1581), e!(4585), e!(4741), e!(4809), e!(3105), e!(4750), e!(2951), e!(3248), e!(3251), e!(4279), e!(4759), e!(4756), e!(837),
    e!(8191), e!(4049), e!(4047), e!(4050), e!(2514), e!(7228), e!(6696), e!(4962), e!(5009), e!(5053), e!(3247), e!(3258), e!(5039), e!(5369), e!(9085), e!(6490), e!(8424), e!(3522), e!(850), e!(3802), e!(4800), e!(669), e!(5156), e!(8617), e!(6244),
    e!(1150), e!(6824), e!(5395), e!(5394), e!(3471), e!(3473), e!(1828), e!(1827), e!(3481), e!(8358), e!(5491), e!(8583), e!(3058), e!(5497), e!(5496), e!(5477), e!(1694), e!(5505), e!(1695), e!(5520), e!(80), e!(5530), e!(5532), e!(5524), e!(5529),
    e!(3404), e!(4220), e!(5522), e!(6512), e!(1021), e!(3491), e!(3525), e!(4303), e!(5430), e!(5550), e!(7345), e!(3331), e!(3330), e!(7349), e!(7352), e!(6109), e!(2518), e!(5537), e!(1175), e!(5584), e!(5592), e!(6090), e!(6788), e!(9065), e!(9105),
    e!(5619), e!(1005), e!(5612), e!(3783), e!(5659), e!(1259), e!(1706), e!(5635), e!(907), e!(3869), e!(4792), e!(5162), e!(5354), e!(8373), e!(5689), e!(3708), e!(5692), e!(7530), e!(363), e!(1941), e!(2933), e!(2935), e!(4204), e!(4762), e!(6679),
    e!(7200), e!(5830), e!(6885), e!(6887), e!(5837), e!(5877), e!(2835), e!(7071), e!(7048), e!(7054), e!(6409), e!(5984), e!(4617), e!(3324), e!(3326), e!(6913), e!(6082), e!(6197), e!(7053), e!(7057), e!(25), e!(4565), e!(4569), e!(6617), e!(7651),
    e!(6281), e!(8691), e!(3426), e!(5188), e!(6280), e!(6291), e!(6294), e!(6286), e!(2666), e!(4517), e!(708), e!(6394), e!(690), e!(2977), e!(6389), e!(6402), e!(2947), e!(6415), e!(6417), e!(6395), e!(6400), e!(6387), e!(6413), e!(2344), e!(6429),
    e!(6432), e!(6447), e!(7606), e!(6462), e!(433), e!(8714), e!(2996), e!(6464), e!(6466), e!(3833), e!(4736), e!(4803), e!(5342), e!(9097), e!(8679), e!(6558), e!(6555), e!(6591), e!(6593), e!(6636), e!(6638), e!(8936), e!(6660), e!(6674), e!(3597),
    e!(6667), e!(6655), e!(6671), e!(6658), e!(1344), e!(6662), e!(548), e!(550), e!(1068), e!(6720), e!(6023), e!(6722), e!(3862), e!(4586), e!(7666), e!(6337), e!(6586), e!(6626), e!(6630), e!(6802), e!(6921), e!(6925), e!(6926), e!(6929), e!(6931),
    e!(7131), e!(6845), e!(6842), e!(5253), e!(5256), e!(5259), e!(3664), e!(8355), e!(6806), e!(6136), e!(6938), e!(6774), e!(1349), e!(1353), e!(1355), e!(6941), e!(6939), e!(7001), e!(7000), e!(4214), e!(6996), e!(4849), e!(7235), e!(7003), e!(6993),
    e!(393), e!(400), e!(871), e!(1181), e!(1183), e!(1190), e!(1196), e!(7017), e!(1195), e!(1861), e!(7021), e!(2010), e!(3811), e!(1894), e!(6187), e!(6199), e!(6204), e!(6212), e!(7313), e!(4092), e!(4821), e!(2011), e!(6228), e!(6188), e!(6213),
    e!(7314), e!(5705), e!(5707), e!(7043), e!(9032), e!(8271), e!(9030), e!(2881), e!(2829), e!(8517), e!(6787), e!(6113), e!(6129), e!(7047), e!(7078), e!(7080), e!(8166), e!(8170), e!(8168), e!(7083), e!(1019), e!(2450), e!(7145), e!(7144), e!(5765),
    e!(6246), e!(7183), e!(3085), e!(3091), e!(3094), e!(5379), e!(7204), e!(7220), e!(7215), e!(6995), e!(6998), e!(7276), e!(7271), e!(343), e!(7967), e!(7340), e!(105), e!(3254), e!(7475), e!(7476), e!(7404), e!(7406), e!(7413), e!(7543), e!(7401),
    e!(7409), e!(7464), e!(7467), e!(7470), e!(7491), e!(7534), e!(6425), e!(6426), e!(1145), e!(5622), e!(7559), e!(8527), e!(7460), e!(7459), e!(7527), e!(7551), e!(7552), e!(7553), e!(5447), e!(7554), e!(5445), e!(5608), e!(6461), e!(4787), e!(6339),
    e!(1057), e!(2556), e!(5233), e!(1573), e!(1569), e!(7277), e!(2647), e!(3734), e!(7098), e!(7103), e!(7716), e!(7722), e!(6525), e!(6528), e!(834), e!(898), e!(3019), e!(3841), e!(3989), e!(282), e!(327), e!(974), e!(1729), e!(2571), e!(3976),
    e!(5587), e!(5621), e!(2577), e!(1419), e!(6427), e!(6428), e!(1421), e!(1423), e!(1422), e!(7590), e!(7587), e!(7659), e!(7676), e!(7650), e!(6367), e!(7661), e!(6384), e!(222), e!(7872), e!(6181), e!(7903), e!(7901), e!(7948), e!(7949), e!(487),
    e!(8129), e!(491), e!(7944), e!(7976), e!(7970), e!(5277), e!(6701), e!(8108), e!(7951), e!(8111), e!(8155), e!(8146), e!(2677), e!(4011), e!(6950), e!(5911), e!(8153), e!(17), e!(19), e!(3537), e!(4013), e!(8142), e!(8148), e!(8254), e!(1670),
    e!(2874), e!(3035), e!(4595), e!(4615), e!(4630), e!(8169), e!(8377), e!(8286), e!(5677), e!(4765), e!(8313), e!(8333), e!(5633), e!(4760), e!(4758), e!(8368), e!(8407), e!(8411), e!(7041), e!(1378), e!(8504), e!(8503), e!(8536), e!(8621), e!(8625),
    e!(8641), e!(5685), e!(9004), e!(9007), e!(8460), e!(8459), e!(6501), e!(8470), e!(3099), e!(3101), e!(6601), e!(6603), e!(9068),
];

#[rustfmt::skip]
pub(crate) static ATTRIBUTES: [(AttributeName, u16, bool); 3855] = [
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Accesskey, 982, false),
    (AttributeName::Alt, 982, false),
    (AttributeName::Class, 982, false),
    (AttributeName::Coords, 982, false),
    (AttributeName::Href, 982, false),
    (AttributeName::Nohref, 52, false),
    (AttributeName::Onblur, 982, false),
    (AttributeName::Onclick, 982, false),
    (AttributeName::Ondblclick, 982, false),
    (AttributeName::Onfocus, 982, false),
    (AttributeName::Onkeydown, 982, false),
    (AttributeName::Onkeypress, 982, false),
    (AttributeName::Onkeyup, 982, false),
    (AttributeName::Onmousedown, 982, false),
    (AttributeName::Onmousemove, 982, false),
    (AttributeName::Onmouseout, 982, false),
    (AttributeName::Onmouseover, 982, false),
    (AttributeName::Onmouseup, 982, false),
    (AttributeName::Shape, 53, false),
    (AttributeName::Style, 982, false),
    (AttributeName::Tabindex, 982, false),
    (AttributeName::Title, 982, false),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::EditHeight, 982, false),
    (AttributeName::EditWidth, 982, false),
    (AttributeName::Editfit, 489, false),
    (AttributeName::Editscale, 982, false),
    (AttributeName::Filename, 982, false),
    (AttributeName::Fit, 489, false),
    (AttributeName::Generator, 982, false),
    (AttributeName::Height, 982, false),
    (AttributeName::HtmlFit, 489, false),
    (AttributeName::HtmlHeight, 982, false),
    (AttributeName::HtmlScale, 982, false),
    (AttributeName::HtmlWidth, 982, false),
    (AttributeName::Notation, 490, false),
    (AttributeName::Scale, 982, false),
    (AttributeName::Width, 982, false),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Class, 982, false),
    (AttributeName::Name, 982, false),
    (AttributeName::Onclick, 982, false),
    (AttributeName::Ondblclick, 982, false),
    (AttributeName::Onkeydown, 982, false),
    (AttributeName::Onkeypress, 982, false),
    (AttributeName::Onkeyup, 982, false),
    (AttributeName::Onmousedown, 982, false),
    (AttributeName::Onmousemove, 982, false),
    (AttributeName::Onmouseout, 982, false),
    (AttributeName::Onmouseover, 982, false),
    (AttributeName::Onmouseup, 982, false),
    (AttributeName::Style, 982, false),
    (AttributeName::Title, 982, false),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Si, 982, false),
    (AttributeName::View, 976, false),
    (AttributeName::Break, 113, false),
    (AttributeName::KeepWithPrevious, 572, false),
    (AttributeName::Colsep, 898, false),
    (AttributeName::Float, 462, false),
    (AttributeName::Frame, 471, false),
    (AttributeName::HelpEntry, 982, false),
    (AttributeName::Orient, 645, false),
    (AttributeName::Pgwide, 982, false),
    (AttributeName::Rowsep, 898, false),
    (AttributeName::Tabstyle, 982, false),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Align, 24, false),
    (AttributeName::Bgcolor, 982, false),
    (AttributeName::Colname, 982, false),
    (AttributeName::Colsep, 898, false),
    (AttributeName::Morerows, 982, false),
    (AttributeName::Nameend, 982, false),
    (AttributeName::Namest, 982, false),
    (AttributeName::Rotate, 982, false),
    (AttributeName::Rowsep, 898, false),
    (AttributeName::Spanname, 982, false),
    (AttributeName::Valign, 969, false),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::ResolutionPolicy, 734, false),
    (AttributeName::ShowContent, 801, false),
    (AttributeName::ShowResourceAliasName, 802, false),
    (AttributeName::ShowResourceCategory, 803, false),
    (AttributeName::ShowResourceLongName, 804, false),
    (AttributeName::ShowResourceNumber, 805, false),
    (AttributeName::ShowResourcePage, 806, false),
    (AttributeName::ShowResourceShortName, 807, false),
    (AttributeName::ShowResourceType, 808, false),
    (AttributeName::ShowSee, 809, false),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Si, 982, false),
    (AttributeName::View, 976, false),
    (AttributeName::Break, 113, false),
    (AttributeName::KeepWithPrevious, 572, false),
    (AttributeName::AllowBreak, 982, false),
    (AttributeName::Float, 462, false),
    (AttributeName::HelpEntry, 982, false),
    (AttributeName::Pgwide, 670, false),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Si, 982, false),
    (AttributeName::View, 976, false),
    (AttributeName::Break, 113, false),
    (AttributeName::KeepWithPrevious, 572, false),
    (AttributeName::Frame, 471, false),
    (AttributeName::HelpEntry, 982, false),
    (AttributeName::Pgwide, 670, false),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Uuid, 982, false),
    (AttributeName::Si, 982, false),
    (AttributeName::View, 976, false),
    (AttributeName::Break, 113, false),
    (AttributeName::KeepWithPrevious, 572, false),
    (AttributeName::HelpEntry, 982, false),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Align, 24, false),
    (AttributeName::Colname, 982, false),
    (AttributeName::Colnum, 982, false),
    (AttributeName::Colsep, 898, false),
    (AttributeName::Colwidth, 982, false),
    (AttributeName::Rowsep, 898, false),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::BindingTime, 73, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Sd, 982, false),
    (AttributeName::ShortLabel, 703, false),
    (AttributeName::Base, 527, false),
    (AttributeName::EnumTable, 726, false),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Si, 982, false),
    (AttributeName::View, 976, false),
    (AttributeName::Break, 113, false),
    (AttributeName::KeepWithPrevious, 572, false),
    (AttributeName::Rowsep, 898, false),
    (AttributeName::Valign, 969, false),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Si, 982, false),
    (AttributeName::View, 976, false),
    (AttributeName::Break, 113, false),
    (AttributeName::KeepWithPrevious, 572, false),
    (AttributeName::HelpEntry, 982, false),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::BindingTime, 73, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Sd, 982, false),
    (AttributeName::ShortLabel, 703, false),
    (AttributeName::IntervalType, 555, false),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Si, 982, false),
    (AttributeName::View, 976, false),
    (AttributeName::Break, 113, false),
    (AttributeName::KeepWithPrevious, 572, false),
    (AttributeName::Type, 587, false),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Si, 982, false),
    (AttributeName::View, 976, false),
    (AttributeName::Break, 113, false),
    (AttributeName::KeepWithPrevious, 572, false),
    (AttributeName::NoteType, 640, false),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 705, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 440, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 0, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 121, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 62, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 64, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 728, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 12, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 13, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 14, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 16, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 19, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 715, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 793, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 928, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 23, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 858, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 65, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 31, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 36, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 37, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 35, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 38, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 827, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 39, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 550, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 551, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 49, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 943, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 704, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 47, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 42, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 188, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 628, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 44, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 933, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 581, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 54, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 394, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 67, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 48, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 695, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 650, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 5, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 59, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 172, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 526, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 60, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 61, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 68, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 761, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 386, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 72, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 153, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 409, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 402, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 63, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 76, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 77, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 87, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 83, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 972, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 90, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 79, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 89, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 436, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 405, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 85, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 622, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 88, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 91, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 84, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 954, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 93, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 95, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 94, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 103, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 105, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 108, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 110, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 393, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 130, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 106, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 119, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 45, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 118, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 190, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 30, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 32, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 785, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 488, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 797, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 122, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 789, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 123, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 790, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 124, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 3, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 21, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 521, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 125, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 796, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 126, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 795, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 127, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 741, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 869, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 683, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 133, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 964, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 135, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 138, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 713, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 139, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 654, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 420, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 850, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 886, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 144, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 149, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 597, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 689, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 150, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 146, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 426, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 431, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 46, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 401, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 151, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 154, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 327, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 26, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 155, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 158, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 171, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 163, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 164, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 166, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 168, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 169, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 137, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 434, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 9, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 740, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 946, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 970, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 949, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 43, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 4, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 518, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 199, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 197, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 214, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 209, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 211, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 210, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 114, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 219, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 893, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 227, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 262, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 341, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 173, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 228, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 230, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 229, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 231, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 233, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 238, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 239, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 240, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 298, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 279, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 244, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 941, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 246, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 249, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 247, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 222, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 251, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 250, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 252, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 255, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 256, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 258, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 259, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 261, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 475, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 92, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 263, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 882, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 253, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 260, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 776, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 348, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 354, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 358, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 271, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 276, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 275, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 273, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 272, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 331, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 274, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 277, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 284, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 362, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 285, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 569, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 288, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 896, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 287, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 294, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 292, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 242, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 300, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 302, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 306, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 307, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 308, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 309, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 310, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 312, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 351, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 313, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 314, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 316, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 315, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 317, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 350, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 318, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 304, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 319, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 320, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 281, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 321, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 323, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 326, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 325, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 223, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 363, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 345, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 329, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 330, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 301, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 333, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 343, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 334, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 335, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 336, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 338, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 340, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 339, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 342, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 344, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 347, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 291, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 352, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 357, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 225, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 353, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 232, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 356, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 364, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 365, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 369, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 372, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 370, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 376, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 374, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 686, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 791, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 373, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 379, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 385, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 820, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 854, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 384, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 478, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 383, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 381, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 380, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 185, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 389, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 655, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 648, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 418, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 419, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 504, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 883, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 411, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 395, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 397, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 403, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 406, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 408, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 400, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 407, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 549, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 390, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 2, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 414, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 929, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 111, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 1, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 421, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 963, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 428, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 936, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 120, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 700, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 817, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 437, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 438, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 947, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 216, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 444, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 445, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 449, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 620, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 508, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 452, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 627, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 455, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 940, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 458, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 456, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 460, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 461, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 459, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 464, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 699, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 876, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 465, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 466, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 467, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 473, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 472, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 20, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 660, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 638, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 777, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 588, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 129, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 477, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 482, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 485, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 487, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 676, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 723, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 479, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 501, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 502, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 507, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 505, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 506, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 897, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 524, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 198, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 519, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 522, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 528, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 921, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 529, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 531, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 530, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 779, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 532, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 176, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 533, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 538, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 537, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 540, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 548, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 878, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 621, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 41, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 189, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 755, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 136, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 194, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 553, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 557, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 559, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 174, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 567, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 566, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 570, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 576, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 577, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 580, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 583, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 584, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 582, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 586, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 585, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 375, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 499, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 589, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 601, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 602, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 417, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 604, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 450, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 611, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 610, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 612, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 439, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 615, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 768, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 862, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 623, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 735, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 849, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 881, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 625, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 633, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 634, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 853, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 131, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 605, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 631, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 635, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 930, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 269, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 870, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 922, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 6, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 649, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 739, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 693, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 8, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 794, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 818, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 651, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 509, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 764, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 659, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 664, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 665, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 666, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 667, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 671, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 674, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 685, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 675, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 677, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 672, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 682, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 769, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 681, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 152, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 691, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 156, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 696, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 698, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 702, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 134, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 218, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 706, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 710, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 712, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 845, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 701, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 895, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 7, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 717, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 719, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 718, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 724, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 51, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 727, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 733, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 843, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 736, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 656, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 99, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 451, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 747, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 744, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 748, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 751, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 754, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 594, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 17, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 944, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 760, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 759, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 177, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 765, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 767, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 770, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 771, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 773, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 774, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 780, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 778, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 74, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 503, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 792, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 810, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 811, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 812, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 10, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 852, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 517, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 899, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 819, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 593, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 821, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 50, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 967, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 824, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 245, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 382, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 966, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 829, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 832, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 33, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 836, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 839, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 837, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 844, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 842, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 840, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 841, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 29, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 846, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 938, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 707, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 520, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 857, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 680, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 860, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 863, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 182, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 864, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 868, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 965, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 694, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 873, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 871, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 875, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 880, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 879, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 145, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 887, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 890, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 891, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 415, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 116, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 554, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 927, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 454, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 470, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 69, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 70, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 914, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 957, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 919, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 918, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Align, 24, false),
    (AttributeName::Cols, 552, false),
    (AttributeName::Colsep, 898, false),
    (AttributeName::Rowsep, 898, false),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 661, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 894, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 925, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 931, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 926, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 161, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 178, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 932, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 162, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 934, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 157, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 523, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 960, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 959, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 438, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::xmlns, 982, true),
    (AttributeName::xmlnsXsi, 982, true),
    (AttributeName::xsiSchemalocation, 982, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Color, 982, false),
    (AttributeName::Font, 392, false),
    (AttributeName::Type, 391, false),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 948, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 859, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 620, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 674, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 704, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 663, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 664, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 21, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 952, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 245, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 604, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 831, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 50, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 967, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 735, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 946, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::Index, 697, false),
    (AttributeName::Dest, 792, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::NamePattern, 982, false),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::Dest, 90, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::Dest, 649, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 982, false),
    (AttributeName::Dest, 982, false),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::Dest, 509, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::Dest, 508, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::Dest, 511, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::Dest, 549, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::L, 573, true),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::L, 573, true),
    (AttributeName::xmlSpace, 980, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::Dest, 622, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::Dest, 869, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::Dest, 119, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::Dest, 67, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::Dest, 693, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::Dest, 690, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::Dest, 695, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Gid, 982, false),
    (AttributeName::xmlSpace, 980, false),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::Dest, 866, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::Dest, 867, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::Dest, 877, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::Dest, 393, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::TexRender, 982, false),
    (AttributeName::Type, 982, false),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Base, 527, false),
    (AttributeName::Dest, 972, true),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::BlueprintValue, 982, false),
    (AttributeName::xmlSpace, 980, false),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Level, 703, false),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::ItemLabelPos, 565, false),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::IntervalType, 555, false),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Validity, 758, false),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::L, 573, false),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::NamePattern, 982, false),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::Valign, 969, false),
    (AttributeName::S, 982, false),
    (AttributeName::T, 196, false),
    (AttributeName::MimeType, 982, false),
];

#[rustfmt::skip]
pub(crate) static VERSION_INFO: [u32; 9537] = [
    0x1ffff8, 0x1ffff8, 0x1ffff8, 0x1ffff8, 0x1ffe00, 0x000e00, 0x1c0000, 0x1fffff, 0x1ffc00, 0x1fe000,
    0x1fe000, 0x1fe000, 0x100000, 0x100000, 0x100000, 0x100000, 0x180000, 0x1fffff, 0x1ffe00, 0x1f0000,
    0x1e0000, 0x1fff00, 0x1fffff, 0x1fffff, 0x1fffff, 0x1e0000, 0x1fffff, 0x1fe000, 0x1fff00, 0x1fffff,
    0x1fffff, 0x1fffff, 0x1fffff, 0x1ffff8, 0x1fe000, 0x1fe000, 0x1fe000, 0x1fe000, 0x1fffff, 0x1fffff,
    0x1fffff, 0x1fffff, 0x1c0000, 0x1fffc0, 0x1fffff, 0x1fff00, 0x1fffff, 0x1f0000, 0x1fc000, 0x1fc000,
    0x1fc000, 0x1fc000, 0x1fc000, 0x1fc000, 0x1f0000, 0x1fc000, 0x1fc000, 0x1fc000, 0x1fc000, 0x1f0000,
    0x180000, 0x1e0000, 0x1fffff, 0x018000, 0x1f8000, 0x1f8000, 0x1fffff, 0x1fffff, 0x1ffff8, 0x1fffff,
    0x1fffff, 0x1f8000, 0x1fffc0, 0x1ffff8, 0x001000, 0x001c00, 0x001c00, 0x1f0000, 0x1f0000, 0x1f0000,
    0x1f0000, 0x1e0000, 0x1e0000, 0x1e0000, 0x1e0000, 0x1f0000, 0x1f0000, 0x1e0000, 0x100000, 0x1f0000,
    0x100000, 0x1f0000, 0x01fc00, 0x100000, 0x100000, 0x100000, 0x1f0000, 0x1f0000, 0x1fe000, 0x1fe000,
    0x1fe000, 0x1f8000, 0x1e0000, 0x1f0000, 0x1fe000, 0x1fffff, 0x1fff00, 0x1fffc0, 0x1fffff, 0x1fffff,
    0x180000, 0x1fe000, 0x1fe000, 0x1e0000, 0x1e0000, 0x1ff000, 0x1ff000, 0x1e0000, 0x07e000, 0x040000,
    0x1fffc0, 0x1fffc0, 0x1e0000, 0x180000, 0x180000, 0x1e0000, 0x1e0000, 0x1e0000, 0x1e0000, 0x1fe000,
    0x1fe000, 0x1fc000, 0x1fffc0, 0x1fffc0, 0x1fff00, 0x1fff00, 0x1fffc0, 0x1fffc0, 0x1e0000, 0x1fc000,
    0x1fffc0, 0x1fffc0, 0x1fffc0, 0x1fffc0, 0x1fffc0, 0x1fe000, 0x1fc000, 0x1fffc0, 0x1fc000, 0x1fc000,
    0x1fffc0, 0x1e0000, 0x1fffc0, 0x1fffc0, 0x1e0000, 0x1fffc0, 0x1f8000, 0x100000, 0x1c0000, 0x100000,
    0x1fc000, 0x100000, 0x1fc000, 0x100000, 0x1f8000, 0x100000, 0x1fc000, 0x1fc000, 0x1fffc0, 0x1fffc0,
    0x1fffc0, 0x1fff00, 0x1fffc0, 0x1fffc0, 0x1f0000, 0x1fffc0, 0x1fffc0, 0x1fffc0, 0x1fff00, 0x1fffc0,
    0x1fc000, 0x1fffc0, 0x1fffc0, 0x1fffc0, 0x1fffc0, 0x1f0000, 0x1fffc0, 0x1fe000, 0x1fffc0, 0x1fffc0,
    0x1e0000, 0x1e0000, 0x1fff00, 0x1fff00, 0x1fff00, 0x1fff00, 0x1fff00, 0x1fff00, 0x1fffc0, 0x1fff00,
    0x1fff00, 0x1fc000, 0x00c000, 0x1fffc0, 0x1fc000, 0x1fc000, 0x1fff00, 0x1fff00, 0x1fffc0, 0x1fffc0,
    0x1fff00, 0x1fff00, 0x1fff00, 0x1e0000, 0x1fff00, 0x1fff00, 0x1fff00, 0x1fff00, 0x1fff00, 0x1fff00,
    0x1f0000, 0x1fe000, 0x1fff00, 0x1fffc0, 0x1fc000, 0x1fffc0, 0x1fffc0, 0x1fffc0, 0x1fc000, 0x1e0000,
    0x180000, 0x180000, 0x180000, 0x180000, 0x180000, 0x180000, 0x1fffc0, 0x1fc000, 0x1fffc0, 0x1fff00,
    0x1fff00, 0x1e0000, 0x1fff00, 0x1fc000, 0x1fffc0, 0x1fffc0, 0x1fffc0, 0x1fffc0, 0x1fffc0, 0x1fffc0,
    0x1fffc0, 0x1fffc0, 0x1fe000, 0x1fe000, 0x1fff00, 0x1fff00, 0x1fff00, 0x1fff00, 0x1fffc0, 0x1fffc0,
    0x1fff00, 0x1fff00, 0x1fff00, 0x1fff00, 0x1fffc0, 0x1fffc0, 0x1c0000, 0x1fff00, 0x1fff00, 0x1fff00,
    0x1fff00, 0x1fffc0, 0x1fffc0, 0x1fff00, 0x1fff00, 0x1fffc0, 0x1fffc0, 0x1fffc0, 0x1fffc0, 0x1fffc0,
    0x1fc000, 0x1fc000, 0x180000, 0x1fffc0, 0x1fffc0, 0x1f0000, 0x1fffc0, 0x002000, 0x1fc000, 0x1fc000,
    0x01c000, 0x1fffc0, 0x1f0000, 0x1fffc0, 0x1fffc0, 0x1fc000, 0x1e0000, 0x1fffc0, 0x1fffc0, 0x1fffc0,
    0x03fc00, 0x1c0000, 0x1c0000, 0x180000, 0x180000, 0x180000, 0x180000, 0x180000, 0x180000, 0x180000,
    0x180000, 0x100000, 0x1c0000, 0x180000, 0x180000, 0x1c0000, 0x1c0000, 0x180000, 0x180000, 0x180000,
    0x180000, 0x180000, 0x1fffc0, 0x1fffc0, 0x1fffc0, 0x1fff00, 0x1fff00, 0x1fffc0, 0x1fffc0, 0x100000,
    0x1fffc0, 0x1fffc0, 0x1fffc0, 0x1fffc0, 0x1fffc0, 0x1fe000, 0x1fff00, 0x00c000, 0x1fc000, 0x1e0000,
    0x1e0000, 0x1fffc0, 0x1fffc0, 0x1fffc0, 0x1fffc0, 0x010000, 0x010000, 0x010000, 0x1e0000, 0x1e0000,
    0x1e0000, 0x1e0000, 0x1e0000, 0x1f8000, 0x1fff80, 0x1fffff, 0x1f0000, 0x1ffc00, 0x1fffff, 0x1fffff,
    0x1fffff, 0x1fffff, 0x1fffc0, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fff00, 0x1f0000, 0x1f0000,
    0x1f0000, 0x1fe000, 0x1fffff, 0x1fffff, 0x1e0000, 0x1f8000, 0x018000, 0x1e0000, 0x1f0000, 0x1fffff,
    0x1ffe00, 0x001000, 0x1f0000, 0x1c0000, 0x1c0000, 0x1fffff, 0x1ffffc, 0x1fffff, 0x1fffff, 0x1fffff,
    0x1ffff8, 0x1ffff8, 0x1ffff8, 0x1ffff8, 0x100000, 0x1f0000, 0x100000, 0x1c0000, 0x180000, 0x1fffff,
    0x1ff800, 0x1ffff0, 0x1ffff0, 0x1fffc0, 0x100000, 0x1fffc0, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fff00,
    0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1f0000, 0x180000, 0x180000, 0x1f0000, 0x1f0000, 0x100000,
    0x100000, 0x100000, 0x100000, 0x180000, 0x180000, 0x100000, 0x100000, 0x100000, 0x100000, 0x100000,
    0x100000, 0x180000, 0x180000, 0x180000, 0x180000, 0x1fffc0, 0x180000, 0x180000, 0x1fffff, 0x001c00,
    0x001c00, 0x01fc00, 0x180000, 0x1e0000, 0x1fffff, 0x1f0000, 0x1f8000, 0x1f0000, 0x1ffff8, 0x1fff00,
    0x1ffff8, 0x100000, 0x1fffff, 0x1fffff, 0x1ffff8, 0x1ffff8, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff,
    0x1fffff, 0x1e0000, 0x1e0000, 0x1c0000, 0x1c0000, 0x1c0000, 0x1ffe00, 0x1ff000, 0x1f0000, 0x1ffff8,
    0x1fe000, 0x1fffff, 0x1ffff8, 0x1fffff, 0x1fffff, 0x1fffff, 0x180000, 0x180000, 0x1fffff, 0x1e0000,
    0x180000, 0x1fffff, 0x1fffff, 0x1fffff, 0x1e0000, 0x1fffff, 0x1fffff, 0x1fffff, 0x00fc00, 0x00fc00,
    0x00fc00, 0x000c00, 0x00fc00, 0x00fc00, 0x00f000, 0x00fc00, 0x1f0000, 0x1f0000, 0x010000, 0x1e0000,
    0x1f0000, 0x1f0000, 0x1f0000, 0x1f0000, 0x1f0000, 0x1f0000, 0x1ffc00, 0x1ff000, 0x1f0000, 0x1f8000,
    0x1ff000, 0x1f0000, 0x1fffff, 0x000001, 0x1ffff8, 0x1ffc00, 0x1f0000, 0x1fffff, 0x1ffe00, 0x1ffffe,
    0x1fffff, 0x1fffff, 0x1fffff, 0x1ffe00, 0x1ff000, 0x01c000, 0x1e0000, 0x1f0000, 0x1ffc00, 0x001000,
    0x1f8000, 0x1ffe00, 0x1ffe00, 0x1ffff8, 0x001000, 0x1f0000, 0x1f8000, 0x1f8000, 0x008000, 0x008000,
    0x1f0000, 0x1c0000, 0x1f0000, 0x1f8000, 0x1ffe00, 0x1ffe00, 0x01fc00, 0x01fc00, 0x1fff00, 0x01fc00,
    0x1e0000, 0x1fff00, 0x1fffc0, 0x100000, 0x1f0000, 0x1f0000, 0x1f0000, 0x1f0000, 0x1f0000, 0x1f0000,
    0x1f0000, 0x100000, 0x100000, 0x1f0000, 0x1f0000, 0x1fffff, 0x1fffff, 0x1ffff8, 0x000200, 0x1f8000,
    0x1ffc00, 0x01fc00, 0x1e0000, 0x1ffe00, 0x01fe00, 0x1e0000, 0x1e0000, 0x1e0000, 0x1f8000, 0x1e0000,
    0x1fffff, 0x1fffff, 0x007c00, 0x1f0000, 0x1f8000, 0x180000, 0x1ffff8, 0x1f8000, 0x1ffc00, 0x000c00,
    0x1ff000, 0x1c0000, 0x1fc000, 0x1ffe00, 0x1c0000, 0x1c0000, 0x1fe000, 0x1fe000, 0x1fe000, 0x1fe000,
    0x1ffe00, 0x000200, 0x1ffc00, 0x1fff00, 0x1e0000, 0x03fe00, 0x100000, 0x1c0000, 0x0c0000, 0x1c0000,
    0x1c0000, 0x1c0000, 0x100000, 0x1fe000, 0x1fffff, 0x1fffff, 0x1fffff, 0x000001, 0x000001, 0x000001,
    0x1e0000, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1f0000, 0x1f0000, 0x1fffff,
    0x1fffff, 0x1fffff, 0x1fffff, 0x1fff00, 0x1f0000, 0x1f0000, 0x1ff000, 0x00f000, 0x00f000, 0x00f000,
    0x1e0000, 0x1f0000, 0x1e0000, 0x1f8000, 0x1fff00, 0x000200, 0x000200, 0x01fc00, 0x1e0000, 0x1fffff,
    0x1fffff, 0x1c0000, 0x1fffff, 0x1ffffe, 0x1ffff8, 0x1fffc0, 0x1ffffc, 0x1ffffc, 0x1ffe00, 0x1ffe00,
    0x1f8000, 0x1fffff, 0x1ffff8, 0x1fffff, 0x1ffffc, 0x100000, 0x1fffff, 0x1f0000, 0x1f0000, 0x1fe000,
    0x1fffff, 0x1fc000, 0x1fffff, 0x1fff00, 0x1fff00, 0x1ffff0, 0x1ffff8, 0x1fffff, 0x1fffff, 0x1fc000,
    0x1fc000, 0x1fffff, 0x1ffff0, 0x1fe000, 0x1fff00, 0x1fffff, 0x1ffff0, 0x1fe000, 0x1fffff, 0x1ffff0,
    0x1fffff, 0x1ffff8, 0x1ffff8, 0x1ffff8, 0x1ffff8, 0x1ffff8, 0x1ffff8, 0x1ffff0, 0x1fffff, 0x1fff00,
    0x1ff800, 0x1fffff, 0x1ff800, 0x100000, 0x1fff00, 0x1fe000, 0x1f0000, 0x1f0000, 0x1fe000, 0x1f0000,
    0x1fff00, 0x1fff00, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fe000, 0x1fffff, 0x1fff00,
    0x1fff00, 0x1fffff, 0x1fffff, 0x1c0000, 0x1fff00, 0x1fff00, 0x1fff00, 0x1ffff8, 0x1ffffc, 0x100000,
    0x1ffffc, 0x1f0000, 0x1f0000, 0x1fe000, 0x1ffffc, 0x1fc000, 0x1ffffc, 0x1fff00, 0x1fff00, 0x1ffff0,
    0x1ffff8, 0x1ffffc, 0x1ffffc, 0x1fc000, 0x1fc000, 0x1ffffc, 0x1ffff0, 0x1fe000, 0x1fff00, 0x1ffffc,
    0x1ffff0, 0x1fe000, 0x1ffffc, 0x1ffff0, 0x1ffffc, 0x1ffff8, 0x1ffff8, 0x1ffff8, 0x1ffff8, 0x1ffff8,
    0x1ffff8, 0x1ffff0, 0x1ffffc, 0x1fff00, 0x1ff800, 0x1ffffc, 0x1ff800, 0x100000, 0x1fff00, 0x1fe000,
    0x1f0000, 0x1f0000, 0x1fe000, 0x1f0000, 0x1fff00, 0x1fff00, 0x1ffffc, 0x1ffffc, 0x1ffffc, 0x1ffffc,
    0x1ffffc, 0x1fe000, 0x1ffffc, 0x1fff00, 0x1fff00, 0x1ffffc, 0x1ffffc, 0x1c0000, 0x1fff00, 0x1fff00,
    0x1fff00, 0x1ffff8, 0x1ffff8, 0x1fffff, 0x000001, 0x000001, 0x1ffffe, 0x1ffffe, 0x1fffff, 0x1fffff,
    0x000001, 0x1ffffe, 0x1fffff, 0x1fffff, 0x000001, 0x1ffffe, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff,
    0x1fffff, 0x1fffff, 0x000001, 0x1ffffe, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff,
    0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x000001, 0x1ffffe, 0x1fffff, 0x1fffff, 0x1fffff,
    0x000001, 0x1ffffe, 0x1ffff8, 0x1fffff, 0x1fffff, 0x1fffff, 0x000001, 0x1ffffe, 0x1fffff, 0x1fffff,
    0x1fffff, 0x1fffff, 0x1fff80, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1ffffe, 0x1fffff,
    0x1fffff, 0x1fffff, 0x100000, 0x1fffff, 0x1ff800, 0x1ff800, 0x1fff00, 0x1ff800, 0x1fffff, 0x1e0000,
    0x1fffff, 0x1fffff, 0x1ffffc, 0x1ffffc, 0x1ffffc, 0x1ffffc, 0x1fffff, 0x1fffff, 0x000001, 0x000001,
    0x000001, 0x1ffffe, 0x1ffffe, 0x1ffffe, 0x1ffffe, 0x1ffffe, 0x1fffff, 0x000001, 0x000001, 0x1ffffe,
    0x1ffffe, 0x1fffff, 0x000001, 0x1ffffe, 0x1fffff, 0x1fff80, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff,
    0x1fffff, 0x1ffffe, 0x1ffffe, 0x1fffff, 0x1f8000, 0x1fffff, 0x1fffff, 0x000001, 0x000001, 0x180000,
    0x1fffc0, 0x1ffffe, 0x1ffffe, 0x1ffffe, 0x1ffffc, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffc0, 0x1f8000,
    0x1f8000, 0x1f8000, 0x1e0000, 0x1fff00, 0x180000, 0x1fffff, 0x1fffc0, 0x1c0000, 0x1fffc0, 0x1f8000,
    0x1fffff, 0x1f0000, 0x1f0000, 0x1fffff, 0x1fff00, 0x1fffff, 0x1fffff, 0x1fff80, 0x1fffff, 0x1fffff,
    0x1fffff, 0x1fffff, 0x1fffff, 0x1ffffe, 0x1fffff, 0x1fffff, 0x1fffff, 0x100000, 0x1fffff, 0x1ff800,
    0x1ff800, 0x1fff00, 0x1ff800, 0x1fffff, 0x1e0000, 0x1fffff, 0x1ffffc, 0x1ffffc, 0x1ffffc, 0x1ffffc,
    0x1fffff, 0x1fffff, 0x1fffff, 0x000001, 0x000001, 0x000001, 0x1ffffe, 0x1ffffe, 0x1ffffe, 0x1fffff,
    0x000001, 0x1ffffe, 0x1fffff, 0x000001, 0x1ffffe, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fff80, 0x1fffff,
    0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1ffffe, 0x1fffff, 0x1fffff, 0x1fffff, 0x100000, 0x1fffff,
    0x1ff800, 0x1ff800, 0x1fff00, 0x1ff800, 0x1fffff, 0x1e0000, 0x1fffff, 0x1f8000, 0x1fffff, 0x1fffff,
    0x000001, 0x000001, 0x000001, 0x1fff00, 0x1fff00, 0x1ffffe, 0x1ffffe, 0x1ffffe, 0x1fffff, 0x000001,
    0x000001, 0x1ffffe, 0x1ffffe, 0x1fffff, 0x000001, 0x1ff000, 0x1ffffe, 0x1fff00, 0x1fffff, 0x1fff80,
    0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1ffffe, 0x1fffff, 0x1fffff, 0x1fffff, 0x000001,
    0x1fffff, 0x1ffffe, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x000001, 0x000001, 0x000001, 0x000001,
    0x000001, 0x000001, 0x000001, 0x000001, 0x1ffffe, 0x1ffffe, 0x1fffc0, 0x1ffffe, 0x1ffffe, 0x1ffffe,
    0x1fffc0, 0x1ffffe, 0x1ffffe, 0x1fffc0, 0x1fffff, 0x1fffff, 0x1fff80, 0x1fffff, 0x1fffff, 0x1fffff,
    0x1fffff, 0x1fffff, 0x1ffffe, 0x1ffff8, 0x1e0000, 0x1fffff, 0x000001, 0x1ffff8, 0x1ffffe, 0x1ffff8,
    0x1e0000, 0x1fffff, 0x1fffff, 0x1ffffc, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff,
    0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff,
    0x1fffff, 0x1fffff, 0x1fffff, 0x1fff80, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1ffffe,
    0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1ffff8, 0x1fffff, 0x1fff00, 0x1fff80, 0x1fffc0, 0x1fffc0,
    0x1fffc0, 0x1e0000, 0x1fffc0, 0x1fffc0, 0x1fffc0, 0x1fffc0, 0x1fffc0, 0x1fffff, 0x1fffff, 0x1fffff,
    0x1fffff, 0x1fffff, 0x1fffff, 0x1ffffc, 0x1ffffc, 0x1ffffc, 0x1ffff8, 0x1ffff8, 0x1fffc0, 0x1fffff,
    0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff,
    0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff,
    0x1fffff, 0x1fffff, 0x1fffff, 0x000001, 0x1ffffe, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff,
    0x1fffff, 0x1fffff, 0x1fffff, 0x1ffc00, 0x1ffc00, 0x1ffc00, 0x1ffc00, 0x1ffc00, 0x1ffc00, 0x1ffc00,
    0x1ffc00, 0x1ffc00, 0x1e0000, 0x1c0000, 0x1f0000, 0x1fc000, 0x1ffc00, 0x1ff000, 0x1ffc00, 0x1ffc00,
    0x003000, 0x1fc000, 0x1ff000, 0x01fc00, 0x03fc00, 0x000c00, 0x020000, 0x1c0000, 0x1c0000, 0x1fc000,
    0x1fe000, 0x1fc000, 0x00f000, 0x1f8000, 0x1fc000, 0x1fc000, 0x1ff000, 0x1fe000, 0x1fe000, 0x1fe000,
    0x1fe000, 0x1fe000, 0x1fe000, 0x1fe000, 0x1fe000, 0x006000, 0x006000, 0x1fe000, 0x006000, 0x1f8000,
    0x1fe000, 0x006000, 0x1f8000, 0x1f0000, 0x1f0000, 0x1f8000, 0x1f8000, 0x1f8000, 0x1f8000, 0x1f0000,
    0x1f8000, 0x1f0000, 0x1f0000, 0x1fe000, 0x006000, 0x006000, 0x006000, 0x006000, 0x1f8000, 0x1f8000,
    0x1fffff, 0x1fff80, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1ffffe, 0x1e0000, 0x1fff00,
    0x1fe000, 0x1fe000, 0x1fffff, 0x180000, 0x1fffff, 0x1fff00, 0x1fffff, 0x1ffffc, 0x1f0000, 0x1fffff,
    0x1f0000, 0x1e0000, 0x1e0000, 0x1fffff, 0x180000, 0x1f0000, 0x1f0000, 0x1fffff, 0x1fffff, 0x1fff00,
    0x180000, 0x180000, 0x1fffff, 0x1fffff, 0x1fff80, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff,
    0x1ffffe, 0x1ffffe, 0x1ffff8, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff,
    0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x000001, 0x1ffffe, 0x1fffff, 0x1fffff, 0x1fffff,
    0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fff80, 0x1fffff, 0x1fffff, 0x1fffff,
    0x1fffff, 0x1fffff, 0x1ffffe, 0x1ffff8, 0x1e0000, 0x1fffff, 0x000001, 0x1ffff8, 0x1ffffe, 0x1ffff8,
    0x1e0000, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1ffff8, 0x1fffff, 0x1ffff8, 0x1ffff8, 0x1fffff,
    0x1fffff, 0x1fffff, 0x1ffffc, 0x1fffff, 0x1fffff, 0x000001, 0x1ffffe, 0x1fffc0, 0x1fff80, 0x1fffc0,
    0x1fffc0, 0x1fffc0, 0x1fffc0, 0x1fffc0, 0x1fffc0, 0x1fffc0, 0x1fffc0, 0x1fff00, 0x1fffc0, 0x1fffc0,
    0x1fffc0, 0x1fe000, 0x1fe000, 0x1fff00, 0x1fe000, 0x1fffc0, 0x1fff00, 0x1fe000, 0x100000, 0x100000,
    0x1fffc0, 0x100000, 0x1f0000, 0x1fff80, 0x1fe000, 0x1fffc0, 0x1fffc0, 0x1fffc0, 0x1fffc0, 0x1fe000,
    0x1fffc0, 0x1fe000, 0x1fffff, 0x1fffff, 0x1ffffe, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff,
    0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff,
    0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff,
    0x1fffff, 0x1fffff, 0x1fff80, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1ffffe, 0x1fffff,
    0x1fffff, 0x1fffff, 0x1fffff, 0x1ffff8, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fff00, 0x1fffff, 0x1fffff,
    0x1fffff, 0x1fffff, 0x1ffffc, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff,
    0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fff80, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff,
    0x1ffffe, 0x1fff80, 0x1ffff8, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1ffff8, 0x1fffff, 0x1fffff,
    0x000001, 0x1fffc0, 0x1ffffe, 0x1fffc0, 0x1fffc0, 0x1ffffc, 0x1fffc0, 0x1fffff, 0x1fffff, 0x1fffff,
    0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fff80, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff,
    0x1ffffe, 0x1ffffe, 0x1ffffe, 0x1fffc0, 0x1fffff, 0x1ffffe, 0x1ffff8, 0x1fffff, 0x1fffff, 0x1fffff,
    0x1fffff, 0x1fff00, 0x1ffffe, 0x1fffc0, 0x1fffc0, 0x1fffc0, 0x1e0000, 0x1fffc0, 0x1fffc0, 0x1fffff,
    0x1ffffe, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fff80, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff,
    0x1ffffe, 0x1fff80, 0x1ffff8, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1ffff8, 0x1fffff, 0x1fffff,
    0x000001, 0x000001, 0x000001, 0x1fffc0, 0x1ffffe, 0x1fffc0, 0x1fffc0, 0x1ffffc, 0x1fffc0, 0x1e0000,
    0x1ffffe, 0x1ffffe, 0x180000, 0x180000, 0x180000, 0x180000, 0x180000, 0x180000, 0x180000, 0x180000,
    0x180000, 0x180000, 0x180000, 0x100000, 0x180000, 0x180000, 0x180000, 0x180000, 0x180000, 0x180000,
    0x180000, 0x180000, 0x180000, 0x180000, 0x180000, 0x180000, 0x180000, 0x180000, 0x180000, 0x180000,
    0x180000, 0x1ffe00, 0x1ffe00, 0x1ffe00, 0x1ffe00, 0x1ffe00, 0x1ffe00, 0x1ffe00, 0x1ffe00, 0x1ffe00,
    0x1ffe00, 0x001e00, 0x1fe000, 0x01e000, 0x01e000, 0x1e0000, 0x1e0000, 0x1fe000, 0x007c00, 0x007e00,
    0x007e00, 0x000200, 0x01fc00, 0x001000, 0x1c0000, 0x1c0000, 0x1e0000, 0x1fe000, 0x01fc00, 0x1e0000,
    0x1fffff, 0x1fff80, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1ffffe, 0x1ffffe, 0x1ffff8,
    0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff,
    0x1fffff, 0x1fffff, 0x000001, 0x1ffffe, 0x1fffff, 0x1fffff, 0x1fffff, 0x000001, 0x1ffffe, 0x1fffff,
    0x1fff80, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1ffffe, 0x1fffff, 0x1ff000, 0x1fffc0,
    0x1fffc0, 0x1fffff, 0x1fffff, 0x1ffffc, 0x100000, 0x1fffff, 0x1fffff, 0x1fffff, 0x000001, 0x000001,
    0x1f8000, 0x1c0000, 0x1fff80, 0x1fff80, 0x1ffffe, 0x1ffffe, 0x1fffff, 0x1ffff8, 0x1fff80, 0x1ffff8,
    0x1ffff8, 0x1ffff8, 0x1ffff8, 0x1ffff8, 0x1ffff8, 0x1f8000, 0x1f8000, 0x1f8000, 0x1ffff8, 0x1f8000,
    0x180000, 0x1f8000, 0x1f8000, 0x1c0000, 0x1ffff8, 0x1e0000, 0x1f8000, 0x1f8000, 0x1f8000, 0x1ffff8,
    0x1f8000, 0x1ffff8, 0x1f8000, 0x1f8000, 0x1f8000, 0x1f8000, 0x1f8000, 0x1f8000, 0x1f8000, 0x1f8000,
    0x1f8000, 0x1f8000, 0x1f8000, 0x1e0000, 0x1f8000, 0x1f8000, 0x1f8000, 0x1f8000, 0x010000, 0x1e0000,
    0x1f8000, 0x010000, 0x010000, 0x010000, 0x010000, 0x1e0000, 0x1e0000, 0x1f0000, 0x1f8000, 0x010000,
    0x1c0000, 0x1f8000, 0x1f8000, 0x1fffc0, 0x1fffc0, 0x1fffc0, 0x1fffc0, 0x1fffc0, 0x1f8000, 0x1fffc0,
    0x1fffc0, 0x1fffc0, 0x1fffc0, 0x1f0000, 0x1fffc0, 0x1fffc0, 0x1fffc0, 0x1fffc0, 0x1fffc0, 0x1fffc0,
    0x1fffc0, 0x1fffc0, 0x1fffc0, 0x1fffc0, 0x1fffc0, 0x1fffc0, 0x1fffc0, 0x1fffc0, 0x1f8000, 0x1f8000,
    0x1f8000, 0x1fffff, 0x1fff80, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1ffffe, 0x1fffff,
    0x1f8000, 0x1f0000, 0x1fffff, 0x1e0000, 0x1ffffc, 0x1f8000, 0x1e0000, 0x1c0000, 0x1f0000, 0x1fffc0,
    0x1fffc0, 0x1fffc0, 0x1fff00, 0x1ffff8, 0x1fff00, 0x1fff00, 0x1fff80, 0x03fe00, 0x1c0000, 0x1ffffc,
    0x1fffe0, 0x1ffffc, 0x1ffffc, 0x1ffffc, 0x1ffffc, 0x1ffffc, 0x1ffffc, 0x1ffff8, 0x1ffffc, 0x1ffffc,
    0x1ffffc, 0x1ffff8, 0x1ffffc, 0x1ffffc, 0x1ffff8, 0x1ffffc, 0x1ffffc, 0x1ffffc, 0x1ffffc, 0x1ffffc,
    0x1ffffc, 0x1ffffc, 0x1ffffc, 0x1ffffc, 0x1ffffc, 0x1ffffc, 0x1ffffc, 0x1ffe00, 0x1ffe00, 0x1ffe00,
    0x1ffe00, 0x1ffe00, 0x1ffe00, 0x1ffe00, 0x1ffe00, 0x1ffe00, 0x001e00, 0x1ff000, 0x03e000, 0x03fe00,
    0x00f000, 0x00f000, 0x007000, 0x008000, 0x00f000, 0x00f000, 0x003e00, 0x002000, 0x1c0000, 0x1f0000,
    0x1f8000, 0x1fc000, 0x1fc000, 0x1f0000, 0x1fc000, 0x1fc000, 0x1fc000, 0x1fc000, 0x1fc000, 0x1fc000,
    0x1fc000, 0x1fc000, 0x1fc000, 0x1fc000, 0x1fc000, 0x1ec000, 0x100000, 0x1fc000, 0x00c000, 0x1f0000,
    0x01c000, 0x1e0000, 0x1fc000, 0x1fc000, 0x1fc000, 0x018000, 0x018000, 0x018000, 0x1e0000, 0x1fc000,
    0x004000, 0x1fc000, 0x018000, 0x1fffff, 0x1fff80, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff,
    0x1ffffe, 0x1ffffe, 0x1fffc0, 0x1ffffc, 0x1fff00, 0x1fff00, 0x1fffff, 0x1ffffc, 0x1fffff, 0x1fffff,
    0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1ffff8, 0x1ffff8, 0x1ffff8, 0x1ffff8, 0x1fffff,
    0x1fffc0, 0x1fff80, 0x1fffc0, 0x1fffc0, 0x1fffc0, 0x1fffc0, 0x1fffc0, 0x1fffc0, 0x1fffc0, 0x1fe000,
    0x1fffc0, 0x1e0000, 0x1fffc0, 0x1fffc0, 0x1fffc0, 0x1fffc0, 0x1fffc0, 0x1fe000, 0x1fffc0, 0x1e0000,
    0x1f8000, 0x1fffc0, 0x1fffc0, 0x100000, 0x1fffc0, 0x1fffc0, 0x1f8000, 0x1fffff, 0x1fff80, 0x1fffff,
    0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1ffffe, 0x1fff80, 0x1ffff8, 0x1fffff, 0x1fffff, 0x1fffff,
    0x1fffff, 0x1ffff8, 0x1fffff, 0x1fffff, 0x000001, 0x1fffc0, 0x1ffffe, 0x1fffc0, 0x1fffc0, 0x1ffffc,
    0x1fffc0, 0x1e0000, 0x1fff00, 0x1fffff, 0x1fffff, 0x1fff80, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff,
    0x1fffff, 0x1ffffe, 0x1fff80, 0x1ffff8, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1ffff8, 0x1fffff,
    0x1fffff, 0x000001, 0x000001, 0x1fffc0, 0x1ffffe, 0x1fffc0, 0x1fffc0, 0x1ffffc, 0x1fffc0, 0x1e0000,
    0x1ffffe, 0x1f0000, 0x1f0000, 0x1f0000, 0x1f0000, 0x1f0000, 0x180000, 0x1f0000, 0x1f0000, 0x1f0000,
    0x1f0000, 0x1f0000, 0x1f0000, 0x1f0000, 0x1f0000, 0x1f0000, 0x1f0000, 0x1f0000, 0x1f0000, 0x1f0000,
    0x1f0000, 0x1f0000, 0x1f0000, 0x1f0000, 0x1f0000, 0x1f0000, 0x1f0000, 0x1f0000, 0x1ffff8, 0x1fff80,
    0x1ffff8, 0x1ffff8, 0x1ffff8, 0x1ffff8, 0x1ffff8, 0x1ffff8, 0x1f8000, 0x1f8000, 0x1f8000, 0x1ffff8,
    0x1f8000, 0x180000, 0x1f8000, 0x1ffff8, 0x1ffff8, 0x1fe000, 0x1fe000, 0x1f8000, 0x1f8000, 0x1ffff8,
    0x1e0000, 0x1f8000, 0x1ffff8, 0x1f8000, 0x1ffff8, 0x180000, 0x180000, 0x180000, 0x180000, 0x180000,
    0x180000, 0x180000, 0x180000, 0x180000, 0x180000, 0x180000, 0x180000, 0x180000, 0x180000, 0x180000,
    0x180000, 0x180000, 0x180000, 0x180000, 0x180000, 0x180000, 0x180000, 0x180000, 0x180000, 0x180000,
    0x180000, 0x1fffc0, 0x180000, 0x1fffc0, 0x1fffc0, 0x1fffc0, 0x180000, 0x1fffc0, 0x1fffc0, 0x1e0000,
    0x1fffc0, 0x180000, 0x1fffc0, 0x1fffc0, 0x1fffc0, 0x1fffc0, 0x1fffc0, 0x180000, 0x1fffc0, 0x1fffc0,
    0x1fffc0, 0x1fffc0, 0x1fffc0, 0x1fffc0, 0x1e0000, 0x1fffc0, 0x1fffc0, 0x1fffc0, 0x1fff80, 0x1fffc0,
    0x1fffc0, 0x1fffc0, 0x1fffc0, 0x1fffc0, 0x1fffc0, 0x1fff80, 0x1fffc0, 0x1fffc0, 0x1fffc0, 0x1fffc0,
    0x1fffc0, 0x1fffc0, 0x1fffc0, 0x1fffc0, 0x1fffc0, 0x1fffc0, 0x1fffc0, 0x1fffc0, 0x1fffc0, 0x1fffc0,
    0x1e0000, 0x1fff00, 0x1fffc0, 0x1fffff, 0x1fff80, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff,
    0x1ffffe, 0x1ffff8, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x000001, 0x1ffffe, 0x1fffff,
    0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1ffff8,
    0x1fff80, 0x1ffff8, 0x1ffff8, 0x1ffff8, 0x1ffff8, 0x1ffff8, 0x1ffff8, 0x1fffc0, 0x1fffc0, 0x1fff00,
    0x1fffc0, 0x1ffff8, 0x100000, 0x1fff00, 0x1ffff8, 0x1c0000, 0x1fffc0, 0x1f0000, 0x1fff00, 0x1fff00,
    0x1ffff8, 0x1fffc0, 0x1f0000, 0x1fff00, 0x1fe000, 0x1fe000, 0x1fe000, 0x1fe000, 0x1fe000, 0x1fe000,
    0x1fe000, 0x1fe000, 0x1fe000, 0x1fe000, 0x1f8000, 0x1fe000, 0x006000, 0x1f8000, 0x1fe000, 0x1fe000,
    0x00e000, 0x038000, 0x1c0000, 0x1e0000, 0x1fe000, 0x00e000, 0x1fe000, 0x00e000, 0x1fe000, 0x1fffff,
    0x1fff80, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1ffffe, 0x1fff80, 0x1ffff8, 0x1fffff,
    0x1fffff, 0x1fffff, 0x1fffff, 0x1ffff8, 0x1fffc0, 0x1fffc0, 0x1c0000, 0x1fffff, 0x1fffc0, 0x1ffff8,
    0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1ffff8, 0x1fffff, 0x1ffc00, 0x1ffffc, 0x1fffff, 0x1ffffc,
    0x1ffffc, 0x1ffff8, 0x1fffff, 0x00fc00, 0x1f0000, 0x1f0000, 0x1fffc0, 0x1ffff8, 0x1fffc0, 0x1fffff,
    0x000001, 0x1ffffe, 0x1fffff, 0x1fffff, 0x1fffc0, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fff00, 0x1ffe00,
    0x1ffe00, 0x1ffe00, 0x1ffe00, 0x1ffe00, 0x1ffe00, 0x1ffe00, 0x1ffe00, 0x1ffe00, 0x1ffc00, 0x1f8000,
    0x1ffc00, 0x007e00, 0x1f8000, 0x038000, 0x1c0000, 0x1fe000, 0x1ff000, 0x1ffe00, 0x1fe000, 0x1ffe00,
    0x001e00, 0x001e00, 0x1fe000, 0x1f8000, 0x1ffffe, 0x1fff80, 0x1ffffe, 0x1ffffe, 0x1ffffe, 0x1ffffe,
    0x1ffffe, 0x1ffffe, 0x1f8000, 0x1f8000, 0x1ffff8, 0x1fffff, 0x000001, 0x1f8000, 0x1f8000, 0x1ffffe,
    0x1ffff0, 0x1f8000, 0x1f8000, 0x1f8000, 0x1fffff, 0x1f8000, 0x100000, 0x1f8000, 0x1ffff8, 0x1ff000,
    0x1ff000, 0x1ff000, 0x1ff000, 0x1ff000, 0x1ff000, 0x1ff000, 0x1ff000, 0x1ff000, 0x008000, 0x008000,
    0x1fc000, 0x00f000, 0x030000, 0x03f000, 0x1ff000, 0x03f000, 0x100000, 0x1c0000, 0x1ff000, 0x180000,
    0x1ff000, 0x1ff000, 0x1f8000, 0x03f000, 0x1fffff, 0x1fff80, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff,
    0x1fffff, 0x1ffffe, 0x1fffff, 0x1fffff, 0x000001, 0x1ffffe, 0x1fffff, 0x1fffff, 0x1fffff, 0x1ffff8,
    0x1fffc0, 0x1fffc0, 0x1c0000, 0x1fffff, 0x1fff80, 0x1ffffc, 0x1ffff8, 0x1ffff8, 0x1fffff, 0x1fff80,
    0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x000001, 0x1ffffe, 0x1ffffe, 0x1fffc0, 0x1ffffc,
    0x1ffffe, 0x1ffff8, 0x1fffff, 0x1fffff, 0x1e0000, 0x1ffff8, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff,
    0x1ffff8, 0x180000, 0x1fe000, 0x1fe000, 0x1fe000, 0x1fe000, 0x1fe000, 0x1fe000, 0x1fe000, 0x1fe000,
    0x1fe000, 0x1fe000, 0x1f8000, 0x1fe000, 0x006000, 0x1f8000, 0x1fe000, 0x1fe000, 0x00e000, 0x1e0000,
    0x1fe000, 0x00e000, 0x1fe000, 0x00e000, 0x1e0000, 0x1fe000, 0x1fffff, 0x1fff80, 0x1fffff, 0x1fffff,
    0x1fffff, 0x1fffff, 0x1fffff, 0x1ffffe, 0x1fffff, 0x000001, 0x1ffffe, 0x1fffff, 0x1ffffe, 0x1fffc0,
    0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1ffffc, 0x1ffff0, 0x1fe000, 0x1fffc0, 0x1ffff0, 0x1fe000,
    0x1ffc00, 0x1ffc00, 0x1ffc00, 0x1ffc00, 0x1ffc00, 0x1ffc00, 0x1ffc00, 0x1ffc00, 0x1f8000, 0x1ffc00,
    0x001c00, 0x1f0000, 0x1ffc00, 0x1ffc00, 0x1ffc00, 0x1ffc00, 0x1ffc00, 0x1ffc00, 0x1ffc00, 0x1ffc00,
    0x007c00, 0x1f8000, 0x1f8000, 0x1f8000, 0x1ff000, 0x1ff000, 0x1ff000, 0x1ff000, 0x1ff000, 0x1ff000,
    0x1ff000, 0x1ff000, 0x1ff000, 0x1fe000, 0x1ff000, 0x030000, 0x1c0000, 0x100000, 0x1c0000, 0x100000,
    0x1ff000, 0x1f0000, 0x01f000, 0x1e0000, 0x030000, 0x030000, 0x1c0000, 0x1c0000, 0x1ffe00, 0x1ffe00,
    0x1ffe00, 0x1ffe00, 0x1ffe00, 0x1ffe00, 0x1ffe00, 0x1ffe00, 0x1ffe00, 0x1ffc00, 0x1f8000, 0x1ffc00,
    0x007e00, 0x1f8000, 0x1fe000, 0x1ff000, 0x1ff000, 0x1ff000, 0x1ff000, 0x1e0000, 0x1ffe00, 0x001e00,
    0x1fe000, 0x1ffe00, 0x1ffff8, 0x1ffff8, 0x1ffff8, 0x1ffff8, 0x1fff00, 0x1fff00, 0x1fffff, 0x1ffff0,
    0x1ffff0, 0x1ffff8, 0x1fffff, 0x1fffff, 0x1fffc0, 0x1fffff, 0x1fffff, 0x1fffff, 0x1ffff0, 0x1ffff0,
    0x1fffff, 0x1ffff0, 0x1ffff0, 0x1ffff8, 0x1fffff, 0x1ffff8, 0x1fffff, 0x1fffff, 0x1fffff, 0x1ffffc,
    0x1fffff, 0x1fffff, 0x1fff00, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1f0000, 0x1f0000, 0x1f0000,
    0x1f0000, 0x0c0000, 0x1fffff, 0x1ffff8, 0x1ffff8, 0x1fffff, 0x1fffff, 0x100000, 0x1ffff8, 0x1fffff,
    0x1fffff, 0x1fff80, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1ffffe, 0x1fffff, 0x1ff000,
    0x1fffc0, 0x1fffc0, 0x1fffff, 0x1fffff, 0x1ffffc, 0x100000, 0x1fffff, 0x1fffff, 0x1fffff, 0x000001,
    0x1f8000, 0x1ff000, 0x1ffffe, 0x1f0000, 0x1fffc0, 0x1fffff, 0x1fffff, 0x1fffe0, 0x1fffff, 0x1fffff,
    0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x000001, 0x000001, 0x000001, 0x000001, 0x1ffffc, 0x1ffffe,
    0x1ffffe, 0x1ffffe, 0x1ffffe, 0x1fffff, 0x1fffff, 0x1fffff, 0x1ffff0, 0x1fffc0, 0x1fff80, 0x1fffc0,
    0x1fffc0, 0x1fffc0, 0x1fffc0, 0x1fffc0, 0x1fffc0, 0x1fffc0, 0x1fe000, 0x1fffc0, 0x1fffc0, 0x1fffc0,
    0x1e0000, 0x1fffc0, 0x1fffc0, 0x1fffc0, 0x1fffc0, 0x1fe000, 0x1fe000, 0x1fffc0, 0x1fffc0, 0x1ff800,
    0x1fffc0, 0x1fff80, 0x1fffc0, 0x1fffc0, 0x1fffc0, 0x1fffc0, 0x1fffc0, 0x1fffc0, 0x1fffc0, 0x1e0000,
    0x1e0000, 0x1f8000, 0x1f0000, 0x1f0000, 0x1f0000, 0x1e0000, 0x1e0000, 0x1f8000, 0x100000, 0x180000,
    0x100000, 0x1e0000, 0x1fffc0, 0x1fffff, 0x1fff80, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff,
    0x1ffffe, 0x1ffffe, 0x1fffc0, 0x1ffffc, 0x1fff80, 0x1ffff8, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff,
    0x1ffff8, 0x1ffffc, 0x1fffc0, 0x1fffff, 0x1fffff, 0x1fffff, 0x1ffffe, 0x1fff80, 0x1ffffe, 0x1fffc0,
    0x1ffffe, 0x1fffc0, 0x1fffc0, 0x1fffc0, 0x1ffffe, 0x1ffffe, 0x1ffffe, 0x1ffffe, 0x1ffffe, 0x1ffffe,
    0x1ffffe, 0x1fff00, 0x1ffffe, 0x1ffffe, 0x1ffffe, 0x1ffffe, 0x1ffffe, 0x1fffc0, 0x1ffffe, 0x1fffff,
    0x1fff80, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x000001, 0x1ffffe, 0x1ffffe, 0x1ffffe,
    0x1fffc0, 0x1fffc0, 0x1fffff, 0x1fffff, 0x1f0000, 0x1fff00, 0x1fffff, 0x1ffffc, 0x1ffffc, 0x1fffff,
    0x1f0000, 0x1fffff, 0x1fe000, 0x1fe000, 0x1fe000, 0x1fe000, 0x1fe000, 0x1fe000, 0x1fe000, 0x1fe000,
    0x1fe000, 0x1fe000, 0x1e0000, 0x1e0000, 0x1e0000, 0x1fe000, 0x1e0000, 0x1fe000, 0x1fe000, 0x1fe000,
    0x1e0000, 0x1f8000, 0x1e0000, 0x1e0000, 0x1fe000, 0x1fffff, 0x1fff80, 0x1fffff, 0x1fffff, 0x1fffff,
    0x1fffff, 0x1fffff, 0x1ffffe, 0x1ffffe, 0x1fffc0, 0x1ffffc, 0x1fff00, 0x1fffff, 0x1fffff, 0x1fffff,
    0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fff00, 0x1fffff, 0x1fffff, 0x1ff000, 0x1ff000, 0x1ff000,
    0x1ff000, 0x1ff000, 0x1ff000, 0x1ff000, 0x1ff000, 0x1ff000, 0x1ff000, 0x1ff000, 0x1ff000, 0x1ff000,
    0x00e000, 0x1f0000, 0x1f0000, 0x1e0000, 0x1f0000, 0x1f0000, 0x1e0000, 0x1ff000, 0x1f0000, 0x1fffc0,
    0x1fff80, 0x1fffc0, 0x1fffc0, 0x1fffc0, 0x1fffc0, 0x1fffc0, 0x1fffc0, 0x1fffc0, 0x1e0000, 0x1e0000,
    0x1c0000, 0x1fffc0, 0x1c0000, 0x1fffc0, 0x1fffc0, 0x01fe00, 0x1fff00, 0x1fffc0, 0x03f000, 0x1c0000,
    0x1fffc0, 0x1f8000, 0x1f8000, 0x1f8000, 0x1f8000, 0x1f8000, 0x1f8000, 0x1f8000, 0x1f8000, 0x1f8000,
    0x1f0000, 0x1f8000, 0x1f8000, 0x1f8000, 0x1f8000, 0x1f8000, 0x1f8000, 0x1f8000, 0x1f8000, 0x1f8000,
    0x1f8000, 0x1f8000, 0x1f8000, 0x180000, 0x180000, 0x180000, 0x180000, 0x180000, 0x180000, 0x180000,
    0x180000, 0x180000, 0x180000, 0x180000, 0x100000, 0x180000, 0x180000, 0x180000, 0x180000, 0x180000,
    0x100000, 0x180000, 0x180000, 0x180000, 0x180000, 0x1ffff8, 0x1fff80, 0x1ffff8, 0x1ffff8, 0x1ffff8,
    0x1ffff8, 0x1ffff8, 0x1ffff8, 0x1ffff8, 0x1ffff8, 0x1ffff8, 0x100000, 0x1ffff8, 0x1ff800, 0x1ff800,
    0x1fff00, 0x1ff800, 0x1ffff8, 0x1e0000, 0x1ffff8, 0x1ffff8, 0x180000, 0x1ffe00, 0x1ffe00, 0x1ffe00,
    0x1ffe00, 0x1ffe00, 0x1ffe00, 0x1ffe00, 0x1ffe00, 0x1ffe00, 0x000e00, 0x1ffc00, 0x1fe000, 0x00fc00,
    0x00fe00, 0x1ff000, 0x003e00, 0x1ffe00, 0x007c00, 0x1ffc00, 0x1ffc00, 0x000e00, 0x1f8000, 0x1fffff,
    0x1fff80, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1ffffe, 0x1fffff, 0x1fffff, 0x1fffff,
    0x1fffff, 0x1fff00, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffc0, 0x1fffc0, 0x1e0000, 0x1f8000,
    0x1fffff, 0x1fffff, 0x1fff80, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x000001, 0x1ffffe,
    0x1ffffe, 0x1fffc0, 0x1ffffc, 0x1ffffe, 0x1ffff8, 0x1fffff, 0x1fffff, 0x1e0000, 0x1ffff8, 0x1fffff,
    0x1ffffc, 0x1f8000, 0x1fffff, 0x1f0000, 0x1f0000, 0x1f0000, 0x1f0000, 0x1f0000, 0x1f0000, 0x1f0000,
    0x1f0000, 0x1f0000, 0x1f0000, 0x1f0000, 0x1f0000, 0x1f0000, 0x1f0000, 0x180000, 0x1f0000, 0x1f0000,
    0x1f0000, 0x1f0000, 0x1f0000, 0x1f0000, 0x1c0000, 0x1ffc00, 0x1ffc00, 0x1ffc00, 0x1ffc00, 0x1ffc00,
    0x1ffc00, 0x1ffc00, 0x1ffc00, 0x1ffc00, 0x000c00, 0x000c00, 0x1ff000, 0x01e000, 0x1e0000, 0x1ff000,
    0x1ffc00, 0x007c00, 0x008000, 0x008000, 0x008000, 0x00fc00, 0x001000, 0x1ffff8, 0x1fff80, 0x1ffff8,
    0x1ffff8, 0x1ffff8, 0x1ffff8, 0x1ffff8, 0x1ffff8, 0x1ffff8, 0x1ffff8, 0x1ffff8, 0x020000, 0x1ffff8,
    0x1ffff8, 0x1ffff8, 0x1ffe00, 0x1ffff8, 0x1ffff8, 0x1ffff8, 0x1ffff8, 0x1ffff8, 0x1ffff8, 0x1fffff,
    0x1fff80, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1ffffe, 0x1fffff, 0x1fffff, 0x1fffff,
    0x020000, 0x1fffff, 0x1fffff, 0x1fffff, 0x1ffe00, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1e0000,
    0x1fffff, 0x1ffe00, 0x1ffe00, 0x1ffe00, 0x1ffe00, 0x1ffe00, 0x1ffe00, 0x1ffe00, 0x1ffe00, 0x1ffe00,
    0x1ffe00, 0x1ffe00, 0x1ffe00, 0x1ffe00, 0x1ffe00, 0x1f8000, 0x1f8000, 0x1ffe00, 0x1ffe00, 0x1ffe00,
    0x001c00, 0x001e00, 0x1e0000, 0x1f8000, 0x1f8000, 0x1f8000, 0x1f8000, 0x1f8000, 0x1f8000, 0x1f8000,
    0x1f8000, 0x1f8000, 0x008000, 0x008000, 0x1f8000, 0x1e0000, 0x020000, 0x180000, 0x1e0000, 0x1f8000,
    0x1f8000, 0x1f8000, 0x1f8000, 0x1f8000, 0x1f8000, 0x1fe000, 0x1fe000, 0x1fe000, 0x1fe000, 0x1fe000,
    0x1fe000, 0x1fe000, 0x1fe000, 0x1fe000, 0x100000, 0x100000, 0x180000, 0x1fe000, 0x1fe000, 0x1fe000,
    0x100000, 0x1fe000, 0x1fe000, 0x1fe000, 0x1fe000, 0x1fe000, 0x1fffff, 0x1fff80, 0x1fffff, 0x1fffff,
    0x1fffff, 0x1fffff, 0x1fffff, 0x000001, 0x1ffffe, 0x1ffffe, 0x1fffc0, 0x1ffffc, 0x1ffffe, 0x1ffff8,
    0x1fffff, 0x1fffff, 0x1e0000, 0x1ffff8, 0x1fffff, 0x1ffffc, 0x1fffff, 0x100000, 0x100000, 0x100000,
    0x100000, 0x100000, 0x100000, 0x100000, 0x100000, 0x100000, 0x100000, 0x100000, 0x100000, 0x100000,
    0x100000, 0x100000, 0x100000, 0x100000, 0x100000, 0x100000, 0x100000, 0x100000, 0x1fffc0, 0x1fff80,
    0x1fffc0, 0x1fffc0, 0x1fffc0, 0x1fffc0, 0x1fffc0, 0x1fffc0, 0x1fffc0, 0x1fffc0, 0x1f0000, 0x1f0000,
    0x1fffc0, 0x1f0000, 0x1fffc0, 0x1fffc0, 0x1fffc0, 0x1fffc0, 0x1fffc0, 0x1fe000, 0x1ff800, 0x1fffc0,
    0x1fffc0, 0x1fffc0, 0x1fffc0, 0x1f8000, 0x1fffc0, 0x1f0000, 0x1f0000, 0x1fffc0, 0x1fffc0, 0x1fffc0,
    0x1fffc0, 0x1fffc0, 0x1fffc0, 0x1fffc0, 0x1fffc0, 0x1fffc0, 0x1fffc0, 0x1f8000, 0x1f8000, 0x1f8000,
    0x1f8000, 0x1f8000, 0x1f8000, 0x1f8000, 0x1f8000, 0x1f8000, 0x1f8000, 0x1f8000, 0x1f8000, 0x1f8000,
    0x1f8000, 0x1f8000, 0x1f8000, 0x1f8000, 0x1f8000, 0x1f8000, 0x1f8000, 0x1f8000, 0x1f8000, 0x1f8000,
    0x1f8000, 0x1ffff8, 0x1fff80, 0x1ffff8, 0x1ffff8, 0x1ffff8, 0x1ffff8, 0x1ffff8, 0x1ffff8, 0x1ffff8,
    0x1ff000, 0x1fffc0, 0x1fffc0, 0x1ffff8, 0x1ffff8, 0x1ffff8, 0x100000, 0x1ffff8, 0x1ffff8, 0x1ffff8,
    0x180000, 0x1fffc0, 0x1fffc0, 0x100000, 0x100000, 0x1fffff, 0x1ffff8, 0x1ffff8, 0x1fffff, 0x1fffff,
    0x1ffff8, 0x1fffff, 0x1ffff8, 0x1ffff8, 0x1fffff, 0x1ffff8, 0x1ffff8, 0x100000, 0x1fffff, 0x1fffff,
    0x100000, 0x100000, 0x1fffff, 0x1fffff, 0x1fff80, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff,
    0x1ffffe, 0x1fffff, 0x1fff80, 0x1fffff, 0x1fffff, 0x1ffff8, 0x1ffff8, 0x1fffff, 0x1fff00, 0x1ffff8,
    0x1fff00, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fff80, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff,
    0x1fffff, 0x1ffffe, 0x1fffff, 0x1fffff, 0x1fffff, 0x020000, 0x1fffff, 0x1fffff, 0x1fffff, 0x1ffe00,
    0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fff80, 0x1fffff, 0x1fffff, 0x1fffff,
    0x1fffff, 0x1fffff, 0x1ffffe, 0x1fffff, 0x1c0000, 0x1ffffc, 0x1ffffe, 0x1fffff, 0x000001, 0x1ffff8,
    0x100000, 0x1ffffe, 0x1ffffc, 0x1ffffc, 0x1ffffe, 0x1fffff, 0x1fffff, 0x1fff80, 0x1fffff, 0x1fffff,
    0x1fffff, 0x1fffff, 0x1fffff, 0x1ffffe, 0x1fffff, 0x1f8000, 0x1f0000, 0x1fffff, 0x1e0000, 0x1ffffc,
    0x1f8000, 0x1ffffc, 0x1ffffc, 0x1ffffc, 0x1ffffc, 0x1ffffc, 0x1fffff, 0x1fff80, 0x1fffff, 0x1fffff,
    0x1fffff, 0x1fffff, 0x1fffff, 0x1ffffe, 0x1fffff, 0x1ff000, 0x1fffc0, 0x1fffc0, 0x1fffff, 0x1fffff,
    0x1ffffc, 0x100000, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fff80, 0x1fffff, 0x1fffff,
    0x1fffff, 0x1fffff, 0x1fffff, 0x1ffffe, 0x1ffffe, 0x1fffc0, 0x1fffff, 0x1ffffc, 0x1fff00, 0x1fffff,
    0x1fffff, 0x1fffff, 0x100000, 0x1fffff, 0x1fff00, 0x1fffc0, 0x1fff00, 0x1fff00, 0x1fff00, 0x1fff00,
    0x1fff00, 0x1fff00, 0x1fff00, 0x1fff00, 0x1fff00, 0x1fff00, 0x1fff00, 0x100000, 0x1fff00, 0x1ff800,
    0x1ff800, 0x1fff00, 0x1ff800, 0x1fff00, 0x1e0000, 0x1fff00, 0x1c0000, 0x100000, 0x1f9c00, 0x040000,
    0x040000, 0x1ff000, 0x100000, 0x1ffe00, 0x1fc000, 0x1f0000, 0x1ff000, 0x1ff000, 0x1ffe00, 0x1c0000,
    0x1c0000, 0x1c0000, 0x1ff000, 0x03c000, 0x1c0000, 0x1c0000, 0x1fffff, 0x1fff80, 0x1fffff, 0x1fffff,
    0x1fffff, 0x1fffff, 0x1fffff, 0x1ffffe, 0x1ffffe, 0x1fe000, 0x1fffff, 0x1ffff8, 0x1fffc0, 0x1fffff,
    0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x00fc00, 0x00fc00, 0x00fc00, 0x00fc00,
    0x00fc00, 0x00fc00, 0x00fc00, 0x00fc00, 0x00fc00, 0x00fc00, 0x00fc00, 0x00fc00, 0x00fc00, 0x00fc00,
    0x00e000, 0x00e000, 0x00f000, 0x00fc00, 0x00f000, 0x00fc00, 0x1fffc0, 0x1fff80, 0x1fffc0, 0x1fffc0,
    0x1fffc0, 0x1fffc0, 0x1fffc0, 0x1fffc0, 0x1fffc0, 0x1fe000, 0x1fffc0, 0x1fffc0, 0x1fffc0, 0x1fff00,
    0x1c0000, 0x1fff00, 0x1fffc0, 0x1fffc0, 0x1fff00, 0x1ff800, 0x1ffc00, 0x1ffc00, 0x1ffc00, 0x1ffc00,
    0x1ffc00, 0x1ffc00, 0x1ffc00, 0x1ffc00, 0x1ffc00, 0x1ffc00, 0x1ffc00, 0x1ffc00, 0x1ffc00, 0x1ffc00,
    0x1ffc00, 0x1ffc00, 0x001c00, 0x1c0000, 0x1ffc00, 0x1ffc00, 0x1ffc00, 0x1ffc00, 0x1ffc00, 0x1ffc00,
    0x1ffc00, 0x1ffc00, 0x1ffc00, 0x1ffc00, 0x1ffc00, 0x180000, 0x1e0000, 0x1e0000, 0x1ffc00, 0x1ffc00,
    0x1ffc00, 0x100000, 0x100000, 0x1ffc00, 0x1ffc00, 0x1ffc00, 0x1ffe00, 0x1ffe00, 0x1ffe00, 0x1ffe00,
    0x1ffe00, 0x1ffe00, 0x1ffe00, 0x1ffe00, 0x000200, 0x000c00, 0x1e0000, 0x1fe000, 0x1f0000, 0x180000,
    0x1f0000, 0x1ffe00, 0x1ffe00, 0x00fe00, 0x1f0000, 0x1f8000, 0x1ffff8, 0x1fff80, 0x1ffff8, 0x1ffff8,
    0x1ffff8, 0x1ffff8, 0x1ffff8, 0x1ffff8, 0x1ffff8, 0x1fffc0, 0x1ffff8, 0x1ffff8, 0x1ffff8, 0x1ffff8,
    0x1ffff8, 0x1ffff8, 0x1fffc0, 0x1ffff8, 0x1ffff8, 0x1ffe00, 0x1ffe00, 0x1ffe00, 0x1ffe00, 0x1ffe00,
    0x1ffe00, 0x1ffe00, 0x1ffe00, 0x1ffe00, 0x1ffe00, 0x1ffe00, 0x1ffe00, 0x1ffe00, 0x1ffe00, 0x1ffe00,
    0x1e0000, 0x1ffe00, 0x000200, 0x1ffc00, 0x1ffe00, 0x1ffe00, 0x1ffe00, 0x1ffe00, 0x1ffe00, 0x1ffe00,
    0x1ffe00, 0x1ffe00, 0x1ffe00, 0x1ffe00, 0x1f8000, 0x1fe000, 0x1ffe00, 0x1ffe00, 0x1ffc00, 0x1ffe00,
    0x1ffe00, 0x1ffe00, 0x1fe000, 0x1ffff8, 0x1fff80, 0x1ffff8, 0x1ffff8, 0x1ffff8, 0x1ffff8, 0x1ffff8,
    0x1ffff8, 0x1fffc0, 0x1ffff8, 0x1ffff8, 0x1ffff8, 0x1ffff8, 0x1ffff8, 0x1ffff8, 0x1ffff8, 0x1ffff8,
    0x1ffff8, 0x1ffff8, 0x1ffff8, 0x1fff80, 0x1ffff8, 0x1ffff8, 0x1ffff8, 0x1ffff8, 0x1ffff8, 0x1ffff8,
    0x1ffff8, 0x1f8000, 0x1ffff8, 0x1f8000, 0x1ffff8, 0x1f8000, 0x1ffff8, 0x1ffff8, 0x1ffff8, 0x1f8000,
    0x1f8000, 0x1fe000, 0x1fe000, 0x1fe000, 0x1fe000, 0x1fe000, 0x1fe000, 0x1fe000, 0x1fe000, 0x1fe000,
    0x1fe000, 0x1fe000, 0x1fe000, 0x1fe000, 0x1fe000, 0x1fe000, 0x1fe000, 0x1fe000, 0x1fe000, 0x1fe000,
    0x1fffc0, 0x1fff80, 0x1fffc0, 0x1fffc0, 0x1fffc0, 0x1fffc0, 0x1fffc0, 0x1fffc0, 0x1fffc0, 0x1e0000,
    0x1e0000, 0x1fffc0, 0x1fffc0, 0x1ff000, 0x1e0000, 0x1fffc0, 0x01fe00, 0x1fff00, 0x1fffc0, 0x1fffc0,
    0x1fff80, 0x1fffc0, 0x1fffc0, 0x1fffc0, 0x1fffc0, 0x1fffc0, 0x1fffc0, 0x1fffc0, 0x1e0000, 0x1e0000,
    0x1f8000, 0x1f0000, 0x1f0000, 0x1f0000, 0x1e0000, 0x1e0000, 0x1f8000, 0x1f0000, 0x1fffc0, 0x1fff80,
    0x1fffc0, 0x1fffc0, 0x1fffc0, 0x1fffc0, 0x1fffc0, 0x1fffc0, 0x1fffc0, 0x1fffc0, 0x1fffc0, 0x1fffc0,
    0x1e0000, 0x1e0000, 0x1e0000, 0x1e0000, 0x1e0000, 0x1c0000, 0x1e0000, 0x1fffc0, 0x1fff80, 0x1fffc0,
    0x1fffc0, 0x1fffc0, 0x1fffc0, 0x1fffc0, 0x1fffc0, 0x1fffc0, 0x1fff00, 0x1fffc0, 0x1fff00, 0x180000,
    0x1fffc0, 0x180000, 0x1fffc0, 0x100000, 0x1fffc0, 0x1fff00, 0x1ff000, 0x1ff000, 0x1ff000, 0x1ff000,
    0x1ff000, 0x1ff000, 0x1ff000, 0x1ff000, 0x001000, 0x100000, 0x1fe000, 0x1fe000, 0x1fe000, 0x1fe000,
    0x1fe000, 0x1fe000, 0x1fe000, 0x1fe000, 0x1fe000, 0x1ffe00, 0x1ffe00, 0x1ffe00, 0x1ffe00, 0x1ffe00,
    0x1ffe00, 0x1ffe00, 0x1ffe00, 0x1ffe00, 0x1ffe00, 0x038000, 0x1c0000, 0x1ffe00, 0x1f8000, 0x1ffe00,
    0x000200, 0x003c00, 0x180000, 0x1ffe00, 0x1c0000, 0x1c0000, 0x1c0000, 0x1c0000, 0x1c0000, 0x1c0000,
    0x1c0000, 0x1c0000, 0x1c0000, 0x1c0000, 0x1c0000, 0x1c0000, 0x1c0000, 0x1c0000, 0x1c0000, 0x1c0000,
    0x1c0000, 0x1c0000, 0x1c0000, 0x1ff000, 0x1ff000, 0x1ff000, 0x1ff000, 0x1ff000, 0x1ff000, 0x1ff000,
    0x1ff000, 0x01f000, 0x001000, 0x01e000, 0x01f000, 0x1e0000, 0x1e0000, 0x1e0000, 0x1c0000, 0x1e0000,
    0x1e0000, 0x1e0000, 0x1fffff, 0x1fff80, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1ffffe,
    0x1fffff, 0x1f8000, 0x1f0000, 0x1fffff, 0x1e0000, 0x1ffffc, 0x1f8000, 0x1fffff, 0x1fffff, 0x1ffffe,
    0x1f0000, 0x1fffff, 0x1fff80, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1ffffe, 0x1fffff,
    0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff,
    0x1fffff, 0x1fff80, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1ffffe, 0x1fffff, 0x000001,
    0x1ffffe, 0x1fffff, 0x1fffff, 0x000001, 0x1fe000, 0x1ffffe, 0x1fffff, 0x1fffff, 0x1ffffc, 0x00fc00,
    0x00fc00, 0x00fc00, 0x00fc00, 0x00fc00, 0x00fc00, 0x00fc00, 0x00fc00, 0x00fc00, 0x00fc00, 0x00fc00,
    0x00fc00, 0x00fc00, 0x00fc00, 0x00e000, 0x00e000, 0x00f000, 0x00f000, 0x00f000, 0x1f0000, 0x1f0000,
    0x1f0000, 0x1f0000, 0x1f0000, 0x1f0000, 0x1f0000, 0x1f0000, 0x1f0000, 0x1f0000, 0x1f0000, 0x1f0000,
    0x010000, 0x010000, 0x100000, 0x180000, 0x180000, 0x1e0000, 0x1e0000, 0x1fffff, 0x1fff80, 0x1fffff,
    0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1ffffe, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff,
    0x1fffff, 0x1fffff, 0x1fffff, 0x000001, 0x1ffffe, 0x1fffff, 0x1fff00, 0x1fff00, 0x1fff00, 0x1fff00,
    0x1fff00, 0x1fff00, 0x1fff00, 0x1fff00, 0x1fff00, 0x1fff00, 0x1fff00, 0x1fff00, 0x1fff00, 0x1fff00,
    0x1fff00, 0x1fff00, 0x1fff00, 0x1fff00, 0x1fff00, 0x1ffc00, 0x1ffc00, 0x1ffc00, 0x1ffc00, 0x1ffc00,
    0x1ffc00, 0x1ffc00, 0x1ffc00, 0x1ffc00, 0x1e0000, 0x180000, 0x1e0000, 0x1ffc00, 0x180000, 0x1ffc00,
    0x100000, 0x1ffc00, 0x1f8000, 0x1ffc00, 0x1fe000, 0x1fe000, 0x1fe000, 0x1fe000, 0x1fe000, 0x1fe000,
    0x1fe000, 0x1fe000, 0x1fe000, 0x1fe000, 0x1fe000, 0x1fe000, 0x1fe000, 0x1f0000, 0x1fe000, 0x1fe000,
    0x1fe000, 0x1fe000, 0x1fe000, 0x1fffff, 0x1fff80, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff,
    0x1ffffe, 0x1fffc0, 0x1ffffc, 0x1ffffe, 0x000000, 0x000001, 0x1ffff8, 0x1ffff8, 0x1ffffe, 0x1fffff,
    0x1fffff, 0x1fffff, 0x1fffff, 0x1fff80, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1ffffe,
    0x1fffff, 0x1c0000, 0x1ffffc, 0x1ffffe, 0x1fffff, 0x000001, 0x1ffff8, 0x100000, 0x1ffffe, 0x1ffffe,
    0x1fffff, 0x1fffff, 0x1fff80, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1ffffe, 0x1fffff,
    0x1c0000, 0x1ffffc, 0x1ffffe, 0x1fffff, 0x1ffff8, 0x100000, 0x1ffffe, 0x1ffffe, 0x1fffff, 0x000001,
    0x1fffff, 0x1fff80, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1ffffe, 0x1fffc0, 0x1ffff8,
    0x1ffffe, 0x1c0000, 0x1c0000, 0x1fff00, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fff00, 0x1fffff, 0x1ffc00,
    0x1ffc00, 0x1ffc00, 0x1ffc00, 0x1ffc00, 0x1ffc00, 0x1ffc00, 0x1ffc00, 0x1ff000, 0x1ffc00, 0x000c00,
    0x1ff000, 0x1e0000, 0x1ffc00, 0x1ffc00, 0x000c00, 0x1c0000, 0x1c0000, 0x1ffff8, 0x1fff80, 0x1ffff8,
    0x1ffff8, 0x1ffff8, 0x1ffff8, 0x1ffff8, 0x1ffff8, 0x1ffff8, 0x1ffff8, 0x1f8000, 0x1ffff8, 0x1ffff8,
    0x1ffff8, 0x1ffff8, 0x1ffff8, 0x1fe000, 0x1ffff8, 0x1fffff, 0x1fff80, 0x1fffff, 0x1fffff, 0x1fffff,
    0x1fffff, 0x1fffff, 0x1ffffe, 0x1ffffc, 0x1fff00, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1ffffc,
    0x1fffff, 0x1ffffc, 0x1ffffc, 0x1fffff, 0x1fff80, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff,
    0x1ffffe, 0x1fffff, 0x1fffff, 0x000001, 0x000001, 0x000001, 0x1ffffe, 0x1ffffe, 0x1ffffe, 0x1fffff,
    0x1fffff, 0x001000, 0x001000, 0x001000, 0x001000, 0x001000, 0x001000, 0x001000, 0x001000, 0x001000,
    0x001000, 0x001000, 0x001000, 0x001000, 0x001000, 0x001000, 0x001000, 0x001000, 0x001000, 0x1f9c00,
    0x1f9c00, 0x1f9c00, 0x1f9c00, 0x1f9c00, 0x1f9c00, 0x1f9c00, 0x1f9c00, 0x009c00, 0x009c00, 0x1f0000,
    0x1f0000, 0x100000, 0x1f0000, 0x1f0000, 0x1f0000, 0x1f0000, 0x1f0000, 0x1ff000, 0x1ff000, 0x1ff000,
    0x1ff000, 0x1ff000, 0x1ff000, 0x1ff000, 0x1ff000, 0x1ff000, 0x1ff000, 0x001000, 0x1fe000, 0x01e000,
    0x01e000, 0x1e0000, 0x1e0000, 0x1fe000, 0x1e0000, 0x1fffc0, 0x1fff80, 0x1fffc0, 0x1fffc0, 0x1fffc0,
    0x1fffc0, 0x1fffc0, 0x1fffc0, 0x1fffc0, 0x1e0000, 0x1e0000, 0x1fffc0, 0x1ff000, 0x1e0000, 0x1fffc0,
    0x01fe00, 0x1fff00, 0x1fffc0, 0x1e0000, 0x1e0000, 0x1e0000, 0x1e0000, 0x1e0000, 0x1e0000, 0x1e0000,
    0x1e0000, 0x1e0000, 0x1e0000, 0x1e0000, 0x1e0000, 0x1e0000, 0x1e0000, 0x1e0000, 0x1e0000, 0x1e0000,
    0x1c0000, 0x1ffff8, 0x1fff80, 0x1ffff8, 0x1ffff8, 0x1ffff8, 0x1ffff8, 0x1ffff8, 0x1ffff8, 0x1ffff8,
    0x180000, 0x1fe000, 0x180000, 0x1ffff8, 0x1ffff8, 0x180000, 0x1ffff8, 0x1ffff8, 0x1ffff8, 0x1fffff,
    0x1fff80, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1ffffe, 0x1fffff, 0x1fffff, 0x000001,
    0x1fffff, 0x1fe000, 0x1ffffe, 0x1fffff, 0x1ffff8, 0x1fffff, 0x1ffff8, 0x018000, 0x018000, 0x018000,
    0x018000, 0x018000, 0x018000, 0x018000, 0x018000, 0x018000, 0x018000, 0x018000, 0x018000, 0x018000,
    0x018000, 0x018000, 0x018000, 0x018000, 0x018000, 0x1ffff8, 0x1fff80, 0x1e0000, 0x1e0000, 0x1e0000,
    0x1e0000, 0x1e0000, 0x1e0000, 0x1ffff8, 0x1ffff8, 0x1f8000, 0x1f8000, 0x1ffff8, 0x1f8000, 0x1ffff8,
    0x1ffff8, 0x1f8000, 0x1f8000, 0x1fffff, 0x1fff80, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff,
    0x1ffffe, 0x1fffff, 0x1f8000, 0x1f0000, 0x1fffff, 0x1e0000, 0x1ffffc, 0x1f8000, 0x1ffff8, 0x1fffe0,
    0x1fffff, 0x1fffff, 0x1fff80, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1ffffe, 0x1fffff,
    0x000001, 0x1ffffe, 0x1fffff, 0x1fe000, 0x1fe000, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fe000, 0x1ffff8,
    0x1ffff8, 0x1ffff8, 0x1ffff8, 0x1f0000, 0x1fff00, 0x1fe000, 0x1f8000, 0x1ffffc, 0x1ffffc, 0x1f8000,
    0x1f8000, 0x1f0000, 0x1fc000, 0x1fff80, 0x1ffffc, 0x1ffffc, 0x1ffffc, 0x008000, 0x008000, 0x008000,
    0x008000, 0x008000, 0x008000, 0x008000, 0x008000, 0x008000, 0x008000, 0x008000, 0x008000, 0x008000,
    0x008000, 0x008000, 0x008000, 0x008000, 0x008000, 0x1fffc0, 0x1fff00, 0x1fff00, 0x1fffc0, 0x1fff00,
    0x1fffc0, 0x1fffc0, 0x1fffc0, 0x1fffc0, 0x1fffc0, 0x1fffc0, 0x1fffc0, 0x1fff00, 0x1fff00, 0x1fffc0,
    0x1ff800, 0x1ff800, 0x1fffc0, 0x1fff80, 0x1fff00, 0x100000, 0x1fffc0, 0x1f8000, 0x1fff00, 0x1fffc0,
    0x1fe000, 0x1fff80, 0x1fff80, 0x1fff80, 0x1f0000, 0x1fff80, 0x1fff80, 0x1fe000, 0x1f8000, 0x1f0000,
    0x1fffc0, 0x1fffff, 0x1fff80, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1ffffe, 0x1fffff,
    0x1fff00, 0x1fffff, 0x000001, 0x000001, 0x000001, 0x1ffffe, 0x1ffffe, 0x1ffffe, 0x1fffff, 0x1fffff,
    0x1fff80, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1ffffe, 0x1ffffe, 0x1c0000, 0x1c0000,
    0x1fff00, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fff00, 0x1ffffc, 0x1fffff, 0x1ffff8, 0x1fff80, 0x1ffff8,
    0x1ffff8, 0x1ffff8, 0x1ffff8, 0x1ffff8, 0x1ffff8, 0x1ffff8, 0x1c0000, 0x1ffff8, 0x1ffff8, 0x1ffff8,
    0x1ffff8, 0x100000, 0x1ffff8, 0x1ffff8, 0x1ffff8, 0x1ffc00, 0x1ffc00, 0x1ffc00, 0x1ffc00, 0x1ffc00,
    0x1ffc00, 0x1ffc00, 0x1ffc00, 0x1e0000, 0x1ffc00, 0x1ffc00, 0x180000, 0x1ffc00, 0x007000, 0x180000,
    0x1f8000, 0x1ffc00, 0x1e0000, 0x1fe000, 0x1fe000, 0x1fe000, 0x1fe000, 0x1fe000, 0x1fe000, 0x1fe000,
    0x1fe000, 0x1fe000, 0x1c0000, 0x1c0000, 0x1fe000, 0x1fe000, 0x1fe000, 0x1fe000, 0x1fe000, 0x1fe000,
    0x1fffff, 0x1fff80, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1ffffe, 0x1ffffe, 0x1c0000,
    0x1c0000, 0x1fff00, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fff00, 0x1fffff, 0x1ffffe, 0x1fff80, 0x1ffffe,
    0x1ffffe, 0x1ffffe, 0x1ffffe, 0x1ffffe, 0x1ffffe, 0x1fff00, 0x1ffffe, 0x1ffffe, 0x1ffffe, 0x1ffffe,
    0x1ffffe, 0x1ffffe, 0x1ffffe, 0x1ffffe, 0x1fffff, 0x1fff80, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff,
    0x1fffff, 0x1ffffe, 0x1fffff, 0x000001, 0x1ffffe, 0x1fffff, 0x1fff80, 0x1fffff, 0x1fffff, 0x1fffc0,
    0x1fffff, 0x1fc000, 0x1fc000, 0x1fc000, 0x1fc000, 0x1fc000, 0x1fc000, 0x1fc000, 0x1fc000, 0x1fc000,
    0x1fc000, 0x1fc000, 0x1fc000, 0x1fc000, 0x1fc000, 0x1fc000, 0x1fc000, 0x1fc000, 0x1fffc0, 0x1fff80,
    0x1fffc0, 0x1fffc0, 0x1fffc0, 0x1fffc0, 0x1fffc0, 0x1fffc0, 0x1fffc0, 0x1e0000, 0x1e0000, 0x1fffc0,
    0x01fe00, 0x1fffc0, 0x03f000, 0x1c0000, 0x1c0000, 0x1fffc0, 0x1fff80, 0x1fffc0, 0x1fffc0, 0x1fffc0,
    0x1fffc0, 0x1fffc0, 0x1fffc0, 0x1fffc0, 0x1e0000, 0x1e0000, 0x1fffc0, 0x007000, 0x1fffc0, 0x007e00,
    0x1fff00, 0x1fffc0, 0x1fffff, 0x1fff80, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1ffffe,
    0x1fffff, 0x000001, 0x1ffffe, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffc0, 0x1fffc0, 0x1f0000,
    0x1f0000, 0x1f0000, 0x1f0000, 0x1f0000, 0x1f0000, 0x1f0000, 0x1f0000, 0x1f0000, 0x1c0000, 0x1c0000,
    0x1f0000, 0x1f0000, 0x1f0000, 0x1f0000, 0x1f0000, 0x1f0000, 0x1fffff, 0x1fff80, 0x1fffff, 0x1fffff,
    0x1fffff, 0x1fffff, 0x1fffff, 0x1ffffe, 0x1ffffc, 0x1fff00, 0x1fffff, 0x1fffc0, 0x1fffc0, 0x1fe000,
    0x1fffc0, 0x1fffff, 0x1fffc0, 0x1fffff, 0x1fff80, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff,
    0x1ffffe, 0x1fffff, 0x1fffff, 0x000001, 0x1ffffe, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff,
    0x1fffc0, 0x1fff80, 0x1fffc0, 0x1fffc0, 0x1fffc0, 0x1fffc0, 0x1fffc0, 0x1fffc0, 0x1fffc0, 0x1c0000,
    0x1fff00, 0x1fffc0, 0x1fffc0, 0x1fe000, 0x1fffc0, 0x1fffc0, 0x1fffc0, 0x1fffc0, 0x1fff80, 0x1fffc0,
    0x1fffc0, 0x1fffc0, 0x1fffc0, 0x1fffc0, 0x1fffc0, 0x1fffc0, 0x1fff00, 0x1c0000, 0x1fff00, 0x1fff00,
    0x1fff00, 0x1fe000, 0x1fffc0, 0x1fff80, 0x1fffc0, 0x1fff80, 0x1fffc0, 0x1fffc0, 0x1fffc0, 0x1fffc0,
    0x1fffc0, 0x1fffc0, 0x1fffc0, 0x1c0000, 0x1fff00, 0x1fffc0, 0x1fffc0, 0x1fe000, 0x1fff00, 0x180000,
    0x1fe000, 0x1fffc0, 0x1fff80, 0x1fffc0, 0x1fffc0, 0x1fffc0, 0x1fffc0, 0x1fffc0, 0x1fffc0, 0x1fffc0,
    0x1fff00, 0x1c0000, 0x1fff00, 0x1fff00, 0x1fff00, 0x1fe000, 0x1fff00, 0x1fffc0, 0x1fffff, 0x1fff80,
    0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1ffffe, 0x1fffc0, 0x1ffffc, 0x1ffffe, 0x1fffff,
    0x1fffc0, 0x1fe000, 0x1fffff, 0x1ffffc, 0x1ffffc, 0x1fffff, 0x1fff80, 0x1fffff, 0x1fffff, 0x1fffff,
    0x1fffff, 0x1fffff, 0x1ffffe, 0x1fffff, 0x1fffff, 0x000001, 0x1fffff, 0x1fe000, 0x1ffffe, 0x1fffff,
    0x1fe000, 0x1fffff, 0x1fffff, 0x1fff80, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1ffffe,
    0x1fffff, 0x1e0000, 0x1fffff, 0x000001, 0x000001, 0x1ffffe, 0x1ffffe, 0x1fffff, 0x1fffff, 0x1ff000,
    0x1ff000, 0x1ff000, 0x1ff000, 0x1ff000, 0x1ff000, 0x1ff000, 0x1ff000, 0x00f000, 0x010000, 0x010000,
    0x010000, 0x1e0000, 0x1e0000, 0x1f0000, 0x03f000, 0x1c0000, 0x1fffff, 0x1fff80, 0x1fffff, 0x1fffff,
    0x1fffff, 0x1fffff, 0x1fffff, 0x1ffffe, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff,
    0x1fffff, 0x000001, 0x1ffffe, 0x1fffff, 0x1fff80, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff,
    0x1ffffe, 0x1fffff, 0x1ffffc, 0x1ffff8, 0x1ffffe, 0x1ffffc, 0x1fffff, 0x1fffff, 0x1ffffc, 0x1fffff,
    0x1fffff, 0x1fff80, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1ffffe, 0x1ffffe, 0x1fffc0,
    0x1ffffc, 0x1fffff, 0x1fffff, 0x1ffff8, 0x1ffff8, 0x1ffff8, 0x1ffffc, 0x1f0000, 0x1f0000, 0x1f0000,
    0x1f0000, 0x1f0000, 0x1f0000, 0x1f0000, 0x1f0000, 0x1f0000, 0x1c0000, 0x1f0000, 0x1f0000, 0x1f0000,
    0x1f0000, 0x1e0000, 0x1f0000, 0x030000, 0x1ffff8, 0x1fffff, 0x1ffc00, 0x1ffffc, 0x1fffff, 0x1ffffc,
    0x1ffffc, 0x1ffff8, 0x1fffff, 0x00fc00, 0x1f0000, 0x1f0000, 0x1fffc0, 0x1ffff8, 0x1fffc0, 0x1fffff,
    0x1fffff, 0x1ffc00, 0x1ffc00, 0x1ffc00, 0x1ffc00, 0x1ffc00, 0x1ffc00, 0x1ffc00, 0x1ffc00, 0x1e0000,
    0x03fc00, 0x1ffc00, 0x100000, 0x1c0000, 0x1c0000, 0x1ffc00, 0x1ffc00, 0x1ffc00, 0x1fffff, 0x1fff80,
    0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1ffffe, 0x1ffffe, 0x1fffc0, 0x1ffffe, 0x1fffff,
    0x1ffc00, 0x1ffffc, 0x1fffff, 0x1fffff, 0x1f8000, 0x1ffc00, 0x1ffc00, 0x1ffc00, 0x1ffc00, 0x1ffc00,
    0x1ffc00, 0x1ffc00, 0x1ffc00, 0x1fe000, 0x1f8000, 0x1ffc00, 0x1ffc00, 0x1ffc00, 0x1ffc00, 0x1ffc00,
    0x001c00, 0x1f8000, 0x000c00, 0x000c00, 0x000c00, 0x000c00, 0x000c00, 0x000c00, 0x000c00, 0x000c00,
    0x000c00, 0x000c00, 0x000c00, 0x000c00, 0x000c00, 0x000c00, 0x000c00, 0x000c00, 0x000c00, 0x1fff00,
    0x1fff00, 0x1fff00, 0x1fff00, 0x1fff00, 0x1fff00, 0x1fff00, 0x1fff00, 0x1fff00, 0x1c0000, 0x1fff00,
    0x1fff00, 0x1fff00, 0x1f8000, 0x1fff00, 0x1fff00, 0x1fff00, 0x1fe000, 0x1fe000, 0x1fe000, 0x1fe000,
    0x1fe000, 0x1fe000, 0x1fe000, 0x1fe000, 0x1fe000, 0x100000, 0x100000, 0x180000, 0x1fe000, 0x1fe000,
    0x1fe000, 0x1fe000, 0x000001, 0x1ffff8, 0x1ffff8, 0x1ffff8, 0x1ffffe, 0x1ffff8, 0x1fffff, 0x1fffff,
    0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fff80,
    0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1ffffe, 0x1ffffe, 0x1ffff8, 0x1e0000, 0x1ffff8,
    0x1fffff, 0x1ffff8, 0x1ffff8, 0x1ffff8, 0x1fffff, 0x1fff80, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff,
    0x1fffff, 0x000001, 0x000001, 0x000001, 0x000001, 0x1ffffe, 0x1ffffe, 0x1ffffe, 0x1ffffe, 0x1ffffe,
    0x1fffff, 0x1fff80, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1ffffe, 0x1ffffc, 0x1fff00,
    0x1fffff, 0x1fffff, 0x1fffc0, 0x1fffc0, 0x1fffff, 0x1fffff, 0x1ffff8, 0x1fff80, 0x1ffff8, 0x1ffff8,
    0x1ffff8, 0x1ffff8, 0x1ffff8, 0x1ffff8, 0x1ffff8, 0x1ffff8, 0x180000, 0x1ffff8, 0x1ffff8, 0x1ffff8,
    0x1c0000, 0x100000, 0x1f9c00, 0x1f9c00, 0x1f9c00, 0x1f9c00, 0x1f9c00, 0x1f9c00, 0x1f9c00, 0x1f9c00,
    0x001c00, 0x001c00, 0x001c00, 0x009c00, 0x008000, 0x1f0000, 0x1f0000, 0x1f0000, 0x1fc000, 0x1fc000,
    0x1fc000, 0x1fc000, 0x1fc000, 0x1fc000, 0x1fc000, 0x1fc000, 0x1fc000, 0x1fc000, 0x1fc000, 0x1fc000,
    0x1fc000, 0x1fc000, 0x1fc000, 0x01c000, 0x1fffc0, 0x1fff80, 0x1fffc0, 0x1fffc0, 0x1fffc0, 0x1fffc0,
    0x1fffc0, 0x1fffc0, 0x1fffc0, 0x1fffc0, 0x1f8000, 0x1fffc0, 0x1fffc0, 0x1fffc0, 0x1fffc0, 0x1fffc0,
    0x03e000, 0x1c0000, 0x1fe000, 0x1fe000, 0x1fe000, 0x00e000, 0x030000, 0x100000, 0x1c0000, 0x1f8000,
    0x1fe000, 0x1fe000, 0x1fe000, 0x1fe000, 0x1fe000, 0x1fe000, 0x1ffc00, 0x1ffc00, 0x1ffc00, 0x1ffc00,
    0x1ffc00, 0x1ffc00, 0x1ffc00, 0x1ffc00, 0x1ffc00, 0x1fe000, 0x1fe000, 0x1ffc00, 0x1ffc00, 0x1ffc00,
    0x1ffc00, 0x003c00, 0x1e0000, 0x1e0000, 0x1e0000, 0x1e0000, 0x1e0000, 0x1e0000, 0x1e0000, 0x1e0000,
    0x1f8000, 0x1f8000, 0x1f8000, 0x1f8000, 0x1f8000, 0x1f8000, 0x1f8000, 0x1f0000, 0x1ffffc, 0x1fff80,
    0x1ffffc, 0x1ffffc, 0x1ffffc, 0x1ffffc, 0x1ffffc, 0x1ffffc, 0x1ffffc, 0x1fff00, 0x1ffffc, 0x1ffffc,
    0x1ffffc, 0x1ffffc, 0x1ffffc, 0x1ffffc, 0x1fffff, 0x1fff80, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff,
    0x1fffff, 0x1ffffe, 0x1fffff, 0x1fffff, 0x000001, 0x1fffff, 0x1fe000, 0x1ffffe, 0x1fffff, 0x1fffff,
    0x1fffff, 0x1fff80, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1ffffe, 0x1ffffe, 0x1fffff,
    0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fff80, 0x1fffff, 0x1fffff,
    0x1fffff, 0x1fffff, 0x1fffff, 0x1ffffe, 0x1fffff, 0x1fffff, 0x000001, 0x1ffffc, 0x180000, 0x1fff00,
    0x1f8000, 0x1ffffe, 0x1fffff, 0x1fff80, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1ffffe,
    0x1f0000, 0x1fffff, 0x1fffc0, 0x1fffff, 0x1fe000, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fff80,
    0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1ffffe, 0x1ffffc, 0x1fff00, 0x1fffff, 0x1fffff,
    0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1ffff8, 0x1fff80, 0x1ffff8, 0x1ffff8, 0x1ffff8, 0x1ffff8,
    0x1ffff8, 0x1ffff8, 0x1ffff8, 0x1ffff8, 0x1ffff8, 0x1ffff8, 0x1ffff8, 0x1ffff8, 0x1ffff0, 0x1ffff8,
    0x1fffff, 0x1fff80, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1ffffe, 0x1ffffe, 0x1fe000,
    0x1fffff, 0x1ffff8, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fff80, 0x1fffff, 0x1fffff,
    0x1fffff, 0x1fffff, 0x1fffff, 0x1ffffe, 0x1fffff, 0x000001, 0x1ffffe, 0x1fffff, 0x1fffff, 0x1fffff,
    0x000001, 0x1ffffe, 0x1fffff, 0x1fff80, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x000001,
    0x000001, 0x000001, 0x1ffffe, 0x1ffffe, 0x1ffffc, 0x1ffffe, 0x1ffffe, 0x1fffff, 0x00fc00, 0x00fc00,
    0x00fc00, 0x00fc00, 0x00fc00, 0x00fc00, 0x00fc00, 0x00fc00, 0x00fc00, 0x000c00, 0x00e000, 0x00e000,
    0x00e000, 0x00f000, 0x00f000, 0x00f000, 0x1ff000, 0x1ff000, 0x1ff000, 0x1ff000, 0x1ff000, 0x1ff000,
    0x1ff000, 0x1ff000, 0x1ff000, 0x1ff000, 0x1ff000, 0x1ff000, 0x1ff000, 0x1ff000, 0x003000, 0x1ff000,
    0x1ff000, 0x1ff000, 0x1ff000, 0x1ff000, 0x1ff000, 0x1ff000, 0x1ff000, 0x1ff000, 0x1ff000, 0x1ff000,
    0x1ff000, 0x1ff000, 0x1ff000, 0x1ff000, 0x1ff000, 0x003000, 0x1ffc00, 0x1ffc00, 0x1ffc00, 0x1ffc00,
    0x1ffc00, 0x1ffc00, 0x1ffc00, 0x1ffc00, 0x1fc000, 0x1ffc00, 0x1ffc00, 0x1e0000, 0x1ffc00, 0x1ffc00,
    0x1ffc00, 0x007c00, 0x1fffff, 0x1fff80, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1ffffe,
    0x1fff00, 0x1fffff, 0x1fffff, 0x1fffff, 0x1c0000, 0x1ffffc, 0x1fffff, 0x038000, 0x01fc00, 0x01fc00,
    0x01fc00, 0x01fc00, 0x01fc00, 0x01fc00, 0x01fc00, 0x01fc00, 0x01fc00, 0x01f000, 0x01fc00, 0x01fc00,
    0x01fc00, 0x01fc00, 0x01fc00, 0x01fc00, 0x1ffff8, 0x1fff80, 0x1ffff8, 0x1ffff8, 0x1ffff8, 0x1ffff8,
    0x1ffff8, 0x1ffff8, 0x1ffff8, 0x1fff00, 0x1ffff8, 0x1fff00, 0x1ffff8, 0x1fff00, 0x1fff00, 0x1ffff8,
    0x1ffc00, 0x1ffc00, 0x1ffc00, 0x1ffc00, 0x1ffc00, 0x1ffc00, 0x1ffc00, 0x1ffc00, 0x1e0000, 0x1ffc00,
    0x1ffc00, 0x03fc00, 0x1c0000, 0x1c0000, 0x1ffc00, 0x1e0000, 0x000200, 0x000200, 0x000200, 0x000200,
    0x000200, 0x000200, 0x000200, 0x000200, 0x000200, 0x000200, 0x000200, 0x000200, 0x000200, 0x000200,
    0x000200, 0x000200, 0x000001, 0x000001, 0x000001, 0x000001, 0x000001, 0x000001, 0x000001, 0x1ffffe,
    0x1ffffe, 0x1ffffe, 0x1ffffe, 0x1ffffe, 0x1ffffe, 0x1ffffe, 0x1fffff, 0x1ffffe, 0x1fffff, 0x1fffff,
    0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1ffff8, 0x1fffff, 0x1fffff, 0x1fffff, 0x1f0000,
    0x1ffff8, 0x1fffff, 0x1fffff, 0x1fffc0, 0x1fffff, 0x1fff80, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff,
    0x1fffff, 0x1ffffe, 0x1fffc0, 0x1e0000, 0x1fffe0, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff,
    0x1fffff, 0x1fff80, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1ffffe, 0x1ffffc, 0x1fff00,
    0x1fffff, 0x1ffff8, 0x1ffff8, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fff80, 0x1fffff, 0x1fffff,
    0x1fffff, 0x1fffff, 0x1fffff, 0x1ffffe, 0x1fffff, 0x1c0000, 0x1ffffc, 0x1fffff, 0x1ffffc, 0x1ffffc,
    0x1fffff, 0x1fffff, 0x1fffc0, 0x1fff80, 0x1fffc0, 0x1fffc0, 0x1fffc0, 0x1fffc0, 0x1fffc0, 0x1fffc0,
    0x1fffc0, 0x1fff00, 0x1fffc0, 0x1fffc0, 0x1fffc0, 0x1fffc0, 0x1fffc0, 0x1fffc0, 0x1fffff, 0x1fff80,
    0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1ffffe, 0x1ffff8, 0x1ffff8, 0x1fffff, 0x1fffff,
    0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fff80, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff,
    0x1ffffe, 0x1ffff8, 0x1ffff8, 0x1fffff, 0x1fffff, 0x1fffff, 0x000001, 0x1ffffe, 0x1fffff, 0x1fff80,
    0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1ffffe, 0x1fffff, 0x1f8000, 0x1ffc00, 0x1fe000,
    0x1fe000, 0x1fffff, 0x1ffffc, 0x1fffff, 0x1fff80, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff,
    0x1ffffe, 0x1ffffe, 0x1fffc0, 0x1ffffc, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffc0, 0x1fff80,
    0x1fffc0, 0x1fffc0, 0x1fffc0, 0x1fffc0, 0x1fffc0, 0x1fffc0, 0x1fffc0, 0x180000, 0x1e0000, 0x1fffc0,
    0x1fff00, 0x1fffc0, 0x1c0000, 0x1e0000, 0x1e0000, 0x1e0000, 0x1e0000, 0x1e0000, 0x1e0000, 0x1e0000,
    0x1e0000, 0x1e0000, 0x1e0000, 0x1e0000, 0x1e0000, 0x1e0000, 0x1e0000, 0x020000, 0x1fc000, 0x1fc000,
    0x1fc000, 0x1fc000, 0x1fc000, 0x1fc000, 0x1fc000, 0x1fc000, 0x1fc000, 0x1e0000, 0x1e0000, 0x1fc000,
    0x1fc000, 0x01c000, 0x1e0000, 0x1fffc0, 0x1fff80, 0x1fffc0, 0x1fffc0, 0x1fffc0, 0x1fffc0, 0x1fffc0,
    0x1fffc0, 0x1fffc0, 0x1fffc0, 0x1fffc0, 0x1fffc0, 0x180000, 0x1fffc0, 0x1fffc0, 0x1ffff8, 0x1fff80,
    0x1ffff8, 0x1ffff8, 0x1ffff8, 0x1ffff8, 0x1ffff8, 0x1ffff8, 0x1ffff8, 0x1ffff8, 0x1ffff8, 0x1ffff8,
    0x1ffff8, 0x1ffff0, 0x1ffff0, 0x1fff00, 0x1fff00, 0x1fff00, 0x1fff00, 0x1fff00, 0x1fff00, 0x1fff00,
    0x1fff00, 0x1fff00, 0x1e0000, 0x1e0000, 0x1fff00, 0x1fff00, 0x1fff00, 0x1fff00, 0x1fffc0, 0x1fff80,
    0x1fffc0, 0x1fffc0, 0x1fffc0, 0x1fffc0, 0x1fffc0, 0x1fffc0, 0x1fffc0, 0x1fffc0, 0x1fffc0, 0x1fffc0,
    0x1fff00, 0x1fffc0, 0x1fff00, 0x1fffc0, 0x1fff80, 0x1fffc0, 0x1fffc0, 0x1fffc0, 0x1fffc0, 0x1fffc0,
    0x1fffc0, 0x1fffc0, 0x1fffc0, 0x1fffc0, 0x1fffc0, 0x1fe000, 0x1fffc0, 0x1fe000, 0x1fc000, 0x1fc000,
    0x1fc000, 0x1fc000, 0x1fc000, 0x1fc000, 0x1fc000, 0x1fc000, 0x1fc000, 0x1e0000, 0x1e0000, 0x1e0000,
    0x1fc000, 0x1fc000, 0x01c000, 0x1f0000, 0x1f0000, 0x1f0000, 0x1f0000, 0x1f0000, 0x1f0000, 0x1f0000,
    0x1f0000, 0x1f0000, 0x1e0000, 0x1e0000, 0x1f0000, 0x1e0000, 0x1f0000, 0x010000, 0x1fffc0, 0x1fff80,
    0x1fffc0, 0x1fffc0, 0x1fffc0, 0x1fffc0, 0x1fffc0, 0x1fffc0, 0x1fffc0, 0x1fff00, 0x1fff00, 0x1fffc0,
    0x1fff00, 0x1fff00, 0x1fff00, 0x1fffc0, 0x1fff80, 0x1fffc0, 0x1fffc0, 0x1fffc0, 0x1fffc0, 0x1fffc0,
    0x1fffc0, 0x1fffc0, 0x1fffc0, 0x1fff00, 0x1fffc0, 0x1f0000, 0x1fffc0, 0x1e0000, 0x1f8000, 0x1f8000,
    0x1f8000, 0x1f8000, 0x1f8000, 0x1f8000, 0x1f8000, 0x1f8000, 0x1f8000, 0x1f8000, 0x1f8000, 0x1f8000,
    0x1f8000, 0x1c0000, 0x1e0000, 0x1fffff, 0x1fff80, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff,
    0x1ffffe, 0x1ffffe, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fe000, 0x1fffff, 0x1ffe00, 0x1ffe00,
    0x1ffe00, 0x1ffe00, 0x1ffe00, 0x1ffe00, 0x1ffe00, 0x1ffe00, 0x1ffe00, 0x1ffe00, 0x1ffe00, 0x1ffe00,
    0x1ffe00, 0x001e00, 0x1ffe00, 0x1ffff8, 0x1fff80, 0x1ffff8, 0x1ffff8, 0x1ffff8, 0x1ffff8, 0x1ffff8,
    0x1ffff8, 0x1ffff8, 0x1ffff8, 0x1ffff8, 0x1ffff8, 0x1ffff8, 0x1ffff8, 0x1ffff8, 0x1c0000, 0x1c0000,
    0x1c0000, 0x1c0000, 0x1c0000, 0x1c0000, 0x1c0000, 0x1c0000, 0x1c0000, 0x180000, 0x1c0000, 0x1c0000,
    0x1c0000, 0x1c0000, 0x1c0000, 0x1ff000, 0x1ff000, 0x1ff000, 0x1ff000, 0x1ff000, 0x1ff000, 0x1ff000,
    0x1ff000, 0x00f000, 0x030000, 0x1c0000, 0x1f0000, 0x1f0000, 0x1fe000, 0x00f000, 0x1fffff, 0x1fff80,
    0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1ffffe, 0x1fffff, 0x1fffff, 0x1fffff, 0x180000,
    0x180000, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fff80, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff,
    0x1ffffe, 0x1fffff, 0x1fffff, 0x1fffe0, 0x1fffc0, 0x1fffc0, 0x1fffc0, 0x1fff00, 0x1fffff, 0x1fff80,
    0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1ffffe, 0x1ffffe, 0x1fffff, 0x000001, 0x1ffffe,
    0x1fffff, 0x1fffff, 0x1fffc0, 0x1fffc0, 0x1fffff, 0x1ffffc, 0x1fffff, 0x1fffff, 0x1fe000, 0x1fffff,
    0x1fe000, 0x1fe000, 0x1fffff, 0x1ffffc, 0x1ffffc, 0x1ffffc, 0x1fffff, 0x1fffff, 0x00fc00, 0x00fc00,
    0x00fc00, 0x00fc00, 0x00fc00, 0x00fc00, 0x00fc00, 0x00fc00, 0x00fc00, 0x00e000, 0x00e000, 0x00e000,
    0x00f000, 0x00f000, 0x00f000, 0x1ffffe, 0x1fff80, 0x1ffffe, 0x1ffffe, 0x1ffffe, 0x1ffffe, 0x1ffffe,
    0x1ffffe, 0x1ffffe, 0x1fffc0, 0x1ffffe, 0x1ffffe, 0x1ffffe, 0x1fffc0, 0x1fffc0, 0x01fc00, 0x01fc00,
    0x01fc00, 0x01fc00, 0x01fc00, 0x01fc00, 0x01fc00, 0x01fc00, 0x01fc00, 0x01fc00, 0x01fc00, 0x01fc00,
    0x01fc00, 0x01fc00, 0x01fc00, 0x1fff00, 0x1fff00, 0x1fff00, 0x1fff00, 0x1fff00, 0x1fff00, 0x1fff00,
    0x1fff00, 0x1fff00, 0x1fff00, 0x1fff00, 0x1f8000, 0x1fff00, 0x1fff00, 0x1fff00, 0x1fffff, 0x1fff80,
    0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1ffffe, 0x1ffffe,
    0x1fffff, 0x1f8000, 0x1fffff, 0x1ffc00, 0x1ffc00, 0x1ffc00, 0x1ffc00, 0x1ffc00, 0x1ffc00, 0x1ffc00,
    0x1ffc00, 0x1ffc00, 0x01f000, 0x00f000, 0x1ffc00, 0x1f0000, 0x1ffc00, 0x1ffc00, 0x1c0000, 0x1c0000,
    0x1c0000, 0x1c0000, 0x1c0000, 0x1c0000, 0x1c0000, 0x1c0000, 0x1c0000, 0x1c0000, 0x1c0000, 0x1c0000,
    0x100000, 0x1c0000, 0x1c0000, 0x1ffe00, 0x1ffe00, 0x1ffe00, 0x1ffe00, 0x1ffe00, 0x1ffe00, 0x1ffe00,
    0x1ffe00, 0x1ffe00, 0x1f8000, 0x1f8000, 0x1f8000, 0x1ffe00, 0x001e00, 0x1fe000, 0x1fe000, 0x001e00,
    0x1fe000, 0x1fe000, 0x1fe000, 0x1fe000, 0x1fe000, 0x1fe000, 0x1fe000, 0x1fe000, 0x1ffe00, 0x1ffe00,
    0x1e0000, 0x1ffe00, 0x1ffe00, 0x1fffff, 0x1fff80, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff,
    0x1ffffe, 0x1ffffe, 0x1fffc0, 0x1ffff8, 0x1ffffe, 0x1ffffe, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fff80,
    0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1ffffe, 0x1fffff, 0x1c0000, 0x1ffffc, 0x1fffff,
    0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fff80, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff,
    0x1ffffe, 0x1fffff, 0x1c0000, 0x1ffffc, 0x1fffff, 0x1fffff, 0x1fffff, 0x1ffff8, 0x00f000, 0x00f000,
    0x00f000, 0x00f000, 0x00f000, 0x00f000, 0x00f000, 0x00f000, 0x00f000, 0x00f000, 0x00f000, 0x00f000,
    0x00f000, 0x00f000, 0x00f000, 0x1fffff, 0x1fff80, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff,
    0x1ffffe, 0x1ffff8, 0x1fffff, 0x1fffff, 0x1fffff, 0x000001, 0x1fe000, 0x1ffffe, 0x1fffc0, 0x1fff80,
    0x1fffc0, 0x1fffc0, 0x1fffc0, 0x1fffc0, 0x1fffc0, 0x1fffc0, 0x1fffc0, 0x1fffc0, 0x1fffc0, 0x1fffc0,
    0x1fffc0, 0x1f0000, 0x1fff80, 0x1ffff8, 0x1fffff, 0x000001, 0x000001, 0x1ffffe, 0x1ffffe, 0x1fffff,
    0x1fffc0, 0x1ffff8, 0x1c0000, 0x1fffff, 0x000001, 0x1ffffe, 0x1fffff, 0x1fffff, 0x1c0000, 0x1c0000,
    0x1c0000, 0x1c0000, 0x1c0000, 0x1c0000, 0x1c0000, 0x1c0000, 0x1c0000, 0x1c0000, 0x1c0000, 0x1c0000,
    0x1c0000, 0x100000, 0x1c0000, 0x1c0000, 0x1c0000, 0x1c0000, 0x1c0000, 0x1c0000, 0x1c0000, 0x1c0000,
    0x1c0000, 0x1c0000, 0x1c0000, 0x1c0000, 0x180000, 0x1c0000, 0x1c0000, 0x1c0000, 0x1fffff, 0x1fff80,
    0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1ffffe, 0x1ffffe, 0x1fffff, 0x000001, 0x000001,
    0x1ffffe, 0x1ffffe, 0x1fffff, 0x1ffff8, 0x1fff80, 0x1ffff8, 0x1ffff8, 0x1ffff8, 0x1ffff8, 0x1ffff8,
    0x1ffff8, 0x1ffff8, 0x1f8000, 0x1f0000, 0x1ffff8, 0x1e0000, 0x1ffff8, 0x1f8000, 0x1fff00, 0x1fff00,
    0x1fff00, 0x1fff00, 0x1fff00, 0x1fff00, 0x1fff00, 0x1fff00, 0x1fff00, 0x1fff00, 0x1c0000, 0x1fff00,
    0x1fff00, 0x1fff00, 0x1fe000, 0x1fffff, 0x1fff80, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff,
    0x1ffffe, 0x1fffc0, 0x1ffffc, 0x1ffffe, 0x1fffff, 0x1fffc0, 0x1fffff, 0x1fffff, 0x1fff80, 0x1fffff,
    0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1ffffe, 0x1fffff, 0x1fffff, 0x1fffc0, 0x1fffff, 0x1fff00,
    0x1fffff, 0x1fffff, 0x1fff80, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1ffffe, 0x1fffc0,
    0x1ffffc, 0x1fffff, 0x1fffff, 0x1fffff, 0x1ffffc, 0x1fffff, 0x1fff80, 0x1fffff, 0x1fffff, 0x1fffff,
    0x1fffff, 0x1fffff, 0x1ffffe, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1ffff8, 0x1ffff8, 0x1f0000,
    0x1f0000, 0x1f0000, 0x1f0000, 0x1f0000, 0x1f0000, 0x1f0000, 0x1f0000, 0x1f0000, 0x1f0000, 0x1e0000,
    0x1f0000, 0x1f0000, 0x1f0000, 0x1fffff, 0x1fff80, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff,
    0x1ffffe, 0x1fffff, 0x1ffff8, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1ffff8, 0x1fffc0, 0x1c0000,
    0x1c0000, 0x1fffff, 0x000001, 0x000001, 0x1ffffe, 0x1ffffe, 0x1fffff, 0x000001, 0x000001, 0x1ffffe,
    0x1ffffe, 0x1fc000, 0x1fc000, 0x1fc000, 0x1fc000, 0x1fc000, 0x1fc000, 0x1fc000, 0x1fc000, 0x1fc000,
    0x1f0000, 0x1fc000, 0x1fc000, 0x1fc000, 0x1fc000, 0x1fc000, 0x1fc000, 0x1fc000, 0x1fc000, 0x1fc000,
    0x1fc000, 0x1fc000, 0x1fc000, 0x1fc000, 0x1fc000, 0x030000, 0x1c0000, 0x1fc000, 0x1fc000, 0x1fe000,
    0x1fe000, 0x1fe000, 0x1fe000, 0x1fe000, 0x1fe000, 0x1fe000, 0x1fe000, 0x1fe000, 0x1fe000, 0x1fe000,
    0x1fe000, 0x1fe000, 0x1e0000, 0x1ff000, 0x1ff000, 0x1ff000, 0x1ff000, 0x1ff000, 0x1ff000, 0x1ff000,
    0x1ff000, 0x1ff000, 0x1e0000, 0x180000, 0x1e0000, 0x1ff000, 0x1fe000, 0x1ffc00, 0x1ffc00, 0x1ffc00,
    0x1ffc00, 0x1ffc00, 0x1ffc00, 0x1ffc00, 0x1ffc00, 0x01fc00, 0x000c00, 0x000c00, 0x1ff000, 0x1ff000,
    0x1e0000, 0x1fffc0, 0x1fff80, 0x1fffc0, 0x1fffc0, 0x1fffc0, 0x1fffc0, 0x1fffc0, 0x1fffc0, 0x1fffc0,
    0x1f8000, 0x1fffc0, 0x1c0000, 0x1fffc0, 0x1fffc0, 0x1fffc0, 0x1fff80, 0x1fffc0, 0x1fffc0, 0x1fffc0,
    0x1fffc0, 0x1fffc0, 0x1fffc0, 0x1fffc0, 0x1fffc0, 0x1fffc0, 0x1fff00, 0x1fffc0, 0x1fff00, 0x1fffc0,
    0x1fff80, 0x1fffc0, 0x1fffc0, 0x1fffc0, 0x1fffc0, 0x1fffc0, 0x1fffc0, 0x1fffc0, 0x1fffc0, 0x1fffc0,
    0x1fffc0, 0x1fffc0, 0x1fff00, 0x1fffc0, 0x1fff80, 0x1fffc0, 0x1fffc0, 0x1fffc0, 0x1fffc0, 0x1fffc0,
    0x1fffc0, 0x1fffc0, 0x1fe000, 0x1fffc0, 0x1fffc0, 0x1fffc0, 0x1fffc0, 0x1ffff0, 0x1fff80, 0x1ffff0,
    0x1ffff0, 0x1ffff0, 0x1ffff0, 0x1ffff0, 0x1ffff0, 0x1ffff0, 0x1ffff0, 0x1ffff0, 0x1ffff0, 0x1ffff0,
    0x1ffff0, 0x1fff00, 0x1fff00, 0x1fff00, 0x1fff00, 0x1fff00, 0x1fff00, 0x1fff00, 0x1fff00, 0x1fff00,
    0x1fff00, 0x1fff00, 0x1fff00, 0x1ff800, 0x1fff00, 0x1fffc0, 0x1fff80, 0x1fffc0, 0x1fffc0, 0x1fffc0,
    0x1fffc0, 0x1fffc0, 0x1fffc0, 0x1fffc0, 0x1fffc0, 0x1fffc0, 0x1fff00, 0x1fffc0, 0x1fffc0, 0x1fffc0,
    0x1fff80, 0x1fffc0, 0x1fffc0, 0x1fffc0, 0x1fffc0, 0x1fffc0, 0x1fffc0, 0x1fffc0, 0x1fffc0, 0x1fffc0,
    0x1fffc0, 0x1e0000, 0x1fffc0, 0x1fffc0, 0x1fff80, 0x1fffc0, 0x1fffc0, 0x1fffc0, 0x1fffc0, 0x1fffc0,
    0x1fffc0, 0x1fffc0, 0x1fffc0, 0x100000, 0x1fffc0, 0x1fffc0, 0x1fffc0, 0x1fff00, 0x1fff00, 0x1fff00,
    0x1fff00, 0x1fff00, 0x1fff00, 0x1fff00, 0x1fff00, 0x1fff00, 0x1f8000, 0x1fff00, 0x1fff00, 0x1fff00,
    0x1fff00, 0x1f8000, 0x1f8000, 0x1f8000, 0x1f8000, 0x1f8000, 0x1f8000, 0x1f8000, 0x1f8000, 0x1e0000,
    0x1e0000, 0x1f8000, 0x1e0000, 0x1e0000, 0x1e0000, 0x1fffff, 0x1fff80, 0x1fffff, 0x1fffff, 0x1fffff,
    0x1fffff, 0x1fffff, 0x1fffff, 0x1ffff8, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff,
    0x1fff80, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1ffffe, 0x1ffffc, 0x1fe000, 0x1ffffc,
    0x1fffff, 0x1fffff, 0x1fffff, 0x1ffc00, 0x1ffc00, 0x1ffc00, 0x1ffc00, 0x1ffc00, 0x1ffc00, 0x1ffc00,
    0x1ffc00, 0x1ffc00, 0x1ffc00, 0x1ffc00, 0x03fc00, 0x1c0000, 0x1ffc00, 0x1ffff8, 0x1fff80, 0x1ffff8,
    0x1ffff8, 0x1ffff8, 0x1ffff8, 0x1ffff8, 0x1ffff8, 0x1ffff8, 0x1fe000, 0x1ffff8, 0x1ffff8, 0x1fffc0,
    0x1fffc0, 0x1ffffe, 0x1fff80, 0x1ffffe, 0x1ffffe, 0x1ffffe, 0x1ffffe, 0x1ffffe, 0x1ffffe, 0x1ffffe,
    0x1ffffe, 0x1ffffe, 0x1fe000, 0x1fff80, 0x1ffffe, 0x0c0000, 0x0c0000, 0x0c0000, 0x0c0000, 0x0c0000,
    0x0c0000, 0x0c0000, 0x0c0000, 0x0c0000, 0x0c0000, 0x0c0000, 0x0c0000, 0x0c0000, 0x0c0000, 0x1fffff,
    0x1fff80, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1ffffe, 0x1fffff, 0x1ffffc, 0x1fffff,
    0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fff80, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff,
    0x1ffffe, 0x1f0000, 0x1fffff, 0x000001, 0x1ffffe, 0x1fffff, 0x1ffff8, 0x1fffff, 0x1fff80, 0x1fffff,
    0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1ffffe, 0x1fffff, 0x1c0000, 0x1ffffc, 0x1fffff, 0x1ffffe,
    0x1fffff, 0x1ff000, 0x1ff000, 0x1ff000, 0x1ff000, 0x1ff000, 0x1ff000, 0x1ff000, 0x1ff000, 0x1ff000,
    0x1ff000, 0x1ff000, 0x00f000, 0x1f0000, 0x1f0000, 0x1ffffc, 0x1fff80, 0x1ffffc, 0x1ffffc, 0x1ffffc,
    0x1ffffc, 0x1ffffc, 0x1ffffc, 0x1ffffc, 0x1fe000, 0x1ffffc, 0x1ffff8, 0x1fffc0, 0x1ffffc, 0x1ffff8,
    0x1fff80, 0x1ffff8, 0x1ffff8, 0x1ffff8, 0x1ffff8, 0x1ffff8, 0x1ffff8, 0x1ffff8, 0x1ffff8, 0x1ffff8,
    0x1fe000, 0x1ffff8, 0x1ffff8, 0x1fffff, 0x1f8000, 0x1f8000, 0x1f8000, 0x180000, 0x1f8000, 0x1fffff,
    0x1fffff, 0x1fffff, 0x1f8000, 0x1fffff, 0x1fffff, 0x1f8000, 0x1fffff, 0x1fffff, 0x1fff80, 0x1fffff,
    0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1ffffe, 0x1fffc0, 0x1ffffc, 0x1ffffe, 0x1fffff, 0x1fffff,
    0x1fffff, 0x1fff80, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1ffffe, 0x1fffc0, 0x1ffff8,
    0x1ffff8, 0x1ffff8, 0x1fffff, 0x1e0000, 0x1e0000, 0x1e0000, 0x1e0000, 0x1e0000, 0x1e0000, 0x1e0000,
    0x1e0000, 0x1e0000, 0x1e0000, 0x020000, 0x1c0000, 0x1e0000, 0x1f0000, 0x1f0000, 0x1f0000, 0x1f0000,
    0x1f0000, 0x1f0000, 0x1f0000, 0x1f0000, 0x1f0000, 0x1f0000, 0x1f0000, 0x1f0000, 0x1e0000, 0x1f0000,
    0x1f0000, 0x1f0000, 0x1f0000, 0x1f0000, 0x1f0000, 0x1f0000, 0x1f0000, 0x1f0000, 0x030000, 0x1c0000,
    0x1c0000, 0x1f0000, 0x1ff000, 0x1ff000, 0x1ff000, 0x1ff000, 0x1ff000, 0x1ff000, 0x1ff000, 0x1ff000,
    0x001000, 0x1fe000, 0x101000, 0x1ff000, 0x001000, 0x1fe000, 0x1fe000, 0x1fe000, 0x1fe000, 0x1fe000,
    0x1fe000, 0x1fe000, 0x1fe000, 0x1fe000, 0x00e000, 0x180000, 0x1fe000, 0x00e000, 0x07e000, 0x07e000,
    0x07e000, 0x07e000, 0x07e000, 0x07e000, 0x07e000, 0x07e000, 0x07e000, 0x002000, 0x002000, 0x07c000,
    0x07c000, 0x1fffff, 0x1fff80, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1ffffe, 0x1fffff,
    0x000001, 0x1ffffe, 0x1fffff, 0x1fffc0, 0x1fffc0, 0x1fff80, 0x1fffc0, 0x1fffc0, 0x1fffc0, 0x1fffc0,
    0x1fffc0, 0x1fffc0, 0x1fffc0, 0x1fffc0, 0x1fe000, 0x1fffc0, 0x1fffc0, 0x1f0000, 0x1f0000, 0x1f0000,
    0x1f0000, 0x1f0000, 0x1f0000, 0x1f0000, 0x1f0000, 0x1f0000, 0x1e0000, 0x1e0000, 0x1f0000, 0x1f0000,
    0x1fe000, 0x1fe000, 0x1fe000, 0x1fe000, 0x1fe000, 0x1fe000, 0x1fe000, 0x1fe000, 0x1fe000, 0x1e0000,
    0x1e0000, 0x1fe000, 0x1fe000, 0x1fff00, 0x1fff00, 0x1fff00, 0x1fff00, 0x1fff00, 0x1fff00, 0x1fff00,
    0x1fff00, 0x1fff00, 0x1c0000, 0x1c0000, 0x1fff00, 0x1fff00, 0x1fe000, 0x1fe000, 0x1fe000, 0x1fe000,
    0x1fe000, 0x1fe000, 0x1fe000, 0x1fe000, 0x1f0000, 0x1c0000, 0x1c0000, 0x1fe000, 0x1fe000, 0x1fff00,
    0x1fff00, 0x1fff00, 0x1fff00, 0x1fff00, 0x1fff00, 0x1fff00, 0x1fff00, 0x1fff00, 0x1fff00, 0x1fe000,
    0x1fff00, 0x1fff00, 0x01c000, 0x01c000, 0x01c000, 0x01c000, 0x01c000, 0x01c000, 0x01c000, 0x01c000,
    0x01c000, 0x010000, 0x01c000, 0x01c000, 0x01c000, 0x1ffff0, 0x1fff80, 0x1ffff0, 0x1ffff0, 0x1ffff0,
    0x1ffff0, 0x1ffff0, 0x1ffff0, 0x1ffff0, 0x1ffff0, 0x1ffff0, 0x1ffff0, 0x1c0000, 0x1fffff, 0x1fff80,
    0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1ffffe, 0x1ffff8, 0x1fffc0, 0x1fffff, 0x1fffff,
    0x1fffff, 0x1fffff, 0x1fff80, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x000001, 0x1ffffe,
    0x1ffffe, 0x1ffffe, 0x1fffff, 0x1fffff, 0x1ffffc, 0x1fff80, 0x1ffffc, 0x1ffffc, 0x1ffffc, 0x1ffffc,
    0x1ffffc, 0x1ffffc, 0x1ffffc, 0x1ffffc, 0x1ffffc, 0x1ffffc, 0x1ffffc, 0x1ffff0, 0x1fff80, 0x1ffff0,
    0x1ffff0, 0x1ffff0, 0x1ffff0, 0x1ffff0, 0x1ffff0, 0x1ffff0, 0x1fe000, 0x1ffff0, 0x1ffff0, 0x1fffc0,
    0x1fffff, 0x1fff80, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1ffffe, 0x1ffffe, 0x1fffc0,
    0x1fffff, 0x1fffff, 0x1fffc0, 0x1f0000, 0x1f0000, 0x1f0000, 0x1f0000, 0x1f0000, 0x1f0000, 0x1f0000,
    0x1f0000, 0x030000, 0x100000, 0x1c0000, 0x1f0000, 0x1f0000, 0x1fffff, 0x000001, 0x1ffffe, 0x1fffff,
    0x1fffff, 0x1fffff, 0x000001, 0x1ffffe, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1ffff8, 0x1fffff,
    0x1ffff8, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff,
    0x1fffff, 0x1fffff, 0x000001, 0x1fffc0, 0x1ffffe, 0x1fe000, 0x1fffff, 0x1fffff, 0x1fe000, 0x1fffff,
    0x1fe000, 0x1fe000, 0x1fffff, 0x1fffff, 0x1fffff, 0x01f000, 0x01f000, 0x01f000, 0x01f000, 0x01f000,
    0x01f000, 0x01f000, 0x01f000, 0x01f000, 0x01f000, 0x01f000, 0x01f000, 0x01f000, 0x1ffc00, 0x1ffc00,
    0x1ffc00, 0x1ffc00, 0x1ffc00, 0x1ffc00, 0x1ffc00, 0x1ffc00, 0x000c00, 0x000c00, 0x1ff000, 0x1ff000,
    0x1ffc00, 0x1ffff8, 0x1fff80, 0x1ffff8, 0x1ffff8, 0x1ffff8, 0x1ffff8, 0x1ffff8, 0x1ffff8, 0x1ffff8,
    0x1ffff8, 0x1fe000, 0x1ffff8, 0x1ffff8, 0x1e0000, 0x1e0000, 0x1e0000, 0x1e0000, 0x1e0000, 0x1e0000,
    0x1e0000, 0x1e0000, 0x1e0000, 0x020000, 0x1c0000, 0x1c0000, 0x1e0000, 0x1ffff8, 0x1fff80, 0x1ffff8,
    0x1ffff8, 0x1ffff8, 0x1ffff8, 0x1ffff8, 0x1ffff8, 0x1ffff8, 0x1ffff8, 0x1ffff8, 0x1ffff8, 0x1e0000,
    0x1ffc00, 0x1ffc00, 0x1ffc00, 0x1ffc00, 0x1ffc00, 0x1ffc00, 0x1ffc00, 0x1ffc00, 0x00fc00, 0x000c00,
    0x1ff000, 0x1ff000, 0x1ff000, 0x00fc00, 0x00fc00, 0x00fc00, 0x00fc00, 0x00fc00, 0x00fc00, 0x00fc00,
    0x00fc00, 0x00fc00, 0x00fc00, 0x000c00, 0x00f000, 0x00fc00, 0x1ffff8, 0x1fff80, 0x1ffff8, 0x1ffff8,
    0x1ffff8, 0x1ffff8, 0x1ffff8, 0x1ffff8, 0x1ffff8, 0x1ffff8, 0x1ffff8, 0x1fff00, 0x1ffff8, 0x1f0000,
    0x1f0000, 0x1f0000, 0x1f0000, 0x1f0000, 0x1f0000, 0x1f0000, 0x1f0000, 0x1f0000, 0x1f0000, 0x1f0000,
    0x1f0000, 0x100000, 0x1ffe00, 0x1ffe00, 0x1ffe00, 0x1ffe00, 0x1ffe00, 0x1ffe00, 0x1ffe00, 0x1ffe00,
    0x1e0000, 0x1e0000, 0x1e0000, 0x1ffe00, 0x1ffe00, 0x1f8000, 0x1f8000, 0x1f8000, 0x1f8000, 0x1f8000,
    0x1f8000, 0x1f8000, 0x1f8000, 0x1fe000, 0x1f8000, 0x1ffc00, 0x001c00, 0x1f8000, 0x007c00, 0x007c00,
    0x007c00, 0x007c00, 0x007c00, 0x007c00, 0x007c00, 0x007c00, 0x007c00, 0x007c00, 0x007c00, 0x007c00,
    0x007c00, 0x1fff80, 0x1fff80, 0x1fffff, 0x1fff80, 0x1fff80, 0x1fff80, 0x1fffff, 0x1fffff, 0x1fffff,
    0x1fff80, 0x1fff80, 0x1fff80, 0x1fff80, 0x1f8000, 0x1f8000, 0x1f8000, 0x1f8000, 0x1f8000, 0x1f8000,
    0x1f8000, 0x1f8000, 0x038000, 0x018000, 0x1f8000, 0x1f8000, 0x018000, 0x1ffc00, 0x1ffc00, 0x1ffc00,
    0x1ffc00, 0x1ffc00, 0x1ffc00, 0x1ffc00, 0x1ffc00, 0x1ffc00, 0x180000, 0x1ffc00, 0x1ffc00, 0x1ffc00,
    0x1fe000, 0x1fe000, 0x1fe000, 0x1fe000, 0x1fe000, 0x1fe000, 0x1fe000, 0x1fe000, 0x1fe000, 0x1ffe00,
    0x1f8000, 0x1f8000, 0x1ffe00, 0x1fe000, 0x001e00, 0x1fe000, 0x1fe000, 0x1fe000, 0x1fe000, 0x1fe000,
    0x1fe000, 0x1fe000, 0x1fe000, 0x1ffe00, 0x1e0000, 0x1ffe00, 0x1fff00, 0x1fff00, 0x1fff00, 0x1fff00,
    0x1fff00, 0x1fff00, 0x1fff00, 0x1fff00, 0x1fff00, 0x1fff00, 0x1f0000, 0x1fff00, 0x1fff00, 0x1c0000,
    0x1c0000, 0x1c0000, 0x1c0000, 0x1c0000, 0x1c0000, 0x1c0000, 0x1c0000, 0x040000, 0x040000, 0x180000,
    0x180000, 0x180000, 0x1fffff, 0x000001, 0x1ffffe, 0x1fffff, 0x1fffff, 0x000001, 0x1ffffe, 0x1ffffe,
    0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x000000, 0x1fffff, 0x1fff80, 0x1fffff, 0x1fffff, 0x1fffff,
    0x1fffff, 0x1fffff, 0x1ffffe, 0x1ffffc, 0x1fffff, 0x1fffff, 0x000001, 0x1ffff8, 0x1fffff, 0x1fff80,
    0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1ffffe, 0x1fffff, 0x1c0000, 0x1fffff, 0x1fffff,
    0x1fffff, 0x1fe000, 0x1fe000, 0x1fe000, 0x1fe000, 0x1fe000, 0x1fe000, 0x1fe000, 0x1fe000, 0x1fe000,
    0x1fe000, 0x1fe000, 0x1e0000, 0x1e0000, 0x1ffe00, 0x1ffe00, 0x1ffe00, 0x1ffe00, 0x1ffe00, 0x1ffe00,
    0x1ffe00, 0x1ffe00, 0x1ffe00, 0x180000, 0x1ff000, 0x1ff000, 0x1ff000, 0x1ffffc, 0x1fff80, 0x1ffffc,
    0x1ffffc, 0x1ffffc, 0x1ffffc, 0x1ffffc, 0x1ffffc, 0x1ffffc, 0x1fe000, 0x1ffffc, 0x1ffff8, 0x1ffffc,
    0x1fffff, 0x1fff80, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1ffffe, 0x1fffff, 0x1ffff8,
    0x1ffff8, 0x1ffff8, 0x1fffff, 0x1fffff, 0x1fff80, 0x1fffff, 0x000001, 0x000001, 0x1ffffe, 0x1ffffe,
    0x1fffff, 0x000001, 0x1ffffe, 0x1fffff, 0x000001, 0x1ffffe, 0x1ffe00, 0x1ffe00, 0x1ffe00, 0x1ffe00,
    0x1ffe00, 0x1ffe00, 0x1fe000, 0x1ffe00, 0x1ffe00, 0x1ffe00, 0x1ffe00, 0x1ffe00, 0x1fffff, 0x1fff80,
    0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1ffffe, 0x1fffff, 0x1fffff, 0x1fe000, 0x1fffff,
    0x1fffff, 0x1fff80, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x000001, 0x000001, 0x1ffffe,
    0x1ffffe, 0x1ffffe, 0x1ffff8, 0x1fffff, 0x1ffff8, 0x1fffff, 0x1fffff, 0x180000, 0x1ffff8, 0x1fffff,
    0x1fffff, 0x1ffff8, 0x1f0000, 0x1fffff, 0x1fffff, 0x1fff80, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff,
    0x1fffff, 0x1ffffe, 0x000000, 0x000000, 0x000000, 0x1fffff, 0x000001, 0x000001, 0x1ffffe, 0x1ffffe,
    0x1fffff, 0x1fffff, 0x1fff80, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffc0, 0x1fff80,
    0x1fffc0, 0x1fffc0, 0x1fffc0, 0x1fffc0, 0x1fffc0, 0x1fffc0, 0x1fffc0, 0x1fff00, 0x180000, 0x100000,
    0x001c00, 0x001c00, 0x001c00, 0x001c00, 0x001c00, 0x001c00, 0x001c00, 0x001c00, 0x001c00, 0x001c00,
    0x001c00, 0x001c00, 0x1fffff, 0x1fff80, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1ffffe,
    0x1fe000, 0x1fe000, 0x1fe000, 0x1fffff, 0x1fffc0, 0x1fff80, 0x1fffc0, 0x1fffc0, 0x1fffc0, 0x1fffc0,
    0x1fffc0, 0x1fffc0, 0x1fff00, 0x1fffc0, 0x1fffc0, 0x1fffc0, 0x07e000, 0x07e000, 0x07e000, 0x07e000,
    0x07e000, 0x07e000, 0x07e000, 0x07e000, 0x07e000, 0x07e000, 0x040000, 0x07e000, 0x1fffc0, 0x1fff80,
    0x1e0000, 0x1e0000, 0x1e0000, 0x1e0000, 0x1e0000, 0x1e0000, 0x1fffc0, 0x1fffc0, 0x1fffc0, 0x100000,
    0x00c000, 0x00c000, 0x00c000, 0x00c000, 0x00c000, 0x00c000, 0x00c000, 0x00c000, 0x00c000, 0x00c000,
    0x00c000, 0x00c000, 0x1fffc0, 0x1fff80, 0x1fffc0, 0x1fffc0, 0x1fffc0, 0x1fffc0, 0x1fffc0, 0x1fffc0,
    0x1fffc0, 0x1fffc0, 0x1fffc0, 0x1fe000, 0x002000, 0x002000, 0x002000, 0x002000, 0x002000, 0x002000,
    0x002000, 0x002000, 0x002000, 0x002000, 0x002000, 0x002000, 0x1fffc0, 0x1fff80, 0x1fffc0, 0x1fffc0,
    0x1fffc0, 0x1fffc0, 0x1fffc0, 0x1fffc0, 0x1fffc0, 0x1fffc0, 0x1fffc0, 0x180000, 0x1fff80, 0x1fff80,
    0x1fff80, 0x1fff80, 0x1fff80, 0x1fff80, 0x1fff80, 0x1fff80, 0x1fff80, 0x1fff80, 0x1fff80, 0x1fff80,
    0x1ffffe, 0x1fff80, 0x1ffffe, 0x1ffffe, 0x1ffffe, 0x1ffffe, 0x1ffffe, 0x1ffffe, 0x1ffffe, 0x1ffffe,
    0x1ffffe, 0x1ffffe, 0x00007f, 0x00007f, 0x00007f, 0x00007f, 0x00007f, 0x00007f, 0x00007f, 0x00007f,
    0x00007e, 0x00007e, 0x1fff80, 0x000000, 0x1ffff8, 0x1fffff, 0x000001, 0x000001, 0x1ffffe, 0x1ffffe,
    0x1fffff, 0x1ffff8, 0x1f0000, 0x1fff00, 0x1ffff8, 0x1fffff, 0x1ffc00, 0x1ffc00, 0x1ffc00, 0x1ffc00,
    0x1ffc00, 0x1ffc00, 0x1ffc00, 0x1ffc00, 0x00fc00, 0x030000, 0x1c0000, 0x1ffc00, 0x1ffe00, 0x1ffff8,
    0x1fffff, 0x1fffff, 0x1fff00, 0x1fffff, 0x1fe000, 0x1ffff8, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff,
    0x1ffe00, 0x1fff00, 0x1fff00, 0x1fff00, 0x1fff00, 0x1fff00, 0x1fe000, 0x1fff00, 0x1fff00, 0x1fff00,
    0x1fff00, 0x1fff00, 0x1ffff8, 0x1ffff8, 0x1ffff8, 0x1ffff8, 0x1ffff8, 0x1fffc0, 0x1ffff8, 0x1c0000,
    0x1fff00, 0x1fff00, 0x1fff00, 0x1ffff8, 0x1fffff, 0x1fff80, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff,
    0x1fffff, 0x1ffffe, 0x1ffffe, 0x1fffc0, 0x1ffff8, 0x1fffff, 0x1fffff, 0x1fff80, 0x1fffff, 0x1fffff,
    0x1fffff, 0x1fffff, 0x1fffff, 0x1ffffe, 0x1fffc0, 0x1ffff8, 0x1ffff8, 0x1fffff, 0x1ffff8, 0x1fffff,
    0x1ffc00, 0x1fffff, 0x1fffff, 0x00fc00, 0x1f0000, 0x1fffff, 0x1f0000, 0x1fffff, 0x1f0000, 0x1fffff,
    0x1ffe00, 0x1ffff8, 0x1ffffc, 0x1ffffc, 0x1fff00, 0x1ffffc, 0x1fe000, 0x1ffff8, 0x1ffffc, 0x1ffffc,
    0x1ffffc, 0x1ffffc, 0x1fffff, 0x1fff80, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1ffffe,
    0x1f0000, 0x1fffff, 0x1fffff, 0x1fffff, 0x1f8000, 0x1f8000, 0x1e0000, 0x1e0000, 0x1e0000, 0x1e0000,
    0x1e0000, 0x1e0000, 0x1f8000, 0x1f8000, 0x1f8000, 0x1f8000, 0x00f000, 0x00f000, 0x00f000, 0x00f000,
    0x00f000, 0x00f000, 0x00e000, 0x00f000, 0x00f000, 0x00f000, 0x00f000, 0x00f000, 0x1ff000, 0x1ff000,
    0x1ff000, 0x1ff000, 0x1ff000, 0x1ff000, 0x1fe000, 0x1ff000, 0x1ff000, 0x1ff000, 0x1ff000, 0x1ff000,
    0x00e000, 0x00e000, 0x00e000, 0x00e000, 0x00e000, 0x00e000, 0x00e000, 0x00e000, 0x00e000, 0x00e000,
    0x00e000, 0x00e000, 0x1ffe00, 0x1ffff8, 0x1ffffe, 0x1ffffe, 0x1fff00, 0x1ffffe, 0x1fe000, 0x1ffff8,
    0x1ffffe, 0x1ffffe, 0x1ffffe, 0x1ffffe, 0x1fffff, 0x1fff80, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff,
    0x1fffff, 0x1ffffe, 0x1ffffe, 0x1ffffe, 0x1fffff, 0x1fffff, 0x1ff000, 0x1ff000, 0x1ff000, 0x1ff000,
    0x1ff000, 0x1ff000, 0x1ff000, 0x1ff000, 0x1ff000, 0x07e000, 0x03c000, 0x1c0000, 0x1fe000, 0x1fe000,
    0x1fe000, 0x1fe000, 0x1fe000, 0x1fe000, 0x1fe000, 0x1fe000, 0x1fe000, 0x1fe000, 0x1fe000, 0x1f8000,
    0x1f8000, 0x1f8000, 0x1f8000, 0x1f8000, 0x1f8000, 0x1f8000, 0x1f8000, 0x1f8000, 0x1ffc00, 0x1fe000,
    0x1ffc00, 0x001c00, 0x1fffff, 0x000001, 0x000001, 0x000001, 0x1fff80, 0x1ffffe, 0x1ffffe, 0x1ffffe,
    0x1fffff, 0x1fffff, 0x000001, 0x1ffffe, 0x1fffff, 0x000001, 0x1ffffe, 0x1ffffe, 0x1fffff, 0x1fffff,
    0x000001, 0x000001, 0x1ffffe, 0x1ffffe, 0x1fffff, 0x1fffff, 0x1ffffc, 0x1fffff, 0x1fffff, 0x1fffff,
    0x1fffff, 0x1ffffc, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fe000, 0x1fffff, 0x1ffc00, 0x1ffc00,
    0x1ffc00, 0x1ffc00, 0x1ffc00, 0x1ffc00, 0x1ffc00, 0x1ffc00, 0x001c00, 0x1e0000, 0x1fe000, 0x1fe000,
    0x1ffe00, 0x1ffe00, 0x1ffe00, 0x1ffe00, 0x1ffe00, 0x1ffe00, 0x1ffe00, 0x1ffe00, 0x1ffe00, 0x1e0000,
    0x180000, 0x100000, 0x1fffff, 0x1fff80, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1ffffe,
    0x1f0000, 0x1fffff, 0x1ffffc, 0x1fffff, 0x1f8000, 0x1f8000, 0x1f8000, 0x1f8000, 0x1f8000, 0x1f8000,
    0x1f8000, 0x1f8000, 0x018000, 0x1e0000, 0x1f8000, 0x180000, 0x000e00, 0x000e00, 0x000e00, 0x000e00,
    0x000e00, 0x000e00, 0x000e00, 0x000e00, 0x000e00, 0x000e00, 0x000e00, 0x1ffc00, 0x1ffc00, 0x1ffc00,
    0x1ffc00, 0x1ffc00, 0x1ffc00, 0x1ffc00, 0x1ffc00, 0x1ffc00, 0x1f0000, 0x1ff000, 0x1ffffe, 0x1fff80,
    0x1ffffe, 0x1ffffe, 0x1ffffe, 0x1ffffe, 0x1ffffe, 0x1ffffe, 0x1fffff, 0x1fffff, 0x1fffff, 0x01fc00,
    0x01fc00, 0x01fc00, 0x01fc00, 0x01fc00, 0x01fc00, 0x01fc00, 0x01fc00, 0x01fc00, 0x001c00, 0x01fc00,
    0x040000, 0x040000, 0x040000, 0x040000, 0x040000, 0x040000, 0x040000, 0x040000, 0x040000, 0x040000,
    0x040000, 0x000001, 0x000001, 0x000001, 0x000001, 0x000001, 0x000001, 0x000001, 0x000001, 0x1ffffe,
    0x1ffffe, 0x1ffffe, 0x1fff00, 0x1fff00, 0x1fff00, 0x1fff00, 0x1fff00, 0x1fff00, 0x1fff00, 0x1fff00,
    0x1fff00, 0x1fff00, 0x1e0000, 0x1fffc0, 0x1fff80, 0x1fffc0, 0x1fffc0, 0x1fffc0, 0x1fffc0, 0x1fffc0,
    0x1fffc0, 0x1ff800, 0x1fe000, 0x1fffc0, 0x1fffc0, 0x1fff80, 0x1fffc0, 0x1fffc0, 0x1fffc0, 0x1fffc0,
    0x1fffc0, 0x1fffc0, 0x1ff800, 0x1fffc0, 0x1fffc0, 0x010000, 0x010000, 0x010000, 0x010000, 0x010000,
    0x010000, 0x010000, 0x010000, 0x010000, 0x010000, 0x010000, 0x1f0000, 0x1f0000, 0x1f0000, 0x1f0000,
    0x1f0000, 0x1f0000, 0x1f0000, 0x1f0000, 0x1f0000, 0x100000, 0x1f0000, 0x000001, 0x1ffffe, 0x1fffff,
    0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1ffff8, 0x1ffff8, 0x1ffff8, 0x000001, 0x000001,
    0x000001, 0x000001, 0x000001, 0x000001, 0x000001, 0x1ffffe, 0x1ffffe, 0x1fffff, 0x1fffff, 0x000001,
    0x000001, 0x000001, 0x000001, 0x000001, 0x000001, 0x000001, 0x1fffff, 0x1fffff, 0x1ffffc, 0x1fffff,
    0x1fffc0, 0x1c0000, 0x1ffff8, 0x1fff00, 0x1ffff8, 0x1fffff, 0x1ffff8, 0x1fffff, 0x1f0000, 0x1f0000,
    0x1fffff, 0x001e00, 0x001e00, 0x001e00, 0x001e00, 0x001e00, 0x001e00, 0x001e00, 0x001e00, 0x001e00,
    0x001e00, 0x001e00, 0x1fe000, 0x1fe000, 0x1fe000, 0x1fe000, 0x1fe000, 0x00e000, 0x1f0000, 0x1fe000,
    0x1f0000, 0x1fe000, 0x1fe000, 0x03fc00, 0x03fc00, 0x03fc00, 0x03fc00, 0x03fc00, 0x03fc00, 0x03fc00,
    0x03fc00, 0x03fc00, 0x03fc00, 0x03fc00, 0x1fc000, 0x1fc000, 0x1fc000, 0x1fc000, 0x1fc000, 0x1fc000,
    0x1fc000, 0x1fc000, 0x1fc000, 0x1f0000, 0x1f0000, 0x1fffff, 0x1fff80, 0x1fffff, 0x1fffff, 0x1fffff,
    0x1fffff, 0x1fffff, 0x1ffffe, 0x1f0000, 0x1ffffc, 0x1fffff, 0x1ffff8, 0x1ffff8, 0x1fff80, 0x1fff00,
    0x1e0000, 0x1fff80, 0x1e0000, 0x1ffff8, 0x1fff80, 0x1ffff8, 0x1ffff8, 0x1ffffe, 0x000001, 0x1fff80,
    0x1ffffe, 0x1ffffe, 0x1ffffe, 0x1ffffe, 0x1ffffe, 0x1ffffe, 0x1ffffe, 0x1ffff8, 0x1ffe00, 0x1ffe00,
    0x1ffe00, 0x1ffe00, 0x1ffe00, 0x1ffe00, 0x1ffe00, 0x1ffe00, 0x180000, 0x1ffe00, 0x1ffe00, 0x1fc000,
    0x1fc000, 0x1fc000, 0x1fc000, 0x1fc000, 0x1fc000, 0x1fc000, 0x1fc000, 0x1e0000, 0x1fc000, 0x1fc000,
    0x1f8000, 0x1f8000, 0x1f8000, 0x1f8000, 0x1f8000, 0x1f8000, 0x1f8000, 0x1f8000, 0x1f8000, 0x008000,
    0x1f8000, 0x1f0000, 0x1f0000, 0x1f0000, 0x1f0000, 0x1f0000, 0x1f0000, 0x1f0000, 0x1f0000, 0x010000,
    0x1c0000, 0x1f0000, 0x000001, 0x1ffff8, 0x1ffff8, 0x1ffff8, 0x1ffffe, 0x1ffff8, 0x1fffff, 0x1fffff,
    0x1f0000, 0x1f0000, 0x1fffff, 0x1ffe00, 0x1ffe00, 0x1ffe00, 0x1ffe00, 0x1ffe00, 0x1ffe00, 0x1ffe00,
    0x1ffe00, 0x1e0000, 0x1ffe00, 0x1ffe00, 0x01fe00, 0x01fe00, 0x01fe00, 0x01fe00, 0x01fe00, 0x01fe00,
    0x01fe00, 0x01fe00, 0x01fe00, 0x01fe00, 0x01fe00, 0x1fe000, 0x1fe000, 0x1fe000, 0x1fe000, 0x1fe000,
    0x1fe000, 0x1fe000, 0x1fe000, 0x1e0000, 0x1fe000, 0x1fe000, 0x1c0000, 0x1c0000, 0x1c0000, 0x1c0000,
    0x1c0000, 0x1c0000, 0x1c0000, 0x1c0000, 0x0c0000, 0x100000, 0x1c0000, 0x1ff000, 0x1ff000, 0x1ff000,
    0x1ff000, 0x1ff000, 0x1ff000, 0x1ff000, 0x1ff000, 0x1f0000, 0x1ff000, 0x1fe000, 0x000001, 0x000001,
    0x000001, 0x000001, 0x000001, 0x000001, 0x000000, 0x000001, 0x000001, 0x000001, 0x000001, 0x1fffff,
    0x1fff80, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1ffffe, 0x1ffffe, 0x1fffff, 0x1ffff8,
    0x1fffff, 0x1fff80, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1ffffe, 0x1ffffe, 0x1fffff,
    0x1fffc0, 0x1ffffc, 0x1fff80, 0x1ffffc, 0x1ffffc, 0x1ffffc, 0x1ffffc, 0x1ffffc, 0x1ffffc, 0x1ffffc,
    0x1c0000, 0x1ffffc, 0x1ffffe, 0x1fff80, 0x1ffffe, 0x1fffc0, 0x1ffffe, 0x1fffc0, 0x1fffc0, 0x1fffc0,
    0x1ffffe, 0x000000, 0x1ffffe, 0x03c000, 0x03c000, 0x03c000, 0x03c000, 0x03c000, 0x03c000, 0x03c000,
    0x03c000, 0x03c000, 0x030000, 0x020000, 0x1fffff, 0x1fff80, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff,
    0x1fffff, 0x000001, 0x1ffffe, 0x1ffffe, 0x1fffff, 0x1ffc00, 0x1ffc00, 0x1ffc00, 0x1ffc00, 0x1ffc00,
    0x1ffc00, 0x1ffc00, 0x1ffc00, 0x1ffe00, 0x1ffc00, 0x1fffff, 0x1fff80, 0x1fffff, 0x1fffff, 0x1fffff,
    0x1fffff, 0x1fffff, 0x1ffffe, 0x1fffff, 0x001e00, 0x1fffff, 0x1fff80, 0x1fffff, 0x1fffff, 0x1fffff,
    0x1fffff, 0x1fffff, 0x1ffffe, 0x1f8000, 0x1fffff, 0x180000, 0x1fffff, 0x1ffffc, 0x1fffff, 0x1fffff,
    0x1fffff, 0x1fffff, 0x1ffffe, 0x000000, 0x1ffffc, 0x1fff80, 0x1fff80, 0x1fff80, 0x1fff80, 0x1fff80,
    0x1fff80, 0x1fff80, 0x1fff80, 0x1fff80, 0x1f0000, 0x1fffff, 0x1fff80, 0x1fffff, 0x1fffff, 0x1fffff,
    0x1fffff, 0x1fffff, 0x1ffffe, 0x1fffff, 0x1ffffe, 0x1fff80, 0x1fff00, 0x100000, 0x1fffc0, 0x1fffc0,
    0x1fffc0, 0x1fffc0, 0x1fffc0, 0x1f0000, 0x1fffc0, 0x1ff800, 0x1ff800, 0x1ff800, 0x1ff800, 0x1ff800,
    0x1ff800, 0x1ff800, 0x1ff800, 0x1ff800, 0x1ff800, 0x000001, 0x000001, 0x000001, 0x000001, 0x000001,
    0x000001, 0x000001, 0x000001, 0x000001, 0x000001, 0x1fffff, 0x1fffff, 0x1ffff8, 0x1fffff, 0x1fffff,
    0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fff80, 0x1fffff, 0x1fffff, 0x1fffff,
    0x1fffff, 0x1fffff, 0x1ffffe, 0x1ffffc, 0x1ffff8, 0x1ff000, 0x1ff000, 0x1ff000, 0x1ff000, 0x1ff000,
    0x1ff000, 0x1ff000, 0x1ff000, 0x007000, 0x1fc000, 0x006000, 0x006000, 0x006000, 0x006000, 0x006000,
    0x006000, 0x006000, 0x006000, 0x006000, 0x006000, 0x1ff000, 0x1ff000, 0x1ff000, 0x1ff000, 0x1ff000,
    0x1ff000, 0x1ff000, 0x1ff000, 0x1ff000, 0x1f0000, 0x01c000, 0x01c000, 0x01c000, 0x01c000, 0x01c000,
    0x01c000, 0x01c000, 0x01c000, 0x01c000, 0x01c000, 0x1ffc00, 0x1ffc00, 0x1ffc00, 0x1ffc00, 0x1ffc00,
    0x1ffc00, 0x1ffc00, 0x1ffc00, 0x001c00, 0x009c00, 0x1ffe00, 0x1ffe00, 0x1ffe00, 0x1ffe00, 0x1ffe00,
    0x1ffe00, 0x1ffe00, 0x1ffe00, 0x1ff000, 0x1ff000, 0x1f8000, 0x1f8000, 0x1f8000, 0x1f8000, 0x1f8000,
    0x1f8000, 0x1f8000, 0x1f8000, 0x038000, 0x1c0000, 0x1ffc00, 0x1ffc00, 0x1ffc00, 0x1ffc00, 0x1ffc00,
    0x1ffc00, 0x1ffc00, 0x1ffc00, 0x001c00, 0x1ffc00, 0x1fff80, 0x1fff80, 0x1fff80, 0x1fffff, 0x1fff80,
    0x1fff80, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fff80, 0x1ffff8, 0x1fff80, 0x1ffff8, 0x1ffff8, 0x1ffff8,
    0x1ffff8, 0x1ffff8, 0x1ffff8, 0x1ffff8, 0x1ffff0, 0x1ffff8, 0x1fff80, 0x1ffff8, 0x1fff00, 0x1fff00,
    0x1fff00, 0x1fffc0, 0x1ffff8, 0x1fff00, 0x1ffff8, 0x03fe00, 0x03fe00, 0x03fe00, 0x03fe00, 0x03fe00,
    0x03fe00, 0x03fe00, 0x03fe00, 0x03fe00, 0x01fe00, 0x1fff00, 0x1fff00, 0x1fffff, 0x1fffff, 0x1fffff,
    0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1ffc00, 0x1ffc00, 0x1ffc00, 0x1ffc00, 0x1ffc00,
    0x1ffc00, 0x1ffc00, 0x1ffc00, 0x001c00, 0x001c00, 0x1fffff, 0x1fff80, 0x1fffff, 0x1fffff, 0x1fffff,
    0x1fffff, 0x1fffff, 0x1ffffe, 0x000000, 0x1fffff, 0x1ffff8, 0x1fff80, 0x1ffff8, 0x1ffff8, 0x1ffff8,
    0x1ffff8, 0x1ffff8, 0x1ffff8, 0x1f8000, 0x1ffff8, 0x1fe000, 0x1fffff, 0x1fffff, 0x1ffffc, 0x1fffff,
    0x000c00, 0x00f000, 0x1fffff, 0x1fffff, 0x1fffff, 0x010000, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff,
    0x1ff000, 0x100000, 0x1fffff, 0x000001, 0x000001, 0x1ffffe, 0x1ffffe, 0x1fffff, 0x1fffff, 0x1fff80,
    0x1fffff, 0x1fff00, 0x1fffc0, 0x1e0000, 0x1fffc0, 0x1fffc0, 0x1ff800, 0x1fe000, 0x1fffc0, 0x1fffc0,
    0x1ff800, 0x1fffc0, 0x100000, 0x1fffc0, 0x1fffc0, 0x100000, 0x1fff00, 0x1fffc0, 0x1fff00, 0x100000,
    0x1fffff, 0x1fffff, 0x1fffff, 0x000001, 0x000001, 0x1ffffe, 0x1ffffe, 0x1fffff, 0x1fffff, 0x1ffff0,
    0x1fff80, 0x1ffff0, 0x1ffff0, 0x1ffff0, 0x1ffff0, 0x1ffff0, 0x1ffff0, 0x1f0000, 0x1fffc0, 0x1ffff8,
    0x1ffffc, 0x1ffffc, 0x1ffffc, 0x1ffffc, 0x1ffffc, 0x1ffffc, 0x1ffffc, 0x000001, 0x000001, 0x1ffffe,
    0x1ffffe, 0x1fffff, 0x000001, 0x000001, 0x000001, 0x1ffffe, 0x1fffc0, 0x1ffff8, 0x1ffff8, 0x1fff00,
    0x1ffff8, 0x1fffc0, 0x1ffff8, 0x1ffff8, 0x1ffff8, 0x000001, 0x000001, 0x000001, 0x1fffc0, 0x1ffffe,
    0x1ffff8, 0x1ffffe, 0x1ffffe, 0x1fffff, 0x1fe000, 0x1fffc0, 0x1fffc0, 0x1fffc0, 0x1fffc0, 0x000c00,
    0x00f000, 0x1fffc0, 0x1fffc0, 0x1fffc0, 0x010000, 0x1fffc0, 0x1fffc0, 0x1fffc0, 0x1fffc0, 0x1ff000,
    0x100000, 0x1fffc0, 0x1ffff8, 0x1ffff8, 0x1ffff8, 0x1ffff8, 0x1ffff8, 0x1ffff8, 0x1fffe0, 0x1ffff8,
    0x1ffff8, 0x000c00, 0x000c00, 0x000c00, 0x000c00, 0x001000, 0x001000, 0x001000, 0x001000, 0x001c00,
    0x038000, 0x038000, 0x038000, 0x038000, 0x038000, 0x038000, 0x038000, 0x038000, 0x038000, 0x000001,
    0x000001, 0x1ffffe, 0x1ffffe, 0x1fffff, 0x1fffff, 0x1fff80, 0x1fff00, 0x1fffff, 0x1fffc0, 0x1e0000,
    0x1fffe0, 0x1fffc0, 0x1ffffc, 0x1ffffc, 0x1ffffc, 0x1ffffc, 0x1ffff8, 0x1fffc0, 0x1c0000, 0x1c0000,
    0x1ffff8, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffc0, 0x1ffff8, 0x1fe000, 0x1ffff8, 0x1ffff8, 0x1ffff8,
    0x1ffff8, 0x1ffff8, 0x00e000, 0x00e000, 0x00f000, 0x00f000, 0x00f000, 0x00f000, 0x007000, 0x00f000,
    0x000001, 0x1ffff8, 0x1ffff8, 0x1ffff8, 0x1ffff8, 0x1ffffe, 0x1fffff, 0x1fffff, 0x1fffc0, 0x1ffff8,
    0x1ffff8, 0x1fffc0, 0x1ffff8, 0x1ffff8, 0x1ffff8, 0x1ffff8, 0x1fffff, 0x000001, 0x1ffffe, 0x1fffff,
    0x1fffff, 0x000001, 0x1fffff, 0x1fffff, 0x001c00, 0x006000, 0x008000, 0x008000, 0x008000, 0x008000,
    0x008000, 0x008000, 0x1fffff, 0x1fffc0, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fff00, 0x1f8000, 0x1fffff,
    0x1fffc0, 0x1fffc0, 0x1fffc0, 0x1ffff8, 0x1ffff8, 0x1fff00, 0x1e0000, 0x1ffff8, 0x1ff000, 0x001000,
    0x001000, 0x1ff000, 0x001000, 0x1fe000, 0x1fe000, 0x01e000, 0x1fffff, 0x1fffff, 0x1ffffc, 0x1ffff0,
    0x1ff000, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fff80, 0x1fffff, 0x1fffff, 0x000001, 0x000001,
    0x1ffffe, 0x1ffffe, 0x00fc00, 0x1f0000, 0x1f8000, 0x1ffc00, 0x1fffff, 0x1ffc00, 0x1fffc0, 0x1ffffe,
    0x1fffff, 0x000001, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fe000, 0x1fe000, 0x1fe000, 0x1fff00,
    0x1fff00, 0x1fff00, 0x1fff00, 0x1fff00, 0x180000, 0x180000, 0x1fe000, 0x1fff00, 0x1fe000, 0x1fff00,
    0x000001, 0x1ffffe, 0x1f8000, 0x1ffffc, 0x1fffff, 0x1fffff, 0x1fffff, 0x1ffc00, 0x1fff00, 0x1fff00,
    0x1fff00, 0x1fff00, 0x1fff00, 0x1fff00, 0x1fffff, 0x1ffffc, 0x1fffc0, 0x1ffffc, 0x1fffff, 0x000001,
    0x1ffffe, 0x1f8000, 0x1f8000, 0x1fffff, 0x1fffff, 0x1fffff, 0x1ffff8, 0x1fffff, 0x1fffff, 0x1fffff,
    0x1ffffe, 0x1ffffe, 0x1ffffe, 0x1ffffe, 0x1fffff, 0x1fffff, 0x1fffff, 0x1ffffe, 0x1ffffe, 0x1ffff8,
    0x1ffffe, 0x1fffff, 0x1fffff, 0x1fff80, 0x1fffff, 0x1fffff, 0x000001, 0x000001, 0x000001, 0x1ffffe,
    0x1fffff, 0x000001, 0x1ffffe, 0x1f0000, 0x1f0000, 0x1fffff, 0x1fffff, 0x1fffc0, 0x1fff00, 0x1ffff0,
    0x1fffff, 0x1fffc0, 0x1ffff8, 0x00f000, 0x1f0000, 0x1ff000, 0x1ff000, 0x100000, 0x1ff000, 0x1ff000,
    0x000001, 0x1ffffe, 0x1fffff, 0x1fffff, 0x1fffff, 0x1ffffe, 0x1fff00, 0x1fff00, 0x1fff00, 0x1fff00,
    0x1e0000, 0x1fff00, 0x1ffff8, 0x1f0000, 0x1f0000, 0x1f0000, 0x1ffff8, 0x1fff00, 0x1ff000, 0x001000,
    0x1fe000, 0x1fe000, 0x003000, 0x1ff000, 0x1ffff8, 0x1ffff8, 0x1ffff8, 0x1ffff8, 0x1fffff, 0x1fffff,
    0x1f8000, 0x1e0000, 0x1e0000, 0x1e0000, 0x1fa000, 0x002000, 0x002000, 0x002000, 0x002000, 0x000000,
    0x000000, 0x000000, 0x1fffc0, 0x1fffc0, 0x1fffc0, 0x1c0000, 0x1fffc0, 0x1fffc0, 0x1fffff, 0x1fff80,
    0x1fffff, 0x1fe000, 0x1ffffc, 0x1fffff, 0x1f8000, 0x1f0000, 0x1fff00, 0x100000, 0x1fff00, 0x1fff00,
    0x1fffc0, 0x1fffc0, 0x1c0000, 0x1c0000, 0x1fff00, 0x1fffc0, 0x1f8000, 0x1e0000, 0x1f8000, 0x100000,
    0x1f8000, 0x1f8000, 0x1ffffc, 0x1fffff, 0x1ffffc, 0x1e0000, 0x1fffff, 0x1fffff, 0x1fffe0, 0x1ffffe,
    0x1ffffe, 0x1ffffe, 0x1ffff8, 0x1ffffe, 0x003e00, 0x000c00, 0x003000, 0x003e00, 0x003000, 0x003e00,
    0x006000, 0x006000, 0x002000, 0x006000, 0x006000, 0x006000, 0x1ffc00, 0x1ffc00, 0x030000, 0x030000,
    0x030000, 0x1ffc00, 0x1fff00, 0x1fff00, 0x1fffff, 0x1ffffe, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff,
    0x000000, 0x1fffff, 0x1fffff, 0x1fffff, 0x1ffff0, 0x1ffff0, 0x1ffff0, 0x1fffc0, 0x1ffff0, 0x000001,
    0x1ffffe, 0x1fffff, 0x1fffc0, 0x1fffff, 0x1ffff0, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1ffff8,
    0x1ffff8, 0x1fff80, 0x1fffe0, 0x1ffff8, 0x1fffff, 0x1fffff, 0x1ffff8, 0x1fff00, 0x1fffff, 0x1fc000,
    0x1fc000, 0x004000, 0x1f8000, 0x1fc000, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffe0, 0x1ffffc,
    0x1fff80, 0x1ffffc, 0x1ffff8, 0x1ffffc, 0x1fffff, 0x1fffc0, 0x1fffff, 0x1fffff, 0x1fffc0, 0x1f0000,
    0x1fffff, 0x1fffff, 0x1f0000, 0x1fffc0, 0x000200, 0x1ff000, 0x001c00, 0x1ffc00, 0x1ffe00, 0x000200,
    0x001c00, 0x1fe000, 0x1ffc00, 0x1ffe00, 0x000200, 0x001c00, 0x00e000, 0x1ffc00, 0x1ffe00, 0x1fc000,
    0x1fc000, 0x1f8000, 0x1fc000, 0x1fc000, 0x180000, 0x1c0000, 0x180000, 0x1c0000, 0x1c0000, 0x1ff800,
    0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fff80, 0x1fffff, 0x1ff800, 0x1e0000, 0x1e0000, 0x100000,
    0x100000, 0x007e00, 0x007e00, 0x018000, 0x1e0000, 0x1fff00, 0x1ffff8, 0x1ffff8, 0x1fff00, 0x1fffff,
    0x1fffff, 0x000000, 0x1fffc0, 0x1f8000, 0x180000, 0x180000, 0x1f8000, 0x001e00, 0x01fe00, 0x01fe00,
    0x01fe00, 0x1f4000, 0x1f4000, 0x1f4000, 0x1f4000, 0x008000, 0x008000, 0x1f4000, 0x1f4000, 0x020000,
    0x020000, 0x020000, 0x020000, 0x1ffe00, 0x1ffc00, 0x1ffe00, 0x1ffc00, 0x1ffff8, 0x1fffc0, 0x1fffc0,
    0x1ffff8, 0x001e00, 0x001e00, 0x000c00, 0x000000, 0x1ffffe, 0x1fffff, 0x001000, 0x1fe000, 0x1ff000,
    0x001e00, 0x002000, 0x1fc000, 0x1fffc0, 0x1fffff, 0x1ffff8, 0x1ffffc, 0x1ffffc, 0x1ff800, 0x1ffffc,
    0x1ffff0, 0x1fffff, 0x00f000, 0x00f000, 0x001000, 0x000c00, 0x1ff000, 0x1ffc00, 0x1bfe00, 0x1ffe00,
    0x1ffe00, 0x000200, 0x000200, 0x1e0000, 0x1ffffc, 0x1ffffc, 0x1fffe0, 0x000000, 0x000001, 0x1ffffe,
    0x1fe000, 0x1ff000, 0x001000, 0x00fe00, 0x00fe00, 0x00fe00, 0x1fffe0, 0x1fff80, 0x1fffe0, 0x1ffe00,
    0x1fff00, 0x1ffe00, 0x000018, 0x1fffe0, 0x000007, 0x000007, 0x003000, 0x003000, 0x001e00, 0x000e00,
    0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1ffffe, 0x1fffff,
    0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1ffffe, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff,
    0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1ffffe, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff,
    0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fff00, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff,
    0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fff80, 0x1fffff, 0x1ffffe, 0x1ffffc,
    0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffff, 0x1fffc0, 0x1fffc0, 0x180000, 0x180000,
    0x180000, 0x180000, 0x180000, 0x180000, 0x1fffff, 0x1fffff, 0x1fff80, 0x1fff80, 0x1fff80, 0x1fff80,
    0x1fffff, 0x1fffff, 0x1ffffe, 0x1ffffe, 0x1fffc0, 0x1ffffe, 0x1ffffe, 0x1ffffe, 0x1ffffe, 0x1ffff8,
    0x1ffff8, 0x1ffff8, 0x1ff000, 0x1ffff8, 0x1ffff8, 0x1fff00, 0x1fff00, 0x1fff00, 0x1ff000, 0x1fff00,
    0x1fff00, 0x1fffc0, 0x1fffc0, 0x1fffc0, 0x1ff000, 0x1fffc0, 0x1fffc0, 0x001c00, 0x001c00, 0x001c00,
    0x001000, 0x001c00, 0x001c00, 0x007e00, 0x007e00, 0x007e00, 0x007000, 0x007e00, 0x007e00, 0x1ffffc,
    0x1ffffc, 0x1ffffc, 0x1ff000, 0x1ffffc, 0x1ffffc, 0x1ffc00, 0x1ffc00, 0x1ffc00, 0x1ff000, 0x1ffc00,
    0x1ffc00, 0x1fffff, 0x1fffff, 0x1fffff, 0x1ff000, 0x1ffffc, 0x1fffff, 0x001e00, 0x001e00, 0x001e00,
    0x001000, 0x001e00, 0x001e00, 0x1ff800, 0x1ff800, 0x1ff800, 0x1ff000, 0x1ff800, 0x1ff800, 0x1ffff0,
    0x1ffff0, 0x1ffff0, 0x1ff000, 0x1ffff0, 0x1ffff0, 0x1fff80, 0x1fff80, 0x1fff80, 0x1ff000, 0x1fff80,
    0x1fff80, 0x1ffffe, 0x1ffffe, 0x1ffffe, 0x1ff000, 0x1ffffc, 0x1ffffe, 0x030000, 0x030000, 0x030000,
    0x030000, 0x030000, 0x030000, 0x01fe00, 0x01fe00, 0x01fe00, 0x01f000, 0x01fe00, 0x01fe00, 0x03f000,
    0x03f000, 0x03f000, 0x03f000, 0x03f000, 0x03f000, 0x007000, 0x007000, 0x007000, 0x007000, 0x007000,
    0x007000, 0x003c00, 0x003c00, 0x003c00, 0x003000, 0x003c00, 0x003c00, 0x03fc00, 0x03fc00, 0x03fc00,
    0x03f000, 0x03fc00, 0x03fc00, 0x01e000, 0x01e000, 0x01e000, 0x01e000, 0x01e000, 0x01e000, 0x1fffe0,
    0x1fffe0, 0x1fffe0, 0x1ff000, 0x1fffe0, 0x1fffe0, 0x00fe00, 0x00fe00, 0x00fe00, 0x00f000, 0x00fe00,
    0x00fe00, 0x004000, 0x004000, 0x004000, 0x004000, 0x004000, 0x004000, 0x003000, 0x003000, 0x003000,
    0x003000, 0x003000, 0x003000, 0x003e00, 0x003e00, 0x003e00, 0x003000, 0x003e00, 0x003e00, 0x1ffe00,
    0x1ffe00, 0x1ffe00, 0x1ff000, 0x1ffe00, 0x1ffe00, 0x007c00, 0x007c00, 0x007c00, 0x007000, 0x007c00,
    0x007c00, 0x00fc00, 0x00fc00, 0x00fc00, 0x00f000, 0x00fc00, 0x00fc00, 0x1bfe00, 0x1bfe00, 0x1bfe00,
    0x1bf000, 0x1bfe00, 0x1bfe00, 0x020000, 0x020000, 0x020000, 0x020000, 0x020000, 0x020000, 0x03e000,
    0x03e000, 0x03e000, 0x03e000, 0x03e000, 0x03e000, 0x009c00, 0x009c00, 0x009c00, 0x009000, 0x009c00,
    0x009c00, 0x1f4000, 0x1f4000, 0x1f4000, 0x1f4000, 0x1f4000, 0x1f4000, 0x1ffffe, 0x1ffffe, 0x1f8000,
    0x1f8000, 0x1f8000, 0x1f8000, 0x1fffe0, 0x1fffe0, 0x1fffe0, 0x1fffe0, 0x1fffff, 0x1fffff, 0x1ff000,
    0x1ffff8, 0x1fa000, 0x1fa000, 0x1e0200, 0x1e0200, 0x1ec000, 0x1ec000,
];

#[rustfmt::skip]
pub(crate) static DATATYPES: [ElementSpec; 5080] = [
    /*    0 */ ElementSpec {sub_elements: (19520, 19522), sub_element_ver: 795, attributes: (0, 2), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // ABSOLUTE-TOLERANCE
    /*    1 */ ElementSpec {sub_elements: (19522, 19524), sub_element_ver: 22, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Choice, ref_info: (0, 0)}, // CAN-CONTROLLER-ATTRIBUTES
    /*    2 */ ElementSpec {sub_elements: (11034, 11046), sub_element_ver: 3816, attributes: (115, 118), attributes_ver: 192, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 3)}, // ABSTRACT-CLASS-TAILORING
    /*    3 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (175, 181), attributes_ver: 425, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // PROCESS-DESIGN-REF, PROCESS-REF
    /*    4 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (181, 187), attributes_ver: 9319, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // ACTIVATION-REASON-REPRESENTATION-REF
    /*    5 */ ElementSpec {sub_elements: (16734, 16743), sub_element_ver: 8585, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // PROVIDED-COM-SPECS
    /*    6 */ ElementSpec {sub_elements: (16743, 16752), sub_element_ver: 8594, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // REQUIRED-COM-SPECS
    /*    7 */ ElementSpec {sub_elements: (20130, 20131), sub_element_ver: 64, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // CAPABILITY-RECORDS
    /*    8 */ ElementSpec {sub_elements: (20131, 20132), sub_element_ver: 21, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // VALID-BINDING-TIMES
    /*    9 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 9, character_data: Some(11), mode: ContentMode::Characters, ref_info: (0, 0)}, // ACCESS-CONTROL
    /*   10 */ ElementSpec {sub_elements: (18995, 18998), sub_element_ver: 192, attributes: (0, 2), attributes_ver: 134, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // ACCESS-COUNT
    /*   11 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (187, 193), attributes_ver: 9325, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // ACCESS-POINT-REF
    /*   12 */ ElementSpec {sub_elements: (18998, 19001), sub_element_ver: 192, attributes: (0, 2), attributes_ver: 134, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // ACCESS-COUNT-SET
    /*   13 */ ElementSpec {sub_elements: (20132, 20133), sub_element_ver: 21, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // ACCESS-COUNTS
    /*   14 */ ElementSpec {sub_elements: (3879, 3898), sub_element_ver: 3436, attributes: (115, 118), attributes_ver: 0, character_data: None, mode: ContentMode::Sequence, ref_info: (3, 9)}, // ACL-OBJECT-SET
    /*   15 */ ElementSpec {sub_elements: (20133, 20134), sub_element_ver: 0, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // ACL-OBJECT-CLASSS
    /*   16 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (193, 199), attributes_ver: 9319, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // COLLECTION-REF
    /*   17 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (199, 205), attributes_ver: 9319, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // DERIVED-FROM-BLUEPRINT-REF
    /*   18 */ ElementSpec {sub_elements: (20134, 20135), sub_element_ver: 0, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // DERIVED-FROM-BLUEPRINT-REFS
    /*   19 */ ElementSpec {sub_elements: (20135, 20136), sub_element_ver: 0, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // DELIVERY-ARTIFACTS, ENGINEERING-OBJECTS
    /*   20 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (205, 211), attributes_ver: 9331, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // OBJECT-DEFINITION-REF
    /*   21 */ ElementSpec {sub_elements: (20136, 20137), sub_element_ver: 43, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // OBJECT-DEFINITION-REFS
    /*   22 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (205, 211), attributes_ver: 9319, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // OBJECT-DEFINTION-REF
    /*   23 */ ElementSpec {sub_elements: (20137, 20138), sub_element_ver: 0, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // OBJECT-DEFINTION-REFS
    /*   24 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (211, 217), attributes_ver: 9319, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // FIRST-ELEMENT-REF, LC-OBJECT-REF, OBJECT-REF, SECOND-ELEMENT-REF, USE-INSTEAD-REF
    /*   25 */ ElementSpec {sub_elements: (20138, 20139), sub_element_ver: 0, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // OBJECT-REFS
    /*   26 */ ElementSpec {sub_elements: (11046, 11058), sub_element_ver: 3436, attributes: (115, 118), attributes_ver: 0, character_data: None, mode: ContentMode::Sequence, ref_info: (9, 15)}, // ACL-OPERATION
    /*   27 */ ElementSpec {sub_elements: (20139, 20140), sub_element_ver: 0, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // IMPLIED-OPERATION-REFS
    /*   28 */ ElementSpec {sub_elements: (5596, 5612), sub_element_ver: 3436, attributes: (115, 118), attributes_ver: 0, character_data: None, mode: ContentMode::Sequence, ref_info: (15, 21)}, // ACL-PERMISSION
    /*   29 */ ElementSpec {sub_elements: (20140, 20141), sub_element_ver: 0, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // ACL-CONTEXTS
    /*   30 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (217, 223), attributes_ver: 9319, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // ACL-OBJECT-REF
    /*   31 */ ElementSpec {sub_elements: (20141, 20142), sub_element_ver: 0, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // ACL-OBJECT-REFS
    /*   32 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (223, 229), attributes_ver: 9319, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // ACL-OPERATION-REF, IMPLIED-OPERATION-REF
    /*   33 */ ElementSpec {sub_elements: (20142, 20143), sub_element_ver: 0, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // ACL-OPERATION-REFS
    /*   34 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (229, 235), attributes_ver: 9319, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // ACL-ROLE-REF
    /*   35 */ ElementSpec {sub_elements: (20143, 20144), sub_element_ver: 0, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // ACL-ROLE-REFS
    /*   36 */ ElementSpec {sub_elements: (11058, 11070), sub_element_ver: 3436, attributes: (115, 118), attributes_ver: 0, character_data: None, mode: ContentMode::Sequence, ref_info: (21, 27)}, // ACL-ROLE
    /*   37 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 0, character_data: Some(15), mode: ContentMode::Characters, ref_info: (0, 0)}, // ACL-SCOPE
    /*   38 */ ElementSpec {sub_elements: (14894, 14904), sub_element_ver: 7430, attributes: (115, 118), attributes_ver: 4960, character_data: None, mode: ContentMode::Sequence, ref_info: (27, 28)}, // ACTION
    /*   39 */ ElementSpec {sub_elements: (20144, 20145), sub_element_ver: 75, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // ACTION-LISTS
    /*   40 */ ElementSpec {sub_elements: (19001, 19004), sub_element_ver: 4960, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // ACTIONS
    /*   41 */ ElementSpec {sub_elements: (14904, 14914), sub_element_ver: 7430, attributes: (115, 118), attributes_ver: 4960, character_data: None, mode: ContentMode::Sequence, ref_info: (28, 29)}, // ACTION-LIST
    /*   42 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (235, 241), attributes_ver: 9337, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // ACTION-LIST-ITEM-REF
    /*   43 */ ElementSpec {sub_elements: (20145, 20146), sub_element_ver: 75, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // ACTION-LIST-ITEM-REFS
    /*   44 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 75, character_data: Some(18), mode: ContentMode::Characters, ref_info: (0, 0)}, // ACTION-LIST-EXECUTION
    /*   45 */ ElementSpec {sub_elements: (3898, 3917), sub_element_ver: 3455, attributes: (115, 118), attributes_ver: 1531, character_data: None, mode: ContentMode::Sequence, ref_info: (29, 38)}, // ADAPTIVE-APPLICATION-SW-COMPONENT-TYPE
    /*   46 */ ElementSpec {sub_elements: (20146, 20147), sub_element_ver: 8, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // INTERNAL-BEHAVIORS
    /*   47 */ ElementSpec {sub_elements: (12870, 12881), sub_element_ver: 7886, attributes: (115, 118), attributes_ver: 7886, character_data: None, mode: ContentMode::Sequence, ref_info: (38, 42)}, // ADAPTIVE-AUTOSAR-APPLICATION
    /*   48 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (3631, 3636), attributes_ver: 7886, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // EXECUTABLE-REF
    /*   49 */ ElementSpec {sub_elements: (20147, 20148), sub_element_ver: 5, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // EXECUTABLE-REFS
    /*   50 */ ElementSpec {sub_elements: (14914, 14924), sub_element_ver: 5749, attributes: (115, 118), attributes_ver: 463, character_data: None, mode: ContentMode::Sequence, ref_info: (42, 48)}, // ADAPTIVE-FIREWALL-MODULE-INSTANTIATION
    /*   51 */ ElementSpec {sub_elements: (20148, 20149), sub_element_ver: 16, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // STATE-DEP-FIREWALL-REFS
    /*   52 */ ElementSpec {sub_elements: (12881, 12892), sub_element_ver: 3664, attributes: (115, 118), attributes_ver: 463, character_data: None, mode: ContentMode::Sequence, ref_info: (48, 54)}, // ADAPTIVE-FIREWALL-TO-PORT-PROTOTYPE-MAPPING
    /*   53 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (241, 247), attributes_ver: 3664, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // FIREWALL-REF
    /*   54 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (247, 253), attributes_ver: 3664, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // R-PORT-PROTOTYPE-REF
    /*   55 */ ElementSpec {sub_elements: (20149, 20150), sub_element_ver: 8, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // E-2-E-EVENT-PROTECTION-PROPSS
    /*   56 */ ElementSpec {sub_elements: (20150, 20151), sub_element_ver: 64, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // E-2-E-METHOD-PROTECTION-PROPSS
    /*   57 */ ElementSpec {sub_elements: (20151, 20152), sub_element_ver: 8, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // SECURE-COM-CONFIGS
    /*   58 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (253, 259), attributes_ver: 1642, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // SERVICE-INTERFACE-DEPLOYMENT-REF
    /*   59 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (253, 259), attributes_ver: 9343, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // SERVICE-INTERFACE-REF
    /*   60 */ ElementSpec {sub_elements: (14924, 14934), sub_element_ver: 8315, attributes: (115, 118), attributes_ver: 2186, character_data: None, mode: ContentMode::Sequence, ref_info: (54, 55)}, // ADAPTIVE-SWC-INTERNAL-BEHAVIOR, INTERNAL-BEHAVIOR
    /*   61 */ ElementSpec {sub_elements: (20152, 20153), sub_element_ver: 4, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // SERVICE-DEPENDENCYS
    /*   62 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 77, character_data: Some(22), mode: ContentMode::Characters, ref_info: (0, 0)}, // ADDRESS
    /*   63 */ ElementSpec {sub_elements: (18559, 18563), sub_element_ver: 29, attributes: (0, 2), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // ADMIN-DATA
    /*   64 */ ElementSpec {sub_elements: (20153, 20154), sub_element_ver: 7, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // DOC-REVISIONS
    /*   65 */ ElementSpec {sub_elements: (20154, 20155), sub_element_ver: 7, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // SDGS
    /*   66 */ ElementSpec {sub_elements: (7918, 7932), sub_element_ver: 5048, attributes: (115, 118), attributes_ver: 776, character_data: None, mode: ContentMode::Sequence, ref_info: (55, 58)}, // AGE-CONSTRAINT
    /*   67 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (259, 265), attributes_ver: 9349, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // EVENT-REF, SCOPE-REF
    /*   68 */ ElementSpec {sub_elements: (18563, 18567), sub_element_ver: 192, attributes: (0, 2), attributes_ver: 134, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // AGGREGATION-CONDITION
    /*   69 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (265, 271), attributes_ver: 9325, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // AGGREGATION-REF
    /*   70 */ ElementSpec {sub_elements: (9136, 9149), sub_element_ver: 3816, attributes: (115, 118), attributes_ver: 192, character_data: None, mode: ContentMode::Sequence, ref_info: (58, 64)}, // AGGREGATION-TAILORING
    /*   71 */ ElementSpec {sub_elements: (17871, 17877), sub_element_ver: 8940, attributes: (0, 2), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // ALIAS-NAME-ASSIGNMENT
    /*   72 */ ElementSpec {sub_elements: (11070, 11082), sub_element_ver: 4720, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (64, 70)}, // ALIAS-NAME-SET
    /*   73 */ ElementSpec {sub_elements: (20155, 20156), sub_element_ver: 7, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // ALIAS-NAMES
    /*   74 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 22, character_data: Some(25), mode: ContentMode::Characters, ref_info: (0, 0)}, // ALIGNMENT, SW-ALIGNMENT
    /*   75 */ ElementSpec {sub_elements: (4411, 4429), sub_element_ver: 3949, attributes: (115, 118), attributes_ver: 1153, character_data: None, mode: ContentMode::Sequence, ref_info: (70, 72)}, // ALIVE-SUPERVISION
    /*   76 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (271, 277), attributes_ver: 9355, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // CHECKPOINT-REF, SOURCE-REF, TARGET-REF
    /*   77 */ ElementSpec {sub_elements: (12892, 12903), sub_element_ver: 7897, attributes: (115, 118), attributes_ver: 1153, character_data: None, mode: ContentMode::Sequence, ref_info: (72, 76)}, // ALLOCATOR
    /*   78 */ ElementSpec {sub_elements: (20156, 20157), sub_element_ver: 115, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // NAMESPACES
    /*   79 */ ElementSpec {sub_elements: (4429, 4447), sub_element_ver: 3721, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (76, 78)}, // ANALYZED-EXECUTION-TIME
    /*   80 */ ElementSpec {sub_elements: (10202, 10206), sub_element_ver: 799, attributes: (0, 2), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // ANNOTATION
    /*   81 */ ElementSpec {sub_elements: (19004, 19007), sub_element_ver: 31, attributes: (0, 2), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // BY-PASS-POINT-IREF, COLLECTED-INSTANCE-IREF, ECU-EXTRACT-REFERENCE-IREF, FEATURE-IREF, FIRST-ELEMENT-INSTANCE-IREF, OBJECT-IREF, RPT-AR-HOOK-IREF, SECOND-ELEMENT-INSTANCE-IREF, SOURCE-INSTANCE-IREF, UPSTREAM-REFERENCE-IREF, VALUE-IREF
    /*   82 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (277, 283), attributes_ver: 9361, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // CONTEXT-ELEMENT-REF, TARGET-REF
    /*   83 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 531, character_data: Some(27), mode: ContentMode::Characters, ref_info: (0, 0)}, // INSTANCE-IDENTIFIER, REQUIRED-SERVICE-INSTANCE-ID
    /*   84 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 531, character_data: Some(28), mode: ContentMode::Characters, ref_info: (0, 0)}, // MAJOR-VERSION, MINOR-VERSION, REQUIRED-MINOR-VERSION
    /*   85 */ ElementSpec {sub_elements: (14934, 14944), sub_element_ver: 4093, attributes: (115, 118), attributes_ver: 81, character_data: None, mode: ContentMode::Sequence, ref_info: (78, 79)}, // AP-APPLICATION-ENDPOINT
    /*   86 */ ElementSpec {sub_elements: (17887, 17889), sub_element_ver: 81, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Choice, ref_info: (0, 0)}, // TP-CONFIGURATION
    /*   87 */ ElementSpec {sub_elements: (12903, 12914), sub_element_ver: 3531, attributes: (115, 118), attributes_ver: 9, character_data: None, mode: ContentMode::Sequence, ref_info: (79, 84)}, // AP-APPLICATION-ERROR
    /*   88 */ ElementSpec {sub_elements: (12914, 12925), sub_element_ver: 3531, attributes: (115, 118), attributes_ver: 9, character_data: None, mode: ContentMode::Sequence, ref_info: (84, 89)}, // AP-APPLICATION-ERROR-DOMAIN
    /*   89 */ ElementSpec {sub_elements: (20156, 20157), sub_element_ver: 9, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // NAMESPACES
    /*   90 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (283, 289), attributes_ver: 1187, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // ERROR-DOMAIN-REF
    /*   91 */ ElementSpec {sub_elements: (14944, 14954), sub_element_ver: 2104, attributes: (115, 118), attributes_ver: 9, character_data: None, mode: ContentMode::Sequence, ref_info: (89, 94)}, // AP-APPLICATION-ERROR-SET
    /*   92 */ ElementSpec {sub_elements: (20157, 20158), sub_element_ver: 9, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // AP-APPLICATION-ERROR-REFS
    /*   93 */ ElementSpec {sub_elements: (3917, 3936), sub_element_ver: 3474, attributes: (115, 118), attributes_ver: 1531, character_data: None, mode: ContentMode::Sequence, ref_info: (94, 96)}, // AP-SOMEIP-TRANSFORMATION-PROPS
    /*   94 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 134, character_data: Some(34), mode: ContentMode::Characters, ref_info: (0, 0)}, // API-PRINCIPLE
    /*   95 */ ElementSpec {sub_elements: (6508, 6523), sub_element_ver: 3027, attributes: (115, 118), attributes_ver: 12, character_data: None, mode: ContentMode::Sequence, ref_info: (96, 101)}, // APMC-BOOLEAN-PARAM-DEF
    /*   96 */ ElementSpec {sub_elements: (6523, 6538), sub_element_ver: 3027, attributes: (115, 118), attributes_ver: 12, character_data: None, mode: ContentMode::Sequence, ref_info: (101, 105)}, // APMC-CHOICE-CONTAINER-DEF
    /*   97 */ ElementSpec {sub_elements: (19525, 19526), sub_element_ver: 12, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // CHOICES
    /*   98 */ ElementSpec {sub_elements: (6538, 6553), sub_element_ver: 3027, attributes: (115, 118), attributes_ver: 12, character_data: None, mode: ContentMode::Sequence, ref_info: (105, 110)}, // APMC-CHOICE-CONTAINER-REFERENCE-DEF
    /*   99 */ ElementSpec {sub_elements: (20158, 20159), sub_element_ver: 12, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // DESTINATION-REFS
    /*  100 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (289, 295), attributes_ver: 425, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // DEFINITION-REF
    /*  101 */ ElementSpec {sub_elements: (6553, 6568), sub_element_ver: 3027, attributes: (115, 118), attributes_ver: 12, character_data: None, mode: ContentMode::Sequence, ref_info: (110, 115)}, // APMC-CONTAINER-REFERENCE-DEF
    /*  102 */ ElementSpec {sub_elements: (12925, 12936), sub_element_ver: 3027, attributes: (115, 118), attributes_ver: 12, character_data: None, mode: ContentMode::Sequence, ref_info: (115, 118)}, // APMC-CONTAINER-REFERENCE-VALUE
    /*  103 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (295, 301), attributes_ver: 425, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // VALUE-REF
    /*  104 */ ElementSpec {sub_elements: (11082, 11094), sub_element_ver: 3027, attributes: (115, 118), attributes_ver: 12, character_data: None, mode: ContentMode::Sequence, ref_info: (118, 119)}, // APMC-CONTAINER-VALUE
    /*  105 */ ElementSpec {sub_elements: (20159, 20160), sub_element_ver: 12, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // CONTAINERS
    /*  106 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (301, 307), attributes_ver: 425, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // DEFINITION-REF, DESTINATION-REF
    /*  107 */ ElementSpec {sub_elements: (16752, 16761), sub_element_ver: 3027, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // ELEMENTS
    /*  108 */ ElementSpec {sub_elements: (11094, 11106), sub_element_ver: 3027, attributes: (115, 118), attributes_ver: 12, character_data: None, mode: ContentMode::Sequence, ref_info: (119, 126)}, // APMC-DEFINITION-COLLECTION
    /*  109 */ ElementSpec {sub_elements: (20160, 20161), sub_element_ver: 12, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // FUNCTIONAL-CLUSTER-REFS
    /*  110 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // ELEMENT-CREATION
    /*  111 */ ElementSpec {sub_elements: (3364, 3372), sub_element_ver: 3027, attributes: (115, 118), attributes_ver: 12, character_data: None, mode: ContentMode::Sequence, ref_info: (126, 127)}, // APMC-ENUMERATION-LITERAL-DEF
    /*  112 */ ElementSpec {sub_elements: (5612, 5628), sub_element_ver: 3027, attributes: (115, 118), attributes_ver: 12, character_data: None, mode: ContentMode::Sequence, ref_info: (127, 132)}, // APMC-ENUMERATION-PARAM-DEF
    /*  113 */ ElementSpec {sub_elements: (20161, 20162), sub_element_ver: 12, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // LITERALS
    /*  114 */ ElementSpec {sub_elements: (4933, 4950), sub_element_ver: 3027, attributes: (115, 118), attributes_ver: 12, character_data: None, mode: ContentMode::Sequence, ref_info: (132, 137)}, // APMC-FLOAT-PARAM-DEF
    /*  115 */ ElementSpec {sub_elements: (6568, 6583), sub_element_ver: 3027, attributes: (115, 118), attributes_ver: 12, character_data: None, mode: ContentMode::Sequence, ref_info: (137, 143)}, // APMC-FOREIGN-REFERENCE-DEF
    /*  116 */ ElementSpec {sub_elements: (12936, 12947), sub_element_ver: 3027, attributes: (115, 118), attributes_ver: 12, character_data: None, mode: ContentMode::Sequence, ref_info: (143, 147)}, // APMC-FOREIGN-REFERENCE-VALUE
    /*  117 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (211, 217), attributes_ver: 425, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // FLAT-OBJECT-REF, VALUE-REF
    /*  118 */ ElementSpec {sub_elements: (5628, 5644), sub_element_ver: 3027, attributes: (115, 118), attributes_ver: 12, character_data: None, mode: ContentMode::Sequence, ref_info: (147, 155)}, // APMC-FUNCTIONAL-CLUSTER-DEF
    /*  119 */ ElementSpec {sub_elements: (19524, 19526), sub_element_ver: 12, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // CONTAINERS
    /*  120 */ ElementSpec {sub_elements: (12947, 12958), sub_element_ver: 3027, attributes: (115, 118), attributes_ver: 12, character_data: None, mode: ContentMode::Sequence, ref_info: (155, 160)}, // APMC-FUNCTIONAL-CLUSTER-VALUE
    /*  121 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (307, 313), attributes_ver: 425, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // DEFINITION-REF, FUNCTIONAL-CLUSTER-REF
    /*  122 */ ElementSpec {sub_elements: (5644, 5660), sub_element_ver: 3027, attributes: (115, 118), attributes_ver: 12, character_data: None, mode: ContentMode::Sequence, ref_info: (160, 166)}, // APMC-INSTANCE-REFERENCE-DEF
    /*  123 */ ElementSpec {sub_elements: (12958, 12969), sub_element_ver: 3027, attributes: (115, 118), attributes_ver: 12, character_data: None, mode: ContentMode::Sequence, ref_info: (166, 170)}, // APMC-INSTANCE-REFERENCE-VALUE
    /*  124 */ ElementSpec {sub_elements: (4950, 4967), sub_element_ver: 3027, attributes: (115, 118), attributes_ver: 12, character_data: None, mode: ContentMode::Sequence, ref_info: (170, 175)}, // APMC-INTEGER-PARAM-DEF
    /*  125 */ ElementSpec {sub_elements: (12969, 12980), sub_element_ver: 3027, attributes: (115, 118), attributes_ver: 12, character_data: None, mode: ContentMode::Sequence, ref_info: (175, 178)}, // APMC-NUMERICAL-PARAM-VALUE
    /*  126 */ ElementSpec {sub_elements: (5660, 5676), sub_element_ver: 3027, attributes: (115, 118), attributes_ver: 12, character_data: None, mode: ContentMode::Sequence, ref_info: (178, 182)}, // APMC-PARAM-CONF-CONTAINER-DEF
    /*  127 */ ElementSpec {sub_elements: (9149, 9162), sub_element_ver: 3027, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // ELEMENTS
    /*  128 */ ElementSpec {sub_elements: (6583, 6598), sub_element_ver: 3027, attributes: (115, 118), attributes_ver: 12, character_data: None, mode: ContentMode::Sequence, ref_info: (182, 187)}, // APMC-STRING-PARAM-DEF
    /*  129 */ ElementSpec {sub_elements: (12980, 12991), sub_element_ver: 3027, attributes: (115, 118), attributes_ver: 12, character_data: None, mode: ContentMode::Sequence, ref_info: (187, 190)}, // APMC-TEXTUAL-PARAM-VALUE
    /*  130 */ ElementSpec {sub_elements: (6568, 6583), sub_element_ver: 3027, attributes: (115, 118), attributes_ver: 12, character_data: None, mode: ContentMode::Sequence, ref_info: (190, 196)}, // APMC-UPSTREAM-DOC-FOREIGN-REFERENCE-DEF
    /*  131 */ ElementSpec {sub_elements: (12936, 12947), sub_element_ver: 3027, attributes: (115, 118), attributes_ver: 12, character_data: None, mode: ContentMode::Sequence, ref_info: (196, 200)}, // APMC-UPSTREAM-DOC-FOREIGN-REFERENCE-VALUE
    /*  132 */ ElementSpec {sub_elements: (5644, 5660), sub_element_ver: 3027, attributes: (115, 118), attributes_ver: 12, character_data: None, mode: ContentMode::Sequence, ref_info: (200, 206)}, // APMC-UPSTREAM-DOC-INSTANCE-REFERENCE-DEF
    /*  133 */ ElementSpec {sub_elements: (12991, 13002), sub_element_ver: 3027, attributes: (115, 118), attributes_ver: 12, character_data: None, mode: ContentMode::Sequence, ref_info: (206, 210)}, // APMC-UPSTREAM-DOC-INSTANCE-REFERENCE-VALUE
    /*  134 */ ElementSpec {sub_elements: (6568, 6583), sub_element_ver: 3027, attributes: (115, 118), attributes_ver: 12, character_data: None, mode: ContentMode::Sequence, ref_info: (210, 216)}, // APMC-URI-FOREIGN-REFERENCE-DEF
    /*  135 */ ElementSpec {sub_elements: (13002, 13013), sub_element_ver: 3027, attributes: (115, 118), attributes_ver: 12, character_data: None, mode: ContentMode::Sequence, ref_info: (216, 220)}, // APMC-URI-FOREIGN-REFERENCE-VALUE
    /*  136 */ ElementSpec {sub_elements: (5644, 5660), sub_element_ver: 3027, attributes: (115, 118), attributes_ver: 12, character_data: None, mode: ContentMode::Sequence, ref_info: (220, 226)}, // APMC-URI-INSTANCE-REFERENCE-DEF
    /*  137 */ ElementSpec {sub_elements: (13013, 13024), sub_element_ver: 3027, attributes: (115, 118), attributes_ver: 12, character_data: None, mode: ContentMode::Sequence, ref_info: (226, 230)}, // APMC-URI-INSTANCE-REFERENCE-VALUE
    /*  138 */ ElementSpec {sub_elements: (13024, 13035), sub_element_ver: 3027, attributes: (115, 118), attributes_ver: 12, character_data: None, mode: ContentMode::Sequence, ref_info: (230, 235)}, // APMC-VALUE-COLLECTION
    /*  139 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (313, 319), attributes_ver: 425, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // DESIGN-REF
    /*  140 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (319, 325), attributes_ver: 425, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // FUNCTIONAL-CLUSTER-REF
    /*  141 */ ElementSpec {sub_elements: (20162, 20163), sub_element_ver: 12, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // FUNCTIONAL-CLUSTER-REFS
    /*  142 */ ElementSpec {sub_elements: (13035, 13046), sub_element_ver: 4093, attributes: (115, 118), attributes_ver: 81, character_data: None, mode: ContentMode::Sequence, ref_info: (235, 236)}, // APP-OS-TASK-PROXY-TO-ECU-TASK-PROXY-MAPPING
    /*  143 */ ElementSpec {sub_elements: (18567, 18571), sub_element_ver: 230, attributes: (0, 2), attributes_ver: 123, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // APPLICABILITY-INFO
    /*  144 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (325, 331), attributes_ver: 230, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // IT-REF
    /*  145 */ ElementSpec {sub_elements: (11106, 11118), sub_element_ver: 1514, attributes: (115, 118), attributes_ver: 230, character_data: None, mode: ContentMode::Sequence, ref_info: (236, 240)}, // APPLICABILITY-INFO-SET
    /*  146 */ ElementSpec {sub_elements: (20163, 20164), sub_element_ver: 16, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // APPLICABILITY-INFOS
    /*  147 */ ElementSpec {sub_elements: (20164, 20165), sub_element_ver: 16, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // APPLIED-STANDARDS
    /*  148 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (331, 337), attributes_ver: 230, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // USED-IMPOSITION-TIME-DEFINITION-GROUP-REF
    /*  149 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (337, 343), attributes_ver: 230, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // STD-REF
    /*  150 */ ElementSpec {sub_elements: (20165, 20166), sub_element_ver: 16, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // STD-REFS
    /*  151 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (343, 349), attributes_ver: 230, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // TRACE-REF
    /*  152 */ ElementSpec {sub_elements: (14954, 14964), sub_element_ver: 7430, attributes: (115, 118), attributes_ver: 4960, character_data: None, mode: ContentMode::Sequence, ref_info: (240, 242)}, // APPLICATION-ACTION-ITEM
    /*  153 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (349, 355), attributes_ver: 9337, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // PROCESS-REF
    /*  154 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 75, character_data: Some(40), mode: ContentMode::Characters, ref_info: (0, 0)}, // ACTION-TYPE
    /*  155 */ ElementSpec {sub_elements: (7932, 7946), sub_element_ver: 6153, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (242, 253)}, // APPLICATION-ARRAY-DATA-TYPE
    /*  156 */ ElementSpec {sub_elements: (7946, 7960), sub_element_ver: 6167, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (253, 258)}, // ELEMENT
    /*  157 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (355, 361), attributes_ver: 9325, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // INDEX-DATA-TYPE-REF
    /*  158 */ ElementSpec {sub_elements: (7960, 7974), sub_element_ver: 2941, attributes: (115, 118), attributes_ver: 1531, character_data: None, mode: ContentMode::Sequence, ref_info: (258, 269)}, // APPLICATION-ASSOC-MAP-DATA-TYPE
    /*  159 */ ElementSpec {sub_elements: (7946, 7956), sub_element_ver: 1531, attributes: (115, 118), attributes_ver: 1531, character_data: None, mode: ContentMode::Sequence, ref_info: (269, 274)}, // KEY, VALUE
    /*  160 */ ElementSpec {sub_elements: (19526, 19528), sub_element_ver: 531, attributes: (0, 2), attributes_ver: 531, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // APPLICATION-ASSOC-MAP-ELEMENT-VALUE-SPECIFICATION
    /*  161 */ ElementSpec {sub_elements: (11118, 11130), sub_element_ver: 7346, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Choice, ref_info: (0, 0)}, // KEY, VALUE
    /*  162 */ ElementSpec {sub_elements: (19007, 19010), sub_element_ver: 1531, attributes: (0, 2), attributes_ver: 531, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // APPLICATION-ASSOC-MAP-VALUE-SPECIFICATION
    /*  163 */ ElementSpec {sub_elements: (20166, 20167), sub_element_ver: 4, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // MAP-ELEMENT-TUPLES
    /*  164 */ ElementSpec {sub_elements: (19528, 19530), sub_element_ver: 656, attributes: (0, 2), attributes_ver: 656, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // APPLICATION-COMPOSITE-DATA-TYPE-SUB-ELEMENT-REF
    /*  165 */ ElementSpec {sub_elements: (19010, 19013), sub_element_ver: 776, attributes: (0, 2), attributes_ver: 656, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // APPLICATION-COMPOSITE-ELEMENT-IREF, LEAF-ELEMENT-IREF
    /*  166 */ ElementSpec {sub_elements: (17877, 17883), sub_element_ver: 192, attributes: (0, 2), attributes_ver: 134, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // DATA-PROTOTYPE-IREF
    /*  167 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (361, 367), attributes_ver: 9325, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // CONTEXT-DATA-PROTOTYPE-REF
    /*  168 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (367, 373), attributes_ver: 9325, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // TARGET-DATA-PROTOTYPE-REF
    /*  169 */ ElementSpec {sub_elements: (3974, 3986), sub_element_ver: 1927, attributes: (115, 118), attributes_ver: 77, character_data: None, mode: ContentMode::Sequence, ref_info: (274, 284)}, // APPLICATION-DEFERRED-DATA-TYPE
    /*  170 */ ElementSpec {sub_elements: (4447, 4465), sub_element_ver: 3967, attributes: (115, 118), attributes_ver: 0, character_data: None, mode: ContentMode::Sequence, ref_info: (284, 285)}, // APPLICATION-ENDPOINT
    /*  171 */ ElementSpec {sub_elements: (18867, 18868), sub_element_ver: 0, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // CONSUMED-SERVICE-INSTANCES
    /*  172 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (373, 379), attributes_ver: 9319, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // NETWORK-ENDPOINT-REF
    /*  173 */ ElementSpec {sub_elements: (18870, 18871), sub_element_ver: 0, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // PROVIDED-SERVICE-INSTANCES
    /*  174 */ ElementSpec {sub_elements: (19530, 19532), sub_element_ver: 64, attributes: (0, 2), attributes_ver: 64, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // APPLICATION-ENDPOINT-REF-CONDITIONAL
    /*  175 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (379, 385), attributes_ver: 1642, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // APPLICATION-ENDPOINT-REF
    /*  176 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (385, 391), attributes_ver: 1187, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // TLS-CRYPTO-MAPPING-REF
    /*  177 */ ElementSpec {sub_elements: (17883, 17889), sub_element_ver: 691, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Choice, ref_info: (0, 0)}, // TP-CONFIGURATION
    /*  178 */ ElementSpec {sub_elements: (17889, 17895), sub_element_ver: 794, attributes: (0, 2), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // APPLICATION-ENTRY
    /*  179 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (391, 397), attributes_ver: 9361, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // ASSIGNED-FRAME-TRIGGERING-REF, FRAME-TRIGGERING-REF, UNASSIGNED-FRAME-TRIGGERING-REF
    /*  180 */ ElementSpec {sub_elements: (14964, 14974), sub_element_ver: 8325, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (285, 286)}, // APPLICATION-ERROR
    /*  181 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (397, 403), attributes_ver: 9367, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // ERROR-CONTEXT-REF
    /*  182 */ ElementSpec {sub_elements: (20167, 20168), sub_element_ver: 1541, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // ERROR-CONTEXT-REFS
    /*  183 */ ElementSpec {sub_elements: (20168, 20169), sub_element_ver: 7, attributes: (0, 2), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // APPLICATION-ERROR
    /*  184 */ ElementSpec {sub_elements: (4967, 4984), sub_element_ver: 4093, attributes: (115, 118), attributes_ver: 81, character_data: None, mode: ContentMode::Sequence, ref_info: (286, 295)}, // APPLICATION-INTERFACE
    /*  185 */ ElementSpec {sub_elements: (20169, 20170), sub_element_ver: 20, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // ATTRIBUTES
    /*  186 */ ElementSpec {sub_elements: (20170, 20171), sub_element_ver: 20, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // COMMANDS
    /*  187 */ ElementSpec {sub_elements: (20171, 20172), sub_element_ver: 20, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // INDICATIONS
    /*  188 */ ElementSpec {sub_elements: (16761, 16770), sub_element_ver: 7730, attributes: (115, 118), attributes_ver: 5218, character_data: None, mode: ContentMode::Sequence, ref_info: (295, 297)}, // APPLICATION-MODE-REQUEST-PHM-ACTION-ITEM
    /*  189 */ ElementSpec {sub_elements: (820, 829), sub_element_ver: 3276, attributes: (115, 118), attributes_ver: 192, character_data: None, mode: ContentMode::Sequence, ref_info: (297, 301)}, // APPLICATION-PARTITION
    /*  190 */ ElementSpec {sub_elements: (13046, 13057), sub_element_ver: 3276, attributes: (115, 118), attributes_ver: 192, character_data: None, mode: ContentMode::Sequence, ref_info: (301, 302)}, // APPLICATION-PARTITION-TO-ECU-PARTITION-MAPPING
    /*  191 */ ElementSpec {sub_elements: (20172, 20173), sub_element_ver: 21, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // APPLICATION-PARTITION-REFS
    /*  192 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (403, 409), attributes_ver: 9325, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // ECU-PARTITION-REF
    /*  193 */ ElementSpec {sub_elements: (3974, 3986), sub_element_ver: 4618, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (302, 312)}, // APPLICATION-PRIMITIVE-DATA-TYPE
    /*  194 */ ElementSpec {sub_elements: (9162, 9175), sub_element_ver: 6657, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (312, 323)}, // APPLICATION-RECORD-DATA-TYPE
    /*  195 */ ElementSpec {sub_elements: (20173, 20174), sub_element_ver: 7, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // ELEMENTS
    /*  196 */ ElementSpec {sub_elements: (11130, 11142), sub_element_ver: 7358, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (323, 328)}, // APPLICATION-RECORD-ELEMENT
    /*  197 */ ElementSpec {sub_elements: (19013, 19016), sub_element_ver: 4960, attributes: (0, 2), attributes_ver: 75, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // OPT-APP-RECORD-ELEMENT-IN-METHOD-IREF, TLV-APP-RECORD-ELEMENT-IN-METHOD-IREF
    /*  198 */ ElementSpec {sub_elements: (19016, 19019), sub_element_ver: 4960, attributes: (0, 2), attributes_ver: 75, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // OPT-APP-RECORD-ELEMENT-IN-SERVICE-INTERFACE-IREF, TLV-APP-RECORD-ELEMENT-IN-SERVICE-INTERFACE-IREF
    /*  199 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (409, 415), attributes_ver: 9337, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // ROOT-AUTOSAR-DATA-PROTOTYPE-REF
    /*  200 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (415, 421), attributes_ver: 9337, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // CONTEXT-APPLICATION-RECORD-ELEMENT-REF, TARGET-APPLICATION-RECORD-ELEMENT-REF
    /*  201 */ ElementSpec {sub_elements: (18219, 18224), sub_element_ver: 691, attributes: (0, 2), attributes_ver: 0, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // APPLICATION-RULE-BASED-VALUE-SPECIFICATION
    /*  202 */ ElementSpec {sub_elements: (20174, 20175), sub_element_ver: 0, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // SW-AXIS-CONTS
    /*  203 */ ElementSpec {sub_elements: (3168, 3188), sub_element_ver: 2831, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (328, 338)}, // APPLICATION-SW-COMPONENT-TYPE
    /*  204 */ ElementSpec {sub_elements: (18224, 18229), sub_element_ver: 456, attributes: (0, 2), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // APPLICATION-VALUE-SPECIFICATION
    /*  205 */ ElementSpec {sub_elements: (20175, 20176), sub_element_ver: 7, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // SW-AXIS-CONTS
    /*  206 */ ElementSpec {sub_elements: (16770, 16779), sub_element_ver: 1502, attributes: (115, 118), attributes_ver: 230, character_data: None, mode: ContentMode::Sequence, ref_info: (338, 339)}, // APPLIED-STANDARD
    /*  207 */ ElementSpec {sub_elements: (7974, 7988), sub_element_ver: 6181, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (339, 343)}, // AR-PACKAGE
    /*  208 */ ElementSpec {sub_elements: (0, 664), sub_element_ver: 0, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // ELEMENTS
    /*  209 */ ElementSpec {sub_elements: (20176, 20177), sub_element_ver: 7, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // REFERENCE-BASES
    /*  210 */ ElementSpec {sub_elements: (18571, 18575), sub_element_ver: 8385, attributes: (0, 2), attributes_ver: 854, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // PARAMETER-IMPLEMENTATION-DATA-TYPE-ELEMENT
    /*  211 */ ElementSpec {sub_elements: (20177, 20178), sub_element_ver: 400, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // CONTEXT-DATA-PROTOTYPE-REFS
    /*  212 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (421, 427), attributes_ver: 9373, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // PORT-PROTOTYPE-REF
    /*  213 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (427, 433), attributes_ver: 9373, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // ROOT-PARAMETER-DATA-PROTOTYPE-REF
    /*  214 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (433, 439), attributes_ver: 9373, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // CONTEXT-DATA-PROTOTYPE-REF, TARGET-DATA-PROTOTYPE-REF
    /*  215 */ ElementSpec {sub_elements: (18575, 18579), sub_element_ver: 29, attributes: (0, 2), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // AUTOSAR-VARIABLE-IN-IMPL-DATATYPE, IMPLEMENTATION-DATA-TYPE-ELEMENT
    /*  216 */ ElementSpec {sub_elements: (20178, 20179), sub_element_ver: 7, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // CONTEXT-DATA-PROTOTYPE-REFS
    /*  217 */ ElementSpec {sub_elements: (6598, 6613), sub_element_ver: 5128, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (343, 347)}, // ARBITRARY-EVENT-TRIGGERING
    /*  218 */ ElementSpec {sub_elements: (20179, 20180), sub_element_ver: 7, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // CONFIDENCE-INTERVALS
    /*  219 */ ElementSpec {sub_elements: (14974, 14984), sub_element_ver: 7430, attributes: (115, 118), attributes_ver: 4960, character_data: None, mode: ContentMode::Sequence, ref_info: (347, 348)}, // ARBITRATION
    /*  220 */ ElementSpec {sub_elements: (20180, 20181), sub_element_ver: 75, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // LOGICAL-EXPRESSIONS
    /*  221 */ ElementSpec {sub_elements: (20181, 20182), sub_element_ver: 75, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // RULES
    /*  222 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 24), attributes_ver: 1119, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // AREA
    /*  223 */ ElementSpec {sub_elements: (7988, 8002), sub_element_ver: 6195, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (348, 353)}, // ARGUMENT-DATA-PROTOTYPE
    /*  224 */ ElementSpec {sub_elements: (20182, 20183), sub_element_ver: 0, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // TYPE-BLUEPRINTS
    /*  225 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 22, character_data: Some(55), mode: ContentMode::Characters, ref_info: (0, 0)}, // DIRECTION
    /*  226 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 77, character_data: Some(56), mode: ContentMode::Characters, ref_info: (0, 0)}, // ARRAY-IMPL-POLICY
    /*  227 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 120, character_data: Some(57), mode: ContentMode::Characters, ref_info: (0, 0)}, // ARRAY-SIZE-HANDLING
    /*  228 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 22, character_data: Some(58), mode: ContentMode::Characters, ref_info: (0, 0)}, // ARRAY-SIZE-SEMANTICS
    /*  229 */ ElementSpec {sub_elements: (18579, 18583), sub_element_ver: 6649, attributes: (0, 2), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // ARRAY-VALUE-SPECIFICATION
    /*  230 */ ElementSpec {sub_elements: (14984, 14994), sub_element_ver: 4093, attributes: (115, 118), attributes_ver: 81, character_data: None, mode: ContentMode::Sequence, ref_info: (353, 354)}, // ARTIFACT-CHECKSUM
    /*  231 */ ElementSpec {sub_elements: (13057, 13068), sub_element_ver: 4093, attributes: (115, 118), attributes_ver: 81, character_data: None, mode: ContentMode::Sequence, ref_info: (354, 361)}, // ARTIFACT-CHECKSUM-TO-CRYPTO-PROVIDER-MAPPING
    /*  232 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (439, 445), attributes_ver: 4093, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // ARTIFACT-CHECKSUM-REF
    /*  233 */ ElementSpec {sub_elements: (20183, 20184), sub_element_ver: 20, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // ARTIFACT-CHECKSUM-REFS
    /*  234 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (445, 451), attributes_ver: 4093, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // CRYPTO-PROVIDER-REF
    /*  235 */ ElementSpec {sub_elements: (14994, 15004), sub_element_ver: 3664, attributes: (115, 118), attributes_ver: 463, character_data: None, mode: ContentMode::Sequence, ref_info: (361, 362)}, // ARTIFACT-LOCATOR
    /*  236 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (451, 457), attributes_ver: 3664, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // REPRESENTED-MODEL-ELEMENT-REF
    /*  237 */ ElementSpec {sub_elements: (11142, 11154), sub_element_ver: 1082, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (362, 367)}, // ASSEMBLY-SW-CONNECTOR
    /*  238 */ ElementSpec {sub_elements: (16779, 16788), sub_element_ver: 8603, attributes: (0, 2), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // ASSIGN-FRAME-ID
    /*  239 */ ElementSpec {sub_elements: (16788, 16797), sub_element_ver: 7406, attributes: (0, 2), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // ASSIGN-FRAME-ID-RANGE
    /*  240 */ ElementSpec {sub_elements: (20184, 20185), sub_element_ver: 7, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // FRAME-PIDS
    /*  241 */ ElementSpec {sub_elements: (17472, 17480), sub_element_ver: 7406, attributes: (0, 2), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // ASSIGN-NAD
    /*  242 */ ElementSpec {sub_elements: (8954, 8967), sub_element_ver: 6573, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (367, 373)}, // ASYNCHRONOUS-SERVER-CALL-POINT
    /*  243 */ ElementSpec {sub_elements: (13068, 13079), sub_element_ver: 7682, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (373, 378)}, // ASYNCHRONOUS-SERVER-CALL-RESULT-POINT
    /*  244 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (457, 463), attributes_ver: 9361, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // ASYNCHRONOUS-SERVER-CALL-POINT-REF
    /*  245 */ ElementSpec {sub_elements: (9175, 9188), sub_element_ver: 2053, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (378, 384)}, // ASYNCHRONOUS-SERVER-CALL-RETURNS-EVENT
    /*  246 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (463, 469), attributes_ver: 9361, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // EVENT-SOURCE-REF
    /*  247 */ ElementSpec {sub_elements: (20185, 20186), sub_element_ver: 7, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // INTERNAL-BEHAVIORS
    /*  248 */ ElementSpec {sub_elements: (19019, 19022), sub_element_ver: 140, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // BLUEPRINT-POLICYS
    /*  249 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 0, character_data: Some(66), mode: ContentMode::Characters, ref_info: (0, 0)}, // AUTO-COLLECT
    /*  250 */ ElementSpec {sub_elements: (18583, 18587), sub_element_ver: 9129, attributes: (3636, 3641), attributes_ver: 456, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // AUTOSAR
    /*  251 */ ElementSpec {sub_elements: (20186, 20187), sub_element_ver: 7, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // AR-PACKAGES
    /*  252 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (469, 475), attributes_ver: 9361, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // DATA-TYPE-REF, TYPE-TREF
    /*  253 */ ElementSpec {sub_elements: (19532, 19534), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 0, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // AUTOSAR-DATA-TYPE-REF-CONDITIONAL
    /*  254 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (469, 475), attributes_ver: 9319, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // AUTOSAR-DATA-TYPE-REF
    /*  255 */ ElementSpec {sub_elements: (17696, 17703), sub_element_ver: 877, attributes: (0, 2), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // ARTIFACT-DESCRIPTOR, AUTOSAR-ENGINEERING-OBJECT
    /*  256 */ ElementSpec {sub_elements: (15004, 15014), sub_element_ver: 5048, attributes: (115, 118), attributes_ver: 776, character_data: None, mode: ContentMode::Sequence, ref_info: (384, 385)}, // AUTOSAR-OPERATION-ARGUMENT-INSTANCE
    /*  257 */ ElementSpec {sub_elements: (19534, 19536), sub_element_ver: 22, attributes: (0, 2), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // ACCESSED-PARAMETER, AR-PARAMETER, PARAMETER-INSTANCE, USED-PARAMETER-ELEMENT
    /*  258 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (367, 373), attributes_ver: 9361, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // LOCAL-PARAMETER-REF, REFERENCE-VALUE-REF, ROOT-PARAMETER-DATA-PROTOTYPE-REF, TARGET-DATA-PROTOTYPE-REF
    /*  259 */ ElementSpec {sub_elements: (15014, 15024), sub_element_ver: 5048, attributes: (115, 118), attributes_ver: 776, character_data: None, mode: ContentMode::Sequence, ref_info: (385, 386)}, // AUTOSAR-VARIABLE-INSTANCE
    /*  260 */ ElementSpec {sub_elements: (19022, 19025), sub_element_ver: 22, attributes: (0, 2), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // ACCESSED-VARIABLE, AUTOSAR-VARIABLE, NV-RAM-BLOCK-ELEMENT, READ-NV-DATA, USED-DATA-ELEMENT, VARIABLE-INSTANCE, WRITTEN-NV-DATA, WRITTEN-READ-NV-DATA
    /*  261 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 22, character_data: Some(71), mode: ContentMode::Characters, ref_info: (0, 0)}, // SW-AXIS-INDEX, SW-RECORD-LAYOUT-GROUP-AXIS, SW-RECORD-LAYOUT-V-AXIS
    /*  262 */ ElementSpec {sub_elements: (7813, 7825), sub_element_ver: 2053, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (386, 392)}, // BACKGROUND-EVENT
    /*  263 */ ElementSpec {sub_elements: (19025, 19028), sub_element_ver: 192, attributes: (0, 2), attributes_ver: 134, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // REFERENCED-BASELINE
    /*  264 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (475, 481), attributes_ver: 9325, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // CUSTOM-SDG-DEF-REF
    /*  265 */ ElementSpec {sub_elements: (20187, 20188), sub_element_ver: 21, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // CUSTOM-SDG-DEF-REFS
    /*  266 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (481, 487), attributes_ver: 9325, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // CUSTOM-DOCUMENTATION-REF, CUSTOM-SPECIFICATION-REF
    /*  267 */ ElementSpec {sub_elements: (20188, 20189), sub_element_ver: 21, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // CUSTOM-SPECIFICATION-REFS
    /*  268 */ ElementSpec {sub_elements: (20189, 20190), sub_element_ver: 21, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // STANDARD-REVISIONS
    /*  269 */ ElementSpec {sub_elements: (8002, 8016), sub_element_ver: 6209, attributes: (115, 118), attributes_ver: 77, character_data: None, mode: ContentMode::Sequence, ref_info: (392, 394)}, // BINARY-MANIFEST-ITEM
    /*  270 */ ElementSpec {sub_elements: (13079, 13090), sub_element_ver: 6210, attributes: (115, 118), attributes_ver: 77, character_data: None, mode: ContentMode::Sequence, ref_info: (394, 395)}, // BINARY-MANIFEST-ITEM-DEFINITION
    /*  271 */ ElementSpec {sub_elements: (20190, 20191), sub_element_ver: 19, attributes: (0, 2), attributes_ver: 77, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // BINARY-MANIFEST-ITEM-NUMERICAL-VALUE
    /*  272 */ ElementSpec {sub_elements: (19536, 19538), sub_element_ver: 77, attributes: (0, 2), attributes_ver: 77, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // BINARY-MANIFEST-ITEM-POINTER-VALUE
    /*  273 */ ElementSpec {sub_elements: (19538, 19540), sub_element_ver: 77, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Choice, ref_info: (0, 0)}, // DEFAULT-VALUE, VALUE
    /*  274 */ ElementSpec {sub_elements: (11154, 11166), sub_element_ver: 1927, attributes: (115, 118), attributes_ver: 77, character_data: None, mode: ContentMode::Sequence, ref_info: (395, 397)}, // BINARY-MANIFEST-META-DATA-FIELD
    /*  275 */ ElementSpec {sub_elements: (6613, 6628), sub_element_ver: 1927, attributes: (115, 118), attributes_ver: 77, character_data: None, mode: ContentMode::Sequence, ref_info: (397, 399)}, // BINARY-MANIFEST-PROVIDE-RESOURCE
    /*  276 */ ElementSpec {sub_elements: (8016, 8030), sub_element_ver: 1927, attributes: (115, 118), attributes_ver: 77, character_data: None, mode: ContentMode::Sequence, ref_info: (399, 401)}, // BINARY-MANIFEST-REQUIRE-RESOURCE
    /*  277 */ ElementSpec {sub_elements: (16797, 16806), sub_element_ver: 1927, attributes: (115, 118), attributes_ver: 77, character_data: None, mode: ContentMode::Sequence, ref_info: (401, 402)}, // BINARY-MANIFEST-RESOURCE-DEFINITION
    /*  278 */ ElementSpec {sub_elements: (20191, 20192), sub_element_ver: 19, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // AUXILIARY-FIELD-DEFINITIONS, ITEM-DEFINITIONS
    /*  279 */ ElementSpec {sub_elements: (20192, 20193), sub_element_ver: 19, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // AUXILIARY-FIELDS, ITEMS
    /*  280 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (487, 493), attributes_ver: 500, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // RESOURCE-DEFINITION-REF
    /*  281 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (493, 499), attributes_ver: 500, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // RESOURCE-REF
    /*  282 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 0, character_data: Some(73), mode: ContentMode::Characters, ref_info: (0, 0)}, // MAXIMUM-INTENDED-BINDING-TIME, MAXIMUM-SELECTED-BINDING-TIME, MINIMUM-INTENDED-BINDING-TIME, MINIMUM-SELECTED-BINDING-TIME
    /*  283 */ ElementSpec {sub_elements: (777, 785), sub_element_ver: 1927, attributes: (115, 118), attributes_ver: 77, character_data: None, mode: ContentMode::Sequence, ref_info: (402, 403)}, // BLOCK-STATE
    /*  284 */ ElementSpec {sub_elements: (18229, 18234), sub_element_ver: 9054, attributes: (0, 2), attributes_ver: 401, character_data: Some(982), mode: ContentMode::Mixed, ref_info: (0, 0)}, // FORMAL-BLUEPRINT-CONDITION
    /*  285 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (499, 505), attributes_ver: 9379, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // ECUC-QUERY-REF
    /*  286 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (505, 511), attributes_ver: 9331, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // ECUC-REF
    /*  287 */ ElementSpec {sub_elements: (19540, 19542), sub_element_ver: 115, attributes: (0, 2), attributes_ver: 115, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // FORMAL-BLUEPRINT-GENERATOR
    /*  288 */ ElementSpec {sub_elements: (19542, 19544), sub_element_ver: 656, attributes: (0, 2), attributes_ver: 656, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // BLUEPRINT-MAPPING
    /*  289 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (199, 205), attributes_ver: 9349, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // BLUEPRINT-REF
    /*  290 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (511, 517), attributes_ver: 9349, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // DERIVED-OBJECT-REF
    /*  291 */ ElementSpec {sub_elements: (11166, 11178), sub_element_ver: 7370, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (403, 407)}, // BLUEPRINT-MAPPING-SET
    /*  292 */ ElementSpec {sub_elements: (19028, 19031), sub_element_ver: 2508, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // BLUEPRINT-MAPS
    /*  293 */ ElementSpec {sub_elements: (20193, 20194), sub_element_ver: 513, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // INTERFACE-BLUEPRINT-MAPPINGS
    /*  294 */ ElementSpec {sub_elements: (20194, 20195), sub_element_ver: 513, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // PORT-BLUEPRINT-MAPPINGS
    /*  295 */ ElementSpec {sub_elements: (18587, 18591), sub_element_ver: 140, attributes: (0, 2), attributes_ver: 120, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // BLUEPRINT-POLICY-LIST
    /*  296 */ ElementSpec {sub_elements: (18587, 18588), sub_element_ver: 43, attributes: (0, 2), attributes_ver: 120, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // BLUEPRINT-POLICY-NOT-MODIFIABLE
    /*  297 */ ElementSpec {sub_elements: (18587, 18589), sub_element_ver: 120, attributes: (0, 2), attributes_ver: 120, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // BLUEPRINT-POLICY-SINGLE
    /*  298 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 22, character_data: Some(75), mode: ContentMode::Characters, ref_info: (0, 0)}, // ACCEPT-VARIABLE-DA, ACCEPT-VARIABLE-SA, ACTIVATE-AT-START, ACTIVATION-SWITCH, ADDRESS-CLAIM-ENABLED, ADMIT-WITHOUT-MESSAGE-ID, AFFECTED-BY-CONTROL-DTC-SETTING, AGING-ALLOWED, AGING-REQUIRES-TESTED-CYCLE, ALL-NM-MESSAGES-KEEP-AWAKE, ALLOCATE-SHADOW-COPY, ALLOW-CONTENT-TYPE-CHANGE, ALLOW-DYNAMIC-L-SDU-LENGTH, ALLOW-HALT-DUE-TO-CLOCK, ALLOW-MASTER-RATE-CORRECTION, ALLOW-PROVIDER-RATE-CORRECTION, ALLOW-UNAUTHENTICATED-PARTICIPANTS, ANONYMOUS, APPROVAL-REQUIRED, ARBITRARY-ADDRESS-CAPABLE, ASSIGN-NAD, AUTO-AVAILABLE, AUTO-REQUIRE, AUTO-START, AUTOMATIC-END, BANDWIDTH-LIMITATION, BASE-IS-THIS-PACKAGE, BROADCAST, BUFFER-OUTPUT, CALC-RAM-BLOCK-CRC, CAN-BE-INVOKED-CONCURRENTLY, CAN-BIT-RATE-SWITCH, CAN-FD-FRAME-SUPPORT, CANCELLATION, CAPTION, CHANNEL-SYNCHRONOUS-WAKEUP, CHECK-PER-SOURCE-ID, CHECK-STATIC-BLOCK-ID, CHECKSUM-VERIFICATION, CLEAR-FROM-VALID-TO-INVALID, CLIENT-IP-ADDR-FROM-CONNECTION-REQUEST, CLIENT-PORT-FROM-CONNECTION-REQUEST, COM-ENABLE-MDT-FOR-CYCLIC-TRANSMISSION, COMBINED-NO-DATA-INIT-COUNT, COMPUTED, CONNECTION-IS-MANDATORY, CONSIDER-BUILD-NUMBER, CONSIDER-PTO-STATUS, CONTROL-OPTION-RECORD-PRESENT, COUPLING-FLAG, CRC-CORRECTION-FIELD, CRC-DOMAIN-NUMBER, CRC-MESSAGE-LENGTH, CRC-PRECISE-ORIGIN-TIMESTAMP, CRC-SEQUENCE-ID, CRC-SOURCE-PORT-IDENTITY, CREATE-ECU-WAKEUP-SOURCE, CYCLE-AUTOSTART, CYCLE-STATUS-STORAGE, DEBOUNCE-COUNTER-STORAGE, DEFAULT-TRACE-STATE, DEFAULT-VALUE, DERIVED-CERTIFICATE-ACCEPTED, DETECT-NIT-ERROR, DIAG-ARG-INTEGRITY, DISABLE-END-TO-END-CHECK, DISABLE-END-TO-END-STATE-MACHINE, DO-NOT-FRAGMENT, DROP-NOT-REQUESTED-NAD, DYNAMIC-BS, DYNAMIC-LENGTH, DYNAMIC-PNC-TO-CHANNEL-MAPPING-ENABLED, DYNAMIC-RUNTIME-LENGTH-HANDLING, DYNAMICALLY-ASSIGNED, EID-USE-MAC, ENABLE-ANYCAST, ENABLE-DEACTIVATION, ENABLE-DISCOVERY-PROTECTION, ENABLE-JOIN-ACCESS-CONTROL, ENABLE-LIVELINESS-PROTECTION, ENABLE-READ-ACCESS-CONTROL, ENABLE-TAKE-ADDRESS, ENABLE-UPDATE, ENABLE-WRITE-ACCESS-CONTROL, ENABLES-LOG-TRACE, ENHANCED-MODE-API, ENTITY-STATUS-MAX-BYTE-FIELD-USE, ERROR-SIGNALING-ENABLED, ETH-SWITCH-PORT-GROUP-DERIVATION, EXEC-IN-USER-MODE, EXECUTE-DESPITE-DATA-UNAVAILABILITY, EXPORTABILITY, EXTENDED-ADDRESSING, EXTERNAL-CLOCK-SYNCHRONISATION, EXTERNAL-SYNC, FALL-BACK-INTERNAL, FILTER-ACTION-BLOCK-SOURCE, FILTER-ACTION-DROP-FRAME, FIRE-AND-FORGET, FIXED-LENGTH, FRAME-PREEMPTION-SUPPORT, FRAME-SYNC-ENABLED, FREEZE-CURRENT-STATE, FREEZE-CURRENT-STATE-SUPPORTED, FULL-DUPLEX-ENABLED, HANDLE-DATA-STATUS, HANDLE-NEVER-RECEIVED, HAS-DYNAMIC-LENGTH, HAS-GETTER, HAS-INTERNAL-STATE, HAS-NOTIFIER, HAS-SETTER, IDENTICAL-MAPPING, IGNORE-ORDER-ALLOWED, IIDC-SOURCE-PACKET-HEADER, IMMEDIATE-NV-DATA-STORAGE, IMPLEMENTS-LEGACY-STRING-SERIALIZATION, IMPLEMENTS-SOMEIP-STRING-HANDLING, IN-PLACE, IN-SCOPE, INDIRECT-API, INIT-VALUE, INITIAL-DYNAMIC-PART, INPLACE, IP-V-6-PATH-MTU-ENABLED, IS-ACTIVATION-LINE-DEPENDENT, IS-AUTO-VALUE, IS-DEFAULT, IS-DELTA-PACKAGE, IS-DYNAMIC-LENGTH-FIELD-SIZE, IS-EVENT, IS-EXTERNAL, IS-GLOBAL, IS-MANDATORY, IS-OBD-RELEVANT, IS-OPTIONAL, IS-PIPELINING-PERMITTED, IS-PRIVATE, IS-REENTRANT, IS-REQUIRED, IS-SERVICE, IS-STRUCT-WITH-OPTIONAL-ELEMENT, IS-SYNCHRONOUS, IS-SYSTEM-WIDE-GLOBAL-TIME-MASTER, IS-UNUSED, IS-VARIADIC-TEMPLATE, J-1939-REQUESTABLE, KEEP-ALIVES, KEY-SLOT-ONLY-ENABLED, KEY-SLOT-USED-FOR-START-UP, KEY-SLOT-USED-FOR-SYNC, LENGTH-VERIFICATION, LOCAL-COM-ACCESS-CONTROL-ENABLED, MANDATORY, MASTER, MAY-BE-UNCONNECTED, MIXED-BUS-TYPE-COLLECTION, MORE-FRAGMENTS, MULTICAST-SEGMENTATION, MULTIPLE-CONFIGURATION-CONTAINER, NAGLES-ALGORITHM, NEEDS-ORIGINAL-DATA, NM-ACTIVE-COORDINATOR, NM-BUS-LOAD-REDUCTION-ENABLED, NM-BUS-SYNCHRONIZATION-ENABLED, NM-BUSLOAD-REDUCTION-ACTIVE, NM-BUSLOAD-REDUCTION-ENABLED, NM-CAR-WAKE-UP-FILTER-ENABLED, NM-CAR-WAKE-UP-RX-ENABLED, NM-CHANNEL-ACTIVE, NM-CHANNEL-SLEEP-MASTER, NM-COM-CONTROL-ENABLED, NM-CONTROL-BIT-VECTOR-ACTIVE, NM-CONTROL-BIT-VECTOR-ENABLED, NM-COORD-SYNC-SUPPORT, NM-DATA-DISABLED, NM-DATA-ENABLED, NM-DATA-INFORMATION, NM-HW-VOTE-ENABLED, NM-IMMEDIATE-RESTART-ENABLED, NM-MAIN-FUNCTION-ACROSS-FR-CYCLE, NM-MULTIPLE-CHANNELS-ENABLED, NM-NODE-DETECTION-ENABLED, NM-NODE-ID-ENABLED, NM-PASSIVE-MODE-ENABLED, NM-PDU-RX-INDICATION-ENABLED, NM-PN-HANDLE-MULTIPLE-NETWORK-REQUESTS, NM-PNC-PARTICIPATION, NM-REMOTE-SLEEP-IND-ENABLED, NM-REPEAT-MESSAGE-BIT-ACTIVE, NM-REPEAT-MESSAGE-BIT-ENABLE, NM-REPEAT-MSG-IND-ENABLED, NM-REPEAT-MSG-INDICATION-ENABLED, NM-STATE-CHANGE-IND-ENABLED, NM-SYNCHRONIZATION-POINT-ENABLED, NM-SYNCHRONIZING-NETWORK, NM-USER-DATA-ENABLED, NM-VECTOR-EARLY-UPDATE, NM-VOTE-INFORMATION, NON-VERBOSE-MODE, OBD-RELEVANCE, OFS-SUB-TLV, OPERATION-CYCLE-AUTOMATIC-END, OPERATION-CYCLE-AUTOSTART, OPERATION-MODE, OPTIONAL, PADDING-ACTIVATION, PATH-MTU-DISCOVERY-ENABLED, PATH-MTU-ENABLED, PAYLOAD-PREAMBLE-INDICATOR, PDELAY-RESPONSE-ENABLED, PERMISSION-TO-CREATE-CHILD-PROCESS, PERMIT-MULTIPLE-REFERENCES-TO-EE, PERSISTENT-STORAGE, PNC-NM-REQUEST, PNC-SYNCHRONOUS-WAKEUP, PNC-WAKEUP-CAN-ID-EXTENDED, PNC-WAKEUP-ENABLE, POST-BUILD-CHANGEABLE, POST-BUILD-VARIANT-MULTIPLICITY, POST-BUILD-VARIANT-SUPPORT, POST-BUILD-VARIANT-USED, POST-BUILD-VARIANT-VALUE, POST-VERIFICATION-REBOOT, PRE-ACTIVATION-REBOOT, PRE-MAPPING, PREDEFINED-TEXT, PRESTORAGE-FREEZE-FRAME, PRESTORED-FREEZEFRAME-STORED-IN-NVM, READONLY, RECOVERABLE-IN-SAME-OPERATION-CYCLE, REMOTE-ACCESS-CONTROL-ENABLED, REPLAY-PROTECTION, REPRESENTS-VIN, REQUEST-2-SUPPORT, REQUESTABLE, REQUIRES-INDEX, REQUIRES-SYMBOLIC-NAME-VALUE, RESET-CONFIRMED-BIT-ON-OVERFLOW, RESET-PENDING-BIT-ON-OVERFLOW, RESET-TO-DEFAULT, RESET-TO-DEFAULT-SUPPORTED, RESISTANT-TO-CHANGED-SW, RESPONSE-ON-ALL-REQUEST-SIDS, RESPONSE-ON-SECOND-DECLINED-REQUEST, RESTORE-AT-START, RESTRICT-UPDATE, RETRY, RVF-INTERLACED, RX-SECURITY-VERIFICATION, SAFE-TRANSLATION, SAVE-CONFIGURATION, SCHEDULE-CHANGE-NEXT-TIME-BASE, SECURE-TRANSLATION, SECURED-RX-VERIFICATION, SEGMENTATION-SUPPORTED, SELECT-BLOCK-FOR-FIRST-INIT-ALL, SEND-RESP-PEND-ON-TRANS-TO-BOOT, SESSION-ID-SUPPORT, SHARED, SHARED-TIMER, SHORT-TERM-ADJUSTMENT, SHORT-TERM-ADJUSTMENT-SUPPORTED, SLAVE-ACT-AS-PASSIVE-COMMUNICATION-SLAVE, SLEEP-MODE-SUPPORTED, SPARSE-TIMESTAMP-ENABLED, STATE-MANAGEMENT-BASED-ON-TCP-FLAGS, STATUS-BIT-STORAGE-TEST-FAILED, STATUS-SUB-TLV, STORAGE-STATE-EVALUATION, STORE-AT-SHUTDOWN, STORE-CYCLIC, STORE-EMERGENCY, STORE-EVENT-ENABLED, STORE-IMMEDIATE, STORE-ON-CHANGE, STREAM-IDENTIFICATION-WILDCARD, SUPPORT-DIRTY-FLAG, SUPPORTS-ASYNCHRONOUS-MODE-SWITCH, SUPPORTS-MULTIPLE-INSTANTIATION, SUPPORTS-MULTIPLE-NOTIFIER-SETS, SW-IS-VIRTUAL, SYMBOLIC-NAME-VALUE, TCP-CONGESTION-AVOIDANCE-ENABLED, TCP-FAST-RECOVERY-ENABLED, TCP-FAST-RETRANSMIT-ENABLED, TCP-IP-ARP-PACKET-QUEUE-ENABLED, TCP-IP-ICMP-V-4-ECHO-REPLY-ENABLED, TCP-IP-ICMP-V-6-ECHO-REPLY-AVOID-FRAGMENTATION, TCP-IP-ICMP-V-6-ECHO-REPLY-ENABLED, TCP-IP-ICMP-V-6-MSG-DESTINATION-UNREACHABLE-ENABLED, TCP-IP-ICMP-V-6-MSG-PARAMETER-PROBLEM-ENABLED, TCP-IP-IP-FRAGMENTATION-RX-ENABLED, TCP-IP-NDP-DEFENSIVE-PROCESSING, TCP-IP-NDP-DYNAMIC-HOP-LIMIT-ENABLED, TCP-IP-NDP-DYNAMIC-MTU-ENABLED, TCP-IP-NDP-DYNAMIC-REACHABLE-TIME-ENABLED, TCP-IP-NDP-DYNAMIC-RETRANS-TIME-ENABLED, TCP-IP-NDP-NEIGHBOR-UNREACHABILITY-DETECTION-ENABLED, TCP-IP-NDP-PACKET-QUEUE-ENABLED, TCP-IP-NDP-RANDOM-REACHABLE-TIME-ENABLED, TCP-IP-NDP-RND-RTR-SOLICITATION-DELAY-ENABLED, TCP-IP-NDP-SLAAC-DELAY-ENABLED, TCP-IP-NDP-SLAAC-OPTIMISTIC-DAD-ENABLED, TCP-IP-TLS-USE-SECURITY-EXTENSION-FORCE-ENCRYPT-THEN-MAC, TCP-KEEP-ALIVE-ENABLED, TCP-NAGLE-ENABLED, TCP-SLOW-START-ENABLED, TIME-SUB-TLV, TIMESTAMP-SUPPORT, TRANSIT-TO-INVALID-EXTENDED, TRANSMISSION-TRIGGER, TRANSMIT-CANCELLATION, TRCV-PWM-MODE-ENABLED, TRIGGERS-RECOVERY-NOTIFICATION, TWO-KEY-SLOT-MODE, TX-BIT-RATE-SWITCH, UPDATE, UPPER-MULTIPLICITY-INFINITE, UPPER-MULTIPLICITY-IS-INFINITE, USE-AS-CRYPTOGRAPHIC-I-PDU, USE-AUTH-DATA-FRESHNESS, USE-AUTO-VALIDATION-AT-SHUT-DOWN, USE-CLIENT-AUTHENTICATION-REQUEST, USE-CRC-COMP-MECHANISM, USE-FRESHNESS-TIMESTAMP, USE-MAC-ADDRESS-FOR-IDENTIFICATION, USE-SECURITY-EXTENSION-RECORD-SIZE-LIMIT, USE-SMART-SENSOR-API, USE-VARIABLE-DA, USE-VARIABLE-SA, USE-VEHICLE-IDENTIFICATION-SYNC-STATUS, USER-DATA-SUB-TLV, USES-ADDRESS-ARBITRATION, USES-DYNAMIC-ADDRESSING, USES-MONITOR-DATA, USES-TIME-BASE-RESOURCE, VALIDATION-ROOT, VARIABLE-LENGTH, VARIATION, VEHICLE-IDENTIFICATION-SYNC-STATUS, WAKE-UP-BY-CONTROLLER-SUPPORTED, WAKE-UP-CHANNEL, WAKE-UP-OVER-BUS-SUPPORTED, WAKEUP-FORWARD-LOCAL-ENABLED, WAKEUP-FORWARD-REMOTE-ENABLED, WAKEUP-LOCAL-ENABLED, WAKEUP-REMOTE-ENABLED, WITH-AUTO, WRITE-ACCESS, WRITE-ONLY-ONCE, WRITE-VERIFICATION
    /*  299 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // BR
    /*  300 */ ElementSpec {sub_elements: (17907, 17912), sub_element_ver: 1617, attributes: (0, 2), attributes_ver: 0, character_data: None, mode: ContentMode::Sequence, ref_info: (407, 409)}, // BSW-ASYNCHRONOUS-SERVER-CALL-POINT
    /*  301 */ ElementSpec {sub_elements: (18234, 18239), sub_element_ver: 1617, attributes: (0, 2), attributes_ver: 0, character_data: None, mode: ContentMode::Sequence, ref_info: (409, 411)}, // BSW-ASYNCHRONOUS-SERVER-CALL-RESULT-POINT
    /*  302 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (517, 523), attributes_ver: 9319, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // ASYNCHRONOUS-SERVER-CALL-POINT-REF
    /*  303 */ ElementSpec {sub_elements: (8030, 8044), sub_element_ver: 5144, attributes: (115, 118), attributes_ver: 0, character_data: None, mode: ContentMode::Sequence, ref_info: (411, 415)}, // BSW-ASYNCHRONOUS-SERVER-CALL-RETURNS-EVENT
    /*  304 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (523, 529), attributes_ver: 9319, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // EVENT-SOURCE-REF
    /*  305 */ ElementSpec {sub_elements: (6628, 6641), sub_element_ver: 5448, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (415, 419)}, // BSW-BACKGROUND-EVENT
    /*  306 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 22, character_data: Some(78), mode: ContentMode::Characters, ref_info: (0, 0)}, // CALL-TYPE
    /*  307 */ ElementSpec {sub_elements: (1221, 1250), sub_element_ver: 1285, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (419, 422)}, // BSW-CALLED-ENTITY
    /*  308 */ ElementSpec {sub_elements: (19031, 19034), sub_element_ver: 140, attributes: (0, 2), attributes_ver: 120, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // BSW-CLIENT-POLICY
    /*  309 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (529, 535), attributes_ver: 9331, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // REQUIRED-CLIENT-SERVER-ENTRY-REF
    /*  310 */ ElementSpec {sub_elements: (4984, 5001), sub_element_ver: 4363, attributes: (115, 118), attributes_ver: 9, character_data: None, mode: ContentMode::Sequence, ref_info: (422, 427)}, // BSW-COMPOSITION-TIMING
    /*  311 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (535, 541), attributes_ver: 1187, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // IMPLEMENTATION-REF
    /*  312 */ ElementSpec {sub_elements: (20195, 20196), sub_element_ver: 9, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // IMPLEMENTATION-REFS
    /*  313 */ ElementSpec {sub_elements: (8044, 8058), sub_element_ver: 5144, attributes: (115, 118), attributes_ver: 0, character_data: None, mode: ContentMode::Sequence, ref_info: (427, 431)}, // BSW-DATA-RECEIVED-EVENT
    /*  314 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (541, 547), attributes_ver: 9319, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // ACCESSED-VARIABLE-REF, DATA-REF, RECEIVED-DATA-REF, TARGET-VARIABLE-DATA-PROTOTYPE-REF
    /*  315 */ ElementSpec {sub_elements: (18591, 18595), sub_element_ver: 186, attributes: (0, 2), attributes_ver: 120, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // BSW-DATA-SEND-POLICY
    /*  316 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (541, 547), attributes_ver: 1187, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // PROVIDED-DATA-REF
    /*  317 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (541, 547), attributes_ver: 9331, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // PROVIEDE-DATA-REF
    /*  318 */ ElementSpec {sub_elements: (11178, 11190), sub_element_ver: 1082, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (431, 432)}, // BSW-DEBUG-INFO
    /*  319 */ ElementSpec {sub_elements: (20196, 20197), sub_element_ver: 7, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // LOCAL-DEBUG-DATAS, SUB-ELEMENTS
    /*  320 */ ElementSpec {sub_elements: (20197, 20198), sub_element_ver: 7, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // PARAMETER-ACCESSED-FOR-DEBUG-REFS
    /*  321 */ ElementSpec {sub_elements: (20198, 20199), sub_element_ver: 7, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // VARIABLE-ACCESSED-FOR-DEBUG-REFS
    /*  322 */ ElementSpec {sub_elements: (17895, 17901), sub_element_ver: 1617, attributes: (0, 2), attributes_ver: 0, character_data: None, mode: ContentMode::Sequence, ref_info: (432, 434)}, // BSW-DIRECT-CALL-POINT
    /*  323 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (547, 553), attributes_ver: 9319, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // CALLED-ENTRY-REF, ENCAPSULATED-ENTRY-REF
    /*  324 */ ElementSpec {sub_elements: (19034, 19037), sub_element_ver: 1617, attributes: (0, 2), attributes_ver: 0, character_data: None, mode: ContentMode::Sequence, ref_info: (434, 435)}, // BSW-DISTINGUISHED-PARTITION
    /*  325 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 134, character_data: Some(80), mode: ContentMode::Characters, ref_info: (0, 0)}, // BSW-ENTRY-KIND
    /*  326 */ ElementSpec {sub_elements: (19037, 19040), sub_element_ver: 192, attributes: (0, 2), attributes_ver: 134, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // BSW-ENTRY-RELATIONSHIP
    /*  327 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 134, character_data: Some(81), mode: ContentMode::Characters, ref_info: (0, 0)}, // BSW-ENTRY-RELATIONSHIP-TYPE
    /*  328 */ ElementSpec {sub_elements: (11190, 11202), sub_element_ver: 3816, attributes: (115, 118), attributes_ver: 192, character_data: None, mode: ContentMode::Sequence, ref_info: (435, 441)}, // BSW-ENTRY-RELATIONSHIP-SET
    /*  329 */ ElementSpec {sub_elements: (20199, 20200), sub_element_ver: 21, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // BSW-ENTRY-RELATIONSHIPS
    /*  330 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (547, 553), attributes_ver: 9325, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // BSW-MODULE-ENTRY-REF, FROM-REF, TO-REF
    /*  331 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (553, 559), attributes_ver: 9319, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // CONTEXT-LIMITATION-REF
    /*  332 */ ElementSpec {sub_elements: (20200, 20201), sub_element_ver: 0, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // CONTEXT-LIMITATION-REFS
    /*  333 */ ElementSpec {sub_elements: (20201, 20202), sub_element_ver: 7, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // DISABLED-IN-MODE-IREFS
    /*  334 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (559, 565), attributes_ver: 9361, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // BSW-ENTITY-REF, BSW-MODULE-ENTITY-REF, STARTS-ON-EVENT-REF
    /*  335 */ ElementSpec {sub_elements: (18595, 18599), sub_element_ver: 170, attributes: (0, 2), attributes_ver: 120, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // BSW-EXCLUSIVE-AREA-POLICY
    /*  336 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (565, 571), attributes_ver: 9331, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // EXCLUSIVE-AREA-REF
    /*  337 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 22, character_data: Some(82), mode: ContentMode::Characters, ref_info: (0, 0)}, // EXECUTION-CONTEXT
    /*  338 */ ElementSpec {sub_elements: (8058, 8072), sub_element_ver: 5448, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (441, 445)}, // BSW-EXTERNAL-TRIGGER-OCCURRED-EVENT
    /*  339 */ ElementSpec {sub_elements: (1189, 1221), sub_element_ver: 1253, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (445, 450)}, // BSW-IMPLEMENTATION
    /*  340 */ ElementSpec {sub_elements: (20202, 20203), sub_element_ver: 7, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // DEBUG-INFOS
    /*  341 */ ElementSpec {sub_elements: (20203, 20204), sub_element_ver: 7, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // PRECONFIGURED-CONFIGURATION-REFS
    /*  342 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (571, 577), attributes_ver: 9361, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // ECUC-MODULE-CONFIGURATION-VALUES-REF, PRECONFIGURED-CONFIGURATION-REF, RECOMMENDED-CONFIGURATION-REF
    /*  343 */ ElementSpec {sub_elements: (20204, 20205), sub_element_ver: 7, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // RECOMMENDED-CONFIGURATION-REFS
    /*  344 */ ElementSpec {sub_elements: (20205, 20206), sub_element_ver: 7, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // VENDOR-SPECIFIC-MODULE-DEF-REFS
    /*  345 */ ElementSpec {sub_elements: (1018, 1054), sub_element_ver: 1082, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (450, 455)}, // BSW-INTERNAL-BEHAVIOR
    /*  346 */ ElementSpec {sub_elements: (20171, 20172), sub_element_ver: 21, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // AR-TYPED-PER-INSTANCE-MEMORYS
    /*  347 */ ElementSpec {sub_elements: (20206, 20207), sub_element_ver: 354, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // BSW-PER-INSTANCE-MEMORY-POLICYS
    /*  348 */ ElementSpec {sub_elements: (20207, 20208), sub_element_ver: 43, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // CLIENT-POLICYS
    /*  349 */ ElementSpec {sub_elements: (20208, 20209), sub_element_ver: 0, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // DISTINGUISHED-PARTITIONS
    /*  350 */ ElementSpec {sub_elements: (19040, 19043), sub_element_ver: 22, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // ENTITYS
    /*  351 */ ElementSpec {sub_elements: (11202, 11214), sub_element_ver: 7382, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // EVENTS
    /*  352 */ ElementSpec {sub_elements: (20209, 20210), sub_element_ver: 43, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // EXCLUSIVE-AREA-POLICYS
    /*  353 */ ElementSpec {sub_elements: (20210, 20211), sub_element_ver: 43, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // INCLUDED-DATA-TYPE-SETS
    /*  354 */ ElementSpec {sub_elements: (20211, 20212), sub_element_ver: 20, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // INCLUDED-MODE-DECLARATION-GROUP-SETS
    /*  355 */ ElementSpec {sub_elements: (20212, 20213), sub_element_ver: 43, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // INTERNAL-TRIGGERING-POINT-POLICYS
    /*  356 */ ElementSpec {sub_elements: (20213, 20214), sub_element_ver: 7, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // INTERNAL-TRIGGERING-POINTS
    /*  357 */ ElementSpec {sub_elements: (20214, 20215), sub_element_ver: 7, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // MODE-RECEIVER-POLICYS
    /*  358 */ ElementSpec {sub_elements: (20215, 20216), sub_element_ver: 7, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // MODE-SENDER-POLICYS
    /*  359 */ ElementSpec {sub_elements: (20216, 20217), sub_element_ver: 43, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // PARAMETER-POLICYS
    /*  360 */ ElementSpec {sub_elements: (20217, 20218), sub_element_ver: 386, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // PER-INSTANCE-PARAMETERS
    /*  361 */ ElementSpec {sub_elements: (20218, 20219), sub_element_ver: 0, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // RECEPTION-POLICYS
    /*  362 */ ElementSpec {sub_elements: (20219, 20220), sub_element_ver: 43, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // RELEASED-TRIGGER-POLICYS
    /*  363 */ ElementSpec {sub_elements: (20220, 20221), sub_element_ver: 386, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // SCHEDULER-NAME-PREFIXS
    /*  364 */ ElementSpec {sub_elements: (20221, 20222), sub_element_ver: 43, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // SEND-POLICYS
    /*  365 */ ElementSpec {sub_elements: (20222, 20223), sub_element_ver: 386, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // SERVICE-DEPENDENCYS
    /*  366 */ ElementSpec {sub_elements: (20223, 20224), sub_element_ver: 7, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // TRIGGER-DIRECT-IMPLEMENTATIONS
    /*  367 */ ElementSpec {sub_elements: (20224, 20225), sub_element_ver: 43, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // VARIATION-POINT-PROXYS
    /*  368 */ ElementSpec {sub_elements: (8072, 8086), sub_element_ver: 5448, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (455, 459)}, // BSW-INTERNAL-TRIGGER-OCCURRED-EVENT
    /*  369 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (577, 583), attributes_ver: 9361, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // BSW-INTERNAL-TRIGGERING-POINT-REF, EVENT-SOURCE-REF
    /*  370 */ ElementSpec {sub_elements: (15024, 15034), sub_element_ver: 7255, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (459, 460)}, // BSW-INTERNAL-TRIGGERING-POINT
    /*  371 */ ElementSpec {sub_elements: (19043, 19046), sub_element_ver: 140, attributes: (0, 2), attributes_ver: 120, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // BSW-INTERNAL-TRIGGERING-POINT-POLICY
    /*  372 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (577, 583), attributes_ver: 9331, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // BSW-INTERNAL-TRIGGERING-POINT-REF
    /*  373 */ ElementSpec {sub_elements: (19544, 19546), sub_element_ver: 22, attributes: (0, 2), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // BSW-INTERNAL-TRIGGERING-POINT-REF-CONDITIONAL
    /*  374 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 22, character_data: Some(86), mode: ContentMode::Characters, ref_info: (0, 0)}, // INTERRUPT-CATEGORY
    /*  375 */ ElementSpec {sub_elements: (1221, 1253), sub_element_ver: 1285, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (460, 463)}, // BSW-INTERRUPT-ENTITY
    /*  376 */ ElementSpec {sub_elements: (9188, 9201), sub_element_ver: 1514, attributes: (115, 118), attributes_ver: 230, character_data: None, mode: ContentMode::Sequence, ref_info: (463, 466)}, // BSW-INTERRUPT-EVENT
    /*  377 */ ElementSpec {sub_elements: (777, 785), sub_element_ver: 5048, attributes: (115, 118), attributes_ver: 776, character_data: None, mode: ContentMode::Sequence, ref_info: (466, 468)}, // BSW-MGR-NEEDS
    /*  378 */ ElementSpec {sub_elements: (8086, 8100), sub_element_ver: 5144, attributes: (115, 118), attributes_ver: 0, character_data: None, mode: ContentMode::Sequence, ref_info: (468, 472)}, // BSW-MODE-MANAGER-ERROR-EVENT
    /*  379 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (583, 589), attributes_ver: 9319, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // MODE-GROUP-REF
    /*  380 */ ElementSpec {sub_elements: (18599, 18603), sub_element_ver: 386, attributes: (0, 2), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // BSW-MODE-RECEIVER-POLICY
    /*  381 */ ElementSpec {sub_elements: (18239, 18244), sub_element_ver: 385, attributes: (0, 2), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // BSW-MODE-SENDER-POLICY
    /*  382 */ ElementSpec {sub_elements: (19546, 19548), sub_element_ver: 795, attributes: (0, 2), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // ACK-REQUEST
    /*  383 */ ElementSpec {sub_elements: (6628, 6643), sub_element_ver: 5448, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (472, 476)}, // BSW-MODE-SWITCH-EVENT
    /*  384 */ ElementSpec {sub_elements: (20225, 20226), sub_element_ver: 7, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // MODE-IREFS
    /*  385 */ ElementSpec {sub_elements: (8100, 8114), sub_element_ver: 5448, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (476, 480)}, // BSW-MODE-SWITCHED-ACK-EVENT
    /*  386 */ ElementSpec {sub_elements: (17901, 17907), sub_element_ver: 1617, attributes: (0, 2), attributes_ver: 0, character_data: None, mode: ContentMode::Sequence, ref_info: (480, 481)}, // BSW-MODULE-CLIENT-SERVER-ENTRY
    /*  387 */ ElementSpec {sub_elements: (8114, 8128), sub_element_ver: 6223, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (481, 482)}, // BSW-MODULE-DEPENDENCY
    /*  388 */ ElementSpec {sub_elements: (664, 728), sub_element_ver: 664, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // SERVICE-ITEMS
    /*  389 */ ElementSpec {sub_elements: (20226, 20227), sub_element_ver: 0, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // TARGET-MODULE-REFS
    /*  390 */ ElementSpec {sub_elements: (1948, 1975), sub_element_ver: 1813, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (482, 491)}, // BSW-MODULE-DESCRIPTION
    /*  391 */ ElementSpec {sub_elements: (20227, 20228), sub_element_ver: 7, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // BSW-MODULE-DEPENDENCYS
    /*  392 */ ElementSpec {sub_elements: (20228, 20229), sub_element_ver: 386, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // BSW-MODULE-DOCUMENTATIONS
    /*  393 */ ElementSpec {sub_elements: (20229, 20230), sub_element_ver: 21, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // EXPECTED-ENTRYS, IMPLEMENTED-ENTRYS
    /*  394 */ ElementSpec {sub_elements: (20230, 20231), sub_element_ver: 7, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // INTERNAL-BEHAVIORS
    /*  395 */ ElementSpec {sub_elements: (20231, 20232), sub_element_ver: 0, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // PROVIDED-CLIENT-SERVER-ENTRYS, REQUIRED-CLIENT-SERVER-ENTRYS
    /*  396 */ ElementSpec {sub_elements: (20171, 20172), sub_element_ver: 0, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // PROVIDED-DATAS, REQUIRED-DATAS
    /*  397 */ ElementSpec {sub_elements: (20232, 20233), sub_element_ver: 7, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // PROVIDED-MODE-GROUPS, REQUIRED-MODE-GROUPS
    /*  398 */ ElementSpec {sub_elements: (19548, 19550), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 0, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // BSW-MODULE-DESCRIPTION-REF-CONDITIONAL
    /*  399 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (589, 595), attributes_ver: 9319, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // BSW-MODULE-DESCRIPTION-REF
    /*  400 */ ElementSpec {sub_elements: (20233, 20234), sub_element_ver: 7, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // ACTIVATION-POINTS
    /*  401 */ ElementSpec {sub_elements: (18603, 18607), sub_element_ver: 0, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // CALL-POINTS
    /*  402 */ ElementSpec {sub_elements: (20229, 20230), sub_element_ver: 7, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // CALLED-ENTRYS, EXPECTED-CALLBACKS, OUTGOING-CALLBACKS, PROVIDED-ENTRYS, REQUIRED-ENTRYS
    /*  403 */ ElementSpec {sub_elements: (20234, 20235), sub_element_ver: 0, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // DATA-RECEIVE-POINTS, DATA-SEND-POINTS
    /*  404 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (547, 553), attributes_ver: 9361, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // BSW-MODULE-ENTRY-REF, FUNCTION-POINTER-SIGNATURE-REF, IMPLEMENTED-ENTRY-REF, INTERPOLATION-ROUTINE-REF
    /*  405 */ ElementSpec {sub_elements: (20235, 20236), sub_element_ver: 7, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // ISSUED-TRIGGERS
    /*  406 */ ElementSpec {sub_elements: (20236, 20237), sub_element_ver: 7, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // ACCESSED-MODE-GROUPS, MANAGED-MODE-GROUPS
    /*  407 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (595, 601), attributes_ver: 9349, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // SCHEDULER-NAME-PREFIX-REF
    /*  408 */ ElementSpec {sub_elements: (2948, 2970), sub_element_ver: 2655, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (491, 497)}, // BSW-MODULE-ENTRY
    /*  409 */ ElementSpec {sub_elements: (20237, 20238), sub_element_ver: 7, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // ARGUMENTS
    /*  410 */ ElementSpec {sub_elements: (19550, 19552), sub_element_ver: 22, attributes: (0, 2), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // BSW-MODULE-ENTRY-REF-CONDITIONAL
    /*  411 */ ElementSpec {sub_elements: (5001, 5018), sub_element_ver: 4380, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (497, 502)}, // BSW-MODULE-TIMING
    /*  412 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (601, 607), attributes_ver: 9361, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // BEHAVIOR-REF, BSW-BEHAVIOR-REF
    /*  413 */ ElementSpec {sub_elements: (8128, 8142), sub_element_ver: 5144, attributes: (115, 118), attributes_ver: 0, character_data: None, mode: ContentMode::Sequence, ref_info: (502, 505)}, // BSW-OPERATION-INVOKED-EVENT
    /*  414 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (529, 535), attributes_ver: 9319, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // CALLED-ENTRY-REF, ENTRY-REF
    /*  415 */ ElementSpec {sub_elements: (9201, 9214), sub_element_ver: 1927, attributes: (115, 118), attributes_ver: 77, character_data: None, mode: ContentMode::Sequence, ref_info: (505, 509)}, // BSW-OS-TASK-EXECUTION-EVENT
    /*  416 */ ElementSpec {sub_elements: (19046, 19049), sub_element_ver: 140, attributes: (0, 2), attributes_ver: 120, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // BSW-PARAMETER-POLICY
    /*  417 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (427, 433), attributes_ver: 9331, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // PER-INSTANCE-PARAMETER-REF
    /*  418 */ ElementSpec {sub_elements: (19049, 19052), sub_element_ver: 4281, attributes: (0, 2), attributes_ver: 1612, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // BSW-PER-INSTANCE-MEMORY-POLICY
    /*  419 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (541, 547), attributes_ver: 9385, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // AR-TYPED-PER-INSTANCE-MEMORY-REF
    /*  420 */ ElementSpec {sub_elements: (18607, 18611), sub_element_ver: 3122, attributes: (0, 2), attributes_ver: 0, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // BSW-QUEUED-DATA-RECEPTION-POLICY
    /*  421 */ ElementSpec {sub_elements: (19052, 19055), sub_element_ver: 140, attributes: (0, 2), attributes_ver: 120, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // BSW-RELEASED-TRIGGER-POLICY
    /*  422 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (607, 613), attributes_ver: 9331, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // RELEASED-TRIGGER-REF
    /*  423 */ ElementSpec {sub_elements: (1221, 1250), sub_element_ver: 1285, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (509, 512)}, // BSW-SCHEDULABLE-ENTITY
    /*  424 */ ElementSpec {sub_elements: (18611, 18615), sub_element_ver: 5048, attributes: (0, 2), attributes_ver: 656, character_data: None, mode: ContentMode::Sequence, ref_info: (512, 514)}, // BSW-SCHEDULER-NAME-PREFIX
    /*  425 */ ElementSpec {sub_elements: (17480, 17488), sub_element_ver: 8738, attributes: (0, 2), attributes_ver: 656, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // BSW-SERVICE-DEPENDENCY
    /*  426 */ ElementSpec {sub_elements: (20238, 20239), sub_element_ver: 386, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // ASSIGNED-DATAS
    /*  427 */ ElementSpec {sub_elements: (20239, 20240), sub_element_ver: 386, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // ASSIGNED-ENTRY-ROLES
    /*  428 */ ElementSpec {sub_elements: (777, 785), sub_element_ver: 1317, attributes: (115, 118), attributes_ver: 140, character_data: None, mode: ContentMode::Sequence, ref_info: (514, 519)}, // IDENT
    /*  429 */ ElementSpec {sub_elements: (664, 728), sub_element_ver: 728, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Choice, ref_info: (0, 0)}, // SERVICE-NEEDS
    /*  430 */ ElementSpec {sub_elements: (17907, 17913), sub_element_ver: 1617, attributes: (0, 2), attributes_ver: 0, character_data: None, mode: ContentMode::Sequence, ref_info: (519, 521)}, // BSW-SYNCHRONOUS-SERVER-CALL-POINT
    /*  431 */ ElementSpec {sub_elements: (6643, 6658), sub_element_ver: 5463, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (521, 525)}, // BSW-TIMING-EVENT
    /*  432 */ ElementSpec {sub_elements: (18615, 18619), sub_element_ver: 6648, attributes: (0, 2), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // BSW-TRIGGER-DIRECT-IMPLEMENTATION
    /*  433 */ ElementSpec {sub_elements: (18244, 18249), sub_element_ver: 1617, attributes: (0, 2), attributes_ver: 0, character_data: None, mode: ContentMode::Sequence, ref_info: (525, 526)}, // BSW-VARIABLE-ACCESS
    /*  434 */ ElementSpec {sub_elements: (19055, 19058), sub_element_ver: 140, attributes: (0, 2), attributes_ver: 120, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // BUFFER-PROPERTIES
    /*  435 */ ElementSpec {sub_elements: (3936, 3955), sub_element_ver: 3493, attributes: (115, 118), attributes_ver: 0, character_data: None, mode: ContentMode::Sequence, ref_info: (526, 530)}, // BUILD-ACTION
    /*  436 */ ElementSpec {sub_elements: (11214, 11226), sub_element_ver: 3493, attributes: (115, 118), attributes_ver: 0, character_data: None, mode: ContentMode::Sequence, ref_info: (530, 533)}, // BUILD-ACTION-ENVIRONMENT
    /*  437 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (613, 619), attributes_ver: 9319, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // DYNAMIC-ACTION-REF, FOLLOW-UP-ACTION-REF, PREDECESSOR-ACTION-REF, START-ACTION-REF, TEAR-DOWN-ACTION-REF
    /*  438 */ ElementSpec {sub_elements: (20240, 20241), sub_element_ver: 0, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // FOLLOW-UP-ACTION-REFS
    /*  439 */ ElementSpec {sub_elements: (20241, 20242), sub_element_ver: 0, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // CREATED-DATAS, INPUT-DATAS, MODIFIED-DATAS
    /*  440 */ ElementSpec {sub_elements: (19552, 19554), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 0, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // INVOCATION
    /*  441 */ ElementSpec {sub_elements: (17703, 17710), sub_element_ver: 8704, attributes: (0, 2), attributes_ver: 0, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // BUILD-ACTION-IO-ELEMENT
    /*  442 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (505, 511), attributes_ver: 9319, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // ECUC-DEFINITION-REF
    /*  443 */ ElementSpec {sub_elements: (5676, 5692), sub_element_ver: 3436, attributes: (115, 118), attributes_ver: 0, character_data: None, mode: ContentMode::Sequence, ref_info: (533, 539)}, // BUILD-ACTION-MANIFEST
    /*  444 */ ElementSpec {sub_elements: (20242, 20243), sub_element_ver: 0, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // BUILD-ACTION-ENVIRONMENTS
    /*  445 */ ElementSpec {sub_elements: (20243, 20244), sub_element_ver: 0, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // BUILD-ACTIONS
    /*  446 */ ElementSpec {sub_elements: (20244, 20245), sub_element_ver: 0, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // DYNAMIC-ACTION-REFS
    /*  447 */ ElementSpec {sub_elements: (19554, 19556), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 0, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // BUILD-ACTION-MANIFEST-REF-CONDITIONAL
    /*  448 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (619, 625), attributes_ver: 9319, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // BUILD-ACTION-MANIFEST-REF
    /*  449 */ ElementSpec {sub_elements: (20245, 20246), sub_element_ver: 0, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // START-ACTION-REFS
    /*  450 */ ElementSpec {sub_elements: (20246, 20247), sub_element_ver: 0, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // TEAR-DOWN-ACTION-REFS
    /*  451 */ ElementSpec {sub_elements: (20247, 20248), sub_element_ver: 0, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // PREDECESSOR-ACTION-REFS
    /*  452 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (625, 631), attributes_ver: 9319, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // REQUIRED-ENVIRONMENT-REF
    /*  453 */ ElementSpec {sub_elements: (15034, 15044), sub_element_ver: 3502, attributes: (0, 2), attributes_ver: 0, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // ENGINEERING-OBJECT
    /*  454 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 531, character_data: Some(96), mode: ContentMode::Characters, ref_info: (0, 0)}, // BUILD-TYPE
    /*  455 */ ElementSpec {sub_elements: (13090, 13101), sub_element_ver: 1642, attributes: (115, 118), attributes_ver: 909, character_data: None, mode: ContentMode::Sequence, ref_info: (539, 543)}, // BULK-NV-DATA-DESCRIPTOR
    /*  456 */ ElementSpec {sub_elements: (20248, 20249), sub_element_ver: 64, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // NV-BLOCK-DATA-MAPPINGS
    /*  457 */ ElementSpec {sub_elements: (4465, 4483), sub_element_ver: 3985, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (543, 547)}, // BURST-PATTERN-EVENT-TRIGGERING
    /*  458 */ ElementSpec {sub_elements: (19058, 19061), sub_element_ver: 9, attributes: (0, 2), attributes_ver: 9, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // BUS-MIRROR-CAN-ID-RANGE-MAPPING
    /*  459 */ ElementSpec {sub_elements: (19061, 19064), sub_element_ver: 10, attributes: (0, 2), attributes_ver: 9, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // BUS-MIRROR-CAN-ID-TO-CAN-ID-MAPPING
    /*  460 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (631, 637), attributes_ver: 1187, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // SOUCE-CAN-ID-REF
    /*  461 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (631, 637), attributes_ver: 425, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // SOURCE-CAN-ID-REF
    /*  462 */ ElementSpec {sub_elements: (19556, 19558), sub_element_ver: 9, attributes: (0, 2), attributes_ver: 9, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // SOURCE-CHANNEL, TARGET-CHANNEL
    /*  463 */ ElementSpec {sub_elements: (20249, 20250), sub_element_ver: 9, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // CHANNELS
    /*  464 */ ElementSpec {sub_elements: (3322, 3343), sub_element_ver: 2985, attributes: (115, 118), attributes_ver: 9, character_data: None, mode: ContentMode::Sequence, ref_info: (547, 552)}, // BUS-MIRROR-CHANNEL-MAPPING-CAN
    /*  465 */ ElementSpec {sub_elements: (20250, 20251), sub_element_ver: 9, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // CAN-ID-RANGE-MAPPINGS
    /*  466 */ ElementSpec {sub_elements: (20251, 20252), sub_element_ver: 9, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // CAN-ID-TO-CAN-ID-MAPPINGS
    /*  467 */ ElementSpec {sub_elements: (20252, 20253), sub_element_ver: 9, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // LIN-PID-TO-CAN-ID-MAPPINGS
    /*  468 */ ElementSpec {sub_elements: (20253, 20254), sub_element_ver: 12, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // ECU-INSTANCES
    /*  469 */ ElementSpec {sub_elements: (3322, 3338), sub_element_ver: 4856, attributes: (115, 118), attributes_ver: 9, character_data: None, mode: ContentMode::Sequence, ref_info: (552, 557)}, // BUS-MIRROR-CHANNEL-MAPPING-FLEXRAY
    /*  470 */ ElementSpec {sub_elements: (3322, 3338), sub_element_ver: 4856, attributes: (115, 118), attributes_ver: 9, character_data: None, mode: ContentMode::Sequence, ref_info: (557, 562)}, // BUS-MIRROR-CHANNEL-MAPPING-IP
    /*  471 */ ElementSpec {sub_elements: (3322, 3338), sub_element_ver: 4856, attributes: (115, 118), attributes_ver: 9, character_data: None, mode: ContentMode::Sequence, ref_info: (562, 567)}, // BUS-MIRROR-CHANNEL-MAPPING-USER-DEFINED
    /*  472 */ ElementSpec {sub_elements: (19558, 19560), sub_element_ver: 9, attributes: (0, 2), attributes_ver: 9, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // BUS-MIRROR-LIN-PID-TO-CAN-ID-MAPPING
    /*  473 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (391, 397), attributes_ver: 1187, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // SOURCE-LIN-PID-REF
    /*  474 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 22, character_data: Some(97), mode: ContentMode::Characters, ref_info: (0, 0)}, // BYTE-ORDER, CONTAINER-I-PDU-HEADER-BYTE-ORDER, DEFAULT-ENDIANNESS, PACKING-BYTE-ORDER, SEGMENT-BYTE-ORDER, SELECTOR-FIELD-BYTE-ORDER
    /*  475 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (3731, 3735), attributes_ver: 9362, character_data: Some(98), mode: ContentMode::Characters, ref_info: (0, 0)}, // API-SERVICE-PREFIX, CODE-LABEL, MEM-CLASS-SYMBOL, SERVICE-POINT-SYMBOL-POST, SERVICE-POINT-SYMBOL-PRE, SYMBOL, TYPE
    /*  476 */ ElementSpec {sub_elements: (18619, 18623), sub_element_ver: 2435, attributes: (0, 2), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // CALIBRATION-PARAMETER-VALUE
    /*  477 */ ElementSpec {sub_elements: (15044, 15054), sub_element_ver: 884, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (567, 571)}, // CALIBRATION-PARAMETER-VALUE-SET
    /*  478 */ ElementSpec {sub_elements: (20254, 20255), sub_element_ver: 7, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // CALIBRATION-PARAMETER-VALUES
    /*  479 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 22, character_data: Some(100), mode: ContentMode::Characters, ref_info: (0, 0)}, // CATEGORY
    /*  480 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 22, character_data: Some(101), mode: ContentMode::Characters, ref_info: (0, 0)}, // CAN-ADDRESSING-MODE
    /*  481 */ ElementSpec {sub_elements: (15054, 15064), sub_element_ver: 884, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (571, 580)}, // CAN-CLUSTER
    /*  482 */ ElementSpec {sub_elements: (18249, 18254), sub_element_ver: 140, attributes: (0, 2), attributes_ver: 120, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // BUS-OFF-RECOVERY
    /*  483 */ ElementSpec {sub_elements: (20255, 20256), sub_element_ver: 7, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // CAN-CLUSTER-VARIANTS
    /*  484 */ ElementSpec {sub_elements: (13101, 13112), sub_element_ver: 6063, attributes: (0, 2), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // CAN-CLUSTER-CONDITIONAL
    /*  485 */ ElementSpec {sub_elements: (3679, 3699), sub_element_ver: 3216, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (580, 583)}, // CAN-COMMUNICATION-CONNECTOR
    /*  486 */ ElementSpec {sub_elements: (15064, 15074), sub_element_ver: 8335, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (583, 586)}, // CAN-COMMUNICATION-CONTROLLER
    /*  487 */ ElementSpec {sub_elements: (20256, 20257), sub_element_ver: 7, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // CAN-COMMUNICATION-CONTROLLER-VARIANTS
    /*  488 */ ElementSpec {sub_elements: (19064, 19067), sub_element_ver: 107, attributes: (0, 2), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // CAN-COMMUNICATION-CONTROLLER-CONDITIONAL
    /*  489 */ ElementSpec {sub_elements: (17488, 17496), sub_element_ver: 8746, attributes: (0, 2), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // CAN-CONFIG, CAN-CONTROLLER-CONFIGURATION
    /*  490 */ ElementSpec {sub_elements: (8142, 8156), sub_element_ver: 6237, attributes: (0, 2), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // CAN-CONTROLLER-CONFIGURATION-REQUIREMENTS
    /*  491 */ ElementSpec {sub_elements: (17496, 17504), sub_element_ver: 8754, attributes: (0, 2), attributes_ver: 0, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // CAN-CONTROLLER-FD-ATTRIBUTES, CAN-FD-CONFIG
    /*  492 */ ElementSpec {sub_elements: (15074, 15084), sub_element_ver: 1684, attributes: (0, 2), attributes_ver: 120, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // CAN-CONTROLLER-FD-REQUIREMENTS
    /*  493 */ ElementSpec {sub_elements: (15084, 15094), sub_element_ver: 3664, attributes: (0, 2), attributes_ver: 301, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // CAN-CONTROLLER-XL-ATTRIBUTES, CAN-XL-CONFIG
    /*  494 */ ElementSpec {sub_elements: (5692, 5708), sub_element_ver: 3664, attributes: (0, 2), attributes_ver: 301, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // CAN-CONTROLLER-XL-REQUIREMENTS, CAN-XL-CONFIG-REQS
    /*  495 */ ElementSpec {sub_elements: (7273, 7284), sub_element_ver: 5080, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (586, 591)}, // CAN-FRAME
    /*  496 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 120, character_data: Some(102), mode: ContentMode::Characters, ref_info: (0, 0)}, // CAN-FRAME-RX-BEHAVIOR
    /*  497 */ ElementSpec {sub_elements: (2523, 2547), sub_element_ver: 2254, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (591, 593)}, // CAN-FRAME-TRIGGERING
    /*  498 */ ElementSpec {sub_elements: (20257, 20258), sub_element_ver: 7, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // ABSOLUTELY-SCHEDULED-TIMINGS
    /*  499 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 120, character_data: Some(104), mode: ContentMode::Characters, ref_info: (0, 0)}, // CAN-FRAME-TX-BEHAVIOR
    /*  500 */ ElementSpec {sub_elements: (18254, 18259), sub_element_ver: 253, attributes: (0, 2), attributes_ver: 134, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // CAN-GLOBAL-TIME-DOMAIN-PROPS
    /*  501 */ ElementSpec {sub_elements: (20258, 20259), sub_element_ver: 21, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // FUP-DATA-ID-LISTS
    /*  502 */ ElementSpec {sub_elements: (20259, 20260), sub_element_ver: 21, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // OFNS-DATA-ID-LISTS
    /*  503 */ ElementSpec {sub_elements: (777, 820), sub_element_ver: 841, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (593, 595)}, // CAN-NM-CLUSTER
    /*  504 */ ElementSpec {sub_elements: (18623, 18627), sub_element_ver: 9064, attributes: (0, 2), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // CAN-NM-CLUSTER-COUPLING
    /*  505 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (637, 643), attributes_ver: 9361, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // COUPLED-CLUSTER-REF
    /*  506 */ ElementSpec {sub_elements: (20260, 20261), sub_element_ver: 7, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // COUPLED-CLUSTER-REFS
    /*  507 */ ElementSpec {sub_elements: (20261, 20262), sub_element_ver: 7, attributes: (0, 2), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // CAN-NM-ECU
    /*  508 */ ElementSpec {sub_elements: (1584, 1612), sub_element_ver: 1589, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (595, 597)}, // CAN-NM-NODE
    /*  509 */ ElementSpec {sub_elements: (19560, 19562), sub_element_ver: 22, attributes: (0, 2), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // NM-RANGE-CONFIG
    /*  510 */ ElementSpec {sub_elements: (4627, 4642), sub_element_ver: 4129, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (597, 600)}, // CAN-PHYSICAL-CHANNEL
    /*  511 */ ElementSpec {sub_elements: (13112, 13123), sub_element_ver: 7908, attributes: (115, 118), attributes_ver: 846, character_data: None, mode: ContentMode::Sequence, ref_info: (600, 601)}, // CAN-TP-ADDRESS
    /*  512 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 22, character_data: Some(107), mode: ContentMode::Characters, ref_info: (0, 0)}, // ADDRESSING-FORMAT
    /*  513 */ ElementSpec {sub_elements: (13123, 13134), sub_element_ver: 7908, attributes: (115, 118), attributes_ver: 846, character_data: None, mode: ContentMode::Sequence, ref_info: (601, 602)}, // CAN-TP-CHANNEL
    /*  514 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 22, character_data: Some(109), mode: ContentMode::Characters, ref_info: (0, 0)}, // CHANNEL-MODE
    /*  515 */ ElementSpec {sub_elements: (6658, 6673), sub_element_ver: 5080, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (602, 607)}, // CAN-TP-CONFIG
    /*  516 */ ElementSpec {sub_elements: (20262, 20263), sub_element_ver: 7, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // TP-ADDRESSS
    /*  517 */ ElementSpec {sub_elements: (20263, 20264), sub_element_ver: 7, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // TP-CHANNELS
    /*  518 */ ElementSpec {sub_elements: (20264, 20265), sub_element_ver: 7, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // TP-CONNECTIONS
    /*  519 */ ElementSpec {sub_elements: (19562, 19564), sub_element_ver: 795, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // TP-ECUS
    /*  520 */ ElementSpec {sub_elements: (20265, 20266), sub_element_ver: 7, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // TP-NODES
    /*  521 */ ElementSpec {sub_elements: (2787, 2810), sub_element_ver: 2494, attributes: (0, 2), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // CAN-TP-CONNECTION
    /*  522 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (643, 649), attributes_ver: 9361, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // CAN-TP-CHANNEL-REF
    /*  523 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (649, 655), attributes_ver: 9361, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // RECEIVER-REF, TRANSMITTER-REF
    /*  524 */ ElementSpec {sub_elements: (20266, 20267), sub_element_ver: 7, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // RECEIVER-REFS
    /*  525 */ ElementSpec {sub_elements: (19067, 19070), sub_element_ver: 871, attributes: (0, 2), attributes_ver: 796, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // CAN-TP-ECU
    /*  526 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (655, 661), attributes_ver: 9391, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // ECU-INSTANCE-REF
    /*  527 */ ElementSpec {sub_elements: (4483, 4501), sub_element_ver: 4003, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (607, 608)}, // CAN-TP-NODE
    /*  528 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (661, 667), attributes_ver: 9361, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // COMMUNICATION-CONNECTOR-REF, CONNECTOR-REF
    /*  529 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (667, 673), attributes_ver: 9361, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // CAN-TP-ADDRESS-REF, MULTICAST-REF, TP-ADDRESS-REF
    /*  530 */ ElementSpec {sub_elements: (18627, 18631), sub_element_ver: 3664, attributes: (0, 2), attributes_ver: 301, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // CAN-XL-FRAME-TRIGGERING-PROPS
    /*  531 */ ElementSpec {sub_elements: (19070, 19073), sub_element_ver: 463, attributes: (0, 2), attributes_ver: 301, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // CAN-XL-NM-PROPS
    /*  532 */ ElementSpec {sub_elements: (5708, 5724), sub_element_ver: 3664, attributes: (115, 118), attributes_ver: 463, character_data: None, mode: ContentMode::Sequence, ref_info: (608, 614)}, // CAN-XL-PROPS
    /*  533 */ ElementSpec {sub_elements: (18631, 18635), sub_element_ver: 9133, attributes: (0, 2), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (614, 615)}, // FIGURE-CAPTION, FORMULA-CAPTION, TABLE-CAPTION
    /*  534 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 22, character_data: Some(112), mode: ContentMode::Characters, ref_info: (0, 0)}, // CATEGORY
    /*  535 */ ElementSpec {sub_elements: (11226, 11238), sub_element_ver: 7394, attributes: (115, 123), attributes_ver: 814, character_data: None, mode: ContentMode::Sequence, ref_info: (615, 616)}, // CHAPTER, SW-CALIBRATION-NOTES, SW-CARB-DOC, SW-DIAGNOSTICS-NOTES, SW-FEATURE-DEF, SW-FEATURE-DESC, SW-MAINTENANCE-NOTES, SW-TEST-DESC
    /*  536 */ ElementSpec {sub_elements: (3364, 3372), sub_element_ver: 3027, attributes: (115, 118), attributes_ver: 12, character_data: None, mode: ContentMode::Sequence, ref_info: (616, 618)}, // CHARGE-MANAGER-NEEDS
    /*  537 */ ElementSpec {sub_elements: (15094, 15104), sub_element_ver: 3376, attributes: (115, 118), attributes_ver: 1153, character_data: None, mode: ContentMode::Sequence, ref_info: (618, 619)}, // CHECKPOINT-TRANSITION
    /*  538 */ ElementSpec {sub_elements: (11238, 11250), sub_element_ver: 3816, attributes: (115, 118), attributes_ver: 192, character_data: None, mode: ContentMode::Sequence, ref_info: (619, 620)}, // CLASS-CONTENT-CONDITIONAL
    /*  539 */ ElementSpec {sub_elements: (19073, 19076), sub_element_ver: 192, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // ATTRIBUTE-TAILORINGS
    /*  540 */ ElementSpec {sub_elements: (20267, 20268), sub_element_ver: 21, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // SDG-TAILORINGS
    /*  541 */ ElementSpec {sub_elements: (20268, 20269), sub_element_ver: 21, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // CLASS-CONTENTS
    /*  542 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 488, character_data: Some(115), mode: ContentMode::Characters, ref_info: (0, 0)}, // CLIENT-CAPABILITY
    /*  543 */ ElementSpec {sub_elements: (17710, 17717), sub_element_ver: 8842, attributes: (0, 2), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // CLIENT-COM-SPEC
    /*  544 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (673, 679), attributes_ver: 9361, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // FIRST-OPERATION-REF, OPERATION-REF, SECOND-OPERATION-REF, TARGET-OPERATION-REF, TARGET-PROVIDED-OPERATION-REF, TARGET-REQUIRED-OPERATION-REF
    /*  545 */ ElementSpec {sub_elements: (19564, 19566), sub_element_ver: 120, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // TRANSFORMATION-COM-SPEC-PROPSS
    /*  546 */ ElementSpec {sub_elements: (13134, 13145), sub_element_ver: 2034, attributes: (115, 118), attributes_ver: 140, character_data: None, mode: ContentMode::Sequence, ref_info: (620, 621)}, // CLIENT-ID-DEFINITION
    /*  547 */ ElementSpec {sub_elements: (15104, 15114), sub_element_ver: 1317, attributes: (115, 118), attributes_ver: 140, character_data: None, mode: ContentMode::Sequence, ref_info: (621, 625)}, // CLIENT-ID-DEFINITION-SET
    /*  548 */ ElementSpec {sub_elements: (20269, 20270), sub_element_ver: 43, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // CLIENT-ID-DEFINITIONS
    /*  549 */ ElementSpec {sub_elements: (20270, 20271), sub_element_ver: 7, attributes: (0, 2), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // CLIENT-ID
    /*  550 */ ElementSpec {sub_elements: (19566, 19568), sub_element_ver: 120, attributes: (0, 2), attributes_ver: 120, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // CLIENT-ID-RANGE
    /*  551 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 77, character_data: Some(117), mode: ContentMode::Characters, ref_info: (0, 0)}, // CLIENT-INTENT
    /*  552 */ ElementSpec {sub_elements: (18259, 18264), sub_element_ver: 799, attributes: (0, 2), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // CLIENT-SERVER-ANNOTATION
    /*  553 */ ElementSpec {sub_elements: (19568, 19570), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 0, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // CLIENT-SERVER-APPLICATION-ERROR-MAPPING
    /*  554 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (679, 685), attributes_ver: 9319, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // FIRST-APPLICATION-ERROR-REF, SECOND-APPLICATION-ERROR-REF
    /*  555 */ ElementSpec {sub_elements: (19076, 19079), sub_element_ver: 22, attributes: (0, 2), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // CLIENT-SERVER-ARRAY-ELEMENT-MAPPING
    /*  556 */ ElementSpec {sub_elements: (19570, 19572), sub_element_ver: 22, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Choice, ref_info: (0, 0)}, // COMPLEX-TYPE-MAPPING
    /*  557 */ ElementSpec {sub_elements: (19572, 19574), sub_element_ver: 22, attributes: (0, 2), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // CLIENT-SERVER-ARRAY-TYPE-MAPPING
    /*  558 */ ElementSpec {sub_elements: (20271, 20272), sub_element_ver: 7, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // ARRAY-ELEMENT-MAPPINGS
    /*  559 */ ElementSpec {sub_elements: (5724, 5740), sub_element_ver: 4788, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (625, 634)}, // CLIENT-SERVER-INTERFACE
    /*  560 */ ElementSpec {sub_elements: (9214, 9227), sub_element_ver: 6670, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (634, 638)}, // CLIENT-SERVER-INTERFACE-MAPPING
    /*  561 */ ElementSpec {sub_elements: (20272, 20273), sub_element_ver: 0, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // ERROR-MAPPINGS
    /*  562 */ ElementSpec {sub_elements: (20273, 20274), sub_element_ver: 7, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // OPERATION-MAPPINGS
    /*  563 */ ElementSpec {sub_elements: (20170, 20171), sub_element_ver: 7, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // OPERATIONS
    /*  564 */ ElementSpec {sub_elements: (20274, 20275), sub_element_ver: 7, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // POSSIBLE-ERRORS
    /*  565 */ ElementSpec {sub_elements: (8156, 8170), sub_element_ver: 3816, attributes: (115, 118), attributes_ver: 192, character_data: None, mode: ContentMode::Sequence, ref_info: (638, 643)}, // CLIENT-SERVER-INTERFACE-TO-BSW-MODULE-ENTRY-BLUEPRINT-MAPPING
    /*  566 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (685, 691), attributes_ver: 9325, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // CLIENT-SERVER-INTERFACE-REF
    /*  567 */ ElementSpec {sub_elements: (20275, 20276), sub_element_ver: 21, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // OPERATION-MAPPINGS
    /*  568 */ ElementSpec {sub_elements: (20276, 20277), sub_element_ver: 21, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // PORT-DEFINED-ARGUMENT-BLUEPRINTS
    /*  569 */ ElementSpec {sub_elements: (6673, 6688), sub_element_ver: 5478, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (643, 647)}, // CLIENT-SERVER-OPERATION, CONNECT, READ, RECOVERY, REQUEST-RESULT, SHUTDOWN, START, STOP, WRITE
    /*  570 */ ElementSpec {sub_elements: (20277, 20278), sub_element_ver: 7, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // ARGUMENTS
    /*  571 */ ElementSpec {sub_elements: (18635, 18639), sub_element_ver: 192, attributes: (0, 2), attributes_ver: 134, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // CLIENT-SERVER-OPERATION-BLUEPRINT-MAPPING
    /*  572 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (673, 679), attributes_ver: 9325, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // CLIENT-SERVER-OPERATION-REF
    /*  573 */ ElementSpec {sub_elements: (20278, 20279), sub_element_ver: 6, attributes: (0, 2), attributes_ver: 301, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // CLIENT-SERVER-OPERATION-COM-PROPS
    /*  574 */ ElementSpec {sub_elements: (18639, 18643), sub_element_ver: 407, attributes: (0, 2), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // CLIENT-SERVER-OPERATION-MAPPING
    /*  575 */ ElementSpec {sub_elements: (20279, 20280), sub_element_ver: 7, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // ARGUMENT-MAPPINGS, DATA-MAPPINGS
    /*  576 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (691, 697), attributes_ver: 9325, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // FIRST-TO-SECOND-DATA-TRANSFORMATION-REF
    /*  577 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (697, 703), attributes_ver: 1187, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // AP-APPLICATION-ERROR-REF, POSSIBLE-AP-ERROR-REF
    /*  578 */ ElementSpec {sub_elements: (20280, 20281), sub_element_ver: 9, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // POSSIBLE-AP-ERROR-REFS
    /*  579 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (703, 709), attributes_ver: 1187, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // POSSIBLE-AP-ERROR-SET-REF
    /*  580 */ ElementSpec {sub_elements: (20281, 20282), sub_element_ver: 9, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // POSSIBLE-AP-ERROR-SET-REFS
    /*  581 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (679, 685), attributes_ver: 9361, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // POSSIBLE-ERROR-REF
    /*  582 */ ElementSpec {sub_elements: (20282, 20283), sub_element_ver: 7, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // POSSIBLE-ERROR-REFS
    /*  583 */ ElementSpec {sub_elements: (19574, 19576), sub_element_ver: 22, attributes: (0, 2), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // CLIENT-SERVER-PRIMITIVE-TYPE-MAPPING
    /*  584 */ ElementSpec {sub_elements: (18264, 18269), sub_element_ver: 880, attributes: (0, 2), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // CLIENT-SERVER-RECORD-ELEMENT-MAPPING
    /*  585 */ ElementSpec {sub_elements: (19576, 19578), sub_element_ver: 22, attributes: (0, 2), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // CLIENT-SERVER-RECORD-TYPE-MAPPING
    /*  586 */ ElementSpec {sub_elements: (20283, 20284), sub_element_ver: 7, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // RECORD-ELEMENT-MAPPINGS
    /*  587 */ ElementSpec {sub_elements: (5740, 5756), sub_element_ver: 4872, attributes: (0, 2), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // CLIENT-SERVER-TO-SIGNAL-GROUP-MAPPING
    /*  588 */ ElementSpec {sub_elements: (19570, 19572), sub_element_ver: 22, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // COMPOSITE-TYPE-MAPPINGS
    /*  589 */ ElementSpec {sub_elements: (20284, 20285), sub_element_ver: 7, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // PRIMITIVE-TYPE-MAPPINGS
    /*  590 */ ElementSpec {sub_elements: (11250, 11262), sub_element_ver: 5146, attributes: (0, 2), attributes_ver: 0, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // CLIENT-SERVER-TO-SIGNAL-MAPPING
    /*  591 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (709, 715), attributes_ver: 9319, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // SERIALIZATION-TECHNOLOGY-REF, SERIALIZER-REF
    /*  592 */ ElementSpec {sub_elements: (13145, 13156), sub_element_ver: 3027, attributes: (115, 118), attributes_ver: 12, character_data: None, mode: ContentMode::Sequence, ref_info: (647, 653)}, // CM-MODULE-INSTANTIATION
    /*  593 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (715, 721), attributes_ver: 425, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // GRANT-REF
    /*  594 */ ElementSpec {sub_elements: (20285, 20286), sub_element_ver: 12, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // GRANT-REFS
    /*  595 */ ElementSpec {sub_elements: (15114, 15124), sub_element_ver: 3153, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (653, 654)}, // CODE
    /*  596 */ ElementSpec {sub_elements: (20135, 20136), sub_element_ver: 7, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // ARTIFACT-DESCRIPTORS
    /*  597 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (721, 727), attributes_ver: 9385, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // CALLBACK-HEADER-REF
    /*  598 */ ElementSpec {sub_elements: (20286, 20287), sub_element_ver: 354, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // CALLBACK-HEADER-REFS
    /*  599 */ ElementSpec {sub_elements: (5756, 5772), sub_element_ver: 4888, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (654, 658)}, // COLLECTION
    /*  600 */ ElementSpec {sub_elements: (20287, 20288), sub_element_ver: 0, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // COLLECTED-INSTANCE-IREFS
    /*  601 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (451, 457), attributes_ver: 9361, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // ELEMENT-REF, IDENTIFIABLE-REF
    /*  602 */ ElementSpec {sub_elements: (20288, 20289), sub_element_ver: 7, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // ELEMENT-REFS
    /*  603 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (451, 457), attributes_ver: 9319, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // SOURCE-ELEMENT-REF
    /*  604 */ ElementSpec {sub_elements: (20289, 20290), sub_element_ver: 0, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // SOURCE-ELEMENT-REFS
    /*  605 */ ElementSpec {sub_elements: (20290, 20291), sub_element_ver: 0, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // SOURCE-INSTANCE-IREFS
    /*  606 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (123, 131), attributes_ver: 814, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // COLSPEC
    /*  607 */ ElementSpec {sub_elements: (13156, 13167), sub_element_ver: 1927, attributes: (115, 118), attributes_ver: 77, character_data: None, mode: ContentMode::Sequence, ref_info: (658, 665)}, // COM-CERTIFICATE-TO-CRYPTO-CERTIFICATE-MAPPING
    /*  608 */ ElementSpec {sub_elements: (9227, 9240), sub_element_ver: 6251, attributes: (115, 118), attributes_ver: 48, character_data: None, mode: ContentMode::Sequence, ref_info: (665, 673)}, // COM-EVENT-GRANT
    /*  609 */ ElementSpec {sub_elements: (9240, 9253), sub_element_ver: 6265, attributes: (115, 118), attributes_ver: 48, character_data: None, mode: ContentMode::Sequence, ref_info: (673, 679)}, // COM-EVENT-GRANT-DESIGN
    /*  610 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (727, 733), attributes_ver: 48, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // DESIGN-REF
    /*  611 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (733, 739), attributes_ver: 48, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // SERVICE-DEPLOYMENT-REF
    /*  612 */ ElementSpec {sub_elements: (8170, 8184), sub_element_ver: 6251, attributes: (115, 118), attributes_ver: 48, character_data: None, mode: ContentMode::Sequence, ref_info: (679, 687)}, // COM-FIELD-GRANT
    /*  613 */ ElementSpec {sub_elements: (8184, 8198), sub_element_ver: 6265, attributes: (115, 118), attributes_ver: 48, character_data: None, mode: ContentMode::Sequence, ref_info: (687, 693)}, // COM-FIELD-GRANT-DESIGN
    /*  614 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (739, 745), attributes_ver: 48, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // DESIGN-REF
    /*  615 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (745, 751), attributes_ver: 48, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // SERVICE-DEPLOYMENT-REF
    /*  616 */ ElementSpec {sub_elements: (13167, 13178), sub_element_ver: 1784, attributes: (115, 118), attributes_ver: 48, character_data: None, mode: ContentMode::Sequence, ref_info: (693, 700)}, // COM-FIND-SERVICE-GRANT
    /*  617 */ ElementSpec {sub_elements: (13178, 13189), sub_element_ver: 1784, attributes: (115, 118), attributes_ver: 48, character_data: None, mode: ContentMode::Sequence, ref_info: (700, 705)}, // COM-FIND-SERVICE-GRANT-DESIGN
    /*  618 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (751, 757), attributes_ver: 48, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // DESIGN-REF
    /*  619 */ ElementSpec {sub_elements: (20291, 20292), sub_element_ver: 6, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // REMOTE-SUBJECT-REFS
    /*  620 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (757, 763), attributes_ver: 500, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // REMOTE-SUBJECT-REF
    /*  621 */ ElementSpec {sub_elements: (20291, 20292), sub_element_ver: 19, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // REMOTE-SUBJECT-REFS
    /*  622 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (763, 769), attributes_ver: 48, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // SERVICE-INSTANCE-REF
    /*  623 */ ElementSpec {sub_elements: (13189, 13200), sub_element_ver: 1927, attributes: (115, 118), attributes_ver: 77, character_data: None, mode: ContentMode::Sequence, ref_info: (705, 712)}, // COM-KEY-TO-CRYPTO-KEY-SLOT-MAPPING
    /*  624 */ ElementSpec {sub_elements: (11262, 11274), sub_element_ver: 3531, attributes: (115, 118), attributes_ver: 9, character_data: None, mode: ContentMode::Sequence, ref_info: (712, 713)}, // COM-MANAGEMENT-MAPPING
    /*  625 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (769, 775), attributes_ver: 1187, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // COM-MANAGEMENT-GROUP-REF
    /*  626 */ ElementSpec {sub_elements: (20292, 20293), sub_element_ver: 9, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // COM-MANAGEMENT-GROUP-REFS
    /*  627 */ ElementSpec {sub_elements: (20293, 20294), sub_element_ver: 9, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // COM-MANAGEMENT-PORT-GROUP-IREFS
    /*  628 */ ElementSpec {sub_elements: (9253, 9266), sub_element_ver: 6251, attributes: (115, 118), attributes_ver: 48, character_data: None, mode: ContentMode::Sequence, ref_info: (713, 721)}, // COM-METHOD-GRANT
    /*  629 */ ElementSpec {sub_elements: (9266, 9279), sub_element_ver: 6265, attributes: (115, 118), attributes_ver: 48, character_data: None, mode: ContentMode::Sequence, ref_info: (721, 727)}, // COM-METHOD-GRANT-DESIGN
    /*  630 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (775, 781), attributes_ver: 48, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // DESIGN-REF
    /*  631 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (781, 787), attributes_ver: 48, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // SERVICE-DEPLOYMENT-REF
    /*  632 */ ElementSpec {sub_elements: (16806, 16815), sub_element_ver: 841, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (727, 729)}, // COM-MGR-USER-NEEDS
    /*  633 */ ElementSpec {sub_elements: (13200, 13211), sub_element_ver: 1784, attributes: (115, 118), attributes_ver: 48, character_data: None, mode: ContentMode::Sequence, ref_info: (729, 736)}, // COM-OFFER-SERVICE-GRANT
    /*  634 */ ElementSpec {sub_elements: (13211, 13222), sub_element_ver: 1784, attributes: (115, 118), attributes_ver: 48, character_data: None, mode: ContentMode::Sequence, ref_info: (736, 741)}, // COM-OFFER-SERVICE-GRANT-DESIGN
    /*  635 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (787, 793), attributes_ver: 48, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // DESIGN-REF
    /*  636 */ ElementSpec {sub_elements: (13222, 13233), sub_element_ver: 1927, attributes: (115, 118), attributes_ver: 77, character_data: None, mode: ContentMode::Sequence, ref_info: (741, 748)}, // COM-SEC-OC-TO-CRYPTO-KEY-SLOT-MAPPING
    /*  637 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (793, 799), attributes_ver: 500, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // SERVICE-ELEMENT-SECURE-COM-CONFIG-REF
    /*  638 */ ElementSpec {sub_elements: (9279, 9292), sub_element_ver: 1514, attributes: (115, 118), attributes_ver: 230, character_data: None, mode: ContentMode::Sequence, ref_info: (748, 756)}, // COM-TRIGGER-GRANT
    /*  639 */ ElementSpec {sub_elements: (9292, 9305), sub_element_ver: 6683, attributes: (115, 118), attributes_ver: 81, character_data: None, mode: ContentMode::Sequence, ref_info: (756, 762)}, // COM-TRIGGER-GRANT-DESIGN
    /*  640 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (799, 805), attributes_ver: 230, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // DESIGN-REF
    /*  641 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (733, 739), attributes_ver: 230, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // SERVICE-DEPLOYMENT-REF
    /*  642 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 9223, character_data: Some(128), mode: ContentMode::Characters, ref_info: (0, 0)}, // OPTION-KIND
    /*  643 */ ElementSpec {sub_elements: (18269, 18274), sub_element_ver: 804, attributes: (0, 2), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // COMMON-SIGNAL-PATH
    /*  644 */ ElementSpec {sub_elements: (20294, 20295), sub_element_ver: 7, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // OPERATIONS
    /*  645 */ ElementSpec {sub_elements: (20295, 20296), sub_element_ver: 7, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // SIGNALS
    /*  646 */ ElementSpec {sub_elements: (20296, 20297), sub_element_ver: 21, attributes: (0, 2), attributes_ver: 134, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // COMMUNICATION-BUFFER-LOCKING
    /*  647 */ ElementSpec {sub_elements: (17913, 17919), sub_element_ver: 1830, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // PHYSICAL-CHANNELS
    /*  648 */ ElementSpec {sub_elements: (19079, 19082), sub_element_ver: 22, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // ECU-COMM-PORT-INSTANCES
    /*  649 */ ElementSpec {sub_elements: (20297, 20298), sub_element_ver: 20, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // PNC-FILTER-ARRAY-MASKS
    /*  650 */ ElementSpec {sub_elements: (19578, 19580), sub_element_ver: 22, attributes: (0, 2), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // COMMUNICATION-CONNECTOR-REF-CONDITIONAL
    /*  651 */ ElementSpec {sub_elements: (19580, 19582), sub_element_ver: 22, attributes: (0, 2), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // COMMUNICATION-CONTROLLER-MAPPING
    /*  652 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 22, character_data: Some(132), mode: ContentMode::Characters, ref_info: (0, 0)}, // COMMUNICATION-DIRECTION, DIRECTION
    /*  653 */ ElementSpec {sub_elements: (5772, 5788), sub_element_ver: 4904, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (762, 763)}, // COMPILER
    /*  654 */ ElementSpec {sub_elements: (3343, 3364), sub_element_ver: 3006, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (763, 773)}, // COMPLEX-DEVICE-DRIVER-SW-COMPONENT-TYPE
    /*  655 */ ElementSpec {sub_elements: (18274, 18279), sub_element_ver: 2170, attributes: (0, 2), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // COMPONENT-CLUSTERING
    /*  656 */ ElementSpec {sub_elements: (20298, 20299), sub_element_ver: 7, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // CLUSTERED-COMPONENT-IREFS
    /*  657 */ ElementSpec {sub_elements: (19582, 19584), sub_element_ver: 22, attributes: (0, 2), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // COMPONENT-IREF, SW-COMPONENT-PROTOTYPE-IREF
    /*  658 */ ElementSpec {sub_elements: (19082, 19085), sub_element_ver: 22, attributes: (0, 2), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // CLUSTERED-COMPONENT-IREF, COMPONENT-IREF, SEPARATED-COMPONENT-IREF, SW-COMPONENT-IREF, SW-COMPONENT-PROTOTYPE-IREF
    /*  659 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (805, 811), attributes_ver: 9361, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // CONTEXT-COMPOSITION-REF
    /*  660 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (811, 817), attributes_ver: 9361, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // CONTEXT-COMPONENT-REF, CONTEXT-REF, TARGET-COMPONENT-REF
    /*  661 */ ElementSpec {sub_elements: (18279, 18284), sub_element_ver: 9059, attributes: (0, 2), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // COMPONENT-SEPARATION
    /*  662 */ ElementSpec {sub_elements: (20299, 20300), sub_element_ver: 7, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // SEPARATED-COMPONENT-IREFS
    /*  663 */ ElementSpec {sub_elements: (5788, 5804), sub_element_ver: 4147, attributes: (115, 118), attributes_ver: 1805, character_data: None, mode: ContentMode::Sequence, ref_info: (773, 782)}, // COMPOSITE-INTERFACE
    /*  664 */ ElementSpec {sub_elements: (20170, 20171), sub_element_ver: 63, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // COMMANDS
    /*  665 */ ElementSpec {sub_elements: (20171, 20172), sub_element_ver: 63, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // INDICATIONS
    /*  666 */ ElementSpec {sub_elements: (19584, 19586), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 0, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // COMPOSITE-NETWORK-REPRESENTATION
    /*  667 */ ElementSpec {sub_elements: (17919, 17925), sub_element_ver: 8946, attributes: (0, 2), attributes_ver: 134, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // COMPOSITE-RULE-BASED-VALUE-SPECIFICATION
    /*  668 */ ElementSpec {sub_elements: (19085, 19088), sub_element_ver: 7215, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // ARGUMENTS
    /*  669 */ ElementSpec {sub_elements: (11119, 11121), sub_element_ver: 81, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // COMPOUND-PRIMITIVE-ARGUMENTS
    /*  670 */ ElementSpec {sub_elements: (19088, 19091), sub_element_ver: 9181, attributes: (0, 2), attributes_ver: 2200, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // COMPOSITION-DATA-PROTOTYPE-REF
    /*  671 */ ElementSpec {sub_elements: (11274, 11286), sub_element_ver: 2731, attributes: (115, 118), attributes_ver: 909, character_data: None, mode: ContentMode::Sequence, ref_info: (782, 788)}, // COMPOSITION-P-PORT-TO-EXECUTABLE-P-PORT-MAPPING
    /*  672 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (175, 181), attributes_ver: 1642, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // PROCESS-DESIGN-REF
    /*  673 */ ElementSpec {sub_elements: (11286, 11298), sub_element_ver: 2731, attributes: (115, 118), attributes_ver: 909, character_data: None, mode: ContentMode::Sequence, ref_info: (788, 794)}, // COMPOSITION-R-PORT-TO-EXECUTABLE-R-PORT-MAPPING
    /*  674 */ ElementSpec {sub_elements: (2547, 2571), sub_element_ver: 2278, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (794, 803)}, // COMPOSITION-SW-COMPONENT-TYPE
    /*  675 */ ElementSpec {sub_elements: (20300, 20301), sub_element_ver: 7, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // COMPONENTS
    /*  676 */ ElementSpec {sub_elements: (19091, 19094), sub_element_ver: 31, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // CONNECTORS
    /*  677 */ ElementSpec {sub_elements: (20301, 20302), sub_element_ver: 0, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // INSTANTIATION-RTE-EVENT-PROPSS
    /*  678 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (817, 823), attributes_ver: 230, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // PHYSICAL-DIMENSION-MAPPING-REF
    /*  679 */ ElementSpec {sub_elements: (19586, 19588), sub_element_ver: 77, attributes: (0, 2), attributes_ver: 77, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // COMPOSITION-SW-COMPONENT-TYPE-REF-CONDITIONAL
    /*  680 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (823, 829), attributes_ver: 500, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // COMPOSITION-SW-COMPONENT-TYPE-REF
    /*  681 */ ElementSpec {sub_elements: (19094, 19097), sub_element_ver: 9184, attributes: (0, 2), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // COMPU-INTERNAL-TO-PHYS, COMPU-PHYS-TO-INTERNAL
    /*  682 */ ElementSpec {sub_elements: (19097, 19100), sub_element_ver: 22, attributes: (0, 2), attributes_ver: 22, character_data: None, mode: ContentMode::Choice, ref_info: (0, 0)}, // COMPU-CONST, COMPU-DEFAULT-VALUE, COMPU-INVERSE-VALUE
    /*  683 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (3831, 3834), attributes_ver: 22, character_data: Some(982), mode: ContentMode::Mixed, ref_info: (0, 0)}, // SW-DATA-DEPENDENCY-FORMULA
    /*  684 */ ElementSpec {sub_elements: (6688, 6703), sub_element_ver: 5493, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (803, 809)}, // COMPU-METHOD
    /*  685 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (829, 835), attributes_ver: 9361, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // UNIT-REF
    /*  686 */ ElementSpec {sub_elements: (20302, 20303), sub_element_ver: 7, attributes: (0, 2), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // COMPU-DENOMINATOR, COMPU-NUMERATOR
    /*  687 */ ElementSpec {sub_elements: (19588, 19590), sub_element_ver: 22, attributes: (0, 2), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // COMPU-RATIONAL-COEFFS
    /*  688 */ ElementSpec {sub_elements: (15124, 15134), sub_element_ver: 8345, attributes: (0, 2), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // BUFFER-COMPUTATION, COMPU-SCALE
    /*  689 */ ElementSpec {sub_elements: (20303, 20304), sub_element_ver: 7, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // COMPU-SCALES
    /*  690 */ ElementSpec {sub_elements: (8198, 8212), sub_element_ver: 3816, attributes: (115, 118), attributes_ver: 192, character_data: None, mode: ContentMode::Sequence, ref_info: (809, 814)}, // CONCRETE-CLASS-TAILORING
    /*  691 */ ElementSpec {sub_elements: (5804, 5820), sub_element_ver: 4920, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (814, 818)}, // CONCRETE-PATTERN-EVENT-TRIGGERING
    /*  692 */ ElementSpec {sub_elements: (20304, 20305), sub_element_ver: 7, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // MAXIMUM-DISTANCES, MINIMUM-DISTANCES, OFFSETS
    /*  693 */ ElementSpec {sub_elements: (18229, 18231), sub_element_ver: 386, attributes: (131, 134), attributes_ver: 22, character_data: Some(982), mode: ContentMode::Mixed, ref_info: (0, 0)}, // CONDITION-ACCESS, SW-SYSCOND
    /*  694 */ ElementSpec {sub_elements: (11298, 11310), sub_element_ver: 7406, attributes: (0, 2), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // CONDITIONAL-CHANGE-NAD
    /*  695 */ ElementSpec {sub_elements: (18643, 18647), sub_element_ver: 799, attributes: (0, 2), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // CONFIDENCE-INTERVAL
    /*  696 */ ElementSpec {sub_elements: (6703, 6718), sub_element_ver: 3493, attributes: (115, 118), attributes_ver: 0, character_data: None, mode: ContentMode::Sequence, ref_info: (818, 821)}, // CONSISTENCY-NEEDS
    /*  697 */ ElementSpec {sub_elements: (15134, 15144), sub_element_ver: 2765, attributes: (115, 118), attributes_ver: 0, character_data: None, mode: ContentMode::Sequence, ref_info: (821, 825)}, // CONSISTENCY-NEEDS-BLUEPRINT-SET
    /*  698 */ ElementSpec {sub_elements: (20305, 20306), sub_element_ver: 0, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // DPG-DOES-NOT-REQUIRE-COHERENCYS, DPG-REQUIRES-COHERENCYS
    /*  699 */ ElementSpec {sub_elements: (20306, 20307), sub_element_ver: 0, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // REG-DOES-NOT-REQUIRE-STABILITYS, REG-REQUIRES-STABILITYS
    /*  700 */ ElementSpec {sub_elements: (19100, 19103), sub_element_ver: 22, attributes: (0, 2), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // CONSTANT-REFERENCE
    /*  701 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (835, 841), attributes_ver: 9361, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // APPL-CONSTANT-REF, CONSTANT-REF, IMPL-CONSTANT-REF
    /*  702 */ ElementSpec {sub_elements: (15144, 15154), sub_element_ver: 884, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (825, 829)}, // CONSTANT-SPECIFICATION
    /*  703 */ ElementSpec {sub_elements: (19590, 19592), sub_element_ver: 22, attributes: (0, 2), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // CONSTANT-SPECIFICATION-MAPPING
    /*  704 */ ElementSpec {sub_elements: (15154, 15164), sub_element_ver: 884, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (829, 833)}, // CONSTANT-SPECIFICATION-MAPPING-SET
    /*  705 */ ElementSpec {sub_elements: (20307, 20308), sub_element_ver: 7, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // MAPPINGS
    /*  706 */ ElementSpec {sub_elements: (11310, 11322), sub_element_ver: 3816, attributes: (115, 118), attributes_ver: 192, character_data: None, mode: ContentMode::Sequence, ref_info: (833, 838)}, // CONSTRAINT-TAILORING
    /*  707 */ ElementSpec {sub_elements: (3955, 3974), sub_element_ver: 3512, attributes: (115, 118), attributes_ver: 0, character_data: None, mode: ContentMode::Sequence, ref_info: (838, 839)}, // CONSUMED-EVENT-GROUP
    /*  708 */ ElementSpec {sub_elements: (20308, 20309), sub_element_ver: 64, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // SD-CLIENT-TIMER-CONFIGS
    /*  709 */ ElementSpec {sub_elements: (13233, 13244), sub_element_ver: 1642, attributes: (115, 118), attributes_ver: 909, character_data: None, mode: ContentMode::Sequence, ref_info: (839, 843)}, // CONSUMED-PROVIDED-SERVICE-INSTANCE-GROUP
    /*  710 */ ElementSpec {sub_elements: (20309, 20310), sub_element_ver: 64, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // CONSUMED-SERVICE-INSTANCES
    /*  711 */ ElementSpec {sub_elements: (20310, 20311), sub_element_ver: 64, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // PROVIDED-SERVICE-INSTANCES
    /*  712 */ ElementSpec {sub_elements: (19592, 19594), sub_element_ver: 64, attributes: (0, 2), attributes_ver: 64, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // CONSUMED-PROVIDED-SERVICE-INSTANCE-GROUP-REF-CONDITIONAL
    /*  713 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (841, 847), attributes_ver: 1642, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // CONSUMED-PROVIDED-SERVICE-INSTANCE-GROUP-REF
    /*  714 */ ElementSpec {sub_elements: (1612, 1640), sub_element_ver: 1617, attributes: (115, 118), attributes_ver: 0, character_data: None, mode: ContentMode::Sequence, ref_info: (843, 845)}, // CONSUMED-SERVICE-INSTANCE
    /*  715 */ ElementSpec {sub_elements: (20311, 20312), sub_element_ver: 16, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // ALLOWED-SERVICE-CONSUMERS, ALLOWED-SERVICE-PROVIDERS
    /*  716 */ ElementSpec {sub_elements: (20312, 20313), sub_element_ver: 64, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // BLACKLISTED-VERSIONS
    /*  717 */ ElementSpec {sub_elements: (20312, 20313), sub_element_ver: 6, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // BLOCKLISTED-VERSIONS
    /*  718 */ ElementSpec {sub_elements: (20313, 20314), sub_element_ver: 0, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // CONSUMED-EVENT-GROUPS
    /*  719 */ ElementSpec {sub_elements: (20314, 20315), sub_element_ver: 20, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // EVENT-MULTICAST-SUBSCRIPTION-ADDRESSS, REMOTE-MULTICAST-SUBSCRIPTION-ADDRESSS
    /*  720 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (847, 853), attributes_ver: 9319, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // PROVIDED-SERVICE-INSTANCE-REF
    /*  721 */ ElementSpec {sub_elements: (19594, 19596), sub_element_ver: 64, attributes: (0, 2), attributes_ver: 64, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // CONSUMED-SERVICE-INSTANCE-REF-CONDITIONAL
    /*  722 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (853, 859), attributes_ver: 1642, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // CONSUMED-SERVICE-INSTANCE-REF
    /*  723 */ ElementSpec {sub_elements: (20315, 20316), sub_element_ver: 64, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // SD-CLIENT-TIMER-CONFIGS
    /*  724 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 120, character_data: Some(140), mode: ContentMode::Characters, ref_info: (0, 0)}, // COLLECTION-SEMANTICS
    /*  725 */ ElementSpec {sub_elements: (16815, 16824), sub_element_ver: 8612, attributes: (0, 2), attributes_ver: 120, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // CONTAINED-I-PDU-PROPS
    /*  726 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (859, 865), attributes_ver: 4093, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // CONTAINED-PDU-TRIGGERING-REF
    /*  727 */ ElementSpec {sub_elements: (2810, 2833), sub_element_ver: 2517, attributes: (115, 118), attributes_ver: 140, character_data: None, mode: ContentMode::Sequence, ref_info: (845, 854)}, // CONTAINER-I-PDU
    /*  728 */ ElementSpec {sub_elements: (20316, 20317), sub_element_ver: 20, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // CONTAINED-I-PDU-TRIGGERING-PROPSS
    /*  729 */ ElementSpec {sub_elements: (20317, 20318), sub_element_ver: 43, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // CONTAINED-PDU-TRIGGERING-REFS
    /*  730 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 120, character_data: Some(141), mode: ContentMode::Characters, ref_info: (0, 0)}, // HEADER-TYPE
    /*  731 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 120, character_data: Some(142), mode: ContentMode::Characters, ref_info: (0, 0)}, // CONTAINER-TRIGGER
    /*  732 */ ElementSpec {sub_elements: (5820, 5836), sub_element_ver: 4936, attributes: (115, 118), attributes_ver: 0, character_data: None, mode: ContentMode::Sequence, ref_info: (854, 858)}, // COUPLING-ELEMENT
    /*  733 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (865, 871), attributes_ver: 9319, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // COMMUNICATION-CLUSTER-REF
    /*  734 */ ElementSpec {sub_elements: (20318, 20319), sub_element_ver: 16, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // COUPLING-ELEMENT-DETAILS
    /*  735 */ ElementSpec {sub_elements: (20319, 20320), sub_element_ver: 0, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // COUPLING-PORTS
    /*  736 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (655, 661), attributes_ver: 9319, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // ECU-INSTANCE-REF
    /*  737 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 0, character_data: Some(143), mode: ContentMode::Characters, ref_info: (0, 0)}, // COUPLING-TYPE
    /*  738 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (871, 877), attributes_ver: 3664, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // FIREWALL-RULE-REF, STATE-DEPENDENT-FIREWALL-REF
    /*  739 */ ElementSpec {sub_elements: (20320, 20321), sub_element_ver: 6, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // FIREWALL-RULE-REFS
    /*  740 */ ElementSpec {sub_elements: (8212, 8226), sub_element_ver: 1514, attributes: (115, 118), attributes_ver: 230, character_data: None, mode: ContentMode::Sequence, ref_info: (858, 860)}, // COUPLING-ELEMENT-SWITCH-DETAILS
    /*  741 */ ElementSpec {sub_elements: (20321, 20322), sub_element_ver: 16, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // FLOW-METERINGS
    /*  742 */ ElementSpec {sub_elements: (20322, 20323), sub_element_ver: 16, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // STREAM-FILTERS
    /*  743 */ ElementSpec {sub_elements: (20323, 20324), sub_element_ver: 16, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // STREAM-GATES
    /*  744 */ ElementSpec {sub_elements: (20324, 20325), sub_element_ver: 16, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // SWITCH-STREAM-IDENTIFICATIONS
    /*  745 */ ElementSpec {sub_elements: (20325, 20326), sub_element_ver: 16, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // TRAFFIC-SHAPER-GROUPS
    /*  746 */ ElementSpec {sub_elements: (2348, 2373), sub_element_ver: 2079, attributes: (115, 118), attributes_ver: 0, character_data: None, mode: ContentMode::Sequence, ref_info: (860, 861)}, // COUPLING-PORT
    /*  747 */ ElementSpec {sub_elements: (13244, 13255), sub_element_ver: 1502, attributes: (115, 118), attributes_ver: 230, character_data: None, mode: ContentMode::Sequence, ref_info: (861, 863)}, // COUPLING-PORT-ASYNCHRONOUS-TRAFFIC-SHAPER
    /*  748 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (877, 883), attributes_ver: 230, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // TRAFFIC-SHAPER-GROUP-REF
    /*  749 */ ElementSpec {sub_elements: (17925, 17931), sub_element_ver: 8952, attributes: (0, 2), attributes_ver: 0, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // COUPLING-PORT-CONNECTION
    /*  750 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (883, 889), attributes_ver: 9319, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // FIRST-PORT-REF, SECOND-PORT-REF
    /*  751 */ ElementSpec {sub_elements: (20326, 20327), sub_element_ver: 19, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // NODE-PORTS
    /*  752 */ ElementSpec {sub_elements: (13255, 13266), sub_element_ver: 1502, attributes: (115, 118), attributes_ver: 230, character_data: None, mode: ContentMode::Sequence, ref_info: (863, 865)}, // COUPLING-PORT-CREDIT-BASED-SHAPER
    /*  753 */ ElementSpec {sub_elements: (16824, 16833), sub_element_ver: 8621, attributes: (0, 2), attributes_ver: 120, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // COUPLING-PORT-DETAILS
    /*  754 */ ElementSpec {sub_elements: (19103, 19106), sub_element_ver: 140, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // COUPLING-PORT-STRUCTURAL-ELEMENTS
    /*  755 */ ElementSpec {sub_elements: (20327, 20328), sub_element_ver: 43, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // ETHERNET-PRIORITY-REGENERATIONS
    /*  756 */ ElementSpec {sub_elements: (20328, 20329), sub_element_ver: 43, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // ETHERNET-TRAFFIC-CLASS-ASSIGNMENTS
    /*  757 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (889, 895), attributes_ver: 9331, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // LAST-EGRESS-SCHEDULER-REF
    /*  758 */ ElementSpec {sub_elements: (20329, 20330), sub_element_ver: 21, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // RATE-POLICYS
    /*  759 */ ElementSpec {sub_elements: (20330, 20331), sub_element_ver: 12, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // VLAN-TRANSLATION-TABLES
    /*  760 */ ElementSpec {sub_elements: (15164, 15174), sub_element_ver: 3027, attributes: (115, 118), attributes_ver: 12, character_data: None, mode: ContentMode::Sequence, ref_info: (865, 867)}, // COUPLING-PORT-ENHANCED-TRAFFIC-SHAPER
    /*  761 */ ElementSpec {sub_elements: (11322, 11334), sub_element_ver: 7418, attributes: (115, 118), attributes_ver: 140, character_data: None, mode: ContentMode::Sequence, ref_info: (867, 869)}, // COUPLING-PORT-FIFO
    /*  762 */ ElementSpec {sub_elements: (20331, 20332), sub_element_ver: 43, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // ASSIGNED-TRAFFIC-CLASSS
    /*  763 */ ElementSpec {sub_elements: (19106, 19109), sub_element_ver: 309, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Choice, ref_info: (0, 0)}, // SHAPER
    /*  764 */ ElementSpec {sub_elements: (20332, 20333), sub_element_ver: 12, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // MAC-ADDRESS-VLAN-ASSIGNMENTS
    /*  765 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (895, 901), attributes_ver: 9319, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // MAC-MULTICAST-ADDRESS-REF, MAC-MULTICAST-GROUP-REF
    /*  766 */ ElementSpec {sub_elements: (20333, 20334), sub_element_ver: 0, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // MAC-MULTICAST-ADDRESS-REFS
    /*  767 */ ElementSpec {sub_elements: (20334, 20335), sub_element_ver: 6, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // MAC-SEC-PROPSS
    /*  768 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (901, 907), attributes_ver: 9325, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // PNC-MAPPING-REF
    /*  769 */ ElementSpec {sub_elements: (20335, 20336), sub_element_ver: 21, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // PNC-MAPPING-REFS
    /*  770 */ ElementSpec {sub_elements: (18284, 18289), sub_element_ver: 192, attributes: (0, 2), attributes_ver: 134, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // COUPLING-PORT-RATE-POLICY
    /*  771 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 134, character_data: Some(147), mode: ContentMode::Characters, ref_info: (0, 0)}, // POLICY-ACTION
    /*  772 */ ElementSpec {sub_elements: (20336, 20337), sub_element_ver: 21, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // V-LAN-REFS
    /*  773 */ ElementSpec {sub_elements: (19596, 19598), sub_element_ver: 77, attributes: (0, 2), attributes_ver: 77, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // COUPLING-PORT-REF-CONDITIONAL
    /*  774 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (883, 889), attributes_ver: 500, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // COUPLING-PORT-REF
    /*  775 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 134, character_data: Some(148), mode: ContentMode::Characters, ref_info: (0, 0)}, // COUPLING-PORT-ROLE
    /*  776 */ ElementSpec {sub_elements: (15174, 15184), sub_element_ver: 1317, attributes: (115, 118), attributes_ver: 140, character_data: None, mode: ContentMode::Sequence, ref_info: (869, 871)}, // COUPLING-PORT-SCHEDULER
    /*  777 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (907, 913), attributes_ver: 9331, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // PREDECESSOR-REF
    /*  778 */ ElementSpec {sub_elements: (20337, 20338), sub_element_ver: 43, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // PREDECESSOR-REFS
    /*  779 */ ElementSpec {sub_elements: (15184, 15194), sub_element_ver: 1317, attributes: (115, 118), attributes_ver: 140, character_data: None, mode: ContentMode::Sequence, ref_info: (871, 873)}, // COUPLING-PORT-SHAPER
    /*  780 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (913, 919), attributes_ver: 9331, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // PREDECESSOR-FIFO-REF
    /*  781 */ ElementSpec {sub_elements: (18647, 18651), sub_element_ver: 1317, attributes: (0, 2), attributes_ver: 120, character_data: None, mode: ContentMode::Sequence, ref_info: (873, 874)}, // COUPLING-PORT-TRAFFIC-CLASS-ASSIGNMENT
    /*  782 */ ElementSpec {sub_elements: (20338, 20339), sub_element_ver: 43, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // PRIORITYS
    /*  783 */ ElementSpec {sub_elements: (20339, 20340), sub_element_ver: 0, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // VLAN-MEMBERSHIPS
    /*  784 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (919, 925), attributes_ver: 9331, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // VLAN-MODIFIER-REF
    /*  785 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (925, 931), attributes_ver: 500, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // WAKEUP-SLEEP-ON-DATALINE-CONFIG-REF
    /*  786 */ ElementSpec {sub_elements: (11334, 11346), sub_element_ver: 4737, attributes: (115, 118), attributes_ver: 77, character_data: None, mode: ContentMode::Sequence, ref_info: (874, 878)}, // CP-SOFTWARE-CLUSTER
    /*  787 */ ElementSpec {sub_elements: (6718, 6733), sub_element_ver: 1927, attributes: (115, 118), attributes_ver: 77, character_data: None, mode: ContentMode::Sequence, ref_info: (878, 882)}, // CP-SOFTWARE-CLUSTER-BINARY-MANIFEST-DESCRIPTOR
    /*  788 */ ElementSpec {sub_elements: (20340, 20341), sub_element_ver: 19, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // META-DATA-FIELDS
    /*  789 */ ElementSpec {sub_elements: (20341, 20342), sub_element_ver: 19, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // PROVIDE-RESOURCES
    /*  790 */ ElementSpec {sub_elements: (20342, 20343), sub_element_ver: 19, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // REQUIRE-RESOURCES
    /*  791 */ ElementSpec {sub_elements: (20343, 20344), sub_element_ver: 19, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // RESOURCE-DEFINITIONS
    /*  792 */ ElementSpec {sub_elements: (9305, 9318), sub_element_ver: 6696, attributes: (115, 118), attributes_ver: 77, character_data: None, mode: ContentMode::Sequence, ref_info: (882, 884)}, // CP-SOFTWARE-CLUSTER-COMMUNICATION-RESOURCE
    /*  793 */ ElementSpec {sub_elements: (19598, 19600), sub_element_ver: 1555, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Choice, ref_info: (0, 0)}, // COMMUNICATION-RESOURCE-PROPS
    /*  794 */ ElementSpec {sub_elements: (8226, 8240), sub_element_ver: 2856, attributes: (115, 118), attributes_ver: 77, character_data: None, mode: ContentMode::Sequence, ref_info: (884, 888)}, // CP-SOFTWARE-CLUSTER-MAPPING-SET
    /*  795 */ ElementSpec {sub_elements: (20344, 20345), sub_element_ver: 19, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // SWC-TO-APPLICATION-PARTITION-MAPPINGS
    /*  796 */ ElementSpec {sub_elements: (19600, 19602), sub_element_ver: 77, attributes: (0, 2), attributes_ver: 77, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // CP-SOFTWARE-CLUSTER-REF-CONDITIONAL
    /*  797 */ ElementSpec {sub_elements: (20345, 20346), sub_element_ver: 19, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // DEPENDENT-RESOURCES
    /*  798 */ ElementSpec {sub_elements: (13266, 13277), sub_element_ver: 1927, attributes: (115, 118), attributes_ver: 77, character_data: None, mode: ContentMode::Sequence, ref_info: (888, 892)}, // CP-SOFTWARE-CLUSTER-RESOURCE-POOL
    /*  799 */ ElementSpec {sub_elements: (20346, 20347), sub_element_ver: 19, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // ECU-SCOPE-REFS
    /*  800 */ ElementSpec {sub_elements: (19602, 19604), sub_element_ver: 77, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // RESOURCES
    /*  801 */ ElementSpec {sub_elements: (13277, 13288), sub_element_ver: 1927, attributes: (115, 118), attributes_ver: 77, character_data: None, mode: ContentMode::Sequence, ref_info: (892, 893)}, // CP-SOFTWARE-CLUSTER-RESOURCE-TO-APPLICATION-PARTITION-MAPPING
    /*  802 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (931, 937), attributes_ver: 500, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // APPLICATION-PARTITION-REF
    /*  803 */ ElementSpec {sub_elements: (11346, 11358), sub_element_ver: 1927, attributes: (115, 118), attributes_ver: 77, character_data: None, mode: ContentMode::Sequence, ref_info: (893, 895)}, // CP-SOFTWARE-CLUSTER-SERVICE-RESOURCE
    /*  804 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (937, 943), attributes_ver: 500, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // ASSOCIATED-CROSS-SW-CLUSTER-COM-RTE-PLUGIN-REF, RESOURCE-NEEDS-REF
    /*  805 */ ElementSpec {sub_elements: (20347, 20348), sub_element_ver: 19, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // RESOURCE-NEEDS-REFS
    /*  806 */ ElementSpec {sub_elements: (20348, 20349), sub_element_ver: 19, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // SW-COMPONENT-ASSIGNMENTS
    /*  807 */ ElementSpec {sub_elements: (20349, 20350), sub_element_ver: 19, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // SW-COMPOSITIONS
    /*  808 */ ElementSpec {sub_elements: (13288, 13299), sub_element_ver: 1502, attributes: (115, 118), attributes_ver: 230, character_data: None, mode: ContentMode::Sequence, ref_info: (895, 896)}, // CP-SOFTWARE-CLUSTER-TO-APPLICATION-PARTITION-MAPPING, SOFTWARE-CLUSTER-TO-APPLICATION-PARTITION-MAPPING
    /*  809 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (931, 937), attributes_ver: 230, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // APPLICATION-PARTITION-REF
    /*  810 */ ElementSpec {sub_elements: (20350, 20351), sub_element_ver: 16, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // APPLICATION-PARTITION-REFS
    /*  811 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (943, 949), attributes_ver: 230, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // SOFTWARE-CLUSTER-REF
    /*  812 */ ElementSpec {sub_elements: (9318, 9331), sub_element_ver: 6709, attributes: (115, 118), attributes_ver: 77, character_data: None, mode: ContentMode::Sequence, ref_info: (896, 897)}, // CP-SOFTWARE-CLUSTER-TO-ECU-INSTANCE-MAPPING
    /*  813 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (943, 949), attributes_ver: 9397, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // SW-CLUSTER-REF
    /*  814 */ ElementSpec {sub_elements: (20351, 20352), sub_element_ver: 2242, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // SW-CLUSTER-REFS
    /*  815 */ ElementSpec {sub_elements: (20352, 20353), sub_element_ver: 6, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // SW-CLUSTERS
    /*  816 */ ElementSpec {sub_elements: (11358, 11370), sub_element_ver: 1927, attributes: (115, 118), attributes_ver: 77, character_data: None, mode: ContentMode::Sequence, ref_info: (897, 898)}, // CP-SOFTWARE-CLUSTER-TO-RESOURCE-MAPPING
    /*  817 */ ElementSpec {sub_elements: (20353, 20354), sub_element_ver: 19, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // REQUESTER-REFS
    /*  818 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (949, 955), attributes_ver: 500, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // SERVICE-RESOURCE-REF
    /*  819 */ ElementSpec {sub_elements: (9331, 9344), sub_element_ver: 4093, attributes: (115, 118), attributes_ver: 81, character_data: None, mode: ContentMode::Sequence, ref_info: (898, 904)}, // CP-SW-CLUSTER-RESOURCE-TO-DIAG-DATA-ELEM-MAPPING
    /*  820 */ ElementSpec {sub_elements: (9344, 9357), sub_element_ver: 4093, attributes: (115, 118), attributes_ver: 81, character_data: None, mode: ContentMode::Sequence, ref_info: (904, 910)}, // CP-SW-CLUSTER-RESOURCE-TO-DIAG-FUNCTION-ID-MAPPING
    /*  821 */ ElementSpec {sub_elements: (9357, 9370), sub_element_ver: 4093, attributes: (115, 118), attributes_ver: 81, character_data: None, mode: ContentMode::Sequence, ref_info: (910, 916)}, // CP-SW-CLUSTER-TO-DIAG-EVENT-MAPPING
    /*  822 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (493, 499), attributes_ver: 4093, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // CP-SOFTWARE-CLUSTER-RESOURCE-REF
    /*  823 */ ElementSpec {sub_elements: (9370, 9383), sub_element_ver: 4093, attributes: (115, 118), attributes_ver: 81, character_data: None, mode: ContentMode::Sequence, ref_info: (916, 922)}, // CP-SW-CLUSTER-TO-DIAG-ROUTINE-SUBFUNCTION-MAPPING
    /*  824 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (955, 961), attributes_ver: 4093, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // ROUTINE-SUBFUNCTION-REF
    /*  825 */ ElementSpec {sub_elements: (4501, 4519), sub_element_ver: 4021, attributes: (115, 118), attributes_ver: 4021, character_data: None, mode: ContentMode::Sequence, ref_info: (922, 932)}, // CPP-IMPLEMENTATION-DATA-TYPE
    /*  826 */ ElementSpec {sub_elements: (9383, 9396), sub_element_ver: 6722, attributes: (115, 118), attributes_ver: 2229, character_data: None, mode: ContentMode::Sequence, ref_info: (932, 938)}, // CPP-IMPLEMENTATION-DATA-TYPE-ELEMENT
    /*  827 */ ElementSpec {sub_elements: (19109, 19112), sub_element_ver: 9187, attributes: (0, 2), attributes_ver: 115, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // TYPE-REFERENCE
    /*  828 */ ElementSpec {sub_elements: (20354, 20355), sub_element_ver: 74, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // SUB-ELEMENTS
    /*  829 */ ElementSpec {sub_elements: (20354, 20355), sub_element_ver: 115, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // SUB-ELEMENTS
    /*  830 */ ElementSpec {sub_elements: (20355, 20356), sub_element_ver: 115, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // TEMPLATE-ARGUMENTS
    /*  831 */ ElementSpec {sub_elements: (17931, 17937), sub_element_ver: 8958, attributes: (0, 2), attributes_ver: 115, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // CPP-TEMPLATE-ARGUMENT
    /*  832 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (961, 967), attributes_ver: 2229, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // ALLOCATOR-REF
    /*  833 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (967, 973), attributes_ver: 2229, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // TEMPLATE-TYPE-REF, TYPE-REFERENCE-REF
    /*  834 */ ElementSpec {sub_elements: (16833, 16842), sub_element_ver: 1927, attributes: (115, 118), attributes_ver: 77, character_data: None, mode: ContentMode::Sequence, ref_info: (938, 939)}, // CRYPTO-CERTIFICATE
    /*  835 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 9, character_data: Some(159), mode: ContentMode::Characters, ref_info: (0, 0)}, // ALGORITHM-FAMILY
    /*  836 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 9, character_data: Some(160), mode: ContentMode::Characters, ref_info: (0, 0)}, // FORMAT
    /*  837 */ ElementSpec {sub_elements: (5836, 5852), sub_element_ver: 1927, attributes: (115, 118), attributes_ver: 77, character_data: None, mode: ContentMode::Sequence, ref_info: (939, 949)}, // CRYPTO-CERTIFICATE-INTERFACE
    /*  838 */ ElementSpec {sub_elements: (777, 785), sub_element_ver: 1927, attributes: (115, 118), attributes_ver: 77, character_data: None, mode: ContentMode::Sequence, ref_info: (949, 952)}, // CRYPTO-CERTIFICATE-KEY-SLOT-NEEDS
    /*  839 */ ElementSpec {sub_elements: (19604, 19606), sub_element_ver: 77, attributes: (0, 2), attributes_ver: 77, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // CRYPTO-CERTIFICATE-TO-CRYPTO-KEY-SLOT-MAPPING
    /*  840 */ ElementSpec {sub_elements: (20356, 20357), sub_element_ver: 19, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // CRYPTO-KEY-SLOT-REFS
    /*  841 */ ElementSpec {sub_elements: (9396, 9409), sub_element_ver: 1927, attributes: (115, 118), attributes_ver: 77, character_data: None, mode: ContentMode::Sequence, ref_info: (952, 958)}, // CRYPTO-CERTIFICATE-TO-PORT-PROTOTYPE-MAPPING
    /*  842 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (973, 979), attributes_ver: 500, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // CRYPTO-CERTIFICATE-REF
    /*  843 */ ElementSpec {sub_elements: (15194, 15204), sub_element_ver: 7430, attributes: (115, 118), attributes_ver: 4960, character_data: None, mode: ContentMode::Sequence, ref_info: (958, 962)}, // CRYPTO-DRIVER
    /*  844 */ ElementSpec {sub_elements: (19606, 19608), sub_element_ver: 75, attributes: (0, 2), attributes_ver: 75, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // CRYPTO-DRIVER-TO-CRYPTO-JOB-MAPPING
    /*  845 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (979, 985), attributes_ver: 9337, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // DRIVER-PRIMITIVE-REF, JOB-PRIMITIVE-REF
    /*  846 */ ElementSpec {sub_elements: (15204, 15214), sub_element_ver: 4093, attributes: (115, 118), attributes_ver: 81, character_data: None, mode: ContentMode::Sequence, ref_info: (962, 966)}, // CRYPTO-ELLIPTIC-CURVE-PROPS
    /*  847 */ ElementSpec {sub_elements: (15214, 15224), sub_element_ver: 7430, attributes: (115, 118), attributes_ver: 4960, character_data: None, mode: ContentMode::Sequence, ref_info: (966, 967)}, // CRYPTO-JOB
    /*  848 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (985, 991), attributes_ver: 9337, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // CRYPTO-KEY-REF
    /*  849 */ ElementSpec {sub_elements: (777, 785), sub_element_ver: 1927, attributes: (115, 118), attributes_ver: 77, character_data: None, mode: ContentMode::Sequence, ref_info: (967, 969)}, // CRYPTO-KEY-MANAGEMENT-NEEDS
    /*  850 */ ElementSpec {sub_elements: (4519, 4537), sub_element_ver: 4039, attributes: (115, 118), attributes_ver: 4039, character_data: None, mode: ContentMode::Sequence, ref_info: (969, 970)}, // CRYPTO-KEY-SLOT
    /*  851 */ ElementSpec {sub_elements: (18651, 18655), sub_element_ver: 77, attributes: (0, 2), attributes_ver: 77, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // KEY-SLOT-ALLOWED-MODIFICATION
    /*  852 */ ElementSpec {sub_elements: (3364, 3385), sub_element_ver: 3027, attributes: (115, 118), attributes_ver: 12, character_data: None, mode: ContentMode::Sequence, ref_info: (970, 981)}, // CRYPTO-KEY-SLOT-CLIENT-INTERFACE
    /*  853 */ ElementSpec {sub_elements: (20357, 20358), sub_element_ver: 19, attributes: (0, 2), attributes_ver: 77, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // CRYPTO-KEY-SLOT-CONTENT-ALLOWED-USAGE
    /*  854 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (991, 997), attributes_ver: 425, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // CRYPTO-KEY-SLOT-DESIGN-REF
    /*  855 */ ElementSpec {sub_elements: (8240, 8254), sub_element_ver: 3027, attributes: (115, 118), attributes_ver: 12, character_data: None, mode: ContentMode::Sequence, ref_info: (981, 982)}, // CRYPTO-KEY-SLOT-DESIGN
    /*  856 */ ElementSpec {sub_elements: (20358, 20359), sub_element_ver: 12, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // OWNER-REFS
    /*  857 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (997, 1003), attributes_ver: 425, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // CRYPTO-KEY-SLOT-USAGE-DESIGN-REF, OWNER-REF, USER-REF
    /*  858 */ ElementSpec {sub_elements: (20359, 20360), sub_element_ver: 12, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // USER-REFS
    /*  859 */ ElementSpec {sub_elements: (3385, 3406), sub_element_ver: 1927, attributes: (115, 118), attributes_ver: 77, character_data: None, mode: ContentMode::Sequence, ref_info: (982, 993)}, // CRYPTO-KEY-SLOT-INTERFACE
    /*  860 */ ElementSpec {sub_elements: (20360, 20361), sub_element_ver: 19, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // KEY-SLOT-CONTENT-ALLOWED-USAGES
    /*  861 */ ElementSpec {sub_elements: (11370, 11382), sub_element_ver: 3027, attributes: (115, 118), attributes_ver: 12, character_data: None, mode: ContentMode::Sequence, ref_info: (993, 1000)}, // CRYPTO-KEY-SLOT-TO-CLIENT-PORT-PROTOTYPE-MAPPING
    /*  862 */ ElementSpec {sub_elements: (11382, 11394), sub_element_ver: 1927, attributes: (115, 118), attributes_ver: 77, character_data: None, mode: ContentMode::Sequence, ref_info: (1000, 1007)}, // CRYPTO-KEY-SLOT-TO-PORT-PROTOTYPE-MAPPING
    /*  863 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 77, character_data: Some(165), mode: ContentMode::Characters, ref_info: (0, 0)}, // SLOT-TYPE
    /*  864 */ ElementSpec {sub_elements: (3364, 3372), sub_element_ver: 3027, attributes: (115, 118), attributes_ver: 12, character_data: None, mode: ContentMode::Sequence, ref_info: (1007, 1008)}, // CRYPTO-KEY-SLOT-USAGE-DESIGN
    /*  865 */ ElementSpec {sub_elements: (13299, 13310), sub_element_ver: 3027, attributes: (115, 118), attributes_ver: 12, character_data: None, mode: ContentMode::Sequence, ref_info: (1008, 1014)}, // CRYPTO-KEY-SLOT-USAGE-DESIGN-MAPPING
    /*  866 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (247, 253), attributes_ver: 425, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // PORT-PROTOTYPE-REF
    /*  867 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 77, character_data: Some(167), mode: ContentMode::Characters, ref_info: (0, 0)}, // KEY-SLOT-USAGE
    /*  868 */ ElementSpec {sub_elements: (15224, 15234), sub_element_ver: 3027, attributes: (115, 118), attributes_ver: 12, character_data: None, mode: ContentMode::Sequence, ref_info: (1014, 1020)}, // CRYPTO-KEY-SLOT-USER-DESIGN
    /*  869 */ ElementSpec {sub_elements: (20361, 20362), sub_element_ver: 12, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // KEY-SLOT-USAGES
    /*  870 */ ElementSpec {sub_elements: (13310, 13321), sub_element_ver: 3027, attributes: (115, 118), attributes_ver: 12, character_data: None, mode: ContentMode::Sequence, ref_info: (1020, 1026)}, // CRYPTO-KEY-SLOT-USER-DESIGN-MAPPING
    /*  871 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (1003, 1009), attributes_ver: 425, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // CRYPTO-KEY-SLOT-USER-DESIGN-REF
    /*  872 */ ElementSpec {sub_elements: (5852, 5868), sub_element_ver: 4952, attributes: (115, 118), attributes_ver: 4039, character_data: None, mode: ContentMode::Sequence, ref_info: (1026, 1032)}, // CRYPTO-MODULE-INSTANTIATION
    /*  873 */ ElementSpec {sub_elements: (20362, 20363), sub_element_ver: 19, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // CERTIFICATE-TO-KEY-SLOT-MAPPINGS
    /*  874 */ ElementSpec {sub_elements: (20363, 20364), sub_element_ver: 19, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // CRYPTO-CERTIFICATES
    /*  875 */ ElementSpec {sub_elements: (20364, 20365), sub_element_ver: 75, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // CRYPTO-DESIGN-TO-CRYPTO-DRIVER-MAPPINGS
    /*  876 */ ElementSpec {sub_elements: (20365, 20366), sub_element_ver: 75, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // CRYPTO-DRIVER-TO-CRYPTO-JOB-MAPPINGS
    /*  877 */ ElementSpec {sub_elements: (20366, 20367), sub_element_ver: 75, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // CRYPTO-JOBS
    /*  878 */ ElementSpec {sub_elements: (20367, 20368), sub_element_ver: 19, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // CRYPTO-PROVIDERS
    /*  879 */ ElementSpec {sub_elements: (20368, 20369), sub_element_ver: 4047, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // KEY-SLOTS
    /*  880 */ ElementSpec {sub_elements: (20369, 20370), sub_element_ver: 538, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // SECURE-COM-CONFIG-TO-KEY-SLOT-MAPPINGS
    /*  881 */ ElementSpec {sub_elements: (11394, 11406), sub_element_ver: 7430, attributes: (115, 118), attributes_ver: 4960, character_data: None, mode: ContentMode::Sequence, ref_info: (1032, 1038)}, // CRYPTO-NEED
    /*  882 */ ElementSpec {sub_elements: (15234, 15244), sub_element_ver: 7430, attributes: (115, 118), attributes_ver: 4960, character_data: None, mode: ContentMode::Sequence, ref_info: (1038, 1039)}, // CRYPTO-NEED-TO-CRYPTO-JOB-MAPPING
    /*  883 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (1009, 1015), attributes_ver: 9337, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // CRYPTO-NEED-REF
    /*  884 */ ElementSpec {sub_elements: (13321, 13332), sub_element_ver: 7919, attributes: (115, 118), attributes_ver: 5288, character_data: None, mode: ContentMode::Sequence, ref_info: (1039, 1043)}, // CRYPTO-NEED-TO-PORT-PROTOTYPE-MAPPING
    /*  885 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (421, 427), attributes_ver: 5294, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // PORT-PROTOTYPE-REF
    /*  886 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 77, character_data: Some(170), mode: ContentMode::Characters, ref_info: (0, 0)}, // CRYPTO-OBJECT-TYPE
    /*  887 */ ElementSpec {sub_elements: (13332, 13343), sub_element_ver: 7430, attributes: (115, 118), attributes_ver: 4960, character_data: None, mode: ContentMode::Sequence, ref_info: (1043, 1044)}, // PRIMITIVE
    /*  888 */ ElementSpec {sub_elements: (15244, 15254), sub_element_ver: 1927, attributes: (115, 118), attributes_ver: 77, character_data: None, mode: ContentMode::Sequence, ref_info: (1044, 1045)}, // CRYPTO-PROVIDER
    /*  889 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (481, 487), attributes_ver: 500, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // CRYPTO-PROVIDER-DOCUMENTATION-REF
    /*  890 */ ElementSpec {sub_elements: (3190, 3204), sub_element_ver: 1927, attributes: (115, 118), attributes_ver: 77, character_data: None, mode: ContentMode::Sequence, ref_info: (1045, 1055)}, // CRYPTO-PROVIDER-INTERFACE
    /*  891 */ ElementSpec {sub_elements: (20368, 20369), sub_element_ver: 19, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // KEY-SLOTS
    /*  892 */ ElementSpec {sub_elements: (11406, 11418), sub_element_ver: 1927, attributes: (115, 118), attributes_ver: 77, character_data: None, mode: ContentMode::Sequence, ref_info: (1055, 1061)}, // CRYPTO-PROVIDER-TO-PORT-PROTOTYPE-MAPPING
    /*  893 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (445, 451), attributes_ver: 500, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // CRYPTO-PROVIDER-REF
    /*  894 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 345, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // CRYPTO-R-PORT-COM-SPEC
    /*  895 */ ElementSpec {sub_elements: (8254, 8268), sub_element_ver: 6279, attributes: (115, 118), attributes_ver: 9, character_data: None, mode: ContentMode::Sequence, ref_info: (1061, 1067)}, // CRYPTO-SERVICE-CERTIFICATE
    /*  896 */ ElementSpec {sub_elements: (777, 785), sub_element_ver: 1187, attributes: (115, 118), attributes_ver: 9, character_data: None, mode: ContentMode::Sequence, ref_info: (1067, 1069)}, // CRYPTO-SERVICE-JOB-NEEDS
    /*  897 */ ElementSpec {sub_elements: (8268, 8282), sub_element_ver: 3531, attributes: (115, 118), attributes_ver: 9, character_data: None, mode: ContentMode::Sequence, ref_info: (1069, 1075)}, // CRYPTO-SERVICE-KEY
    /*  898 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 9, character_data: Some(175), mode: ContentMode::Characters, ref_info: (0, 0)}, // KEY-GENERATION
    /*  899 */ ElementSpec {sub_elements: (11418, 11430), sub_element_ver: 7442, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (1075, 1077)}, // CRYPTO-SERVICE-NEEDS
    /*  900 */ ElementSpec {sub_elements: (11430, 11442), sub_element_ver: 3531, attributes: (115, 118), attributes_ver: 9, character_data: None, mode: ContentMode::Sequence, ref_info: (1077, 1083)}, // CRYPTO-SERVICE-PRIMITIVE
    /*  901 */ ElementSpec {sub_elements: (15254, 15264), sub_element_ver: 1642, attributes: (115, 118), attributes_ver: 909, character_data: None, mode: ContentMode::Sequence, ref_info: (1083, 1087)}, // CRYPTO-SERVICE-QUEUE
    /*  902 */ ElementSpec {sub_elements: (15264, 15274), sub_element_ver: 4093, attributes: (115, 118), attributes_ver: 81, character_data: None, mode: ContentMode::Sequence, ref_info: (1087, 1091)}, // CRYPTO-SIGNATURE-SCHEME
    /*  903 */ ElementSpec {sub_elements: (3190, 3204), sub_element_ver: 1927, attributes: (115, 118), attributes_ver: 77, character_data: None, mode: ContentMode::Sequence, ref_info: (1091, 1101)}, // CRYPTO-TRUST-MASTER-INTERFACE
    /*  904 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 1612, character_data: Some(179), mode: ContentMode::Characters, ref_info: (0, 0)}, // CS-ERROR-REACTION
    /*  905 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 796, character_data: Some(983), mode: ContentMode::Characters, ref_info: (0, 0)}, // CSE-CODE
    /*  906 */ ElementSpec {sub_elements: (3974, 3993), sub_element_ver: 3531, attributes: (115, 118), attributes_ver: 9, character_data: None, mode: ContentMode::Sequence, ref_info: (1101, 1113)}, // CUSTOM-CPP-IMPLEMENTATION-DATA-TYPE
    /*  907 */ ElementSpec {sub_elements: (20370, 20371), sub_element_ver: 7, attributes: (0, 2), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // CYCLE-COUNTER
    /*  908 */ ElementSpec {sub_elements: (19608, 19610), sub_element_ver: 22, attributes: (0, 2), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // CYCLE-REPETITION
    /*  909 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 22, character_data: Some(180), mode: ContentMode::Characters, ref_info: (0, 0)}, // CYCLE-REPETITION
    /*  910 */ ElementSpec {sub_elements: (17937, 17943), sub_element_ver: 8964, attributes: (0, 2), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // CYCLIC-TIMING
    /*  911 */ ElementSpec {sub_elements: (19610, 19612), sub_element_ver: 541, attributes: (0, 2), attributes_ver: 77, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // COM-PROPS, DATA-COM-PROPS
    /*  912 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 301, character_data: Some(181), mode: ContentMode::Characters, ref_info: (0, 0)}, // DATA-CONSISTENCY-POLICY
    /*  913 */ ElementSpec {sub_elements: (11442, 11454), sub_element_ver: 4720, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (1113, 1119)}, // DATA-CONSTR
    /*  914 */ ElementSpec {sub_elements: (20371, 20372), sub_element_ver: 7, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // DATA-CONSTR-RULES
    /*  915 */ ElementSpec {sub_elements: (19112, 19115), sub_element_ver: 386, attributes: (0, 2), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // DATA-CONSTR-RULE
    /*  916 */ ElementSpec {sub_elements: (17504, 17512), sub_element_ver: 7406, attributes: (0, 2), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // DATA-DUMP-ENTRY
    /*  917 */ ElementSpec {sub_elements: (9409, 9422), sub_element_ver: 3816, attributes: (115, 118), attributes_ver: 192, character_data: None, mode: ContentMode::Sequence, ref_info: (1119, 1123)}, // DATA-EXCHANGE-POINT
    /*  918 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 134, character_data: Some(183), mode: ContentMode::Characters, ref_info: (0, 0)}, // KIND
    /*  919 */ ElementSpec {sub_elements: (17717, 17724), sub_element_ver: 814, attributes: (0, 2), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // DATA-FILTER, FILTER
    /*  920 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 22, character_data: Some(184), mode: ContentMode::Characters, ref_info: (0, 0)}, // DATA-FILTER-TYPE
    /*  921 */ ElementSpec {sub_elements: (19612, 19614), sub_element_ver: 134, attributes: (0, 2), attributes_ver: 134, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // DATA-FORMAT-TAILORING
    /*  922 */ ElementSpec {sub_elements: (20372, 20373), sub_element_ver: 21, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // CONSTRAINT-TAILORINGS
    /*  923 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 120, character_data: Some(186), mode: ContentMode::Characters, ref_info: (0, 0)}, // DATA-ID-MODE
    /*  924 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 22, character_data: Some(187), mode: ContentMode::Characters, ref_info: (0, 0)}, // LIMIT-KIND
    /*  925 */ ElementSpec {sub_elements: (17724, 17731), sub_element_ver: 3664, attributes: (0, 2), attributes_ver: 301, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // DATA-LINK-LAYER-RULE
    /*  926 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (1015, 1021), attributes_ver: 9319, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // CONSUMED-EVENT-GROUP-REF, EVENT-GROUP-REF
    /*  927 */ ElementSpec {sub_elements: (20373, 20374), sub_element_ver: 0, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // EVENT-GROUP-REFS
    /*  928 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (1021, 1027), attributes_ver: 9319, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // EVENT-HANDLER-REF
    /*  929 */ ElementSpec {sub_elements: (20374, 20375), sub_element_ver: 0, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // EVENT-HANDLER-REFS
    /*  930 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (1027, 1033), attributes_ver: 9319, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // SERVICE-INSTANCE-REF
    /*  931 */ ElementSpec {sub_elements: (20375, 20376), sub_element_ver: 0, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // SERVICE-INSTANCE-REFS
    /*  932 */ ElementSpec {sub_elements: (13343, 13354), sub_element_ver: 2765, attributes: (115, 118), attributes_ver: 0, character_data: None, mode: ContentMode::Sequence, ref_info: (1123, 1127)}, // DATA-PROTOTYPE-GROUP
    /*  933 */ ElementSpec {sub_elements: (20376, 20377), sub_element_ver: 0, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // DATA-PROTOTYPE-GROUP-IREFS
    /*  934 */ ElementSpec {sub_elements: (20377, 20378), sub_element_ver: 0, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // IMPLICIT-DATA-ACCESS-IREFS
    /*  935 */ ElementSpec {sub_elements: (19115, 19118), sub_element_ver: 81, attributes: (0, 2), attributes_ver: 81, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // ACCESSED-DATA-PROTOTYPE-IREF, DATA-PROTOTYPE-IN-CLIENT-SERVER-INTERFACE-IREF
    /*  936 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (361, 367), attributes_ver: 1642, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // CONTEXT-DATA-PROTOTYPE-IN-CS-REF, CONTEXT-DATA-PROTOTYPE-IN-SR-REF
    /*  937 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (367, 373), attributes_ver: 1642, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // TARGET-DATA-PROTOTYPE-IN-CS-REF, TARGET-DATA-PROTOTYPE-IN-SR-REF
    /*  938 */ ElementSpec {sub_elements: (19115, 19118), sub_element_ver: 909, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // (sub-group)
    /*  939 */ ElementSpec {sub_elements: (18289, 18294), sub_element_ver: 8194, attributes: (0, 2), attributes_ver: 8194, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // MAPPED-AP-DATA-ELEMENT-IREF
    /*  940 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (811, 817), attributes_ver: 9403, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // CONTEXT-COMPONENT-REF
    /*  941 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (361, 367), attributes_ver: 9403, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // CONTEXT-DATA-PROTOTYPE-REF
    /*  942 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (421, 427), attributes_ver: 9403, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // CONTEXT-PORT-REF
    /*  943 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (1033, 1039), attributes_ver: 9403, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // CONTEXT-ROOT-COMPONENT-REF
    /*  944 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (367, 373), attributes_ver: 9403, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // TARGET-DATA-PROTOTYPE-REF
    /*  945 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (361, 367), attributes_ver: 7514, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // CONTEXT-DATA-PROTOTYPE-REF
    /*  946 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (409, 415), attributes_ver: 7514, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // ROOT-DATA-PROTOTYPE-REF
    /*  947 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (367, 373), attributes_ver: 7514, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // TARGET-DATA-PROTOTYPE-REF
    /*  948 */ ElementSpec {sub_elements: (17943, 17949), sub_element_ver: 8970, attributes: (0, 2), attributes_ver: 9531, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // DATA-PROTOTYPE-IN-PORT-INTERFACE-REF
    /*  949 */ ElementSpec {sub_elements: (17949, 17955), sub_element_ver: 8976, attributes: (0, 2), attributes_ver: 6757, character_data: None, mode: ContentMode::Choice, ref_info: (0, 0)}, // DATA-PROTOTYPE-IREF
    /*  950 */ ElementSpec {sub_elements: (19118, 19121), sub_element_ver: 81, attributes: (0, 2), attributes_ver: 81, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // DATA-PROTOTYPE-IN-SENDER-RECEIVER-INTERFACE-IREF
    /*  951 */ ElementSpec {sub_elements: (19118, 19121), sub_element_ver: 909, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // (sub-group)
    /*  952 */ ElementSpec {sub_elements: (19121, 19124), sub_element_ver: 9, attributes: (0, 2), attributes_ver: 9, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // DATA-PROTOTYPE-IN-METHOD-ARGUMENT-INSTANCE-REF-IREF, DATA-PROTOTYPE-IN-SERVICE-INTERFACE-IREF, DATA-PROTOTYPE-IREF
    /*  953 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (361, 367), attributes_ver: 1187, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // CONTEXT-DATA-PROTOTYPE-REF
    /*  954 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (409, 415), attributes_ver: 1187, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // ROOT-DATA-PROTOTYPE-REF
    /*  955 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (367, 373), attributes_ver: 1187, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // TARGET-DATA-PROTOTYPE-REF
    /*  956 */ ElementSpec {sub_elements: (19121, 19124), sub_element_ver: 909, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // (sub-group)
    /*  957 */ ElementSpec {sub_elements: (19614, 19616), sub_element_ver: 9, attributes: (0, 2), attributes_ver: 9, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // DATA-PROTOTYPE-IN-SERVICE-INTERFACE-REF
    /*  958 */ ElementSpec {sub_elements: (18294, 18299), sub_element_ver: 8051, attributes: (0, 2), attributes_ver: 2200, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // DATA-PROTOTYPE-IREF
    /*  959 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (361, 367), attributes_ver: 9367, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // CONTEXT-DATA-PROTOTYPE-REF
    /*  960 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (421, 427), attributes_ver: 9367, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // CONTEXT-PORT-REF, PORT-PROTOTYPE-REF
    /*  961 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (367, 373), attributes_ver: 9367, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // TARGET-DATA-PROTOTYPE-REF
    /*  962 */ ElementSpec {sub_elements: (17955, 17961), sub_element_ver: 8982, attributes: (0, 2), attributes_ver: 120, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // DATA-PROTOTYPE-IREF, MAPPED-DATA-ELEMENT-IREF
    /*  963 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (811, 817), attributes_ver: 9331, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // CONTEXT-COMPONENT-REF, CONTEXT-SW-COMPONENT-PROTOTYPE-REF
    /*  964 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (361, 367), attributes_ver: 9331, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // CONTEXT-DATA-PROTOTYPE-REF
    /*  965 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (421, 427), attributes_ver: 9331, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // CONTEXT-PORT-REF
    /*  966 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (805, 811), attributes_ver: 9331, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // CONTEXT-ROOT-COMPOSITION-REF, ROOT-CONTEXT-REF
    /*  967 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (409, 415), attributes_ver: 3664, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // ROOT-DATA-PROTOTYPE-REF
    /*  968 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (367, 373), attributes_ver: 9331, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // TARGET-DATA-PROTOTYPE-REF
    /*  969 */ ElementSpec {sub_elements: (17961, 17967), sub_element_ver: 8988, attributes: (0, 2), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // DATA-PROTOTYPE-MAPPING
    /*  970 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (691, 697), attributes_ver: 9385, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // FIRST-TO-SECOND-DATA-TRANSFORMATION-REF
    /*  971 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (691, 697), attributes_ver: 1187, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // SECOND-TO-FIRST-DATA-TRANSFORMATION-REF
    /*  972 */ ElementSpec {sub_elements: (20378, 20379), sub_element_ver: 386, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // SUB-ELEMENT-MAPPINGS
    /*  973 */ ElementSpec {sub_elements: (20379, 20380), sub_element_ver: 7, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // TEXT-TABLE-MAPPINGS
    /*  974 */ ElementSpec {sub_elements: (17967, 17973), sub_element_ver: 8994, attributes: (0, 2), attributes_ver: 134, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // DATA-PROTOTYPE-TRANSFORMATION-PROPS
    /*  975 */ ElementSpec {sub_elements: (19616, 19618), sub_element_ver: 77, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Choice, ref_info: (0, 0)}, // DATA-PROTOTYPE-IN-PORT-INTERFACE-REF
    /*  976 */ ElementSpec {sub_elements: (19618, 19620), sub_element_ver: 134, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Choice, ref_info: (0, 0)}, // DATA-PROTOTYPE-REF
    /*  977 */ ElementSpec {sub_elements: (3364, 3372), sub_element_ver: 3027, attributes: (115, 118), attributes_ver: 12, character_data: None, mode: ContentMode::Sequence, ref_info: (1127, 1128)}, // IDENT
    /*  978 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (1039, 1045), attributes_ver: 9325, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // TRANSFORMATION-PROPS-REF
    /*  979 */ ElementSpec {sub_elements: (19620, 19622), sub_element_ver: 602, attributes: (0, 2), attributes_ver: 134, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // DATA-PROTOTYPE-WITH-APPLICATION-DATA-TYPE-IN-SYSTEM-REF
    /*  980 */ ElementSpec {sub_elements: (9422, 9435), sub_element_ver: 2053, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (1128, 1134)}, // DATA-RECEIVE-ERROR-EVENT
    /*  981 */ ElementSpec {sub_elements: (9435, 9448), sub_element_ver: 2053, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (1134, 1140)}, // DATA-RECEIVED-EVENT
    /*  982 */ ElementSpec {sub_elements: (9448, 9461), sub_element_ver: 2053, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (1140, 1146)}, // DATA-SEND-COMPLETED-EVENT
    /*  983 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (1045, 1051), attributes_ver: 9361, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // EVENT-SOURCE-REF
    /*  984 */ ElementSpec {sub_elements: (11454, 11466), sub_element_ver: 7454, attributes: (115, 118), attributes_ver: 140, character_data: None, mode: ContentMode::Sequence, ref_info: (1146, 1147)}, // DATA-TRANSFORMATION
    /*  985 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 120, character_data: Some(191), mode: ContentMode::Characters, ref_info: (0, 0)}, // ERROR-HANDLING
    /*  986 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 134, character_data: Some(192), mode: ContentMode::Characters, ref_info: (0, 0)}, // DATA-TRANSFORMATION-KIND
    /*  987 */ ElementSpec {sub_elements: (19622, 19624), sub_element_ver: 120, attributes: (0, 2), attributes_ver: 120, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // DATA-TRANSFORMATION-REF-CONDITIONAL
    /*  988 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (691, 697), attributes_ver: 9331, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // DATA-TRANSFORMATION-REF
    /*  989 */ ElementSpec {sub_elements: (13354, 13365), sub_element_ver: 2034, attributes: (115, 118), attributes_ver: 140, character_data: None, mode: ContentMode::Sequence, ref_info: (1147, 1151)}, // DATA-TRANSFORMATION-SET
    /*  990 */ ElementSpec {sub_elements: (20380, 20381), sub_element_ver: 43, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // DATA-TRANSFORMATIONS
    /*  991 */ ElementSpec {sub_elements: (20381, 20382), sub_element_ver: 43, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // TRANSFORMATION-TECHNOLOGYS
    /*  992 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 64, character_data: Some(193), mode: ContentMode::Characters, ref_info: (0, 0)}, // TRANSFORMER-STATUS-FORWARDING
    /*  993 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (1051, 1057), attributes_ver: 9331, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // TRANSFORMER-CHAIN-REF, TRANSFORMER-REF
    /*  994 */ ElementSpec {sub_elements: (20382, 20383), sub_element_ver: 43, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // TRANSFORMER-CHAIN-REFS
    /*  995 */ ElementSpec {sub_elements: (19624, 19626), sub_element_ver: 22, attributes: (0, 2), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // DATA-TYPE-MAP
    /*  996 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (1057, 1063), attributes_ver: 9361, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // APPLICATION-DATA-TYPE-REF, TYPE-TREF
    /*  997 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (1063, 1069), attributes_ver: 9361, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // IMPLEMENTATION-DATA-TYPE-REF
    /*  998 */ ElementSpec {sub_elements: (9461, 9474), sub_element_ver: 4720, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (1151, 1157)}, // DATA-TYPE-MAPPING-SET
    /*  999 */ ElementSpec {sub_elements: (20383, 20384), sub_element_ver: 7, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // DATA-TYPE-MAPS
    /* 1000 */ ElementSpec {sub_elements: (20384, 20385), sub_element_ver: 7, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // MODE-REQUEST-TYPE-MAPS
    /* 1001 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 22, character_data: Some(195), mode: ContentMode::Characters, ref_info: (0, 0)}, // DATA-TYPE-POLICY
    /* 1002 */ ElementSpec {sub_elements: (9474, 9487), sub_element_ver: 2053, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (1157, 1163)}, // DATA-WRITE-COMPLETED-EVENT
    /* 1003 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 22, character_data: Some(196), mode: ContentMode::Characters, ref_info: (0, 0)}, // DATE
    /* 1004 */ ElementSpec {sub_elements: (8282, 8296), sub_element_ver: 3316, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (1163, 1172)}, // DCM-I-PDU
    /* 1005 */ ElementSpec {sub_elements: (13365, 13376), sub_element_ver: 1502, attributes: (115, 118), attributes_ver: 230, character_data: None, mode: ContentMode::Sequence, ref_info: (1172, 1176)}, // DDS-CP-CONFIG
    /* 1006 */ ElementSpec {sub_elements: (20385, 20386), sub_element_ver: 16, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // DDS-DOMAINS
    /* 1007 */ ElementSpec {sub_elements: (20386, 20387), sub_element_ver: 16, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // DDS-QOS-PROFILES
    /* 1008 */ ElementSpec {sub_elements: (2218, 2244), sub_element_ver: 1975, attributes: (115, 118), attributes_ver: 230, character_data: None, mode: ContentMode::Sequence, ref_info: (1176, 1179)}, // DDS-CP-CONSUMED-SERVICE-INSTANCE
    /* 1009 */ ElementSpec {sub_elements: (20387, 20388), sub_element_ver: 16, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // CONSUMED-DDS-OPERATIONS, PROVIDED-DDS-OPERATIONS
    /* 1010 */ ElementSpec {sub_elements: (20388, 20389), sub_element_ver: 16, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // CONSUMED-DDS-SERVICE-EVENTS, PROVIDED-DDS-SERVICE-INSTANCE-EVENTS
    /* 1011 */ ElementSpec {sub_elements: (20314, 20315), sub_element_ver: 16, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // LOCAL-UNICAST-ADDRESSES, STATIC-REMOTE-MULTICAST-ADDRESSES, STATIC-REMOTE-UNICAST-ADDRESSES
    /* 1012 */ ElementSpec {sub_elements: (13376, 13387), sub_element_ver: 1502, attributes: (115, 118), attributes_ver: 230, character_data: None, mode: ContentMode::Sequence, ref_info: (1179, 1180)}, // DDS-CP-DOMAIN
    /* 1013 */ ElementSpec {sub_elements: (20389, 20390), sub_element_ver: 16, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // DDS-PARTITIONS
    /* 1014 */ ElementSpec {sub_elements: (20390, 20391), sub_element_ver: 16, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // DDS-TOPICS
    /* 1015 */ ElementSpec {sub_elements: (19124, 19127), sub_element_ver: 230, attributes: (0, 2), attributes_ver: 123, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // DDS-CP-I-SIGNAL-TO-DDS-TOPIC-MAPPING
    /* 1016 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (1069, 1075), attributes_ver: 230, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // I-SIGNAL-REF
    /* 1017 */ ElementSpec {sub_elements: (16842, 16851), sub_element_ver: 1502, attributes: (115, 118), attributes_ver: 230, character_data: None, mode: ContentMode::Sequence, ref_info: (1180, 1181)}, // DDS-CP-PARTITION
    /* 1018 */ ElementSpec {sub_elements: (2244, 2270), sub_element_ver: 1975, attributes: (115, 118), attributes_ver: 230, character_data: None, mode: ContentMode::Sequence, ref_info: (1181, 1184)}, // DDS-CP-PROVIDED-SERVICE-INSTANCE
    /* 1019 */ ElementSpec {sub_elements: (2970, 2992), sub_element_ver: 1975, attributes: (115, 118), attributes_ver: 230, character_data: None, mode: ContentMode::Sequence, ref_info: (1184, 1185)}, // DDS-CP-QOS-PROFILE
    /* 1020 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (1075, 1081), attributes_ver: 230, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // DDS-EVENT-TOPIC-REF, DDS-FIELD-REPLY-TOPIC-REF, DDS-FIELD-REQUEST-TOPIC-REF, DDS-METHOD-REPLY-TOPIC-REF, DDS-METHOD-REQUEST-TOPIC-REF, DDS-TOPIC-REF
    /* 1021 */ ElementSpec {sub_elements: (18655, 18659), sub_element_ver: 230, attributes: (0, 2), attributes_ver: 123, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // DDS-CP-SERVICE-INSTANCE-EVENT
    /* 1022 */ ElementSpec {sub_elements: (19127, 19130), sub_element_ver: 230, attributes: (0, 2), attributes_ver: 123, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // DDS-CP-SERVICE-INSTANCE-OPERATION
    /* 1023 */ ElementSpec {sub_elements: (15274, 15284), sub_element_ver: 1502, attributes: (115, 118), attributes_ver: 230, character_data: None, mode: ContentMode::Sequence, ref_info: (1185, 1186)}, // DDS-CP-TOPIC
    /* 1024 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (1081, 1087), attributes_ver: 230, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // DDS-PARTITION-REF
    /* 1025 */ ElementSpec {sub_elements: (20391, 20392), sub_element_ver: 16, attributes: (0, 2), attributes_ver: 123, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // DEADLINE
    /* 1026 */ ElementSpec {sub_elements: (20392, 20393), sub_element_ver: 16, attributes: (0, 2), attributes_ver: 123, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // DESTINATION-ORDER
    /* 1027 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 123, character_data: Some(200), mode: ContentMode::Characters, ref_info: (0, 0)}, // DESTINATION-ORDER-KIND
    /* 1028 */ ElementSpec {sub_elements: (15284, 15294), sub_element_ver: 4093, attributes: (115, 118), attributes_ver: 81, character_data: None, mode: ContentMode::Sequence, ref_info: (1186, 1187)}, // DDS-DOMAIN-RANGE
    /* 1029 */ ElementSpec {sub_elements: (20393, 20394), sub_element_ver: 16, attributes: (0, 2), attributes_ver: 123, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // DURABILITY
    /* 1030 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 123, character_data: Some(201), mode: ContentMode::Characters, ref_info: (0, 0)}, // DURABILITY-KIND
    /* 1031 */ ElementSpec {sub_elements: (17973, 17979), sub_element_ver: 230, attributes: (0, 2), attributes_ver: 123, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // DURABILITY-SERVICE
    /* 1032 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 123, character_data: Some(202), mode: ContentMode::Characters, ref_info: (0, 0)}, // DURABILITY-SERVICE-HISTORY-KIND
    /* 1033 */ ElementSpec {sub_elements: (8296, 8310), sub_element_ver: 6293, attributes: (115, 118), attributes_ver: 2229, character_data: None, mode: ContentMode::Sequence, ref_info: (1187, 1189)}, // DDS-EVENT-DEPLOYMENT, NOTIFIER
    /* 1034 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (1087, 1093), attributes_ver: 4093, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // EVENT-TOPIC-ACCESS-RULE-REF, FIELD-TOPICS-ACCESS-RULE-REF, METHOD-TOPICS-ACCESS-RULE-REF
    /* 1035 */ ElementSpec {sub_elements: (20394, 20395), sub_element_ver: 9, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // TRANSPORT-PROTOCOLS
    /* 1036 */ ElementSpec {sub_elements: (19626, 19628), sub_element_ver: 9, attributes: (0, 2), attributes_ver: 9, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // DDS-EVENT-QOS-PROPS
    /* 1037 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (733, 739), attributes_ver: 1187, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // EVENT-REF
    /* 1038 */ ElementSpec {sub_elements: (9487, 9500), sub_element_ver: 6735, attributes: (115, 118), attributes_ver: 9, character_data: None, mode: ContentMode::Sequence, ref_info: (1189, 1191)}, // DDS-FIELD-DEPLOYMENT
    /* 1039 */ ElementSpec {sub_elements: (19628, 19630), sub_element_ver: 9, attributes: (0, 2), attributes_ver: 9, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // DDS-FIELD-QOS-PROPS
    /* 1040 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (745, 751), attributes_ver: 1187, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // FIELD-REF
    /* 1041 */ ElementSpec {sub_elements: (19630, 19632), sub_element_ver: 123, attributes: (0, 2), attributes_ver: 123, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // HISTORY
    /* 1042 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 123, character_data: Some(203), mode: ContentMode::Characters, ref_info: (0, 0)}, // HISTORY-KIND
    /* 1043 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 3350, character_data: Some(204), mode: ContentMode::Characters, ref_info: (0, 0)}, // REPLY-TOPIC-NAME, REQUEST-TOPIC-NAME
    /* 1044 */ ElementSpec {sub_elements: (20395, 20396), sub_element_ver: 16, attributes: (0, 2), attributes_ver: 123, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // LATENCY-BUDGET
    /* 1045 */ ElementSpec {sub_elements: (20396, 20397), sub_element_ver: 16, attributes: (0, 2), attributes_ver: 123, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // LIFESPAN
    /* 1046 */ ElementSpec {sub_elements: (19632, 19634), sub_element_ver: 123, attributes: (0, 2), attributes_ver: 123, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // LIVELINESS
    /* 1047 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 123, character_data: Some(205), mode: ContentMode::Characters, ref_info: (0, 0)}, // LIVENESS-KIND
    /* 1048 */ ElementSpec {sub_elements: (13387, 13398), sub_element_ver: 7730, attributes: (115, 118), attributes_ver: 5218, character_data: None, mode: ContentMode::Sequence, ref_info: (1191, 1193)}, // DDS-METHOD-DEPLOYMENT, GET, SET
    /* 1049 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (1093, 1099), attributes_ver: 7730, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // DDS-RPC-SERVICE-REF
    /* 1050 */ ElementSpec {sub_elements: (20397, 20398), sub_element_ver: 2120, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // TRANSPORT-PROTOCOLS
    /* 1051 */ ElementSpec {sub_elements: (19634, 19636), sub_element_ver: 3350, attributes: (0, 2), attributes_ver: 3350, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // DDS-METHOD-QOS-PROPS
    /* 1052 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (781, 787), attributes_ver: 7730, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // METHOD-REF
    /* 1053 */ ElementSpec {sub_elements: (20398, 20399), sub_element_ver: 16, attributes: (0, 2), attributes_ver: 123, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // OWNERSHIP
    /* 1054 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 123, character_data: Some(206), mode: ContentMode::Characters, ref_info: (0, 0)}, // OWNERSHIP-KIND
    /* 1055 */ ElementSpec {sub_elements: (20399, 20400), sub_element_ver: 16, attributes: (0, 2), attributes_ver: 123, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // OWNERSHIP-STRENGTH
    /* 1056 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 81, character_data: Some(207), mode: ContentMode::Characters, ref_info: (0, 0)}, // DATA-PROTECTION-KIND, DISCOVERY-PROTECTION-KIND, LIVELINESS-PROTECTION-KIND, METADATA-PROTECTION-KIND, RTPS-PROTECTION-KIND
    /* 1057 */ ElementSpec {sub_elements: (2571, 2595), sub_element_ver: 2302, attributes: (115, 118), attributes_ver: 9, character_data: None, mode: ContentMode::Sequence, ref_info: (1193, 1201)}, // DDS-PROVIDED-SERVICE-INSTANCE
    /* 1058 */ ElementSpec {sub_elements: (20400, 20401), sub_element_ver: 9, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // EVENT-QOS-PROPSS
    /* 1059 */ ElementSpec {sub_elements: (20401, 20402), sub_element_ver: 2120, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // FIELD-GET-SET-QOS-PROPSS
    /* 1060 */ ElementSpec {sub_elements: (20401, 20402), sub_element_ver: 9, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // FIELD-NOTIFIER-QOS-PROPSS
    /* 1061 */ ElementSpec {sub_elements: (20402, 20403), sub_element_ver: 2120, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // METHOD-QOS-PROPSS
    /* 1062 */ ElementSpec {sub_elements: (19636, 19638), sub_element_ver: 123, attributes: (0, 2), attributes_ver: 123, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // RELIABILITY
    /* 1063 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 123, character_data: Some(208), mode: ContentMode::Characters, ref_info: (0, 0)}, // RELIABILITY-KIND
    /* 1064 */ ElementSpec {sub_elements: (2373, 2398), sub_element_ver: 2104, attributes: (115, 118), attributes_ver: 9, character_data: None, mode: ContentMode::Sequence, ref_info: (1201, 1209)}, // DDS-REQUIRED-SERVICE-INSTANCE
    /* 1065 */ ElementSpec {sub_elements: (20403, 20404), sub_element_ver: 2121, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // BLACKLISTED-VERSIONS
    /* 1066 */ ElementSpec {sub_elements: (20403, 20404), sub_element_ver: 6, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // BLOCKLISTED-VERSIONS
    /* 1067 */ ElementSpec {sub_elements: (19130, 19133), sub_element_ver: 230, attributes: (0, 2), attributes_ver: 123, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // RESOURCE-LIMITS
    /* 1068 */ ElementSpec {sub_elements: (15294, 15304), sub_element_ver: 7730, attributes: (115, 118), attributes_ver: 5218, character_data: None, mode: ContentMode::Sequence, ref_info: (1209, 1210)}, // DDS-RPC-SERVICE-DEPLOYMENT
    /* 1069 */ ElementSpec {sub_elements: (15304, 15314), sub_element_ver: 3664, attributes: (0, 2), attributes_ver: 301, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // DDS-RULE
    /* 1070 */ ElementSpec {sub_elements: (13398, 13409), sub_element_ver: 4093, attributes: (115, 118), attributes_ver: 81, character_data: None, mode: ContentMode::Sequence, ref_info: (1210, 1217)}, // DDS-SECURE-COM-PROPS
    /* 1071 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (1099, 1105), attributes_ver: 4093, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // GOVERNANCE-REF
    /* 1072 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (973, 979), attributes_ver: 4093, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // IDENTITY-CERTIFICATE-AUTHORITY-REF, IDENTITY-REF, PERMISSION-CERTIFICATE-AUTHORITY-REF
    /* 1073 */ ElementSpec {sub_elements: (5018, 5035), sub_element_ver: 4093, attributes: (115, 118), attributes_ver: 81, character_data: None, mode: ContentMode::Sequence, ref_info: (1217, 1223)}, // DDS-SECURE-GOVERNANCE
    /* 1074 */ ElementSpec {sub_elements: (20404, 20405), sub_element_ver: 20, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // DOMAIN-IDS
    /* 1075 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 81, character_data: Some(212), mode: ContentMode::Characters, ref_info: (0, 0)}, // DISCOVERY-TYPE
    /* 1076 */ ElementSpec {sub_elements: (20405, 20406), sub_element_ver: 2120, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // TRANSPORT-PLUGINS
    /* 1077 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 81, character_data: Some(213), mode: ContentMode::Characters, ref_info: (0, 0)}, // RESOURCE-IDENTIFIER-TYPE
    /* 1078 */ ElementSpec {sub_elements: (4537, 4555), sub_element_ver: 4057, attributes: (115, 118), attributes_ver: 2229, character_data: None, mode: ContentMode::Sequence, ref_info: (1223, 1230)}, // DDS-SERVICE-INSTANCE-TO-MACHINE-MAPPING
    /* 1079 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (1105, 1111), attributes_ver: 4093, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // SECURE-COM-PROPS-FOR-DDS-REF
    /* 1080 */ ElementSpec {sub_elements: (2992, 3014), sub_element_ver: 2677, attributes: (115, 118), attributes_ver: 2229, character_data: None, mode: ContentMode::Sequence, ref_info: (1230, 1237)}, // DDS-SERVICE-INTERFACE-DEPLOYMENT
    /* 1081 */ ElementSpec {sub_elements: (20406, 20407), sub_element_ver: 2120, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // DDS-RPC-SERVICES
    /* 1082 */ ElementSpec {sub_elements: (20394, 20395), sub_element_ver: 19, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // TRANSPORT-PROTOCOLS
    /* 1083 */ ElementSpec {sub_elements: (19638, 19640), sub_element_ver: 64, attributes: (0, 2), attributes_ver: 64, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // DDS-SERVICE-VERSION
    /* 1084 */ ElementSpec {sub_elements: (6733, 6748), sub_element_ver: 4093, attributes: (115, 118), attributes_ver: 81, character_data: None, mode: ContentMode::Sequence, ref_info: (1237, 1243)}, // DDS-TOPIC-ACCESS-RULE
    /* 1085 */ ElementSpec {sub_elements: (20407, 20408), sub_element_ver: 16, attributes: (0, 2), attributes_ver: 123, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // TOPIC-DATA
    /* 1086 */ ElementSpec {sub_elements: (20408, 20409), sub_element_ver: 16, attributes: (0, 2), attributes_ver: 123, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // TRANSPORT-PRIORITY
    /* 1087 */ ElementSpec {sub_elements: (8310, 8324), sub_element_ver: 6307, attributes: (115, 118), attributes_ver: 1153, character_data: None, mode: ContentMode::Sequence, ref_info: (1243, 1245)}, // DEADLINE-SUPERVISION
    /* 1088 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (1111, 1117), attributes_ver: 5294, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // CHECKPOINT-TRANSITION-REF
    /* 1089 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (1111, 1117), attributes_ver: 4093, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // TRANSITION-REF
    /* 1090 */ ElementSpec {sub_elements: (18299, 18304), sub_element_ver: 841, attributes: (147, 154), attributes_ver: 814, character_data: None, mode: ContentMode::Sequence, ref_info: (1245, 1246)}, // DEF-ITEM
    /* 1091 */ ElementSpec {sub_elements: (19640, 19642), sub_element_ver: 22, attributes: (57, 63), attributes_ver: 621, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // DEF-LIST
    /* 1092 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 134, character_data: Some(215), mode: ContentMode::Characters, ref_info: (0, 0)}, // DEFAULT-VALUE-HANDLING
    /* 1093 */ ElementSpec {sub_elements: (19642, 19644), sub_element_ver: 22, attributes: (0, 2), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // DEFAULT-VALUE-ELEMENT
    /* 1094 */ ElementSpec {sub_elements: (18304, 18309), sub_element_ver: 799, attributes: (0, 2), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // DELEGATED-PORT-ANNOTATION
    /* 1095 */ ElementSpec {sub_elements: (11466, 11478), sub_element_ver: 1082, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (1246, 1251)}, // DELEGATION-SW-CONNECTOR
    /* 1096 */ ElementSpec {sub_elements: (19644, 19646), sub_element_ver: 22, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Choice, ref_info: (0, 0)}, // INNER-PORT-IREF
    /* 1097 */ ElementSpec {sub_elements: (13409, 13420), sub_element_ver: 841, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (1251, 1252)}, // DEPENDENCY-ON-ARTIFACT
    /* 1098 */ ElementSpec {sub_elements: (20409, 20410), sub_element_ver: 7, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // USAGES
    /* 1099 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 22, character_data: Some(217), mode: ContentMode::Characters, ref_info: (0, 0)}, // USAGE
    /* 1100 */ ElementSpec {sub_elements: (11478, 11490), sub_element_ver: 7466, attributes: (115, 118), attributes_ver: 6748, character_data: None, mode: ContentMode::Sequence, ref_info: (1252, 1263)}, // DETERMINISTIC-CLIENT
    /* 1101 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (1117, 1123), attributes_ver: 7930, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // DETERMINISTIC-SYNC-MASTER-REF
    /* 1102 */ ElementSpec {sub_elements: (18659, 18663), sub_element_ver: 6748, attributes: (0, 2), attributes_ver: 6748, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // INIT-RESOURCE, K-INIT-RESOURCE, K-RUN-RESOURCE, RUN-RESOURCE
    /* 1103 */ ElementSpec {sub_elements: (9500, 9513), sub_element_ver: 6748, attributes: (115, 118), attributes_ver: 6748, character_data: None, mode: ContentMode::Sequence, ref_info: (1263, 1264)}, // DETERMINISTIC-CLIENT-RESOURCE-NEEDS
    /* 1104 */ ElementSpec {sub_elements: (19646, 19648), sub_element_ver: 3299, attributes: (0, 2), attributes_ver: 3299, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // DETERMINISTIC-SYNC-M-OUT-OF-N
    /* 1105 */ ElementSpec {sub_elements: (15314, 15324), sub_element_ver: 7930, attributes: (115, 118), attributes_ver: 7930, character_data: None, mode: ContentMode::Sequence, ref_info: (1264, 1271)}, // DETERMINISTIC-SYNC-MASTER
    /* 1106 */ ElementSpec {sub_elements: (13420, 13431), sub_element_ver: 7930, attributes: (115, 118), attributes_ver: 7930, character_data: None, mode: ContentMode::Sequence, ref_info: (1271, 1277)}, // DETERMINISTIC-SYNC-MASTER-TO-TIME-BASE-CONSUMER-MAPPING
    /* 1107 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (1123, 1129), attributes_ver: 7930, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // TIME-BASE-CONSUMER-REF
    /* 1108 */ ElementSpec {sub_elements: (20410, 20411), sub_element_ver: 119, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Choice, ref_info: (0, 0)}, // VERIFICATION-METHOD
    /* 1109 */ ElementSpec {sub_elements: (14817, 14827), sub_element_ver: 3276, attributes: (115, 118), attributes_ver: 192, character_data: None, mode: ContentMode::Sequence, ref_info: (1277, 1279)}, // DEVELOPMENT-ERROR
    /* 1110 */ ElementSpec {sub_elements: (19648, 19650), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 0, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // DHCP-ADDRESS-ASSIGNMENT, DHCP-SERVER-CONFIGURATION
    /* 1111 */ ElementSpec {sub_elements: (17979, 17985), sub_element_ver: 500, attributes: (0, 2), attributes_ver: 77, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // DHCP-PROPS
    /* 1112 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (3735, 3739), attributes_ver: 1026, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // BSW-MODULE-ENTRY-REF
    /* 1113 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (3739, 3743), attributes_ver: 1026, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // DIAG-FAULT-DETECTION-COUNTER-PORT-REF
    /* 1114 */ ElementSpec {sub_elements: (5035, 5052), sub_element_ver: 4397, attributes: (115, 118), attributes_ver: 871, character_data: None, mode: ContentMode::Sequence, ref_info: (1279, 1281)}, // DIAG-EVENT-DEBOUNCE-COUNTER-BASED
    /* 1115 */ ElementSpec {sub_elements: (777, 785), sub_element_ver: 2204, attributes: (115, 118), attributes_ver: 871, character_data: None, mode: ContentMode::Sequence, ref_info: (1281, 1283)}, // DIAG-EVENT-DEBOUNCE-MONITOR-INTERNAL
    /* 1116 */ ElementSpec {sub_elements: (13431, 13442), sub_element_ver: 4397, attributes: (115, 118), attributes_ver: 871, character_data: None, mode: ContentMode::Sequence, ref_info: (1283, 1285)}, // DIAG-EVENT-DEBOUNCE-TIME-BASED
    /* 1117 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 22, character_data: Some(220), mode: ContentMode::Characters, ref_info: (0, 0)}, // DIAG-PDU-TYPE
    /* 1118 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 796, character_data: Some(221), mode: ContentMode::Characters, ref_info: (0, 0)}, // DIAG-REQUIREMENT
    /* 1119 */ ElementSpec {sub_elements: (20411, 20412), sub_element_ver: 43, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // DATA-ELEMENTS
    /* 1120 */ ElementSpec {sub_elements: (6748, 6763), sub_element_ver: 5508, attributes: (115, 118), attributes_ver: 140, character_data: None, mode: ContentMode::Sequence, ref_info: (1285, 1290)}, // DIAGNOSTIC-ACCESS-PERMISSION
    /* 1121 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (1129, 1135), attributes_ver: 4093, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // AUTHENTICATION-ROLE-REF
    /* 1122 */ ElementSpec {sub_elements: (20412, 20413), sub_element_ver: 20, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // AUTHENTICATION-ROLE-REFS
    /* 1123 */ ElementSpec {sub_elements: (20413, 20414), sub_element_ver: 43, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // DIAGNOSTIC-SESSION-REFS
    /* 1124 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (1135, 1141), attributes_ver: 9325, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // ENVIRONMENTAL-CONDITION-REF
    /* 1125 */ ElementSpec {sub_elements: (20414, 20415), sub_element_ver: 43, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // SECURITY-LEVEL-REFS
    /* 1126 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (1141, 1147), attributes_ver: 3664, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // SOVD-LOCK-REF
    /* 1127 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 120, character_data: Some(224), mode: ContentMode::Characters, ref_info: (0, 0)}, // ACCESS-PERMISSION-VALIDITY
    /* 1128 */ ElementSpec {sub_elements: (13442, 13453), sub_element_ver: 2034, attributes: (115, 118), attributes_ver: 140, character_data: None, mode: ContentMode::Sequence, ref_info: (1290, 1295)}, // DIAGNOSTIC-AGING
    /* 1129 */ ElementSpec {sub_elements: (20415, 20416), sub_element_ver: 43, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // AGING-CYCLES
    /* 1130 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 22, character_data: Some(226), mode: ContentMode::Characters, ref_info: (0, 0)}, // AUDIENCE
    /* 1131 */ ElementSpec {sub_elements: (13453, 13464), sub_element_ver: 4093, attributes: (115, 118), attributes_ver: 81, character_data: None, mode: ContentMode::Sequence, ref_info: (1295, 1300)}, // DIAGNOSTIC-AUTH-ROLE
    /* 1132 */ ElementSpec {sub_elements: (20416, 20417), sub_element_ver: 16, attributes: (0, 2), attributes_ver: 123, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // AUTHENTICATION-ENABLED
    /* 1133 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (1129, 1135), attributes_ver: 230, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // AUTH-ROLE-REF, AUTHENTICATION-ROLE-REF
    /* 1134 */ ElementSpec {sub_elements: (20417, 20418), sub_element_ver: 16, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // AUTHENTICATION-ROLE-REFS
    /* 1135 */ ElementSpec {sub_elements: (9513, 9526), sub_element_ver: 1514, attributes: (115, 118), attributes_ver: 230, character_data: None, mode: ContentMode::Sequence, ref_info: (1300, 1307)}, // DIAGNOSTIC-AUTH-TRANSMIT-CERTIFICATE
    /* 1136 */ ElementSpec {sub_elements: (20418, 20419), sub_element_ver: 16, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // CERTIFICATE-EVALUATIONS
    /* 1137 */ ElementSpec {sub_elements: (15324, 15334), sub_element_ver: 1502, attributes: (115, 118), attributes_ver: 230, character_data: None, mode: ContentMode::Sequence, ref_info: (1307, 1308)}, // DIAGNOSTIC-AUTH-TRANSMIT-CERTIFICATE-EVALUATION
    /* 1138 */ ElementSpec {sub_elements: (9526, 9539), sub_element_ver: 1514, attributes: (115, 118), attributes_ver: 230, character_data: None, mode: ContentMode::Sequence, ref_info: (1308, 1314)}, // DIAGNOSTIC-AUTH-TRANSMIT-CERTIFICATE-MAPPING
    /* 1139 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (1147, 1153), attributes_ver: 230, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // CRYPTO-SERVICE-CERTIFICATE-REF
    /* 1140 */ ElementSpec {sub_elements: (20419, 20420), sub_element_ver: 16, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // CRYPTO-SERVICE-CERTIFICATE-REFS
    /* 1141 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (1153, 1159), attributes_ver: 230, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // SERVICE-INSTANCE-REF
    /* 1142 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (1159, 1165), attributes_ver: 4093, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // AUTHENTICATION-CLASS-REF
    /* 1143 */ ElementSpec {sub_elements: (4031, 4042), sub_element_ver: 4093, attributes: (115, 118), attributes_ver: 81, character_data: None, mode: ContentMode::Sequence, ref_info: (1314, 1320)}, // DIAGNOSTIC-AUTHENTICATION-CLASS
    /* 1144 */ ElementSpec {sub_elements: (11490, 11502), sub_element_ver: 4093, attributes: (115, 118), attributes_ver: 81, character_data: None, mode: ContentMode::Sequence, ref_info: (1320, 1327)}, // DIAGNOSTIC-AUTHENTICATION-CONFIGURATION
    /* 1145 */ ElementSpec {sub_elements: (4967, 4981), sub_element_ver: 4093, attributes: (115, 118), attributes_ver: 81, character_data: None, mode: ContentMode::Sequence, ref_info: (1327, 1337)}, // DIAGNOSTIC-AUTHENTICATION-INTERFACE
    /* 1146 */ ElementSpec {sub_elements: (6763, 6778), sub_element_ver: 5523, attributes: (115, 118), attributes_ver: 81, character_data: None, mode: ContentMode::Sequence, ref_info: (1337, 1344)}, // DIAGNOSTIC-AUTHENTICATION-PORT-MAPPING
    /* 1147 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (1165, 1171), attributes_ver: 4093, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // DIAGNOSTIC-AUTHENTICATION-REF
    /* 1148 */ ElementSpec {sub_elements: (20420, 20421), sub_element_ver: 7, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // AUDIENCES
    /* 1149 */ ElementSpec {sub_elements: (15334, 15344), sub_element_ver: 2104, attributes: (115, 118), attributes_ver: 9, character_data: None, mode: ContentMode::Sequence, ref_info: (1344, 1350)}, // DIAGNOSTIC-CLEAR-CONDITION
    /* 1150 */ ElementSpec {sub_elements: (15344, 15354), sub_element_ver: 2104, attributes: (115, 118), attributes_ver: 9, character_data: None, mode: ContentMode::Sequence, ref_info: (1350, 1356)}, // DIAGNOSTIC-CLEAR-CONDITION-GROUP
    /* 1151 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (1171, 1177), attributes_ver: 1187, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // CLEAR-CONDITION-REF
    /* 1152 */ ElementSpec {sub_elements: (20421, 20422), sub_element_ver: 9, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // CLEAR-CONDITION-REFS
    /* 1153 */ ElementSpec {sub_elements: (6823, 6834), sub_element_ver: 1784, attributes: (115, 118), attributes_ver: 48, character_data: None, mode: ContentMode::Sequence, ref_info: (1356, 1359)}, // DIAGNOSTIC-CLEAR-CONDITION-NEEDS
    /* 1154 */ ElementSpec {sub_elements: (6778, 6793), sub_element_ver: 5538, attributes: (115, 118), attributes_ver: 48, character_data: None, mode: ContentMode::Sequence, ref_info: (1359, 1366)}, // DIAGNOSTIC-CLEAR-CONDITION-PORT-MAPPING
    /* 1155 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (1171, 1177), attributes_ver: 48, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // CLEAR-CONDITION-REF
    /* 1156 */ ElementSpec {sub_elements: (13464, 13475), sub_element_ver: 2034, attributes: (115, 118), attributes_ver: 140, character_data: None, mode: ContentMode::Sequence, ref_info: (1366, 1372)}, // DIAGNOSTIC-CLEAR-DIAGNOSTIC-INFORMATION
    /* 1157 */ ElementSpec {sub_elements: (4031, 4042), sub_element_ver: 2034, attributes: (115, 118), attributes_ver: 140, character_data: None, mode: ContentMode::Sequence, ref_info: (1372, 1378)}, // DIAGNOSTIC-CLEAR-DIAGNOSTIC-INFORMATION-CLASS
    /* 1158 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (1177, 1183), attributes_ver: 9331, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // CLEAR-DIAGNOSTIC-INFORMATION-CLASS-REF
    /* 1159 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 120, character_data: Some(234), mode: ContentMode::Characters, ref_info: (0, 0)}, // CLEAR-DTC-LIMITATION
    /* 1160 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 301, character_data: Some(235), mode: ContentMode::Characters, ref_info: (0, 0)}, // NOTIFICATION-TIME
    /* 1161 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 77, character_data: Some(236), mode: ContentMode::Characters, ref_info: (0, 0)}, // CLEAR-EVENT-ALLOWED-BEHAVIOR
    /* 1162 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 120, character_data: Some(237), mode: ContentMode::Characters, ref_info: (0, 0)}, // CLEAR-EVENT-BEHAVIOR
    /* 1163 */ ElementSpec {sub_elements: (13475, 13486), sub_element_ver: 3276, attributes: (115, 118), attributes_ver: 192, character_data: None, mode: ContentMode::Sequence, ref_info: (1378, 1384)}, // DIAGNOSTIC-CLEAR-RESET-EMISSION-RELATED-INFO
    /* 1164 */ ElementSpec {sub_elements: (4031, 4042), sub_element_ver: 3276, attributes: (115, 118), attributes_ver: 192, character_data: None, mode: ContentMode::Sequence, ref_info: (1384, 1390)}, // DIAGNOSTIC-CLEAR-RESET-EMISSION-RELATED-INFO-CLASS
    /* 1165 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (1183, 1189), attributes_ver: 9325, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // CLEAR-RESET-EMISSION-RELATED-DIAGNOSTIC-INFO-CLASS-REF
    /* 1166 */ ElementSpec {sub_elements: (11502, 11514), sub_element_ver: 2034, attributes: (115, 118), attributes_ver: 140, character_data: None, mode: ContentMode::Sequence, ref_info: (1390, 1396)}, // DIAGNOSTIC-COM-CONTROL
    /* 1167 */ ElementSpec {sub_elements: (6793, 6808), sub_element_ver: 5553, attributes: (115, 118), attributes_ver: 140, character_data: None, mode: ContentMode::Sequence, ref_info: (1396, 1402)}, // DIAGNOSTIC-COM-CONTROL-CLASS
    /* 1168 */ ElementSpec {sub_elements: (20422, 20423), sub_element_ver: 43, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // ALL-CHANNELS-REFS
    /* 1169 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (919, 925), attributes_ver: 230, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // ALL-PHYSICAL-CHANNELS-REF, SPECIFIC-PHYSICAL-CHANNEL-REF, SUB-NODE-PHYSICAL-CHANNEL-REF
    /* 1170 */ ElementSpec {sub_elements: (20423, 20424), sub_element_ver: 16, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // ALL-PHYSICAL-CHANNELS
    /* 1171 */ ElementSpec {sub_elements: (20424, 20425), sub_element_ver: 43, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // SPECIFIC-CHANNELS
    /* 1172 */ ElementSpec {sub_elements: (20425, 20426), sub_element_ver: 43, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // SUB-NODE-CHANNELS
    /* 1173 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (1189, 1195), attributes_ver: 9331, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // COM-CONTROL-CLASS-REF
    /* 1174 */ ElementSpec {sub_elements: (4967, 4981), sub_element_ver: 4093, attributes: (115, 118), attributes_ver: 81, character_data: None, mode: ContentMode::Sequence, ref_info: (1402, 1412)}, // DIAGNOSTIC-COM-CONTROL-INTERFACE
    /* 1175 */ ElementSpec {sub_elements: (19133, 19136), sub_element_ver: 2001, attributes: (0, 2), attributes_ver: 120, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // DIAGNOSTIC-COM-CONTROL-SPECIFIC-CHANNEL
    /* 1176 */ ElementSpec {sub_elements: (19136, 19139), sub_element_ver: 2004, attributes: (0, 2), attributes_ver: 120, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // DIAGNOSTIC-COM-CONTROL-SUB-NODE-CHANNEL
    /* 1177 */ ElementSpec {sub_elements: (19650, 19652), sub_element_ver: 120, attributes: (0, 2), attributes_ver: 120, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // DIAGNOSTIC-COMMON-ELEMENT-REF-CONDITIONAL
    /* 1178 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (1195, 1201), attributes_ver: 9331, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // DIAGNOSTIC-COMMON-ELEMENT-REF
    /* 1179 */ ElementSpec {sub_elements: (20426, 20427), sub_element_ver: 43, attributes: (0, 2), attributes_ver: 120, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // COMMON-PROPERTIES
    /* 1180 */ ElementSpec {sub_elements: (2270, 2296), sub_element_ver: 2001, attributes: (0, 2), attributes_ver: 120, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // DIAGNOSTIC-COMMON-PROPS-CONDITIONAL
    /* 1181 */ ElementSpec {sub_elements: (20427, 20428), sub_element_ver: 43, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // DEBOUNCE-ALGORITHM-PROPSS
    /* 1182 */ ElementSpec {sub_elements: (19139, 19142), sub_element_ver: 230, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // DIAGNOSTIC-ADDRESSES
    /* 1183 */ ElementSpec {sub_elements: (20428, 20429), sub_element_ver: 16, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // EXTERNAL-AUTHENTICATIONS
    /* 1184 */ ElementSpec {sub_elements: (20429, 20430), sub_element_ver: 43, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // DIAGNOSTIC-COMMON-PROPS-VARIANTS
    /* 1185 */ ElementSpec {sub_elements: (9539, 9552), sub_element_ver: 6761, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (1412, 1415)}, // DIAGNOSTIC-COMMUNICATION-MANAGER-NEEDS
    /* 1186 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 134, character_data: Some(241), mode: ContentMode::Characters, ref_info: (0, 0)}, // COMPARE-TYPE
    /* 1187 */ ElementSpec {sub_elements: (6823, 6834), sub_element_ver: 3276, attributes: (115, 118), attributes_ver: 192, character_data: None, mode: ContentMode::Sequence, ref_info: (1415, 1418)}, // DIAGNOSTIC-COMPONENT-NEEDS
    /* 1188 */ ElementSpec {sub_elements: (5069, 5083), sub_element_ver: 4431, attributes: (115, 118), attributes_ver: 48, character_data: None, mode: ContentMode::Sequence, ref_info: (1418, 1428)}, // DIAGNOSTIC-CONDITION-INTERFACE
    /* 1189 */ ElementSpec {sub_elements: (8324, 8338), sub_element_ver: 6321, attributes: (115, 118), attributes_ver: 140, character_data: None, mode: ContentMode::Sequence, ref_info: (1428, 1429)}, // DIAGNOSTIC-CONNECTED-INDICATOR
    /* 1190 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 120, character_data: Some(243), mode: ContentMode::Characters, ref_info: (0, 0)}, // BEHAVIOR
    /* 1191 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (1201, 1207), attributes_ver: 9331, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // DIAGNOSTIC-OPERATION-CYCLE-REF, HEALING-CYCLE-REF, OPERATION-CYCLE-REF
    /* 1192 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (1207, 1213), attributes_ver: 9331, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // INDICATOR-REF
    /* 1193 */ ElementSpec {sub_elements: (8338, 8352), sub_element_ver: 2034, attributes: (115, 118), attributes_ver: 140, character_data: None, mode: ContentMode::Sequence, ref_info: (1429, 1433)}, // DIAGNOSTIC-CONNECTION
    /* 1194 */ ElementSpec {sub_elements: (20430, 20431), sub_element_ver: 43, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // FUNCTIONAL-REQUEST-REFS
    /* 1195 */ ElementSpec {sub_elements: (20431, 20432), sub_element_ver: 43, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // PERIODIC-RESPONSE-UUDT-REFS
    /* 1196 */ ElementSpec {sub_elements: (19652, 19654), sub_element_ver: 120, attributes: (0, 2), attributes_ver: 120, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // DIAGNOSTIC-CONNECTION-REF-CONDITIONAL
    /* 1197 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (1213, 1219), attributes_ver: 9331, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // DIAGNOSTIC-CONNECTION-REF
    /* 1198 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (1219, 1225), attributes_ver: 9331, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // FUNCTIONAL-REQUEST-REF, PHYSICAL-REQUEST-REF, RESPONSE-ON-EVENT-REF, RESPONSE-REF
    /* 1199 */ ElementSpec {sub_elements: (9552, 9565), sub_element_ver: 2034, attributes: (115, 118), attributes_ver: 140, character_data: None, mode: ContentMode::Sequence, ref_info: (1433, 1437)}, // DIAGNOSTIC-CONTRIBUTION-SET
    /* 1200 */ ElementSpec {sub_elements: (20432, 20433), sub_element_ver: 43, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // ECU-INSTANCE-REFS
    /* 1201 */ ElementSpec {sub_elements: (20433, 20434), sub_element_ver: 43, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // ELEMENTS
    /* 1202 */ ElementSpec {sub_elements: (20434, 20435), sub_element_ver: 43, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // SERVICE-TABLES
    /* 1203 */ ElementSpec {sub_elements: (11514, 11526), sub_element_ver: 2034, attributes: (115, 118), attributes_ver: 140, character_data: None, mode: ContentMode::Sequence, ref_info: (1437, 1443)}, // DIAGNOSTIC-CONTROL-DTC-SETTING
    /* 1204 */ ElementSpec {sub_elements: (11526, 11538), sub_element_ver: 2034, attributes: (115, 118), attributes_ver: 140, character_data: None, mode: ContentMode::Sequence, ref_info: (1443, 1449)}, // DIAGNOSTIC-CONTROL-DTC-SETTING-CLASS
    /* 1205 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (1225, 1231), attributes_ver: 9331, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // DTC-SETTING-CLASS-REF
    /* 1206 */ ElementSpec {sub_elements: (19654, 19656), sub_element_ver: 64, attributes: (0, 2), attributes_ver: 64, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // DIAGNOSTIC-CONTROL-ENABLE-MASK-BIT
    /* 1207 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (1231, 1237), attributes_ver: 1642, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // CONTROLLED-DATA-ELEMENT-REF
    /* 1208 */ ElementSpec {sub_elements: (20435, 20436), sub_element_ver: 64, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // CONTROLLED-DATA-ELEMENT-REFS
    /* 1209 */ ElementSpec {sub_elements: (6823, 6834), sub_element_ver: 3276, attributes: (115, 118), attributes_ver: 192, character_data: None, mode: ContentMode::Sequence, ref_info: (1449, 1452)}, // DIAGNOSTIC-CONTROL-NEEDS
    /* 1210 */ ElementSpec {sub_elements: (11538, 11550), sub_element_ver: 2034, attributes: (115, 118), attributes_ver: 140, character_data: None, mode: ContentMode::Sequence, ref_info: (1452, 1458)}, // DIAGNOSTIC-CUSTOM-SERVICE-CLASS
    /* 1211 */ ElementSpec {sub_elements: (13486, 13497), sub_element_ver: 3531, attributes: (115, 118), attributes_ver: 9, character_data: None, mode: ContentMode::Sequence, ref_info: (1458, 1464)}, // DIAGNOSTIC-CUSTOM-SERVICE-INSTANCE
    /* 1212 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (1237, 1243), attributes_ver: 1187, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // CUSTOM-SERVICE-CLASS-REF
    /* 1213 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (1243, 1249), attributes_ver: 9331, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // DATA-IDENTIFIER-REF
    /* 1214 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 120, character_data: Some(248), mode: ContentMode::Characters, ref_info: (0, 0)}, // ENVIRONMENT-DATA-CAPTURE
    /* 1215 */ ElementSpec {sub_elements: (19656, 19658), sub_element_ver: 120, attributes: (0, 2), attributes_ver: 120, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // DIAGNOSTIC-DATA-CHANGE-TRIGGER
    /* 1216 */ ElementSpec {sub_elements: (9565, 9578), sub_element_ver: 6774, attributes: (115, 118), attributes_ver: 140, character_data: None, mode: ContentMode::Sequence, ref_info: (1464, 1465)}, // DIAGNOSTIC-DATA-ELEMENT
    /* 1217 */ ElementSpec {sub_elements: (5868, 5884), sub_element_ver: 4968, attributes: (115, 118), attributes_ver: 48, character_data: None, mode: ContentMode::Sequence, ref_info: (1465, 1476)}, // DIAGNOSTIC-DATA-ELEMENT-INTERFACE
    /* 1218 */ ElementSpec {sub_elements: (8352, 8366), sub_element_ver: 6335, attributes: (115, 118), attributes_ver: 140, character_data: None, mode: ContentMode::Sequence, ref_info: (1476, 1482)}, // DIAGNOSTIC-DATA-IDENTIFIER
    /* 1219 */ ElementSpec {sub_elements: (5069, 5083), sub_element_ver: 4431, attributes: (115, 118), attributes_ver: 48, character_data: None, mode: ContentMode::Sequence, ref_info: (1482, 1493)}, // DIAGNOSTIC-DATA-IDENTIFIER-GENERIC-INTERFACE
    /* 1220 */ ElementSpec {sub_elements: (5884, 5900), sub_element_ver: 4431, attributes: (115, 118), attributes_ver: 48, character_data: None, mode: ContentMode::Sequence, ref_info: (1493, 1504)}, // DIAGNOSTIC-DATA-IDENTIFIER-INTERFACE
    /* 1221 */ ElementSpec {sub_elements: (15354, 15364), sub_element_ver: 1317, attributes: (115, 118), attributes_ver: 140, character_data: None, mode: ContentMode::Sequence, ref_info: (1504, 1509)}, // DIAGNOSTIC-DATA-IDENTIFIER-SET
    /* 1222 */ ElementSpec {sub_elements: (20436, 20437), sub_element_ver: 43, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // DATA-IDENTIFIER-REFS
    /* 1223 */ ElementSpec {sub_elements: (19658, 19660), sub_element_ver: 64, attributes: (0, 2), attributes_ver: 64, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // DIAGNOSTIC-DATA-IDENTIFIER-SET-REF-CONDITIONAL
    /* 1224 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (1249, 1255), attributes_ver: 1642, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // DIAGNOSTIC-DATA-IDENTIFIER-SET-REF
    /* 1225 */ ElementSpec {sub_elements: (6808, 6823), sub_element_ver: 4093, attributes: (115, 118), attributes_ver: 81, character_data: None, mode: ContentMode::Sequence, ref_info: (1509, 1516)}, // DIAGNOSTIC-DATA-PORT-MAPPING
    /* 1226 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (1231, 1237), attributes_ver: 4093, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // DIAGNOSTIC-DATA-ELEMENT-REF
    /* 1227 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (1255, 1261), attributes_ver: 4093, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // DIAGNOSTIC-DATA-IDENTIFIER-REF
    /* 1228 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (175, 181), attributes_ver: 4093, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // PROCESS-REF
    /* 1229 */ ElementSpec {sub_elements: (13497, 13508), sub_element_ver: 2034, attributes: (115, 118), attributes_ver: 140, character_data: None, mode: ContentMode::Sequence, ref_info: (1516, 1523)}, // DIAGNOSTIC-DATA-TRANSFER
    /* 1230 */ ElementSpec {sub_elements: (4031, 4042), sub_element_ver: 2034, attributes: (115, 118), attributes_ver: 140, character_data: None, mode: ContentMode::Sequence, ref_info: (1523, 1529)}, // DIAGNOSTIC-DATA-TRANSFER-CLASS
    /* 1231 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (1261, 1267), attributes_ver: 9331, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // DATA-TRANSFER-CLASS-REF
    /* 1232 */ ElementSpec {sub_elements: (11490, 11502), sub_element_ver: 4093, attributes: (115, 118), attributes_ver: 81, character_data: None, mode: ContentMode::Sequence, ref_info: (1529, 1536)}, // DIAGNOSTIC-DE-AUTHENTICATION
    /* 1233 */ ElementSpec {sub_elements: (11550, 11562), sub_element_ver: 7478, attributes: (115, 118), attributes_ver: 120, character_data: None, mode: ContentMode::Sequence, ref_info: (1536, 1537)}, // DIAGNOSTIC-DEBOUNCE-ALGORITHM-PROPS
    /* 1234 */ ElementSpec {sub_elements: (13527, 13530), sub_element_ver: 140, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Choice, ref_info: (0, 0)}, // DEBOUNCE-ALGORITHM
    /* 1235 */ ElementSpec {sub_elements: (9578, 9591), sub_element_ver: 3550, attributes: (115, 118), attributes_ver: 140, character_data: None, mode: ContentMode::Sequence, ref_info: (1537, 1543)}, // DIAGNOSTIC-DEM-PROVIDED-DATA-MAPPING
    /* 1236 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (1231, 1237), attributes_ver: 9331, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // DATA-ELEMENT-REF, DIAGNOSTIC-DATA-ELEMENT-REF
    /* 1237 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 9, character_data: Some(254), mode: ContentMode::Characters, ref_info: (0, 0)}, // DENOMINATOR-CONDITION, DENOMINATOR-GROUP
    /* 1238 */ ElementSpec {sub_elements: (7423, 7437), sub_element_ver: 3087, attributes: (115, 118), attributes_ver: 909, character_data: None, mode: ContentMode::Sequence, ref_info: (1543, 1553)}, // DIAGNOSTIC-DO-IP-ACTIVATION-LINE-INTERFACE
    /* 1239 */ ElementSpec {sub_elements: (8366, 8380), sub_element_ver: 3027, attributes: (115, 118), attributes_ver: 12, character_data: None, mode: ContentMode::Sequence, ref_info: (1553, 1561)}, // DIAGNOSTIC-DO-IP-ACTIVATION-LINE-PORT-MAPPING
    /* 1240 */ ElementSpec {sub_elements: (7093, 7107), sub_element_ver: 3664, attributes: (115, 118), attributes_ver: 463, character_data: None, mode: ContentMode::Sequence, ref_info: (1561, 1571)}, // DIAGNOSTIC-DO-IP-ENTITY-IDENTIFICATION-INTERFACE
    /* 1241 */ ElementSpec {sub_elements: (8366, 8380), sub_element_ver: 3027, attributes: (115, 118), attributes_ver: 12, character_data: None, mode: ContentMode::Sequence, ref_info: (1571, 1579)}, // DIAGNOSTIC-DO-IP-ENTITY-IDENTIFICATION-PORT-MAPPING
    /* 1242 */ ElementSpec {sub_elements: (5069, 5083), sub_element_ver: 4431, attributes: (115, 118), attributes_ver: 48, character_data: None, mode: ContentMode::Sequence, ref_info: (1579, 1589)}, // DIAGNOSTIC-DO-IP-GROUP-IDENTIFICATION-INTERFACE
    /* 1243 */ ElementSpec {sub_elements: (8366, 8380), sub_element_ver: 3027, attributes: (115, 118), attributes_ver: 12, character_data: None, mode: ContentMode::Sequence, ref_info: (1589, 1597)}, // DIAGNOSTIC-DO-IP-GROUP-IDENTIFICATION-PORT-MAPPING
    /* 1244 */ ElementSpec {sub_elements: (5069, 5083), sub_element_ver: 4431, attributes: (115, 118), attributes_ver: 48, character_data: None, mode: ContentMode::Sequence, ref_info: (1597, 1607)}, // DIAGNOSTIC-DO-IP-POWER-MODE-INTERFACE
    /* 1245 */ ElementSpec {sub_elements: (8366, 8380), sub_element_ver: 3027, attributes: (115, 118), attributes_ver: 12, character_data: None, mode: ContentMode::Sequence, ref_info: (1607, 1615)}, // DIAGNOSTIC-DO-IP-POWER-MODE-PORT-MAPPING
    /* 1246 */ ElementSpec {sub_elements: (7423, 7437), sub_element_ver: 3087, attributes: (115, 118), attributes_ver: 909, character_data: None, mode: ContentMode::Sequence, ref_info: (1615, 1625)}, // DIAGNOSTIC-DO-IP-TRIGGER-VEHICLE-ANNOUNCEMENT-INTERFACE
    /* 1247 */ ElementSpec {sub_elements: (8366, 8380), sub_element_ver: 3027, attributes: (115, 118), attributes_ver: 12, character_data: None, mode: ContentMode::Sequence, ref_info: (1625, 1633)}, // DIAGNOSTIC-DO-IP-TRIGGER-VEHICLE-ANNOUNCEMENT-PORT-MAPPING
    /* 1248 */ ElementSpec {sub_elements: (5069, 5083), sub_element_ver: 4431, attributes: (115, 118), attributes_ver: 48, character_data: None, mode: ContentMode::Sequence, ref_info: (1633, 1643)}, // DIAGNOSTIC-DOWNLOAD-INTERFACE
    /* 1249 */ ElementSpec {sub_elements: (19660, 19662), sub_element_ver: 2538, attributes: (0, 2), attributes_ver: 120, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // DIAGNOSTIC-DTC-CHANGE-TRIGGER
    /* 1250 */ ElementSpec {sub_elements: (5069, 5083), sub_element_ver: 4431, attributes: (115, 118), attributes_ver: 48, character_data: None, mode: ContentMode::Sequence, ref_info: (1643, 1653)}, // DIAGNOSTIC-DTC-INFORMATION-INTERFACE
    /* 1251 */ ElementSpec {sub_elements: (8352, 8362), sub_element_ver: 1317, attributes: (115, 118), attributes_ver: 140, character_data: None, mode: ContentMode::Sequence, ref_info: (1653, 1659)}, // DIAGNOSTIC-DYNAMIC-DATA-IDENTIFIER
    /* 1252 */ ElementSpec {sub_elements: (9591, 9604), sub_element_ver: 2034, attributes: (115, 118), attributes_ver: 140, character_data: None, mode: ContentMode::Sequence, ref_info: (1659, 1665)}, // DIAGNOSTIC-DYNAMICALLY-DEFINE-DATA-IDENTIFIER
    /* 1253 */ ElementSpec {sub_elements: (8380, 8394), sub_element_ver: 6349, attributes: (115, 118), attributes_ver: 140, character_data: None, mode: ContentMode::Sequence, ref_info: (1665, 1671)}, // DIAGNOSTIC-DYNAMICALLY-DEFINE-DATA-IDENTIFIER-CLASS
    /* 1254 */ ElementSpec {sub_elements: (20437, 20438), sub_element_ver: 21, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // SUBFUNCTIONS
    /* 1255 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (1267, 1273), attributes_ver: 9331, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // DATA-IDENTIFIER-REF
    /* 1256 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (1273, 1279), attributes_ver: 9331, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // DYNAMICALLY-DEFINE-DATA-IDENTIFIER-CLASS-REF
    /* 1257 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 134, character_data: Some(257), mode: ContentMode::Characters, ref_info: (0, 0)}, // SUBFUNCTION
    /* 1258 */ ElementSpec {sub_elements: (9604, 9617), sub_element_ver: 3816, attributes: (115, 118), attributes_ver: 192, character_data: None, mode: ContentMode::Sequence, ref_info: (1671, 1676)}, // DIAGNOSTIC-ECU-INSTANCE-PROPS
    /* 1259 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (655, 661), attributes_ver: 9325, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // ECU-INSTANCE-REF
    /* 1260 */ ElementSpec {sub_elements: (20438, 20439), sub_element_ver: 21, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // ECU-INSTANCE-REFS
    /* 1261 */ ElementSpec {sub_elements: (19662, 19664), sub_element_ver: 120, attributes: (0, 2), attributes_ver: 120, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // DIAGNOSTIC-PROPS
    /* 1262 */ ElementSpec {sub_elements: (9617, 9630), sub_element_ver: 2034, attributes: (115, 118), attributes_ver: 140, character_data: None, mode: ContentMode::Sequence, ref_info: (1676, 1682)}, // DIAGNOSTIC-ECU-RESET
    /* 1263 */ ElementSpec {sub_elements: (11562, 11574), sub_element_ver: 6335, attributes: (115, 118), attributes_ver: 140, character_data: None, mode: ContentMode::Sequence, ref_info: (1682, 1688)}, // DIAGNOSTIC-ECU-RESET-CLASS
    /* 1264 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (1279, 1285), attributes_ver: 9331, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // ECU-RESET-CLASS-REF
    /* 1265 */ ElementSpec {sub_elements: (3190, 3204), sub_element_ver: 1927, attributes: (115, 118), attributes_ver: 77, character_data: None, mode: ContentMode::Sequence, ref_info: (1688, 1698)}, // DIAGNOSTIC-ECU-RESET-INTERFACE
    /* 1266 */ ElementSpec {sub_elements: (15334, 15344), sub_element_ver: 1317, attributes: (115, 118), attributes_ver: 140, character_data: None, mode: ContentMode::Sequence, ref_info: (1698, 1704)}, // DIAGNOSTIC-ENABLE-CONDITION
    /* 1267 */ ElementSpec {sub_elements: (15364, 15374), sub_element_ver: 1317, attributes: (115, 118), attributes_ver: 140, character_data: None, mode: ContentMode::Sequence, ref_info: (1704, 1710)}, // DIAGNOSTIC-ENABLE-CONDITION-GROUP
    /* 1268 */ ElementSpec {sub_elements: (20439, 20440), sub_element_ver: 43, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // ENABLE-CONDITIONS
    /* 1269 */ ElementSpec {sub_elements: (11574, 11586), sub_element_ver: 6377, attributes: (115, 118), attributes_ver: 6379, character_data: None, mode: ContentMode::Sequence, ref_info: (1710, 1713)}, // DIAGNOSTIC-ENABLE-CONDITION-NEEDS
    /* 1270 */ ElementSpec {sub_elements: (4555, 4573), sub_element_ver: 4075, attributes: (115, 118), attributes_ver: 140, character_data: None, mode: ContentMode::Sequence, ref_info: (1713, 1720)}, // DIAGNOSTIC-ENABLE-CONDITION-PORT-MAPPING
    /* 1271 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (1285, 1291), attributes_ver: 9331, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // DIAGNOSTIC-ENABLE-CONDITION-REF, ENABLE-CONDITION-REF
    /* 1272 */ ElementSpec {sub_elements: (19664, 19666), sub_element_ver: 120, attributes: (0, 2), attributes_ver: 120, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // DIAGNOSTIC-ENABLE-CONDITION-REF-CONDITIONAL
    /* 1273 */ ElementSpec {sub_elements: (19142, 19145), sub_element_ver: 192, attributes: (0, 2), attributes_ver: 134, character_data: None, mode: ContentMode::Sequence, ref_info: (1720, 1722)}, // DIAGNOSTIC-ENV-BSW-MODE-ELEMENT
    /* 1274 */ ElementSpec {sub_elements: (19145, 19148), sub_element_ver: 192, attributes: (0, 2), attributes_ver: 134, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // DIAGNOSTIC-ENV-CONDITION-FORMULA, FORMULA
    /* 1275 */ ElementSpec {sub_elements: (18663, 18667), sub_element_ver: 4846, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // PARTS
    /* 1276 */ ElementSpec {sub_elements: (19148, 19151), sub_element_ver: 192, attributes: (0, 2), attributes_ver: 134, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // DIAGNOSTIC-ENV-DATA-CONDITION
    /* 1277 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (1231, 1237), attributes_ver: 9325, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // DATA-ELEMENT-REF
    /* 1278 */ ElementSpec {sub_elements: (17985, 17991), sub_element_ver: 3664, attributes: (0, 2), attributes_ver: 301, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // DIAGNOSTIC-ENV-DATA-ELEMENT-CONDITION
    /* 1279 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (175, 181), attributes_ver: 3664, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // PROCESS-REF
    /* 1280 */ ElementSpec {sub_elements: (19666, 19668), sub_element_ver: 134, attributes: (0, 2), attributes_ver: 134, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // DIAGNOSTIC-ENV-MODE-CONDITION
    /* 1281 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (1291, 1297), attributes_ver: 9325, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // MODE-ELEMENT-REF
    /* 1282 */ ElementSpec {sub_elements: (19151, 19154), sub_element_ver: 192, attributes: (0, 2), attributes_ver: 134, character_data: None, mode: ContentMode::Sequence, ref_info: (1722, 1724)}, // DIAGNOSTIC-ENV-SWC-MODE-ELEMENT
    /* 1283 */ ElementSpec {sub_elements: (13508, 13519), sub_element_ver: 3276, attributes: (115, 118), attributes_ver: 192, character_data: None, mode: ContentMode::Sequence, ref_info: (1724, 1729)}, // DIAGNOSTIC-ENVIRONMENTAL-CONDITION
    /* 1284 */ ElementSpec {sub_elements: (19668, 19670), sub_element_ver: 134, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // MODE-ELEMENTS
    /* 1285 */ ElementSpec {sub_elements: (3406, 3427), sub_element_ver: 3048, attributes: (115, 118), attributes_ver: 140, character_data: None, mode: ContentMode::Sequence, ref_info: (1729, 1734)}, // DIAGNOSTIC-EVENT
    /* 1286 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 120, character_data: Some(264), mode: ContentMode::Characters, ref_info: (0, 0)}, // EVENT-CLEAR-ALLOWED
    /* 1287 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 81, character_data: Some(265), mode: ContentMode::Characters, ref_info: (0, 0)}, // TYPE-OF-EVENT-COMBINATION-SUPPORTED
    /* 1288 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 81, character_data: Some(266), mode: ContentMode::Characters, ref_info: (0, 0)}, // EVENT-COMBINATION-REPORTING-BEHAVIOR
    /* 1289 */ ElementSpec {sub_elements: (20440, 20441), sub_element_ver: 43, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // CONNECTED-INDICATORS
    /* 1290 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 120, character_data: Some(267), mode: ContentMode::Characters, ref_info: (0, 0)}, // EVENT-DISPLACEMENT-STRATEGY
    /* 1291 */ ElementSpec {sub_elements: (6823, 6838), sub_element_ver: 5568, attributes: (115, 118), attributes_ver: 0, character_data: None, mode: ContentMode::Sequence, ref_info: (1734, 1737)}, // DIAGNOSTIC-EVENT-INFO-NEEDS
    /* 1292 */ ElementSpec {sub_elements: (5069, 5083), sub_element_ver: 4431, attributes: (115, 118), attributes_ver: 48, character_data: None, mode: ContentMode::Sequence, ref_info: (1737, 1747)}, // DIAGNOSTIC-EVENT-INTERFACE
    /* 1293 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 120, character_data: Some(268), mode: ContentMode::Characters, ref_info: (0, 0)}, // EVENT-KIND
    /* 1294 */ ElementSpec {sub_elements: (2595, 2607), sub_element_ver: 2326, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (1747, 1750)}, // DIAGNOSTIC-EVENT-MANAGER-NEEDS
    /* 1295 */ ElementSpec {sub_elements: (2595, 2619), sub_element_ver: 2326, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (1750, 1753)}, // DIAGNOSTIC-EVENT-NEEDS
    /* 1296 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (1297, 1303), attributes_ver: 9331, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // DEFERRING-FID-REF
    /* 1297 */ ElementSpec {sub_elements: (20441, 20442), sub_element_ver: 43, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // DEFERRING-FID-REFS
    /* 1298 */ ElementSpec {sub_elements: (13519, 13530), sub_element_ver: 7941, attributes: (115, 118), attributes_ver: 617, character_data: None, mode: ContentMode::Choice, ref_info: (1279, 1280)}, // DIAG-EVENT-DEBOUNCE-ALGORITHM
    /* 1299 */ ElementSpec {sub_elements: (20442, 20443), sub_element_ver: 386, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // INHIBITING-SECONDARY-FID-REFS
    /* 1300 */ ElementSpec {sub_elements: (3993, 4012), sub_element_ver: 3550, attributes: (115, 118), attributes_ver: 140, character_data: None, mode: ContentMode::Sequence, ref_info: (1753, 1760)}, // DIAGNOSTIC-EVENT-PORT-MAPPING
    /* 1301 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (1303, 1309), attributes_ver: 9331, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // BSW-SERVICE-DEPENDENCY-REF, MAPPED-BSW-SERVICE-DEPENDENCY-REF
    /* 1302 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (1309, 1315), attributes_ver: 9331, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // DIAGNOSTIC-EVENT-REF
    /* 1303 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (1315, 1321), attributes_ver: 9331, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // MAPPED-FLAT-SWC-SERVICE-DEPENDENCY-REF, SWC-FLAT-SERVICE-DEPENDENCY-REF, TARGET-SWC-SERVICE-DEPENDENCY-REF
    /* 1304 */ ElementSpec {sub_elements: (19670, 19672), sub_element_ver: 64, attributes: (0, 2), attributes_ver: 64, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // DIAGNOSTIC-EVENT-REF-CONDITIONAL
    /* 1305 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (1309, 1315), attributes_ver: 1642, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // DIAGNOSTIC-EVENT-REF
    /* 1306 */ ElementSpec {sub_elements: (9630, 9643), sub_element_ver: 3550, attributes: (115, 118), attributes_ver: 140, character_data: None, mode: ContentMode::Sequence, ref_info: (1760, 1766)}, // DIAGNOSTIC-EVENT-TO-DEBOUNCE-ALGORITHM-MAPPING
    /* 1307 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (1321, 1327), attributes_ver: 9331, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // DEBOUNCE-ALGORITHM-REF
    /* 1308 */ ElementSpec {sub_elements: (9643, 9656), sub_element_ver: 3550, attributes: (115, 118), attributes_ver: 140, character_data: None, mode: ContentMode::Sequence, ref_info: (1766, 1772)}, // DIAGNOSTIC-EVENT-TO-ENABLE-CONDITION-GROUP-MAPPING
    /* 1309 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (1327, 1333), attributes_ver: 9331, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // ENABLE-CONDITION-GROUP-REF
    /* 1310 */ ElementSpec {sub_elements: (9656, 9669), sub_element_ver: 3550, attributes: (115, 118), attributes_ver: 140, character_data: None, mode: ContentMode::Sequence, ref_info: (1772, 1778)}, // DIAGNOSTIC-EVENT-TO-OPERATION-CYCLE-MAPPING
    /* 1311 */ ElementSpec {sub_elements: (9669, 9682), sub_element_ver: 6787, attributes: (115, 118), attributes_ver: 77, character_data: None, mode: ContentMode::Sequence, ref_info: (1778, 1784)}, // DIAGNOSTIC-EVENT-TO-SECURITY-EVENT-MAPPING
    /* 1312 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (1309, 1315), attributes_ver: 500, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // DIAGNOSTIC-EVENT-REF
    /* 1313 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (1333, 1339), attributes_ver: 500, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // SECURITY-EVENT-PROPS-REF, SECURITY-EVENT-REF
    /* 1314 */ ElementSpec {sub_elements: (9682, 9695), sub_element_ver: 3550, attributes: (115, 118), attributes_ver: 140, character_data: None, mode: ContentMode::Sequence, ref_info: (1784, 1790)}, // DIAGNOSTIC-EVENT-TO-STORAGE-CONDITION-GROUP-MAPPING
    /* 1315 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (1339, 1345), attributes_ver: 9331, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // STORAGE-CONDITION-GROUP-REF
    /* 1316 */ ElementSpec {sub_elements: (9695, 9708), sub_element_ver: 6800, attributes: (115, 118), attributes_ver: 9, character_data: None, mode: ContentMode::Sequence, ref_info: (1790, 1796)}, // DIAGNOSTIC-EVENT-TO-TROUBLE-CODE-J-1939-MAPPING
    /* 1317 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (1345, 1351), attributes_ver: 1187, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // TROUBLE-CODE-J-1939-REF
    /* 1318 */ ElementSpec {sub_elements: (9708, 9721), sub_element_ver: 3550, attributes: (115, 118), attributes_ver: 140, character_data: None, mode: ContentMode::Sequence, ref_info: (1796, 1802)}, // DIAGNOSTIC-EVENT-TO-TROUBLE-CODE-UDS-MAPPING
    /* 1319 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (1351, 1357), attributes_ver: 9331, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // TROUBLE-CODE-UDS-REF
    /* 1320 */ ElementSpec {sub_elements: (19672, 19674), sub_element_ver: 120, attributes: (0, 2), attributes_ver: 120, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // DIAGNOSTIC-EVENT-WINDOW
    /* 1321 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 120, character_data: Some(270), mode: ContentMode::Characters, ref_info: (0, 0)}, // EVENT-WINDOW-TIME
    /* 1322 */ ElementSpec {sub_elements: (8394, 8408), sub_element_ver: 6363, attributes: (115, 118), attributes_ver: 140, character_data: None, mode: ContentMode::Sequence, ref_info: (1802, 1807)}, // DIAGNOSTIC-EXTENDED-DATA-RECORD
    /* 1323 */ ElementSpec {sub_elements: (19674, 19676), sub_element_ver: 120, attributes: (0, 2), attributes_ver: 120, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // DIAGNOSTIC-EXTENDED-DATA-RECORD-REF-CONDITIONAL
    /* 1324 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (1357, 1363), attributes_ver: 9331, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // DIAGNOSTIC-EXTENDED-DATA-RECORD-REF
    /* 1325 */ ElementSpec {sub_elements: (18667, 18671), sub_element_ver: 9137, attributes: (0, 2), attributes_ver: 81, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // DIAGNOSTIC-EXTERNAL-AUTHENTICATION-IDENTIFICATION
    /* 1326 */ ElementSpec {sub_elements: (4967, 4981), sub_element_ver: 4093, attributes: (115, 118), attributes_ver: 81, character_data: None, mode: ContentMode::Sequence, ref_info: (1807, 1817)}, // DIAGNOSTIC-EXTERNAL-AUTHENTICATION-INTERFACE
    /* 1327 */ ElementSpec {sub_elements: (8408, 8422), sub_element_ver: 4093, attributes: (115, 118), attributes_ver: 81, character_data: None, mode: ContentMode::Sequence, ref_info: (1817, 1824)}, // DIAGNOSTIC-EXTERNAL-AUTHENTICATION-PORT-MAPPING
    /* 1328 */ ElementSpec {sub_elements: (820, 829), sub_element_ver: 3276, attributes: (115, 118), attributes_ver: 192, character_data: None, mode: ContentMode::Sequence, ref_info: (1824, 1830)}, // DIAGNOSTIC-FIM-ALIAS-EVENT
    /* 1329 */ ElementSpec {sub_elements: (15374, 15384), sub_element_ver: 3276, attributes: (115, 118), attributes_ver: 192, character_data: None, mode: ContentMode::Sequence, ref_info: (1830, 1836)}, // DIAGNOSTIC-FIM-ALIAS-EVENT-GROUP
    /* 1330 */ ElementSpec {sub_elements: (20443, 20444), sub_element_ver: 21, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // GROUPED-ALIAS-EVENT-REFS
    /* 1331 */ ElementSpec {sub_elements: (9721, 9734), sub_element_ver: 5583, attributes: (115, 118), attributes_ver: 192, character_data: None, mode: ContentMode::Sequence, ref_info: (1836, 1842)}, // DIAGNOSTIC-FIM-ALIAS-EVENT-GROUP-MAPPING
    /* 1332 */ ElementSpec {sub_elements: (9734, 9747), sub_element_ver: 5583, attributes: (115, 118), attributes_ver: 192, character_data: None, mode: ContentMode::Sequence, ref_info: (1842, 1848)}, // DIAGNOSTIC-FIM-ALIAS-EVENT-MAPPING
    /* 1333 */ ElementSpec {sub_elements: (15384, 15394), sub_element_ver: 3276, attributes: (115, 118), attributes_ver: 192, character_data: None, mode: ContentMode::Sequence, ref_info: (1848, 1853)}, // DIAGNOSTIC-FIM-EVENT-GROUP
    /* 1334 */ ElementSpec {sub_elements: (20444, 20445), sub_element_ver: 21, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // EVENT-REFS
    /* 1335 */ ElementSpec {sub_elements: (6838, 6853), sub_element_ver: 5583, attributes: (115, 118), attributes_ver: 192, character_data: None, mode: ContentMode::Sequence, ref_info: (1853, 1860)}, // DIAGNOSTIC-FIM-FUNCTION-MAPPING
    /* 1336 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (1303, 1309), attributes_ver: 9325, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // MAPPED-BSW-SERVICE-DEPENDENCY-REF
    /* 1337 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (1315, 1321), attributes_ver: 9325, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // MAPPED-FLAT-SWC-SERVICE-DEPENDENCY-REF, TARGET-SWC-SERVICE-DEPENDENCY-REF
    /* 1338 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (1363, 1369), attributes_ver: 9325, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // FUNCTION-IDENTIFIER-REF, MAPPED-FUNCTION-REF
    /* 1339 */ ElementSpec {sub_elements: (9747, 9760), sub_element_ver: 2517, attributes: (115, 118), attributes_ver: 140, character_data: None, mode: ContentMode::Sequence, ref_info: (1860, 1865)}, // DIAGNOSTIC-FREEZE-FRAME
    /* 1340 */ ElementSpec {sub_elements: (19676, 19678), sub_element_ver: 120, attributes: (0, 2), attributes_ver: 120, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // DIAGNOSTIC-FREEZE-FRAME-REF-CONDITIONAL
    /* 1341 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (1369, 1375), attributes_ver: 9331, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // DIAGNOSTIC-FREEZE-FRAME-REF
    /* 1342 */ ElementSpec {sub_elements: (820, 829), sub_element_ver: 3276, attributes: (115, 118), attributes_ver: 192, character_data: None, mode: ContentMode::Sequence, ref_info: (1865, 1870)}, // DIAGNOSTIC-FUNCTION-IDENTIFIER
    /* 1343 */ ElementSpec {sub_elements: (11586, 11598), sub_element_ver: 3816, attributes: (115, 118), attributes_ver: 192, character_data: None, mode: ContentMode::Sequence, ref_info: (1870, 1875)}, // DIAGNOSTIC-FUNCTION-IDENTIFIER-INHIBIT
    /* 1344 */ ElementSpec {sub_elements: (20445, 20446), sub_element_ver: 21, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // INHIBIT-SOURCES
    /* 1345 */ ElementSpec {sub_elements: (15394, 15404), sub_element_ver: 3276, attributes: (115, 118), attributes_ver: 192, character_data: None, mode: ContentMode::Sequence, ref_info: (1875, 1876)}, // DIAGNOSTIC-FUNCTION-INHIBIT-SOURCE
    /* 1346 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (1375, 1381), attributes_ver: 9325, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // ALIAS-EVENT-REF, EVENT-GROUP-REF
    /* 1347 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (1381, 1387), attributes_ver: 9325, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // ALIAS-EVENT-REF, EVENT-REF, GROUPED-ALIAS-EVENT-REF
    /* 1348 */ ElementSpec {sub_elements: (5069, 5083), sub_element_ver: 4431, attributes: (115, 118), attributes_ver: 48, character_data: None, mode: ContentMode::Sequence, ref_info: (1876, 1886)}, // DIAGNOSTIC-GENERIC-UDS-INTERFACE
    /* 1349 */ ElementSpec {sub_elements: (6823, 6834), sub_element_ver: 1784, attributes: (115, 118), attributes_ver: 48, character_data: None, mode: ContentMode::Sequence, ref_info: (1886, 1889)}, // DIAGNOSTIC-GENERIC-UDS-NEEDS
    /* 1350 */ ElementSpec {sub_elements: (11598, 11610), sub_element_ver: 7490, attributes: (115, 118), attributes_ver: 7490, character_data: None, mode: ContentMode::Sequence, ref_info: (1889, 1896)}, // DIAGNOSTIC-GENERIC-UDS-PORT-MAPPING
    /* 1351 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (175, 181), attributes_ver: 7490, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // PROCESS-REF
    /* 1352 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (1387, 1393), attributes_ver: 7490, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // SERVICE-INSTANCE-REF
    /* 1353 */ ElementSpec {sub_elements: (20446, 20447), sub_element_ver: 202, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // SERVICE-INSTANCE-REFS
    /* 1354 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 120, character_data: Some(278), mode: ContentMode::Characters, ref_info: (0, 0)}, // CONFIGURATION-HANDLING
    /* 1355 */ ElementSpec {sub_elements: (13530, 13541), sub_element_ver: 2034, attributes: (115, 118), attributes_ver: 140, character_data: None, mode: ContentMode::Sequence, ref_info: (1896, 1901)}, // DIAGNOSTIC-INDICATOR
    /* 1356 */ ElementSpec {sub_elements: (5069, 5083), sub_element_ver: 4431, attributes: (115, 118), attributes_ver: 48, character_data: None, mode: ContentMode::Sequence, ref_info: (1901, 1911)}, // DIAGNOSTIC-INDICATOR-INTERFACE
    /* 1357 */ ElementSpec {sub_elements: (6823, 6834), sub_element_ver: 1784, attributes: (115, 118), attributes_ver: 48, character_data: None, mode: ContentMode::Sequence, ref_info: (1911, 1914)}, // DIAGNOSTIC-INDICATOR-NEEDS
    /* 1358 */ ElementSpec {sub_elements: (6853, 6868), sub_element_ver: 5538, attributes: (115, 118), attributes_ver: 48, character_data: None, mode: ContentMode::Sequence, ref_info: (1914, 1921)}, // DIAGNOSTIC-INDICATOR-PORT-MAPPING
    /* 1359 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (1207, 1213), attributes_ver: 48, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // INDICATOR-REF
    /* 1360 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 9, character_data: Some(280), mode: ContentMode::Characters, ref_info: (0, 0)}, // TYPE
    /* 1361 */ ElementSpec {sub_elements: (18229, 18231), sub_element_ver: 64, attributes: (131, 139), attributes_ver: 3085, character_data: Some(982), mode: ContentMode::Mixed, ref_info: (0, 0)}, // DEBOUNCE-BEHAVIOR, DIAGNOSTIC-DEBOUNCE-BEHAVIOR-ENUM-VALUE-VARIATION-POINT, DIAGNOSTIC-INDICATOR-TYPE-ENUM-VALUE-VARIATION-POINT, TYPE
    /* 1362 */ ElementSpec {sub_elements: (13541, 13552), sub_element_ver: 3276, attributes: (115, 118), attributes_ver: 192, character_data: None, mode: ContentMode::Sequence, ref_info: (1921, 1926)}, // DIAGNOSTIC-INFO-TYPE
    /* 1363 */ ElementSpec {sub_elements: (20447, 20448), sub_element_ver: 21, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // DATA-ELEMENTS
    /* 1364 */ ElementSpec {sub_elements: (8422, 8436), sub_element_ver: 5583, attributes: (115, 118), attributes_ver: 192, character_data: None, mode: ContentMode::Sequence, ref_info: (1926, 1932)}, // DIAGNOSTIC-INHIBIT-SOURCE-EVENT-MAPPING
    /* 1365 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (1393, 1399), attributes_ver: 9325, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // ACTUAL-EVENT-REF, EVENT-GROUP-REF
    /* 1366 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (1399, 1405), attributes_ver: 9325, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // INHIBITION-SOURCE-REF
    /* 1367 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 134, character_data: Some(282), mode: ContentMode::Characters, ref_info: (0, 0)}, // INHIBITION-MASK
    /* 1368 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 120, character_data: Some(283), mode: ContentMode::Characters, ref_info: (0, 0)}, // INITIAL-EVENT-STATUS
    /* 1369 */ ElementSpec {sub_elements: (5900, 5916), sub_element_ver: 4984, attributes: (115, 118), attributes_ver: 140, character_data: None, mode: ContentMode::Sequence, ref_info: (1932, 1938)}, // DIAGNOSTIC-IO-CONTROL
    /* 1370 */ ElementSpec {sub_elements: (4031, 4042), sub_element_ver: 2034, attributes: (115, 118), attributes_ver: 140, character_data: None, mode: ContentMode::Sequence, ref_info: (1938, 1944)}, // DIAGNOSTIC-IO-CONTROL-CLASS
    /* 1371 */ ElementSpec {sub_elements: (20448, 20449), sub_element_ver: 64, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // CONTROL-ENABLE-MASK-BITS
    /* 1372 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (1255, 1261), attributes_ver: 9331, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // DATA-IDENTIFIER-REF
    /* 1373 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (1405, 1411), attributes_ver: 9331, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // IO-CONTROL-CLASS-REF
    /* 1374 */ ElementSpec {sub_elements: (5052, 5069), sub_element_ver: 4414, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (1944, 1947)}, // DIAGNOSTIC-IO-CONTROL-NEEDS
    /* 1375 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (1411, 1417), attributes_ver: 9385, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // CURRENT-VALUE-REF
    /* 1376 */ ElementSpec {sub_elements: (13552, 13563), sub_element_ver: 7952, attributes: (115, 118), attributes_ver: 192, character_data: None, mode: ContentMode::Sequence, ref_info: (1947, 1952)}, // DIAGNOSTIC-IUMPR
    /* 1377 */ ElementSpec {sub_elements: (15404, 15414), sub_element_ver: 3276, attributes: (115, 118), attributes_ver: 192, character_data: None, mode: ContentMode::Sequence, ref_info: (1952, 1957)}, // DIAGNOSTIC-IUMPR-DENOMINATOR-GROUP
    /* 1378 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (1309, 1315), attributes_ver: 9325, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // ACTUAL-EVENT-REF, DIAGNOSTIC-EVENT-REF, EVENT-REF
    /* 1379 */ ElementSpec {sub_elements: (11610, 11622), sub_element_ver: 7216, attributes: (115, 118), attributes_ver: 192, character_data: None, mode: ContentMode::Sequence, ref_info: (1957, 1962)}, // DIAGNOSTIC-IUMPR-GROUP
    /* 1380 */ ElementSpec {sub_elements: (19678, 19680), sub_element_ver: 77, attributes: (0, 2), attributes_ver: 77, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // DIAGNOSTIC-IUMPR-GROUP-IDENTIFIER
    /* 1381 */ ElementSpec {sub_elements: (20449, 20450), sub_element_ver: 19, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // IUMPR-GROUP-IDENTIFIERS
    /* 1382 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (1417, 1423), attributes_ver: 9325, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // IUMPR-REF
    /* 1383 */ ElementSpec {sub_elements: (20450, 20451), sub_element_ver: 21, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // IUMPR-REFS
    /* 1384 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 81, character_data: Some(286), mode: ContentMode::Characters, ref_info: (0, 0)}, // RATIO-KIND
    /* 1385 */ ElementSpec {sub_elements: (9760, 9773), sub_element_ver: 4093, attributes: (115, 118), attributes_ver: 81, character_data: None, mode: ContentMode::Sequence, ref_info: (1962, 1968)}, // DIAGNOSTIC-IUMPR-TO-FUNCTION-IDENTIFIER-MAPPING
    /* 1386 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (1363, 1369), attributes_ver: 4093, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // FUNCTION-IDENTIFIER-REF
    /* 1387 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (1417, 1423), attributes_ver: 4093, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // IUMPR-REF
    /* 1388 */ ElementSpec {sub_elements: (13563, 13574), sub_element_ver: 3276, attributes: (115, 118), attributes_ver: 192, character_data: None, mode: ContentMode::Sequence, ref_info: (1968, 1973)}, // DIAGNOSTIC-J-1939-EXPANDED-FREEZE-FRAME
    /* 1389 */ ElementSpec {sub_elements: (13574, 13585), sub_element_ver: 3276, attributes: (115, 118), attributes_ver: 192, character_data: None, mode: ContentMode::Sequence, ref_info: (1973, 1978)}, // DIAGNOSTIC-J-1939-FREEZE-FRAME
    /* 1390 */ ElementSpec {sub_elements: (20451, 20452), sub_element_ver: 21, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // SPN-REFS
    /* 1391 */ ElementSpec {sub_elements: (15414, 15424), sub_element_ver: 3276, attributes: (115, 118), attributes_ver: 192, character_data: None, mode: ContentMode::Sequence, ref_info: (1978, 1983)}, // DIAGNOSTIC-J-1939-NODE
    /* 1392 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (1423, 1429), attributes_ver: 9325, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // J-1939-NM-NODE-REF, NM-NODE-REF
    /* 1393 */ ElementSpec {sub_elements: (15424, 15434), sub_element_ver: 3276, attributes: (115, 118), attributes_ver: 192, character_data: None, mode: ContentMode::Sequence, ref_info: (1983, 1988)}, // DIAGNOSTIC-J-1939-SPN
    /* 1394 */ ElementSpec {sub_elements: (8436, 8450), sub_element_ver: 5583, attributes: (115, 118), attributes_ver: 192, character_data: None, mode: ContentMode::Sequence, ref_info: (1988, 1994)}, // DIAGNOSTIC-J-1939-SPN-MAPPING
    /* 1395 */ ElementSpec {sub_elements: (20452, 20453), sub_element_ver: 21, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // SENDING-NODE-REFS
    /* 1396 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (1429, 1435), attributes_ver: 9325, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // SPN-REF
    /* 1397 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (1435, 1441), attributes_ver: 9325, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // SYSTEM-SIGNAL-REF
    /* 1398 */ ElementSpec {sub_elements: (9773, 9786), sub_element_ver: 6813, attributes: (115, 118), attributes_ver: 192, character_data: None, mode: ContentMode::Sequence, ref_info: (1994, 2001)}, // DIAGNOSTIC-J-1939-SW-MAPPING
    /* 1399 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (1441, 1447), attributes_ver: 9325, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // NODE-REF, SENDING-NODE-REF
    /* 1400 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 120, character_data: Some(289), mode: ContentMode::Characters, ref_info: (0, 0)}, // JUMP-TO-BOOT-LOADER
    /* 1401 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 134, character_data: Some(290), mode: ContentMode::Characters, ref_info: (0, 0)}, // OP
    /* 1402 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (943, 949), attributes_ver: 4093, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // PROVIDER-SOFTWARE-CLUSTER-REF, REQUESTER-SOFTWARE-CLUSTER-REF
    /* 1403 */ ElementSpec {sub_elements: (9786, 9799), sub_element_ver: 6826, attributes: (115, 118), attributes_ver: 9, character_data: None, mode: ContentMode::Sequence, ref_info: (2001, 2007)}, // DIAGNOSTIC-MASTER-TO-SLAVE-EVENT-MAPPING
    /* 1404 */ ElementSpec {sub_elements: (15434, 15444), sub_element_ver: 2104, attributes: (115, 118), attributes_ver: 9, character_data: None, mode: ContentMode::Sequence, ref_info: (2007, 2011)}, // DIAGNOSTIC-MASTER-TO-SLAVE-EVENT-MAPPING-SET
    /* 1405 */ ElementSpec {sub_elements: (220, 221), sub_element_ver: 9, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // MASTER-TO-SLAVE-EVENT-MAPPINGS
    /* 1406 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (1309, 1315), attributes_ver: 1187, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // DIAGNOSTIC-EVENT-REF, MASTER-EVENT-REF, SLAVE-EVENT-REF
    /* 1407 */ ElementSpec {sub_elements: (15444, 15454), sub_element_ver: 3276, attributes: (115, 118), attributes_ver: 192, character_data: None, mode: ContentMode::Sequence, ref_info: (2011, 2016)}, // DIAGNOSTIC-MEASUREMENT-IDENTIFIER
    /* 1408 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (1447, 1453), attributes_ver: 9331, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // MEMORY-RANGE-REF
    /* 1409 */ ElementSpec {sub_elements: (20453, 20454), sub_element_ver: 43, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // MEMORY-RANGE-REFS
    /* 1410 */ ElementSpec {sub_elements: (2833, 2851), sub_element_ver: 2540, attributes: (115, 118), attributes_ver: 140, character_data: None, mode: ContentMode::Sequence, ref_info: (2016, 2022)}, // DIAGNOSTIC-MEMORY-DESTINATION-MIRROR
    /* 1411 */ ElementSpec {sub_elements: (6868, 6883), sub_element_ver: 5538, attributes: (115, 118), attributes_ver: 48, character_data: None, mode: ContentMode::Sequence, ref_info: (2022, 2029)}, // DIAGNOSTIC-MEMORY-DESTINATION-PORT-MAPPING
    /* 1412 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (1453, 1459), attributes_ver: 48, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // MEMORY-DESTINATION-REF
    /* 1413 */ ElementSpec {sub_elements: (4012, 4031), sub_element_ver: 3569, attributes: (115, 118), attributes_ver: 140, character_data: None, mode: ContentMode::Sequence, ref_info: (2029, 2035)}, // DIAGNOSTIC-MEMORY-DESTINATION-PRIMARY
    /* 1414 */ ElementSpec {sub_elements: (2833, 2856), sub_element_ver: 2540, attributes: (115, 118), attributes_ver: 140, character_data: None, mode: ContentMode::Sequence, ref_info: (2035, 2041)}, // DIAGNOSTIC-MEMORY-DESTINATION-USER-DEFINED
    /* 1415 */ ElementSpec {sub_elements: (20454, 20455), sub_element_ver: 16, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // AUTH-ROLE-REFS
    /* 1416 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 120, character_data: Some(293), mode: ContentMode::Characters, ref_info: (0, 0)}, // MEMORY-ENTRY-STORAGE-TRIGGER
    /* 1417 */ ElementSpec {sub_elements: (6883, 6898), sub_element_ver: 5598, attributes: (115, 118), attributes_ver: 140, character_data: None, mode: ContentMode::Sequence, ref_info: (2041, 2046)}, // DIAGNOSTIC-MEMORY-IDENTIFIER
    /* 1418 */ ElementSpec {sub_elements: (5069, 5083), sub_element_ver: 4431, attributes: (115, 118), attributes_ver: 48, character_data: None, mode: ContentMode::Sequence, ref_info: (2046, 2056)}, // DIAGNOSTIC-MONITOR-INTERFACE
    /* 1419 */ ElementSpec {sub_elements: (8450, 8464), sub_element_ver: 4093, attributes: (115, 118), attributes_ver: 81, character_data: None, mode: ContentMode::Sequence, ref_info: (2056, 2063)}, // DIAGNOSTIC-MONITOR-PORT-MAPPING
    /* 1420 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (1309, 1315), attributes_ver: 4093, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // DIAGNOSTIC-EVENT-REF
    /* 1421 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 9, character_data: Some(295), mode: ContentMode::Characters, ref_info: (0, 0)}, // UPDATE-KIND
    /* 1422 */ ElementSpec {sub_elements: (8464, 8478), sub_element_ver: 1514, attributes: (115, 118), attributes_ver: 230, character_data: None, mode: ContentMode::Sequence, ref_info: (2063, 2074)}, // DIAGNOSTIC-MULTIPLE-CONDITION-INTERFACE
    /* 1423 */ ElementSpec {sub_elements: (6898, 6913), sub_element_ver: 1514, attributes: (115, 118), attributes_ver: 230, character_data: None, mode: ContentMode::Sequence, ref_info: (2074, 2082)}, // DIAGNOSTIC-MULTIPLE-CONDITION-PORT-MAPPING
    /* 1424 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (1459, 1465), attributes_ver: 230, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // DIAGNOSTIC-CONDITION-REF
    /* 1425 */ ElementSpec {sub_elements: (8464, 8478), sub_element_ver: 1514, attributes: (115, 118), attributes_ver: 230, character_data: None, mode: ContentMode::Sequence, ref_info: (2082, 2093)}, // DIAGNOSTIC-MULTIPLE-EVENT-INTERFACE
    /* 1426 */ ElementSpec {sub_elements: (6913, 6928), sub_element_ver: 1514, attributes: (115, 118), attributes_ver: 230, character_data: None, mode: ContentMode::Sequence, ref_info: (2093, 2101)}, // DIAGNOSTIC-MULTIPLE-EVENT-PORT-MAPPING
    /* 1427 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (1309, 1315), attributes_ver: 230, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // DIAGNOSTIC-EVENT-REF
    /* 1428 */ ElementSpec {sub_elements: (8464, 8478), sub_element_ver: 1514, attributes: (115, 118), attributes_ver: 230, character_data: None, mode: ContentMode::Sequence, ref_info: (2101, 2112)}, // DIAGNOSTIC-MULTIPLE-MONITOR-INTERFACE
    /* 1429 */ ElementSpec {sub_elements: (6928, 6943), sub_element_ver: 1514, attributes: (115, 118), attributes_ver: 230, character_data: None, mode: ContentMode::Sequence, ref_info: (2112, 2120)}, // DIAGNOSTIC-MULTIPLE-MONITOR-PORT-MAPPING
    /* 1430 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 134, character_data: Some(296), mode: ContentMode::Characters, ref_info: (0, 0)}, // OBD-SUPPORT
    /* 1431 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 120, character_data: Some(297), mode: ContentMode::Characters, ref_info: (0, 0)}, // OCCURRENCE-COUNTER-PROCESSING
    /* 1432 */ ElementSpec {sub_elements: (9799, 9812), sub_element_ver: 2034, attributes: (115, 118), attributes_ver: 140, character_data: None, mode: ContentMode::Sequence, ref_info: (2120, 2125)}, // DIAGNOSTIC-OPERATION-CYCLE
    /* 1433 */ ElementSpec {sub_elements: (5069, 5083), sub_element_ver: 4431, attributes: (115, 118), attributes_ver: 48, character_data: None, mode: ContentMode::Sequence, ref_info: (2125, 2135)}, // DIAGNOSTIC-OPERATION-CYCLE-INTERFACE
    /* 1434 */ ElementSpec {sub_elements: (8478, 8492), sub_element_ver: 6377, attributes: (115, 118), attributes_ver: 6379, character_data: None, mode: ContentMode::Sequence, ref_info: (2135, 2138)}, // DIAGNOSTIC-OPERATION-CYCLE-NEEDS
    /* 1435 */ ElementSpec {sub_elements: (4573, 4591), sub_element_ver: 4075, attributes: (115, 118), attributes_ver: 140, character_data: None, mode: ContentMode::Sequence, ref_info: (2138, 2145)}, // DIAGNOSTIC-OPERATION-CYCLE-PORT-MAPPING
    /* 1436 */ ElementSpec {sub_elements: (19680, 19682), sub_element_ver: 120, attributes: (0, 2), attributes_ver: 120, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // DIAGNOSTIC-OPERATION-CYCLE-REF-CONDITIONAL
    /* 1437 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 120, character_data: Some(299), mode: ContentMode::Characters, ref_info: (0, 0)}, // TYPE
    /* 1438 */ ElementSpec {sub_elements: (17991, 17997), sub_element_ver: 9000, attributes: (0, 2), attributes_ver: 120, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // DIAGNOSTIC-PARAMETER
    /* 1439 */ ElementSpec {sub_elements: (9812, 9825), sub_element_ver: 3664, attributes: (115, 118), attributes_ver: 463, character_data: None, mode: ContentMode::Sequence, ref_info: (2145, 2146)}, // DIAGNOSTIC-PARAMETER-ELEMENT
    /* 1440 */ ElementSpec {sub_elements: (19682, 19684), sub_element_ver: 301, attributes: (0, 2), attributes_ver: 301, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // PARAMETER-ELEMENT-ACCESS
    /* 1441 */ ElementSpec {sub_elements: (20455, 20456), sub_element_ver: 6, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // CONTEXT-ELEMENT-REFS
    /* 1442 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (1465, 1471), attributes_ver: 3664, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // CONTEXT-ELEMENT-REF, TARGET-ELEMENT-REF
    /* 1443 */ ElementSpec {sub_elements: (16851, 16860), sub_element_ver: 3664, attributes: (115, 118), attributes_ver: 463, character_data: None, mode: ContentMode::Sequence, ref_info: (2146, 2151)}, // IDENT
    /* 1444 */ ElementSpec {sub_elements: (20456, 20457), sub_element_ver: 6, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // SUB-ELEMENTS
    /* 1445 */ ElementSpec {sub_elements: (9825, 9838), sub_element_ver: 3816, attributes: (115, 118), attributes_ver: 192, character_data: None, mode: ContentMode::Sequence, ref_info: (2151, 2156)}, // DIAGNOSTIC-PARAMETER-IDENTIFIER
    /* 1446 */ ElementSpec {sub_elements: (20457, 20458), sub_element_ver: 21, attributes: (0, 2), attributes_ver: 134, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // SUPPORT-INFO
    /* 1447 */ ElementSpec {sub_elements: (19684, 19686), sub_element_ver: 133, attributes: (0, 2), attributes_ver: 120, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // DIAGNOSTIC-PERIODIC-RATE
    /* 1448 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 134, character_data: Some(303), mode: ContentMode::Characters, ref_info: (0, 0)}, // PERIODIC-RATE-CATEGORY
    /* 1449 */ ElementSpec {sub_elements: (15454, 15464), sub_element_ver: 3276, attributes: (115, 118), attributes_ver: 192, character_data: None, mode: ContentMode::Sequence, ref_info: (2156, 2161)}, // DIAGNOSTIC-POWERTRAIN-FREEZE-FRAME
    /* 1450 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (1471, 1477), attributes_ver: 9325, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // PID-REF
    /* 1451 */ ElementSpec {sub_elements: (20458, 20459), sub_element_ver: 21, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // PID-REFS
    /* 1452 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 120, character_data: Some(305), mode: ContentMode::Characters, ref_info: (0, 0)}, // PROCESSING-STYLE
    /* 1453 */ ElementSpec {sub_elements: (11490, 11502), sub_element_ver: 4093, attributes: (115, 118), attributes_ver: 81, character_data: None, mode: ContentMode::Sequence, ref_info: (2161, 2168)}, // DIAGNOSTIC-PROOF-OF-OWNERSHIP
    /* 1454 */ ElementSpec {sub_elements: (8492, 8506), sub_element_ver: 6391, attributes: (115, 118), attributes_ver: 192, character_data: None, mode: ContentMode::Sequence, ref_info: (2168, 2173)}, // DIAGNOSTIC-PROTOCOL
    /* 1455 */ ElementSpec {sub_elements: (20459, 20460), sub_element_ver: 21, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // DIAGNOSTIC-CONNECTIONS
    /* 1456 */ ElementSpec {sub_elements: (20434, 20435), sub_element_ver: 21, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // SERVICE-TABLES
    /* 1457 */ ElementSpec {sub_elements: (9838, 9851), sub_element_ver: 5538, attributes: (115, 118), attributes_ver: 48, character_data: None, mode: ContentMode::Sequence, ref_info: (2173, 2179)}, // DIAGNOSTIC-PROVIDED-DATA-MAPPING
    /* 1458 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (1231, 1237), attributes_ver: 48, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // DATA-ELEMENT-REF
    /* 1459 */ ElementSpec {sub_elements: (11622, 11634), sub_element_ver: 2034, attributes: (115, 118), attributes_ver: 140, character_data: None, mode: ContentMode::Sequence, ref_info: (2179, 2186)}, // DIAGNOSTIC-READ-DATA-BY-IDENTIFIER
    /* 1460 */ ElementSpec {sub_elements: (11634, 11646), sub_element_ver: 2034, attributes: (115, 118), attributes_ver: 140, character_data: None, mode: ContentMode::Sequence, ref_info: (2186, 2192)}, // DIAGNOSTIC-READ-DATA-BY-IDENTIFIER-CLASS
    /* 1461 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (1477, 1483), attributes_ver: 9331, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // READ-CLASS-REF
    /* 1462 */ ElementSpec {sub_elements: (11646, 11658), sub_element_ver: 2034, attributes: (115, 118), attributes_ver: 140, character_data: None, mode: ContentMode::Sequence, ref_info: (2192, 2198)}, // DIAGNOSTIC-READ-DATA-BY-PERIODIC-ID
    /* 1463 */ ElementSpec {sub_elements: (8506, 8520), sub_element_ver: 2034, attributes: (115, 118), attributes_ver: 140, character_data: None, mode: ContentMode::Sequence, ref_info: (2198, 2204)}, // DIAGNOSTIC-READ-DATA-BY-PERIODIC-ID-CLASS
    /* 1464 */ ElementSpec {sub_elements: (20460, 20461), sub_element_ver: 43, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // PERIODIC-RATES
    /* 1465 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (1483, 1489), attributes_ver: 9331, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // READ-DATA-CLASS-REF
    /* 1466 */ ElementSpec {sub_elements: (13585, 13596), sub_element_ver: 2034, attributes: (115, 118), attributes_ver: 140, character_data: None, mode: ContentMode::Sequence, ref_info: (2204, 2210)}, // DIAGNOSTIC-READ-DTC-INFORMATION
    /* 1467 */ ElementSpec {sub_elements: (4031, 4042), sub_element_ver: 2034, attributes: (115, 118), attributes_ver: 140, character_data: None, mode: ContentMode::Sequence, ref_info: (2210, 2216)}, // DIAGNOSTIC-READ-DTC-INFORMATION-CLASS
    /* 1468 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (1489, 1495), attributes_ver: 9331, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // READ-DTC-INFORMATION-CLASS-REF
    /* 1469 */ ElementSpec {sub_elements: (11658, 11670), sub_element_ver: 2034, attributes: (115, 118), attributes_ver: 140, character_data: None, mode: ContentMode::Sequence, ref_info: (2216, 2224)}, // DIAGNOSTIC-READ-MEMORY-BY-ADDRESS
    /* 1470 */ ElementSpec {sub_elements: (4031, 4042), sub_element_ver: 2034, attributes: (115, 118), attributes_ver: 140, character_data: None, mode: ContentMode::Sequence, ref_info: (2224, 2230)}, // DIAGNOSTIC-READ-MEMORY-BY-ADDRESS-CLASS
    /* 1471 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (1495, 1501), attributes_ver: 9331, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // READ-CLASS-REF
    /* 1472 */ ElementSpec {sub_elements: (11670, 11682), sub_element_ver: 3531, attributes: (115, 118), attributes_ver: 9, character_data: None, mode: ContentMode::Sequence, ref_info: (2230, 2237)}, // DIAGNOSTIC-READ-SCALING-DATA-BY-IDENTIFIER
    /* 1473 */ ElementSpec {sub_elements: (4031, 4042), sub_element_ver: 3531, attributes: (115, 118), attributes_ver: 9, character_data: None, mode: ContentMode::Sequence, ref_info: (2237, 2243)}, // DIAGNOSTIC-READ-SCALING-DATA-BY-IDENTIFIER-CLASS
    /* 1474 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (1501, 1507), attributes_ver: 1187, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // READ-SCALING-DATA-CLASS-REF
    /* 1475 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 120, character_data: Some(311), mode: ContentMode::Characters, ref_info: (0, 0)}, // TRIGGER
    /* 1476 */ ElementSpec {sub_elements: (11682, 11694), sub_element_ver: 3816, attributes: (115, 118), attributes_ver: 192, character_data: None, mode: ContentMode::Sequence, ref_info: (2243, 2249)}, // DIAGNOSTIC-REQUEST-CONTROL-OF-ON-BOARD-DEVICE
    /* 1477 */ ElementSpec {sub_elements: (4031, 4042), sub_element_ver: 3276, attributes: (115, 118), attributes_ver: 192, character_data: None, mode: ContentMode::Sequence, ref_info: (2249, 2255)}, // DIAGNOSTIC-REQUEST-CONTROL-OF-ON-BOARD-DEVICE-CLASS
    /* 1478 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (1507, 1513), attributes_ver: 9325, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // REQUEST-CONTROL-OF-ON-BOARD-DEVICE-CLASS-REF
    /* 1479 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (1513, 1519), attributes_ver: 9325, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // TEST-ID-REF
    /* 1480 */ ElementSpec {sub_elements: (11694, 11706), sub_element_ver: 3816, attributes: (115, 118), attributes_ver: 192, character_data: None, mode: ContentMode::Sequence, ref_info: (2255, 2261)}, // DIAGNOSTIC-REQUEST-CURRENT-POWERTRAIN-DATA
    /* 1481 */ ElementSpec {sub_elements: (4031, 4042), sub_element_ver: 3276, attributes: (115, 118), attributes_ver: 192, character_data: None, mode: ContentMode::Sequence, ref_info: (2261, 2267)}, // DIAGNOSTIC-REQUEST-CURRENT-POWERTRAIN-DATA-CLASS
    /* 1482 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (1519, 1525), attributes_ver: 9325, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // REQUEST-CURRENT-POWERTRAIN-DIAGNOSTIC-DATA-CLASS-REF
    /* 1483 */ ElementSpec {sub_elements: (11706, 11718), sub_element_ver: 2034, attributes: (115, 118), attributes_ver: 140, character_data: None, mode: ContentMode::Sequence, ref_info: (2267, 2275)}, // DIAGNOSTIC-REQUEST-DOWNLOAD
    /* 1484 */ ElementSpec {sub_elements: (4031, 4042), sub_element_ver: 2034, attributes: (115, 118), attributes_ver: 140, character_data: None, mode: ContentMode::Sequence, ref_info: (2275, 2281)}, // DIAGNOSTIC-REQUEST-DOWNLOAD-CLASS
    /* 1485 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (1525, 1531), attributes_ver: 9331, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // REQUEST-DOWNLOAD-CLASS-REF
    /* 1486 */ ElementSpec {sub_elements: (13596, 13607), sub_element_ver: 3276, attributes: (115, 118), attributes_ver: 192, character_data: None, mode: ContentMode::Sequence, ref_info: (2281, 2287)}, // DIAGNOSTIC-REQUEST-EMISSION-RELATED-DTC
    /* 1487 */ ElementSpec {sub_elements: (4031, 4042), sub_element_ver: 3276, attributes: (115, 118), attributes_ver: 192, character_data: None, mode: ContentMode::Sequence, ref_info: (2287, 2293)}, // DIAGNOSTIC-REQUEST-EMISSION-RELATED-DTC-CLASS
    /* 1488 */ ElementSpec {sub_elements: (13607, 13618), sub_element_ver: 3276, attributes: (115, 118), attributes_ver: 192, character_data: None, mode: ContentMode::Sequence, ref_info: (2293, 2299)}, // DIAGNOSTIC-REQUEST-EMISSION-RELATED-DTC-PERMANENT-STATUS
    /* 1489 */ ElementSpec {sub_elements: (4031, 4042), sub_element_ver: 3276, attributes: (115, 118), attributes_ver: 192, character_data: None, mode: ContentMode::Sequence, ref_info: (2299, 2305)}, // DIAGNOSTIC-REQUEST-EMISSION-RELATED-DTC-PERMANENT-STATUS-CLASS
    /* 1490 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (1531, 1537), attributes_ver: 9325, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // REQUEST-EMISSION-RELATED-DTC-CLASS-PERMANENT-STATUS-REF
    /* 1491 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (1537, 1543), attributes_ver: 9325, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // REQUEST-EMISSION-RELATED-DTC-CLASS-REF
    /* 1492 */ ElementSpec {sub_elements: (13618, 13629), sub_element_ver: 2034, attributes: (115, 118), attributes_ver: 140, character_data: None, mode: ContentMode::Sequence, ref_info: (2305, 2311)}, // DIAGNOSTIC-REQUEST-FILE-TRANSFER
    /* 1493 */ ElementSpec {sub_elements: (4031, 4042), sub_element_ver: 2034, attributes: (115, 118), attributes_ver: 140, character_data: None, mode: ContentMode::Sequence, ref_info: (2311, 2317)}, // DIAGNOSTIC-REQUEST-FILE-TRANSFER-CLASS
    /* 1494 */ ElementSpec {sub_elements: (7093, 7107), sub_element_ver: 3664, attributes: (115, 118), attributes_ver: 463, character_data: None, mode: ContentMode::Sequence, ref_info: (2317, 2327)}, // DIAGNOSTIC-REQUEST-FILE-TRANSFER-INTERFACE
    /* 1495 */ ElementSpec {sub_elements: (6823, 6834), sub_element_ver: 3531, attributes: (115, 118), attributes_ver: 9, character_data: None, mode: ContentMode::Sequence, ref_info: (2327, 2330)}, // DIAGNOSTIC-REQUEST-FILE-TRANSFER-NEEDS
    /* 1496 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (1543, 1549), attributes_ver: 9331, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // REQUEST-FILE-TRANSFER-CLASS-REF
    /* 1497 */ ElementSpec {sub_elements: (9851, 9864), sub_element_ver: 6839, attributes: (115, 118), attributes_ver: 192, character_data: None, mode: ContentMode::Sequence, ref_info: (2330, 2336)}, // DIAGNOSTIC-REQUEST-ON-BOARD-MONITORING-TEST-RESULTS
    /* 1498 */ ElementSpec {sub_elements: (4031, 4042), sub_element_ver: 3276, attributes: (115, 118), attributes_ver: 192, character_data: None, mode: ContentMode::Sequence, ref_info: (2336, 2342)}, // DIAGNOSTIC-REQUEST-ON-BOARD-MONITORING-TEST-RESULTS-CLASS
    /* 1499 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (1549, 1555), attributes_ver: 1187, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // DIAGNOSTIC-TEST-RESULT-REF
    /* 1500 */ ElementSpec {sub_elements: (20461, 20462), sub_element_ver: 9, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // DIAGNOSTIC-TEST-RESULT-REFS
    /* 1501 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (1555, 1561), attributes_ver: 9325, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // REQUEST-ON-BOARD-MONITORING-TEST-RESULTS-CLASS-REF
    /* 1502 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (1549, 1555), attributes_ver: 9325, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // TEST-RESULT-REF
    /* 1503 */ ElementSpec {sub_elements: (11718, 11730), sub_element_ver: 3816, attributes: (115, 118), attributes_ver: 192, character_data: None, mode: ContentMode::Sequence, ref_info: (2342, 2348)}, // DIAGNOSTIC-REQUEST-POWERTRAIN-FREEZE-FRAME-DATA
    /* 1504 */ ElementSpec {sub_elements: (4031, 4042), sub_element_ver: 3276, attributes: (115, 118), attributes_ver: 192, character_data: None, mode: ContentMode::Sequence, ref_info: (2348, 2354)}, // DIAGNOSTIC-REQUEST-POWERTRAIN-FREEZE-FRAME-DATA-CLASS
    /* 1505 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (1561, 1567), attributes_ver: 9325, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // FREEZE-FRAME-REF
    /* 1506 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (1567, 1573), attributes_ver: 9325, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // REQUEST-POWERTRAIN-FREEZE-FRAME-DATA-REF
    /* 1507 */ ElementSpec {sub_elements: (13629, 13640), sub_element_ver: 7963, attributes: (115, 118), attributes_ver: 140, character_data: None, mode: ContentMode::Sequence, ref_info: (2354, 2356)}, // REQUEST-RESULT
    /* 1508 */ ElementSpec {sub_elements: (20447, 20448), sub_element_ver: 9, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // REQUESTS
    /* 1509 */ ElementSpec {sub_elements: (11730, 11742), sub_element_ver: 2034, attributes: (115, 118), attributes_ver: 140, character_data: None, mode: ContentMode::Sequence, ref_info: (2356, 2364)}, // DIAGNOSTIC-REQUEST-UPLOAD
    /* 1510 */ ElementSpec {sub_elements: (4031, 4042), sub_element_ver: 2034, attributes: (115, 118), attributes_ver: 140, character_data: None, mode: ContentMode::Sequence, ref_info: (2364, 2370)}, // DIAGNOSTIC-REQUEST-UPLOAD-CLASS
    /* 1511 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (1573, 1579), attributes_ver: 9331, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // REQUEST-UPLOAD-CLASS-REF
    /* 1512 */ ElementSpec {sub_elements: (11742, 11754), sub_element_ver: 3816, attributes: (115, 118), attributes_ver: 192, character_data: None, mode: ContentMode::Sequence, ref_info: (2370, 2376)}, // DIAGNOSTIC-REQUEST-VEHICLE-INFO
    /* 1513 */ ElementSpec {sub_elements: (4031, 4042), sub_element_ver: 3276, attributes: (115, 118), attributes_ver: 192, character_data: None, mode: ContentMode::Sequence, ref_info: (2376, 2382)}, // DIAGNOSTIC-REQUEST-VEHICLE-INFO-CLASS
    /* 1514 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (1579, 1585), attributes_ver: 9325, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // INFO-TYPE-REF
    /* 1515 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (1585, 1591), attributes_ver: 9325, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // REQUEST-VEHICLE-INFORMATION-CLASS-REF
    /* 1516 */ ElementSpec {sub_elements: (6943, 6958), sub_element_ver: 5613, attributes: (115, 118), attributes_ver: 140, character_data: None, mode: ContentMode::Sequence, ref_info: (2382, 2388)}, // DIAGNOSTIC-RESPONSE-ON-EVENT
    /* 1517 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 9, character_data: Some(322), mode: ContentMode::Characters, ref_info: (0, 0)}, // RESPONSE-ON-EVENT-ACTION
    /* 1518 */ ElementSpec {sub_elements: (4031, 4050), sub_element_ver: 3588, attributes: (115, 118), attributes_ver: 140, character_data: None, mode: ContentMode::Sequence, ref_info: (2388, 2394)}, // DIAGNOSTIC-RESPONSE-ON-EVENT-CLASS
    /* 1519 */ ElementSpec {sub_elements: (20462, 20463), sub_element_ver: 43, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // EVENT-WINDOWS
    /* 1520 */ ElementSpec {sub_elements: (19686, 19688), sub_element_ver: 120, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // EVENTS
    /* 1521 */ ElementSpec {sub_elements: (6823, 6834), sub_element_ver: 3276, attributes: (115, 118), attributes_ver: 192, character_data: None, mode: ContentMode::Sequence, ref_info: (2394, 2397)}, // DIAGNOSTIC-RESPONSE-ON-EVENT-NEEDS
    /* 1522 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (1591, 1597), attributes_ver: 9331, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // RESPONSE-ON-EVENT-CLASS-REF
    /* 1523 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 120, character_data: Some(324), mode: ContentMode::Characters, ref_info: (0, 0)}, // RESPOND-TO-RESET
    /* 1524 */ ElementSpec {sub_elements: (8520, 8534), sub_element_ver: 6405, attributes: (115, 118), attributes_ver: 140, character_data: None, mode: ContentMode::Sequence, ref_info: (2397, 2402)}, // DIAGNOSTIC-ROUTINE
    /* 1525 */ ElementSpec {sub_elements: (11754, 11766), sub_element_ver: 2034, attributes: (115, 118), attributes_ver: 140, character_data: None, mode: ContentMode::Sequence, ref_info: (2402, 2408)}, // DIAGNOSTIC-ROUTINE-CONTROL
    /* 1526 */ ElementSpec {sub_elements: (4031, 4042), sub_element_ver: 2034, attributes: (115, 118), attributes_ver: 140, character_data: None, mode: ContentMode::Sequence, ref_info: (2408, 2414)}, // DIAGNOSTIC-ROUTINE-CONTROL-CLASS
    /* 1527 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (1597, 1603), attributes_ver: 9331, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // ROUTINE-CONTROL-CLASS-REF
    /* 1528 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (1603, 1609), attributes_ver: 9331, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // ROUTINE-REF
    /* 1529 */ ElementSpec {sub_elements: (5069, 5083), sub_element_ver: 4431, attributes: (115, 118), attributes_ver: 48, character_data: None, mode: ContentMode::Sequence, ref_info: (2414, 2425)}, // DIAGNOSTIC-ROUTINE-GENERIC-INTERFACE
    /* 1530 */ ElementSpec {sub_elements: (5069, 5086), sub_element_ver: 4431, attributes: (115, 118), attributes_ver: 48, character_data: None, mode: ContentMode::Sequence, ref_info: (2425, 2436)}, // DIAGNOSTIC-ROUTINE-INTERFACE
    /* 1531 */ ElementSpec {sub_elements: (8534, 8548), sub_element_ver: 4482, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (2436, 2439)}, // DIAGNOSTIC-ROUTINE-NEEDS
    /* 1532 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (1609, 1615), attributes_ver: 9373, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // ACCESS-PERMISSION-REF
    /* 1533 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 22, character_data: Some(328), mode: ContentMode::Characters, ref_info: (0, 0)}, // DIAG-ROUTINE-TYPE
    /* 1534 */ ElementSpec {sub_elements: (9864, 9877), sub_element_ver: 1514, attributes: (115, 118), attributes_ver: 230, character_data: None, mode: ContentMode::Sequence, ref_info: (2439, 2445)}, // DIAGNOSTIC-SECURE-CODING-MAPPING
    /* 1535 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (1615, 1621), attributes_ver: 230, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // DATA-IDENTIFIER-REF
    /* 1536 */ ElementSpec {sub_elements: (20463, 20464), sub_element_ver: 16, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // DATA-IDENTIFIER-REFS
    /* 1537 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (1621, 1627), attributes_ver: 230, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // VALIDATION-REF
    /* 1538 */ ElementSpec {sub_elements: (8548, 8562), sub_element_ver: 6419, attributes: (115, 118), attributes_ver: 140, character_data: None, mode: ContentMode::Sequence, ref_info: (2445, 2451)}, // DIAGNOSTIC-SECURITY-ACCESS
    /* 1539 */ ElementSpec {sub_elements: (11766, 11778), sub_element_ver: 7502, attributes: (115, 118), attributes_ver: 140, character_data: None, mode: ContentMode::Sequence, ref_info: (2451, 2457)}, // DIAGNOSTIC-SECURITY-ACCESS-CLASS
    /* 1540 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (1627, 1633), attributes_ver: 9331, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // SECURITY-ACCESS-CLASS-REF
    /* 1541 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (1633, 1639), attributes_ver: 9331, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // SECURITY-LEVEL-REF
    /* 1542 */ ElementSpec {sub_elements: (9877, 9890), sub_element_ver: 6787, attributes: (115, 118), attributes_ver: 77, character_data: None, mode: ContentMode::Sequence, ref_info: (2457, 2463)}, // DIAGNOSTIC-SECURITY-EVENT-REPORTING-MODE-MAPPING
    /* 1543 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (1231, 1237), attributes_ver: 500, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // DATA-ELEMENT-REF
    /* 1544 */ ElementSpec {sub_elements: (8562, 8576), sub_element_ver: 2034, attributes: (115, 118), attributes_ver: 140, character_data: None, mode: ContentMode::Sequence, ref_info: (2463, 2468)}, // DIAGNOSTIC-SECURITY-LEVEL
    /* 1545 */ ElementSpec {sub_elements: (5069, 5083), sub_element_ver: 4431, attributes: (115, 118), attributes_ver: 48, character_data: None, mode: ContentMode::Sequence, ref_info: (2468, 2478)}, // DIAGNOSTIC-SECURITY-LEVEL-INTERFACE
    /* 1546 */ ElementSpec {sub_elements: (6958, 6973), sub_element_ver: 5628, attributes: (115, 118), attributes_ver: 48, character_data: None, mode: ContentMode::Sequence, ref_info: (2478, 2485)}, // DIAGNOSTIC-SECURITY-LEVEL-PORT-MAPPING
    /* 1547 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (1633, 1639), attributes_ver: 48, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // SECURITY-LEVEL-REF
    /* 1548 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (1609, 1615), attributes_ver: 9331, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // ACCESS-PERMISSION-REF
    /* 1549 */ ElementSpec {sub_elements: (11778, 11790), sub_element_ver: 7514, attributes: (115, 118), attributes_ver: 7514, character_data: None, mode: ContentMode::Sequence, ref_info: (2485, 2492)}, // DIAGNOSTIC-SERVICE-DATA-IDENTIFIER-MAPPING
    /* 1550 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (1255, 1261), attributes_ver: 7514, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // DIAGNOSTIC-DATA-IDENTIFIER-REF
    /* 1551 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (175, 181), attributes_ver: 7514, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // PROCESS-REF
    /* 1552 */ ElementSpec {sub_elements: (9890, 9903), sub_element_ver: 6852, attributes: (115, 118), attributes_ver: 6852, character_data: None, mode: ContentMode::Sequence, ref_info: (2492, 2499)}, // DIAGNOSTIC-SERVICE-DATA-IDENTIFIER-PORT-MAPPING
    /* 1553 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (1231, 1237), attributes_ver: 7985, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // DIAGNOSTIC-DATA-ELEMENT-REF
    /* 1554 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (1255, 1261), attributes_ver: 6852, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // DIAGNOSTIC-DATA-IDENTIFIER-REF
    /* 1555 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (175, 181), attributes_ver: 6852, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // PROCESS-REF
    /* 1556 */ ElementSpec {sub_elements: (5086, 5103), sub_element_ver: 4448, attributes: (115, 118), attributes_ver: 140, character_data: None, mode: ContentMode::Sequence, ref_info: (2499, 2506)}, // DIAGNOSTIC-SERVICE-DATA-MAPPING
    /* 1557 */ ElementSpec {sub_elements: (6973, 6988), sub_element_ver: 5643, attributes: (115, 118), attributes_ver: 77, character_data: None, mode: ContentMode::Sequence, ref_info: (2506, 2513)}, // DIAGNOSTIC-SERVICE-GENERIC-MAPPING
    /* 1558 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (1387, 1393), attributes_ver: 500, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // DIAGNOSTIC-SERVICE-INSTANCE-REF
    /* 1559 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (175, 181), attributes_ver: 500, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // PROCESS-DESIGN-REF, PROCESS-REF
    /* 1560 */ ElementSpec {sub_elements: (19688, 19690), sub_element_ver: 12, attributes: (0, 2), attributes_ver: 12, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // DIAGNOSTIC-SERVICE-INSTANCE-REF-CONDITIONAL
    /* 1561 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (1387, 1393), attributes_ver: 425, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // DIAGNOSTIC-SERVICE-INSTANCE-REF
    /* 1562 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 120, character_data: Some(332), mode: ContentMode::Characters, ref_info: (0, 0)}, // SERVICE-REQUEST-CALLBACK-TYPE
    /* 1563 */ ElementSpec {sub_elements: (3014, 3036), sub_element_ver: 2699, attributes: (115, 118), attributes_ver: 140, character_data: None, mode: ContentMode::Sequence, ref_info: (2513, 2520)}, // DIAGNOSTIC-SERVICE-SW-MAPPING
    /* 1564 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (1639, 1645), attributes_ver: 3664, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // DIAGNOSTIC-PARAMETER-REF
    /* 1565 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (175, 181), attributes_ver: 9409, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // PROCESS-REF
    /* 1566 */ ElementSpec {sub_elements: (8576, 8590), sub_element_ver: 6433, attributes: (115, 118), attributes_ver: 140, character_data: None, mode: ContentMode::Sequence, ref_info: (2520, 2525)}, // DIAGNOSTIC-SERVICE-TABLE
    /* 1567 */ ElementSpec {sub_elements: (20459, 20460), sub_element_ver: 43, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // DIAGNOSTIC-CONNECTIONS
    /* 1568 */ ElementSpec {sub_elements: (20464, 20465), sub_element_ver: 12, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // DIAGNOSTIC-SERVICE-INSTANCES
    /* 1569 */ ElementSpec {sub_elements: (19690, 19692), sub_element_ver: 120, attributes: (0, 2), attributes_ver: 120, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // DIAGNOSTIC-SERVICE-TABLE-REF-CONDITIONAL
    /* 1570 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (1645, 1651), attributes_ver: 9331, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // DIAGNOSTIC-SERVICE-TABLE-REF
    /* 1571 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (1387, 1393), attributes_ver: 9331, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // SERVICE-INSTANCE-REF
    /* 1572 */ ElementSpec {sub_elements: (20465, 20466), sub_element_ver: 43, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // SERVICE-INSTANCE-REFS
    /* 1573 */ ElementSpec {sub_elements: (19154, 19157), sub_element_ver: 3844, attributes: (0, 2), attributes_ver: 81, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // VALIDATION-CONFIGURATION
    /* 1574 */ ElementSpec {sub_elements: (20466, 20467), sub_element_ver: 20, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // MANUFACTURER-VALIDATION-ORDER-REFS
    /* 1575 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (1651, 1657), attributes_ver: 230, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // SOVD-VALIDATION-ORDER-REF
    /* 1576 */ ElementSpec {sub_elements: (20467, 20468), sub_element_ver: 16, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // SOVD-VALIDATION-ORDER-REFS
    /* 1577 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (1657, 1663), attributes_ver: 4093, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // MANUFACTURER-VALIDATION-ORDER-REF, SUPPLIER-VALIDATION-ORDER-REF
    /* 1578 */ ElementSpec {sub_elements: (20468, 20469), sub_element_ver: 20, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // SUPPLIER-VALIDATION-ORDER-REFS
    /* 1579 */ ElementSpec {sub_elements: (5069, 5083), sub_element_ver: 4431, attributes: (115, 118), attributes_ver: 48, character_data: None, mode: ContentMode::Sequence, ref_info: (2525, 2535)}, // DIAGNOSTIC-SERVICE-VALIDATION-INTERFACE
    /* 1580 */ ElementSpec {sub_elements: (9903, 9916), sub_element_ver: 4093, attributes: (115, 118), attributes_ver: 81, character_data: None, mode: ContentMode::Sequence, ref_info: (2535, 2542)}, // DIAGNOSTIC-SERVICE-VALIDATION-MAPPING
    /* 1581 */ ElementSpec {sub_elements: (9916, 9929), sub_element_ver: 2034, attributes: (115, 118), attributes_ver: 140, character_data: None, mode: ContentMode::Sequence, ref_info: (2542, 2547)}, // DIAGNOSTIC-SESSION
    /* 1582 */ ElementSpec {sub_elements: (11790, 11802), sub_element_ver: 2034, attributes: (115, 118), attributes_ver: 140, character_data: None, mode: ContentMode::Sequence, ref_info: (2547, 2553)}, // DIAGNOSTIC-SESSION-CONTROL
    /* 1583 */ ElementSpec {sub_elements: (11802, 11814), sub_element_ver: 7526, attributes: (115, 118), attributes_ver: 140, character_data: None, mode: ContentMode::Sequence, ref_info: (2553, 2559)}, // DIAGNOSTIC-SESSION-CONTROL-CLASS
    /* 1584 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (1663, 1669), attributes_ver: 9331, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // DIAGNOSTIC-SESSION-REF
    /* 1585 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (1669, 1675), attributes_ver: 9331, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // SESSION-CONTROL-CLASS-REF
    /* 1586 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 120, character_data: Some(337), mode: ContentMode::Characters, ref_info: (0, 0)}, // SIGNIFICANCE
    /* 1587 */ ElementSpec {sub_elements: (15464, 15474), sub_element_ver: 8073, attributes: (115, 118), attributes_ver: 8073, character_data: None, mode: ContentMode::Sequence, ref_info: (2559, 2564)}, // DIAGNOSTIC-SOFTWARE-CLUSTER-PROPS
    /* 1588 */ ElementSpec {sub_elements: (7093, 7107), sub_element_ver: 3664, attributes: (115, 118), attributes_ver: 463, character_data: None, mode: ContentMode::Sequence, ref_info: (2564, 2575)}, // DIAGNOSTIC-SOVD-AUTHORIZATION-INTERFACE
    /* 1589 */ ElementSpec {sub_elements: (9929, 9942), sub_element_ver: 3664, attributes: (115, 118), attributes_ver: 463, character_data: None, mode: ContentMode::Sequence, ref_info: (2575, 2582)}, // DIAGNOSTIC-SOVD-AUTHORIZATION-PORT-MAPPING
    /* 1590 */ ElementSpec {sub_elements: (13640, 13651), sub_element_ver: 1502, attributes: (115, 118), attributes_ver: 230, character_data: None, mode: ContentMode::Sequence, ref_info: (2582, 2588)}, // DIAGNOSTIC-SOVD-BULK-DATA
    /* 1591 */ ElementSpec {sub_elements: (8464, 8478), sub_element_ver: 1514, attributes: (115, 118), attributes_ver: 230, character_data: None, mode: ContentMode::Sequence, ref_info: (2588, 2599)}, // DIAGNOSTIC-SOVD-BULK-DATA-INTERFACE
    /* 1592 */ ElementSpec {sub_elements: (8590, 8604), sub_element_ver: 1514, attributes: (115, 118), attributes_ver: 230, character_data: None, mode: ContentMode::Sequence, ref_info: (2599, 2606)}, // DIAGNOSTIC-SOVD-BULK-DATA-PORT-MAPPING
    /* 1593 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (1675, 1681), attributes_ver: 230, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // SERVICE-INSTANCE-REF
    /* 1594 */ ElementSpec {sub_elements: (11814, 11826), sub_element_ver: 1514, attributes: (115, 118), attributes_ver: 230, character_data: None, mode: ContentMode::Sequence, ref_info: (2606, 2613)}, // DIAGNOSTIC-SOVD-CONFIGURATION-BULK-DATA
    /* 1595 */ ElementSpec {sub_elements: (9942, 9955), sub_element_ver: 1514, attributes: (115, 118), attributes_ver: 230, character_data: None, mode: ContentMode::Sequence, ref_info: (2613, 2619)}, // DIAGNOSTIC-SOVD-CONFIGURATION-DATA-IDENTIFIER-MAPPING
    /* 1596 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (1255, 1261), attributes_ver: 230, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // DATA-IDENTIFIER-REF
    /* 1597 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (1681, 1687), attributes_ver: 230, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // SERVICE-INSTANCE-REF
    /* 1598 */ ElementSpec {sub_elements: (8464, 8478), sub_element_ver: 1514, attributes: (115, 118), attributes_ver: 230, character_data: None, mode: ContentMode::Sequence, ref_info: (2619, 2630)}, // DIAGNOSTIC-SOVD-CONFIGURATION-INTERFACE
    /* 1599 */ ElementSpec {sub_elements: (11814, 11824), sub_element_ver: 1502, attributes: (115, 118), attributes_ver: 230, character_data: None, mode: ContentMode::Sequence, ref_info: (2630, 2637)}, // DIAGNOSTIC-SOVD-CONFIGURATION-PARAMETER
    /* 1600 */ ElementSpec {sub_elements: (8604, 8618), sub_element_ver: 1514, attributes: (115, 118), attributes_ver: 230, character_data: None, mode: ContentMode::Sequence, ref_info: (2637, 2644)}, // DIAGNOSTIC-SOVD-CONFIGURATION-PORT-MAPPING
    /* 1601 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (1687, 1693), attributes_ver: 230, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // SERVICE-INSTANCE-REF
    /* 1602 */ ElementSpec {sub_elements: (15474, 15484), sub_element_ver: 3027, attributes: (115, 118), attributes_ver: 12, character_data: None, mode: ContentMode::Sequence, ref_info: (2644, 2650)}, // DIAGNOSTIC-SOVD-FAULT-MEMORY-ACCESS
    /* 1603 */ ElementSpec {sub_elements: (4126, 4135), sub_element_ver: 3664, attributes: (115, 118), attributes_ver: 463, character_data: None, mode: ContentMode::Sequence, ref_info: (2650, 2655)}, // DIAGNOSTIC-SOVD-LOCK
    /* 1604 */ ElementSpec {sub_elements: (11814, 11824), sub_element_ver: 1502, attributes: (115, 118), attributes_ver: 230, character_data: None, mode: ContentMode::Sequence, ref_info: (2655, 2661)}, // DIAGNOSTIC-SOVD-LOG
    /* 1605 */ ElementSpec {sub_elements: (9955, 9968), sub_element_ver: 1514, attributes: (115, 118), attributes_ver: 230, character_data: None, mode: ContentMode::Sequence, ref_info: (2661, 2666)}, // DIAGNOSTIC-SOVD-METHOD
    /* 1606 */ ElementSpec {sub_elements: (20469, 20470), sub_element_ver: 16, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // DELETES, GETS, POSTS, PUTS
    /* 1607 */ ElementSpec {sub_elements: (16860, 16869), sub_element_ver: 1502, attributes: (115, 118), attributes_ver: 230, character_data: None, mode: ContentMode::Sequence, ref_info: (2666, 2667)}, // DIAGNOSTIC-SOVD-METHOD-PRIMITIVE
    /* 1608 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (1609, 1615), attributes_ver: 230, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // ACCESS-PERMISSION-REF
    /* 1609 */ ElementSpec {sub_elements: (7093, 7107), sub_element_ver: 3664, attributes: (115, 118), attributes_ver: 463, character_data: None, mode: ContentMode::Sequence, ref_info: (2667, 2678)}, // DIAGNOSTIC-SOVD-PROXIMITY-CHALLENGE-INTERFACE
    /* 1610 */ ElementSpec {sub_elements: (9968, 9981), sub_element_ver: 3664, attributes: (115, 118), attributes_ver: 463, character_data: None, mode: ContentMode::Sequence, ref_info: (2678, 2685)}, // DIAGNOSTIC-SOVD-PROXIMITY-CHALLENGE-PORT-MAPPING
    /* 1611 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (1693, 1699), attributes_ver: 230, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // METHOD-REF
    /* 1612 */ ElementSpec {sub_elements: (8464, 8478), sub_element_ver: 1514, attributes: (115, 118), attributes_ver: 230, character_data: None, mode: ContentMode::Sequence, ref_info: (2685, 2696)}, // DIAGNOSTIC-SOVD-SERVICE-VALIDATION-INTERFACE
    /* 1613 */ ElementSpec {sub_elements: (9981, 9994), sub_element_ver: 1514, attributes: (115, 118), attributes_ver: 230, character_data: None, mode: ContentMode::Sequence, ref_info: (2696, 2703)}, // DIAGNOSTIC-SOVD-SERVICE-VALIDATION-PORT-MAPPING
    /* 1614 */ ElementSpec {sub_elements: (11814, 11824), sub_element_ver: 1502, attributes: (115, 118), attributes_ver: 230, character_data: None, mode: ContentMode::Sequence, ref_info: (2703, 2709)}, // DIAGNOSTIC-SOVD-UPDATE
    /* 1615 */ ElementSpec {sub_elements: (8464, 8478), sub_element_ver: 1514, attributes: (115, 118), attributes_ver: 230, character_data: None, mode: ContentMode::Sequence, ref_info: (2709, 2720)}, // DIAGNOSTIC-SOVD-UPDATE-INTERFACE
    /* 1616 */ ElementSpec {sub_elements: (8618, 8632), sub_element_ver: 1514, attributes: (115, 118), attributes_ver: 230, character_data: None, mode: ContentMode::Sequence, ref_info: (2720, 2727)}, // DIAGNOSTIC-SOVD-UPDATE-PORT-MAPPING
    /* 1617 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (175, 181), attributes_ver: 230, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // PROCESS-REF
    /* 1618 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (1699, 1705), attributes_ver: 230, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // SERVICE-INSTANCE-REF
    /* 1619 */ ElementSpec {sub_elements: (13651, 13662), sub_element_ver: 7974, attributes: (115, 118), attributes_ver: 140, character_data: None, mode: ContentMode::Sequence, ref_info: (2727, 2729)}, // START
    /* 1620 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 120, character_data: Some(346), mode: ContentMode::Characters, ref_info: (0, 0)}, // STATUS-BIT-HANDLING-TEST-FAILED-SINCE-LAST-CLEAR
    /* 1621 */ ElementSpec {sub_elements: (13651, 13662), sub_element_ver: 7974, attributes: (115, 118), attributes_ver: 140, character_data: None, mode: ContentMode::Sequence, ref_info: (2729, 2731)}, // STOP
    /* 1622 */ ElementSpec {sub_elements: (20447, 20448), sub_element_ver: 43, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // DATA-ELEMENTS, RECORD-ELEMENTS, REQUESTS, RESPONSES
    /* 1623 */ ElementSpec {sub_elements: (15334, 15344), sub_element_ver: 1317, attributes: (115, 118), attributes_ver: 140, character_data: None, mode: ContentMode::Sequence, ref_info: (2731, 2737)}, // DIAGNOSTIC-STORAGE-CONDITION
    /* 1624 */ ElementSpec {sub_elements: (15484, 15494), sub_element_ver: 1317, attributes: (115, 118), attributes_ver: 140, character_data: None, mode: ContentMode::Sequence, ref_info: (2737, 2743)}, // DIAGNOSTIC-STORAGE-CONDITION-GROUP
    /* 1625 */ ElementSpec {sub_elements: (20470, 20471), sub_element_ver: 43, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // STORAGE-CONDITIONS
    /* 1626 */ ElementSpec {sub_elements: (11826, 11838), sub_element_ver: 6377, attributes: (115, 118), attributes_ver: 6379, character_data: None, mode: ContentMode::Sequence, ref_info: (2743, 2746)}, // DIAGNOSTIC-STORAGE-CONDITION-NEEDS
    /* 1627 */ ElementSpec {sub_elements: (5103, 5120), sub_element_ver: 4465, attributes: (115, 118), attributes_ver: 140, character_data: None, mode: ContentMode::Sequence, ref_info: (2746, 2753)}, // DIAGNOSTIC-STORAGE-CONDITION-PORT-MAPPING
    /* 1628 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (1705, 1711), attributes_ver: 9331, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // DIAGNOSTIC-STORAGE-CONDITION-REF
    /* 1629 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (175, 181), attributes_ver: 9415, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // PROCESS-REF
    /* 1630 */ ElementSpec {sub_elements: (19692, 19694), sub_element_ver: 120, attributes: (0, 2), attributes_ver: 120, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // DIAGNOSTIC-STORAGE-CONDITION-REF-CONDITIONAL
    /* 1631 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 9, character_data: Some(349), mode: ContentMode::Characters, ref_info: (0, 0)}, // STORE-EVENT-SUPPORT
    /* 1632 */ ElementSpec {sub_elements: (19694, 19696), sub_element_ver: 134, attributes: (0, 2), attributes_ver: 134, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // SUPPORT-INFO-BYTE
    /* 1633 */ ElementSpec {sub_elements: (19696, 19698), sub_element_ver: 134, attributes: (0, 2), attributes_ver: 134, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // TEST-IDENTIFIER
    /* 1634 */ ElementSpec {sub_elements: (8632, 8646), sub_element_ver: 6447, attributes: (115, 118), attributes_ver: 192, character_data: None, mode: ContentMode::Sequence, ref_info: (2753, 2758)}, // DIAGNOSTIC-TEST-RESULT
    /* 1635 */ ElementSpec {sub_elements: (20471, 20472), sub_element_ver: 64, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // DIAGNOSTIC-EVENTS
    /* 1636 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (1711, 1717), attributes_ver: 9325, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // MONITORED-IDENTIFIER-REF
    /* 1637 */ ElementSpec {sub_elements: (11838, 11850), sub_element_ver: 3816, attributes: (115, 118), attributes_ver: 192, character_data: None, mode: ContentMode::Sequence, ref_info: (2758, 2763)}, // DIAGNOSTIC-TEST-ROUTINE-IDENTIFIER
    /* 1638 */ ElementSpec {sub_elements: (13662, 13673), sub_element_ver: 2034, attributes: (115, 118), attributes_ver: 140, character_data: None, mode: ContentMode::Sequence, ref_info: (2763, 2770)}, // DIAGNOSTIC-TRANSFER-EXIT
    /* 1639 */ ElementSpec {sub_elements: (4031, 4042), sub_element_ver: 2034, attributes: (115, 118), attributes_ver: 140, character_data: None, mode: ContentMode::Sequence, ref_info: (2770, 2776)}, // DIAGNOSTIC-TRANSFER-EXIT-CLASS
    /* 1640 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (1717, 1723), attributes_ver: 9331, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // TRANSFER-EXIT-CLASS-REF
    /* 1641 */ ElementSpec {sub_elements: (3364, 3378), sub_element_ver: 3027, attributes: (115, 118), attributes_ver: 12, character_data: None, mode: ContentMode::Sequence, ref_info: (2776, 2786)}, // DIAGNOSTIC-TRANSMIT-CERTIFICATE-INTERFACE
    /* 1642 */ ElementSpec {sub_elements: (13673, 13684), sub_element_ver: 2034, attributes: (115, 118), attributes_ver: 140, character_data: None, mode: ContentMode::Sequence, ref_info: (2786, 2791)}, // DIAGNOSTIC-TROUBLE-CODE-GROUP
    /* 1643 */ ElementSpec {sub_elements: (20472, 20473), sub_element_ver: 43, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // DTCS
    /* 1644 */ ElementSpec {sub_elements: (6988, 7003), sub_element_ver: 5658, attributes: (115, 118), attributes_ver: 140, character_data: None, mode: ContentMode::Sequence, ref_info: (2791, 2797)}, // DIAGNOSTIC-TROUBLE-CODE-J-1939
    /* 1645 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 134, character_data: Some(355), mode: ContentMode::Characters, ref_info: (0, 0)}, // KIND
    /* 1646 */ ElementSpec {sub_elements: (7003, 7018), sub_element_ver: 5673, attributes: (115, 118), attributes_ver: 140, character_data: None, mode: ContentMode::Sequence, ref_info: (2797, 2803)}, // DIAGNOSTIC-TROUBLE-CODE-OBD
    /* 1647 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (1723, 1729), attributes_ver: 9325, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // DTC-PROPS-REF
    /* 1648 */ ElementSpec {sub_elements: (20473, 20474), sub_element_ver: 19, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // EVENT-READINESS-GROUPS
    /* 1649 */ ElementSpec {sub_elements: (19698, 19700), sub_element_ver: 12, attributes: (0, 2), attributes_ver: 12, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // DIAGNOSTIC-TROUBLE-CODE-OBD-PROPS
    /* 1650 */ ElementSpec {sub_elements: (1975, 2002), sub_element_ver: 1840, attributes: (115, 118), attributes_ver: 140, character_data: None, mode: ContentMode::Sequence, ref_info: (2803, 2808)}, // DIAGNOSTIC-TROUBLE-CODE-PROPS
    /* 1651 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (1729, 1735), attributes_ver: 9331, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // AGING-REF
    /* 1652 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (1453, 1459), attributes_ver: 4093, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // DIAGNOSTIC-MEMORY-REF
    /* 1653 */ ElementSpec {sub_elements: (20474, 20475), sub_element_ver: 43, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // EXTENDED-DATA-RECORDS
    /* 1654 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (1249, 1255), attributes_ver: 9331, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // FREEZE-FRAME-CONTENT-REF
    /* 1655 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (1249, 1255), attributes_ver: 1187, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // FREEZE-FRAME-CONTENT-WWH-OBD-REF
    /* 1656 */ ElementSpec {sub_elements: (20475, 20476), sub_element_ver: 43, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // FREEZE-FRAMES
    /* 1657 */ ElementSpec {sub_elements: (20476, 20477), sub_element_ver: 20, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // LEGISLATED-FREEZE-FRAME-CONTENT-UDS-OBDS
    /* 1658 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (1453, 1459), attributes_ver: 9331, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // MEMORY-DESTINATION-REF
    /* 1659 */ ElementSpec {sub_elements: (20477, 20478), sub_element_ver: 43, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // MEMORY-DESTINATION-REFS
    /* 1660 */ ElementSpec {sub_elements: (20478, 20479), sub_element_ver: 12, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // OBD-PROPSS
    /* 1661 */ ElementSpec {sub_elements: (19700, 19702), sub_element_ver: 12, attributes: (0, 2), attributes_ver: 12, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // DIAGNOSTIC-TROUBLE-CODE-PROPS-REF-CONDITIONAL
    /* 1662 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (1723, 1729), attributes_ver: 425, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // DIAGNOSTIC-TROUBLE-CODE-PROPS-REF
    /* 1663 */ ElementSpec {sub_elements: (20476, 20477), sub_element_ver: 64, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // LEGISLATED-FREEZE-FRAME-CONTENT-WWH-OBDS, SNAPSHOT-RECORD-CONTENTS
    /* 1664 */ ElementSpec {sub_elements: (19702, 19704), sub_element_ver: 120, attributes: (0, 2), attributes_ver: 120, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // DIAGNOSTIC-TROUBLE-CODE-REF-CONDITIONAL
    /* 1665 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (1735, 1741), attributes_ver: 9331, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // DIAGNOSTIC-TROUBLE-CODE-REF
    /* 1666 */ ElementSpec {sub_elements: (4050, 4069), sub_element_ver: 3607, attributes: (115, 118), attributes_ver: 140, character_data: None, mode: ContentMode::Sequence, ref_info: (2808, 2814)}, // DIAGNOSTIC-TROUBLE-CODE-UDS
    /* 1667 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (1723, 1729), attributes_ver: 9331, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // DTC-PROPS-REF
    /* 1668 */ ElementSpec {sub_elements: (20473, 20474), sub_element_ver: 16, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // EVENT-READINESS-GROUPS
    /* 1669 */ ElementSpec {sub_elements: (9994, 10007), sub_element_ver: 6800, attributes: (115, 118), attributes_ver: 9, character_data: None, mode: ContentMode::Sequence, ref_info: (2814, 2820)}, // DIAGNOSTIC-TROUBLE-CODE-UDS-TO-CLEAR-CONDITION-GROUP-MAPPING
    /* 1670 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (1741, 1747), attributes_ver: 1187, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // CLEAR-CONDITION-GROUP-REF
    /* 1671 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (1351, 1357), attributes_ver: 1187, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // TROUBLE-CODE-UDS-REF
    /* 1672 */ ElementSpec {sub_elements: (10007, 10020), sub_element_ver: 5583, attributes: (115, 118), attributes_ver: 192, character_data: None, mode: ContentMode::Sequence, ref_info: (2820, 2826)}, // DIAGNOSTIC-TROUBLE-CODE-UDS-TO-TROUBLE-CODE-OBD-MAPPING
    /* 1673 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (1747, 1753), attributes_ver: 9325, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // TROUBLE-CODE-OBD-REF
    /* 1674 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (1351, 1357), attributes_ver: 9325, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // TROUBLE-CODE-UDS-REF
    /* 1675 */ ElementSpec {sub_elements: (20479, 20480), sub_element_ver: 12, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // TROUBLE-CODE-PROPSS
    /* 1676 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 120, character_data: Some(359), mode: ContentMode::Characters, ref_info: (0, 0)}, // TYPE-OF-DTC-SUPPORTED
    /* 1677 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 120, character_data: Some(360), mode: ContentMode::Characters, ref_info: (0, 0)}, // TYPE-OF-FREEZE-FRAME-RECORD-NUMERATION
    /* 1678 */ ElementSpec {sub_elements: (18229, 18231), sub_element_ver: 123, attributes: (131, 139), attributes_ver: 9296, character_data: Some(982), mode: ContentMode::Mixed, ref_info: (0, 0)}, // DIAGNOSTIC-UDS-SEVERITY-ENUM-VALUE-VARIATION-POINT, SEVERITY
    /* 1679 */ ElementSpec {sub_elements: (6823, 6834), sub_element_ver: 3531, attributes: (115, 118), attributes_ver: 9, character_data: None, mode: ContentMode::Sequence, ref_info: (2826, 2829)}, // DIAGNOSTIC-UPLOAD-DOWNLOAD-NEEDS
    /* 1680 */ ElementSpec {sub_elements: (11850, 11862), sub_element_ver: 7490, attributes: (115, 118), attributes_ver: 7490, character_data: None, mode: ContentMode::Sequence, ref_info: (2829, 2836)}, // DIAGNOSTIC-UPLOAD-DOWNLOAD-PORT-MAPPING
    /* 1681 */ ElementSpec {sub_elements: (5069, 5083), sub_element_ver: 4431, attributes: (115, 118), attributes_ver: 48, character_data: None, mode: ContentMode::Sequence, ref_info: (2836, 2846)}, // DIAGNOSTIC-UPLOAD-INTERFACE
    /* 1682 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 22, character_data: Some(361), mode: ContentMode::Characters, ref_info: (0, 0)}, // DIAGNOSTIC-VALUE-ACCESS
    /* 1683 */ ElementSpec {sub_elements: (5120, 5137), sub_element_ver: 4482, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (2846, 2849)}, // DIAGNOSTIC-VALUE-NEEDS
    /* 1684 */ ElementSpec {sub_elements: (11490, 11502), sub_element_ver: 4093, attributes: (115, 118), attributes_ver: 81, character_data: None, mode: ContentMode::Sequence, ref_info: (2849, 2856)}, // DIAGNOSTIC-VERIFY-CERTIFICATE-BIDIRECTIONAL
    /* 1685 */ ElementSpec {sub_elements: (11490, 11502), sub_element_ver: 4093, attributes: (115, 118), attributes_ver: 81, character_data: None, mode: ContentMode::Sequence, ref_info: (2856, 2863)}, // DIAGNOSTIC-VERIFY-CERTIFICATE-UNIDIRECTIONAL
    /* 1686 */ ElementSpec {sub_elements: (11862, 11874), sub_element_ver: 2034, attributes: (115, 118), attributes_ver: 140, character_data: None, mode: ContentMode::Sequence, ref_info: (2863, 2870)}, // DIAGNOSTIC-WRITE-DATA-BY-IDENTIFIER
    /* 1687 */ ElementSpec {sub_elements: (4031, 4042), sub_element_ver: 2034, attributes: (115, 118), attributes_ver: 140, character_data: None, mode: ContentMode::Sequence, ref_info: (2870, 2876)}, // DIAGNOSTIC-WRITE-DATA-BY-IDENTIFIER-CLASS
    /* 1688 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (1753, 1759), attributes_ver: 9331, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // WRITE-CLASS-REF
    /* 1689 */ ElementSpec {sub_elements: (11874, 11886), sub_element_ver: 2034, attributes: (115, 118), attributes_ver: 140, character_data: None, mode: ContentMode::Sequence, ref_info: (2876, 2884)}, // DIAGNOSTIC-WRITE-MEMORY-BY-ADDRESS
    /* 1690 */ ElementSpec {sub_elements: (4031, 4042), sub_element_ver: 2034, attributes: (115, 118), attributes_ver: 140, character_data: None, mode: ContentMode::Sequence, ref_info: (2884, 2890)}, // DIAGNOSTIC-WRITE-MEMORY-BY-ADDRESS-CLASS
    /* 1691 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (1759, 1765), attributes_ver: 9331, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // WRITE-CLASS-REF
    /* 1692 */ ElementSpec {sub_elements: (18229, 18231), sub_element_ver: 64, attributes: (131, 139), attributes_ver: 6459, character_data: Some(982), mode: ContentMode::Mixed, ref_info: (0, 0)}, // DIAGNOSTIC-TEST-RESULT-UPDATE-ENUM-VALUE-VARIATION-POINT, DIAGNOSTIC-WWH-OBD-DTC-CLASS-ENUM-VALUE-VARIATION-POINT, UPDATE-KIND, WWH-OBD-DTC-CLASS
    /* 1693 */ ElementSpec {sub_elements: (6823, 6834), sub_element_ver: 6377, attributes: (115, 118), attributes_ver: 6379, character_data: None, mode: ContentMode::Sequence, ref_info: (2890, 2893)}, // DIAGNOSTICS-COMMUNICATION-SECURITY-NEEDS
    /* 1694 */ ElementSpec {sub_elements: (19704, 19706), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 0, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // DISCOVERY-TECHNOLOGY
    /* 1695 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 0, character_data: Some(366), mode: ContentMode::Characters, ref_info: (0, 0)}, // NAME
    /* 1696 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 22, character_data: Some(367), mode: ContentMode::Characters, ref_info: (0, 0)}, // DISPLAY-FORMAT
    /* 1697 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 9, character_data: Some(368), mode: ContentMode::Characters, ref_info: (0, 0)}, // DISPLAY-PRESENTATION
    /* 1698 */ ElementSpec {sub_elements: (11886, 11898), sub_element_ver: 4093, attributes: (115, 118), attributes_ver: 81, character_data: None, mode: ContentMode::Sequence, ref_info: (2893, 2894)}, // DLT-APPLICATION
    /* 1699 */ ElementSpec {sub_elements: (20480, 20481), sub_element_ver: 20, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // CONTEXTS
    /* 1700 */ ElementSpec {sub_elements: (13684, 13695), sub_element_ver: 4093, attributes: (115, 118), attributes_ver: 81, character_data: None, mode: ContentMode::Sequence, ref_info: (2894, 2900)}, // DLT-APPLICATION-TO-PROCESS-MAPPING
    /* 1701 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (1765, 1771), attributes_ver: 4093, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // DLT-APPLICATION-REF
    /* 1702 */ ElementSpec {sub_elements: (8646, 8660), sub_element_ver: 6461, attributes: (115, 118), attributes_ver: 909, character_data: None, mode: ContentMode::Sequence, ref_info: (2900, 2901)}, // DLT-ARGUMENT
    /* 1703 */ ElementSpec {sub_elements: (20481, 20482), sub_element_ver: 20, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // DLT-ARGUMENT-ENTRYS
    /* 1704 */ ElementSpec {sub_elements: (17997, 18003), sub_element_ver: 9006, attributes: (0, 2), attributes_ver: 64, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // DLT-CONFIG
    /* 1705 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (1771, 1777), attributes_ver: 4093, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // DLT-ECU-REF
    /* 1706 */ ElementSpec {sub_elements: (20482, 20483), sub_element_ver: 64, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // DLT-LOG-CHANNELS
    /* 1707 */ ElementSpec {sub_elements: (20483, 20484), sub_element_ver: 12, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // GLOBAL-TIME-DOMAINS
    /* 1708 */ ElementSpec {sub_elements: (11898, 11910), sub_element_ver: 4093, attributes: (115, 118), attributes_ver: 81, character_data: None, mode: ContentMode::Sequence, ref_info: (2901, 2907)}, // DLT-CONTEXT
    /* 1709 */ ElementSpec {sub_elements: (20484, 20485), sub_element_ver: 20, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // DLT-MESSAGES
    /* 1710 */ ElementSpec {sub_elements: (19706, 19708), sub_element_ver: 81, attributes: (0, 2), attributes_ver: 81, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // DLT-CONTEXT-REF-CONDITIONAL
    /* 1711 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 81, character_data: Some(371), mode: ContentMode::Characters, ref_info: (0, 0)}, // DEFAULT-TRACE-STATE
    /* 1712 */ ElementSpec {sub_elements: (13695, 13706), sub_element_ver: 4093, attributes: (115, 118), attributes_ver: 81, character_data: None, mode: ContentMode::Sequence, ref_info: (2907, 2913)}, // DLT-ECU
    /* 1713 */ ElementSpec {sub_elements: (20485, 20486), sub_element_ver: 20, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // APPLICATIONS
    /* 1714 */ ElementSpec {sub_elements: (1640, 1668), sub_element_ver: 1645, attributes: (115, 118), attributes_ver: 909, character_data: None, mode: ContentMode::Sequence, ref_info: (2913, 2914)}, // DLT-LOG-CHANNEL
    /* 1715 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (1777, 1783), attributes_ver: 4093, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // APPLICATION-CONTEXT-REF, DLT-CONTEXT-REF
    /* 1716 */ ElementSpec {sub_elements: (20486, 20487), sub_element_ver: 20, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // APPLICATION-CONTEXT-REFS
    /* 1717 */ ElementSpec {sub_elements: (13706, 13717), sub_element_ver: 7985, attributes: (115, 118), attributes_ver: 345, character_data: None, mode: ContentMode::Sequence, ref_info: (2914, 2918)}, // DLT-LOG-CHANNEL-DESIGN
    /* 1718 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (1783, 1789), attributes_ver: 7985, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // DLT-MESSAGE-REF
    /* 1719 */ ElementSpec {sub_elements: (20487, 20488), sub_element_ver: 345, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // DLT-MESSAGE-REFS
    /* 1720 */ ElementSpec {sub_elements: (13717, 13728), sub_element_ver: 7985, attributes: (115, 118), attributes_ver: 345, character_data: None, mode: ContentMode::Sequence, ref_info: (2918, 2922)}, // DLT-LOG-CHANNEL-DESIGN-TO-PROCESS-DESIGN-MAPPING
    /* 1721 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (175, 181), attributes_ver: 7985, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // PROCESS-DESIGN-REF
    /* 1722 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (1789, 1795), attributes_ver: 7985, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // DLT-LOG-CHANNEL-DESIGN-REF
    /* 1723 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (1783, 1789), attributes_ver: 1642, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // DLT-MESSAGE-REF
    /* 1724 */ ElementSpec {sub_elements: (20488, 20489), sub_element_ver: 64, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // DLT-MESSAGE-REFS
    /* 1725 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (1795, 1801), attributes_ver: 7985, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // ENDPOINT-CONFIGURATION-REF
    /* 1726 */ ElementSpec {sub_elements: (20489, 20490), sub_element_ver: 345, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // LOG-TRACE-LOG-MODES
    /* 1727 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (859, 865), attributes_ver: 1642, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // PDU-TRIGGERING-REF, RX-PDU-TRIGGERING-REF, TX-PDU-TRIGGERING-REF
    /* 1728 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (1801, 1807), attributes_ver: 7985, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // SERVICE-INSTANCE-TO-PORT-PROTOTYPE-MAPPING-REF
    /* 1729 */ ElementSpec {sub_elements: (13728, 13739), sub_element_ver: 7985, attributes: (115, 118), attributes_ver: 345, character_data: None, mode: ContentMode::Sequence, ref_info: (2922, 2927)}, // DLT-LOG-CHANNEL-TO-PROCESS-MAPPING
    /* 1730 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (1807, 1813), attributes_ver: 7985, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // DLT-LOG-CHANNEL-REF
    /* 1731 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (349, 355), attributes_ver: 7985, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // PROCESS-REF
    /* 1732 */ ElementSpec {sub_elements: (4591, 4609), sub_element_ver: 4093, attributes: (115, 118), attributes_ver: 81, character_data: None, mode: ContentMode::Sequence, ref_info: (2927, 2933)}, // DLT-LOG-SINK
    /* 1733 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (1795, 1801), attributes_ver: 4093, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // ENDPOINT-CONFIGURATION-REF
    /* 1734 */ ElementSpec {sub_elements: (7018, 7033), sub_element_ver: 4093, attributes: (115, 118), attributes_ver: 81, character_data: None, mode: ContentMode::Sequence, ref_info: (2933, 2939)}, // DLT-LOG-SINK-TO-PORT-PROTOTYPE-MAPPING
    /* 1735 */ ElementSpec {sub_elements: (20490, 20491), sub_element_ver: 20, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // DLT-LOG-SINK-REFS
    /* 1736 */ ElementSpec {sub_elements: (7033, 7048), sub_element_ver: 5688, attributes: (115, 118), attributes_ver: 909, character_data: None, mode: ContentMode::Sequence, ref_info: (2939, 2940)}, // DLT-MESSAGE
    /* 1737 */ ElementSpec {sub_elements: (15494, 15504), sub_element_ver: 1642, attributes: (115, 118), attributes_ver: 909, character_data: None, mode: ContentMode::Sequence, ref_info: (2940, 2944)}, // DLT-MESSAGE-COLLECTION-SET
    /* 1738 */ ElementSpec {sub_elements: (20491, 20492), sub_element_ver: 64, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // DLT-MESSAGES
    /* 1739 */ ElementSpec {sub_elements: (20481, 20482), sub_element_ver: 64, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // DLT-ARGUMENTS
    /* 1740 */ ElementSpec {sub_elements: (19708, 19710), sub_element_ver: 81, attributes: (0, 2), attributes_ver: 81, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // DLT-MESSAGE-REF-CONDITIONAL
    /* 1741 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (1783, 1789), attributes_ver: 4093, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // DLT-MESSAGE-REF
    /* 1742 */ ElementSpec {sub_elements: (777, 785), sub_element_ver: 841, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (2944, 2946)}, // DLT-USER-NEEDS
    /* 1743 */ ElementSpec {sub_elements: (777, 785), sub_element_ver: 1617, attributes: (115, 118), attributes_ver: 0, character_data: None, mode: ContentMode::Sequence, ref_info: (2946, 2949)}, // DO-IP-ACTIVATION-LINE-NEEDS
    /* 1744 */ ElementSpec {sub_elements: (19157, 19160), sub_element_ver: 9009, attributes: (0, 2), attributes_ver: 64, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // DO-IP-CONFIG
    /* 1745 */ ElementSpec {sub_elements: (20492, 20493), sub_element_ver: 64, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // DOIP-INTERFACES
    /* 1746 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 301, character_data: Some(377), mode: ContentMode::Characters, ref_info: (0, 0)}, // EID-RETRIEVAL
    /* 1747 */ ElementSpec {sub_elements: (20493, 20494), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 0, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // DO-IP-ENTITY
    /* 1748 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 0, character_data: Some(378), mode: ContentMode::Characters, ref_info: (0, 0)}, // DO-IP-ENTITY-ROLE
    /* 1749 */ ElementSpec {sub_elements: (7048, 7063), sub_element_ver: 3027, attributes: (115, 118), attributes_ver: 12, character_data: None, mode: ContentMode::Sequence, ref_info: (2949, 2951)}, // DO-IP-FUNCTIONAL-CLUSTER-DESIGN
    /* 1750 */ ElementSpec {sub_elements: (20494, 20495), sub_element_ver: 12, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // NETWORK-INTERFACES
    /* 1751 */ ElementSpec {sub_elements: (20495, 20496), sub_element_ver: 12, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // REQUEST-CONFIGURATION-DESIGNS
    /* 1752 */ ElementSpec {sub_elements: (777, 785), sub_element_ver: 1617, attributes: (115, 118), attributes_ver: 0, character_data: None, mode: ContentMode::Sequence, ref_info: (2951, 2954)}, // DO-IP-GID-NEEDS
    /* 1753 */ ElementSpec {sub_elements: (777, 785), sub_element_ver: 1617, attributes: (115, 118), attributes_ver: 0, character_data: None, mode: ContentMode::Sequence, ref_info: (2954, 2957)}, // DO-IP-GID-SYNCHRONIZATION-NEEDS
    /* 1754 */ ElementSpec {sub_elements: (4069, 4088), sub_element_ver: 3626, attributes: (115, 118), attributes_ver: 2229, character_data: None, mode: ContentMode::Sequence, ref_info: (2957, 2963)}, // DO-IP-INSTANTIATION
    /* 1755 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (1813, 1819), attributes_ver: 425, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // DO-IP-DESIGN-REF
    /* 1756 */ ElementSpec {sub_elements: (20496, 20497), sub_element_ver: 74, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // NETWORK-CONFIGURATIONS
    /* 1757 */ ElementSpec {sub_elements: (20497, 20498), sub_element_ver: 9, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // NETWORK-INTERFACES
    /* 1758 */ ElementSpec {sub_elements: (20498, 20499), sub_element_ver: 9, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // REQUEST-CONFIGURATIONS
    /* 1759 */ ElementSpec {sub_elements: (3036, 3058), sub_element_ver: 2721, attributes: (115, 118), attributes_ver: 909, character_data: None, mode: ContentMode::Sequence, ref_info: (2963, 2964)}, // DO-IP-INTERFACE
    /* 1760 */ ElementSpec {sub_elements: (20499, 20500), sub_element_ver: 19, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // DO-IP-ROUTING-ACTIVATIONS
    /* 1761 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (1819, 1825), attributes_ver: 1642, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // DOIP-CHANNEL-COLLECTION-REF
    /* 1762 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (1825, 1831), attributes_ver: 1642, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // DOIP-CONNECTION-REF
    /* 1763 */ ElementSpec {sub_elements: (20500, 20501), sub_element_ver: 64, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // DOIP-CONNECTION-REFS
    /* 1764 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (1831, 1837), attributes_ver: 1642, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // SOCKET-CONNECTION-REF, STATIC-SOCKET-CONNECTION-REF
    /* 1765 */ ElementSpec {sub_elements: (20501, 20502), sub_element_ver: 64, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // SOCKET-CONNECTION-REFS
    /* 1766 */ ElementSpec {sub_elements: (15504, 15514), sub_element_ver: 8355, attributes: (115, 118), attributes_ver: 4281, character_data: None, mode: ContentMode::Sequence, ref_info: (2964, 2965)}, // DO-IP-LOGIC-ADDRESS, LOGIC-ADDRESS
    /* 1767 */ ElementSpec {sub_elements: (19710, 19712), sub_element_ver: 77, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Choice, ref_info: (0, 0)}, // DO-IP-LOGIC-ADDRESS-PROPS
    /* 1768 */ ElementSpec {sub_elements: (777, 785), sub_element_ver: 1927, attributes: (115, 118), attributes_ver: 77, character_data: None, mode: ContentMode::Sequence, ref_info: (2965, 2967)}, // DO-IP-LOGIC-TARGET-ADDRESS-PROPS
    /* 1769 */ ElementSpec {sub_elements: (16869, 16878), sub_element_ver: 1927, attributes: (115, 118), attributes_ver: 77, character_data: None, mode: ContentMode::Sequence, ref_info: (2967, 2969)}, // DO-IP-LOGIC-TESTER-ADDRESS-PROPS
    /* 1770 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (1837, 1843), attributes_ver: 500, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // DO-IP-TESTER-ROUTING-ACTIVATION-REF
    /* 1771 */ ElementSpec {sub_elements: (20502, 20503), sub_element_ver: 19, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // DO-IP-TESTER-ROUTING-ACTIVATION-REFS
    /* 1772 */ ElementSpec {sub_elements: (16878, 16887), sub_element_ver: 3027, attributes: (115, 118), attributes_ver: 12, character_data: None, mode: ContentMode::Sequence, ref_info: (2969, 2970)}, // DO-IP-LOGICAL-ADDRESS
    /* 1773 */ ElementSpec {sub_elements: (5916, 5932), sub_element_ver: 5000, attributes: (0, 2), attributes_ver: 9, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // DO-IP-NETWORK-CONFIGURATION
    /* 1774 */ ElementSpec {sub_elements: (3427, 3448), sub_element_ver: 3027, attributes: (115, 118), attributes_ver: 12, character_data: None, mode: ContentMode::Sequence, ref_info: (2970, 2971)}, // DO-IP-NETWORK-CONFIGURATION-DESIGN
    /* 1775 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (1795, 1801), attributes_ver: 425, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // NETWORK-CONFIGURATION-REF
    /* 1776 */ ElementSpec {sub_elements: (20503, 20504), sub_element_ver: 12, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // NETWORK-CONFIGURATION-REFS
    /* 1777 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (1843, 1849), attributes_ver: 425, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // TP-CONNECTION-REF
    /* 1778 */ ElementSpec {sub_elements: (20504, 20505), sub_element_ver: 12, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // TP-CONNECTION-REFS
    /* 1779 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (1849, 1855), attributes_ver: 425, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // NETWORK-CONFIGURATION-DESIGN-REF
    /* 1780 */ ElementSpec {sub_elements: (20505, 20506), sub_element_ver: 6, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // NETWORK-CONFIGURATION-REFS
    /* 1781 */ ElementSpec {sub_elements: (777, 785), sub_element_ver: 1617, attributes: (115, 118), attributes_ver: 0, character_data: None, mode: ContentMode::Sequence, ref_info: (2971, 2974)}, // DO-IP-POWER-MODE-STATUS-NEEDS
    /* 1782 */ ElementSpec {sub_elements: (19160, 19163), sub_element_ver: 9, attributes: (0, 2), attributes_ver: 9, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // DO-IP-REQUEST-CONFIGURATION
    /* 1783 */ ElementSpec {sub_elements: (19160, 19163), sub_element_ver: 12, attributes: (0, 2), attributes_ver: 12, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // DO-IP-REQUEST-CONFIGURATION-DESIGN
    /* 1784 */ ElementSpec {sub_elements: (16887, 16896), sub_element_ver: 1927, attributes: (115, 118), attributes_ver: 77, character_data: None, mode: ContentMode::Sequence, ref_info: (2974, 2975)}, // DO-IP-ROUTING-ACTIVATION
    /* 1785 */ ElementSpec {sub_elements: (13739, 13750), sub_element_ver: 2765, attributes: (115, 118), attributes_ver: 0, character_data: None, mode: ContentMode::Sequence, ref_info: (2975, 2978)}, // DO-IP-ROUTING-ACTIVATION-AUTHENTICATION-NEEDS
    /* 1786 */ ElementSpec {sub_elements: (13750, 13761), sub_element_ver: 2765, attributes: (115, 118), attributes_ver: 0, character_data: None, mode: ContentMode::Sequence, ref_info: (2978, 2981)}, // DO-IP-ROUTING-ACTIVATION-CONFIRMATION-NEEDS
    /* 1787 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (1855, 1861), attributes_ver: 500, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // DO-IP-TARGET-ADDRESS-REF
    /* 1788 */ ElementSpec {sub_elements: (20506, 20507), sub_element_ver: 19, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // DO-IP-TARGET-ADDRESS-REFS
    /* 1789 */ ElementSpec {sub_elements: (16896, 16905), sub_element_ver: 3664, attributes: (0, 2), attributes_ver: 301, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // DO-IP-RULE
    /* 1790 */ ElementSpec {sub_elements: (11910, 11922), sub_element_ver: 7538, attributes: (115, 118), attributes_ver: 4281, character_data: None, mode: ContentMode::Sequence, ref_info: (2981, 2986)}, // DO-IP-TP-CONFIG
    /* 1791 */ ElementSpec {sub_elements: (20507, 20508), sub_element_ver: 354, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // DO-IP-LOGIC-ADDRESSS
    /* 1792 */ ElementSpec {sub_elements: (20508, 20509), sub_element_ver: 354, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // TP-CONNECTIONS
    /* 1793 */ ElementSpec {sub_elements: (18671, 18675), sub_element_ver: 7160, attributes: (0, 2), attributes_ver: 1612, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // DO-IP-TP-CONNECTION
    /* 1794 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (1861, 1867), attributes_ver: 9385, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // DO-IP-SOURCE-ADDRESS-REF, DO-IP-TARGET-ADDRESS-REF
    /* 1795 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (859, 865), attributes_ver: 9385, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // TP-SDU-REF
    /* 1796 */ ElementSpec {sub_elements: (16905, 16914), sub_element_ver: 8630, attributes: (0, 2), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // DOC-REVISION
    /* 1797 */ ElementSpec {sub_elements: (20509, 20510), sub_element_ver: 7, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // MODIFICATIONS
    /* 1798 */ ElementSpec {sub_elements: (11922, 11934), sub_element_ver: 3816, attributes: (115, 118), attributes_ver: 192, character_data: None, mode: ContentMode::Sequence, ref_info: (2986, 2989)}, // DOCUMENT-ELEMENT-SCOPE
    /* 1799 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (343, 349), attributes_ver: 9325, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // CUSTOM-DOCUMENT-ELEMENT-REF
    /* 1800 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (1867, 1873), attributes_ver: 9325, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // TAILORING-REF
    /* 1801 */ ElementSpec {sub_elements: (20510, 20511), sub_element_ver: 21, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // TAILORING-REFS
    /* 1802 */ ElementSpec {sub_elements: (13761, 13772), sub_element_ver: 5080, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (2989, 2995)}, // DOCUMENTATION
    /* 1803 */ ElementSpec {sub_elements: (7544, 7555), sub_element_ver: 5899, attributes: (0, 2), attributes_ver: 22, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // ADD-INFO-5, ANNOTATION-TEXT, BLUEPRINT-CONDITION, BLUEPRINT-DERIVATION-GUIDE, BLUEPRINT-MAPPING-GUIDE, COND, CONFLICTS, DEF, DEPENDENCIES, DESCRIPTION, DOCUMENTATION, INTRODUCTION, MSR-QUERY-RESULT-P-2, RATIONALE, REMARK, SUPPORTING-MATERIAL, SW-GENERIC-AXIS-DESC, USE-CASE, VALUE
    /* 1804 */ ElementSpec {sub_elements: (18309, 18314), sub_element_ver: 841, attributes: (0, 2), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (2995, 2996)}, // DOCUMENTATION-CONTEXT
    /* 1805 */ ElementSpec {sub_elements: (20511, 20512), sub_element_ver: 7, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // CONTEXTS
    /* 1806 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 401, character_data: Some(387), mode: ContentMode::Characters, ref_info: (0, 0)}, // DTC-FORMAT-TYPE
    /* 1807 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 22, character_data: Some(388), mode: ContentMode::Characters, ref_info: (0, 0)}, // DTC-KIND
    /* 1808 */ ElementSpec {sub_elements: (10020, 10033), sub_element_ver: 6865, attributes: (115, 118), attributes_ver: 6379, character_data: None, mode: ContentMode::Sequence, ref_info: (2996, 2999)}, // DTC-STATUS-CHANGE-NOTIFICATION-NEEDS
    /* 1809 */ ElementSpec {sub_elements: (19163, 19166), sub_element_ver: 22, attributes: (0, 2), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // DYNAMIC-PART
    /* 1810 */ ElementSpec {sub_elements: (19166, 19169), sub_element_ver: 22, attributes: (0, 2), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // DYNAMIC-PART-ALTERNATIVE
    /* 1811 */ ElementSpec {sub_elements: (20512, 20513), sub_element_ver: 7, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // DYNAMIC-PART-ALTERNATIVES
    /* 1812 */ ElementSpec {sub_elements: (13772, 13783), sub_element_ver: 7996, attributes: (115, 118), attributes_ver: 77, character_data: None, mode: ContentMode::Sequence, ref_info: (2999, 3005)}, // E-2-E-PROFILE-COMPATIBILITY-PROPS
    /* 1813 */ ElementSpec {sub_elements: (2619, 2643), sub_element_ver: 2350, attributes: (115, 118), attributes_ver: 1153, character_data: None, mode: ContentMode::Sequence, ref_info: (3005, 3006)}, // E-2-E-PROFILE-CONFIGURATION
    /* 1814 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (1873, 1879), attributes_ver: 500, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // E-2-E-PROFILE-COMPATIBILITY-PROPS-REF
    /* 1815 */ ElementSpec {sub_elements: (15514, 15524), sub_element_ver: 3376, attributes: (115, 118), attributes_ver: 1153, character_data: None, mode: ContentMode::Sequence, ref_info: (3006, 3012)}, // E-2-E-PROFILE-CONFIGURATION-SET
    /* 1816 */ ElementSpec {sub_elements: (20513, 20514), sub_element_ver: 8, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // E-2-E-PROFILE-CONFIGURATIONS
    /* 1817 */ ElementSpec {sub_elements: (3448, 3469), sub_element_ver: 3006, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (3012, 3022)}, // ECU-ABSTRACTION-SW-COMPONENT-TYPE
    /* 1818 */ ElementSpec {sub_elements: (20514, 20515), sub_element_ver: 7, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // HARDWARE-ELEMENT-REFS
    /* 1819 */ ElementSpec {sub_elements: (820, 862), sub_element_ver: 884, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (3022, 3026)}, // ECU-INSTANCE
    /* 1820 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (769, 775), attributes_ver: 9361, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // ASSOCIATED-COM-I-PDU-GROUP-REF, CONTAINED-I-SIGNAL-I-PDU-GROUP-REF
    /* 1821 */ ElementSpec {sub_elements: (20515, 20516), sub_element_ver: 7, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // ASSOCIATED-COM-I-PDU-GROUP-REFS
    /* 1822 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (1879, 1885), attributes_ver: 9361, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // ASSOCIATED-PDUR-I-PDU-GROUP-REF
    /* 1823 */ ElementSpec {sub_elements: (20516, 20517), sub_element_ver: 7, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // ASSOCIATED-PDUR-I-PDU-GROUP-REFS
    /* 1824 */ ElementSpec {sub_elements: (20517, 20518), sub_element_ver: 7, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // CAN-TP-ADDRESS-REFS
    /* 1825 */ ElementSpec {sub_elements: (17731, 17738), sub_element_ver: 1829, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // COMM-CONTROLLERS
    /* 1826 */ ElementSpec {sub_elements: (18003, 18009), sub_element_ver: 1830, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // CONNECTORS
    /* 1827 */ ElementSpec {sub_elements: (20518, 20519), sub_element_ver: 64, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // ECU-INSTANCE-PROPSS
    /* 1828 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (1885, 1891), attributes_ver: 4093, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // APP-TASK-PROXY-REF, ECU-TASK-PROXY-REF, OS-TASK-PROXY-REF
    /* 1829 */ ElementSpec {sub_elements: (20519, 20520), sub_element_ver: 20, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // ECU-TASK-PROXY-REFS
    /* 1830 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (871, 877), attributes_ver: 230, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // FIREWALL-RULE-REF, STATE-DEP-FIREWALL-REF
    /* 1831 */ ElementSpec {sub_elements: (20520, 20521), sub_element_ver: 16, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // FIREWALL-RULE-REFS
    /* 1832 */ ElementSpec {sub_elements: (20521, 20522), sub_element_ver: 7, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // PARTITIONS
    /* 1833 */ ElementSpec {sub_elements: (19712, 19714), sub_element_ver: 64, attributes: (0, 2), attributes_ver: 64, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // ECU-INSTANCE-PROPS
    /* 1834 */ ElementSpec {sub_elements: (19714, 19716), sub_element_ver: 77, attributes: (0, 2), attributes_ver: 77, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // ECU-INSTANCE-REF-CONDITIONAL
    /* 1835 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (655, 661), attributes_ver: 500, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // ECU-INSTANCE-REF, ECU-SCOPE-REF, RELEVANT-FOR-DYNAMIC-PNC-MAPPING-REF
    /* 1836 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (1891, 1897), attributes_ver: 500, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // TCP-IP-ICMP-PROPS-REF
    /* 1837 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (1897, 1903), attributes_ver: 500, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // TCP-IP-PROPS-REF
    /* 1838 */ ElementSpec {sub_elements: (20522, 20523), sub_element_ver: 7, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // TP-ADDRESS-REFS
    /* 1839 */ ElementSpec {sub_elements: (10033, 10046), sub_element_ver: 3721, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (3026, 3027)}, // ECU-MAPPING
    /* 1840 */ ElementSpec {sub_elements: (20523, 20524), sub_element_ver: 7, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // COMM-CONTROLLER-MAPPINGS
    /* 1841 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (1903, 1909), attributes_ver: 9361, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // ECU-REF, HW-COMMUNICATION-CONTROLLER-REF, HW-ELEMENT-REF, PROCESSING-UNIT-REF, PROVIDED-MEMORY-REF
    /* 1842 */ ElementSpec {sub_elements: (20524, 20525), sub_element_ver: 7, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // HW-PORT-MAPPINGS
    /* 1843 */ ElementSpec {sub_elements: (16914, 16923), sub_element_ver: 841, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (3027, 3028)}, // ECU-PARTITION
    /* 1844 */ ElementSpec {sub_elements: (17738, 17745), sub_element_ver: 8849, attributes: (0, 2), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // ECU-RESOURCE-ESTIMATION
    /* 1845 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (1909, 1915), attributes_ver: 9361, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // SW-COMP-TO-ECU-MAPPING-REF
    /* 1846 */ ElementSpec {sub_elements: (20525, 20526), sub_element_ver: 7, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // SW-COMP-TO-ECU-MAPPING-REFS
    /* 1847 */ ElementSpec {sub_elements: (777, 785), sub_element_ver: 841, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (3028, 3030)}, // ECU-STATE-MGR-USER-NEEDS
    /* 1848 */ ElementSpec {sub_elements: (5137, 5154), sub_element_ver: 4380, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (3030, 3035)}, // ECU-TIMING
    /* 1849 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (1915, 1921), attributes_ver: 9361, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // ECU-CONFIGURATION-REF
    /* 1850 */ ElementSpec {sub_elements: (20526, 20527), sub_element_ver: 386, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // ANNOTATIONS
    /* 1851 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (1921, 1927), attributes_ver: 9361, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // DEFINITION-REF
    /* 1852 */ ElementSpec {sub_elements: (1349, 1376), sub_element_ver: 1413, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (3035, 3040)}, // ECUC-ADD-INFO-PARAM-DEF
    /* 1853 */ ElementSpec {sub_elements: (18009, 18015), sub_element_ver: 1063, attributes: (0, 2), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // ECUC-ADD-INFO-PARAM-VALUE
    /* 1854 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 22, character_data: Some(396), mode: ContentMode::Characters, ref_info: (0, 0)}, // AFFECTION-KIND
    /* 1855 */ ElementSpec {sub_elements: (1668, 1696), sub_element_ver: 1413, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (3040, 3045)}, // ECUC-BOOLEAN-PARAM-DEF
    /* 1856 */ ElementSpec {sub_elements: (3058, 3080), sub_element_ver: 2129, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (3045, 3049)}, // ECUC-CHOICE-CONTAINER-DEF
    /* 1857 */ ElementSpec {sub_elements: (19725, 19726), sub_element_ver: 7, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // CHOICES
    /* 1858 */ ElementSpec {sub_elements: (2002, 2029), sub_element_ver: 1867, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (3049, 3055)}, // ECUC-CHOICE-REFERENCE-DEF
    /* 1859 */ ElementSpec {sub_elements: (20527, 20528), sub_element_ver: 7, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // DESTINATION-REFS
    /* 1860 */ ElementSpec {sub_elements: (20528, 20529), sub_element_ver: 7, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // IMPLEMENTATION-CONFIG-CLASSES
    /* 1861 */ ElementSpec {sub_elements: (20529, 20530), sub_element_ver: 43, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // VALUE-CONFIG-CLASSES
    /* 1862 */ ElementSpec {sub_elements: (19716, 19718), sub_element_ver: 903, attributes: (0, 2), attributes_ver: 796, character_data: Some(982), mode: ContentMode::Mixed, ref_info: (0, 0)}, // CONDITION-FORMULA, VALIDATION-FORMULA
    /* 1863 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (499, 505), attributes_ver: 9391, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // ECUC-QUERY-REF
    /* 1864 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (499, 505), attributes_ver: 9349, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // ECUC-QUERY-STRING-REF
    /* 1865 */ ElementSpec {sub_elements: (19169, 19172), sub_element_ver: 871, attributes: (0, 2), attributes_ver: 796, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // ECUC-COND
    /* 1866 */ ElementSpec {sub_elements: (19723, 19724), sub_element_ver: 519, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // ECUC-QUERYS
    /* 1867 */ ElementSpec {sub_elements: (19718, 19720), sub_element_ver: 22, attributes: (0, 2), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // CONFIGURATION-CLASS-AFFECTION
    /* 1868 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (1927, 1933), attributes_ver: 9361, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // AFFECTED-REF
    /* 1869 */ ElementSpec {sub_elements: (20530, 20531), sub_element_ver: 7, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // AFFECTED-REFS
    /* 1870 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 22, character_data: Some(398), mode: ContentMode::Characters, ref_info: (0, 0)}, // CONFIG-CLASS
    /* 1871 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 22, character_data: Some(399), mode: ContentMode::Characters, ref_info: (0, 0)}, // CONFIG-VARIANT, IMPLEMENTATION-CONFIG-VARIANT, SUPPORTED-CONFIG-VARIANT
    /* 1872 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (1933, 1939), attributes_ver: 9331, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // DESTINATION-URI-REF
    /* 1873 */ ElementSpec {sub_elements: (20531, 20532), sub_element_ver: 43, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // DESTINATION-URI-REFS
    /* 1874 */ ElementSpec {sub_elements: (20532, 20533), sub_element_ver: 43, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // MULTIPLICITY-CONFIG-CLASSES
    /* 1875 */ ElementSpec {sub_elements: (8660, 8674), sub_element_ver: 6475, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (3055, 3056)}, // ECUC-CONTAINER-VALUE
    /* 1876 */ ElementSpec {sub_elements: (19172, 19175), sub_element_ver: 22, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // PARAMETER-VALUES
    /* 1877 */ ElementSpec {sub_elements: (19720, 19722), sub_element_ver: 22, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // REFERENCE-VALUES
    /* 1878 */ ElementSpec {sub_elements: (20533, 20534), sub_element_ver: 7, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // CONTAINERS, SUB-CONTAINERS
    /* 1879 */ ElementSpec {sub_elements: (11934, 11946), sub_element_ver: 4720, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (3056, 3062)}, // ECUC-DEFINITION-COLLECTION
    /* 1880 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (1939, 1945), attributes_ver: 9361, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // DEFINITION-REF, MODULE-REF, REFINED-MODULE-DEF-REF, VENDOR-SPECIFIC-MODULE-DEF-REF
    /* 1881 */ ElementSpec {sub_elements: (20534, 20535), sub_element_ver: 7, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // MODULE-REFS
    /* 1882 */ ElementSpec {sub_elements: (20535, 20536), sub_element_ver: 0, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // ECUC-VALIDATION-CONDS
    /* 1883 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (343, 349), attributes_ver: 9385, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // RELATED-TRACE-ITEM-REF
    /* 1884 */ ElementSpec {sub_elements: (19175, 19178), sub_element_ver: 22, attributes: (0, 2), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // DERIVATION
    /* 1885 */ ElementSpec {sub_elements: (19722, 19724), sub_element_ver: 795, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // ECUC-QUERYS
    /* 1886 */ ElementSpec {sub_elements: (16923, 16932), sub_element_ver: 1317, attributes: (115, 118), attributes_ver: 140, character_data: None, mode: ContentMode::Sequence, ref_info: (3062, 3063)}, // ECUC-DESTINATION-URI-DEF
    /* 1887 */ ElementSpec {sub_elements: (11946, 11958), sub_element_ver: 2034, attributes: (115, 118), attributes_ver: 140, character_data: None, mode: ContentMode::Sequence, ref_info: (3063, 3069)}, // ECUC-DESTINATION-URI-DEF-SET
    /* 1888 */ ElementSpec {sub_elements: (20536, 20537), sub_element_ver: 43, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // DESTINATION-URI-DEFS
    /* 1889 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 120, character_data: Some(404), mode: ContentMode::Characters, ref_info: (0, 0)}, // DESTINATION-URI-NESTING-CONTRACT
    /* 1890 */ ElementSpec {sub_elements: (18675, 18679), sub_element_ver: 140, attributes: (0, 2), attributes_ver: 120, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // DESTINATION-URI-POLICY
    /* 1891 */ ElementSpec {sub_elements: (19724, 19726), sub_element_ver: 120, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // CONTAINERS
    /* 1892 */ ElementSpec {sub_elements: (16932, 16941), sub_element_ver: 1684, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // PARAMETERS
    /* 1893 */ ElementSpec {sub_elements: (18015, 18021), sub_element_ver: 244, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // REFERENCES
    /* 1894 */ ElementSpec {sub_elements: (15524, 15534), sub_element_ver: 8365, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (3069, 3070)}, // ECUC-ENUMERATION-LITERAL-DEF
    /* 1895 */ ElementSpec {sub_elements: (1439, 1468), sub_element_ver: 1413, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (3070, 3075)}, // ECUC-ENUMERATION-PARAM-DEF
    /* 1896 */ ElementSpec {sub_elements: (20537, 20538), sub_element_ver: 7, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // LITERALS
    /* 1897 */ ElementSpec {sub_elements: (1349, 1379), sub_element_ver: 1413, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (3075, 3080)}, // ECUC-FLOAT-PARAM-DEF
    /* 1898 */ ElementSpec {sub_elements: (2029, 2056), sub_element_ver: 1894, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (3080, 3086)}, // ECUC-FOREIGN-REFERENCE-DEF
    /* 1899 */ ElementSpec {sub_elements: (1696, 1724), sub_element_ver: 1413, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (3086, 3092)}, // ECUC-FUNCTION-NAME-DEF
    /* 1900 */ ElementSpec {sub_elements: (20538, 20539), sub_element_ver: 7, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // ECUC-FUNCTION-NAME-DEF-VARIANTS
    /* 1901 */ ElementSpec {sub_elements: (19726, 19728), sub_element_ver: 22, attributes: (0, 2), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // ECUC-IMPLEMENTATION-CONFIGURATION-CLASS
    /* 1902 */ ElementSpec {sub_elements: (1468, 1497), sub_element_ver: 1473, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (3092, 3098)}, // ECUC-INSTANCE-REFERENCE-DEF
    /* 1903 */ ElementSpec {sub_elements: (18021, 18027), sub_element_ver: 9012, attributes: (0, 2), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // ECUC-INSTANCE-REFERENCE-VALUE
    /* 1904 */ ElementSpec {sub_elements: (1379, 1409), sub_element_ver: 1413, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (3098, 3103)}, // ECUC-INTEGER-PARAM-DEF
    /* 1905 */ ElementSpec {sub_elements: (1724, 1752), sub_element_ver: 1413, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (3103, 3109)}, // ECUC-LINKER-SYMBOL-DEF
    /* 1906 */ ElementSpec {sub_elements: (20539, 20540), sub_element_ver: 7, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // ECUC-LINKER-SYMBOL-DEF-VARIANTS
    /* 1907 */ ElementSpec {sub_elements: (7063, 7078), sub_element_ver: 5703, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (3109, 3113)}, // ECUC-MODULE-CONFIGURATION-VALUES
    /* 1908 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (535, 541), attributes_ver: 9361, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // MODULE-DESCRIPTION-REF
    /* 1909 */ ElementSpec {sub_elements: (19728, 19730), sub_element_ver: 22, attributes: (0, 2), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // ECUC-MODULE-CONFIGURATION-VALUES-REF-CONDITIONAL
    /* 1910 */ ElementSpec {sub_elements: (2856, 2879), sub_element_ver: 2563, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (3113, 3121)}, // ECUC-MODULE-DEF
    /* 1911 */ ElementSpec {sub_elements: (19724, 19726), sub_element_ver: 22, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // CONTAINERS, SUB-CONTAINERS
    /* 1912 */ ElementSpec {sub_elements: (20540, 20541), sub_element_ver: 7, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // SUPPORTED-CONFIG-VARIANTS
    /* 1913 */ ElementSpec {sub_elements: (1752, 1780), sub_element_ver: 1413, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (3121, 3127)}, // ECUC-MULTILINE-STRING-PARAM-DEF
    /* 1914 */ ElementSpec {sub_elements: (20541, 20542), sub_element_ver: 7, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // ECUC-MULTILINE-STRING-PARAM-DEF-VARIANTS
    /* 1915 */ ElementSpec {sub_elements: (18027, 18033), sub_element_ver: 1063, attributes: (0, 2), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // ECUC-NUMERICAL-PARAM-VALUE
    /* 1916 */ ElementSpec {sub_elements: (2398, 2423), sub_element_ver: 2129, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (3127, 3131)}, // ECUC-PARAM-CONF-CONTAINER-DEF
    /* 1917 */ ElementSpec {sub_elements: (16932, 16941), sub_element_ver: 814, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // PARAMETERS
    /* 1918 */ ElementSpec {sub_elements: (18015, 18021), sub_element_ver: 4545, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // REFERENCES
    /* 1919 */ ElementSpec {sub_elements: (19730, 19732), sub_element_ver: 385, attributes: (0, 2), attributes_ver: 22, character_data: Some(982), mode: ContentMode::Mixed, ref_info: (0, 0)}, // CALCULATION-FORMULA
    /* 1920 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (499, 505), attributes_ver: 9361, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // ECUC-QUERY-REF
    /* 1921 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (1945, 1951), attributes_ver: 9361, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // DEFINITION-REF
    /* 1922 */ ElementSpec {sub_elements: (16941, 16950), sub_element_ver: 5853, attributes: (115, 118), attributes_ver: 871, character_data: None, mode: ContentMode::Sequence, ref_info: (3131, 3132)}, // ECUC-QUERY
    /* 1923 */ ElementSpec {sub_elements: (17512, 17520), sub_element_ver: 8030, attributes: (115, 118), attributes_ver: 615, character_data: Some(982), mode: ContentMode::Mixed, ref_info: (0, 0)}, // ECUC-QUERY-EXPRESSION
    /* 1924 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (505, 511), attributes_ver: 9361, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // CONFIG-ELEMENT-DEF-GLOBAL-REF, CONFIG-ELEMENT-DEF-LOCAL-REF
    /* 1925 */ ElementSpec {sub_elements: (2056, 2083), sub_element_ver: 1867, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (3132, 3138)}, // ECUC-REFERENCE-DEF
    /* 1926 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (1951, 1957), attributes_ver: 9361, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // DEFINITION-REF, DESTINATION-REF
    /* 1927 */ ElementSpec {sub_elements: (18033, 18039), sub_element_ver: 9012, attributes: (0, 2), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // ECUC-REFERENCE-VALUE
    /* 1928 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 0, character_data: Some(410), mode: ContentMode::Characters, ref_info: (0, 0)}, // SCOPE
    /* 1929 */ ElementSpec {sub_elements: (1780, 1808), sub_element_ver: 1413, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (3138, 3144)}, // ECUC-STRING-PARAM-DEF
    /* 1930 */ ElementSpec {sub_elements: (18039, 18045), sub_element_ver: 809, attributes: (0, 2), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // ECUC-FUNCTION-NAME-DEF-CONDITIONAL, ECUC-LINKER-SYMBOL-DEF-CONDITIONAL, ECUC-MULTILINE-STRING-PARAM-DEF-CONDITIONAL, ECUC-STRING-PARAM-DEF-CONDITIONAL
    /* 1931 */ ElementSpec {sub_elements: (20542, 20543), sub_element_ver: 7, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // ECUC-STRING-PARAM-DEF-VARIANTS
    /* 1932 */ ElementSpec {sub_elements: (2083, 2110), sub_element_ver: 1867, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (3144, 3150)}, // ECUC-SYMBOLIC-NAME-REFERENCE-DEF
    /* 1933 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (1957, 1963), attributes_ver: 9361, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // DESTINATION-REF
    /* 1934 */ ElementSpec {sub_elements: (18045, 18051), sub_element_ver: 1063, attributes: (0, 2), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // ECUC-TEXTUAL-PARAM-VALUE
    /* 1935 */ ElementSpec {sub_elements: (2296, 2322), sub_element_ver: 2027, attributes: (115, 118), attributes_ver: 140, character_data: None, mode: ContentMode::Sequence, ref_info: (3150, 3156)}, // ECUC-URI-REFERENCE-DEF
    /* 1936 */ ElementSpec {sub_elements: (15534, 15544), sub_element_ver: 2765, attributes: (115, 118), attributes_ver: 0, character_data: None, mode: ContentMode::Sequence, ref_info: (3156, 3157)}, // ECUC-VALIDATION-CONDITION
    /* 1937 */ ElementSpec {sub_elements: (19723, 19724), sub_element_ver: 0, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // ECUC-QUERYS
    /* 1938 */ ElementSpec {sub_elements: (13783, 13794), sub_element_ver: 5080, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (3157, 3161)}, // ECUC-VALUE-COLLECTION
    /* 1939 */ ElementSpec {sub_elements: (20543, 20544), sub_element_ver: 7, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // ECUC-VALUES
    /* 1940 */ ElementSpec {sub_elements: (19726, 19728), sub_element_ver: 120, attributes: (0, 2), attributes_ver: 120, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // ECUC-MULTIPLICITY-CONFIGURATION-CLASS, ECUC-VALUE-CONFIGURATION-CLASS
    /* 1941 */ ElementSpec {sub_elements: (18314, 18319), sub_element_ver: 8051, attributes: (0, 2), attributes_ver: 2200, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // ELEMENT-IN-IMPL-DATATYPE
    /* 1942 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (811, 817), attributes_ver: 9367, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // CONTEXT-COMPONENT-REF
    /* 1943 */ ElementSpec {sub_elements: (20544, 20545), sub_element_ver: 1541, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // CONTEXT-COMPONENT-REFS
    /* 1944 */ ElementSpec {sub_elements: (20545, 20546), sub_element_ver: 1541, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // CONTEXT-DATA-PROTOTYPE-REFS
    /* 1945 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (409, 415), attributes_ver: 9367, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // ROOT-DATA-PROTOTYPE-REF
    /* 1946 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (1963, 1969), attributes_ver: 9367, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // CONTEXT-DATA-PROTOTYPE-REF, TARGET-DATA-PROTOTYPE-REF
    /* 1947 */ ElementSpec {sub_elements: (19178, 19181), sub_element_ver: 840, attributes: (3641, 3646), attributes_ver: 456, character_data: Some(982), mode: ContentMode::Mixed, ref_info: (0, 0)}, // E
    /* 1948 */ ElementSpec {sub_elements: (20546, 20547), sub_element_ver: 7, attributes: (0, 2), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // EMPTY-SIGNAL
    /* 1949 */ ElementSpec {sub_elements: (5932, 5948), sub_element_ver: 5016, attributes: (115, 118), attributes_ver: 1153, character_data: None, mode: ContentMode::Sequence, ref_info: (3161, 3162)}, // END-2-END-EVENT-PROTECTION-PROPS
    /* 1950 */ ElementSpec {sub_elements: (20547, 20548), sub_element_ver: 8, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // DATA-IDS
    /* 1951 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (1969, 1975), attributes_ver: 9355, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // E-2-E-PROFILE-CONFIGURATION-REF
    /* 1952 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (733, 739), attributes_ver: 9355, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // EVENT-REF
    /* 1953 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (745, 751), attributes_ver: 9421, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // NOTIFIER-REF
    /* 1954 */ ElementSpec {sub_elements: (5948, 5964), sub_element_ver: 5032, attributes: (115, 118), attributes_ver: 910, character_data: None, mode: ContentMode::Sequence, ref_info: (3162, 3163)}, // END-2-END-METHOD-PROTECTION-PROPS
    /* 1955 */ ElementSpec {sub_elements: (20547, 20548), sub_element_ver: 64, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // DATA-IDS
    /* 1956 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (1969, 1975), attributes_ver: 1642, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // E-2-E-PROFILE-CONFIGURATION-REF
    /* 1957 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (781, 787), attributes_ver: 1642, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // METHOD-REF
    /* 1958 */ ElementSpec {sub_elements: (13794, 13805), sub_element_ver: 8007, attributes: (0, 2), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // END-TO-END-PROFILE
    /* 1959 */ ElementSpec {sub_elements: (20547, 20548), sub_element_ver: 7, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // DATA-IDS
    /* 1960 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 120, character_data: Some(412), mode: ContentMode::Characters, ref_info: (0, 0)}, // PROFILE-BEHAVIOR
    /* 1961 */ ElementSpec {sub_elements: (11958, 11970), sub_element_ver: 7550, attributes: (115, 118), attributes_ver: 871, character_data: None, mode: ContentMode::Sequence, ref_info: (3163, 3164)}, // END-TO-END-PROTECTION
    /* 1962 */ ElementSpec {sub_elements: (19181, 19182), sub_element_ver: 519, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // END-TO-END-PROTECTION-I-SIGNAL-I-PDUS
    /* 1963 */ ElementSpec {sub_elements: (19182, 19183), sub_element_ver: 519, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // END-TO-END-PROTECTION-VARIABLE-PROTOTYPES
    /* 1964 */ ElementSpec {sub_elements: (13805, 13816), sub_element_ver: 8018, attributes: (115, 118), attributes_ver: 615, character_data: None, mode: ContentMode::Sequence, ref_info: (3164, 3166)}, // END-TO-END-PROTECTION-I-SIGNAL-I-PDU
    /* 1965 */ ElementSpec {sub_elements: (15544, 15554), sub_element_ver: 884, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (3166, 3170)}, // END-TO-END-PROTECTION-SET
    /* 1966 */ ElementSpec {sub_elements: (19181, 19184), sub_element_ver: 794, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // END-TO-END-PROTECTIONS
    /* 1967 */ ElementSpec {sub_elements: (13816, 13827), sub_element_ver: 8029, attributes: (115, 118), attributes_ver: 615, character_data: None, mode: ContentMode::Sequence, ref_info: (3170, 3172)}, // END-TO-END-PROTECTION-VARIABLE-PROTOTYPE
    /* 1968 */ ElementSpec {sub_elements: (20548, 20549), sub_element_ver: 7, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // RECEIVER-IREFS
    /* 1969 */ ElementSpec {sub_elements: (3469, 3490), sub_element_ver: 3069, attributes: (0, 2), attributes_ver: 120, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // END-TO-END-TRANSFORMATION-COM-SPEC-PROPS
    /* 1970 */ ElementSpec {sub_elements: (1808, 1836), sub_element_ver: 1673, attributes: (0, 2), attributes_ver: 120, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // END-TO-END-TRANSFORMATION-DESCRIPTION
    /* 1971 */ ElementSpec {sub_elements: (18319, 18324), sub_element_ver: 140, attributes: (0, 2), attributes_ver: 120, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // END-TO-END-TRANSFORMATION-I-SIGNAL-PROPS
    /* 1972 */ ElementSpec {sub_elements: (15554, 15564), sub_element_ver: 8375, attributes: (0, 2), attributes_ver: 120, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // END-TO-END-TRANSFORMATION-I-SIGNAL-PROPS-CONDITIONAL
    /* 1973 */ ElementSpec {sub_elements: (20547, 20548), sub_element_ver: 43, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // DATA-IDS
    /* 1974 */ ElementSpec {sub_elements: (20549, 20550), sub_element_ver: 43, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // END-TO-END-TRANSFORMATION-I-SIGNAL-PROPS-VARIANTS
    /* 1975 */ ElementSpec {sub_elements: (20550, 20551), sub_element_ver: 7, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // REVISION-LABELS
    /* 1976 */ ElementSpec {sub_elements: (19732, 19734), sub_element_ver: 1153, attributes: (0, 2), attributes_ver: 1153, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // DEFAULT-APPLICATION-TIMEOUT, TIMEOUT
    /* 1977 */ ElementSpec {sub_elements: (11970, 11982), sub_element_ver: 7562, attributes: (71, 84), attributes_ver: 9271, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // ENTRY
    /* 1978 */ ElementSpec {sub_elements: (19734, 19736), sub_element_ver: 134, attributes: (0, 2), attributes_ver: 134, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // ENTRY
    /* 1979 */ ElementSpec {sub_elements: (15564, 15574), sub_element_ver: 3276, attributes: (115, 118), attributes_ver: 192, character_data: None, mode: ContentMode::Sequence, ref_info: (3172, 3175)}, // ENUMERATION-MAPPING-TABLE
    /* 1980 */ ElementSpec {sub_elements: (20551, 20552), sub_element_ver: 21, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // ENTRYS
    /* 1981 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 120, character_data: Some(413), mode: ContentMode::Characters, ref_info: (0, 0)}, // ENVIRONMENT-CAPTURE-TO-REPORTING
    /* 1982 */ ElementSpec {sub_elements: (10046, 10059), sub_element_ver: 2034, attributes: (115, 118), attributes_ver: 140, character_data: None, mode: ContentMode::Sequence, ref_info: (3175, 3177)}, // EOC-EVENT-REF
    /* 1983 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (535, 541), attributes_ver: 9331, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // BSW-MODULE-INSTANCE-REF
    /* 1984 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (1975, 1981), attributes_ver: 9331, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // EVENT-REF
    /* 1985 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (1981, 1987), attributes_ver: 9331, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // SUCCESSOR-REF
    /* 1986 */ ElementSpec {sub_elements: (20552, 20553), sub_element_ver: 43, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // SUCCESSOR-REFS
    /* 1987 */ ElementSpec {sub_elements: (10059, 10072), sub_element_ver: 6878, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (3177, 3179)}, // EOC-EXECUTABLE-ENTITY-REF
    /* 1988 */ ElementSpec {sub_elements: (20553, 20554), sub_element_ver: 0, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // DIRECT-SUCCESSOR-REFS
    /* 1989 */ ElementSpec {sub_elements: (4609, 4627), sub_element_ver: 4111, attributes: (115, 118), attributes_ver: 0, character_data: None, mode: ContentMode::Sequence, ref_info: (3179, 3181)}, // EOC-EXECUTABLE-ENTITY-REF-GROUP
    /* 1990 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (1987, 1993), attributes_ver: 1187, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // LET-INTERVAL-REF
    /* 1991 */ ElementSpec {sub_elements: (20554, 20555), sub_element_ver: 9, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // LET-INTERVAL-REFS
    /* 1992 */ ElementSpec {sub_elements: (20555, 20556), sub_element_ver: 0, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // NESTED-ELEMENT-REFS
    /* 1993 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (1981, 1987), attributes_ver: 9319, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // DIRECT-SUCCESSOR-REF, NESTED-ELEMENT-REF, SUCCESSOR-REF
    /* 1994 */ ElementSpec {sub_elements: (20556, 20557), sub_element_ver: 0, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // SUCCESSOR-REFS
    /* 1995 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (1981, 1987), attributes_ver: 9361, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // SUCCESSOR-REF
    /* 1996 */ ElementSpec {sub_elements: (20557, 20558), sub_element_ver: 7, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // SUCCESSOR-REFS
    /* 1997 */ ElementSpec {sub_elements: (16950, 16959), sub_element_ver: 3276, attributes: (115, 118), attributes_ver: 192, character_data: None, mode: ContentMode::Sequence, ref_info: (3181, 3183)}, // ERROR-TRACER-NEEDS
    /* 1998 */ ElementSpec {sub_elements: (19184, 19187), sub_element_ver: 192, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // TRACED-FAILURES
    /* 1999 */ ElementSpec {sub_elements: (17745, 17752), sub_element_ver: 8856, attributes: (0, 2), attributes_ver: 134, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // ETH-GLOBAL-TIME-DOMAIN-PROPS
    /* 2000 */ ElementSpec {sub_elements: (20558, 20559), sub_element_ver: 21, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // MANAGED-COUPLING-PORTS
    /* 2001 */ ElementSpec {sub_elements: (17752, 17759), sub_element_ver: 8863, attributes: (0, 2), attributes_ver: 134, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // ETH-GLOBAL-TIME-MANAGED-COUPLING-PORT
    /* 2002 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (883, 889), attributes_ver: 9325, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // COUPLING-PORT-REF
    /* 2003 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 134, character_data: Some(416), mode: ContentMode::Characters, ref_info: (0, 0)}, // MESSAGE-COMPLIANCE
    /* 2004 */ ElementSpec {sub_elements: (13827, 13838), sub_element_ver: 1927, attributes: (115, 118), attributes_ver: 77, character_data: None, mode: ContentMode::Sequence, ref_info: (3183, 3189)}, // ETH-IP-PROPS
    /* 2005 */ ElementSpec {sub_elements: (18051, 18057), sub_element_ver: 1187, attributes: (0, 2), attributes_ver: 9, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // CRC-FLAGS
    /* 2006 */ ElementSpec {sub_elements: (18679, 18683), sub_element_ver: 34, attributes: (0, 2), attributes_ver: 9, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // SUB-TLV-CONFIG
    /* 2007 */ ElementSpec {sub_elements: (13838, 13849), sub_element_ver: 1927, attributes: (115, 118), attributes_ver: 77, character_data: None, mode: ContentMode::Sequence, ref_info: (3189, 3195)}, // ETH-TCP-IP-ICMP-PROPS
    /* 2008 */ ElementSpec {sub_elements: (13849, 13860), sub_element_ver: 1927, attributes: (115, 118), attributes_ver: 77, character_data: None, mode: ContentMode::Sequence, ref_info: (3195, 3201)}, // ETH-TCP-IP-PROPS
    /* 2009 */ ElementSpec {sub_elements: (13860, 13871), sub_element_ver: 3531, attributes: (115, 118), attributes_ver: 9, character_data: None, mode: ContentMode::Sequence, ref_info: (3201, 3206)}, // ETH-TP-CONFIG
    /* 2010 */ ElementSpec {sub_elements: (20559, 20560), sub_element_ver: 9, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // TP-CONNECTIONS
    /* 2011 */ ElementSpec {sub_elements: (19736, 19738), sub_element_ver: 9, attributes: (0, 2), attributes_ver: 9, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // ETH-TP-CONNECTION
    /* 2012 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (859, 865), attributes_ver: 1187, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // TP-SDU-REF
    /* 2013 */ ElementSpec {sub_elements: (20560, 20561), sub_element_ver: 9, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // TP-SDU-REFS
    /* 2014 */ ElementSpec {sub_elements: (15574, 15584), sub_element_ver: 884, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (3206, 3214)}, // ETHERNET-CLUSTER
    /* 2015 */ ElementSpec {sub_elements: (11982, 11994), sub_element_ver: 7574, attributes: (0, 2), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // ETHERNET-CLUSTER-CONDITIONAL
    /* 2016 */ ElementSpec {sub_elements: (20561, 20562), sub_element_ver: 0, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // COUPLING-PORT-CONNECTIONS
    /* 2017 */ ElementSpec {sub_elements: (20562, 20563), sub_element_ver: 0, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // MAC-MULTICAST-GROUPS
    /* 2018 */ ElementSpec {sub_elements: (20563, 20564), sub_element_ver: 7, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // ETHERNET-CLUSTER-VARIANTS
    /* 2019 */ ElementSpec {sub_elements: (1836, 1864), sub_element_ver: 1701, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (3214, 3216)}, // ETHERNET-COMMUNICATION-CONNECTOR
    /* 2020 */ ElementSpec {sub_elements: (20564, 20565), sub_element_ver: 20, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // AP-APPLICATION-ENDPOINTS
    /* 2021 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (1993, 1999), attributes_ver: 3664, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // CAN-XL-PROPS-REF
    /* 2022 */ ElementSpec {sub_elements: (20565, 20566), sub_element_ver: 6, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // CAN-XL-PROPS-REFS
    /* 2023 */ ElementSpec {sub_elements: (20566, 20567), sub_element_ver: 0, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // NETWORK-ENDPOINT-REFS
    /* 2024 */ ElementSpec {sub_elements: (20567, 20568), sub_element_ver: 6, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // UNICAST-NETWORK-ENDPOINT-REFS
    /* 2025 */ ElementSpec {sub_elements: (15584, 15594), sub_element_ver: 8335, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (3216, 3218)}, // ETHERNET-COMMUNICATION-CONTROLLER
    /* 2026 */ ElementSpec {sub_elements: (13871, 13882), sub_element_ver: 8040, attributes: (0, 2), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // ETHERNET-COMMUNICATION-CONTROLLER-CONDITIONAL
    /* 2027 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (1999, 2005), attributes_ver: 3664, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // CAN-XL-CONFIG-REF
    /* 2028 */ ElementSpec {sub_elements: (20568, 20569), sub_element_ver: 7, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // ETHERNET-COMMUNICATION-CONTROLLER-VARIANTS
    /* 2029 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 120, character_data: Some(422), mode: ContentMode::Characters, ref_info: (0, 0)}, // CONNECTION-NEGOTIATION-BEHAVIOR
    /* 2030 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 12, character_data: Some(423), mode: ContentMode::Characters, ref_info: (0, 0)}, // TRAFFIC-CLASS-PREEMPTION-SUPPORT
    /* 2031 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 120, character_data: Some(424), mode: ContentMode::Characters, ref_info: (0, 0)}, // PORT-SCHEDULER
    /* 2032 */ ElementSpec {sub_elements: (7273, 7284), sub_element_ver: 5080, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (3218, 3223)}, // ETHERNET-FRAME
    /* 2033 */ ElementSpec {sub_elements: (2523, 2536), sub_element_ver: 2254, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (3223, 3225)}, // ETHERNET-FRAME-TRIGGERING
    /* 2034 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 134, character_data: Some(425), mode: ContentMode::Characters, ref_info: (0, 0)}, // MAC-LAYER-TYPE
    /* 2035 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2005, 2011), attributes_ver: 425, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // LOCAL-COMM-CONNECTOR-REF
    /* 2036 */ ElementSpec {sub_elements: (20569, 20570), sub_element_ver: 12, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // SOCKET-OPTIONS
    /* 2037 */ ElementSpec {sub_elements: (17520, 17528), sub_element_ver: 8762, attributes: (0, 2), attributes_ver: 637, character_data: None, mode: ContentMode::Sequence, ref_info: (3225, 3227)}, // ETHERNET-NETWORK-CONFIGURATION, NETWORK-CONFIGURATION
    /* 2038 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2005, 2011), attributes_ver: 6018, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // COMMUNICATION-CONNECTOR-REF
    /* 2039 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2011, 2017), attributes_ver: 9415, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // UDP-NM-CLUSTER-REF
    /* 2040 */ ElementSpec {sub_elements: (4627, 4645), sub_element_ver: 4129, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (3227, 3229)}, // ETHERNET-PHYSICAL-CHANNEL
    /* 2041 */ ElementSpec {sub_elements: (20570, 20571), sub_element_ver: 0, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // NETWORK-ENDPOINTS
    /* 2042 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 120, character_data: Some(427), mode: ContentMode::Characters, ref_info: (0, 0)}, // PHYSICAL-LAYER-TYPE
    /* 2043 */ ElementSpec {sub_elements: (18683, 18687), sub_element_ver: 1317, attributes: (0, 2), attributes_ver: 120, character_data: None, mode: ContentMode::Sequence, ref_info: (3229, 3230)}, // ETHERNET-PRIORITY-REGENERATION
    /* 2044 */ ElementSpec {sub_elements: (5964, 5980), sub_element_ver: 4093, attributes: (115, 118), attributes_ver: 81, character_data: None, mode: ContentMode::Sequence, ref_info: (3230, 3238)}, // ETHERNET-RAW-DATA-STREAM-CLIENT-MAPPING
    /* 2045 */ ElementSpec {sub_elements: (13882, 13893), sub_element_ver: 1642, attributes: (115, 118), attributes_ver: 909, character_data: None, mode: ContentMode::Sequence, ref_info: (3238, 3246)}, // ETHERNET-RAW-DATA-STREAM-GRANT
    /* 2046 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2017, 2023), attributes_ver: 1642, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // ETHERNET-RAW-DATA-STREAM-MAPPING-REF
    /* 2047 */ ElementSpec {sub_elements: (19187, 19190), sub_element_ver: 81, attributes: (0, 2), attributes_ver: 81, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // LOCAL-ENDPOINT-CONFIG
    /* 2048 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2005, 2011), attributes_ver: 4093, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // LOCAL-COMM-CONNECTOR-REF
    /* 2049 */ ElementSpec {sub_elements: (4645, 4663), sub_element_ver: 4147, attributes: (115, 118), attributes_ver: 1805, character_data: None, mode: ContentMode::Sequence, ref_info: (3246, 3252)}, // ETHERNET-RAW-DATA-STREAM-MAPPING
    /* 2050 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2005, 2011), attributes_ver: 4147, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // COMMUNICATION-CONNECTOR-REF
    /* 2051 */ ElementSpec {sub_elements: (20569, 20570), sub_element_ver: 64, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // SOCKET-OPTIONS
    /* 2052 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2023, 2029), attributes_ver: 4093, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // TLS-SECURE-COM-PROPS-REF
    /* 2053 */ ElementSpec {sub_elements: (19738, 19740), sub_element_ver: 81, attributes: (0, 2), attributes_ver: 81, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // REMOTE-CLIENT-CONFIG
    /* 2054 */ ElementSpec {sub_elements: (19740, 19742), sub_element_ver: 81, attributes: (0, 2), attributes_ver: 81, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // REMOTE-SERVER-CONFIG
    /* 2055 */ ElementSpec {sub_elements: (5980, 5996), sub_element_ver: 4093, attributes: (115, 118), attributes_ver: 81, character_data: None, mode: ContentMode::Sequence, ref_info: (3252, 3260)}, // ETHERNET-RAW-DATA-STREAM-SERVER-MAPPING
    /* 2056 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 120, character_data: Some(429), mode: ContentMode::Characters, ref_info: (0, 0)}, // SEND-ACTIVITY
    /* 2057 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 134, character_data: Some(430), mode: ContentMode::Characters, ref_info: (0, 0)}, // RECEIVE-ACTIVITY
    /* 2058 */ ElementSpec {sub_elements: (19742, 19744), sub_element_ver: 12, attributes: (0, 2), attributes_ver: 12, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // ETHERNET-VLAN-TRANSLATION-TABLE
    /* 2059 */ ElementSpec {sub_elements: (4088, 4107), sub_element_ver: 1927, attributes: (115, 118), attributes_ver: 77, character_data: None, mode: ContentMode::Sequence, ref_info: (3260, 3261)}, // ETHERNET-WAKEUP-SLEEP-ON-DATALINE-CONFIG
    /* 2060 */ ElementSpec {sub_elements: (15594, 15604), sub_element_ver: 1927, attributes: (115, 118), attributes_ver: 77, character_data: None, mode: ContentMode::Sequence, ref_info: (3261, 3265)}, // ETHERNET-WAKEUP-SLEEP-ON-DATALINE-CONFIG-SET
    /* 2061 */ ElementSpec {sub_elements: (20571, 20572), sub_element_ver: 19, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // ETHERNET-WAKEUP-SLEEP-ON-DATALINE-CONFIGS
    /* 2062 */ ElementSpec {sub_elements: (10072, 10085), sub_element_ver: 6891, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (3265, 3269)}, // EVALUATED-VARIANT-SET
    /* 2063 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2029, 2035), attributes_ver: 9361, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // EVALUATED-ELEMENT-REF
    /* 2064 */ ElementSpec {sub_elements: (20572, 20573), sub_element_ver: 7, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // EVALUATED-ELEMENT-REFS
    /* 2065 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2035, 2041), attributes_ver: 9361, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // EVALUATED-VARIANT-REF
    /* 2066 */ ElementSpec {sub_elements: (20573, 20574), sub_element_ver: 7, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // EVALUATED-VARIANT-REFS
    /* 2067 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 401, character_data: Some(432), mode: ContentMode::Characters, ref_info: (0, 0)}, // INITIAL-STATUS
    /* 2068 */ ElementSpec {sub_elements: (18057, 18063), sub_element_ver: 8964, attributes: (0, 2), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // EVENT-CONTROLLED-TIMING
    /* 2069 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 401, character_data: Some(433), mode: ContentMode::Characters, ref_info: (0, 0)}, // EVENT-GROUP-CONTROL-TYPE
    /* 2070 */ ElementSpec {sub_elements: (4663, 4681), sub_element_ver: 4165, attributes: (115, 118), attributes_ver: 7032, character_data: None, mode: ContentMode::Sequence, ref_info: (3269, 3270)}, // EVENT-HANDLER
    /* 2071 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (379, 385), attributes_ver: 9319, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // APPLICATION-ENDPOINT-REF
    /* 2072 */ ElementSpec {sub_elements: (20574, 20575), sub_element_ver: 0, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // CONSUMED-EVENT-GROUP-REFS
    /* 2073 */ ElementSpec {sub_elements: (20314, 20315), sub_element_ver: 64, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // EVENT-MULTICAST-ADDRESSS, LOCAL-UNICAST-ADDRESSS, REMOTE-UNICAST-ADDRESSS
    /* 2074 */ ElementSpec {sub_elements: (20575, 20576), sub_element_ver: 64, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // METHOD-ACTIVATION-ROUTING-GROUPS, PDU-ACTIVATION-ROUTING-GROUPS
    /* 2075 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2041, 2047), attributes_ver: 9319, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // ROUTING-GROUP-REF
    /* 2076 */ ElementSpec {sub_elements: (20576, 20577), sub_element_ver: 0, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // ROUTING-GROUP-REFS
    /* 2077 */ ElementSpec {sub_elements: (20577, 20578), sub_element_ver: 64, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // SD-SERVER-EG-TIMING-CONFIGS
    /* 2078 */ ElementSpec {sub_elements: (18687, 18691), sub_element_ver: 48, attributes: (0, 2), attributes_ver: 48, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // EVENT-IREF
    /* 2079 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (247, 253), attributes_ver: 48, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // CONTEXT-R-PORT-PROTOTYPE-REF
    /* 2080 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (1033, 1039), attributes_ver: 48, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // CONTEXT-ROOT-SW-COMPONENT-PROTOTYPE-REF
    /* 2081 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (811, 817), attributes_ver: 48, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // CONTEXT-COMPONENT-PROTOTYPE-REF, CONTEXT-SW-COMPONENT-PROTOTYPE-REF
    /* 2082 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (541, 547), attributes_ver: 48, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // TARGET-EVENT-REF
    /* 2083 */ ElementSpec {sub_elements: (15604, 15614), sub_element_ver: 3376, attributes: (115, 118), attributes_ver: 1153, character_data: None, mode: ContentMode::Sequence, ref_info: (3270, 3271)}, // EVENT-MAPPING
    /* 2084 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (541, 547), attributes_ver: 9355, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // DATA-ELEMENT-REF, EVENT-REF, NOTIFIER-DATA-ELEMENT-REF
    /* 2085 */ ElementSpec {sub_elements: (19744, 19746), sub_element_ver: 77, attributes: (0, 2), attributes_ver: 77, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // EVENT-OBD-READINESS-GROUP
    /* 2086 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 0, character_data: Some(435), mode: ContentMode::Characters, ref_info: (0, 0)}, // EVENT-OCCURRENCE-KIND
    /* 2087 */ ElementSpec {sub_elements: (16959, 16968), sub_element_ver: 841, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (3271, 3272)}, // EXCLUSIVE-AREA
    /* 2088 */ ElementSpec {sub_elements: (18691, 18695), sub_element_ver: 1617, attributes: (0, 2), attributes_ver: 0, character_data: None, mode: ContentMode::Sequence, ref_info: (3272, 3273)}, // EXCLUSIVE-AREA-NESTING-ORDER
    /* 2089 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (565, 571), attributes_ver: 9319, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // EXCLUSIVE-AREA-REF
    /* 2090 */ ElementSpec {sub_elements: (20578, 20579), sub_element_ver: 0, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // EXCLUSIVE-AREA-REFS
    /* 2091 */ ElementSpec {sub_elements: (19746, 19748), sub_element_ver: 81, attributes: (0, 2), attributes_ver: 81, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // EXCLUSIVE-AREA-REF-CONDITIONAL
    /* 2092 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (565, 571), attributes_ver: 4093, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // EXCLUSIVE-AREA-REF
    /* 2093 */ ElementSpec {sub_elements: (4107, 4126), sub_element_ver: 3645, attributes: (115, 118), attributes_ver: 1531, character_data: None, mode: ContentMode::Sequence, ref_info: (3273, 3280)}, // EXECUTABLE
    /* 2094 */ ElementSpec {sub_elements: (18695, 18699), sub_element_ver: 1617, attributes: (0, 2), attributes_ver: 0, character_data: None, mode: ContentMode::Sequence, ref_info: (3280, 3282)}, // EXECUTABLE-ENTITY-ACTIVATION-REASON
    /* 2095 */ ElementSpec {sub_elements: (20579, 20580), sub_element_ver: 0, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // ACTIVATION-REASONS
    /* 2096 */ ElementSpec {sub_elements: (20580, 20581), sub_element_ver: 7, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // CAN-ENTER-EXCLUSIVE-AREA-REFS
    /* 2097 */ ElementSpec {sub_elements: (20581, 20582), sub_element_ver: 20, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // CAN-ENTERS, RUNS-INSIDES
    /* 2098 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2047, 2053), attributes_ver: 9319, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // CALLED-FROM-WITHIN-EXCLUSIVE-AREA-REF, EXCLUSIVE-AREA-NESTING-ORDER-REF
    /* 2099 */ ElementSpec {sub_elements: (20582, 20583), sub_element_ver: 0, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // EXCLUSIVE-AREA-NESTING-ORDER-REFS
    /* 2100 */ ElementSpec {sub_elements: (20583, 20584), sub_element_ver: 7, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // RUNS-INSIDE-EXCLUSIVE-AREA-REFS
    /* 2101 */ ElementSpec {sub_elements: (13893, 13904), sub_element_ver: 4021, attributes: (115, 118), attributes_ver: 4021, character_data: None, mode: ContentMode::Sequence, ref_info: (3282, 3286)}, // EXECUTABLE-GROUP
    /* 2102 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2053, 2059), attributes_ver: 4021, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // EXECUTABLE-REF
    /* 2103 */ ElementSpec {sub_elements: (20584, 20585), sub_element_ver: 74, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // EXECUTABLE-REFS
    /* 2104 */ ElementSpec {sub_elements: (20585, 20586), sub_element_ver: 6, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // IMPLEMENTATION-PROPSS
    /* 2105 */ ElementSpec {sub_elements: (18324, 18329), sub_element_ver: 3664, attributes: (0, 2), attributes_ver: 301, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // EXECUTABLE-LOGGING-IMPLEMENTATION-PROPS
    /* 2106 */ ElementSpec {sub_elements: (5154, 5171), sub_element_ver: 4499, attributes: (115, 118), attributes_ver: 77, character_data: None, mode: ContentMode::Sequence, ref_info: (3286, 3291)}, // EXECUTABLE-TIMING
    /* 2107 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2053, 2059), attributes_ver: 500, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // EXECUTABLE-REF
    /* 2108 */ ElementSpec {sub_elements: (20586, 20587), sub_element_ver: 19, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // EXECUTABLE-REFS
    /* 2109 */ ElementSpec {sub_elements: (20587, 20588), sub_element_ver: 16, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // TRACE-SWITCH-CONFIGURATIONS
    /* 2110 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2059, 2065), attributes_ver: 9421, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // TRANSFORMATION-PROPS-MAPPING-SET-REF
    /* 2111 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (3646, 3651), attributes_ver: 5336, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // TRANSFORMATION-PROPS-TO-SERVICE-INTERFACE-MAPPING-SET-REF
    /* 2112 */ ElementSpec {sub_elements: (19190, 19193), sub_element_ver: 9190, attributes: (0, 2), attributes_ver: 531, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // EXECUTION-DEPENDENCY
    /* 2113 */ ElementSpec {sub_elements: (5171, 5188), sub_element_ver: 4516, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (3291, 3294)}, // EXECUTION-ORDER-CONSTRAINT
    /* 2114 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (823, 829), attributes_ver: 9331, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // BASE-COMPOSITION-REF, BASE-REF
    /* 2115 */ ElementSpec {sub_elements: (19193, 19196), sub_element_ver: 9193, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // ORDERED-ELEMENTS
    /* 2116 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 120, character_data: Some(441), mode: ContentMode::Characters, ref_info: (0, 0)}, // EXECUTION-ORDER-CONSTRAINT-TYPE
    /* 2117 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 64, character_data: Some(442), mode: ContentMode::Characters, ref_info: (0, 0)}, // REPORTING-BEHAVIOR
    /* 2118 */ ElementSpec {sub_elements: (5996, 6012), sub_element_ver: 5048, attributes: (115, 118), attributes_ver: 776, character_data: None, mode: ContentMode::Sequence, ref_info: (3294, 3297)}, // EXECUTION-TIME-CONSTRAINT
    /* 2119 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (565, 571), attributes_ver: 9361, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // CAN-ENTER-EXCLUSIVE-AREA-REF, EXCLUSIVE-AREA-REF, RUNS-INSIDE-EXCLUSIVE-AREA-REF
    /* 2120 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2065, 2071), attributes_ver: 9361, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // INCLUDED-LIBRARY-REF
    /* 2121 */ ElementSpec {sub_elements: (20588, 20589), sub_element_ver: 7, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // INCLUDED-LIBRARY-REFS
    /* 2122 */ ElementSpec {sub_elements: (20589, 20590), sub_element_ver: 7, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // MEMORY-SECTION-LOCATIONS
    /* 2123 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 656, character_data: Some(443), mode: ContentMode::Characters, ref_info: (0, 0)}, // EXECUTION-TIME-TYPE
    /* 2124 */ ElementSpec {sub_elements: (10085, 10098), sub_element_ver: 2053, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (3297, 3303)}, // EXTERNAL-TRIGGER-OCCURRED-EVENT
    /* 2125 */ ElementSpec {sub_elements: (19196, 19199), sub_element_ver: 9064, attributes: (0, 2), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // EXTERNAL-TRIGGERING-POINT
    /* 2126 */ ElementSpec {sub_elements: (8954, 8963), sub_element_ver: 8639, attributes: (115, 118), attributes_ver: 6379, character_data: None, mode: ContentMode::Sequence, ref_info: (3303, 3309)}, // IDENT
    /* 2127 */ ElementSpec {sub_elements: (19748, 19750), sub_element_ver: 512, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Choice, ref_info: (0, 0)}, // TRIGGER-IREF
    /* 2128 */ ElementSpec {sub_elements: (19750, 19752), sub_element_ver: 22, attributes: (0, 2), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // FIBEX-ELEMENT-REF-CONDITIONAL
    /* 2129 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2071, 2077), attributes_ver: 9361, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // FIBEX-ELEMENT-REF
    /* 2130 */ ElementSpec {sub_elements: (7078, 7093), sub_element_ver: 5718, attributes: (115, 118), attributes_ver: 1531, character_data: None, mode: ContentMode::Sequence, ref_info: (3309, 3314)}, // FIELD
    /* 2131 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 48, character_data: Some(446), mode: ContentMode::Characters, ref_info: (0, 0)}, // ROLE
    /* 2132 */ ElementSpec {sub_elements: (18699, 18703), sub_element_ver: 48, attributes: (0, 2), attributes_ver: 48, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // FIELD-IREF
    /* 2133 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2077, 2083), attributes_ver: 48, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // TARGET-FIELD-REF
    /* 2134 */ ElementSpec {sub_elements: (13904, 13915), sub_element_ver: 8051, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Choice, ref_info: (0, 0)}, // INIT-VALUE
    /* 2135 */ ElementSpec {sub_elements: (11994, 12006), sub_element_ver: 3376, attributes: (115, 118), attributes_ver: 1153, character_data: None, mode: ContentMode::Sequence, ref_info: (3314, 3315)}, // FIELD-MAPPING
    /* 2136 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2077, 2083), attributes_ver: 9355, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // FIELD-REF, GETTER-REF, SETTER-REF
    /* 2137 */ ElementSpec {sub_elements: (13915, 13926), sub_element_ver: 8062, attributes: (0, 2), attributes_ver: 9, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // FIELD-SENDER-COM-SPEC
    /* 2138 */ ElementSpec {sub_elements: (11118, 11130), sub_element_ver: 3531, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Choice, ref_info: (0, 0)}, // DEVELOPMENT-VALUE, INIT-VALUE
    /* 2139 */ ElementSpec {sub_elements: (20590, 20591), sub_element_ver: 400, attributes: (0, 2), attributes_ver: 854, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // FILE-INFO-COMMENT
    /* 2140 */ ElementSpec {sub_elements: (20154, 20155), sub_element_ver: 400, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // SDGS
    /* 2141 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 22, character_data: Some(447), mode: ContentMode::Characters, ref_info: (0, 0)}, // FILTERING-DEBOUNCING
    /* 2142 */ ElementSpec {sub_elements: (13926, 13937), sub_element_ver: 8073, attributes: (115, 118), attributes_ver: 8073, character_data: None, mode: ContentMode::Sequence, ref_info: (3315, 3316)}, // FIRE-AND-FORGET-MAPPING
    /* 2143 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (541, 547), attributes_ver: 9427, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // DATA-ELEMENT-REF
    /* 2144 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (673, 679), attributes_ver: 9427, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // METHOD-REF
    /* 2145 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (607, 613), attributes_ver: 9427, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // TRIGGER-REF
    /* 2146 */ ElementSpec {sub_elements: (13937, 13948), sub_element_ver: 3664, attributes: (115, 118), attributes_ver: 463, character_data: None, mode: ContentMode::Sequence, ref_info: (3316, 3317)}, // FIRE-AND-FORGET-METHOD-MAPPING
    /* 2147 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (541, 547), attributes_ver: 3664, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // DATA-ELEMENT-REF
    /* 2148 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (673, 679), attributes_ver: 3664, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // METHOD-REF
    /* 2149 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (607, 613), attributes_ver: 3664, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // TRIGGER-REF
    /* 2150 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 301, character_data: Some(448), mode: ContentMode::Characters, ref_info: (0, 0)}, // ACTION, DEFAULT-ACTION
    /* 2151 */ ElementSpec {sub_elements: (4126, 4145), sub_element_ver: 3664, attributes: (115, 118), attributes_ver: 463, character_data: None, mode: ContentMode::Sequence, ref_info: (3317, 3323)}, // FIREWALL-RULE
    /* 2152 */ ElementSpec {sub_elements: (19752, 19754), sub_element_ver: 301, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Choice, ref_info: (0, 0)}, // NETWORK-LAYER-RULE
    /* 2153 */ ElementSpec {sub_elements: (20591, 20592), sub_element_ver: 6, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // PAYLOAD-BYTE-PATTERN-RULES
    /* 2154 */ ElementSpec {sub_elements: (18703, 18707), sub_element_ver: 312, attributes: (0, 2), attributes_ver: 301, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // FIREWALL-RULE-PROPS
    /* 2155 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2083, 2089), attributes_ver: 230, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // MATCHING-EGRESS-RULE-REF, MATCHING-INGRESS-RULE-REF
    /* 2156 */ ElementSpec {sub_elements: (20592, 20593), sub_element_ver: 16, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // MATCHING-EGRESS-RULE-REFS
    /* 2157 */ ElementSpec {sub_elements: (20593, 20594), sub_element_ver: 16, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // MATCHING-INGRESS-RULE-REFS
    /* 2158 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2083, 2089), attributes_ver: 3664, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // MATCHING-RULE-REF
    /* 2159 */ ElementSpec {sub_elements: (20594, 20595), sub_element_ver: 6, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // MATCHING-RULE-REFS
    /* 2160 */ ElementSpec {sub_elements: (19754, 19756), sub_element_ver: 301, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Choice, ref_info: (0, 0)}, // TRANSPORT-LAYER-RULE
    /* 2161 */ ElementSpec {sub_elements: (19756, 19758), sub_element_ver: 301, attributes: (0, 2), attributes_ver: 301, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // AFFECTED-STATE-IREF, ASSUMED-CURRENT-STATE-IREF, FIREWALL-STATE-IREF, NEXT-STATE-IREF, OVERRIDE-INITIAL-STATE-IREF
    /* 2162 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (583, 589), attributes_ver: 3664, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // CONTEXT-MODE-DECLARATION-GROUP-PROTOTYPE-REF
    /* 2163 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2089, 2095), attributes_ver: 3664, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // TARGET-MODE-DECLARATION-REF
    /* 2164 */ ElementSpec {sub_elements: (7093, 7108), sub_element_ver: 3664, attributes: (115, 118), attributes_ver: 463, character_data: None, mode: ContentMode::Sequence, ref_info: (3323, 3332)}, // FIREWALL-STATE-SWITCH-INTERFACE
    /* 2165 */ ElementSpec {sub_elements: (20232, 20233), sub_element_ver: 6, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // FIREWALL-STATE-MACHINES
    /* 2166 */ ElementSpec {sub_elements: (8674, 8688), sub_element_ver: 6489, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (3332, 3333)}, // FLAT-INSTANCE-DESCRIPTOR
    /* 2167 */ ElementSpec {sub_elements: (12006, 12018), sub_element_ver: 4720, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (3333, 3339)}, // FLAT-MAP
    /* 2168 */ ElementSpec {sub_elements: (20595, 20596), sub_element_ver: 7, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // INSTANCES
    /* 2169 */ ElementSpec {sub_elements: (19758, 19760), sub_element_ver: 22, attributes: (0, 2), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // FLEXRAY-ABSOLUTELY-SCHEDULED-TIMING
    /* 2170 */ ElementSpec {sub_elements: (1864, 1892), sub_element_ver: 1729, attributes: (0, 2), attributes_ver: 656, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // FLEXRAY-AR-TP-CHANNEL
    /* 2171 */ ElementSpec {sub_elements: (20596, 20597), sub_element_ver: 0, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // N-PDU-REFS
    /* 2172 */ ElementSpec {sub_elements: (475, 476), sub_element_ver: 386, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // PDU-POOLS
    /* 2173 */ ElementSpec {sub_elements: (20597, 20598), sub_element_ver: 386, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // TP-CONNECTIONS
    /* 2174 */ ElementSpec {sub_elements: (10098, 10111), sub_element_ver: 6904, attributes: (115, 118), attributes_ver: 776, character_data: None, mode: ContentMode::Sequence, ref_info: (3339, 3344)}, // FLEXRAY-AR-TP-CONFIG
    /* 2175 */ ElementSpec {sub_elements: (20598, 20599), sub_element_ver: 386, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // TP-ADDRESSS
    /* 2176 */ ElementSpec {sub_elements: (20599, 20600), sub_element_ver: 386, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // TP-CHANNELS
    /* 2177 */ ElementSpec {sub_elements: (20600, 20601), sub_element_ver: 386, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // TP-NODES
    /* 2178 */ ElementSpec {sub_elements: (16968, 16977), sub_element_ver: 8648, attributes: (0, 2), attributes_ver: 656, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // FLEXRAY-AR-TP-CONNECTION
    /* 2179 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2095, 2101), attributes_ver: 9349, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // DIRECT-TP-SDU-REF, REVERSED-TP-SDU-REF
    /* 2180 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2101, 2107), attributes_ver: 9349, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // SOURCE-REF, TARGET-REF
    /* 2181 */ ElementSpec {sub_elements: (20601, 20602), sub_element_ver: 386, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // TARGET-REFS
    /* 2182 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2107, 2113), attributes_ver: 9349, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // FLOW-CONTROL-PDU-REF, TRANSMIT-PDU-REF
    /* 2183 */ ElementSpec {sub_elements: (20602, 20603), sub_element_ver: 386, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // TRANSMIT-PDU-REFS
    /* 2184 */ ElementSpec {sub_elements: (13948, 13959), sub_element_ver: 6904, attributes: (115, 118), attributes_ver: 776, character_data: None, mode: ContentMode::Sequence, ref_info: (3344, 3345)}, // FLEXRAY-AR-TP-NODE
    /* 2185 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2113, 2119), attributes_ver: 9349, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // CONNECTOR-REF
    /* 2186 */ ElementSpec {sub_elements: (20603, 20604), sub_element_ver: 386, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // CONNECTOR-REFS
    /* 2187 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2119, 2125), attributes_ver: 9349, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // MULTICAST-REF, TP-ADDRESS-REF
    /* 2188 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 22, character_data: Some(453), mode: ContentMode::Characters, ref_info: (0, 0)}, // CHANNEL-NAME
    /* 2189 */ ElementSpec {sub_elements: (15614, 15624), sub_element_ver: 884, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (3345, 3353)}, // FLEXRAY-CLUSTER
    /* 2190 */ ElementSpec {sub_elements: (728, 777), sub_element_ver: 792, attributes: (0, 2), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // FLEXRAY-CLUSTER-CONDITIONAL
    /* 2191 */ ElementSpec {sub_elements: (20604, 20605), sub_element_ver: 7, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // FLEXRAY-CLUSTER-VARIANTS
    /* 2192 */ ElementSpec {sub_elements: (4681, 4699), sub_element_ver: 4183, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (3353, 3355)}, // FLEXRAY-COMMUNICATION-CONNECTOR
    /* 2193 */ ElementSpec {sub_elements: (15624, 15634), sub_element_ver: 8335, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (3355, 3357)}, // FLEXRAY-COMMUNICATION-CONTROLLER
    /* 2194 */ ElementSpec {sub_elements: (1054, 1089), sub_element_ver: 1118, attributes: (0, 2), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // FLEXRAY-COMMUNICATION-CONTROLLER-CONDITIONAL
    /* 2195 */ ElementSpec {sub_elements: (20605, 20606), sub_element_ver: 7, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // FLEXRAY-FIFOS
    /* 2196 */ ElementSpec {sub_elements: (20606, 20607), sub_element_ver: 7, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // FLEXRAY-COMMUNICATION-CONTROLLER-VARIANTS
    /* 2197 */ ElementSpec {sub_elements: (17528, 17536), sub_element_ver: 814, attributes: (0, 2), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // FLEXRAY-FIFO-CONFIGURATION
    /* 2198 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2125, 2131), attributes_ver: 9361, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // CHANNEL-REF
    /* 2199 */ ElementSpec {sub_elements: (20607, 20608), sub_element_ver: 7, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // FIFO-RANGES
    /* 2200 */ ElementSpec {sub_elements: (19760, 19762), sub_element_ver: 22, attributes: (0, 2), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // FLEXRAY-FIFO-RANGE
    /* 2201 */ ElementSpec {sub_elements: (7273, 7284), sub_element_ver: 5080, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (3357, 3362)}, // FLEXRAY-FRAME
    /* 2202 */ ElementSpec {sub_elements: (5188, 5205), sub_element_ver: 4533, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (3362, 3364)}, // FLEXRAY-FRAME-TRIGGERING
    /* 2203 */ ElementSpec {sub_elements: (20608, 20609), sub_element_ver: 7, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // ABSOLUTELY-SCHEDULED-TIMINGS
    /* 2204 */ ElementSpec {sub_elements: (862, 903), sub_element_ver: 926, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (3364, 3366)}, // FLEXRAY-NM-CLUSTER
    /* 2205 */ ElementSpec {sub_elements: (18329, 18334), sub_element_ver: 9064, attributes: (0, 2), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // FLEXRAY-NM-CLUSTER-COUPLING
    /* 2206 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2131, 2137), attributes_ver: 9361, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // COUPLED-CLUSTER-REF
    /* 2207 */ ElementSpec {sub_elements: (20609, 20610), sub_element_ver: 7, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // COUPLED-CLUSTER-REFS
    /* 2208 */ ElementSpec {sub_elements: (19199, 19202), sub_element_ver: 860, attributes: (0, 2), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // FLEXRAY-NM-ECU
    /* 2209 */ ElementSpec {sub_elements: (3699, 3719), sub_element_ver: 3236, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (3366, 3368)}, // FLEXRAY-NM-NODE
    /* 2210 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 22, character_data: Some(457), mode: ContentMode::Characters, ref_info: (0, 0)}, // NM-SCHEDULE-VARIANT
    /* 2211 */ ElementSpec {sub_elements: (6012, 6028), sub_element_ver: 5064, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (3368, 3370)}, // FLEXRAY-PHYSICAL-CHANNEL
    /* 2212 */ ElementSpec {sub_elements: (6028, 6044), sub_element_ver: 5080, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (3370, 3375)}, // FLEXRAY-TP-CONFIG
    /* 2213 */ ElementSpec {sub_elements: (20610, 20611), sub_element_ver: 7, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // PDU-POOLS
    /* 2214 */ ElementSpec {sub_elements: (20611, 20612), sub_element_ver: 7, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // TP-CONNECTION-CONTROLS
    /* 2215 */ ElementSpec {sub_elements: (20612, 20613), sub_element_ver: 7, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // TP-CONNECTIONS
    /* 2216 */ ElementSpec {sub_elements: (19762, 19764), sub_element_ver: 795, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // TP-ECUS
    /* 2217 */ ElementSpec {sub_elements: (20613, 20614), sub_element_ver: 7, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // TP-NODES
    /* 2218 */ ElementSpec {sub_elements: (13959, 13970), sub_element_ver: 1118, attributes: (0, 2), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // FLEXRAY-TP-CONNECTION
    /* 2219 */ ElementSpec {sub_elements: (944, 981), sub_element_ver: 1008, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (3375, 3376)}, // FLEXRAY-TP-CONNECTION-CONTROL
    /* 2220 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2137, 2143), attributes_ver: 9361, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // RECEIVER-REF, TRANSMITTER-REF
    /* 2221 */ ElementSpec {sub_elements: (20614, 20615), sub_element_ver: 7, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // RECEIVER-REFS
    /* 2222 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2143, 2149), attributes_ver: 9361, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // RX-PDU-POOL-REF, TX-PDU-POOL-REF
    /* 2223 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2149, 2155), attributes_ver: 9361, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // TP-CONNECTION-CONTROL-REF
    /* 2224 */ ElementSpec {sub_elements: (18063, 18069), sub_element_ver: 9018, attributes: (0, 2), attributes_ver: 796, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // FLEXRAY-TP-ECU
    /* 2225 */ ElementSpec {sub_elements: (13970, 13981), sub_element_ver: 841, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (3376, 3377)}, // FLEXRAY-TP-NODE
    /* 2226 */ ElementSpec {sub_elements: (20615, 20616), sub_element_ver: 7, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // CONNECTOR-REFS
    /* 2227 */ ElementSpec {sub_elements: (15634, 15644), sub_element_ver: 841, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (3377, 3378)}, // FLEXRAY-TP-PDU-POOL
    /* 2228 */ ElementSpec {sub_elements: (20616, 20617), sub_element_ver: 7, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // N-PDU-REFS
    /* 2229 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 796, character_data: Some(981), mode: ContentMode::Characters, ref_info: (0, 0)}, // ABSOLUTE, ACF-MAX-TRANSIT-TIME, ALIVE-CHECK-RESPONSE-TIMEOUT, ALIVE-REFERENCE-CYCLE, ALIVE-TIMEOUT, AUTHENTICATION-TIMEOUT, BIT, BOR-TIME-L-1, BOR-TIME-L-2, BOR-TIME-TX-ENSURED, BSW-RESOLUTION, BUS-IDLE-TIMEOUT-PERIOD, CALL-TIMEOUT, COLLECTION-TIMEOUT, COM-CONFIGURATION-GW-TIME-BASE, COM-CONFIGURATION-RX-TIME-BASE, COM-CONFIGURATION-TX-TIME-BASE, CONTAINER-TIMEOUT, COUPLING-PORT-STARTUP-ACTIVE-TIME, COUPLING-PORT-SWITCHOFF-DELAY, CYCLE, CYCLE-TIME-MAIN-FUNCTION, CYCLE-TIME-VALUE, CYCLIC-BACKUP-INTERVAL, CYCLIC-WRITING-PERIOD, DATA-UPDATE-PERIOD, DEADLINE-MAX, DEADLINE-MIN, DEADLINE-PERIOD, DEBOUNCE-TIME, DEFAULT-LEASE-TIME, DEFAULT-VALUE, DELAY, DPD-DELAY, DURABILITY-SERVICE-CLEANUP-DELAY, END-TO-END-CALL-RESPONSE-TIMEOUT, ENTER-TIMEOUT-VALUE, ESTIMATED-DURATION-OF-CAMPAIGN, ESTIMATED-DURATION-OF-OPERATION, EXIT-TIMEOUT-VALUE, EXPECTED-ALIVE-CYCLE, EXPIRED-SUPERVISION-TOLERANCE, FACTOR-SI-TO-UNIT, FIRST-TIMEOUT, FOLLOW-UP-OFFSET, FOLLOW-UP-TIMEOUT-VALUE, GENERAL-INACTIVITY-TIME, GLOBAL-TIME-TX-PERIOD, HOLD-OVER-TIME, IKE-OVER-TIME, IKE-REAUTH-TIME, IKE-REKEY-TIME, IMMEDIATE-RESUME-TIME, INITIAL-DELAY-MAX-VALUE, INITIAL-DELAY-MIN-VALUE, INITIAL-INACTIVITY-TIME, INITIAL-REPETITIONS-BASE-DELAY, INITIAL-VEHICLE-ANNOUNCEMENT-TIME, INTER-MESSAGE-TIME, INTERVAL-LENGTH, IP-V-6-PATH-MTU-TIMEOUT, KEEP-ALIVE-INTERVAL, KEEP-ALIVE-TIME, LATENCY-BUDGET-DURATION, LIFESPAN-DURATION, LIVELINESS-LEASE-DURATION, MACROTICK-DURATION, MAIN-FUNCTION-PERIOD, MAX-ALIVE-CYCLE, MAX-DEADLINE, MAX-GRADIENT, MAX-INITIAL-VEHICLE-ANNOUNCEMENT-TIME, MAX-PROGRESSION-MISMATCH-THRESHOLD, MAX-SAMPLE-POINT, MAX-SYNC-JUMP-WIDTH, MAX-TRANSIT-TIME, MAX-TRCV-DELAY-COMPENSATION-OFFSET, MAX-VALUE, MAXIMUM-DURATION-OF-CAMPAIGN, MICROTICK-DURATION, MIN-ALIVE-CYCLE, MIN-DEADLINE, MIN-SAMPLE-POINT, MIN-SYNC-JUMP-WIDTH, MIN-TRCV-DELAY-COMPENSATION-OFFSET, MIN-VALUE, MINIMUM-DELAY, MINIMUM-INTERVAL-LENGTH, MINIMUM-MULTICAST-SEPERATION-TIME, MINIMUM-SEND-INTERVAL, MINIMUM-SEPARATION-TIME, MINIMUM-START-INTERVAL, MINIMUM-TIMER-GRANULARITY, NAS-TIMEOUT, NM-CYCLETIME-MAIN-FUNCTION, NM-DETECTION-LOCK, NM-GLOBAL-COORDINATOR-TIME, NM-IMMEDIATE-NM-CYCLE-TIME, NM-LIGHT-TIMEOUT, NM-MAIN-FUNCTION-PERIOD, NM-MESSAGE-TIMEOUT-TIME, NM-MSG-CYCLE-OFFSET, NM-MSG-CYCLE-TIME, NM-MSG-REDUCED-TIME, NM-NETWORK-TIMEOUT, NM-READY-SLEEP-TIME, NM-REMOTE-SLEEP-INDICATION-TIME, NM-REPEAT-MESSAGE-TIME, NM-SHUTDOWN-DELAY-TIMER, NM-WAIT-BUS-SLEEP-TIME, NTU, OFFER-CYCLIC-DELAY, OFFSET, OFFSET-CORRECTION-ADAPTION-INTERVAL, OFFSET-CORRECTION-JUMP-THRESHOLD, OFFSET-SI-TO-UNIT, ON-FAIL-PERMISSIVE-MODE-TIMEOUT, P-2-MAX, P-2-SERVER-MAX, P-2-STAR-SERVER-MAX, P-2-TIMING, PATH-MTU-TIMEOUT, PDELAY-LATENCY-THRESHOLD, PDELAY-REQUEST-PERIOD, PDELAY-RESP-AND-RESP-FOLLOW-UP-TIMEOUT, PDU-COLLECTION-PDU-TIMEOUT, PDU-COLLECTION-TIMEOUT, PERIOD, PN-RESET-TIME, PN-RESET-TIMER, PNC-PREPARE-SLEEP-TIMER, PROPABILITY, PROPAGATION-DELAY, RATE-CORRECTION-MEASUREMENT-DURATION, RATE-DEVIATION-MEASUREMENT-DURATION, RECOVERY-NOTIFICATION-TIMEOUT, REKEY-INTERVAL, RELATIVE-REPRESENTATION-TIME, RELIABILITY-MAX-BLOCKING-TIME, RESOLUTION, RESPONSE-ON-EVENT-SCHEDULER-RATE, RETRY-INTERVAL-TIME, RX-TIMEOUT-TIME, S-3-SERVER-TIMEOUT, SA-RAND-TIME, SA-REKEY-TIME, SAK-REKEY-TIME-SPAN, SAMPLE-CLOCK-PERIOD, SECURITY-DELAY-TIME, SECURITY-DELAY-TIME-ON-BOOT, SEGMENT-RECEPTION-TIMEOUT-TIME, SEGMENT-RECEPTION-TIMEOUT-TIME-REQUEST, SEGMENT-RECEPTION-TIMEOUT-TIME-RESPONSE, SEPARATION-TIME, SEPARATION-TIME-REQUEST, SEPARATION-TIME-RESPONSE, SLAVE-QUALIFIED-UNEXPECTED-LINK-DOWN-TIME, SLEEP-MODE-EXECUTION-DELAY, SLEEP-REPETITION-DELAY-OF-SLEEP-REQUEST, SLEEP-TIME, SPEEDUP, SRVT, ST-MIN, STEP-SIZE, SUBSCRIBE-EVENTGROUP-RETRY-DELAY, SUPERVISION-CYCLE, SUPPORTED-TIMER-GRANULARITY, SYNC-CONFIRMATION-TIMEOUT, SYNC-INTERVAL, SYNC-LOSS-THRESHOLD, SYNC-LOSS-TIMEOUT, SYNC-PERIOD, TCP-ALIVE-CHECK-RESPONSE-TIMEOUT, TCP-CONNECT-TIMEOUT, TCP-DELAYED-ACK-TIMEOUT, TCP-FIN-WAIT-2-TIMEOUT, TCP-GENERAL-INACTIVITY-TIME, TCP-INITIAL-INACTIVITY-TIME, TCP-IP-ARP-REQUEST-TIMEOUT, TCP-IP-ARP-TABLE-ENTRY-TIMEOUT, TCP-IP-AUTO-IP-INIT-TIMEOUT, TCP-IP-DHCP-V-6-CNF-DELAY-MAX, TCP-IP-DHCP-V-6-CNF-DELAY-MIN, TCP-IP-DHCP-V-6-INF-DELAY-MAX, TCP-IP-DHCP-V-6-INF-DELAY-MIN, TCP-IP-DHCP-V-6-SOL-DELAY-MAX, TCP-IP-DHCP-V-6-SOL-DELAY-MIN, TCP-IP-IP-REASS-TIMEOUT, TCP-IP-IP-REASSEMBLY-TIMEOUT, TCP-IP-NDP-DEFAULT-REACHABLE-TIME, TCP-IP-NDP-DEFAULT-RETRANS-TIMER, TCP-IP-NDP-DELAY-FIRST-PROBE-TIME-VALUE, TCP-IP-NDP-MAX-RTR-SOLICITATION-DELAY, TCP-IP-NDP-RTR-SOLICITATION-INTERVAL, TCP-IP-NDP-SLAAC-DAD-RETRANSMISSION-DELAY, TCP-KEEP-ALIVE-INTERVAL, TCP-KEEP-ALIVE-TIME, TCP-MSL, TCP-RETRANSMISSION-TIMEOUT, TCP-SYN-RECEIVED-TIMEOUT, TERMINATING-CHECKPOINT-TIMEOUT-UNTIL-TERMINATION, TIME-BASE, TIME-BASE-JITTER, TIME-BR, TIME-BUFFER, TIME-CS, TIME-FR-IF, TIME-HARDWARE-CORRECTION-THRESHOLD, TIME-INTERVAL, TIME-LEAP-FUTURE-THRESHOLD, TIME-LEAP-PAST-THRESHOLD, TIMEOUT, TIMEOUT-AR, TIMEOUT-AS, TIMEOUT-BR, TIMEOUT-BS, TIMEOUT-CR, TIMEOUT-CS, TIMESTAMP-RX-ACCEPTANCE-WINDOW, TRANCEIVER-STANDBY-DELAY, TRANSMISSION-DEADLINE, TRCV-DELAY-COMPENSATION-OFFSET, UDP-COLLECTION-BUFFER-TIMEOUT, VALUE, VEHICLE-ANNOUNCEMENT-INTERVAL, WAKEUP-LOCAL-DETECTION-TIME, WAKEUP-LOCAL-DURATION-TIME, WAKEUP-REPETITION-DELAY-OF-WAKEUP-REQUEST
    /* 2230 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 617, character_data: Some(462), mode: ContentMode::Characters, ref_info: (0, 0)}, // FLOAT
    /* 2231 */ ElementSpec {sub_elements: (18229, 18231), sub_element_ver: 386, attributes: (131, 137), attributes_ver: 1309, character_data: Some(982), mode: ContentMode::Mixed, ref_info: (0, 0)}, // ARRAY-SIZE, BITFIELD-TEXT-TABLE-MASK-FIRST, BITFIELD-TEXT-TABLE-MASK-SECOND, BOOLEAN-VALUE-VARIATION-POINT, CONFIRMATION-THRESHOLD, CONSIDER-PTO-STATUS, COUNTER-DECREMENT-STEP-SIZE, COUNTER-FAILED-THRESHOLD, COUNTER-INCREMENT-STEP-SIZE, COUNTER-JUMP-DOWN, COUNTER-JUMP-DOWN-VALUE, COUNTER-JUMP-UP, COUNTER-JUMP-UP-VALUE, COUNTER-PASSED-THRESHOLD, DEFAULT-VALUE, EVENT-FAILURE-CYCLE-COUNTER-THRESHOLD, FIRST-VALUE, FLOAT-VALUE-VARIATION-POINT, FUNCTIONAL-UNIT, GROUP-NUMBER, HEALING-CYCLE-COUNTER-THRESHOLD, ID, INTEGER-VALUE-VARIATION-POINT, IS-SERVICE, J-1939-DTC-VALUE, LOWER-MULTIPLICITY, MAX, MAX-DELTA-COUNTER-INIT, MAX-NUMBER-OF-ELEMENTS, MIN, MIN-NUMBER-OF-ELEMENTS, NUMERICAL-VALUE-VARIATION-POINT, OBD-DTC-VALUE, OBD-DTC-VALUE-3-BYTE, OBD-MID, POSITIVE-INTEGER-VALUE-VARIATION-POINT, PRIORITY, RECORD-NUMBER, SECOND-VALUE, SEND-RESP-PEND-ON-TRANS-TO-BOOT, SIZE, SW-MAX-AXIS-POINTS, SW-MAX-TEXT-SIZE, SW-MIN-AXIS-POINTS, SW-NUMBER-OF-AXIS-POINTS, SW-VALUE-BLOCK-SIZE, THRESHOLD, UAS-ID, UDS-DTC-VALUE, UNLIMITED-INTEGER-VALUE-VARIATION-POINT, UPPER-MULTIPLICITY, UPPER-MULTIPLICITY-INFINITE, USES-END-TO-END-PROTECTION, V, VALUE, VF
    /* 2232 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 123, character_data: Some(463), mode: ContentMode::Characters, ref_info: (0, 0)}, // COLOR-MODE
    /* 2233 */ ElementSpec {sub_elements: (13981, 13992), sub_element_ver: 2765, attributes: (115, 118), attributes_ver: 0, character_data: None, mode: ContentMode::Sequence, ref_info: (3378, 3379)}, // FM-ATTRIBUTE-DEF
    /* 2234 */ ElementSpec {sub_elements: (19764, 19766), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 0, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // FM-ATTRIBUTE-VALUE
    /* 2235 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2155, 2161), attributes_ver: 9319, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // ATTRIBUTE-REF, DEFINITION-REF
    /* 2236 */ ElementSpec {sub_elements: (19766, 19768), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 0, character_data: Some(982), mode: ContentMode::Mixed, ref_info: (0, 0)}, // FM-COND, RESTRICTION
    /* 2237 */ ElementSpec {sub_elements: (19202, 19205), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 0, character_data: Some(982), mode: ContentMode::Mixed, ref_info: (0, 0)}, // FM-SYSCOND
    /* 2238 */ ElementSpec {sub_elements: (7108, 7123), sub_element_ver: 5733, attributes: (115, 118), attributes_ver: 0, character_data: None, mode: ContentMode::Sequence, ref_info: (3379, 3383)}, // FM-FEATURE
    /* 2239 */ ElementSpec {sub_elements: (20617, 20618), sub_element_ver: 0, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // ATTRIBUTE-DEFS
    /* 2240 */ ElementSpec {sub_elements: (18707, 18711), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 0, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // FM-FEATURE-DECOMPOSITION
    /* 2241 */ ElementSpec {sub_elements: (20618, 20619), sub_element_ver: 0, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // DECOMPOSITIONS
    /* 2242 */ ElementSpec {sub_elements: (15644, 15654), sub_element_ver: 2765, attributes: (115, 118), attributes_ver: 0, character_data: None, mode: ContentMode::Sequence, ref_info: (3383, 3387)}, // FM-FEATURE-MAP
    /* 2243 */ ElementSpec {sub_elements: (16977, 16986), sub_element_ver: 2765, attributes: (115, 118), attributes_ver: 0, character_data: None, mode: ContentMode::Sequence, ref_info: (3387, 3388)}, // FM-FEATURE-MAP-ASSERTION
    /* 2244 */ ElementSpec {sub_elements: (16986, 16995), sub_element_ver: 2765, attributes: (115, 118), attributes_ver: 0, character_data: None, mode: ContentMode::Sequence, ref_info: (3388, 3389)}, // FM-FEATURE-MAP-CONDITION
    /* 2245 */ ElementSpec {sub_elements: (12018, 12030), sub_element_ver: 5144, attributes: (115, 118), attributes_ver: 0, character_data: None, mode: ContentMode::Sequence, ref_info: (3389, 3390)}, // FM-FEATURE-MAP-ELEMENT
    /* 2246 */ ElementSpec {sub_elements: (20619, 20620), sub_element_ver: 0, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // ASSERTIONS
    /* 2247 */ ElementSpec {sub_elements: (20620, 20621), sub_element_ver: 0, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // CONDITIONS
    /* 2248 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2161, 2167), attributes_ver: 9319, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // POST-BUILD-VARIANT-CRITERION-VALUE-SET-REF
    /* 2249 */ ElementSpec {sub_elements: (20621, 20622), sub_element_ver: 0, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // POST-BUILD-VARIANT-CRITERION-VALUE-SET-REFS
    /* 2250 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2167, 2173), attributes_ver: 9319, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // SW-SYSTEMCONSTANT-VALUE-SET-REF
    /* 2251 */ ElementSpec {sub_elements: (20622, 20623), sub_element_ver: 0, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // SW-SYSTEMCONSTANT-VALUE-SET-REFS
    /* 2252 */ ElementSpec {sub_elements: (20623, 20624), sub_element_ver: 0, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // MAPPINGS
    /* 2253 */ ElementSpec {sub_elements: (13992, 14003), sub_element_ver: 2765, attributes: (115, 118), attributes_ver: 0, character_data: None, mode: ContentMode::Sequence, ref_info: (3390, 3394)}, // FM-FEATURE-MODEL
    /* 2254 */ ElementSpec {sub_elements: (20624, 20625), sub_element_ver: 0, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // FEATURE-REFS
    /* 2255 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2173, 2179), attributes_ver: 9319, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // FEATURE-REF, ROOT-REF
    /* 2256 */ ElementSpec {sub_elements: (15654, 15664), sub_element_ver: 3512, attributes: (115, 118), attributes_ver: 0, character_data: None, mode: ContentMode::Sequence, ref_info: (3394, 3395)}, // FM-FEATURE-RELATION
    /* 2257 */ ElementSpec {sub_elements: (20625, 20626), sub_element_ver: 0, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // RELATIONS
    /* 2258 */ ElementSpec {sub_elements: (16995, 17004), sub_element_ver: 2765, attributes: (115, 118), attributes_ver: 0, character_data: None, mode: ContentMode::Sequence, ref_info: (3395, 3396)}, // FM-FEATURE-RESTRICTION
    /* 2259 */ ElementSpec {sub_elements: (20626, 20627), sub_element_ver: 0, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // RESTRICTIONS
    /* 2260 */ ElementSpec {sub_elements: (10111, 10124), sub_element_ver: 5144, attributes: (115, 118), attributes_ver: 0, character_data: None, mode: ContentMode::Sequence, ref_info: (3396, 3397)}, // FM-FEATURE-SELECTION
    /* 2261 */ ElementSpec {sub_elements: (20627, 20628), sub_element_ver: 0, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // ATTRIBUTE-VALUES
    /* 2262 */ ElementSpec {sub_elements: (12030, 12042), sub_element_ver: 5144, attributes: (115, 118), attributes_ver: 0, character_data: None, mode: ContentMode::Sequence, ref_info: (3397, 3401)}, // FM-FEATURE-SELECTION-SET
    /* 2263 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2179, 2185), attributes_ver: 9319, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // FEATURE-MODEL-REF
    /* 2264 */ ElementSpec {sub_elements: (20628, 20629), sub_element_ver: 0, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // FEATURE-MODEL-REFS
    /* 2265 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2185, 2191), attributes_ver: 9319, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // INCLUDE-REF
    /* 2266 */ ElementSpec {sub_elements: (20629, 20630), sub_element_ver: 0, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // INCLUDE-REFS
    /* 2267 */ ElementSpec {sub_elements: (20630, 20631), sub_element_ver: 0, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // SELECTIONS
    /* 2268 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 0, character_data: Some(468), mode: ContentMode::Characters, ref_info: (0, 0)}, // STATE
    /* 2269 */ ElementSpec {sub_elements: (18069, 18075), sub_element_ver: 804, attributes: (0, 2), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // FORBIDDEN-SIGNAL-PATH
    /* 2270 */ ElementSpec {sub_elements: (20631, 20632), sub_element_ver: 7, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // PHYSICAL-CHANNEL-REFS
    /* 2271 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (3743, 3747), attributes_ver: 9523, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // FOREIGN-MODEL-REFERENCE
    /* 2272 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 656, character_data: Some(469), mode: ContentMode::Characters, ref_info: (0, 0)}, // ACK-TYPE
    /* 2273 */ ElementSpec {sub_elements: (19205, 19208), sub_element_ver: 253, attributes: (0, 2), attributes_ver: 134, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // FR-GLOBAL-TIME-DOMAIN-PROPS
    /* 2274 */ ElementSpec {sub_elements: (20632, 20633), sub_element_ver: 21, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // OFS-DATA-ID-LISTS
    /* 2275 */ ElementSpec {sub_elements: (20633, 20634), sub_element_ver: 21, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // SYNC-DATA-ID-LISTS
    /* 2276 */ ElementSpec {sub_elements: (18334, 18339), sub_element_ver: 804, attributes: (0, 2), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // FRAME-MAPPING
    /* 2277 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2191, 2197), attributes_ver: 9361, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // SOURCE-FRAME-REF, TARGET-FRAME-REF
    /* 2278 */ ElementSpec {sub_elements: (20634, 20635), sub_element_ver: 7, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // PDU-TO-FRAME-MAPPINGS
    /* 2279 */ ElementSpec {sub_elements: (19768, 19770), sub_element_ver: 796, attributes: (0, 2), attributes_ver: 796, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // FRAME-PID
    /* 2280 */ ElementSpec {sub_elements: (6044, 6054), sub_element_ver: 841, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (3401, 3403)}, // FRAME-PORT
    /* 2281 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2197, 2203), attributes_ver: 9361, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // FRAME-PORT-REF
    /* 2282 */ ElementSpec {sub_elements: (20635, 20636), sub_element_ver: 7, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // FRAME-PORT-REFS
    /* 2283 */ ElementSpec {sub_elements: (19908, 19909), sub_element_ver: 513, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // I-PDU-TRIGGERINGS
    /* 2284 */ ElementSpec {sub_elements: (19909, 19910), sub_element_ver: 519, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // PDU-TRIGGERINGS
    /* 2285 */ ElementSpec {sub_elements: (18075, 18081), sub_element_ver: 794, attributes: (0, 2), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // FREE-FORMAT
    /* 2286 */ ElementSpec {sub_elements: (20636, 20637), sub_element_ver: 7, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // BYTE-VALUES
    /* 2287 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 134, character_data: Some(474), mode: ContentMode::Characters, ref_info: (0, 0)}, // VALID-BINDING-TIME
    /* 2288 */ ElementSpec {sub_elements: (17004, 17013), sub_element_ver: 7730, attributes: (115, 118), attributes_ver: 5218, character_data: None, mode: ContentMode::Sequence, ref_info: (3403, 3405)}, // FUNCTION-GROUP-MODE-REQUEST-PHM-ACTION-ITEM
    /* 2289 */ ElementSpec {sub_elements: (20637, 20638), sub_element_ver: 20, attributes: (0, 2), attributes_ver: 81, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // FUNCTION-GROUP-PHM-STATE-REFERENCE
    /* 2290 */ ElementSpec {sub_elements: (12042, 12054), sub_element_ver: 3027, attributes: (115, 118), attributes_ver: 12, character_data: None, mode: ContentMode::Sequence, ref_info: (3405, 3411)}, // FUNCTION-GROUP-PORT-MAPPING
    /* 2291 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (583, 589), attributes_ver: 425, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // FUNCTION-GROUP-REF
    /* 2292 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (349, 355), attributes_ver: 425, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // PROCESS-REF
    /* 2293 */ ElementSpec {sub_elements: (15664, 15674), sub_element_ver: 1927, attributes: (115, 118), attributes_ver: 77, character_data: None, mode: ContentMode::Sequence, ref_info: (3411, 3418)}, // FUNCTION-GROUP-SET
    /* 2294 */ ElementSpec {sub_elements: (20232, 20233), sub_element_ver: 19, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // FUNCTION-GROUPS
    /* 2295 */ ElementSpec {sub_elements: (19770, 19772), sub_element_ver: 48, attributes: (0, 2), attributes_ver: 48, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // BLOCK-IF-STATE-ACTIVE-AP-IREF, FUNCTION-GROUP-IREF, FUNCTION-GROUP-STATE-IREF, PRE-ACTIVATE-IREF, SET-FUNCTION-GROUP-STATE-IREF, VERIFY-IREF
    /* 2296 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (583, 589), attributes_ver: 48, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // CONTEXT-MODE-DECLARATION-GROUP-PROTOTYPE-REF
    /* 2297 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2089, 2095), attributes_ver: 48, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // TARGET-MODE-DECLARATION-REF
    /* 2298 */ ElementSpec {sub_elements: (17013, 17022), sub_element_ver: 8385, attributes: (115, 118), attributes_ver: 8385, character_data: None, mode: ContentMode::Sequence, ref_info: (3418, 3420)}, // FUNCTION-INHIBITION-AVAILABILITY-NEEDS
    /* 2299 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (1297, 1303), attributes_ver: 9373, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // CONTROLLED-FID-REF
    /* 2300 */ ElementSpec {sub_elements: (777, 785), sub_element_ver: 841, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (3420, 3422)}, // FUNCTION-INHIBITION-NEEDS
    /* 2301 */ ElementSpec {sub_elements: (12054, 12066), sub_element_ver: 3027, attributes: (115, 118), attributes_ver: 12, character_data: None, mode: ContentMode::Sequence, ref_info: (3422, 3429)}, // FUNCTIONAL-CLUSTER-INTERACTS-WITH-DIAGNOSTIC-EVENT-MAPPING
    /* 2302 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (1309, 1315), attributes_ver: 425, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // DIAGNOSTIC-EVENT-REF
    /* 2303 */ ElementSpec {sub_elements: (20638, 20639), sub_element_ver: 12, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // DIAGNOSTIC-EVENT-REFS
    /* 2304 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2203, 2209), attributes_ver: 425, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // FUNCTIONAL-CLUSTER-REF
    /* 2305 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2209, 2215), attributes_ver: 425, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // PERSISTENCY-DEPLOYMENT-REF
    /* 2306 */ ElementSpec {sub_elements: (7123, 7138), sub_element_ver: 5748, attributes: (115, 118), attributes_ver: 463, character_data: None, mode: ContentMode::Sequence, ref_info: (3429, 3436)}, // FUNCTIONAL-CLUSTER-INTERACTS-WITH-PERSISTENCY-DEPLOYMENT-MAPPING
    /* 2307 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2215, 2221), attributes_ver: 3664, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // FUNCTIONAL-CLUSTER-REF
    /* 2308 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2209, 2215), attributes_ver: 3664, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // PERSISTENCY-DEPLOYMENT-REF
    /* 2309 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (349, 355), attributes_ver: 3664, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // PROCESS-REF
    /* 2310 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 301, character_data: Some(476), mode: ContentMode::Characters, ref_info: (0, 0)}, // PERSISTENCY-ACCESS
    /* 2311 */ ElementSpec {sub_elements: (14003, 14014), sub_element_ver: 1502, attributes: (115, 118), attributes_ver: 230, character_data: None, mode: ContentMode::Sequence, ref_info: (3436, 3443)}, // FUNCTIONAL-CLUSTER-TO-SECURITY-EVENT-DEFINITION-MAPPING
    /* 2312 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2203, 2209), attributes_ver: 230, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // MODULE-INSTANTIATION-REF
    /* 2313 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2221, 2227), attributes_ver: 230, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // SECURITY-EVENT-REF
    /* 2314 */ ElementSpec {sub_elements: (777, 785), sub_element_ver: 8385, attributes: (115, 118), attributes_ver: 8385, character_data: None, mode: ContentMode::Sequence, ref_info: (3443, 3446)}, // FURTHER-ACTION-BYTE-NEEDS
    /* 2315 */ ElementSpec {sub_elements: (10124, 10137), sub_element_ver: 5080, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (3446, 3450)}, // GATEWAY
    /* 2316 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (655, 661), attributes_ver: 9361, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // ECU-INSTANCE-REF, ECU-REF
    /* 2317 */ ElementSpec {sub_elements: (20639, 20640), sub_element_ver: 7, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // FRAME-MAPPINGS
    /* 2318 */ ElementSpec {sub_elements: (20640, 20641), sub_element_ver: 7, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // I-PDU-MAPPINGS
    /* 2319 */ ElementSpec {sub_elements: (20641, 20642), sub_element_ver: 7, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // SIGNAL-MAPPINGS
    /* 2320 */ ElementSpec {sub_elements: (17022, 17031), sub_element_ver: 841, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (3450, 3451)}, // PRM
    /* 2321 */ ElementSpec {sub_elements: (15674, 15684), sub_element_ver: 8385, attributes: (115, 118), attributes_ver: 8385, character_data: None, mode: ContentMode::Sequence, ref_info: (3451, 3455)}, // GENERAL-PURPOSE-CONNECTION
    /* 2322 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (859, 865), attributes_ver: 9373, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // PDU-TRIGGERING-REF
    /* 2323 */ ElementSpec {sub_elements: (20642, 20643), sub_element_ver: 400, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // PDU-TRIGGERING-REFS
    /* 2324 */ ElementSpec {sub_elements: (2810, 2823), sub_element_ver: 6917, attributes: (115, 118), attributes_ver: 6379, character_data: None, mode: ContentMode::Sequence, ref_info: (3455, 3464)}, // GENERAL-PURPOSE-I-PDU
    /* 2325 */ ElementSpec {sub_elements: (2810, 2822), sub_element_ver: 6917, attributes: (115, 118), attributes_ver: 6379, character_data: None, mode: ContentMode::Sequence, ref_info: (3464, 3472)}, // GENERAL-PURPOSE-PDU
    /* 2326 */ ElementSpec {sub_elements: (3364, 3372), sub_element_ver: 3027, attributes: (115, 118), attributes_ver: 12, character_data: None, mode: ContentMode::Sequence, ref_info: (3472, 3474)}, // GENERAL-PURPOSE-TIMER-SERVICE-NEEDS
    /* 2327 */ ElementSpec {sub_elements: (15684, 15694), sub_element_ver: 3027, attributes: (115, 118), attributes_ver: 12, character_data: None, mode: ContentMode::Sequence, ref_info: (3474, 3480)}, // GENERIC-DIAGNOSTIC-TRANSPORT-INSTANTIATION
    /* 2328 */ ElementSpec {sub_elements: (7273, 7284), sub_element_ver: 2034, attributes: (115, 118), attributes_ver: 140, character_data: None, mode: ContentMode::Sequence, ref_info: (3480, 3487)}, // GENERIC-ETHERNET-FRAME
    /* 2329 */ ElementSpec {sub_elements: (19772, 19774), sub_element_ver: 9232, attributes: (3743, 3747), attributes_ver: 0, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // MODEL-OBJECT-REFERENCE
    /* 2330 */ ElementSpec {sub_elements: (17031, 17040), sub_element_ver: 3416, attributes: (115, 118), attributes_ver: 1531, character_data: None, mode: ContentMode::Sequence, ref_info: (3487, 3493)}, // GENERIC-MODULE-INSTANTIATION
    /* 2331 */ ElementSpec {sub_elements: (19774, 19776), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 0, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // GENERIC-TP
    /* 2332 */ ElementSpec {sub_elements: (12066, 12078), sub_element_ver: 3027, attributes: (115, 118), attributes_ver: 12, character_data: None, mode: ContentMode::Sequence, ref_info: (3493, 3499)}, // GENERIC-TP-CONNECTION
    /* 2333 */ ElementSpec {sub_elements: (4145, 4164), sub_element_ver: 3683, attributes: (115, 118), attributes_ver: 2229, character_data: None, mode: ContentMode::Sequence, ref_info: (3499, 3501)}, // GLOBAL-SUPERVISION
    /* 2334 */ ElementSpec {sub_elements: (20643, 20644), sub_element_ver: 20, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // ALIVE-SUPERVISIONS
    /* 2335 */ ElementSpec {sub_elements: (20644, 20645), sub_element_ver: 20, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // DEADLINE-SUPERVISIONS
    /* 2336 */ ElementSpec {sub_elements: (14014, 14025), sub_element_ver: 4822, attributes: (115, 118), attributes_ver: 4822, character_data: None, mode: ContentMode::Sequence, ref_info: (3501, 3502)}, // GLOBAL-SUPERVISION-ENTITY
    /* 2337 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (3651, 3656), attributes_ver: 4822, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // LOCAL-SUPERVISION-ENTITY-REF
    /* 2338 */ ElementSpec {sub_elements: (20645, 20646), sub_element_ver: 491, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // LOCAL-SUPERVISION-ENTITY-REFS
    /* 2339 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2227, 2233), attributes_ver: 9433, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // LOCAL-SUPERVISION-REF
    /* 2340 */ ElementSpec {sub_elements: (20646, 20647), sub_element_ver: 1543, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // LOCAL-SUPERVISION-REFS
    /* 2341 */ ElementSpec {sub_elements: (20647, 20648), sub_element_ver: 74, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // LOCAL-SUPERVISIONS
    /* 2342 */ ElementSpec {sub_elements: (20648, 20649), sub_element_ver: 20, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // LOGICAL-SUPERVISIONS
    /* 2343 */ ElementSpec {sub_elements: (777, 785), sub_element_ver: 3276, attributes: (115, 118), attributes_ver: 192, character_data: None, mode: ContentMode::Sequence, ref_info: (3502, 3504)}, // GLOBAL-SUPERVISION-NEEDS
    /* 2344 */ ElementSpec {sub_elements: (20649, 20650), sub_element_ver: 6, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // NO-CHECKPOINT-SUPERVISIONS
    /* 2345 */ ElementSpec {sub_elements: (20650, 20651), sub_element_ver: 20, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // NO-SUPERVISIONS
    /* 2346 */ ElementSpec {sub_elements: (20651, 20652), sub_element_ver: 20, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // SUPERVISION-MODES
    /* 2347 */ ElementSpec {sub_elements: (20652, 20653), sub_element_ver: 20, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // TRANSITIONS
    /* 2348 */ ElementSpec {sub_elements: (5205, 5222), sub_element_ver: 4550, attributes: (115, 118), attributes_ver: 140, character_data: None, mode: ContentMode::Sequence, ref_info: (3504, 3506)}, // GLOBAL-TIME-CAN-MASTER
    /* 2349 */ ElementSpec {sub_elements: (5222, 5239), sub_element_ver: 4567, attributes: (115, 118), attributes_ver: 140, character_data: None, mode: ContentMode::Sequence, ref_info: (3506, 3508)}, // GLOBAL-TIME-CAN-SLAVE
    /* 2350 */ ElementSpec {sub_elements: (18711, 18715), sub_element_ver: 34, attributes: (0, 2), attributes_ver: 9, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // GLOBAL-TIME-CORRECTION-PROPS
    /* 2351 */ ElementSpec {sub_elements: (20653, 20654), sub_element_ver: 21, attributes: (0, 2), attributes_ver: 134, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // GLOBAL-TIME-PROPS
    /* 2352 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 120, character_data: Some(480), mode: ContentMode::Characters, ref_info: (0, 0)}, // CRC-SECURED
    /* 2353 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 120, character_data: Some(481), mode: ContentMode::Characters, ref_info: (0, 0)}, // CRC-VALIDATED
    /* 2354 */ ElementSpec {sub_elements: (1253, 1285), sub_element_ver: 1317, attributes: (115, 118), attributes_ver: 140, character_data: None, mode: ContentMode::Sequence, ref_info: (3508, 3515)}, // GLOBAL-TIME-DOMAIN
    /* 2355 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2233, 2239), attributes_ver: 9331, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // ALL-CHANNELS-REF, COMMUNICATION-CLUSTER-REF, SPECIFIC-CHANNEL-REF, SUB-NODE-CHANNEL-REF
    /* 2356 */ ElementSpec {sub_elements: (20654, 20655), sub_element_ver: 43, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // COMMUNICATION-CLUSTER-REFS
    /* 2357 */ ElementSpec {sub_elements: (20655, 20656), sub_element_ver: 43, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // GATEWAYS
    /* 2358 */ ElementSpec {sub_elements: (19208, 19211), sub_element_ver: 9, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // GLOBAL-TIME-DOMAIN-PROPERTYS
    /* 2359 */ ElementSpec {sub_elements: (19208, 19211), sub_element_ver: 192, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Choice, ref_info: (0, 0)}, // GLOBAL-TIME-DOMAIN-PROPS
    /* 2360 */ ElementSpec {sub_elements: (18715, 18719), sub_element_ver: 34, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // GLOBAL-TIME-MASTERS
    /* 2361 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2239, 2245), attributes_ver: 9331, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // GLOBAL-TIME-PDU-REF
    /* 2362 */ ElementSpec {sub_elements: (20483, 20484), sub_element_ver: 9, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // GLOBAL-TIME-SUB-DOMAINS
    /* 2363 */ ElementSpec {sub_elements: (20656, 20657), sub_element_ver: 12, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // ICV-SECURE-COM-PROPSS
    /* 2364 */ ElementSpec {sub_elements: (18715, 18719), sub_element_ver: 168, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Choice, ref_info: (0, 0)}, // MASTER
    /* 2365 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2245, 2251), attributes_ver: 9385, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // OFFSET-TIME-DOMAIN-REF
    /* 2366 */ ElementSpec {sub_elements: (19909, 19910), sub_element_ver: 9, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // PDU-TRIGGERINGS, TARGET-PDU-TRIGGERINGS
    /* 2367 */ ElementSpec {sub_elements: (19776, 19778), sub_element_ver: 9, attributes: (0, 2), attributes_ver: 9, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // GLOBAL-TIME-DOMAIN-REF-CONDITIONAL
    /* 2368 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2245, 2251), attributes_ver: 1187, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // GLOBAL-TIME-DOMAIN-REF
    /* 2369 */ ElementSpec {sub_elements: (18719, 18723), sub_element_ver: 168, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // SLAVES
    /* 2370 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2245, 2251), attributes_ver: 9331, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // SUB-DOMAIN-REF
    /* 2371 */ ElementSpec {sub_elements: (20657, 20658), sub_element_ver: 43, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // SUB-DOMAIN-REFS
    /* 2372 */ ElementSpec {sub_elements: (5239, 5256), sub_element_ver: 4584, attributes: (115, 118), attributes_ver: 140, character_data: None, mode: ContentMode::Sequence, ref_info: (3515, 3517)}, // GLOBAL-TIME-ETH-MASTER
    /* 2373 */ ElementSpec {sub_elements: (5256, 5273), sub_element_ver: 4601, attributes: (115, 118), attributes_ver: 140, character_data: None, mode: ContentMode::Sequence, ref_info: (3517, 3519)}, // GLOBAL-TIME-ETH-SLAVE
    /* 2374 */ ElementSpec {sub_elements: (5205, 5220), sub_element_ver: 4550, attributes: (115, 118), attributes_ver: 140, character_data: None, mode: ContentMode::Sequence, ref_info: (3519, 3521)}, // GLOBAL-TIME-FR-MASTER
    /* 2375 */ ElementSpec {sub_elements: (5222, 5239), sub_element_ver: 4567, attributes: (115, 118), attributes_ver: 140, character_data: None, mode: ContentMode::Sequence, ref_info: (3521, 3523)}, // GLOBAL-TIME-FR-SLAVE
    /* 2376 */ ElementSpec {sub_elements: (12078, 12090), sub_element_ver: 7502, attributes: (115, 118), attributes_ver: 140, character_data: None, mode: ContentMode::Sequence, ref_info: (3523, 3524)}, // GLOBAL-TIME-GATEWAY
    /* 2377 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (655, 661), attributes_ver: 9331, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // ECU-INSTANCE-REF, HOST-REF
    /* 2378 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2251, 2257), attributes_ver: 9331, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // MASTER-REF
    /* 2379 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2257, 2263), attributes_ver: 9331, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // SLAVE-REF
    /* 2380 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 301, character_data: Some(483), mode: ContentMode::Characters, ref_info: (0, 0)}, // ICV-SECURED
    /* 2381 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 301, character_data: Some(484), mode: ContentMode::Characters, ref_info: (0, 0)}, // ICV-VERIFICATION
    /* 2382 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 123, character_data: Some(486), mode: ContentMode::Characters, ref_info: (0, 0)}, // GLOBAL-TIME-PORT-ROLE
    /* 2383 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (661, 667), attributes_ver: 9331, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // COMMUNICATION-CONNECTOR-REF
    /* 2384 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (175, 181), attributes_ver: 48, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // CONTAINED-PROCESS-REF, PROCESS-DESIGN-REF, PROCESS-REF
    /* 2385 */ ElementSpec {sub_elements: (17040, 17049), sub_element_ver: 8657, attributes: (24, 41), attributes_ver: 9240, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // GRAPHIC
    /* 2386 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 617, character_data: Some(490), mode: ContentMode::Characters, ref_info: (0, 0)}, // NOTATION
    /* 2387 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 22, character_data: Some(491), mode: ContentMode::Characters, ref_info: (0, 0)}, // HANDLE-INVALID
    /* 2388 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 22, character_data: Some(492), mode: ContentMode::Characters, ref_info: (0, 0)}, // HANDLE-OUT-OF-RANGE
    /* 2389 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 656, character_data: Some(493), mode: ContentMode::Characters, ref_info: (0, 0)}, // HANDLE-OUT-OF-RANGE-STATUS
    /* 2390 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 22, character_data: Some(494), mode: ContentMode::Characters, ref_info: (0, 0)}, // HANDLE-TERMINATION-AND-RESTART
    /* 2391 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 22, character_data: Some(495), mode: ContentMode::Characters, ref_info: (0, 0)}, // HANDLE-TIMEOUT-TYPE
    /* 2392 */ ElementSpec {sub_elements: (18081, 18087), sub_element_ver: 868, attributes: (0, 2), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // HARDWARE-CONFIGURATION
    /* 2393 */ ElementSpec {sub_elements: (777, 785), sub_element_ver: 1187, attributes: (115, 118), attributes_ver: 9, character_data: None, mode: ContentMode::Sequence, ref_info: (3524, 3526)}, // HARDWARE-TEST-NEEDS
    /* 2394 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 637, character_data: Some(496), mode: ContentMode::Characters, ref_info: (0, 0)}, // MODE-CONDITION
    /* 2395 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 2884, character_data: Some(497), mode: ContentMode::Characters, ref_info: (0, 0)}, // MODE-CONDITION
    /* 2396 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 488, character_data: Some(498), mode: ContentMode::Characters, ref_info: (0, 0)}, // SUPERVISION-CONDITION
    /* 2397 */ ElementSpec {sub_elements: (10137, 10150), sub_element_ver: 4822, attributes: (115, 118), attributes_ver: 4822, character_data: None, mode: ContentMode::Sequence, ref_info: (3526, 3528)}, // HEALTH-CHANNEL-EXTERNAL-MODE
    /* 2398 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (3656, 3661), attributes_ver: 4822, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // MODE-DECLARATION-REF
    /* 2399 */ ElementSpec {sub_elements: (19778, 19780), sub_element_ver: 77, attributes: (0, 2), attributes_ver: 77, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // HEALTH-CHANNEL-EXTERNAL-REPORTED-STATUS
    /* 2400 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2263, 2269), attributes_ver: 500, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // STATUS-REF
    /* 2401 */ ElementSpec {sub_elements: (7138, 7153), sub_element_ver: 5763, attributes: (115, 118), attributes_ver: 2229, character_data: None, mode: ContentMode::Sequence, ref_info: (3528, 3530)}, // HEALTH-CHANNEL-EXTERNAL-STATUS
    /* 2402 */ ElementSpec {sub_elements: (20658, 20659), sub_element_ver: 19, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // NOTIFIED-STATUSS
    /* 2403 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2269, 2275), attributes_ver: 3664, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // RECOVERY-NOTIFICATION-REF
    /* 2404 */ ElementSpec {sub_elements: (20659, 20660), sub_element_ver: 6, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // RECOVERY-NOTIFICATION-REFS
    /* 2405 */ ElementSpec {sub_elements: (12090, 12102), sub_element_ver: 7586, attributes: (115, 118), attributes_ver: 1153, character_data: None, mode: ContentMode::Sequence, ref_info: (3530, 3532)}, // HEALTH-CHANNEL-SUPERVISION
    /* 2406 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2275, 2281), attributes_ver: 9355, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // SUPERVISION-REF
    /* 2407 */ ElementSpec {sub_elements: (20660, 20661), sub_element_ver: 2392, attributes: (0, 2), attributes_ver: 6995, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // HTTP-ACCEPT-ENCODING
    /* 2408 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 6995, character_data: Some(500), mode: ContentMode::Characters, ref_info: (0, 0)}, // ACCEPT-ENCODING
    /* 2409 */ ElementSpec {sub_elements: (18339, 18344), sub_element_ver: 691, attributes: (0, 2), attributes_ver: 0, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // HTTP-TP
    /* 2410 */ ElementSpec {sub_elements: (14025, 14036), sub_element_ver: 841, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (3532, 3533)}, // HW-ATTRIBUTE-DEF
    /* 2411 */ ElementSpec {sub_elements: (20661, 20662), sub_element_ver: 7, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // HW-ATTRIBUTE-LITERALS
    /* 2412 */ ElementSpec {sub_elements: (777, 785), sub_element_ver: 841, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (3533, 3534)}, // HW-ATTRIBUTE-LITERAL-DEF
    /* 2413 */ ElementSpec {sub_elements: (18344, 18349), sub_element_ver: 456, attributes: (0, 2), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // HW-ATTRIBUTE-VALUE
    /* 2414 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2281, 2287), attributes_ver: 9361, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // HW-ATTRIBUTE-DEF-REF
    /* 2415 */ ElementSpec {sub_elements: (15694, 15704), sub_element_ver: 884, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (3534, 3539)}, // HW-CATEGORY
    /* 2416 */ ElementSpec {sub_elements: (20662, 20663), sub_element_ver: 7, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // HW-ATTRIBUTE-DEFS
    /* 2417 */ ElementSpec {sub_elements: (20663, 20664), sub_element_ver: 7, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // HW-ATTRIBUTE-VALUES
    /* 2418 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2287, 2293), attributes_ver: 9361, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // HW-CATEGORY-REF
    /* 2419 */ ElementSpec {sub_elements: (20664, 20665), sub_element_ver: 7, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // HW-CATEGORY-REFS
    /* 2420 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2293, 2299), attributes_ver: 9361, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // HW-TYPE-REF
    /* 2421 */ ElementSpec {sub_elements: (7153, 7168), sub_element_ver: 5080, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (3539, 3544)}, // HW-ELEMENT
    /* 2422 */ ElementSpec {sub_elements: (17536, 17544), sub_element_ver: 6967, attributes: (0, 2), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // HW-ELEMENT-CONNECTOR
    /* 2423 */ ElementSpec {sub_elements: (20665, 20666), sub_element_ver: 7, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // HW-PIN-CONNECTIONS
    /* 2424 */ ElementSpec {sub_elements: (20666, 20667), sub_element_ver: 7, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // HW-PIN-GROUP-CONNECTIONS
    /* 2425 */ ElementSpec {sub_elements: (20667, 20668), sub_element_ver: 7, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // HW-ELEMENT-CONNECTIONS
    /* 2426 */ ElementSpec {sub_elements: (20668, 20669), sub_element_ver: 7, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // HW-PIN-GROUPS
    /* 2427 */ ElementSpec {sub_elements: (20669, 20670), sub_element_ver: 7, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // NESTED-ELEMENTS
    /* 2428 */ ElementSpec {sub_elements: (19780, 19782), sub_element_ver: 22, attributes: (0, 2), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // HW-ELEMENT-REF-CONDITIONAL
    /* 2429 */ ElementSpec {sub_elements: (7168, 7183), sub_element_ver: 5778, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (3544, 3546)}, // HW-PIN
    /* 2430 */ ElementSpec {sub_elements: (18087, 18093), sub_element_ver: 6967, attributes: (0, 2), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // HW-PIN-CONNECTOR
    /* 2431 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2299, 2305), attributes_ver: 9361, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // HW-PIN-REF
    /* 2432 */ ElementSpec {sub_elements: (20670, 20671), sub_element_ver: 7, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // HW-PIN-REFS
    /* 2433 */ ElementSpec {sub_elements: (20671, 20672), sub_element_ver: 16, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // FUNCTION-NAMES
    /* 2434 */ ElementSpec {sub_elements: (10150, 10163), sub_element_ver: 3721, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (3546, 3548)}, // HW-PIN-GROUP
    /* 2435 */ ElementSpec {sub_elements: (17759, 17766), sub_element_ver: 6967, attributes: (0, 2), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // HW-PIN-GROUP-CONNECTOR
    /* 2436 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2305, 2311), attributes_ver: 9361, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // HW-COMMUNICATION-PORT-REF, HW-PIN-GROUP-REF
    /* 2437 */ ElementSpec {sub_elements: (20672, 20673), sub_element_ver: 7, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // HW-PIN-GROUP-REFS
    /* 2438 */ ElementSpec {sub_elements: (19782, 19784), sub_element_ver: 22, attributes: (0, 2), attributes_ver: 22, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // HW-PIN-GROUP-CONTENT
    /* 2439 */ ElementSpec {sub_elements: (19784, 19786), sub_element_ver: 22, attributes: (0, 2), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // HW-PORT-MAPPING
    /* 2440 */ ElementSpec {sub_elements: (7153, 7165), sub_element_ver: 5080, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (3548, 3553)}, // HW-TYPE
    /* 2441 */ ElementSpec {sub_elements: (17766, 17773), sub_element_ver: 8870, attributes: (0, 2), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // I-PDU-MAPPING
    /* 2442 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (859, 865), attributes_ver: 9361, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // SOURCE-I-PDU-REF, TARGET-I-PDU-REF
    /* 2443 */ ElementSpec {sub_elements: (7183, 7198), sub_element_ver: 5793, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (3553, 3555)}, // I-PDU-PORT
    /* 2444 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 9439, character_data: Some(510), mode: ContentMode::Characters, ref_info: (0, 0)}, // I-PDU-SIGNAL-PROCESSING
    /* 2445 */ ElementSpec {sub_elements: (17544, 17552), sub_element_ver: 8770, attributes: (0, 2), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // I-PDU-TIMING
    /* 2446 */ ElementSpec {sub_elements: (15704, 15714), sub_element_ver: 8395, attributes: (115, 118), attributes_ver: 617, character_data: None, mode: ContentMode::Sequence, ref_info: (3555, 3556)}, // I-PDU-TRIGGERING
    /* 2447 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (3747, 3751), attributes_ver: 1026, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // I-PDU-PORT-REF
    /* 2448 */ ElementSpec {sub_elements: (20673, 20674), sub_element_ver: 513, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // I-PDU-PORT-REFS
    /* 2449 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (3751, 3755), attributes_ver: 1026, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // I-PDU-REF
    /* 2450 */ ElementSpec {sub_elements: (20674, 20675), sub_element_ver: 513, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // I-SIGNAL-TRIGGERINGS
    /* 2451 */ ElementSpec {sub_elements: (19786, 19788), sub_element_ver: 617, attributes: (0, 2), attributes_ver: 617, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // I-PDU-TRIGGERING-REF-CONDITIONAL
    /* 2452 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (3755, 3759), attributes_ver: 1026, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // I-PDU-TRIGGERING-REF
    /* 2453 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 64, character_data: Some(512), mode: ContentMode::Characters, ref_info: (0, 0)}, // DPD-ACTION
    /* 2454 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 64, character_data: Some(513), mode: ContentMode::Characters, ref_info: (0, 0)}, // HEADER-TYPE
    /* 2455 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 64, character_data: Some(514), mode: ContentMode::Characters, ref_info: (0, 0)}, // IP-PROTOCOL
    /* 2456 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 64, character_data: Some(515), mode: ContentMode::Characters, ref_info: (0, 0)}, // MODE
    /* 2457 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 64, character_data: Some(516), mode: ContentMode::Characters, ref_info: (0, 0)}, // POLICY
    /* 2458 */ ElementSpec {sub_elements: (17049, 17058), sub_element_ver: 3276, attributes: (115, 118), attributes_ver: 192, character_data: None, mode: ContentMode::Sequence, ref_info: (3556, 3557)}, // I-PV-6-EXT-HEADER-FILTER-LIST
    /* 2459 */ ElementSpec {sub_elements: (20675, 20676), sub_element_ver: 21, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // ALLOWED-I-PV-6-EXT-HEADERS
    /* 2460 */ ElementSpec {sub_elements: (15714, 15724), sub_element_ver: 3276, attributes: (115, 118), attributes_ver: 192, character_data: None, mode: ContentMode::Sequence, ref_info: (3557, 3561)}, // I-PV-6-EXT-HEADER-FILTER-SET
    /* 2461 */ ElementSpec {sub_elements: (20676, 20677), sub_element_ver: 21, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // EXT-HEADER-FILTER-LISTS
    /* 2462 */ ElementSpec {sub_elements: (3719, 3739), sub_element_ver: 3256, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (3561, 3568)}, // I-SIGNAL
    /* 2463 */ ElementSpec {sub_elements: (20677, 20678), sub_element_ver: 43, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // COM-BASED-SIGNAL-GROUP-TRANSFORMATIONS, DATA-TRANSFORMATIONS
    /* 2464 */ ElementSpec {sub_elements: (10163, 10176), sub_element_ver: 6930, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (3568, 3575)}, // I-SIGNAL-GROUP
    /* 2465 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (1069, 1075), attributes_ver: 9361, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // I-SIGNAL-REF
    /* 2466 */ ElementSpec {sub_elements: (20678, 20679), sub_element_ver: 7, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // I-SIGNAL-REFS
    /* 2467 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2311, 2317), attributes_ver: 9361, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // REQUEST-GROUP-REF, RESPONSE-GROUP-REF, SIGNAL-GROUP-REF, SYSTEM-SIGNAL-GROUP-REF
    /* 2468 */ ElementSpec {sub_elements: (4699, 4717), sub_element_ver: 3316, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (3575, 3584)}, // I-SIGNAL-I-PDU
    /* 2469 */ ElementSpec {sub_elements: (7198, 7213), sub_element_ver: 5808, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (3584, 3588)}, // I-SIGNAL-I-PDU-GROUP
    /* 2470 */ ElementSpec {sub_elements: (20679, 20680), sub_element_ver: 7, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // CONTAINED-I-SIGNAL-I-PDU-GROUP-REFS
    /* 2471 */ ElementSpec {sub_elements: (20680, 20681), sub_element_ver: 7, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // I-SIGNAL-I-PDUS
    /* 2472 */ ElementSpec {sub_elements: (20681, 20682), sub_element_ver: 43, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // NM-PDUS
    /* 2473 */ ElementSpec {sub_elements: (20682, 20683), sub_element_ver: 7, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // I-PDU-TIMING-SPECIFICATIONS
    /* 2474 */ ElementSpec {sub_elements: (20683, 20684), sub_element_ver: 7, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // PDU-COUNTERS
    /* 2475 */ ElementSpec {sub_elements: (20684, 20685), sub_element_ver: 7, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // PDU-REPLICATIONS
    /* 2476 */ ElementSpec {sub_elements: (19788, 19790), sub_element_ver: 22, attributes: (0, 2), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // I-SIGNAL-I-PDU-REF-CONDITIONAL
    /* 2477 */ ElementSpec {sub_elements: (11118, 11130), sub_element_ver: 7598, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Choice, ref_info: (0, 0)}, // APPL-INIT-VALUE, IMPL-INIT-VALUE, INIT-VALUE, INVALID-VALUE, VALUE, VALUE-SPEC
    /* 2478 */ ElementSpec {sub_elements: (18349, 18354), sub_element_ver: 804, attributes: (0, 2), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // I-SIGNAL-MAPPING
    /* 2479 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2317, 2323), attributes_ver: 9361, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // I-SIGNAL-TRIGGERING-REF, SOURCE-SIGNAL-REF, TARGET-SIGNAL-REF
    /* 2480 */ ElementSpec {sub_elements: (6044, 6060), sub_element_ver: 5096, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (3588, 3590)}, // I-SIGNAL-PORT
    /* 2481 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2323, 2329), attributes_ver: 230, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // DDS-EVENT-QOS-PROFILE-REF, DDS-QOS-PROFILE-REF, DDS-SERVICE-QOS-PROFILE-REF
    /* 2482 */ ElementSpec {sub_elements: (20685, 20686), sub_element_ver: 386, attributes: (0, 2), attributes_ver: 656, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // I-SIGNAL-PROPS
    /* 2483 */ ElementSpec {sub_elements: (11118, 11130), sub_element_ver: 3027, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // RECEPTION-DEFAULT-VALUES
    /* 2484 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (1435, 1441), attributes_ver: 9361, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // SYSTEM-SIGNAL-REF
    /* 2485 */ ElementSpec {sub_elements: (11118, 11130), sub_element_ver: 7610, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Choice, ref_info: (0, 0)}, // COMPARE-VALUE, TIMEOUT-SUBSTITUTION-VALUE
    /* 2486 */ ElementSpec {sub_elements: (7213, 7228), sub_element_ver: 3721, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (3590, 3591)}, // I-SIGNAL-TO-I-PDU-MAPPING
    /* 2487 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2329, 2335), attributes_ver: 9361, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // I-SIGNAL-GROUP-REF
    /* 2488 */ ElementSpec {sub_elements: (19211, 19214), sub_element_ver: 140, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // TRANSFORMATION-I-SIGNAL-PROPSS
    /* 2489 */ ElementSpec {sub_elements: (12102, 12114), sub_element_ver: 5080, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (3591, 3592)}, // I-SIGNAL-TRIGGERING
    /* 2490 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2329, 2335), attributes_ver: 9391, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // I-SIGNAL-GROUP-REF
    /* 2491 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2335, 2341), attributes_ver: 9361, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // I-SIGNAL-PORT-REF
    /* 2492 */ ElementSpec {sub_elements: (20686, 20687), sub_element_ver: 7, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // I-SIGNAL-PORT-REFS
    /* 2493 */ ElementSpec {sub_elements: (19790, 19792), sub_element_ver: 22, attributes: (0, 2), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // I-SIGNAL-TRIGGERING-REF-CONDITIONAL
    /* 2494 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 134, character_data: Some(525), mode: ContentMode::Characters, ref_info: (0, 0)}, // I-SIGNAL-TYPE
    /* 2495 */ ElementSpec {sub_elements: (14036, 14047), sub_element_ver: 8084, attributes: (115, 118), attributes_ver: 48, character_data: None, mode: ContentMode::Sequence, ref_info: (3592, 3598)}, // IAM-MODULE-INSTANTIATION
    /* 2496 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (715, 721), attributes_ver: 48, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // GRANT-REF
    /* 2497 */ ElementSpec {sub_elements: (20687, 20688), sub_element_ver: 48, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // GRANT-REFS
    /* 2498 */ ElementSpec {sub_elements: (19214, 19217), sub_element_ver: 463, attributes: (0, 2), attributes_ver: 301, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // ICMP-RULE
    /* 2499 */ ElementSpec {sub_elements: (20526, 20527), sub_element_ver: 7, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // ANNOTATIONS
    /* 2500 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (3731, 3735), attributes_ver: 9362, character_data: Some(527), mode: ContentMode::Characters, ref_info: (0, 0)}, // CAT-2-ISR, CATEGORY, DEFAULT-VALUE, ELEMENT-ROLE, FRAGMENT, LITERAL-PREFIX, MC-FUNCTION, OPTION, PREFIX, ROLE, RULE, SHORT-LABEL, SHORT-NAME, SW-INTERPOLATION-METHOD, SW-RECORD-LAYOUT-COMPONENT, SYMBOL, TARGET-CATEGORY, TASK, VENDOR-API-INFIX
    /* 2501 */ ElementSpec {sub_elements: (19792, 19794), sub_element_ver: 77, attributes: (0, 2), attributes_ver: 77, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // IDS-COMMON-ELEMENT-REF-CONDITIONAL
    /* 2502 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2341, 2347), attributes_ver: 500, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // IDS-COMMON-ELEMENT-REF
    /* 2503 */ ElementSpec {sub_elements: (15724, 15734), sub_element_ver: 1927, attributes: (115, 118), attributes_ver: 77, character_data: None, mode: ContentMode::Sequence, ref_info: (3598, 3604)}, // IDS-DESIGN
    /* 2504 */ ElementSpec {sub_elements: (20688, 20689), sub_element_ver: 19, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // ELEMENTS
    /* 2505 */ ElementSpec {sub_elements: (777, 785), sub_element_ver: 1927, attributes: (115, 118), attributes_ver: 77, character_data: None, mode: ContentMode::Sequence, ref_info: (3604, 3606)}, // IDS-MGR-CUSTOM-TIMESTAMP-NEEDS
    /* 2506 */ ElementSpec {sub_elements: (17058, 17067), sub_element_ver: 1927, attributes: (115, 118), attributes_ver: 77, character_data: None, mode: ContentMode::Sequence, ref_info: (3606, 3608)}, // IDS-MGR-NEEDS
    /* 2507 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2347, 2353), attributes_ver: 425, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // IDS-TIME-BASE-REF
    /* 2508 */ ElementSpec {sub_elements: (20689, 20690), sub_element_ver: 12, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // IDS-TIME-BASE-REFS
    /* 2509 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (1795, 1801), attributes_ver: 500, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // NETWORK-CONFIGURATION-REF, NETWORK-INTERFACE-REF
    /* 2510 */ ElementSpec {sub_elements: (20690, 20691), sub_element_ver: 6, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // NETWORK-INTERFACE-REFS
    /* 2511 */ ElementSpec {sub_elements: (20691, 20692), sub_element_ver: 19, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // TIME-BASES
    /* 2512 */ ElementSpec {sub_elements: (8464, 8478), sub_element_ver: 1514, attributes: (115, 118), attributes_ver: 230, character_data: None, mode: ContentMode::Sequence, ref_info: (3608, 3618)}, // IDSM-CONTEXT-PROVIDER-INTERFACE
    /* 2513 */ ElementSpec {sub_elements: (12114, 12126), sub_element_ver: 1514, attributes: (115, 118), attributes_ver: 230, character_data: None, mode: ContentMode::Sequence, ref_info: (3618, 3624)}, // IDSM-CONTEXT-PROVIDER-MAPPING
    /* 2514 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2353, 2359), attributes_ver: 230, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // IDS-PLATFORM-INSTANTIATION-REF
    /* 2515 */ ElementSpec {sub_elements: (4717, 4735), sub_element_ver: 1927, attributes: (115, 118), attributes_ver: 77, character_data: None, mode: ContentMode::Sequence, ref_info: (3624, 3631)}, // IDSM-INSTANCE
    /* 2516 */ ElementSpec {sub_elements: (20692, 20693), sub_element_ver: 19, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // BLOCK-STATES
    /* 2517 */ ElementSpec {sub_elements: (20253, 20254), sub_element_ver: 19, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // ECU-INSTANCES
    /* 2518 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2359, 2365), attributes_ver: 500, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // IDSM-MODULE-INSTANTIATION-REF
    /* 2519 */ ElementSpec {sub_elements: (20693, 20694), sub_element_ver: 19, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // RATE-LIMITATION-FILTERS
    /* 2520 */ ElementSpec {sub_elements: (19794, 19796), sub_element_ver: 77, attributes: (0, 2), attributes_ver: 77, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // IDSM-INSTANCE-REF-CONDITIONAL
    /* 2521 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2365, 2371), attributes_ver: 500, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // IDSM-INSTANCE-REF
    /* 2522 */ ElementSpec {sub_elements: (20694, 20695), sub_element_ver: 19, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // TRAFFIC-LIMITATION-FILTERS
    /* 2523 */ ElementSpec {sub_elements: (10176, 10189), sub_element_ver: 6943, attributes: (115, 118), attributes_ver: 77, character_data: None, mode: ContentMode::Sequence, ref_info: (3631, 3638)}, // IDSM-MODULE-INSTANTIATION
    /* 2524 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2371, 2377), attributes_ver: 500, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // REPORTABLE-SECURITY-EVENT-REF
    /* 2525 */ ElementSpec {sub_elements: (20695, 20696), sub_element_ver: 19, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // REPORTABLE-SECURITY-EVENT-REFS
    /* 2526 */ ElementSpec {sub_elements: (14047, 14058), sub_element_ver: 1927, attributes: (115, 118), attributes_ver: 77, character_data: None, mode: ContentMode::Sequence, ref_info: (3638, 3645)}, // IDSM-PROPERTIES
    /* 2527 */ ElementSpec {sub_elements: (20696, 20697), sub_element_ver: 19, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // RATE-LIMITATION-FILTERS
    /* 2528 */ ElementSpec {sub_elements: (20697, 20698), sub_element_ver: 19, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // TRAFFIC-LIMITATION-FILTERS
    /* 2529 */ ElementSpec {sub_elements: (3364, 3378), sub_element_ver: 3027, attributes: (115, 118), attributes_ver: 12, character_data: None, mode: ContentMode::Sequence, ref_info: (3645, 3655)}, // IDSM-QUALIFIED-EVENT-RECEIVER-INTERFACE
    /* 2530 */ ElementSpec {sub_elements: (12126, 12138), sub_element_ver: 3027, attributes: (115, 118), attributes_ver: 12, character_data: None, mode: ContentMode::Sequence, ref_info: (3655, 3661)}, // IDSM-QUALIFIED-EVENT-RECEIVER-MAPPING
    /* 2531 */ ElementSpec {sub_elements: (15734, 15744), sub_element_ver: 1927, attributes: (115, 118), attributes_ver: 77, character_data: None, mode: ContentMode::Sequence, ref_info: (3661, 3663)}, // IDSM-RATE-LIMITATION
    /* 2532 */ ElementSpec {sub_elements: (19796, 19798), sub_element_ver: 77, attributes: (0, 2), attributes_ver: 77, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // IDSM-RATE-LIMITATION-REF-CONDITIONAL
    /* 2533 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2377, 2383), attributes_ver: 500, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // IDSM-RATE-LIMITATION-REF
    /* 2534 */ ElementSpec {sub_elements: (3364, 3378), sub_element_ver: 3027, attributes: (115, 118), attributes_ver: 12, character_data: None, mode: ContentMode::Sequence, ref_info: (3663, 3673)}, // IDSM-REPORTING-MODE-PROVIDER-INTERFACE
    /* 2535 */ ElementSpec {sub_elements: (12138, 12150), sub_element_ver: 3027, attributes: (115, 118), attributes_ver: 12, character_data: None, mode: ContentMode::Sequence, ref_info: (3673, 3679)}, // IDSM-REPORTING-MODE-PROVIDER-MAPPING
    /* 2536 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2353, 2359), attributes_ver: 425, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // IDS-PLATFORM-INSTANTIATION-REF
    /* 2537 */ ElementSpec {sub_elements: (19798, 19800), sub_element_ver: 77, attributes: (0, 2), attributes_ver: 77, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // SIGNATURE-SUPPORT-AP
    /* 2538 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (985, 991), attributes_ver: 500, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // CRYPTO-KEY-SLOT-REF, KEY-SLOT-REF
    /* 2539 */ ElementSpec {sub_elements: (19800, 19802), sub_element_ver: 77, attributes: (0, 2), attributes_ver: 77, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // SIGNATURE-SUPPORT-CP
    /* 2540 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2383, 2389), attributes_ver: 500, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // AUTHENTICATION-REF
    /* 2541 */ ElementSpec {sub_elements: (8464, 8478), sub_element_ver: 1514, attributes: (115, 118), attributes_ver: 230, character_data: None, mode: ContentMode::Sequence, ref_info: (3679, 3689)}, // IDSM-TIMESTAMP-PROVIDER-INTERFACE
    /* 2542 */ ElementSpec {sub_elements: (12114, 12126), sub_element_ver: 1514, attributes: (115, 118), attributes_ver: 230, character_data: None, mode: ContentMode::Sequence, ref_info: (3689, 3695)}, // IDSM-TIMESTAMP-PROVIDER-MAPPING
    /* 2543 */ ElementSpec {sub_elements: (15744, 15754), sub_element_ver: 1927, attributes: (115, 118), attributes_ver: 77, character_data: None, mode: ContentMode::Sequence, ref_info: (3695, 3697)}, // IDSM-TRAFFIC-LIMITATION
    /* 2544 */ ElementSpec {sub_elements: (19802, 19804), sub_element_ver: 77, attributes: (0, 2), attributes_ver: 77, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // IDSM-TRAFFIC-LIMITATION-REF-CONDITIONAL
    /* 2545 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2389, 2395), attributes_ver: 500, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // IDSM-TRAFFIC-LIMITATION-REF
    /* 2546 */ ElementSpec {sub_elements: (7228, 7243), sub_element_ver: 3027, attributes: (115, 118), attributes_ver: 12, character_data: None, mode: ContentMode::Sequence, ref_info: (3697, 3706)}, // IEEE-1722-ACF-BUS-PART-RAW-DATA-STREAM-CONSUMER-MAPPING
    /* 2547 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2395, 2401), attributes_ver: 425, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // ACF-BUS-PART-REF
    /* 2548 */ ElementSpec {sub_elements: (20698, 20699), sub_element_ver: 12, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // ACF-BUS-PART-REFS
    /* 2549 */ ElementSpec {sub_elements: (7243, 7258), sub_element_ver: 3027, attributes: (115, 118), attributes_ver: 12, character_data: None, mode: ContentMode::Sequence, ref_info: (3706, 3715)}, // IEEE-1722-ACF-BUS-RAW-DATA-STREAM-CONSUMER-MAPPING
    /* 2550 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2401, 2407), attributes_ver: 425, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // ACF-BUS-REF
    /* 2551 */ ElementSpec {sub_elements: (20699, 20700), sub_element_ver: 12, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // ACF-BUS-REFS
    /* 2552 */ ElementSpec {sub_elements: (3364, 3378), sub_element_ver: 3027, attributes: (115, 118), attributes_ver: 12, character_data: None, mode: ContentMode::Sequence, ref_info: (3715, 3726)}, // IEEE-1722-RAW-DATA-STREAM-CONSUMER-INTERFACE
    /* 2553 */ ElementSpec {sub_elements: (7258, 7273), sub_element_ver: 3027, attributes: (115, 118), attributes_ver: 12, character_data: None, mode: ContentMode::Sequence, ref_info: (3726, 3735)}, // IEEE-1722-RAW-DATA-STREAM-CONSUMER-MAPPING
    /* 2554 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2407, 2413), attributes_ver: 425, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // IEEE-1722-STREAM-REF
    /* 2555 */ ElementSpec {sub_elements: (3364, 3378), sub_element_ver: 3027, attributes: (115, 118), attributes_ver: 12, character_data: None, mode: ContentMode::Sequence, ref_info: (3735, 3746)}, // IEEE-1722-RAW-DATA-STREAM-PRODUCER-INTERFACE
    /* 2556 */ ElementSpec {sub_elements: (7258, 7273), sub_element_ver: 3027, attributes: (115, 118), attributes_ver: 12, character_data: None, mode: ContentMode::Sequence, ref_info: (3746, 3755)}, // IEEE-1722-RAW-DATA-STREAM-PRODUCER-MAPPING
    /* 2557 */ ElementSpec {sub_elements: (18723, 18727), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 0, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // IEEE-1722-TP
    /* 2558 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 123, character_data: Some(534), mode: ContentMode::Characters, ref_info: (0, 0)}, // AAF-AES-3-DATA-TYPE
    /* 2559 */ ElementSpec {sub_elements: (1497, 1526), sub_element_ver: 1502, attributes: (115, 118), attributes_ver: 230, character_data: None, mode: ContentMode::Sequence, ref_info: (3755, 3761)}, // IEEE-1722-TP-AAF-CONNECTION
    /* 2560 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 123, character_data: Some(535), mode: ContentMode::Characters, ref_info: (0, 0)}, // AAF-FORMAT
    /* 2561 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 123, character_data: Some(536), mode: ContentMode::Characters, ref_info: (0, 0)}, // AAF-NOMINAL-RATE
    /* 2562 */ ElementSpec {sub_elements: (19804, 19806), sub_element_ver: 123, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // ACF-PARTS
    /* 2563 */ ElementSpec {sub_elements: (12150, 12162), sub_element_ver: 1514, attributes: (115, 118), attributes_ver: 230, character_data: None, mode: ContentMode::Sequence, ref_info: (3761, 3763)}, // IEEE-1722-TP-ACF-CAN
    /* 2564 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 123, character_data: Some(539), mode: ContentMode::Characters, ref_info: (0, 0)}, // MESSAGE-TYPE
    /* 2565 */ ElementSpec {sub_elements: (5273, 5290), sub_element_ver: 1514, attributes: (115, 118), attributes_ver: 230, character_data: None, mode: ContentMode::Sequence, ref_info: (3763, 3765)}, // IEEE-1722-TP-ACF-CAN-PART
    /* 2566 */ ElementSpec {sub_elements: (3080, 3102), sub_element_ver: 2743, attributes: (115, 118), attributes_ver: 230, character_data: None, mode: ContentMode::Sequence, ref_info: (3765, 3770)}, // IEEE-1722-TP-ACF-CONNECTION
    /* 2567 */ ElementSpec {sub_elements: (19806, 19808), sub_element_ver: 123, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // ACF-TRANSPORTED-BUSS
    /* 2568 */ ElementSpec {sub_elements: (8688, 8702), sub_element_ver: 1514, attributes: (115, 118), attributes_ver: 230, character_data: None, mode: ContentMode::Sequence, ref_info: (3770, 3772)}, // IEEE-1722-TP-ACF-LIN
    /* 2569 */ ElementSpec {sub_elements: (12162, 12174), sub_element_ver: 1514, attributes: (115, 118), attributes_ver: 230, character_data: None, mode: ContentMode::Sequence, ref_info: (3772, 3774)}, // IEEE-1722-TP-ACF-LIN-PART
    /* 2570 */ ElementSpec {sub_elements: (20700, 20701), sub_element_ver: 16, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // SDU-REFS
    /* 2571 */ ElementSpec {sub_elements: (14058, 14069), sub_element_ver: 1502, attributes: (115, 118), attributes_ver: 230, character_data: None, mode: ContentMode::Sequence, ref_info: (3774, 3779)}, // IEEE-1722-TP-CONFIG
    /* 2572 */ ElementSpec {sub_elements: (20701, 20702), sub_element_ver: 16, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // TP-CONNECTIONS
    /* 2573 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (859, 865), attributes_ver: 230, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // DDS-EVENT-REF, DDS-OPERATION-REQUEST-TRIGGERING-REF, DDS-OPERATION-RESPONSE-TRIGGERING-REF, PDU-REF, SDU-REF
    /* 2574 */ ElementSpec {sub_elements: (19808, 19810), sub_element_ver: 123, attributes: (0, 2), attributes_ver: 123, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // IEEE-1722-TP-CONNECTION-REF-CONDITIONAL
    /* 2575 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2407, 2413), attributes_ver: 230, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // IEE-E-1722-TP-CONNECTION-REF
    /* 2576 */ ElementSpec {sub_elements: (2643, 2667), sub_element_ver: 1502, attributes: (115, 118), attributes_ver: 230, character_data: None, mode: ContentMode::Sequence, ref_info: (3779, 3785)}, // IEEE-1722-TP-CRF-CONNECTION
    /* 2577 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 123, character_data: Some(541), mode: ContentMode::Characters, ref_info: (0, 0)}, // CRF-PULL
    /* 2578 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 123, character_data: Some(542), mode: ContentMode::Characters, ref_info: (0, 0)}, // CRF-TYPE
    /* 2579 */ ElementSpec {sub_elements: (7273, 7288), sub_element_ver: 2034, attributes: (115, 118), attributes_ver: 140, character_data: None, mode: ContentMode::Sequence, ref_info: (3785, 3792)}, // IEEE-1722-TP-ETHERNET-FRAME
    /* 2580 */ ElementSpec {sub_elements: (2110, 2137), sub_element_ver: 1502, attributes: (115, 118), attributes_ver: 230, character_data: None, mode: ContentMode::Sequence, ref_info: (3792, 3798)}, // IEEE-1722-TP-IIDC-CONNECTION
    /* 2581 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 123, character_data: Some(543), mode: ContentMode::Characters, ref_info: (0, 0)}, // RVF-COLOR-SPACE
    /* 2582 */ ElementSpec {sub_elements: (2137, 2164), sub_element_ver: 1502, attributes: (115, 118), attributes_ver: 230, character_data: None, mode: ContentMode::Sequence, ref_info: (3798, 3804)}, // IEEE-1722-TP-RVF-CONNECTION
    /* 2583 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 123, character_data: Some(544), mode: ContentMode::Characters, ref_info: (0, 0)}, // RVF-FRAME-RATE
    /* 2584 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 123, character_data: Some(545), mode: ContentMode::Characters, ref_info: (0, 0)}, // RVF-PIXEL-DEPTH
    /* 2585 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 123, character_data: Some(546), mode: ContentMode::Characters, ref_info: (0, 0)}, // RVF-PIXEL-FORMAT
    /* 2586 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 9, character_data: Some(547), mode: ContentMode::Characters, ref_info: (0, 0)}, // IKE-AUTHENTICATION-METHOD
    /* 2587 */ ElementSpec {sub_elements: (20702, 20703), sub_element_ver: 0, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // BUILD-ACTION-MANIFESTS
    /* 2588 */ ElementSpec {sub_elements: (20703, 20704), sub_element_ver: 7, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // CODE-DESCRIPTORS
    /* 2589 */ ElementSpec {sub_elements: (20704, 20705), sub_element_ver: 7, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // COMPILERS
    /* 2590 */ ElementSpec {sub_elements: (5290, 5307), sub_element_ver: 4618, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (3804, 3814)}, // IMPLEMENTATION-DATA-TYPE
    /* 2591 */ ElementSpec {sub_elements: (6060, 6076), sub_element_ver: 5112, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (3814, 3819)}, // IMPLEMENTATION-DATA-TYPE-ELEMENT
    /* 2592 */ ElementSpec {sub_elements: (14069, 14080), sub_element_ver: 7430, attributes: (115, 118), attributes_ver: 4960, character_data: None, mode: ContentMode::Sequence, ref_info: (3819, 3823)}, // IMPLEMENTATION-DATA-TYPE-ELEMENT-EXTENSION
    /* 2593 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (961, 967), attributes_ver: 9337, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // ALLOCATOR-REF
    /* 2594 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (1963, 1969), attributes_ver: 9337, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // CONTEXT-DATA-PROTOTYPE-REF, IMPLEMENTATION-DATA-TYPE-ELEMENT-REF, TARGET-DATA-PROTOTYPE-REF
    /* 2595 */ ElementSpec {sub_elements: (19217, 19220), sub_element_ver: 4960, attributes: (0, 2), attributes_ver: 75, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // IMPLEMENTATION-DATA-TYPE-ELEMENT-IN-AUTOSAR-DATA-PROTOTYPE-REF, OPT-IMPL-RECORD-ELEMENT, TLV-IMPL-RECORD-ELEMENT
    /* 2596 */ ElementSpec {sub_elements: (20705, 20706), sub_element_ver: 75, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // CONTEXT-DATA-PROTOTYPE-REFS
    /* 2597 */ ElementSpec {sub_elements: (18727, 18731), sub_element_ver: 1205, attributes: (0, 2), attributes_ver: 64, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // IMPLEMENTATION-DATA-TYPE-ELEMENT-IN-PORT-INTERFACE-REF
    /* 2598 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (433, 439), attributes_ver: 1642, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // CONTEXT-IMPLEMENTATION-DATA-ELEMENT-REF, TARGET-IMPLEMENTATION-DATA-TYPE-ELEMENT-REF
    /* 2599 */ ElementSpec {sub_elements: (20706, 20707), sub_element_ver: 64, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // CONTEXT-IMPLEMENTATION-DATA-ELEMENT-REFS
    /* 2600 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (409, 415), attributes_ver: 1642, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // ROOT-DATA-PROTOTYPE-IN-CS-REF, ROOT-DATA-PROTOTYPE-IN-SR-REF, ROOT-DATA-PROTOTYPE-REF
    /* 2601 */ ElementSpec {sub_elements: (17773, 17780), sub_element_ver: 8877, attributes: (0, 2), attributes_ver: 134, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // IMPLEMENTATION-DATA-TYPE-ELEMENT-IN-SYSTEM-REF
    /* 2602 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (433, 439), attributes_ver: 9325, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // CONTEXT-IMPLEMENTATION-DATA-ELEMENT-REF, TARGET-IMPLEMENTATION-DATA-TYPE-ELEMENT-REF
    /* 2603 */ ElementSpec {sub_elements: (20707, 20708), sub_element_ver: 21, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // CONTEXT-IMPLEMENTATION-DATA-ELEMENT-REFS
    /* 2604 */ ElementSpec {sub_elements: (20708, 20709), sub_element_ver: 21, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // CONTEXT-SWC-PROTOTYPE-REFS
    /* 2605 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (409, 415), attributes_ver: 9325, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // ROOT-DATA-PROTOTYPE-REF
    /* 2606 */ ElementSpec {sub_elements: (14080, 14091), sub_element_ver: 7430, attributes: (115, 118), attributes_ver: 4960, character_data: None, mode: ContentMode::Sequence, ref_info: (3823, 3827)}, // IMPLEMENTATION-DATA-TYPE-EXTENSION
    /* 2607 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2413, 2419), attributes_ver: 9337, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // IMPLEMENTATION-DATA-TYPE-REF
    /* 2608 */ ElementSpec {sub_elements: (20156, 20157), sub_element_ver: 75, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // NAMESPACES
    /* 2609 */ ElementSpec {sub_elements: (19220, 19223), sub_element_ver: 9196, attributes: (0, 2), attributes_ver: 656, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // IMPLEMENTATION-DATA-TYPE-SUB-ELEMENT-REF
    /* 2610 */ ElementSpec {sub_elements: (19810, 19812), sub_element_ver: 22, attributes: (0, 2), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // INSTANCE-IN-MEMORY
    /* 2611 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (433, 439), attributes_ver: 9361, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // CONTEXT-DATA-PROTOTYPE-REF, TARGET-DATA-PROTOTYPE-REF, TARGET-REF
    /* 2612 */ ElementSpec {sub_elements: (20709, 20710), sub_element_ver: 7, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // HW-ELEMENT-REFS
    /* 2613 */ ElementSpec {sub_elements: (20710, 20711), sub_element_ver: 7, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // LINKERS
    /* 2614 */ ElementSpec {sub_elements: (20711, 20712), sub_element_ver: 7, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // GENERATED-ARTIFACTS, REQUIRED-ARTIFACTS, REQUIRED-GENERATOR-TOOLS
    /* 2615 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2419, 2425), attributes_ver: 9361, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // SWC-BSW-MAPPING-REF
    /* 2616 */ ElementSpec {sub_elements: (15754, 15764), sub_element_ver: 1502, attributes: (115, 118), attributes_ver: 230, character_data: None, mode: ContentMode::Sequence, ref_info: (3827, 3830)}, // IMPOSITION-TIME
    /* 2617 */ ElementSpec {sub_elements: (12174, 12186), sub_element_ver: 1514, attributes: (115, 118), attributes_ver: 230, character_data: None, mode: ContentMode::Sequence, ref_info: (3830, 3836)}, // IMPOSITION-TIME-DEFINITION-GROUP
    /* 2618 */ ElementSpec {sub_elements: (20712, 20713), sub_element_ver: 16, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // IMPOSITION-TIMES
    /* 2619 */ ElementSpec {sub_elements: (19812, 19814), sub_element_ver: 22, attributes: (0, 2), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // INCLUDED-DATA-TYPE-SET
    /* 2620 */ ElementSpec {sub_elements: (20713, 20714), sub_element_ver: 7, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // DATA-TYPE-REFS
    /* 2621 */ ElementSpec {sub_elements: (19814, 19816), sub_element_ver: 656, attributes: (0, 2), attributes_ver: 656, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // INCLUDED-MODE-DECLARATION-GROUP-SET
    /* 2622 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2425, 2431), attributes_ver: 9349, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // MODE-DECLARATION-GROUP-REF
    /* 2623 */ ElementSpec {sub_elements: (20714, 20715), sub_element_ver: 386, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // MODE-DECLARATION-GROUP-REFS
    /* 2624 */ ElementSpec {sub_elements: (20715, 20716), sub_element_ver: 7, attributes: (3834, 3837), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // INDENT-SAMPLE
    /* 2625 */ ElementSpec {sub_elements: (10235, 10237), sub_element_ver: 22, attributes: (0, 2), attributes_ver: 22, character_data: Some(982), mode: ContentMode::Mixed, ref_info: (0, 0)}, // DISPLAY-NAME, IE, PRM-UNIT, UNIT-DISPLAY-NAME
    /* 2626 */ ElementSpec {sub_elements: (18731, 18735), sub_element_ver: 795, attributes: (0, 2), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // INDEXED-ARRAY-ELEMENT
    /* 2627 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2431, 2437), attributes_ver: 9391, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // APPLICATION-ARRAY-ELEMENT-REF
    /* 2628 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (3759, 3763), attributes_ver: 1026, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // ARRAY-ELEMENT-REF, RECORD-ELEMENT-REF
    /* 2629 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (1963, 1969), attributes_ver: 9391, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // IMPLEMENTATION-ARRAY-ELEMENT-REF, IMPLEMENTATION-RECORD-ELEMENT-REF
    /* 2630 */ ElementSpec {sub_elements: (17067, 17076), sub_element_ver: 2104, attributes: (115, 118), attributes_ver: 9, character_data: None, mode: ContentMode::Sequence, ref_info: (3836, 3838)}, // INDICATOR-STATUS-NEEDS
    /* 2631 */ ElementSpec {sub_elements: (19223, 19226), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 0, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // INFRASTRUCTURE-SERVICES
    /* 2632 */ ElementSpec {sub_elements: (7813, 7825), sub_element_ver: 5144, attributes: (115, 118), attributes_ver: 0, character_data: None, mode: ContentMode::Sequence, ref_info: (3838, 3844)}, // INIT-EVENT
    /* 2633 */ ElementSpec {sub_elements: (18735, 18739), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 0, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // INITIAL-FIND-BEHAVIOR, INITIAL-OFFER-BEHAVIOR
    /* 2634 */ ElementSpec {sub_elements: (19226, 19229), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 0, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // DATA-PROTOTYPE-GROUP-IREF
    /* 2635 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2437, 2443), attributes_ver: 9319, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // TARGET-DATA-PROTOTYPE-GROUP-REF
    /* 2636 */ ElementSpec {sub_elements: (19816, 19818), sub_element_ver: 22, attributes: (0, 2), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // INNER-GROUP-IREF
    /* 2637 */ ElementSpec {sub_elements: (19229, 19232), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 0, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // RUNNABLE-ENTITY-GROUP-IREF
    /* 2638 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2443, 2449), attributes_ver: 9319, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // TARGET-RUNNABLE-ENTITY-GROUP-REF
    /* 2639 */ ElementSpec {sub_elements: (19818, 19820), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 0, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // REFINED-EVENT-IREF
    /* 2640 */ ElementSpec {sub_elements: (18739, 18743), sub_element_ver: 29, attributes: (0, 2), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // INSTANTIATION-DATA-DEF-PROPS
    /* 2641 */ ElementSpec {sub_elements: (18743, 18747), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 0, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // INSTANTIATION-TIMING-EVENT-PROPS
    /* 2642 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 22, character_data: Some(552), mode: ContentMode::Characters, ref_info: (0, 0)}, // ACCEPTED-STARTUP-RANGE, ACTION-POINT-OFFSET, ADDRESS, ALLOW-PASSIVE-TO-ACTIVE, APPL-WATCHDOG-LIMIT, BASE-CYCLE, BASE-TYPE-SIZE, BASIC-CYCLE-LENGTH, BIT-POSITION, BYTE, BYTE-VALUE, CAS-RX-LOW-MAX, CLUSTER-DRIFT-DAMPING, COLD-START-ATTEMPTS, COM-CONFIGURATION-ID, CONFIGURED-NAD, CONNECTION-PRIO-PDUS, CONSTR-LEVEL, COUNTER-BASED-FDC-THRESHOLD-STORAGE-VALUE, CSE-CODE-FACTOR, CYCLE-COUNT-MAX, CYCLE-COUNTER, CYCLE-REPETITION, DATA-OFFSET, DECODING-CORRECTION, DEFAULT-VALUE, DELAY-COMPENSATION-A, DELAY-COMPENSATION-B, DIAGNOSTIC-ADDRESS, DOMAIN-ID, DYNAMIC-SLOT-IDLE-PHASE, ECU-INSTANCE, ELEMENT-BYTE-VALUE, ELEMENT-POSITION, ERROR-CODE, EXPECTED-TX-TRIGGER, EXTERN-OFFSET-CORRECTION, EXTERN-RATE-CORRECTION, FIFO-DEPTH, FRAME-LENGTH, FUNCTION, FUNCTION-INSTANCE, HEADER-LENGTH, IDENTIFIER, IDENTITIY-NUMBER, IGNORE-AFTER-TX, INDEX, INDUSTRY-GROUP, INITIAL-NAD, INITIAL-REF-OFFSET, INVERT, LATEST-TX, LENGTH, LISTEN-NOISE, LISTEN-TIMEOUT, LOGIC-ADDRESS, MACRO-INITIAL-OFFSET-A, MACRO-INITIAL-OFFSET-B, MACRO-PER-CYCLE, MANUFACTURER-CODE, MASK, MAX, MAX-AR, MAX-AS, MAX-BASE-TYPE-SIZE, MAX-BLOCK-SIZE, MAX-BS, MAX-BUFFER-REQUEST, MAX-BUFFER-SIZE, MAX-CYCLES, MAX-FC-WAIT, MAX-FR-IF, MAX-HEADER-ID, MAX-NUMBER-OF-NPDU-PER-CYCLE, MAX-NUMBER-OF-RESP-PENDING-FRAMES, MAX-NUMBER-OF-TIME-QUANTA-PER-BIT, MAX-RETRIES, MAX-SIZE-TO-FILL, MAX-SLOTS, MAX-WITHOUT-CLOCK-CORRECTION-FATAL, MAX-WITHOUT-CLOCK-CORRECTION-PASSIVE, MAXIMUM-DYNAMIC-PAYLOAD-LENGTH, MAXIMUM-RECEIVE-BUFFER-LENGTH, MAXIMUM-TRANSMIT-BUFFER-LENGTH, MEM-ALIGNMENT, MICRO-INITIAL-OFFSET-A, MICRO-INITIAL-OFFSET-B, MICRO-PER-CYCLE, MIN, MIN-HEADER-ID, MIN-NUMBER-OF-TIME-QUANTA-PER-BIT, MINISLOT-ACTION-POINT-OFFSET, MINISLOT-DURATION, MSG-ID-MASK, MSG-ID-MATCH, NETWORK-IDLE-TIME, NETWORK-MANAGEMENT-VECTOR-LENGTH, NEW-NAD, NM-CBV-POSITION, NM-DATA-CYCLE, NM-NID-POSITION, NM-NODE-ID, NM-READY-SLEEP-COUNT, NM-REPETITION-CYCLE, NM-USER-DATA-LENGTH, NM-VOTING-CYCLE, NUMBER-OF-BITS, NUMBER-OF-MINISLOTS, NUMBER-OF-REPETITIONS, NUMBER-OF-STATIC-SLOTS, OFFSET, OFFSET-CORRECTION-OUT, OFFSET-CORRECTION-START, PAYLOAD-LENGTH-STATIC, PDU-COUNTER-SIZE, PDU-COUNTER-START-POSITION, PDU-COUNTER-THRESHOLD, PDU-REPLICATION-VOTING, PGN, PIN-NUMBER, PORT-ADDRESS, POSITION-IN-TABLE, PROP-SEG, RANGE-MAX, RANGE-MIN, RATE-CORRECTION-OUT, RELATIVE, RESPONSE-ERROR-POSITION, SAFETY-MARGIN, SAMPLES-PER-MICROTICK, SCHEDULING-PRIORITY, SEGMENT-LENGTH, SEGMENT-POSITION, SELECTOR-FIELD-CODE, SELECTOR-FIELD-LENGTH, SELECTOR-FIELD-START-POSITION, SEPARATION-CYCLE-EXPONENT, SEQUENCE-OFFSET, SPEED, START-INDEX, START-POSITION, STATIC-SLOT-DURATION, SW-FILL-CHARACTER, SW-RECORD-LAYOUT-GROUP-STEP, SW-RECORD-LAYOUT-V-FIX-VALUE, SYMBOL-WINDOW, SYMBOL-WINDOW-ACTION-POINT-OFFSET, SYNC-FRAME-ID-COUNT-MAX, SYNC-JUMP-WIDTH, SYNC-NODE-MAX, TIME-MARK, TIME-MASTER-PRIORITY, TIME-SEG-1, TIME-SEG-2, TIME-TRIGGERED-CAN-LEVEL, TP-ADDRESS, TP-ADDRESS-EXTENSION-VALUE, TRANSMISSION-START-SEQUENCE-DURATION, TX-ENABLE-WINDOW-LENGTH, UNUSED-BIT-PATTERN, UPDATE-INDICATION-BIT-POSITION, VEHICLE-SYSTEM, VEHICLE-SYSTEM-INSTANCE, WAKE-UP-PATTERN, WAKEUP-RX-IDLE, WAKEUP-RX-LOW, WAKEUP-RX-WINDOW, WAKEUP-SYMBOL-RX-WINDOW, WAKEUP-TX-ACTIVE, WAKEUP-TX-IDLE, X
    /* 2643 */ ElementSpec {sub_elements: (19820, 19822), sub_element_ver: 617, attributes: (0, 2), attributes_ver: 617, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // INTERFACE-BLUEPRINT-MAPPING
    /* 2644 */ ElementSpec {sub_elements: (8702, 8716), sub_element_ver: 6503, attributes: (115, 118), attributes_ver: 1153, character_data: None, mode: ContentMode::Sequence, ref_info: (3844, 3848)}, // INTERFACE-MAPPING
    /* 2645 */ ElementSpec {sub_elements: (20716, 20717), sub_element_ver: 8, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // EVENT-MAPPINGS
    /* 2646 */ ElementSpec {sub_elements: (20717, 20718), sub_element_ver: 8, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // FIELD-MAPPINGS
    /* 2647 */ ElementSpec {sub_elements: (20718, 20719), sub_element_ver: 300, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // FIRE-AND-FORGET-MAPPINGS
    /* 2648 */ ElementSpec {sub_elements: (20719, 20720), sub_element_ver: 6, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // FIRE-AND-FORGET-METHOD-MAPPINGS
    /* 2649 */ ElementSpec {sub_elements: (20720, 20721), sub_element_ver: 8, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // METHOD-MAPPINGS
    /* 2650 */ ElementSpec {sub_elements: (15764, 15774), sub_element_ver: 5868, attributes: (115, 118), attributes_ver: 5288, character_data: None, mode: ContentMode::Sequence, ref_info: (3848, 3852)}, // INTERFACE-MAPPING-SET
    /* 2651 */ ElementSpec {sub_elements: (443, 444), sub_element_ver: 92, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // INTERFACE-MAPPINGS
    /* 2652 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2449, 2455), attributes_ver: 9361, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // CONSTANT-MAPPING-REF, CONSTANT-VALUE-MAPPING-REF
    /* 2653 */ ElementSpec {sub_elements: (20721, 20722), sub_element_ver: 7, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // CONSTANT-VALUE-MAPPING-REFS
    /* 2654 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2455, 2461), attributes_ver: 9361, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // DATA-TYPE-MAPPING-REF
    /* 2655 */ ElementSpec {sub_elements: (20722, 20723), sub_element_ver: 7, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // DATA-TYPE-MAPPING-REFS
    /* 2656 */ ElementSpec {sub_elements: (20723, 20724), sub_element_ver: 0, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // EXCLUSIVE-AREA-NESTING-ORDERS
    /* 2657 */ ElementSpec {sub_elements: (20724, 20725), sub_element_ver: 7, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // EXCLUSIVE-AREAS
    /* 2658 */ ElementSpec {sub_elements: (18093, 18099), sub_element_ver: 8898, attributes: (0, 2), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // INTERNAL-CONSTRS
    /* 2659 */ ElementSpec {sub_elements: (10189, 10202), sub_element_ver: 2053, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (3852, 3858)}, // INTERNAL-TRIGGER-OCCURRED-EVENT
    /* 2660 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2461, 2467), attributes_ver: 9361, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // EVENT-SOURCE-REF
    /* 2661 */ ElementSpec {sub_elements: (14091, 14102), sub_element_ver: 8095, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (3858, 3863)}, // INTERNAL-TRIGGERING-POINT
    /* 2662 */ ElementSpec {sub_elements: (19232, 19235), sub_element_ver: 22, attributes: (0, 2), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // INTERPOLATION-ROUTINE
    /* 2663 */ ElementSpec {sub_elements: (19822, 19824), sub_element_ver: 22, attributes: (0, 2), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // INTERPOLATION-ROUTINE-MAPPING
    /* 2664 */ ElementSpec {sub_elements: (20725, 20726), sub_element_ver: 7, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // INTERPOLATION-ROUTINES
    /* 2665 */ ElementSpec {sub_elements: (15774, 15784), sub_element_ver: 884, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (3863, 3867)}, // INTERPOLATION-ROUTINE-MAPPING-SET
    /* 2666 */ ElementSpec {sub_elements: (20726, 20727), sub_element_ver: 7, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // INTERPOLATION-ROUTINE-MAPPINGS
    /* 2667 */ ElementSpec {sub_elements: (19824, 19826), sub_element_ver: 22, attributes: (0, 2), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // INVALIDATION-POLICY
    /* 2668 */ ElementSpec {sub_elements: (20727, 20728), sub_element_ver: 21, attributes: (0, 2), attributes_ver: 134, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // INVERT-CONDITION
    /* 2669 */ ElementSpec {sub_elements: (18354, 18359), sub_element_ver: 192, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Choice, ref_info: (0, 0)}, // CONDITION
    /* 2670 */ ElementSpec {sub_elements: (10202, 10215), sub_element_ver: 6956, attributes: (0, 2), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // IO-HW-ABSTRACTION-SERVER-ANNOTATION
    /* 2671 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (397, 403), attributes_ver: 9361, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // ARGUMENT-REF
    /* 2672 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 120, character_data: Some(556), mode: ContentMode::Characters, ref_info: (0, 0)}, // IP-ADDRESS-KEEP-BEHAVIOR
    /* 2673 */ ElementSpec {sub_elements: (17780, 17787), sub_element_ver: 554, attributes: (0, 2), attributes_ver: 77, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // IP-IAM-AUTHENTIC-CONNECTION-PROPS
    /* 2674 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (919, 925), attributes_ver: 500, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // LOCAL-NETWORK-ENDPOINT-REF, REMOTE-NETWORK-ENDPOINT-REF
    /* 2675 */ ElementSpec {sub_elements: (15784, 15794), sub_element_ver: 1927, attributes: (115, 118), attributes_ver: 77, character_data: None, mode: ContentMode::Sequence, ref_info: (3867, 3874)}, // IP-IAM-REMOTE-SUBJECT
    /* 2676 */ ElementSpec {sub_elements: (20728, 20729), sub_element_ver: 19, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // AUTHENTIC-CONNECTION-PROPSS
    /* 2677 */ ElementSpec {sub_elements: (19826, 19828), sub_element_ver: 1199, attributes: (0, 2), attributes_ver: 9, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // IP-SEC-CONFIG
    /* 2678 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2467, 2473), attributes_ver: 1642, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // IP-SEC-CONFIG-PROPS-REF
    /* 2679 */ ElementSpec {sub_elements: (20729, 20730), sub_element_ver: 9, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // IP-SEC-RULES
    /* 2680 */ ElementSpec {sub_elements: (3490, 3511), sub_element_ver: 3090, attributes: (115, 118), attributes_ver: 909, character_data: None, mode: ContentMode::Sequence, ref_info: (3874, 3880)}, // IP-SEC-CONFIG-PROPS
    /* 2681 */ ElementSpec {sub_elements: (20730, 20731), sub_element_ver: 64, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // AH-CIPHER-SUITE-NAMES
    /* 2682 */ ElementSpec {sub_elements: (20731, 20732), sub_element_ver: 64, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // ESP-CIPHER-SUITE-NAMES
    /* 2683 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 1195, character_data: Some(558), mode: ContentMode::Characters, ref_info: (0, 0)}, // CONNECTION-TYPE
    /* 2684 */ ElementSpec {sub_elements: (15794, 15804), sub_element_ver: 1927, attributes: (115, 118), attributes_ver: 77, character_data: None, mode: ContentMode::Sequence, ref_info: (3880, 3887)}, // IP-SEC-IAM-REMOTE-SUBJECT
    /* 2685 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2473, 2479), attributes_ver: 500, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // LOCAL-IP-SEC-RULE-REF
    /* 2686 */ ElementSpec {sub_elements: (20732, 20733), sub_element_ver: 19, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // LOCAL-IP-SEC-RULE-REFS
    /* 2687 */ ElementSpec {sub_elements: (1123, 1156), sub_element_ver: 1187, attributes: (115, 118), attributes_ver: 9, character_data: None, mode: ContentMode::Sequence, ref_info: (3887, 3888)}, // IP-SEC-RULE
    /* 2688 */ ElementSpec {sub_elements: (20733, 20734), sub_element_ver: 1195, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // AH-CIPHER-SUITE-NAMES
    /* 2689 */ ElementSpec {sub_elements: (20734, 20735), sub_element_ver: 1195, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // ESP-CIPHER-SUITE-NAMES
    /* 2690 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (1147, 1153), attributes_ver: 500, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // ACCEPTED-REMOTE-CERTIFICATE-REF, CRYPTO-SERVICE-CERTIFICATE-REF, LOCAL-CERTIFICATE-REF, REMOTE-CERTIFICATE-REF
    /* 2691 */ ElementSpec {sub_elements: (20735, 20736), sub_element_ver: 19, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // LOCAL-CERTIFICATE-REFS
    /* 2692 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2479, 2485), attributes_ver: 500, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // CRYPTO-SERVICE-KEY-REF, PRE-SHARED-KEY-REF
    /* 2693 */ ElementSpec {sub_elements: (20736, 20737), sub_element_ver: 19, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // REMOTE-CERTIFICATE-REFS
    /* 2694 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (373, 379), attributes_ver: 1187, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // REMOTE-IP-ADDRESS-REF
    /* 2695 */ ElementSpec {sub_elements: (20737, 20738), sub_element_ver: 9, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // REMOTE-IP-ADDRESS-REFS
    /* 2696 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 77, character_data: Some(560), mode: ContentMode::Characters, ref_info: (0, 0)}, // IP-PROTOCOL
    /* 2697 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 0, character_data: Some(561), mode: ContentMode::Characters, ref_info: (0, 0)}, // ADDRESS-RANGE-LOWER-BOUND, ADDRESS-RANGE-UPPER-BOUND, DEFAULT-GATEWAY, DESTINATION-IP-ADDRESS, DESTINATION-NETWORK-MASK, DNS-SERVER-ADDRESS, IP-V-4-ADDRESS, IPV-4-ADDRESS, IPV-4-ADDRESS-MASK, IPV-4-MULTICAST-IP-ADDRESS, NETWORK-MASK, SOURCE-IP-ADDRESS, SOURCE-NETWORK-MASK
    /* 2698 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 0, character_data: Some(562), mode: ContentMode::Characters, ref_info: (0, 0)}, // ADDRESS-RANGE-LOWER-BOUND, ADDRESS-RANGE-UPPER-BOUND, DEFAULT-GATEWAY, DEFAULT-ROUTER, DESTINATION-IP-ADDRESS, DESTINATION-NETWORK-MASK, DNS-SERVER-ADDRESS, IP-V-6-ADDRESS, IPV-6-ADDRESS, IPV-6-ADDRESS-MASK, IPV-6-MULTICAST-IP-ADDRESS, NETWORK-MASK, SOURCE-IP-ADDRESS, SOURCE-NETWORK-MASK
    /* 2699 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 0, character_data: Some(563), mode: ContentMode::Characters, ref_info: (0, 0)}, // IPV-4-ADDRESS-SOURCE
    /* 2700 */ ElementSpec {sub_elements: (18747, 18751), sub_element_ver: 77, attributes: (0, 2), attributes_ver: 77, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // ARP-PROPS
    /* 2701 */ ElementSpec {sub_elements: (20738, 20739), sub_element_ver: 19, attributes: (0, 2), attributes_ver: 77, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // AUTO-IP-PROPS
    /* 2702 */ ElementSpec {sub_elements: (17552, 17560), sub_element_ver: 8778, attributes: (0, 2), attributes_ver: 0, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // IPV-4-CONFIGURATION
    /* 2703 */ ElementSpec {sub_elements: (20739, 20740), sub_element_ver: 0, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // DNS-SERVER-ADDRESSES
    /* 2704 */ ElementSpec {sub_elements: (15804, 15814), sub_element_ver: 3502, attributes: (0, 2), attributes_ver: 0, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // IPV-4-DHCP-SERVER-CONFIGURATION
    /* 2705 */ ElementSpec {sub_elements: (18751, 18755), sub_element_ver: 77, attributes: (0, 2), attributes_ver: 77, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // FRAGMENTATION-PROPS
    /* 2706 */ ElementSpec {sub_elements: (19235, 19238), sub_element_ver: 77, attributes: (0, 2), attributes_ver: 77, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // IPV-4-PROPS
    /* 2707 */ ElementSpec {sub_elements: (8716, 8730), sub_element_ver: 3664, attributes: (0, 2), attributes_ver: 301, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // IPV-4-RULE
    /* 2708 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 0, character_data: Some(564), mode: ContentMode::Characters, ref_info: (0, 0)}, // IPV-6-ADDRESS-SOURCE
    /* 2709 */ ElementSpec {sub_elements: (17076, 17085), sub_element_ver: 8666, attributes: (0, 2), attributes_ver: 0, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // IPV-6-CONFIGURATION
    /* 2710 */ ElementSpec {sub_elements: (20740, 20741), sub_element_ver: 0, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // DNS-SERVER-ADDRESSES
    /* 2711 */ ElementSpec {sub_elements: (15814, 15824), sub_element_ver: 3502, attributes: (0, 2), attributes_ver: 0, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // IPV-6-DHCP-SERVER-CONFIGURATION
    /* 2712 */ ElementSpec {sub_elements: (18099, 18105), sub_element_ver: 500, attributes: (0, 2), attributes_ver: 77, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // FRAGMENTATION-PROPS
    /* 2713 */ ElementSpec {sub_elements: (2164, 2191), sub_element_ver: 1921, attributes: (0, 2), attributes_ver: 77, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // NDP-PROPS
    /* 2714 */ ElementSpec {sub_elements: (19238, 19241), sub_element_ver: 77, attributes: (0, 2), attributes_ver: 77, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // IPV-6-PROPS
    /* 2715 */ ElementSpec {sub_elements: (17085, 17094), sub_element_ver: 3664, attributes: (0, 2), attributes_ver: 301, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // IPV-6-RULE
    /* 2716 */ ElementSpec {sub_elements: (19828, 19830), sub_element_ver: 7254, attributes: (57, 63), attributes_ver: 621, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // ITEM
    /* 2717 */ ElementSpec {sub_elements: (15824, 15834), sub_element_ver: 2765, attributes: (115, 118), attributes_ver: 0, character_data: None, mode: ContentMode::Sequence, ref_info: (3888, 3897)}, // J-1939-CLUSTER
    /* 2718 */ ElementSpec {sub_elements: (12186, 12198), sub_element_ver: 7622, attributes: (0, 2), attributes_ver: 0, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // J-1939-CLUSTER-CONDITIONAL
    /* 2719 */ ElementSpec {sub_elements: (20741, 20742), sub_element_ver: 0, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // J-1939-CLUSTER-VARIANTS
    /* 2720 */ ElementSpec {sub_elements: (14102, 14113), sub_element_ver: 3276, attributes: (115, 118), attributes_ver: 192, character_data: None, mode: ContentMode::Sequence, ref_info: (3897, 3901)}, // J-1939-CONTROLLER-APPLICATION
    /* 2721 */ ElementSpec {sub_elements: (19830, 19832), sub_element_ver: 134, attributes: (0, 2), attributes_ver: 134, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // J-1939-CONTROLLER-APPLICATION-TO-J-1939-NM-NODE-MAPPING
    /* 2722 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2485, 2491), attributes_ver: 9325, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // J-1939-CONTROLLER-APPLICATION-REF
    /* 2723 */ ElementSpec {sub_elements: (777, 785), sub_element_ver: 1927, attributes: (115, 118), attributes_ver: 77, character_data: None, mode: ContentMode::Sequence, ref_info: (3901, 3903)}, // J-1939-DCM-DM-19-SUPPORT
    /* 2724 */ ElementSpec {sub_elements: (8730, 8744), sub_element_ver: 6517, attributes: (115, 118), attributes_ver: 0, character_data: None, mode: ContentMode::Sequence, ref_info: (3903, 3912)}, // J-1939-DCM-I-PDU
    /* 2725 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 123, character_data: Some(568), mode: ContentMode::Characters, ref_info: (0, 0)}, // ADDRESS-CONFIGURATION-CAPABILITY
    /* 2726 */ ElementSpec {sub_elements: (3102, 3124), sub_element_ver: 2765, attributes: (115, 118), attributes_ver: 0, character_data: None, mode: ContentMode::Sequence, ref_info: (3912, 3914)}, // J-1939-NM-CLUSTER
    /* 2727 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 0, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // J-1939-NM-ECU
    /* 2728 */ ElementSpec {sub_elements: (3511, 3532), sub_element_ver: 3111, attributes: (115, 118), attributes_ver: 0, character_data: None, mode: ContentMode::Sequence, ref_info: (3914, 3916)}, // J-1939-NM-NODE
    /* 2729 */ ElementSpec {sub_elements: (17094, 17103), sub_element_ver: 1684, attributes: (0, 2), attributes_ver: 120, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // NODE-NAME
    /* 2730 */ ElementSpec {sub_elements: (7288, 7303), sub_element_ver: 3027, attributes: (115, 118), attributes_ver: 12, character_data: None, mode: ContentMode::Sequence, ref_info: (3916, 3925)}, // J-1939-PROTECTED-I-PDU
    /* 2731 */ ElementSpec {sub_elements: (19909, 19910), sub_element_ver: 12, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // PAYLOADS
    /* 2732 */ ElementSpec {sub_elements: (777, 785), sub_element_ver: 3276, attributes: (115, 118), attributes_ver: 192, character_data: None, mode: ContentMode::Sequence, ref_info: (3925, 3927)}, // J-1939-RM-INCOMING-REQUEST-SERVICE-NEEDS
    /* 2733 */ ElementSpec {sub_elements: (777, 785), sub_element_ver: 3276, attributes: (115, 118), attributes_ver: 192, character_data: None, mode: ContentMode::Sequence, ref_info: (3927, 3929)}, // J-1939-RM-OUTGOING-REQUEST-SERVICE-NEEDS
    /* 2734 */ ElementSpec {sub_elements: (15834, 15844), sub_element_ver: 3276, attributes: (115, 118), attributes_ver: 192, character_data: None, mode: ContentMode::Sequence, ref_info: (3929, 3930)}, // J-1939-SHARED-ADDRESS-CLUSTER
    /* 2735 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2491, 2497), attributes_ver: 9325, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // PARTICIPATING-J-1939-CLUSTER-REF
    /* 2736 */ ElementSpec {sub_elements: (20742, 20743), sub_element_ver: 21, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // PARTICIPATING-J-1939-CLUSTER-REFS
    /* 2737 */ ElementSpec {sub_elements: (10215, 10228), sub_element_ver: 5080, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (3930, 3935)}, // J-1939-TP-CONFIG
    /* 2738 */ ElementSpec {sub_elements: (20743, 20744), sub_element_ver: 7, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // TP-CONNECTIONS
    /* 2739 */ ElementSpec {sub_elements: (20744, 20745), sub_element_ver: 7, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // TP-NODES
    /* 2740 */ ElementSpec {sub_elements: (3532, 3553), sub_element_ver: 3132, attributes: (0, 2), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // J-1939-TP-CONNECTION
    /* 2741 */ ElementSpec {sub_elements: (20745, 20746), sub_element_ver: 7, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // FLOW-CONTROL-PDU-REFS
    /* 2742 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2497, 2503), attributes_ver: 9361, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // RECEIVER-REF, TRANSMITTER-REF
    /* 2743 */ ElementSpec {sub_elements: (20746, 20747), sub_element_ver: 7, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // RECEIVER-REFS
    /* 2744 */ ElementSpec {sub_elements: (20747, 20748), sub_element_ver: 0, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // TP-PGS
    /* 2745 */ ElementSpec {sub_elements: (20748, 20749), sub_element_ver: 7, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // TP-SDU-REFS
    /* 2746 */ ElementSpec {sub_elements: (14113, 14124), sub_element_ver: 841, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (3935, 3936)}, // J-1939-TP-NODE
    /* 2747 */ ElementSpec {sub_elements: (18359, 18364), sub_element_ver: 9069, attributes: (0, 2), attributes_ver: 0, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // J-1939-TP-PG
    /* 2748 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2107, 2113), attributes_ver: 9319, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // DIRECT-PDU-REF, N-PDU-REF
    /* 2749 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2095, 2101), attributes_ver: 9439, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // SDU-REF
    /* 2750 */ ElementSpec {sub_elements: (20749, 20750), sub_element_ver: 1730, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // SDU-REFS
    /* 2751 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2095, 2101), attributes_ver: 9319, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // TP-SDU-REF
    /* 2752 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 12, character_data: Some(571), mode: ContentMode::Characters, ref_info: (0, 0)}, // TP-PROTOCOL-TYPE
    /* 2753 */ ElementSpec {sub_elements: (15844, 15854), sub_element_ver: 7255, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (3936, 3937)}, // KEYWORD
    /* 2754 */ ElementSpec {sub_elements: (19832, 19834), sub_element_ver: 795, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // CLASSIFICATIONS
    /* 2755 */ ElementSpec {sub_elements: (12198, 12210), sub_element_ver: 7634, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (3937, 3943)}, // KEYWORD-SET
    /* 2756 */ ElementSpec {sub_elements: (20750, 20751), sub_element_ver: 7, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // KEYWORDS
    /* 2757 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 22, character_data: Some(573), mode: ContentMode::Characters, ref_info: (0, 0)}, // LANGUAGE
    /* 2758 */ ElementSpec {sub_elements: (19834, 19836), sub_element_ver: 796, attributes: (3763, 3766), attributes_ver: 871, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // L-GRAPHIC
    /* 2759 */ ElementSpec {sub_elements: (18364, 18369), sub_element_ver: 456, attributes: (3763, 3767), attributes_ver: 8597, character_data: Some(982), mode: ContentMode::Mixed, ref_info: (0, 0)}, // L-4
    /* 2760 */ ElementSpec {sub_elements: (15854, 15864), sub_element_ver: 8405, attributes: (3763, 3767), attributes_ver: 8597, character_data: Some(982), mode: ContentMode::Mixed, ref_info: (0, 0)}, // L-2
    /* 2761 */ ElementSpec {sub_elements: (10228, 10241), sub_element_ver: 6969, attributes: (3763, 3766), attributes_ver: 22, character_data: Some(982), mode: ContentMode::Mixed, ref_info: (0, 0)}, // L-1
    /* 2762 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (3767, 3771), attributes_ver: 29, character_data: Some(982), mode: ContentMode::Mixed, ref_info: (0, 0)}, // L-10
    /* 2763 */ ElementSpec {sub_elements: (18755, 18759), sub_element_ver: 519, attributes: (3767, 3771), attributes_ver: 29, character_data: Some(982), mode: ContentMode::Mixed, ref_info: (0, 0)}, // L-5
    /* 2764 */ ElementSpec {sub_elements: (19241, 19244), sub_element_ver: 7253, attributes: (147, 154), attributes_ver: 814, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // LABELED-ITEM
    /* 2765 */ ElementSpec {sub_elements: (19244, 19247), sub_element_ver: 22, attributes: (57, 63), attributes_ver: 621, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // LABELED-LIST
    /* 2766 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 22, character_data: Some(574), mode: ContentMode::Characters, ref_info: (0, 0)}, // LATENCY-CONSTRAINT-TYPE
    /* 2767 */ ElementSpec {sub_elements: (6076, 6092), sub_element_ver: 5128, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (3943, 3946)}, // LATENCY-TIMING-CONSTRAINT
    /* 2768 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (1987, 1993), attributes_ver: 9361, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // SCOPE-REF, SEGMENT-REF
    /* 2769 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 123, character_data: Some(575), mode: ContentMode::Characters, ref_info: (0, 0)}, // LET-DATA-EXCHANGE-PARADIGM
    /* 2770 */ ElementSpec {sub_elements: (18105, 18111), sub_element_ver: 691, attributes: (0, 2), attributes_ver: 0, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // LIFE-CYCLE-INFO
    /* 2771 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2503, 2509), attributes_ver: 9319, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // DEFAULT-LC-STATE-REF, LC-STATE-REF
    /* 2772 */ ElementSpec {sub_elements: (8744, 8758), sub_element_ver: 5144, attributes: (115, 118), attributes_ver: 0, character_data: None, mode: ContentMode::Sequence, ref_info: (3946, 3950)}, // LIFE-CYCLE-INFO-SET
    /* 2773 */ ElementSpec {sub_elements: (20751, 20752), sub_element_ver: 0, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // LIFE-CYCLE-INFOS
    /* 2774 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2509, 2515), attributes_ver: 9319, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // USED-LIFE-CYCLE-STATE-DEFINITION-GROUP-REF
    /* 2775 */ ElementSpec {sub_elements: (20752, 20753), sub_element_ver: 0, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // USE-INSTEAD-REFS
    /* 2776 */ ElementSpec {sub_elements: (19247, 19250), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 0, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // DEFAULT-PERIOD-BEGIN, DEFAULT-PERIOD-END, PERIOD-BEGIN, PERIOD-END
    /* 2777 */ ElementSpec {sub_elements: (3936, 3946), sub_element_ver: 3493, attributes: (115, 118), attributes_ver: 0, character_data: None, mode: ContentMode::Sequence, ref_info: (3950, 3953)}, // LIFE-CYCLE-STATE
    /* 2778 */ ElementSpec {sub_elements: (12210, 12222), sub_element_ver: 3436, attributes: (115, 118), attributes_ver: 0, character_data: None, mode: ContentMode::Sequence, ref_info: (3953, 3959)}, // LIFE-CYCLE-STATE-DEFINITION-GROUP
    /* 2779 */ ElementSpec {sub_elements: (20753, 20754), sub_element_ver: 0, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // LC-STATES
    /* 2780 */ ElementSpec {sub_elements: (18229, 18231), sub_element_ver: 386, attributes: (154, 161), attributes_ver: 1399, character_data: Some(982), mode: ContentMode::Mixed, ref_info: (0, 0)}, // LIMIT, LOWER-LIMIT, MAX, MIN, UPPER-LIMIT
    /* 2781 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (3837, 3840), attributes_ver: 0, character_data: Some(578), mode: ContentMode::Characters, ref_info: (0, 0)}, // LOWER-LIMIT, MAX, MIN, UPPER-LIMIT
    /* 2782 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 22, character_data: Some(579), mode: ContentMode::Characters, ref_info: (0, 0)}, // LIN-CHECKSUM
    /* 2783 */ ElementSpec {sub_elements: (15864, 15874), sub_element_ver: 884, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (3959, 3967)}, // LIN-CLUSTER
    /* 2784 */ ElementSpec {sub_elements: (17560, 17568), sub_element_ver: 792, attributes: (0, 2), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // LIN-CLUSTER-CONDITIONAL
    /* 2785 */ ElementSpec {sub_elements: (20754, 20755), sub_element_ver: 7, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // LIN-CLUSTER-VARIANTS
    /* 2786 */ ElementSpec {sub_elements: (4164, 4183), sub_element_ver: 3702, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (3967, 3969)}, // LIN-COMMUNICATION-CONNECTOR
    /* 2787 */ ElementSpec {sub_elements: (20755, 20756), sub_element_ver: 7, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // LIN-CONFIGURABLE-FRAMES
    /* 2788 */ ElementSpec {sub_elements: (20756, 20757), sub_element_ver: 519, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // LIN-ORDERED-CONFIGURABLE-FRAMES
    /* 2789 */ ElementSpec {sub_elements: (19836, 19838), sub_element_ver: 22, attributes: (0, 2), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // LIN-CONFIGURABLE-FRAME
    /* 2790 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2515, 2521), attributes_ver: 9361, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // FRAME-REF
    /* 2791 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2521, 2527), attributes_ver: 9361, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // ASSIGNED-CONTROLLER-REF
    /* 2792 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2527, 2533), attributes_ver: 9385, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // ASSIGNED-LIN-SLAVE-CONFIG-REF
    /* 2793 */ ElementSpec {sub_elements: (19250, 19253), sub_element_ver: 715, attributes: (0, 2), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // LIN-ERROR-RESPONSE
    /* 2794 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2317, 2323), attributes_ver: 1187, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // RESPONSE-ERROR-REF
    /* 2795 */ ElementSpec {sub_elements: (10241, 10254), sub_element_ver: 5080, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (3969, 3975)}, // LIN-EVENT-TRIGGERED-FRAME
    /* 2796 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2533, 2539), attributes_ver: 9361, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // COLLISION-RESOLVING-SCHEDULE-REF
    /* 2797 */ ElementSpec {sub_elements: (20757, 20758), sub_element_ver: 7, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // LIN-UNCONDITIONAL-FRAME-REFS
    /* 2798 */ ElementSpec {sub_elements: (7303, 7318), sub_element_ver: 2254, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (3975, 3977)}, // LIN-FRAME-TRIGGERING
    /* 2799 */ ElementSpec {sub_elements: (15874, 15884), sub_element_ver: 8335, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (3977, 3980)}, // LIN-MASTER
    /* 2800 */ ElementSpec {sub_elements: (17103, 17112), sub_element_ver: 8675, attributes: (0, 2), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // LIN-MASTER-CONDITIONAL
    /* 2801 */ ElementSpec {sub_elements: (20758, 20759), sub_element_ver: 0, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // LIN-SLAVES
    /* 2802 */ ElementSpec {sub_elements: (20759, 20760), sub_element_ver: 7, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // LIN-MASTER-VARIANTS
    /* 2803 */ ElementSpec {sub_elements: (777, 797), sub_element_ver: 3276, attributes: (115, 118), attributes_ver: 192, character_data: None, mode: ContentMode::Sequence, ref_info: (3980, 3982)}, // LIN-NM-CLUSTER
    /* 2804 */ ElementSpec {sub_elements: (19838, 19840), sub_element_ver: 796, attributes: (0, 2), attributes_ver: 796, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // LIN-ORDERED-CONFIGURABLE-FRAME
    /* 2805 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2515, 2521), attributes_ver: 9391, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // FRAME-REF
    /* 2806 */ ElementSpec {sub_elements: (5307, 5324), sub_element_ver: 4635, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (3982, 3984)}, // LIN-PHYSICAL-CHANNEL
    /* 2807 */ ElementSpec {sub_elements: (20760, 20761), sub_element_ver: 7, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // SCHEDULE-TABLES
    /* 2808 */ ElementSpec {sub_elements: (12222, 12234), sub_element_ver: 1082, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (3984, 3985)}, // LIN-SCHEDULE-TABLE
    /* 2809 */ ElementSpec {sub_elements: (17112, 17121), sub_element_ver: 814, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // TABLE-ENTRYS
    /* 2810 */ ElementSpec {sub_elements: (15884, 15894), sub_element_ver: 8335, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (3985, 3988)}, // LIN-SLAVE
    /* 2811 */ ElementSpec {sub_elements: (10254, 10267), sub_element_ver: 6982, attributes: (0, 2), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // LIN-SLAVE-CONDITIONAL
    /* 2812 */ ElementSpec {sub_elements: (14124, 14135), sub_element_ver: 8106, attributes: (0, 2), attributes_ver: 0, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // LIN-SLAVE-CONFIG
    /* 2813 */ ElementSpec {sub_elements: (777, 779), sub_element_ver: 1612, attributes: (0, 2), attributes_ver: 1612, character_data: None, mode: ContentMode::Sequence, ref_info: (3988, 3989)}, // IDENT
    /* 2814 */ ElementSpec {sub_elements: (20755, 20756), sub_element_ver: 20, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // LIN-CONFIGURABLE-FRAMES
    /* 2815 */ ElementSpec {sub_elements: (20756, 20757), sub_element_ver: 20, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // LIN-ORDERED-CONFIGURABLE-FRAMES
    /* 2816 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2521, 2527), attributes_ver: 9319, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // LIN-SLAVE-ECU-REF
    /* 2817 */ ElementSpec {sub_elements: (20761, 20762), sub_element_ver: 7, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // LIN-SLAVE-VARIANTS
    /* 2818 */ ElementSpec {sub_elements: (12234, 12246), sub_element_ver: 5080, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (3989, 3995)}, // LIN-SPORADIC-FRAME
    /* 2819 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2539, 2545), attributes_ver: 9361, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // LIN-UNCONDITIONAL-FRAME-REF, SUBSTITUTED-FRAME-REF
    /* 2820 */ ElementSpec {sub_elements: (20762, 20763), sub_element_ver: 7, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // SUBSTITUTED-FRAME-REFS
    /* 2821 */ ElementSpec {sub_elements: (10267, 10280), sub_element_ver: 5080, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (3995, 4000)}, // LIN-TP-CONFIG
    /* 2822 */ ElementSpec {sub_elements: (20598, 20599), sub_element_ver: 7, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // TP-ADDRESSS
    /* 2823 */ ElementSpec {sub_elements: (20763, 20764), sub_element_ver: 7, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // TP-CONNECTIONS
    /* 2824 */ ElementSpec {sub_elements: (20764, 20765), sub_element_ver: 7, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // TP-NODES
    /* 2825 */ ElementSpec {sub_elements: (7318, 7333), sub_element_ver: 5823, attributes: (0, 2), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // LIN-TP-CONNECTION
    /* 2826 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2545, 2551), attributes_ver: 9361, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // RECEIVER-REF, TRANSMITTER-REF
    /* 2827 */ ElementSpec {sub_elements: (20765, 20766), sub_element_ver: 7, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // RECEIVER-REFS
    /* 2828 */ ElementSpec {sub_elements: (5324, 5341), sub_element_ver: 4652, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (4000, 4001)}, // LIN-TP-NODE
    /* 2829 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2119, 2125), attributes_ver: 9361, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // MULTICAST-REF, TP-ADDRESS-REF
    /* 2830 */ ElementSpec {sub_elements: (7273, 7284), sub_element_ver: 5080, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (4001, 4007)}, // LIN-UNCONDITIONAL-FRAME
    /* 2831 */ ElementSpec {sub_elements: (6092, 6108), sub_element_ver: 4904, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (4007, 4008)}, // LINKER
    /* 2832 */ ElementSpec {sub_elements: (19840, 19842), sub_element_ver: 22, attributes: (161, 168), attributes_ver: 814, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // LIST
    /* 2833 */ ElementSpec {sub_elements: (10280, 10293), sub_element_ver: 6995, attributes: (115, 118), attributes_ver: 6995, character_data: None, mode: ContentMode::Sequence, ref_info: (4008, 4010)}, // LOCAL-SUPERVISION
    /* 2834 */ ElementSpec {sub_elements: (20643, 20644), sub_element_ver: 2392, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // ALIVE-SUPERVISIONS
    /* 2835 */ ElementSpec {sub_elements: (20644, 20645), sub_element_ver: 2392, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // DEADLINE-SUPERVISIONS
    /* 2836 */ ElementSpec {sub_elements: (20648, 20649), sub_element_ver: 2392, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // LOGICAL-SUPERVISIONS
    /* 2837 */ ElementSpec {sub_elements: (20652, 20653), sub_element_ver: 2392, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // TRANSITIONS
    /* 2838 */ ElementSpec {sub_elements: (5341, 5358), sub_element_ver: 4669, attributes: (115, 118), attributes_ver: 2229, character_data: None, mode: ContentMode::Sequence, ref_info: (4010, 4016)}, // LOG-AND-TRACE-INSTANTIATION
    /* 2839 */ ElementSpec {sub_elements: (20482, 20483), sub_element_ver: 345, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // DLT-LOG-CHANNELS
    /* 2840 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2551, 2557), attributes_ver: 4093, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // DLT-LOG-SINK-REF, LOG-SINK-REF
    /* 2841 */ ElementSpec {sub_elements: (20766, 20767), sub_element_ver: 20, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // LOG-SINK-REFS
    /* 2842 */ ElementSpec {sub_elements: (20496, 20497), sub_element_ver: 494, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // NETWORK-CONFIGURATIONS
    /* 2843 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2347, 2353), attributes_ver: 2229, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // TIME-BASE-RESOURCE-REF
    /* 2844 */ ElementSpec {sub_elements: (20767, 20768), sub_element_ver: 6, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // TIME-BASE-RESOURCE-REFS
    /* 2845 */ ElementSpec {sub_elements: (4967, 4981), sub_element_ver: 4093, attributes: (115, 118), attributes_ver: 81, character_data: None, mode: ContentMode::Sequence, ref_info: (4016, 4025)}, // LOG-AND-TRACE-INTERFACE
    /* 2846 */ ElementSpec {sub_elements: (15894, 15904), sub_element_ver: 4093, attributes: (115, 118), attributes_ver: 81, character_data: None, mode: ContentMode::Sequence, ref_info: (4025, 4031)}, // LOG-AND-TRACE-MESSAGE-COLLECTION-SET
    /* 2847 */ ElementSpec {sub_elements: (20491, 20492), sub_element_ver: 20, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // DLT-MESSAGES
    /* 2848 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 115, character_data: Some(590), mode: ContentMode::Characters, ref_info: (0, 0)}, // DEFAULT-LOG-THRESHOLD, LOG-TRACE-DEFAULT-LOG-LEVEL, LOG-TRACE-DEFAULT-LOG-THRESHOLD
    /* 2849 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 6995, character_data: Some(591), mode: ContentMode::Characters, ref_info: (0, 0)}, // LOG-TRACE-LOG-MODE
    /* 2850 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 8720, character_data: Some(592), mode: ContentMode::Characters, ref_info: (0, 0)}, // LOGGING-BEHAVIOR
    /* 2851 */ ElementSpec {sub_elements: (14135, 14146), sub_element_ver: 8117, attributes: (115, 118), attributes_ver: 846, character_data: None, mode: ContentMode::Sequence, ref_info: (4031, 4032)}, // LOGIC-ADDRESS
    /* 2852 */ ElementSpec {sub_elements: (14146, 14157), sub_element_ver: 7430, attributes: (115, 118), attributes_ver: 4960, character_data: None, mode: ContentMode::Sequence, ref_info: (4032, 4033)}, // LOGICAL-EXPRESSION
    /* 2853 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2557, 2563), attributes_ver: 9337, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // HEALTH-CHANNEL-ARGUMENT-REF
    /* 2854 */ ElementSpec {sub_elements: (20768, 20769), sub_element_ver: 75, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // HEALTH-CHANNEL-ARGUMENT-REFS
    /* 2855 */ ElementSpec {sub_elements: (20769, 20770), sub_element_ver: 75, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // LOGICAL-EXPRESSION-ARGUMENT-REFS
    /* 2856 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 75, character_data: Some(595), mode: ContentMode::Characters, ref_info: (0, 0)}, // LOGICAL-OPERATOR
    /* 2857 */ ElementSpec {sub_elements: (10293, 10306), sub_element_ver: 7008, attributes: (115, 118), attributes_ver: 1153, character_data: None, mode: ContentMode::Sequence, ref_info: (4033, 4035)}, // LOGICAL-SUPERVISION
    /* 2858 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (3661, 3666), attributes_ver: 4822, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // CHECKPOINT-FINAL-REF, CHECKPOINT-INITIAL-REF
    /* 2859 */ ElementSpec {sub_elements: (20770, 20771), sub_element_ver: 491, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // CHECKPOINT-FINAL-REFS
    /* 2860 */ ElementSpec {sub_elements: (20771, 20772), sub_element_ver: 491, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // CHECKPOINT-INITIAL-REFS
    /* 2861 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (271, 277), attributes_ver: 2229, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // FINAL-CHECKPOINT-REF, INITIAL-CHECKPOINT-REF
    /* 2862 */ ElementSpec {sub_elements: (20772, 20773), sub_element_ver: 115, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // FINAL-CHECKPOINT-REFS
    /* 2863 */ ElementSpec {sub_elements: (20773, 20774), sub_element_ver: 115, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // INITIAL-CHECKPOINT-REFS
    /* 2864 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (1111, 1117), attributes_ver: 9355, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // TRANSITION-REF
    /* 2865 */ ElementSpec {sub_elements: (20774, 20775), sub_element_ver: 8, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // TRANSITION-REFS
    /* 2866 */ ElementSpec {sub_elements: (14157, 14168), sub_element_ver: 3664, attributes: (115, 118), attributes_ver: 463, character_data: None, mode: ContentMode::Sequence, ref_info: (4035, 4039)}, // LT-MESSAGE-COLLECTION-TO-PORT-PROTOTYPE-MAPPING
    /* 2867 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2563, 2569), attributes_ver: 3664, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // LOG-AND-TRACE-MESSAGE-COLLECTION-SET-REF
    /* 2868 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 0, character_data: Some(596), mode: ContentMode::Characters, ref_info: (0, 0)}, // DESTINATION-MAC-ADDRESS, DESTINATION-MAC-ADDRESS-MASK, DESTINATION-PHYSICAL-ADDRESS, MAC-ADDRESS, MAC-ADDRESS-MASK, MAC-ADDRESS-STREAM-ID, MAC-MULTICAST-ADDRESS, MAC-UNICAST-ADDRESS, SOURCE-MAC-ADDRESS, SOURCE-MAC-ADDRESS-MASK
    /* 2869 */ ElementSpec {sub_elements: (14168, 14179), sub_element_ver: 3027, attributes: (115, 118), attributes_ver: 12, character_data: None, mode: ContentMode::Sequence, ref_info: (4039, 4040)}, // MAC-ADDRESS-VLAN-MEMBERSHIP
    /* 2870 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (895, 901), attributes_ver: 425, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // MAC-MULTICAST-ADDRESS-REF
    /* 2871 */ ElementSpec {sub_elements: (20775, 20776), sub_element_ver: 12, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // MAC-MULTICAST-ADDRESS-REFS
    /* 2872 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (919, 925), attributes_ver: 425, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // VLAN-REF
    /* 2873 */ ElementSpec {sub_elements: (20776, 20777), sub_element_ver: 12, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // VLAN-REFS
    /* 2874 */ ElementSpec {sub_elements: (20777, 20778), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 0, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // MAC-MULTICAST-CONFIGURATION
    /* 2875 */ ElementSpec {sub_elements: (17121, 17130), sub_element_ver: 2765, attributes: (115, 118), attributes_ver: 0, character_data: None, mode: ContentMode::Sequence, ref_info: (4040, 4041)}, // MAC-MULTICAST-GROUP
    /* 2876 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 301, character_data: Some(598), mode: ContentMode::Characters, ref_info: (0, 0)}, // CAPABILITY
    /* 2877 */ ElementSpec {sub_elements: (19842, 19844), sub_element_ver: 301, attributes: (0, 2), attributes_ver: 301, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // MAC-SEC-CIPHER-SUITE-CONFIG
    /* 2878 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 301, character_data: Some(599), mode: ContentMode::Characters, ref_info: (0, 0)}, // CONFIDENTIALITY-OFFSET
    /* 2879 */ ElementSpec {sub_elements: (18369, 18374), sub_element_ver: 3664, attributes: (0, 2), attributes_ver: 301, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // CRYPTO-ALGO-CONFIG
    /* 2880 */ ElementSpec {sub_elements: (20778, 20779), sub_element_ver: 6, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // CIPHER-SUITE-CONFIGS
    /* 2881 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 301, character_data: Some(600), mode: ContentMode::Characters, ref_info: (0, 0)}, // ON-FAIL-PERMISSIVE-MODE
    /* 2882 */ ElementSpec {sub_elements: (14179, 14190), sub_element_ver: 3664, attributes: (115, 118), attributes_ver: 463, character_data: None, mode: ContentMode::Sequence, ref_info: (4041, 4047)}, // MAC-SEC-GLOBAL-KAY-PROPS
    /* 2883 */ ElementSpec {sub_elements: (20779, 20780), sub_element_ver: 6, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // BYPASS-ETHER-TYPES
    /* 2884 */ ElementSpec {sub_elements: (20780, 20781), sub_element_ver: 6, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // BYPASS-VLANS
    /* 2885 */ ElementSpec {sub_elements: (14190, 14201), sub_element_ver: 3664, attributes: (115, 118), attributes_ver: 463, character_data: None, mode: ContentMode::Sequence, ref_info: (4047, 4048)}, // MAC-SEC-KAY-PARTICIPANT
    /* 2886 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2479, 2485), attributes_ver: 3664, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // CKN-REF, SAK-REF
    /* 2887 */ ElementSpec {sub_elements: (18111, 18117), sub_element_ver: 3664, attributes: (0, 2), attributes_ver: 301, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // MAC-SEC-KAY-CONFIG
    /* 2888 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2569, 2575), attributes_ver: 3664, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // GLOBAL-KAY-PROPS-REF
    /* 2889 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2575, 2581), attributes_ver: 3664, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // MKA-PARTICIPANT-REF
    /* 2890 */ ElementSpec {sub_elements: (20781, 20782), sub_element_ver: 6, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // MKA-PARTICIPANT-REFS
    /* 2891 */ ElementSpec {sub_elements: (14201, 14212), sub_element_ver: 3664, attributes: (115, 118), attributes_ver: 463, character_data: None, mode: ContentMode::Sequence, ref_info: (4048, 4054)}, // MAC-SEC-PARTICIPANT-SET
    /* 2892 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (865, 871), attributes_ver: 3664, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // ETHERNET-CLUSTER-REF
    /* 2893 */ ElementSpec {sub_elements: (20782, 20783), sub_element_ver: 6, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // MKA-PARTICIPANTS
    /* 2894 */ ElementSpec {sub_elements: (18374, 18379), sub_element_ver: 3664, attributes: (0, 2), attributes_ver: 301, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // MAC-SEC-PROPS
    /* 2895 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 301, character_data: Some(603), mode: ContentMode::Characters, ref_info: (0, 0)}, // ROLE
    /* 2896 */ ElementSpec {sub_elements: (3124, 3146), sub_element_ver: 2787, attributes: (115, 118), attributes_ver: 1531, character_data: None, mode: ContentMode::Sequence, ref_info: (4054, 4063)}, // MACHINE
    /* 2897 */ ElementSpec {sub_elements: (18003, 18009), sub_element_ver: 7886, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // COMMUNICATION-CONNECTORS
    /* 2898 */ ElementSpec {sub_elements: (2667, 2691), sub_element_ver: 2374, attributes: (115, 118), attributes_ver: 2229, character_data: None, mode: ContentMode::Sequence, ref_info: (4063, 4073)}, // MACHINE-DESIGN
    /* 2899 */ ElementSpec {sub_elements: (18003, 18009), sub_element_ver: 2229, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // COMMUNICATION-CONNECTORS
    /* 2900 */ ElementSpec {sub_elements: (17731, 17738), sub_element_ver: 3664, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // COMMUNICATION-CONTROLLERS
    /* 2901 */ ElementSpec {sub_elements: (20783, 20784), sub_element_ver: 12, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // CRYPTO-KEY-SLOTS
    /* 2902 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2581, 2587), attributes_ver: 500, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // ETH-IP-PROPS-REF
    /* 2903 */ ElementSpec {sub_elements: (20784, 20785), sub_element_ver: 6, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // ETH-IP-PROPS-REFS
    /* 2904 */ ElementSpec {sub_elements: (20785, 20786), sub_element_ver: 12, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // FUNCTIONAL-CLUSTER-DESIGNS
    /* 2905 */ ElementSpec {sub_elements: (20786, 20787), sub_element_ver: 2392, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // SERVICE-DISCOVER-CONFIGS
    /* 2906 */ ElementSpec {sub_elements: (20786, 20787), sub_element_ver: 20, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // SERVICE-DISCOVERY-CONFIGS
    /* 2907 */ ElementSpec {sub_elements: (20787, 20788), sub_element_ver: 6, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // TCP-IP-ICMP-PROPS-REFS
    /* 2908 */ ElementSpec {sub_elements: (20788, 20789), sub_element_ver: 6, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // TCP-IP-PROPS-REFS
    /* 2909 */ ElementSpec {sub_elements: (20130, 20131), sub_element_ver: 9, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // CAPABILITY-RECORDS, ENVIRONMENT-VARIABLES
    /* 2910 */ ElementSpec {sub_elements: (20232, 20233), sub_element_ver: 488, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // FUNCTION-GROUPS
    /* 2911 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (1903, 1909), attributes_ver: 9445, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // HW-ELEMENT-REF
    /* 2912 */ ElementSpec {sub_elements: (20789, 20790), sub_element_ver: 2800, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // HW-ELEMENT-REFS
    /* 2913 */ ElementSpec {sub_elements: (20232, 20233), sub_element_ver: 1776, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // MACHINE-MODE-MACHINES
    /* 2914 */ ElementSpec {sub_elements: (17130, 17139), sub_element_ver: 7514, attributes: (115, 118), attributes_ver: 7514, character_data: None, mode: ContentMode::Sequence, ref_info: (4073, 4075)}, // MACHINE-MODE-REQUEST-PHM-ACTION-ITEM
    /* 2915 */ ElementSpec {sub_elements: (3739, 3759), sub_element_ver: 3296, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // MODULE-INSTANTIATIONS
    /* 2916 */ ElementSpec {sub_elements: (20790, 20791), sub_element_ver: 582, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // PER-STATE-TIMEOUTS
    /* 2917 */ ElementSpec {sub_elements: (20791, 20792), sub_element_ver: 8, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // PROCESSORS
    /* 2918 */ ElementSpec {sub_elements: (19844, 19846), sub_element_ver: 1153, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // SECURE-COMMUNICATION-DEPLOYMENTS
    /* 2919 */ ElementSpec {sub_elements: (20786, 20787), sub_element_ver: 5, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // SERVICE-DISCOVER-CONFIGS
    /* 2920 */ ElementSpec {sub_elements: (5358, 5375), sub_element_ver: 4499, attributes: (115, 118), attributes_ver: 77, character_data: None, mode: ContentMode::Sequence, ref_info: (4075, 4080)}, // MACHINE-TIMING
    /* 2921 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2587, 2593), attributes_ver: 500, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // MACHINE-REF
    /* 2922 */ ElementSpec {sub_elements: (20792, 20793), sub_element_ver: 7, attributes: (41, 57), attributes_ver: 1064, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // MAP
    /* 2923 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 22, character_data: Some(606), mode: ContentMode::Characters, ref_info: (0, 0)}, // MAPPING-DIRECTION
    /* 2924 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 120, character_data: Some(607), mode: ContentMode::Characters, ref_info: (0, 0)}, // MAPPING-SCOPE
    /* 2925 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 22, character_data: Some(608), mode: ContentMode::Characters, ref_info: (0, 0)}, // MAX-COMM-MODE
    /* 2926 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 656, character_data: Some(609), mode: ContentMode::Characters, ref_info: (0, 0)}, // MAXIMUM-MESSAGE-LENGTH
    /* 2927 */ ElementSpec {sub_elements: (19846, 19848), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 0, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // MC-DATA-ACCESS-DETAILS
    /* 2928 */ ElementSpec {sub_elements: (20793, 20794), sub_element_ver: 0, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // RTE-EVENT-IREFS
    /* 2929 */ ElementSpec {sub_elements: (20794, 20795), sub_element_ver: 0, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // VARIABLE-ACCESS-IREFS
    /* 2930 */ ElementSpec {sub_elements: (3553, 3574), sub_element_ver: 3153, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (4080, 4081)}, // MC-DATA-INSTANCE
    /* 2931 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2593, 2599), attributes_ver: 9361, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // FLAT-INSTANCE-REF, FLAT-MAP-ENTRY-REF, INITIALIZED-PARAMETER-REF
    /* 2932 */ ElementSpec {sub_elements: (20795, 20796), sub_element_ver: 0, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // MC-DATA-ASSIGNMENTS
    /* 2933 */ ElementSpec {sub_elements: (20796, 20797), sub_element_ver: 7, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // MC-PARAMETER-INSTANCES, MC-VARIABLE-INSTANCES, SUB-ELEMENTS
    /* 2934 */ ElementSpec {sub_elements: (6108, 6124), sub_element_ver: 5144, attributes: (115, 118), attributes_ver: 0, character_data: None, mode: ContentMode::Sequence, ref_info: (4081, 4085)}, // MC-FUNCTION
    /* 2935 */ ElementSpec {sub_elements: (20797, 20798), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 0, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // DEF-CALPRM-SET, IN-MEASUREMENT-SET, LOC-MEASUREMENT-SET, OUT-MEASUREMENT-SET, OUT-MEASURMENT-SET, REF-CALPRM-SET
    /* 2936 */ ElementSpec {sub_elements: (19253, 19256), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 0, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // MC-FUNCTION-DATA-REF-SET-CONDITIONAL
    /* 2937 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2593, 2599), attributes_ver: 9319, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // FLAT-MAP-ENTRY-REF
    /* 2938 */ ElementSpec {sub_elements: (20798, 20799), sub_element_ver: 0, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // FLAT-MAP-ENTRY-REFS
    /* 2939 */ ElementSpec {sub_elements: (20799, 20800), sub_element_ver: 0, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // MC-FUNCTION-DATA-REF-SET-VARIANTS
    /* 2940 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2599, 2605), attributes_ver: 9319, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // SUB-FUNCTION-REF
    /* 2941 */ ElementSpec {sub_elements: (20800, 20801), sub_element_ver: 0, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // SUB-FUNCTION-REFS
    /* 2942 */ ElementSpec {sub_elements: (10306, 10319), sub_element_ver: 3531, attributes: (115, 118), attributes_ver: 9, character_data: None, mode: ContentMode::Sequence, ref_info: (4085, 4089)}, // MC-GROUP
    /* 2943 */ ElementSpec {sub_elements: (20801, 20802), sub_element_ver: 9, attributes: (0, 2), attributes_ver: 9, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // REF-CALPRM-SET, REF-MEASUREMENT-SET
    /* 2944 */ ElementSpec {sub_elements: (19256, 19259), sub_element_ver: 9, attributes: (0, 2), attributes_ver: 9, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // MC-GROUP-DATA-REF-SET-CONDITIONAL
    /* 2945 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2593, 2599), attributes_ver: 1187, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // FLAT-MAP-ENTRY-REF
    /* 2946 */ ElementSpec {sub_elements: (20802, 20803), sub_element_ver: 9, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // FLAT-MAP-ENTRY-REFS
    /* 2947 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2605, 2611), attributes_ver: 1187, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // MC-DATA-INSTANCE-REF
    /* 2948 */ ElementSpec {sub_elements: (20803, 20804), sub_element_ver: 9, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // MC-DATA-INSTANCE-REFS
    /* 2949 */ ElementSpec {sub_elements: (20804, 20805), sub_element_ver: 9, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // MC-GROUP-DATA-REF-SET-VARIANTS
    /* 2950 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2599, 2605), attributes_ver: 1187, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // MC-FUNCTION-REF
    /* 2951 */ ElementSpec {sub_elements: (20805, 20806), sub_element_ver: 9, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // MC-FUNCTION-REFS
    /* 2952 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2611, 2617), attributes_ver: 1187, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // SUB-GROUP-REF
    /* 2953 */ ElementSpec {sub_elements: (20806, 20807), sub_element_ver: 9, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // SUB-GROUP-REFS
    /* 2954 */ ElementSpec {sub_elements: (19259, 19262), sub_element_ver: 22, attributes: (0, 2), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // MC-PARAMETER-ELEMENT-GROUP
    /* 2955 */ ElementSpec {sub_elements: (18379, 18384), sub_element_ver: 363, attributes: (0, 2), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // MC-SUPPORT
    /* 2956 */ ElementSpec {sub_elements: (20807, 20808), sub_element_ver: 7, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // EMULATION-SUPPORTS
    /* 2957 */ ElementSpec {sub_elements: (20808, 20809), sub_element_ver: 7, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // MEASURABLE-SYSTEM-CONSTANT-VALUES-REFS
    /* 2958 */ ElementSpec {sub_elements: (18117, 18123), sub_element_ver: 621, attributes: (0, 2), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // MC-SW-EMULATION-METHOD-SUPPORT
    /* 2959 */ ElementSpec {sub_elements: (20809, 20810), sub_element_ver: 7, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // ELEMENT-GROUPS
    /* 2960 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 1612, character_data: Some(613), mode: ContentMode::Characters, ref_info: (0, 0)}, // DISPLAY-IDENTIFIER
    /* 2961 */ ElementSpec {sub_elements: (4183, 4202), sub_element_ver: 3721, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (4089, 4091)}, // MEASURED-EXECUTION-TIME
    /* 2962 */ ElementSpec {sub_elements: (5375, 5392), sub_element_ver: 4686, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (4091, 4093)}, // MEASURED-HEAP-USAGE
    /* 2963 */ ElementSpec {sub_elements: (4735, 4753), sub_element_ver: 3797, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (4093, 4095)}, // MEASURED-STACK-USAGE
    /* 2964 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 796, character_data: Some(614), mode: ContentMode::Characters, ref_info: (0, 0)}, // MEMORY-ALLOCATION-KEYWORD-POLICY
    /* 2965 */ ElementSpec {sub_elements: (5392, 5409), sub_element_ver: 4703, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (4095, 4096)}, // MEMORY-SECTION
    /* 2966 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2617, 2623), attributes_ver: 9349, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // EXECUTABLE-ENTITY-REF, EXECUTABLE-REF
    /* 2967 */ ElementSpec {sub_elements: (20810, 20811), sub_element_ver: 386, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // EXECUTABLE-ENTITY-REFS
    /* 2968 */ ElementSpec {sub_elements: (19848, 19850), sub_element_ver: 22, attributes: (0, 2), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // MEMORY-SECTION-LOCATION
    /* 2969 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2623, 2629), attributes_ver: 9361, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // SOFTWARE-MEMORY-SECTION-REF
    /* 2970 */ ElementSpec {sub_elements: (20811, 20812), sub_element_ver: 519, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // OPTIONS
    /* 2971 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2629, 2635), attributes_ver: 9349, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // PREFIX-REF
    /* 2972 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2635, 2641), attributes_ver: 9361, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // SW-ADDR-METHOD-REF, SW-ADDRMETHOD-REF
    /* 2973 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 22, character_data: Some(616), mode: ContentMode::Characters, ref_info: (0, 0)}, // SECTION-TYPE
    /* 2974 */ ElementSpec {sub_elements: (17139, 17148), sub_element_ver: 3664, attributes: (115, 118), attributes_ver: 463, character_data: None, mode: ContentMode::Sequence, ref_info: (4096, 4097)}, // MEMORY-USAGE
    /* 2975 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 134, character_data: Some(617), mode: ContentMode::Characters, ref_info: (0, 0)}, // DEST-META-CLASS, EXTENDS-META-CLASS
    /* 2976 */ ElementSpec {sub_elements: (19850, 19852), sub_element_ver: 64, attributes: (0, 2), attributes_ver: 64, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // META-DATA-ITEM
    /* 2977 */ ElementSpec {sub_elements: (19852, 19854), sub_element_ver: 64, attributes: (0, 2), attributes_ver: 64, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // META-DATA-ITEM-SET
    /* 2978 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (541, 547), attributes_ver: 1642, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // DATA-ELEMENT-REF
    /* 2979 */ ElementSpec {sub_elements: (20812, 20813), sub_element_ver: 64, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // DATA-ELEMENT-REFS
    /* 2980 */ ElementSpec {sub_elements: (20813, 20814), sub_element_ver: 64, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // META-DATA-ITEMS
    /* 2981 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (247, 253), attributes_ver: 9451, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // CONTEXT-PORT-PROTOTYPE-REF
    /* 2982 */ ElementSpec {sub_elements: (15904, 15914), sub_element_ver: 3376, attributes: (115, 118), attributes_ver: 1153, character_data: None, mode: ContentMode::Sequence, ref_info: (4097, 4098)}, // METHOD-MAPPING
    /* 2983 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (673, 679), attributes_ver: 9355, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // CLIENT-SERVER-OPERATION-REF, GETTER-OPERATION-REF, METHOD-REF, SETTER-OPERATION-REF
    /* 2984 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 123, character_data: Some(618), mode: ContentMode::Characters, ref_info: (0, 0)}, // MIRRORING-PROTOCOL
    /* 2985 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (343, 349), attributes_ver: 9319, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // TRACE-REF
    /* 2986 */ ElementSpec {sub_elements: (18384, 18389), sub_element_ver: 799, attributes: (106, 115), attributes_ver: 814, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // FIGURE
    /* 2987 */ ElementSpec {sub_elements: (17568, 17576), sub_element_ver: 8786, attributes: (57, 63), attributes_ver: 621, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // FORMULA, INFORMAL-FORMULA
    /* 2988 */ ElementSpec {sub_elements: (19834, 19836), sub_element_ver: 617, attributes: (3763, 3766), attributes_ver: 617, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // ML-GRAPHIC
    /* 2989 */ ElementSpec {sub_elements: (19262, 19265), sub_element_ver: 9064, attributes: (0, 2), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // MODE-ACCESS-POINT
    /* 2990 */ ElementSpec {sub_elements: (8954, 8963), sub_element_ver: 8639, attributes: (115, 118), attributes_ver: 6379, character_data: None, mode: ContentMode::Sequence, ref_info: (4098, 4104)}, // IDENT
    /* 2991 */ ElementSpec {sub_elements: (19854, 19856), sub_element_ver: 22, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Choice, ref_info: (0, 0)}, // MODE-GROUP-IREF
    /* 2992 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 22, character_data: Some(619), mode: ContentMode::Characters, ref_info: (0, 0)}, // ACTIVATION
    /* 2993 */ ElementSpec {sub_elements: (15914, 15924), sub_element_ver: 8415, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (4104, 4108)}, // MODE-DECLARATION
    /* 2994 */ ElementSpec {sub_elements: (5409, 5426), sub_element_ver: 4720, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (4108, 4118)}, // MODE-DECLARATION-GROUP
    /* 2995 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2089, 2095), attributes_ver: 9361, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // INITIAL-MODE-REF, TARGET-MODE-DECLARATION-REF, TARGET-MODE-REF
    /* 2996 */ ElementSpec {sub_elements: (20814, 20815), sub_element_ver: 7, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // MODE-DECLARATIONS
    /* 2997 */ ElementSpec {sub_elements: (20815, 20816), sub_element_ver: 0, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // MODE-TRANSITIONS
    /* 2998 */ ElementSpec {sub_elements: (14212, 14223), sub_element_ver: 7255, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (4118, 4121)}, // APPLICATION-MODE-MACHINE, MODE-DECLARATION-GROUP-PROTOTYPE, MODE-GROUP, PROCESS-MODE-MACHINE, PROCESS-STATE-MACHINE, STATE-MACHINE
    /* 2999 */ ElementSpec {sub_elements: (19265, 19268), sub_element_ver: 617, attributes: (0, 2), attributes_ver: 617, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // MODE-DECLARATION-GROUP-PROTOTYPE-IREF
    /* 3000 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (3771, 3775), attributes_ver: 1026, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // TARGET-MODE-DECLARATION-REF
    /* 3001 */ ElementSpec {sub_elements: (18759, 18763), sub_element_ver: 7930, attributes: (0, 2), attributes_ver: 3299, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // START-IREF, STOP-IREF
    /* 3002 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (421, 427), attributes_ver: 7930, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // CONTEXT-PORT-PROTOTYPE-REF
    /* 3003 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (1033, 1039), attributes_ver: 7930, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // CONTEXT-ROOT-SW-COMPONENT-PROTOTYPE-REF
    /* 3004 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (811, 817), attributes_ver: 7930, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // SW-COMPONENT-PROTOTYPE-REF
    /* 3005 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (583, 589), attributes_ver: 7930, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // TARGET-MODE-DECLARATION-GROUP-PROTOTYPE-REF
    /* 3006 */ ElementSpec {sub_elements: (18763, 18767), sub_element_ver: 77, attributes: (0, 2), attributes_ver: 77, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // MODE-DECLARATION-GROUP-PROTOTYPE-IREF
    /* 3007 */ ElementSpec {sub_elements: (19268, 19271), sub_element_ver: 67, attributes: (0, 2), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // MODE-MAPPING
    /* 3008 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2641, 2647), attributes_ver: 9319, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // MODE-DECLARATION-MAPPING-SET-REF
    /* 3009 */ ElementSpec {sub_elements: (19856, 19858), sub_element_ver: 22, attributes: (0, 2), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // MODE-DECLARATION-GROUP-PROTOTYPE-REF-CONDITIONAL
    /* 3010 */ ElementSpec {sub_elements: (15924, 15934), sub_element_ver: 2765, attributes: (115, 118), attributes_ver: 0, character_data: None, mode: ContentMode::Sequence, ref_info: (4121, 4125)}, // MODE-DECLARATION-MAPPING
    /* 3011 */ ElementSpec {sub_elements: (20816, 20817), sub_element_ver: 0, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // FIRST-MODE-REFS
    /* 3012 */ ElementSpec {sub_elements: (15934, 15944), sub_element_ver: 2765, attributes: (115, 118), attributes_ver: 0, character_data: None, mode: ContentMode::Sequence, ref_info: (4125, 4131)}, // MODE-DECLARATION-MAPPING-SET
    /* 3013 */ ElementSpec {sub_elements: (20817, 20818), sub_element_ver: 0, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // MODE-DECLARATION-MAPPINGS
    /* 3014 */ ElementSpec {sub_elements: (18123, 18129), sub_element_ver: 9024, attributes: (0, 2), attributes_ver: 9463, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // MODE-DEPENDENT-STARTUP-CONFIG
    /* 3015 */ ElementSpec {sub_elements: (20818, 20819), sub_element_ver: 1776, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // EXECUTION-DEPENDENCYS
    /* 3016 */ ElementSpec {sub_elements: (20819, 20820), sub_element_ver: 491, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // FUNCTION-GROUP-IREFS
    /* 3017 */ ElementSpec {sub_elements: (20820, 20821), sub_element_ver: 1170, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // FUNCTION-GROUP-MODE-IREFS
    /* 3018 */ ElementSpec {sub_elements: (20821, 20822), sub_element_ver: 1776, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // MACHINE-MODE-IREFS
    /* 3019 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2647, 2653), attributes_ver: 9457, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // RESOURCE-GROUP-REF
    /* 3020 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2653, 2659), attributes_ver: 9463, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // STARTUP-CONFIG-REF
    /* 3021 */ ElementSpec {sub_elements: (20822, 20823), sub_element_ver: 386, attributes: (0, 2), attributes_ver: 656, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // MODE-DRIVEN-TRANSMISSION-MODE-CONDITION
    /* 3022 */ ElementSpec {sub_elements: (20823, 20824), sub_element_ver: 386, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // MODE-DECLARATION-REFS
    /* 3023 */ ElementSpec {sub_elements: (19858, 19860), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 0, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // MODE-MANAGER-ERROR-BEHAVIOR, MODE-USER-ERROR-BEHAVIOR
    /* 3024 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 0, character_data: Some(624), mode: ContentMode::Characters, ref_info: (0, 0)}, // ERROR-REACTION-POLICY
    /* 3025 */ ElementSpec {sub_elements: (19271, 19274), sub_element_ver: 192, attributes: (0, 2), attributes_ver: 134, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // MODE-IN-BSW-INSTANCE-REF
    /* 3026 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (535, 541), attributes_ver: 9325, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // CONTEXT-BSW-IMPLEMENTATION-REF
    /* 3027 */ ElementSpec {sub_elements: (19860, 19862), sub_element_ver: 22, attributes: (0, 2), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // DISABLED-IN-MODE-IREF, MODE-IREF
    /* 3028 */ ElementSpec {sub_elements: (19862, 19864), sub_element_ver: 9223, attributes: (0, 2), attributes_ver: 9223, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // FUNCTION-GROUP-IREF, FUNCTION-GROUP-MODE-IREF, MACHINE-MODE-IREF, REQUESTED-MODE-IREF
    /* 3029 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (583, 589), attributes_ver: 9445, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // CONTEXT-MODE-DECLARATION-GROUP-PROTOTYPE-REF
    /* 3030 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2089, 2095), attributes_ver: 9445, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // TARGET-MODE-DECLARATION-REF
    /* 3031 */ ElementSpec {sub_elements: (19864, 19866), sub_element_ver: 531, attributes: (0, 2), attributes_ver: 531, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // APPLICATION-MODE-IREF, PROCESS-MODE-IREF, PROCESS-STATE-IREF, REQUESTED-MODE-IREF
    /* 3032 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (583, 589), attributes_ver: 9469, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // CONTEXT-MODE-DECLARATION-GROUP-PROTOTYPE-REF
    /* 3033 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2089, 2095), attributes_ver: 9469, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // TARGET-MODE-DECLARATION-REF
    /* 3034 */ ElementSpec {sub_elements: (18767, 18771), sub_element_ver: 192, attributes: (0, 2), attributes_ver: 134, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // MODE-IN-SWC-INSTANCE-REF
    /* 3035 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (811, 817), attributes_ver: 9325, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // CONTEXT-COMPONENT-REF, CONTEXT-SW-COMPONENT-PROTOTYPE-REF, CONTEXT-SWC-PROTOTYPE-REF
    /* 3036 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (421, 427), attributes_ver: 9325, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // CONTEXT-PORT-PROTOTYPE-REF, CONTEXT-PORT-REF
    /* 3037 */ ElementSpec {sub_elements: (12246, 12258), sub_element_ver: 7646, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (4131, 4135)}, // MODE-INTERFACE-MAPPING
    /* 3038 */ ElementSpec {sub_elements: (18389, 18394), sub_element_ver: 799, attributes: (0, 2), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // MODE-PORT-ANNOTATION
    /* 3039 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (583, 589), attributes_ver: 9361, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // BSW-MODE-GROUP-REF, CONTEXT-MODE-DECLARATION-GROUP-PROTOTYPE-REF, CONTEXT-MODE-DECLARATION-GROUP-REF, FIRST-MODE-GROUP-REF, MODE-DECLARATION-GROUP-PROTOTYPE-REF, MODE-DECLARATION-REF, MODE-GROUP-REF, PROVIDED-MODE-GROUP-REF, REQUIRED-MODE-GROUP-REF, SECOND-MODE-GROUP-REF, TARGET-MODE-GROUP-REF
    /* 3040 */ ElementSpec {sub_elements: (19866, 19868), sub_element_ver: 22, attributes: (0, 2), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // MODE-REQUEST-TYPE-MAP
    /* 3041 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2425, 2431), attributes_ver: 9361, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // MODE-GROUP-REF, TYPE-TREF
    /* 3042 */ ElementSpec {sub_elements: (19274, 19277), sub_element_ver: 192, attributes: (0, 2), attributes_ver: 134, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // MODE-SWITCH-EVENT-TRIGGERED-ACTIVITY
    /* 3043 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2659, 2665), attributes_ver: 9325, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // SWC-MODE-SWITCH-EVENT-REF
    /* 3044 */ ElementSpec {sub_elements: (7333, 7348), sub_element_ver: 4788, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (4135, 4144)}, // MODE-SWITCH-INTERFACE
    /* 3045 */ ElementSpec {sub_elements: (14223, 14234), sub_element_ver: 7682, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (4144, 4149)}, // MODE-SWITCH-POINT
    /* 3046 */ ElementSpec {sub_elements: (19277, 19280), sub_element_ver: 9199, attributes: (0, 2), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // MODE-SWITCH-RECEIVER-COM-SPEC
    /* 3047 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (583, 589), attributes_ver: 9379, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // MODE-GROUP-REF
    /* 3048 */ ElementSpec {sub_elements: (18771, 18775), sub_element_ver: 386, attributes: (0, 2), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // MODE-SWITCH-SENDER-COM-SPEC
    /* 3049 */ ElementSpec {sub_elements: (10319, 10332), sub_element_ver: 2053, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (4149, 4155)}, // MODE-SWITCHED-ACK-EVENT
    /* 3050 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2665, 2671), attributes_ver: 9361, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // EVENT-SOURCE-REF
    /* 3051 */ ElementSpec {sub_elements: (19868, 19870), sub_element_ver: 795, attributes: (0, 2), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // MODE-SWITCHED-ACK, TRANSMISSION-ACKNOWLEDGE
    /* 3052 */ ElementSpec {sub_elements: (15944, 15954), sub_element_ver: 2765, attributes: (115, 118), attributes_ver: 0, character_data: None, mode: ContentMode::Sequence, ref_info: (4155, 4159)}, // MODE-TRANSITION
    /* 3053 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2089, 2095), attributes_ver: 9319, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // DEFAULT-MODE-REF, ENTERED-MODE-REF, EXITED-MODE-REF, FIRST-MODE-REF, SECOND-MODE-REF
    /* 3054 */ ElementSpec {sub_elements: (19870, 19872), sub_element_ver: 22, attributes: (0, 2), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // MODIFICATION
    /* 3055 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 796, character_data: Some(626), mode: ContentMode::Characters, ref_info: (0, 0)}, // MONOTONY
    /* 3056 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (57, 60), attributes_ver: 871, character_data: Some(982), mode: ContentMode::Characters, ref_info: (0, 0)}, // MSR-QUERY-ARG
    /* 3057 */ ElementSpec {sub_elements: (19872, 19874), sub_element_ver: 22, attributes: (57, 63), attributes_ver: 621, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // MSR-QUERY-CHAPTER
    /* 3058 */ ElementSpec {sub_elements: (19874, 19876), sub_element_ver: 22, attributes: (57, 63), attributes_ver: 621, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // MSR-QUERY-P-1
    /* 3059 */ ElementSpec {sub_elements: (19876, 19878), sub_element_ver: 1612, attributes: (0, 2), attributes_ver: 1612, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // MSR-QUERY-P-2
    /* 3060 */ ElementSpec {sub_elements: (18394, 18399), sub_element_ver: 960, attributes: (0, 2), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // MSR-QUERY-PROPS
    /* 3061 */ ElementSpec {sub_elements: (20824, 20825), sub_element_ver: 7, attributes: (0, 2), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // MSR-QUERY-RESULT-CHAPTER
    /* 3062 */ ElementSpec {sub_elements: (20825, 20826), sub_element_ver: 7, attributes: (0, 2), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // MSR-QUERY-RESULT-TOPIC-1
    /* 3063 */ ElementSpec {sub_elements: (19878, 19880), sub_element_ver: 22, attributes: (57, 63), attributes_ver: 621, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // MSR-QUERY-TOPIC-1
    /* 3064 */ ElementSpec {sub_elements: (20826, 20827), sub_element_ver: 7, attributes: (0, 2), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // CHANGE, DESC, ITEM-LABEL, REASON
    /* 3065 */ ElementSpec {sub_elements: (19880, 19882), sub_element_ver: 22, attributes: (147, 154), attributes_ver: 814, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // P
    /* 3066 */ ElementSpec {sub_elements: (20827, 20828), sub_element_ver: 7, attributes: (0, 2), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // C-CODE, GENERIC-MATH, TEX-MATH, USED-LANGUAGES
    /* 3067 */ ElementSpec {sub_elements: (19882, 19884), sub_element_ver: 22, attributes: (96, 106), attributes_ver: 814, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // VERBATIM
    /* 3068 */ ElementSpec {sub_elements: (19280, 19283), sub_element_ver: 800, attributes: (0, 2), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // ACCURACY, ACCURACY-EXT, ACCURACY-INT, AGE, BEST-CASE-EXECUTION-TIME, ESTIMATED-EXECUTION-TIME, JITTER, LOWER-BOUND, MAXIMUM, MAXIMUM-EXECUTION-TIME, MAXIMUM-INTER-ARRIVAL-TIME, MINIMUM, MINIMUM-EXECUTION-TIME, MINIMUM-INTER-ARRIVAL-TIME, NOMINAL, NOMINAL-EXECUTION-TIME, PATTERN-JITTER, PATTERN-LENGTH, PATTERN-PERIOD, PERIOD, SIGNAL-AGE, SW-REFRESH-TIMING, TIME-VALUE, TOLERANCE, TRIGGER-PERIOD, UPPER-BOUND, WORST-CASE-EXECUTION-TIME
    /* 3069 */ ElementSpec {sub_elements: (20828, 20829), sub_element_ver: 7, attributes: (0, 2), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // LABEL, LONG-NAME
    /* 3070 */ ElementSpec {sub_elements: (3759, 3779), sub_element_ver: 3316, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (4159, 4168)}, // MULTIPLEXED-I-PDU
    /* 3071 */ ElementSpec {sub_elements: (20829, 20830), sub_element_ver: 7, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // DYNAMIC-PARTS
    /* 3072 */ ElementSpec {sub_elements: (20830, 20831), sub_element_ver: 7, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // STATIC-PARTS
    /* 3073 */ ElementSpec {sub_elements: (20831, 20832), sub_element_ver: 7, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // SEGMENT-POSITIONS
    /* 3074 */ ElementSpec {sub_elements: (18775, 18779), sub_element_ver: 192, attributes: (0, 2), attributes_ver: 134, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // MULTIPLICITY-RESTRICTION
    /* 3075 */ ElementSpec {sub_elements: (2810, 2823), sub_element_ver: 3316, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (4168, 4177)}, // N-PDU
    /* 3076 */ ElementSpec {sub_elements: (18229, 18231), sub_element_ver: 64, attributes: (131, 137), attributes_ver: 3085, character_data: Some(982), mode: ContentMode::Mixed, ref_info: (0, 0)}, // EVENT-OBD-READINESS-GROUP, GROUP-IDENTIFIER, NAME-TOKEN-VALUE-VARIATION-POINT
    /* 3077 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 22, character_data: Some(974), mode: ContentMode::Characters, ref_info: (0, 0)}, // ADDITIONAL-NATIVE-TYPE-QUALIFIER, NATIVE-DECLARATION
    /* 3078 */ ElementSpec {sub_elements: (10332, 10345), sub_element_ver: 7021, attributes: (115, 118), attributes_ver: 0, character_data: None, mode: ContentMode::Sequence, ref_info: (4177, 4178)}, // NETWORK-ENDPOINT
    /* 3079 */ ElementSpec {sub_elements: (19283, 19286), sub_element_ver: 0, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // NETWORK-ENDPOINT-ADDRESSES
    /* 3080 */ ElementSpec {sub_elements: (19884, 19886), sub_element_ver: 123, attributes: (0, 2), attributes_ver: 123, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // NETWORK-ENDPOINT-REF-CONDITIONAL
    /* 3081 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (373, 379), attributes_ver: 230, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // NETWORK-ENDPOINT-REF
    /* 3082 */ ElementSpec {sub_elements: (12258, 12270), sub_element_ver: 1514, attributes: (115, 118), attributes_ver: 230, character_data: None, mode: ContentMode::Sequence, ref_info: (4178, 4184)}, // NETWORK-HANDLE-PORT-MAPPING
    /* 3083 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2671, 2677), attributes_ver: 230, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // NETWORK-HANDLE-REF, NM-NETWORK-HANDLE-REF
    /* 3084 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (349, 355), attributes_ver: 230, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // PROCESS-REF
    /* 3085 */ ElementSpec {sub_elements: (8464, 8478), sub_element_ver: 1514, attributes: (115, 118), attributes_ver: 230, character_data: None, mode: ContentMode::Sequence, ref_info: (4184, 4193)}, // NETWORK-MANAGEMENT-PORT-INTERFACE
    /* 3086 */ ElementSpec {sub_elements: (20832, 20833), sub_element_ver: 19, attributes: (0, 2), attributes_ver: 77, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // NETWORK-SEGMENT-ID
    /* 3087 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 656, character_data: Some(629), mode: ContentMode::Characters, ref_info: (0, 0)}, // TA-TYPE
    /* 3088 */ ElementSpec {sub_elements: (18779, 18783), sub_element_ver: 66, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // NM-NODES
    /* 3089 */ ElementSpec {sub_elements: (12270, 12282), sub_element_ver: 5080, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (4193, 4200)}, // NM-CONFIG
    /* 3090 */ ElementSpec {sub_elements: (19286, 19289), sub_element_ver: 22, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // NM-CLUSTER-COUPLINGS
    /* 3091 */ ElementSpec {sub_elements: (18399, 18404), sub_element_ver: 9074, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // NM-CLUSTERS
    /* 3092 */ ElementSpec {sub_elements: (20833, 20834), sub_element_ver: 7, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // NM-IF-ECUS
    /* 3093 */ ElementSpec {sub_elements: (17787, 17794), sub_element_ver: 8884, attributes: (0, 2), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // NM-COORDINATOR
    /* 3094 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2677, 2683), attributes_ver: 9361, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // NM-NODE-REF
    /* 3095 */ ElementSpec {sub_elements: (20834, 20835), sub_element_ver: 7, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // NM-NODE-REFS
    /* 3096 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 120, character_data: Some(630), mode: ContentMode::Characters, ref_info: (0, 0)}, // NM-COORDINATOR-ROLE
    /* 3097 */ ElementSpec {sub_elements: (2322, 2348), sub_element_ver: 2053, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (4200, 4201)}, // NM-ECU
    /* 3098 */ ElementSpec {sub_elements: (18783, 18787), sub_element_ver: 0, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // BUS-DEPENDENT-NM-ECUS
    /* 3099 */ ElementSpec {sub_elements: (18783, 18787), sub_element_ver: 66, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Choice, ref_info: (0, 0)}, // BUS-SPECIFIC-NM-ECU
    /* 3100 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 301, character_data: Some(632), mode: ContentMode::Characters, ref_info: (0, 0)}, // MAPPING-DIRECTION
    /* 3101 */ ElementSpec {sub_elements: (10345, 10358), sub_element_ver: 7034, attributes: (115, 118), attributes_ver: 81, character_data: None, mode: ContentMode::Sequence, ref_info: (4201, 4207)}, // NM-HANDLE-TO-FUNCTION-GROUP-STATE-MAPPING
    /* 3102 */ ElementSpec {sub_elements: (20835, 20836), sub_element_ver: 1176, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // FUNCTION-GROUP-IREFS
    /* 3103 */ ElementSpec {sub_elements: (20836, 20837), sub_element_ver: 6, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // FUNCTION-GROUP-STATE-IREFS
    /* 3104 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2671, 2677), attributes_ver: 4093, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // NM-HANDLE-REF
    /* 3105 */ ElementSpec {sub_elements: (15954, 15964), sub_element_ver: 8425, attributes: (115, 118), attributes_ver: 2229, character_data: None, mode: ContentMode::Sequence, ref_info: (4207, 4213)}, // NM-INSTANTIATION
    /* 3106 */ ElementSpec {sub_elements: (20496, 20497), sub_element_ver: 1772, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // NETWORK-CONFIGURATIONS
    /* 3107 */ ElementSpec {sub_elements: (20837, 20838), sub_element_ver: 48, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // NETWORK-HANDLES
    /* 3108 */ ElementSpec {sub_elements: (14234, 14245), sub_element_ver: 1502, attributes: (115, 118), attributes_ver: 230, character_data: None, mode: ContentMode::Sequence, ref_info: (4213, 4220)}, // NM-INTERACTS-WITH-SM-MAPPING
    /* 3109 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2683, 2689), attributes_ver: 230, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // STATE-REQUEST-REF
    /* 3110 */ ElementSpec {sub_elements: (18787, 18791), sub_element_ver: 48, attributes: (0, 2), attributes_ver: 48, character_data: None, mode: ContentMode::Sequence, ref_info: (4220, 4221)}, // NM-NETWORK-HANDLE
    /* 3111 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (901, 907), attributes_ver: 48, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // PARTIAL-NETWORK-REF
    /* 3112 */ ElementSpec {sub_elements: (20838, 20839), sub_element_ver: 48, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // PARTIAL-NETWORK-REFS
    /* 3113 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2005, 2011), attributes_ver: 48, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // VLAN-REF
    /* 3114 */ ElementSpec {sub_elements: (20839, 20840), sub_element_ver: 48, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // VLAN-REFS
    /* 3115 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2689, 2695), attributes_ver: 9361, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // COMM-CONTROLLER-REF, COMMUNICATION-CONTROLLER-REF, CONTROLLER-REF
    /* 3116 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2695, 2701), attributes_ver: 2229, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // INTENDED-TARGET-MACHINE-REF, MACHINE-DESIGN-REF, MACHINE-REF
    /* 3117 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2701, 2707), attributes_ver: 9361, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // NM-IF-ECU-REF
    /* 3118 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2707, 2713), attributes_ver: 9361, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // RX-NM-PDU-REF, TX-NM-PDU-REF
    /* 3119 */ ElementSpec {sub_elements: (20840, 20841), sub_element_ver: 7, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // RX-NM-PDU-REFS
    /* 3120 */ ElementSpec {sub_elements: (20841, 20842), sub_element_ver: 7, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // TX-NM-PDU-REFS
    /* 3121 */ ElementSpec {sub_elements: (6124, 6140), sub_element_ver: 5160, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (4221, 4229)}, // NM-PDU
    /* 3122 */ ElementSpec {sub_elements: (20842, 20843), sub_element_ver: 7, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // I-SIGNAL-TO-I-PDU-MAPPINGS, I-SIGNAL-TO-PDU-MAPPINGS
    /* 3123 */ ElementSpec {sub_elements: (19886, 19888), sub_element_ver: 120, attributes: (0, 2), attributes_ver: 120, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // NM-PDU-REF-CONDITIONAL
    /* 3124 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2707, 2713), attributes_ver: 9331, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // NM-PDU-REF
    /* 3125 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 123, character_data: Some(636), mode: ContentMode::Characters, ref_info: (0, 0)}, // NM-STATE-REQUEST
    /* 3126 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 12, character_data: Some(637), mode: ContentMode::Characters, ref_info: (0, 0)}, // NM-VARIANT
    /* 3127 */ ElementSpec {sub_elements: (17148, 17157), sub_element_ver: 3664, attributes: (115, 118), attributes_ver: 463, character_data: None, mode: ContentMode::Sequence, ref_info: (4229, 4231)}, // NO-CHECKPOINT-SUPERVISION
    /* 3128 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (271, 277), attributes_ver: 3664, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // CHECKPOINT-REF, TERMINATING-CHECKPOINT-REF
    /* 3129 */ ElementSpec {sub_elements: (20843, 20844), sub_element_ver: 6, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // CHECKPOINT-REFS
    /* 3130 */ ElementSpec {sub_elements: (15964, 15974), sub_element_ver: 4093, attributes: (115, 118), attributes_ver: 81, character_data: None, mode: ContentMode::Sequence, ref_info: (4231, 4233)}, // NO-SUPERVISION
    /* 3131 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (349, 355), attributes_ver: 4093, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // PROCESS-REF
    /* 3132 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (3666, 3671), attributes_ver: 5336, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // PROCESS-REF
    /* 3133 */ ElementSpec {sub_elements: (2423, 2448), sub_element_ver: 2154, attributes: (0, 2), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // NONQUEUED-RECEIVER-COM-SPEC
    /* 3134 */ ElementSpec {sub_elements: (12282, 12294), sub_element_ver: 7658, attributes: (0, 2), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // NONQUEUED-SENDER-COM-SPEC
    /* 3135 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 6748, character_data: Some(639), mode: ContentMode::Characters, ref_info: (0, 0)}, // NUMBER-OF-INSTRUCTIONS, SEQUENTIAL-INSTRUCTIONS-BEGIN, SEQUENTIAL-INSTRUCTIONS-END
    /* 3136 */ ElementSpec {sub_elements: (19289, 19292), sub_element_ver: 3865, attributes: (0, 2), attributes_ver: 9, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // NOT-AVAILABLE-VALUE-SPECIFICATION
    /* 3137 */ ElementSpec {sub_elements: (19292, 19295), sub_element_ver: 7253, attributes: (168, 175), attributes_ver: 814, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // NOTE
    /* 3138 */ ElementSpec {sub_elements: (19295, 19298), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 0, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // VTF
    /* 3139 */ ElementSpec {sub_elements: (19298, 19301), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 0, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // NUMERICAL-RULE-BASED-VALUE-SPECIFICATION
    /* 3140 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 22, character_data: Some(578), mode: ContentMode::Characters, ref_info: (0, 0)}, // ABS, CLIENT-ID, CURRENT-EXP, DEFAULT-VALUE, LENGTH-EXP, LUMINOUS-INTENSITY-EXP, MASS-EXP, MAX, MAX-DIFF, MAX-GRADIENT, MIN, MOLAR-AMOUNT-EXP, SW-INTENDED-RESOLUTION, TEMPERATURE-EXP, TIME-EXP, TOL, TYP, V, VALUE
    /* 3141 */ ElementSpec {sub_elements: (19301, 19304), sub_element_ver: 22, attributes: (0, 2), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // NUMERICAL-VALUE-SPECIFICATION
    /* 3142 */ ElementSpec {sub_elements: (17794, 17801), sub_element_ver: 8891, attributes: (0, 2), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // NV-BLOCK-DATA-MAPPING
    /* 3143 */ ElementSpec {sub_elements: (3146, 3168), sub_element_ver: 2809, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (4233, 4237)}, // NV-BLOCK-DESCRIPTOR
    /* 3144 */ ElementSpec {sub_elements: (20844, 20845), sub_element_ver: 7, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // INSTANTIATION-DATA-DEF-PROPSS
    /* 3145 */ ElementSpec {sub_elements: (20845, 20846), sub_element_ver: 21, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // MODE-SWITCH-EVENT-TRIGGERED-ACTIVITYS
    /* 3146 */ ElementSpec {sub_elements: (20248, 20249), sub_element_ver: 7, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // NV-BLOCK-DATA-MAPPINGS
    /* 3147 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2713, 2719), attributes_ver: 9331, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // TIMING-EVENT-REF
    /* 3148 */ ElementSpec {sub_elements: (20238, 20239), sub_element_ver: 20, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // WRITING-STRATEGYS
    /* 3149 */ ElementSpec {sub_elements: (1409, 1439), sub_element_ver: 1443, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (4237, 4239)}, // NV-BLOCK-NEEDS
    /* 3150 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 22, character_data: Some(641), mode: ContentMode::Characters, ref_info: (0, 0)}, // RELIABILITY
    /* 3151 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 22, character_data: Some(642), mode: ContentMode::Characters, ref_info: (0, 0)}, // WRITING-PRIORITY
    /* 3152 */ ElementSpec {sub_elements: (3168, 3190), sub_element_ver: 2831, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (4239, 4249)}, // NV-BLOCK-SW-COMPONENT-TYPE
    /* 3153 */ ElementSpec {sub_elements: (20846, 20847), sub_element_ver: 64, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // BULK-NV-DATA-DESCRIPTORS
    /* 3154 */ ElementSpec {sub_elements: (20847, 20848), sub_element_ver: 7, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // NV-BLOCK-DESCRIPTORS
    /* 3155 */ ElementSpec {sub_elements: (7348, 7363), sub_element_ver: 4788, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (4249, 4259)}, // NV-DATA-INTERFACE
    /* 3156 */ ElementSpec {sub_elements: (20171, 20172), sub_element_ver: 7, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // AR-TYPED-PER-INSTANCE-MEMORYS, DATA-ELEMENTS, EXPLICIT-INTER-RUNNABLE-VARIABLES, IMPLICIT-INTER-RUNNABLE-VARIABLES, NV-DATAS, STATIC-MEMORYS
    /* 3157 */ ElementSpec {sub_elements: (18404, 18409), sub_element_ver: 799, attributes: (0, 2), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // NV-DATA-PORT-ANNOTATION
    /* 3158 */ ElementSpec {sub_elements: (19304, 19307), sub_element_ver: 776, attributes: (0, 2), attributes_ver: 656, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // NV-PROVIDE-COM-SPEC
    /* 3159 */ ElementSpec {sub_elements: (11118, 11130), sub_element_ver: 7670, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Choice, ref_info: (0, 0)}, // RAM-BLOCK-INIT-VALUE, ROM-BLOCK-INIT-VALUE
    /* 3160 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (541, 547), attributes_ver: 9349, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // ROOT-VARIABLE-DATA-PROTOTYPE-REF, VARIABLE-REF
    /* 3161 */ ElementSpec {sub_elements: (19888, 19890), sub_element_ver: 22, attributes: (0, 2), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // NV-REQUIRE-COM-SPEC
    /* 3162 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (541, 547), attributes_ver: 9361, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // BASE-REFERENCE-REF, DATA-ELEMENT-REF, LOCAL-VARIABLE-REF, RAM-LOCATION-REF, REFERENCE-TABLE-REF, ROOT-VARIABLE-DATA-PROTOTYPE-REF, TARGET-DATA-ELEMENT-REF, TARGET-DATA-PROTOTYPE-REF, VARIABLE-ACCESSED-FOR-DEBUG-REF, VARIABLE-REF
    /* 3163 */ ElementSpec {sub_elements: (10358, 10371), sub_element_ver: 3740, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (4259, 4262)}, // OBD-CONTROL-SERVICE-NEEDS
    /* 3164 */ ElementSpec {sub_elements: (8758, 8772), sub_element_ver: 4482, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (4262, 4265)}, // OBD-INFO-SERVICE-NEEDS
    /* 3165 */ ElementSpec {sub_elements: (4753, 4771), sub_element_ver: 4201, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (4265, 4268)}, // OBD-MONITOR-SERVICE-NEEDS
    /* 3166 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (1057, 1063), attributes_ver: 1187, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // APPLICATION-DATA-TYPE-REF
    /* 3167 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2719, 2725), attributes_ver: 1187, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // EVENT-NEEDS-REF
    /* 3168 */ ElementSpec {sub_elements: (6140, 6156), sub_element_ver: 5176, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (4268, 4271)}, // OBD-PID-SERVICE-NEEDS
    /* 3169 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 22, character_data: Some(643), mode: ContentMode::Characters, ref_info: (0, 0)}, // CONNECTION-TYPE
    /* 3170 */ ElementSpec {sub_elements: (12294, 12306), sub_element_ver: 3531, attributes: (115, 118), attributes_ver: 9, character_data: None, mode: ContentMode::Sequence, ref_info: (4271, 4274)}, // OBD-RATIO-DENOMINATOR-NEEDS
    /* 3171 */ ElementSpec {sub_elements: (4202, 4221), sub_element_ver: 3740, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (4274, 4277)}, // OBD-RATIO-SERVICE-NEEDS
    /* 3172 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2719, 2725), attributes_ver: 9361, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // RATE-BASED-MONITORED-EVENT-REF
    /* 3173 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (1297, 1303), attributes_ver: 9361, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // INHIBITING-FID-REF, USED-FID-REF
    /* 3174 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (1297, 1303), attributes_ver: 9349, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // INHIBITING-SECONDARY-FID-REF, USED-SECONDARY-FID-REF
    /* 3175 */ ElementSpec {sub_elements: (20848, 20849), sub_element_ver: 386, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // USED-SECONDARY-FID-REFS
    /* 3176 */ ElementSpec {sub_elements: (7363, 7378), sub_element_ver: 5128, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (4277, 4280)}, // OFFSET-TIMING-CONSTRAINT
    /* 3177 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (259, 265), attributes_ver: 9361, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // EVENT-REF, RESPONSE-REF, SOURCE-REF, STIMULUS-REF, TARGET-REF
    /* 3178 */ ElementSpec {sub_elements: (17801, 17808), sub_element_ver: 1745, attributes: (0, 2), attributes_ver: 656, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // OPERATION-ARGUMENT-INSTANCE-IREF
    /* 3179 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2725, 2731), attributes_ver: 9349, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // BASE-REF
    /* 3180 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (673, 679), attributes_ver: 9349, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // CONTEXT-OPERATION-REF
    /* 3181 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (397, 403), attributes_ver: 9349, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // ROOT-ARGUMENT-DATA-PROTOTYPE-REF
    /* 3182 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 401, character_data: Some(644), mode: ContentMode::Characters, ref_info: (0, 0)}, // OPERATION-CYCLE
    /* 3183 */ ElementSpec {sub_elements: (19307, 19310), sub_element_ver: 617, attributes: (0, 2), attributes_ver: 617, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // OPERATION-PROTOTYPE-IREF
    /* 3184 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (3775, 3779), attributes_ver: 1026, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // CONTEXT-COMPONENT-REF
    /* 3185 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (3779, 3783), attributes_ver: 1026, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // TARGET-OPERATION-REF
    /* 3186 */ ElementSpec {sub_elements: (18791, 18795), sub_element_ver: 29, attributes: (0, 2), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // CLIENT-SERVER-OPERATION-IREF, MAPPED-OPERATION-IREF, OPERATION-IREF
    /* 3187 */ ElementSpec {sub_elements: (10371, 10384), sub_element_ver: 2053, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (4280, 4286)}, // OPERATION-INVOKED-EVENT
    /* 3188 */ ElementSpec {sub_elements: (19890, 19892), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 0, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // ORDERED-MASTER
    /* 3189 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2731, 2737), attributes_ver: 9319, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // TIME-SYNC-SERVER-REF
    /* 3190 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 123, character_data: Some(646), mode: ContentMode::Characters, ref_info: (0, 0)}, // OS-ARTI-ADAPTER-LAUNCH-BEHAVIOR
    /* 3191 */ ElementSpec {sub_elements: (14245, 14256), sub_element_ver: 8128, attributes: (115, 118), attributes_ver: 1531, character_data: None, mode: ContentMode::Sequence, ref_info: (4286, 4291)}, // OS-MODULE-INSTANTIATION
    /* 3192 */ ElementSpec {sub_elements: (20849, 20850), sub_element_ver: 4, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // RESOURCE-GROUPS
    /* 3193 */ ElementSpec {sub_elements: (12306, 12318), sub_element_ver: 1927, attributes: (115, 118), attributes_ver: 77, character_data: None, mode: ContentMode::Sequence, ref_info: (4291, 4297)}, // OS-TASK-EXECUTION-EVENT
    /* 3194 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 81, character_data: Some(647), mode: ContentMode::Characters, ref_info: (0, 0)}, // PREEMPTABILITY
    /* 3195 */ ElementSpec {sub_elements: (12318, 12330), sub_element_ver: 4093, attributes: (115, 118), attributes_ver: 81, character_data: None, mode: ContentMode::Sequence, ref_info: (4297, 4301)}, // OS-TASK-PROXY
    /* 3196 */ ElementSpec {sub_elements: (19892, 19894), sub_element_ver: 22, attributes: (0, 2), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // MODE-GROUP-IREF, P-MODE-GROUP-IN-ATOMIC-SWC-INSTANCE-REF, SWC-MODE-GROUP-IREF
    /* 3197 */ ElementSpec {sub_elements: (18409, 18414), sub_element_ver: 192, attributes: (0, 2), attributes_ver: 134, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // MODE-IREF
    /* 3198 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (805, 811), attributes_ver: 9325, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // CONTEXT-COMPOSITION-REF, CONTEXT-ROOT-SW-COMPOSITION-REF
    /* 3199 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (583, 589), attributes_ver: 9325, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // CONTEXT-MODE-DECLARATION-GROUP-PROTOTYPE-REF, CONTEXT-MODE-DECLARATION-GROUP-REF
    /* 3200 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2737, 2743), attributes_ver: 9325, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // CONTEXT-P-PORT-REF
    /* 3201 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2089, 2095), attributes_ver: 9325, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // TARGET-MODE-DECLARATION-REF, TARGET-MODE-REF
    /* 3202 */ ElementSpec {sub_elements: (19894, 19896), sub_element_ver: 22, attributes: (0, 2), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // OPERATION-IREF
    /* 3203 */ ElementSpec {sub_elements: (19896, 19898), sub_element_ver: 22, attributes: (0, 2), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // P-PORT-IN-COMPOSITION-INSTANCE-REF, PROVIDER-IREF
    /* 3204 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2737, 2743), attributes_ver: 9361, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // CONTEXT-P-PORT-REF, TARGET-P-PORT-REF
    /* 3205 */ ElementSpec {sub_elements: (3574, 3595), sub_element_ver: 3174, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (4301, 4307)}, // P-PORT-PROTOTYPE
    /* 3206 */ ElementSpec {sub_elements: (19310, 19313), sub_element_ver: 48, attributes: (0, 2), attributes_ver: 48, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // EXECUTABLE-PROVIDED-PORT-IREF, NOTIFICATION-PORT-IREF, P-PORT-PROTOTYPE-IN-EXECUTABLE-IREF, P-PORT-PROTOTYPE-IREF, PORT-PROTOTYPE-IREF, PROVIDED-SERVICE-PORT-IREF, RECOVERY-ACTION-IREF, TIME-SYNC-P-PORT-PROTOTYPE-IREF
    /* 3207 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2743, 2749), attributes_ver: 48, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // TARGET-P-PORT-PROTOTYPE-REF
    /* 3208 */ ElementSpec {sub_elements: (19313, 19316), sub_element_ver: 909, attributes: (0, 2), attributes_ver: 64, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // PROVIDED-PORT-PROTOTYPE-IREF, SW-CLUSTER-DESIGN-PROVIDED-PORT-IREF
    /* 3209 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2749, 2755), attributes_ver: 1642, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // CONTEXT-ROOT-SW-CLUSTER-DESIGN-COMPONENT-PROTOTYPE-REF
    /* 3210 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (811, 817), attributes_ver: 1642, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // CONTEXT-SW-COMPONENT-PROTOTYPE-REF
    /* 3211 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2743, 2749), attributes_ver: 1642, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // TARGET-P-PORT-PROTOTYPE-REF
    /* 3212 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2755, 2761), attributes_ver: 9361, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // PROVIDED-INTERFACE-TREF, REQUIRED-INTERFACE-TREF
    /* 3213 */ ElementSpec {sub_elements: (19898, 19900), sub_element_ver: 22, attributes: (0, 2), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // P-TRIGGER-IN-ATOMIC-SWC-TYPE-INSTANCE-REF, SWC-TRIGGER-IREF, TRIGGER-IREF
    /* 3214 */ ElementSpec {sub_elements: (12330, 12342), sub_element_ver: 7682, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (4307, 4312)}, // PARAMETER-ACCESS
    /* 3215 */ ElementSpec {sub_elements: (12342, 12354), sub_element_ver: 1082, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (4312, 4317)}, // PARAMETER-DATA-PROTOTYPE, ROM-BLOCK
    /* 3216 */ ElementSpec {sub_elements: (18795, 18799), sub_element_ver: 77, attributes: (0, 2), attributes_ver: 77, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // PARAMETER-DATA-PROTOTYPE-IREF
    /* 3217 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (811, 817), attributes_ver: 500, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // CONTEXT-COMPONENT-REF
    /* 3218 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (805, 811), attributes_ver: 500, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // CONTEXT-COMPOSITION-REF
    /* 3219 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (421, 427), attributes_ver: 500, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // CONTEXT-PORT-REF
    /* 3220 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (427, 433), attributes_ver: 500, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // TARGET-PARAMETER-DATA-PROTOTYPE-REF
    /* 3221 */ ElementSpec {sub_elements: (18799, 18803), sub_element_ver: 29, attributes: (0, 2), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // AUTOSAR-PARAMETER-IREF
    /* 3222 */ ElementSpec {sub_elements: (7378, 7393), sub_element_ver: 4788, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (4317, 4327)}, // PARAMETER-INTERFACE
    /* 3223 */ ElementSpec {sub_elements: (20217, 20218), sub_element_ver: 7, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // CONSTANT-MEMORYS, PARAMETERS, PER-INSTANCE-PARAMETERS, SHARED-PARAMETERS
    /* 3224 */ ElementSpec {sub_elements: (18414, 18419), sub_element_ver: 799, attributes: (0, 2), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // PARAMETER-PORT-ANNOTATION
    /* 3225 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (427, 433), attributes_ver: 9361, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // CONTEXT-REF, PARAMETER-ACCESSED-FOR-DEBUG-REF, PARAMETER-REF, ROM-LOCATION-REF
    /* 3226 */ ElementSpec {sub_elements: (19900, 19902), sub_element_ver: 22, attributes: (0, 2), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // PARAMETER-PROVIDE-COM-SPEC
    /* 3227 */ ElementSpec {sub_elements: (19902, 19904), sub_element_ver: 22, attributes: (0, 2), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // PARAMETER-REQUIRE-COM-SPEC
    /* 3228 */ ElementSpec {sub_elements: (3595, 3616), sub_element_ver: 2278, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (4327, 4336)}, // PARAMETER-SW-COMPONENT-TYPE
    /* 3229 */ ElementSpec {sub_elements: (20850, 20851), sub_element_ver: 7, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // CONSTANT-MAPPING-REFS
    /* 3230 */ ElementSpec {sub_elements: (10384, 10397), sub_element_ver: 7047, attributes: (115, 118), attributes_ver: 0, character_data: None, mode: ContentMode::Sequence, ref_info: (4336, 4341)}, // PASS-THROUGH-SW-CONNECTOR
    /* 3231 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2737, 2743), attributes_ver: 9319, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // PROVIDED-OUTER-PORT-REF
    /* 3232 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2761, 2767), attributes_ver: 9319, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // REQUIRED-OUTER-PORT-REF
    /* 3233 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2767, 2773), attributes_ver: 4093, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // SERVICE-INTERFACE-ELEMENT-MAPPING-REF
    /* 3234 */ ElementSpec {sub_elements: (20851, 20852), sub_element_ver: 20, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // SERVICE-INTERFACE-ELEMENT-MAPPING-REFS
    /* 3235 */ ElementSpec {sub_elements: (20852, 20853), sub_element_ver: 6, attributes: (0, 2), attributes_ver: 301, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // PAYLOAD-BYTE-PATTERN-RULE
    /* 3236 */ ElementSpec {sub_elements: (19904, 19906), sub_element_ver: 301, attributes: (0, 2), attributes_ver: 301, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // PAYLOAD-BYTE-PATTERN-RULE-PART
    /* 3237 */ ElementSpec {sub_elements: (20853, 20854), sub_element_ver: 6, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // PAYLOAD-BYTE-PATTERN-RULE-PARTS
    /* 3238 */ ElementSpec {sub_elements: (12354, 12366), sub_element_ver: 7694, attributes: (115, 118), attributes_ver: 910, character_data: None, mode: ContentMode::Sequence, ref_info: (4341, 4342)}, // PDU-ACTIVATION-ROUTING-GROUP
    /* 3239 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2773, 2779), attributes_ver: 1642, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // I-PDU-IDENTIFIER-TCP-REF, I-PDU-IDENTIFIER-UDP-REF, SO-CON-I-PDU-IDENTIFIER-REF
    /* 3240 */ ElementSpec {sub_elements: (20854, 20855), sub_element_ver: 64, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // I-PDU-IDENTIFIER-TCP-REFS
    /* 3241 */ ElementSpec {sub_elements: (20855, 20856), sub_element_ver: 64, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // I-PDU-IDENTIFIER-UDP-REFS
    /* 3242 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 134, character_data: Some(652), mode: ContentMode::Characters, ref_info: (0, 0)}, // PDU-COLLECTION-SEMANTICS
    /* 3243 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 401, character_data: Some(653), mode: ContentMode::Characters, ref_info: (0, 0)}, // COLLECTION-TRIGGER, PDU-COLLECTION-TRIGGER, TRIGGER
    /* 3244 */ ElementSpec {sub_elements: (20856, 20857), sub_element_ver: 7, attributes: (0, 2), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // DEFAULT-VALUE
    /* 3245 */ ElementSpec {sub_elements: (20857, 20858), sub_element_ver: 7, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // DEFAULT-VALUE-ELEMENTS
    /* 3246 */ ElementSpec {sub_elements: (10397, 10410), sub_element_ver: 3721, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (4342, 4343)}, // PDU-TO-FRAME-MAPPING
    /* 3247 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2779, 2785), attributes_ver: 9361, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // PDU-REF
    /* 3248 */ ElementSpec {sub_elements: (8772, 8786), sub_element_ver: 6531, attributes: (115, 118), attributes_ver: 871, character_data: None, mode: ContentMode::Sequence, ref_info: (4343, 4344)}, // PDU-TRIGGERING
    /* 3249 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2785, 2791), attributes_ver: 9391, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // I-PDU-PORT-REF
    /* 3250 */ ElementSpec {sub_elements: (20858, 20859), sub_element_ver: 519, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // I-PDU-PORT-REFS
    /* 3251 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2779, 2785), attributes_ver: 9391, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // I-PDU-REF
    /* 3252 */ ElementSpec {sub_elements: (20674, 20675), sub_element_ver: 519, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // I-SIGNAL-TRIGGERINGS
    /* 3253 */ ElementSpec {sub_elements: (19906, 19908), sub_element_ver: 796, attributes: (0, 2), attributes_ver: 796, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // PDU-TRIGGERING-REF-CONDITIONAL
    /* 3254 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (859, 865), attributes_ver: 9391, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // PDU-TRIGGERING-REF
    /* 3255 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2791, 2797), attributes_ver: 1187, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // SEC-OC-CRYPTO-MAPPING-REF
    /* 3256 */ ElementSpec {sub_elements: (20859, 20860), sub_element_ver: 354, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // TRIGGER-I-PDU-SEND-CONDITIONS
    /* 3257 */ ElementSpec {sub_elements: (12366, 12378), sub_element_ver: 6891, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (4344, 4348)}, // PDUR-I-PDU-GROUP
    /* 3258 */ ElementSpec {sub_elements: (19908, 19910), sub_element_ver: 795, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // I-PDUS
    /* 3259 */ ElementSpec {sub_elements: (6156, 6172), sub_element_ver: 5192, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (4348, 4352)}, // PER-INSTANCE-MEMORY
    /* 3260 */ ElementSpec {sub_elements: (18803, 18807), sub_element_ver: 29, attributes: (0, 2), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // PER-INSTANCE-MEMORY-SIZE
    /* 3261 */ ElementSpec {sub_elements: (19910, 19912), sub_element_ver: 7138, attributes: (0, 2), attributes_ver: 7138, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // PER-STATE-TIMEOUT
    /* 3262 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2089, 2095), attributes_ver: 9475, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // STATE-REF
    /* 3263 */ ElementSpec {sub_elements: (7393, 7408), sub_element_ver: 5128, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (4352, 4356)}, // PERIODIC-EVENT-TRIGGERING
    /* 3264 */ ElementSpec {sub_elements: (18129, 18135), sub_element_ver: 804, attributes: (0, 2), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // PERMISSIBLE-SIGNAL-PATH
    /* 3265 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 12, character_data: Some(657), mode: ContentMode::Characters, ref_info: (0, 0)}, // ACCESS-MODE
    /* 3266 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 115, character_data: Some(658), mode: ContentMode::Characters, ref_info: (0, 0)}, // UPDATE-STRATEGY
    /* 3267 */ ElementSpec {sub_elements: (14256, 14267), sub_element_ver: 2677, attributes: (115, 118), attributes_ver: 2229, character_data: None, mode: ContentMode::Sequence, ref_info: (4356, 4362)}, // PERSISTENCY-DATA-ELEMENT
    /* 3268 */ ElementSpec {sub_elements: (19316, 19319), sub_element_ver: 9202, attributes: (0, 2), attributes_ver: 637, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // PERSISTENCY-DATA-PROVIDED-COM-SPEC
    /* 3269 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2797, 2803), attributes_ver: 6018, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // DATA-ELEMENT-REF
    /* 3270 */ ElementSpec {sub_elements: (11118, 11130), sub_element_ver: 7706, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Choice, ref_info: (0, 0)}, // INIT-VALUE
    /* 3271 */ ElementSpec {sub_elements: (19319, 19322), sub_element_ver: 8937, attributes: (0, 2), attributes_ver: 115, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // PERSISTENCY-DATA-REQUIRED-COM-SPEC
    /* 3272 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2797, 2803), attributes_ver: 2229, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // DATA-ELEMENT-REF
    /* 3273 */ ElementSpec {sub_elements: (20860, 20861), sub_element_ver: 6, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // DEPLOYMENT-URIS
    /* 3274 */ ElementSpec {sub_elements: (8786, 8800), sub_element_ver: 4737, attributes: (115, 118), attributes_ver: 77, character_data: None, mode: ContentMode::Sequence, ref_info: (4362, 4369)}, // PERSISTENCY-DEPLOYMENT-ELEMENT-TO-CRYPTO-KEY-SLOT-MAPPING
    /* 3275 */ ElementSpec {sub_elements: (19322, 19325), sub_element_ver: 3866, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // REDUNDANCY-HANDLINGS
    /* 3276 */ ElementSpec {sub_elements: (8800, 8814), sub_element_ver: 4737, attributes: (115, 118), attributes_ver: 77, character_data: None, mode: ContentMode::Sequence, ref_info: (4369, 4376)}, // PERSISTENCY-DEPLOYMENT-TO-CRYPTO-KEY-SLOT-MAPPING
    /* 3277 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2209, 2215), attributes_ver: 500, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // PERSISTENCY-DEPLOYMENT-REF
    /* 3278 */ ElementSpec {sub_elements: (14267, 14278), sub_element_ver: 7985, attributes: (115, 118), attributes_ver: 345, character_data: None, mode: ContentMode::Sequence, ref_info: (4376, 4382)}, // PERSISTENCY-DEPLOYMENT-TO-DLT-LOG-CHANNEL-MAPPING
    /* 3279 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2209, 2215), attributes_ver: 7985, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // PERSISTENCY-DEPLOYMENT-REF
    /* 3280 */ ElementSpec {sub_elements: (12378, 12390), sub_element_ver: 4093, attributes: (115, 118), attributes_ver: 81, character_data: None, mode: ContentMode::Sequence, ref_info: (4382, 4389)}, // PERSISTENCY-DEPLOYMENT-TO-DLT-LOG-SINK-MAPPING
    /* 3281 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2209, 2215), attributes_ver: 4093, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // PERSISTENCY-DEPLOYMENT-REF
    /* 3282 */ ElementSpec {sub_elements: (20861, 20862), sub_element_ver: 6, attributes: (0, 2), attributes_ver: 301, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // PERSISTENCY-DEPLOYMENT-URI
    /* 3283 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 115, character_data: Some(662), mode: ContentMode::Characters, ref_info: (0, 0)}, // UPDATE-STRATEGY
    /* 3284 */ ElementSpec {sub_elements: (10410, 10423), sub_element_ver: 7060, attributes: (115, 118), attributes_ver: 1153, character_data: None, mode: ContentMode::Sequence, ref_info: (4389, 4395)}, // PERSISTENCY-FILE
    /* 3285 */ ElementSpec {sub_elements: (6172, 6188), sub_element_ver: 5208, attributes: (115, 118), attributes_ver: 488, character_data: None, mode: ContentMode::Sequence, ref_info: (4395, 4401)}, // PERSISTENCY-FILE-ARRAY
    /* 3286 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (3671, 3676), attributes_ver: 4822, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // FILE-REF
    /* 3287 */ ElementSpec {sub_elements: (20862, 20863), sub_element_ver: 491, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // FILE-REFS
    /* 3288 */ ElementSpec {sub_elements: (488, 489), sub_element_ver: 494, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // FILES
    /* 3289 */ ElementSpec {sub_elements: (14278, 14289), sub_element_ver: 1927, attributes: (115, 118), attributes_ver: 77, character_data: None, mode: ContentMode::Sequence, ref_info: (4401, 4403)}, // PERSISTENCY-FILE-ELEMENT
    /* 3290 */ ElementSpec {sub_elements: (14289, 14300), sub_element_ver: 6018, attributes: (115, 118), attributes_ver: 637, character_data: None, mode: ContentMode::Sequence, ref_info: (4403, 4404)}, // PERSISTENCY-FILE-PROXY
    /* 3291 */ ElementSpec {sub_elements: (3779, 3799), sub_element_ver: 3336, attributes: (115, 118), attributes_ver: 488, character_data: None, mode: ContentMode::Sequence, ref_info: (4404, 4414)}, // PERSISTENCY-FILE-PROXY-INTERFACE
    /* 3292 */ ElementSpec {sub_elements: (20863, 20864), sub_element_ver: 494, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // FILE-PROXYS
    /* 3293 */ ElementSpec {sub_elements: (12390, 12402), sub_element_ver: 4822, attributes: (115, 118), attributes_ver: 4822, character_data: None, mode: ContentMode::Sequence, ref_info: (4414, 4419)}, // PERSISTENCY-FILE-PROXY-TO-FILE-MAPPING
    /* 3294 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (3676, 3681), attributes_ver: 4822, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // PERSISTENCY-FILE-ARRAY-REF
    /* 3295 */ ElementSpec {sub_elements: (19319, 19320), sub_element_ver: 12, attributes: (0, 2), attributes_ver: 12, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // PERSISTENCY-FILE-REQUIRED-COM-SPEC
    /* 3296 */ ElementSpec {sub_elements: (5426, 5443), sub_element_ver: 4737, attributes: (115, 118), attributes_ver: 77, character_data: None, mode: ContentMode::Sequence, ref_info: (4419, 4427)}, // PERSISTENCY-FILE-STORAGE
    /* 3297 */ ElementSpec {sub_elements: (488, 489), sub_element_ver: 19, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // FILES
    /* 3298 */ ElementSpec {sub_elements: (3616, 3637), sub_element_ver: 2853, attributes: (115, 118), attributes_ver: 77, character_data: None, mode: ContentMode::Sequence, ref_info: (4427, 4437)}, // PERSISTENCY-FILE-STORAGE-INTERFACE
    /* 3299 */ ElementSpec {sub_elements: (20864, 20865), sub_element_ver: 19, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // FILE-ELEMENTS
    /* 3300 */ ElementSpec {sub_elements: (19322, 19325), sub_element_ver: 77, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // REDUNDANCY-HANDLINGS
    /* 3301 */ ElementSpec {sub_elements: (17576, 17584), sub_element_ver: 5752, attributes: (0, 2), attributes_ver: 301, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // DATA-TYPE-MAPPING
    /* 3302 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (469, 475), attributes_ver: 3664, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // CURRENT-DATA-TYPE-REF, PREVIOUS-DATA-TYPE-REF
    /* 3303 */ ElementSpec {sub_elements: (7408, 7423), sub_element_ver: 5838, attributes: (115, 118), attributes_ver: 488, character_data: None, mode: ContentMode::Sequence, ref_info: (4437, 4443)}, // PERSISTENCY-KEY-VALUE-DATABASE
    /* 3304 */ ElementSpec {sub_elements: (4221, 4240), sub_element_ver: 3759, attributes: (115, 118), attributes_ver: 488, character_data: None, mode: ContentMode::Sequence, ref_info: (4443, 4453)}, // PERSISTENCY-KEY-VALUE-DATABASE-INTERFACE
    /* 3305 */ ElementSpec {sub_elements: (20865, 20866), sub_element_ver: 494, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // DATA-ELEMENTS
    /* 3306 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (1063, 1069), attributes_ver: 6018, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // DATA-TYPE-FOR-SERIALIZATION-REF
    /* 3307 */ ElementSpec {sub_elements: (20866, 20867), sub_element_ver: 494, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // DATA-TYPE-FOR-SERIALIZATION-REFS
    /* 3308 */ ElementSpec {sub_elements: (20867, 20868), sub_element_ver: 494, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // KEY-VALUE-PAIRS
    /* 3309 */ ElementSpec {sub_elements: (14300, 14311), sub_element_ver: 2677, attributes: (115, 118), attributes_ver: 2229, character_data: None, mode: ContentMode::Sequence, ref_info: (4453, 4455)}, // PERSISTENCY-KEY-VALUE-PAIR
    /* 3310 */ ElementSpec {sub_elements: (11118, 11130), sub_element_ver: 7718, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Choice, ref_info: (0, 0)}, // INIT-VALUE
    /* 3311 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (1063, 1069), attributes_ver: 2229, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // VALUE-DATA-TYPE-REF
    /* 3312 */ ElementSpec {sub_elements: (5443, 5460), sub_element_ver: 4737, attributes: (115, 118), attributes_ver: 77, character_data: None, mode: ContentMode::Sequence, ref_info: (4455, 4463)}, // PERSISTENCY-KEY-VALUE-STORAGE
    /* 3313 */ ElementSpec {sub_elements: (3190, 3212), sub_element_ver: 2853, attributes: (115, 118), attributes_ver: 77, character_data: None, mode: ContentMode::Sequence, ref_info: (4463, 4473)}, // PERSISTENCY-KEY-VALUE-STORAGE-INTERFACE
    /* 3314 */ ElementSpec {sub_elements: (20865, 20866), sub_element_ver: 19, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // DATA-ELEMENTS
    /* 3315 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (1063, 1069), attributes_ver: 500, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // DATA-TYPE-FOR-SERIALIZATION-REF
    /* 3316 */ ElementSpec {sub_elements: (20868, 20869), sub_element_ver: 19, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // DATA-TYPE-FOR-SERIALIZATION-REFS
    /* 3317 */ ElementSpec {sub_elements: (20867, 20868), sub_element_ver: 19, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // KEY-VALUE-PAIRS
    /* 3318 */ ElementSpec {sub_elements: (12402, 12414), sub_element_ver: 6018, attributes: (115, 118), attributes_ver: 637, character_data: None, mode: ContentMode::Sequence, ref_info: (4473, 4478)}, // PERSISTENCY-PORT-PROTOTYPE-TO-FILE-ARRAY-MAPPING
    /* 3319 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2803, 2809), attributes_ver: 6018, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // PERSISTENCY-FILE-ARRAY-REF
    /* 3320 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (349, 355), attributes_ver: 6018, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // PROCESS-REF
    /* 3321 */ ElementSpec {sub_elements: (12414, 12426), sub_element_ver: 1927, attributes: (115, 118), attributes_ver: 77, character_data: None, mode: ContentMode::Sequence, ref_info: (4478, 4486)}, // PERSISTENCY-PORT-PROTOTYPE-TO-FILE-STORAGE-MAPPING
    /* 3322 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2809, 2815), attributes_ver: 500, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // FILE-STORAGE-REF
    /* 3323 */ ElementSpec {sub_elements: (10423, 10436), sub_element_ver: 7073, attributes: (115, 118), attributes_ver: 488, character_data: None, mode: ContentMode::Sequence, ref_info: (4486, 4491)}, // PERSISTENCY-PORT-PROTOTYPE-TO-KEY-VALUE-DATABASE-MAPPING
    /* 3324 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2815, 2821), attributes_ver: 9481, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // KEY-VALUE-STORAGE-REF
    /* 3325 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (349, 355), attributes_ver: 9481, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // PROCESS-REF
    /* 3326 */ ElementSpec {sub_elements: (12426, 12438), sub_element_ver: 1927, attributes: (115, 118), attributes_ver: 77, character_data: None, mode: ContentMode::Sequence, ref_info: (4491, 4499)}, // PERSISTENCY-PORT-PROTOTYPE-TO-KEY-VALUE-STORAGE-MAPPING
    /* 3327 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2821, 2827), attributes_ver: 500, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // KEY-VALUE-STORAGE-REF
    /* 3328 */ ElementSpec {sub_elements: (3794, 3795), sub_element_ver: 491, attributes: (0, 2), attributes_ver: 2884, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // PERSISTENCY-PROVIDED-COM-SPEC
    /* 3329 */ ElementSpec {sub_elements: (18807, 18810), sub_element_ver: 2117, attributes: (0, 2), attributes_ver: 9, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // PERSISTENCY-REDUNDANCY-CRC
    /* 3330 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 1153, character_data: Some(668), mode: ContentMode::Characters, ref_info: (0, 0)}, // REDUNDANCY
    /* 3331 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 64, character_data: Some(669), mode: ContentMode::Characters, ref_info: (0, 0)}, // SCOPE
    /* 3332 */ ElementSpec {sub_elements: (18807, 18811), sub_element_ver: 77, attributes: (0, 2), attributes_ver: 77, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // PERSISTENCY-REDUNDANCY-HASH
    /* 3333 */ ElementSpec {sub_elements: (19325, 19328), sub_element_ver: 2117, attributes: (0, 2), attributes_ver: 9, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // PERSISTENCY-REDUNDANCY-M-OUT-OF-N
    /* 3334 */ ElementSpec {sub_elements: (15974, 15984), sub_element_ver: 8435, attributes: (115, 118), attributes_ver: 1214, character_data: None, mode: ContentMode::Sequence, ref_info: (4499, 4500)}, // PHM-ACTION
    /* 3335 */ ElementSpec {sub_elements: (20869, 20870), sub_element_ver: 1195, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // ACTION-LISTS
    /* 3336 */ ElementSpec {sub_elements: (18135, 18141), sub_element_ver: 9030, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // ACTIONS
    /* 3337 */ ElementSpec {sub_elements: (15984, 15994), sub_element_ver: 7730, attributes: (115, 118), attributes_ver: 5218, character_data: None, mode: ContentMode::Sequence, ref_info: (4500, 4501)}, // PHM-ACTION-LIST
    /* 3338 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2827, 2833), attributes_ver: 7730, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // ACTION-LIST-ITEM-REF
    /* 3339 */ ElementSpec {sub_elements: (20870, 20871), sub_element_ver: 2120, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // ACTION-LIST-ITEM-REFS
    /* 3340 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 3350, character_data: Some(673), mode: ContentMode::Characters, ref_info: (0, 0)}, // ACTION-LIST-EXECUTION
    /* 3341 */ ElementSpec {sub_elements: (15994, 16004), sub_element_ver: 8435, attributes: (115, 118), attributes_ver: 1214, character_data: None, mode: ContentMode::Sequence, ref_info: (4501, 4502)}, // PHM-ARBITRATION
    /* 3342 */ ElementSpec {sub_elements: (20871, 20872), sub_element_ver: 1195, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // LOGICAL-EXPRESSIONS
    /* 3343 */ ElementSpec {sub_elements: (20872, 20873), sub_element_ver: 1195, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // RULES
    /* 3344 */ ElementSpec {sub_elements: (16004, 16014), sub_element_ver: 2875, attributes: (115, 118), attributes_ver: 1153, character_data: None, mode: ContentMode::Sequence, ref_info: (4502, 4504)}, // PHM-CHECKPOINT
    /* 3345 */ ElementSpec {sub_elements: (18811, 18815), sub_element_ver: 2229, attributes: (0, 2), attributes_ver: 115, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // PHM-CHECKPOINT-IREF
    /* 3346 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (811, 817), attributes_ver: 2229, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // CONTEXT-COMPONENT-PROTOTYPE-REF
    /* 3347 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (247, 253), attributes_ver: 2229, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // CONTEXT-R-PORT-PROTOTYPE-REF
    /* 3348 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (1033, 1039), attributes_ver: 2229, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // CONTEXT-ROOT-SW-COMPONENT-PROTOTYPE-REF
    /* 3349 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2833, 2839), attributes_ver: 2229, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // TARGET-PHM-CHECKPOINT-REF
    /* 3350 */ ElementSpec {sub_elements: (14311, 14322), sub_element_ver: 3376, attributes: (115, 118), attributes_ver: 1153, character_data: None, mode: ContentMode::Sequence, ref_info: (4504, 4510)}, // PHM-CONTRIBUTION-TO-MACHINE-MAPPING
    /* 3351 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2839, 2845), attributes_ver: 9355, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // PHM-CONTRIBUTION-REF
    /* 3352 */ ElementSpec {sub_elements: (20873, 20874), sub_element_ver: 8, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // PHM-CONTRIBUTION-REFS
    /* 3353 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (247, 253), attributes_ver: 9397, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // CONTEXT-R-PORT-PROTOTYPE-REF
    /* 3354 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2845, 2851), attributes_ver: 9397, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // TARGET-HEALTH-CHANNEL-REF
    /* 3355 */ ElementSpec {sub_elements: (6188, 6204), sub_element_ver: 5224, attributes: (115, 118), attributes_ver: 2229, character_data: None, mode: ContentMode::Sequence, ref_info: (4510, 4520)}, // PHM-HEALTH-CHANNEL-INTERFACE
    /* 3356 */ ElementSpec {sub_elements: (20874, 20875), sub_element_ver: 115, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // STATUSS
    /* 3357 */ ElementSpec {sub_elements: (3190, 3204), sub_element_ver: 1927, attributes: (115, 118), attributes_ver: 77, character_data: None, mode: ContentMode::Sequence, ref_info: (4520, 4531)}, // PHM-HEALTH-CHANNEL-RECOVERY-NOTIFICATION-INTERFACE
    /* 3358 */ ElementSpec {sub_elements: (16014, 16024), sub_element_ver: 8445, attributes: (115, 118), attributes_ver: 2229, character_data: None, mode: ContentMode::Sequence, ref_info: (4531, 4533)}, // PHM-HEALTH-CHANNEL-STATUS
    /* 3359 */ ElementSpec {sub_elements: (18815, 18819), sub_element_ver: 6018, attributes: (0, 2), attributes_ver: 637, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // STATUS-IREF
    /* 3360 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (811, 817), attributes_ver: 6018, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // CONTEXT-COMPONENT-PROTOTYPE-REF
    /* 3361 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (247, 253), attributes_ver: 6018, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // CONTEXT-R-PORT-PROTOTYPE-REF
    /* 3362 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (1033, 1039), attributes_ver: 6018, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // CONTEXT-ROOT-SW-COMPONENT-PROTOTYPE-REF
    /* 3363 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2263, 2269), attributes_ver: 6018, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // TARGET-STATUS-REF
    /* 3364 */ ElementSpec {sub_elements: (14322, 14333), sub_element_ver: 7730, attributes: (115, 118), attributes_ver: 5218, character_data: None, mode: ContentMode::Sequence, ref_info: (4533, 4534)}, // PHM-LOGICAL-EXPRESSION
    /* 3365 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2557, 2563), attributes_ver: 7730, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // HEALTH-CHANNEL-ARGUMENT-REF
    /* 3366 */ ElementSpec {sub_elements: (20875, 20876), sub_element_ver: 2120, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // HEALTH-CHANNEL-ARGUMENT-REFS
    /* 3367 */ ElementSpec {sub_elements: (20876, 20877), sub_element_ver: 2120, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // LOGICAL-EXPRESSION-ARGUMENT-REFS
    /* 3368 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 3350, character_data: Some(678), mode: ContentMode::Characters, ref_info: (0, 0)}, // LOGICAL-OPERATOR
    /* 3369 */ ElementSpec {sub_elements: (7423, 7438), sub_element_ver: 3087, attributes: (115, 118), attributes_ver: 909, character_data: None, mode: ContentMode::Sequence, ref_info: (4534, 4544)}, // PHM-RECOVERY-ACTION-INTERFACE
    /* 3370 */ ElementSpec {sub_elements: (12438, 12450), sub_element_ver: 7730, attributes: (115, 118), attributes_ver: 5218, character_data: None, mode: ContentMode::Sequence, ref_info: (4544, 4545)}, // PHM-RULE
    /* 3371 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2851, 2857), attributes_ver: 7730, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // EXPRESSION-REF, LOGICAL-EXPRESSION-ARGUMENT-REF
    /* 3372 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 3350, character_data: Some(679), mode: ContentMode::Characters, ref_info: (0, 0)}, // RULE-INIT-STATE
    /* 3373 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2857, 2863), attributes_ver: 7730, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // FALSE-ACTION-LIST-REF, TRUE-ACTION-LIST-REF
    /* 3374 */ ElementSpec {sub_elements: (6204, 6220), sub_element_ver: 5240, attributes: (115, 118), attributes_ver: 2229, character_data: None, mode: ContentMode::Sequence, ref_info: (4545, 4555)}, // PHM-SUPERVISED-ENTITY-INTERFACE
    /* 3375 */ ElementSpec {sub_elements: (20877, 20878), sub_element_ver: 115, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // CHECKPOINTS
    /* 3376 */ ElementSpec {sub_elements: (3190, 3204), sub_element_ver: 1927, attributes: (115, 118), attributes_ver: 77, character_data: None, mode: ContentMode::Sequence, ref_info: (4555, 4566)}, // PHM-SUPERVISION-RECOVERY-NOTIFICATION-INTERFACE
    /* 3377 */ ElementSpec {sub_elements: (17808, 17815), sub_element_ver: 8898, attributes: (0, 2), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // PHYS-CONSTRS
    /* 3378 */ ElementSpec {sub_elements: (20878, 20879), sub_element_ver: 519, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // SCALE-CONSTRS
    /* 3379 */ ElementSpec {sub_elements: (20879, 20880), sub_element_ver: 7, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // COMM-CONNECTORS
    /* 3380 */ ElementSpec {sub_elements: (18819, 18823), sub_element_ver: 29, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // FRAME-TRIGGERINGS
    /* 3381 */ ElementSpec {sub_elements: (20880, 20881), sub_element_ver: 513, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // I-PDU-TRIGGERINGS
    /* 3382 */ ElementSpec {sub_elements: (20881, 20882), sub_element_ver: 7, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // I-SIGNAL-TRIGGERINGS
    /* 3383 */ ElementSpec {sub_elements: (20882, 20883), sub_element_ver: 9, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // MANAGED-PHYSICAL-CHANNEL-REFS
    /* 3384 */ ElementSpec {sub_elements: (20883, 20884), sub_element_ver: 519, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // PDU-TRIGGERINGS
    /* 3385 */ ElementSpec {sub_elements: (19912, 19914), sub_element_ver: 9, attributes: (0, 2), attributes_ver: 9, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // PHYSICAL-CHANNEL-REF-CONDITIONAL
    /* 3386 */ ElementSpec {sub_elements: (6220, 6236), sub_element_ver: 5080, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (4566, 4570)}, // PHYSICAL-DIMENSION
    /* 3387 */ ElementSpec {sub_elements: (19914, 19916), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 0, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // PHYSICAL-DIMENSION-MAPPING
    /* 3388 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2863, 2869), attributes_ver: 9319, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // FIRST-PHYSICAL-DIMENSION-REF, SECOND-PHYSICAL-DIMENSION-REF
    /* 3389 */ ElementSpec {sub_elements: (16024, 16034), sub_element_ver: 2765, attributes: (115, 118), attributes_ver: 0, character_data: None, mode: ContentMode::Sequence, ref_info: (4570, 4574)}, // PHYSICAL-DIMENSION-MAPPING-SET
    /* 3390 */ ElementSpec {sub_elements: (20884, 20885), sub_element_ver: 0, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // PHYSICAL-DIMENSION-MAPPINGS
    /* 3391 */ ElementSpec {sub_elements: (17157, 17166), sub_element_ver: 7430, attributes: (115, 118), attributes_ver: 4960, character_data: None, mode: ContentMode::Sequence, ref_info: (4574, 4576)}, // PLATFORM-ACTION-ITEM
    /* 3392 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 75, character_data: Some(684), mode: ContentMode::Characters, ref_info: (0, 0)}, // ACTION-TYPE
    /* 3393 */ ElementSpec {sub_elements: (3212, 3234), sub_element_ver: 2875, attributes: (115, 118), attributes_ver: 1153, character_data: None, mode: ContentMode::Sequence, ref_info: (4576, 4582)}, // PLATFORM-HEALTH-MANAGEMENT-CONTRIBUTION
    /* 3394 */ ElementSpec {sub_elements: (20869, 20870), sub_element_ver: 538, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // ACTION-LISTS
    /* 3395 */ ElementSpec {sub_elements: (17584, 17592), sub_element_ver: 8794, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // ACTIONS
    /* 3396 */ ElementSpec {sub_elements: (19916, 19918), sub_element_ver: 8794, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // ARBITRATIONS
    /* 3397 */ ElementSpec {sub_elements: (20885, 20886), sub_element_ver: 115, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // CHECKPOINTS
    /* 3398 */ ElementSpec {sub_elements: (20886, 20887), sub_element_ver: 491, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // GLOBAL-SUPERVISION-ENTITYS
    /* 3399 */ ElementSpec {sub_elements: (20887, 20888), sub_element_ver: 115, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // GLOBAL-SUPERVISIONS
    /* 3400 */ ElementSpec {sub_elements: (19328, 19331), sub_element_ver: 9205, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // HEALTH-CHANNELS
    /* 3401 */ ElementSpec {sub_elements: (20647, 20648), sub_element_ver: 1543, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // LOCAL-SUPERVISIONS
    /* 3402 */ ElementSpec {sub_elements: (20871, 20872), sub_element_ver: 538, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // LOGICAL-EXPRESSIONS
    /* 3403 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (349, 355), attributes_ver: 4021, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // PROCESS-REF
    /* 3404 */ ElementSpec {sub_elements: (20872, 20873), sub_element_ver: 538, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // RULES
    /* 3405 */ ElementSpec {sub_elements: (20888, 20889), sub_element_ver: 491, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // SUPERVISION-ENTITYS
    /* 3406 */ ElementSpec {sub_elements: (20889, 20890), sub_element_ver: 20, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // SUPERVISION-MODE-CONDITIONS
    /* 3407 */ ElementSpec {sub_elements: (4240, 4259), sub_element_ver: 3778, attributes: (115, 118), attributes_ver: 77, character_data: None, mode: ContentMode::Sequence, ref_info: (4582, 4587)}, // PLATFORM-MODULE-ETHERNET-ENDPOINT-CONFIGURATION
    /* 3408 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2005, 2011), attributes_ver: 500, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // COMMUNICATION-CONNECTOR-REF
    /* 3409 */ ElementSpec {sub_elements: (20890, 20891), sub_element_ver: 12, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // REMOTE-CONFIGS
    /* 3410 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2869, 2875), attributes_ver: 230, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // SECURE-COM-PROPS-FOR-TCP-REF, SECURE-COM-PROPS-FOR-UDP-REF
    /* 3411 */ ElementSpec {sub_elements: (17166, 17175), sub_element_ver: 7730, attributes: (115, 118), attributes_ver: 5218, character_data: None, mode: ContentMode::Sequence, ref_info: (4587, 4589)}, // PLATFORM-PHM-ACTION-ITEM
    /* 3412 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 3350, character_data: Some(687), mode: ContentMode::Characters, ref_info: (0, 0)}, // ACTION-TYPE
    /* 3413 */ ElementSpec {sub_elements: (19331, 19334), sub_element_ver: 77, attributes: (0, 2), attributes_ver: 77, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // PLCA-PROPS
    /* 3414 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 656, character_data: Some(688), mode: ContentMode::Characters, ref_info: (0, 0)}, // PNC-GATEWAY-TYPE
    /* 3415 */ ElementSpec {sub_elements: (4771, 4789), sub_element_ver: 4219, attributes: (0, 2), attributes_ver: 656, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // PNC-MAPPING
    /* 3416 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (769, 775), attributes_ver: 500, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // DYNAMIC-PNC-MAPPING-PDU-GROUP-REF
    /* 3417 */ ElementSpec {sub_elements: (20891, 20892), sub_element_ver: 19, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // DYNAMIC-PNC-MAPPING-PDU-GROUP-REFS
    /* 3418 */ ElementSpec {sub_elements: (777, 779), sub_element_ver: 134, attributes: (0, 2), attributes_ver: 134, character_data: None, mode: ContentMode::Sequence, ref_info: (4589, 4590)}, // IDENT
    /* 3419 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2875, 2881), attributes_ver: 1187, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // MANAGED-PHYSICAL-CHANNEL-REF, PHYSICAL-CHANNEL-REF
    /* 3420 */ ElementSpec {sub_elements: (20892, 20893), sub_element_ver: 9, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // PHYSICAL-CHANNEL-REFS
    /* 3421 */ ElementSpec {sub_elements: (20893, 20894), sub_element_ver: 64, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // ASSOCIATED-CONSUMED-PROVIDED-SERVICE-INSTANCE-GROUPS, PNC-CONSUMED-PROVIDED-SERVICE-INSTANCE-GROUPS
    /* 3422 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (769, 775), attributes_ver: 9349, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // PNC-GROUP-REF
    /* 3423 */ ElementSpec {sub_elements: (20894, 20895), sub_element_ver: 386, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // PNC-GROUP-REFS
    /* 3424 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (1879, 1885), attributes_ver: 1642, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // PNC-PDUR-GROUP-REF
    /* 3425 */ ElementSpec {sub_elements: (20895, 20896), sub_element_ver: 64, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // PNC-PDUR-GROUP-REFS
    /* 3426 */ ElementSpec {sub_elements: (20896, 20897), sub_element_ver: 19, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // RELEVANT-FOR-DYNAMIC-PNC-MAPPING-REFS
    /* 3427 */ ElementSpec {sub_elements: (20897, 20898), sub_element_ver: 48, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // SERVICE-INSTANCE-REFS
    /* 3428 */ ElementSpec {sub_elements: (20898, 20899), sub_element_ver: 386, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // VFC-IREFS
    /* 3429 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2191, 2197), attributes_ver: 9349, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // WAKEUP-FRAME-REF
    /* 3430 */ ElementSpec {sub_elements: (20899, 20900), sub_element_ver: 386, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // WAKEUP-FRAME-REFS
    /* 3431 */ ElementSpec {sub_elements: (17592, 17600), sub_element_ver: 8802, attributes: (0, 2), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // PORT-API-OPTION
    /* 3432 */ ElementSpec {sub_elements: (20900, 20901), sub_element_ver: 7, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // PORT-ARG-VALUES
    /* 3433 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (421, 427), attributes_ver: 9361, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // CONTEXT-PORT-REF, FAILURE-MONITORING-REF, OUTER-PORT-REF, PORT-PROTOTYPE-REF, PORT-REF
    /* 3434 */ ElementSpec {sub_elements: (20901, 20902), sub_element_ver: 21, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // SUPPORTED-FEATURES
    /* 3435 */ ElementSpec {sub_elements: (17600, 17608), sub_element_ver: 1026, attributes: (115, 118), attributes_ver: 617, character_data: None, mode: ContentMode::Sequence, ref_info: (4590, 4597)}, // PORT-BLUEPRINT
    /* 3436 */ ElementSpec {sub_elements: (19918, 19920), sub_element_ver: 617, attributes: (0, 2), attributes_ver: 617, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // PORT-BLUEPRINT-INIT-VALUE
    /* 3437 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (3783, 3787), attributes_ver: 1026, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // DATA-PROTOTYPE-REF
    /* 3438 */ ElementSpec {sub_elements: (17815, 17822), sub_element_ver: 1026, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Choice, ref_info: (0, 0)}, // VALUE
    /* 3439 */ ElementSpec {sub_elements: (20902, 20903), sub_element_ver: 513, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // INIT-VALUES
    /* 3440 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (3787, 3791), attributes_ver: 1026, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // DERIVED-INTERFACE-REF, INTERFACE-BLUEPRINT-REF, INTERFACE-REF
    /* 3441 */ ElementSpec {sub_elements: (19920, 19922), sub_element_ver: 617, attributes: (0, 2), attributes_ver: 617, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // PORT-BLUEPRINT-MAPPING
    /* 3442 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (3791, 3795), attributes_ver: 1026, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // PORT-BLUEPRINT-REF
    /* 3443 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (3795, 3799), attributes_ver: 1026, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // CONTEXT-PORT-REF, PORT-PROTOTYPE-REF
    /* 3444 */ ElementSpec {sub_elements: (19334, 19337), sub_element_ver: 192, attributes: (0, 2), attributes_ver: 134, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // PORT-DEFINED-ARGUMENT-BLUEPRINT
    /* 3445 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2413, 2419), attributes_ver: 9325, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // VALUE-TYPE-REF
    /* 3446 */ ElementSpec {sub_elements: (19922, 19924), sub_element_ver: 22, attributes: (0, 2), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // PORT-DEFINED-ARGUMENT-VALUE
    /* 3447 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2413, 2419), attributes_ver: 9361, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // VALUE-TYPE-TREF
    /* 3448 */ ElementSpec {sub_elements: (7438, 7453), sub_element_ver: 1927, attributes: (115, 118), attributes_ver: 77, character_data: None, mode: ContentMode::Sequence, ref_info: (4597, 4598)}, // PORT-ELEMENT-TO-COMMUNICATION-RESOURCE-MAPPING
    /* 3449 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2881, 2887), attributes_ver: 500, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // COMMUNICATION-RESOURCE-REF
    /* 3450 */ ElementSpec {sub_elements: (14333, 14344), sub_element_ver: 841, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (4598, 4602)}, // PORT-GROUP
    /* 3451 */ ElementSpec {sub_elements: (19337, 19340), sub_element_ver: 776, attributes: (0, 2), attributes_ver: 656, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // COM-MANAGEMENT-PORT-GROUP-IREF, VFC-IREF
    /* 3452 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (811, 817), attributes_ver: 9349, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // CONTEXT-COMPONENT-REF
    /* 3453 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (805, 811), attributes_ver: 9349, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // CONTEXT-COMPOSITION-REF
    /* 3454 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2887, 2893), attributes_ver: 9349, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // TARGET-REF
    /* 3455 */ ElementSpec {sub_elements: (20903, 20904), sub_element_ver: 7, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // INNER-GROUP-IREFS
    /* 3456 */ ElementSpec {sub_elements: (20904, 20905), sub_element_ver: 7, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // OUTER-PORTS
    /* 3457 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 1549, character_data: Some(692), mode: ContentMode::Characters, ref_info: (0, 0)}, // PORT-INSTANTIATION-BEHAVIOR
    /* 3458 */ ElementSpec {sub_elements: (19924, 19926), sub_element_ver: 796, attributes: (0, 2), attributes_ver: 796, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // PORT-INTERFACE-BLUEPRINT-MAPPING
    /* 3459 */ ElementSpec {sub_elements: (18823, 18827), sub_element_ver: 34, attributes: (0, 2), attributes_ver: 9, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // ELEMENT-IN-IMPL-DATATYPE
    /* 3460 */ ElementSpec {sub_elements: (20905, 20906), sub_element_ver: 9, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // CONTEXT-DATA-PROTOTYPE-REFS
    /* 3461 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2755, 2761), attributes_ver: 1187, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // PORT-INTERFACE-REF
    /* 3462 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2893, 2899), attributes_ver: 1187, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // CONTEXT-DATA-PROTOTYPE-REF, TARGET-DATA-PROTOTYPE-REF
    /* 3463 */ ElementSpec {sub_elements: (12450, 12462), sub_element_ver: 7634, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (4602, 4608)}, // PORT-INTERFACE-MAPPING-SET
    /* 3464 */ ElementSpec {sub_elements: (18419, 18424), sub_element_ver: 482, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // PORT-INTERFACE-MAPPINGS
    /* 3465 */ ElementSpec {sub_elements: (20156, 20157), sub_element_ver: 4, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // NAMESPACES
    /* 3466 */ ElementSpec {sub_elements: (14344, 14355), sub_element_ver: 2941, attributes: (115, 118), attributes_ver: 1531, character_data: None, mode: ContentMode::Sequence, ref_info: (4608, 4613)}, // PORT-INTERFACE-TO-DATA-TYPE-MAPPING
    /* 3467 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2455, 2461), attributes_ver: 9469, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // DATA-TYPE-MAPPING-SET-REF
    /* 3468 */ ElementSpec {sub_elements: (20906, 20907), sub_element_ver: 4, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // DATA-TYPE-MAPPING-SET-REFS
    /* 3469 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2755, 2761), attributes_ver: 9469, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // PORT-INTERFACE-REF
    /* 3470 */ ElementSpec {sub_elements: (7453, 7468), sub_element_ver: 5853, attributes: (115, 118), attributes_ver: 871, character_data: None, mode: ContentMode::Sequence, ref_info: (4613, 4621)}, // PORT-PROTOTYPE-BLUEPRINT
    /* 3471 */ ElementSpec {sub_elements: (19926, 19928), sub_element_ver: 796, attributes: (0, 2), attributes_ver: 796, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // PORT-PROTOTYPE-BLUEPRINT-INIT-VALUE
    /* 3472 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (409, 415), attributes_ver: 9391, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // DATA-PROTOTYPE-REF
    /* 3473 */ ElementSpec {sub_elements: (11118, 11130), sub_element_ver: 7742, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Choice, ref_info: (0, 0)}, // VALUE
    /* 3474 */ ElementSpec {sub_elements: (20907, 20908), sub_element_ver: 519, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // INIT-VALUES
    /* 3475 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2755, 2761), attributes_ver: 9391, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // DERIVED-PORT-INTERFACE-REF, INTERFACE-REF, PORT-INTERFACE-BLUEPRINT-REF
    /* 3476 */ ElementSpec {sub_elements: (19928, 19930), sub_element_ver: 796, attributes: (0, 2), attributes_ver: 796, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // PORT-PROTOTYPE-BLUEPRINT-MAPPING
    /* 3477 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2899, 2905), attributes_ver: 9391, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // PORT-PROTOTYPE-BLUEPRINT-REF
    /* 3478 */ ElementSpec {sub_elements: (16734, 16743), sub_element_ver: 8684, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // PROVIDED-COM-SPECS
    /* 3479 */ ElementSpec {sub_elements: (16743, 16752), sub_element_ver: 8693, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // REQUIRED-COM-SPECS
    /* 3480 */ ElementSpec {sub_elements: (20908, 20909), sub_element_ver: 7, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // CLIENT-SERVER-ANNOTATIONS
    /* 3481 */ ElementSpec {sub_elements: (19340, 19343), sub_element_ver: 9208, attributes: (0, 2), attributes_ver: 531, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // PERSISTENCY-PORT-PROTOTYPE-IREF, PORT-PROTOTYPE-IREF
    /* 3482 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (811, 817), attributes_ver: 9469, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // CONTEXT-COMPONENT-PROTOTYPE-REF
    /* 3483 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (1033, 1039), attributes_ver: 9487, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // CONTEXT-ROOT-SW-COMPONENT-PROTOTYPE-REF
    /* 3484 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (421, 427), attributes_ver: 9469, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // TARGET-PORT-PROTOTYPE-REF
    /* 3485 */ ElementSpec {sub_elements: (20909, 20910), sub_element_ver: 7, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // IO-HW-ABSTRACTION-SERVER-ANNOTATIONS
    /* 3486 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2563, 2569), attributes_ver: 9493, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // LOG-AND-TRACE-MESSAGE-COLLECTION-SET-REF
    /* 3487 */ ElementSpec {sub_elements: (20910, 20911), sub_element_ver: 7, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // MODE-PORT-ANNOTATIONS
    /* 3488 */ ElementSpec {sub_elements: (20911, 20912), sub_element_ver: 7, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // NV-DATA-PORT-ANNOTATIONS
    /* 3489 */ ElementSpec {sub_elements: (20912, 20913), sub_element_ver: 7, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // PARAMETER-PORT-ANNOTATIONS
    /* 3490 */ ElementSpec {sub_elements: (18827, 18831), sub_element_ver: 9141, attributes: (0, 2), attributes_ver: 8194, character_data: None, mode: ContentMode::Choice, ref_info: (0, 0)}, // PORT-PROTOTYPE-PROPS
    /* 3491 */ ElementSpec {sub_elements: (19930, 19932), sub_element_ver: 22, attributes: (0, 2), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // PORT-PROTOTYPE-REF-CONDITIONAL
    /* 3492 */ ElementSpec {sub_elements: (19932, 19934), sub_element_ver: 22, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // SENDER-RECEIVER-ANNOTATIONS
    /* 3493 */ ElementSpec {sub_elements: (20913, 20914), sub_element_ver: 7, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // TRIGGER-PORT-ANNOTATIONS
    /* 3494 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 22, character_data: Some(697), mode: ContentMode::Characters, ref_info: (0, 0)}, // ACCEPTANCE-FIELD, ACCESS-DATA-RECORD-SIZE, AES-3-DATA-TYPE-H, AES-3-DATA-TYPE-L, ALIGNMENT, ALLOWED-I-PV-6-EXT-HEADER, ALLOWED-TCP-OPTION, APP-ID, ARRAY-SIZE, ASSIGNED-TRAFFIC-CLASS, ASSIGNMENT-PRIORITY, ASSOCIATED-EVENT-IDENTIFICATION, AUTH-DATA-FRESHNESS-LENGTH, AUTH-DATA-FRESHNESS-START-POSITION, AUTH-INFO-TX-LENGTH, AUTHENTICATION-BUILD-ATTEMPTS, AUTHENTICATION-RETRIES, AUTHENTICATION-VERIFY-ATTEMPTS, AVERAGE-MEMORY-CONSUMPTION, BASE-FREQUENCY, BASE-TYPE-SIZE, BAUDRATE, BIT-NUMBER, BIT-OFFSET, BIT-POSITION, BITFIELD-TEXT-TABLE-MASK-NV-BLOCK-DESCRIPTOR, BITFIELD-TEXT-TABLE-MASK-PORT-PROTOTYPE, BOR-COUNTER-L-1-TO-L-2, BUCKET-SIZE, BUFFER-RATIO, BURST-SIZE, BURST-SIZE-REQUEST, BURST-SIZE-RESPONSE, BUS-ID, BUS-MIRROR-NETWORK-ID, BYPASS-ETHER-TYPE, BYPASS-VLAN, CAN-BAUDRATE, CAN-FD-BAUDRATE, CAN-IDENTIFIER, CAN-IDENTIFIER-MASK, CAN-NM-TX-CAN-ID, CAN-XL-BAUDRATE, CHANNEL-ID, CHANNELS-PER-FRAME, CHECKPOINT-ID, CIPHER-SUITE-ID, CIPHER-SUITE-PRIORITY, CLIENT-ID, CLIENT-SERVICE-MAJOR-VERSION, CLIENT-SERVICE-MINOR-VERSION, CODE, COLLECTION-THRESHOLD, COMMITTED-BURST-SIZE, COMMITTED-INFORMATION-RATE, COMPRESSED-SOFTWARE-PACKAGE-SIZE, CORE-ID, COUNTER-OFFSET, COUPLING-PORT-SPEED, CPU-USAGE, CRC-OFFSET, CUSTOM-SERVICE-ID, CUSTOM-SUB-FUNCTION-NUMBER, DATA-ID, DATA-ID-MODE, DATA-ID-NIBBLE-OFFSET, DATA-LENGTH, DATA-LENGTH-REQUEST, DATA-LENGTH-RESPONSE, DEFAULT-PATTERN, DEFAULT-PRIORITY, DEFAULT-TRAFFIC-CLASS, DESTINATION-BASE-ID, DESTINATION-MAX-ADDRESS, DESTINATION-MIN-ADDRESS, DIAGNOSTIC-ADDRESS, DIAGNOSTIC-MESSAGE-TYPE, DID-NUMBER, DID-SIZE, DIFFERENTIATED-SERVICE-CODE-POINT, DIFFERENTIATED-SERVICE-FIELD, DLT-SESSION-ID, DO-IP-PROTOCOL-VERSION, DOMAIN-ID, DTC-NUMBER, DTC-SETTING-PARAMETER, DTC-STATUS-AVAILABILITY-MASK, DTC-STATUS-MASK, DURABILITY-SERVICE-HISTORY-DEPTH, DURABILITY-SERVICE-MAX-INSTANCES, DURABILITY-SERVICE-MAX-SAMPLES, DURABILITY-SERVICE-MAX-SAMPLES-PER-INSTANCE, EID, END-ADDRESS, ENTRY-TYPE, ETHER-TYPE, ETS-AVAILABLE-BANDWIDTH-IN-PERCENT, ETS-AVAILABLE-BANDWIDTH-IN-WEIGHT-VALUE, EVALUATION-ID, EVENT-DEFAULT-VALUE, EVENT-GROUP-ID, EVENT-GROUP-IDENTIFIER, EVENT-ID, EVENT-MULTICAST-UDP-PORT, EXCESS-BURST-SIZE, EXCESS-INFORMATION-RATE, EXECUTION-ERROR, EXPECTED-ALIVE-INDICATIONS, EXPECTED-ALIVE-INDICATIONS-IN-SUPERVISION-CYCLE, EXPIRED-SUPERVISION-CYCLE-TOL, EXPIRED-SUPERVISION-CYCLES-TOLERANCE, EXPLICIT-CONGESTION-NOTIFICATION, FAILED-ALIVE-SUPERVISION-REF-CYCLE-TOL, FAILED-REFERENCE-CYCLES-TOLERANCE, FAILED-SUPERVISION-CYCLES-TOLERANCE, FDC-THRESHOLD-STORAGE-VALUE, FILTER-ACTION-VLAN-MODIFICATION, FILTER-PRIORITY, FLOW-LABEL, FMI, FRESHNESS-COUNTER-SYNC-ATTEMPTS, FRESHNESS-TIMESTAMP-TIME-PERIOD-FACTOR, FRESHNESS-VALUE-ID, FRESHNESS-VALUE-LENGTH, FRESHNESS-VALUE-TX-LENGTH, FUNCTION-ID, FUP-DATA-ID-LIST, GID, GID-INVALIDITY-PATTERN, GLOBAL-RESOURCE-ID, HEADER-ID, HEADER-ID-LONG-HEADER, HEADER-ID-SHORT-HEADER, HEALTH-CHANNEL-ID, HISTORY-ORDER-DEPTH, HOP-COUNT, HOP-LIMIT, HOST-ID, ICV-FRESHNESS-VALUE-ID, ID, IDLE-SLOPE, IDSM-INSTANCE-ID, IIDC-CHANNEL, IIDC-DATA-BLOCK-SIZE, IIDC-FRACTION-NUMBER, IIDC-STREAM-FORMAT, IIDC-SY, IIDC-T-CODE, IIDC-TAG, IKE-RAND-TIME, INDEX, INDICATOR-FAILURE-CYCLE-COUNTER-THRESHOLD, INFO-TYPE, INGRESS-PRIORITY, INGRESS-VLAN-ID, INITIAL-REPETITIONS-MAX, INITIALIZATION-VECTOR-LENGTH, INSTANCE-ID, INSTANCE-IDENTIFIER, INTENDED-PARTIAL-INITIALIZATION-COUNT, INTERFACE-VERSION, INTERNAL-PRIORITY-VALUE, INTERNET-HEADER-LENGTH, INVERSE-PROTOCOL-VERSION, IP-ADDRESS-PREFIX-LENGTH, KEEP-ALIVE-PROBES-MAX, KEY-ID, KEY-SERVER-PRIORITY, KEY-SIZE, KEY-SLOT-ID, LENGTH, LENGTH-CLIENT-ID, LENGTH-SEQUENCE-COUNTER, LIN-IDENTIFIER, LOAD-BALANCING-PRIORITY, LOAD-BALANCING-WEIGHT, LOCAL-PORT-RANGE-END, LOCAL-PORT-RANGE-START, LOGICAL-ADDRESS, LOWER-BOUNDARY, LOWER-CAN-ID, LOWER-MULTIPLICITY, M, MACHINE-ID, MAJOR-PROTOCOL-VERSION, MAJOR-VERSION, MASK, MAX, MAX-AVAILABLE-PERSISTENCY-STORAGE-SPACE, MAX-BASE-TYPE-SIZE, MAX-BLOCK-SIZE, MAX-BS, MAX-BYTES-IN-INTERVAL, MAX-CONVERSATIONS, MAX-CYCLE-REPETITIONS, MAX-DATA-LENGTH, MAX-DELTA-COUNTER, MAX-DELTA-COUNTER-INIT, MAX-DESTINATION-PORT-NUMBER, MAX-DID-TO-READ, MAX-ERROR-STATE-INIT, MAX-ERROR-STATE-INVALID, MAX-ERROR-STATE-VALID, MAX-EVENTS-IN-INTERVAL, MAX-EXP-BS, MAX-FC-WAIT, MAX-INSTANCES, MAX-LENGTH, MAX-MAJOR-VERSION, MAX-MARGIN, MAX-MINOR-VERSION, MAX-NO-NEW-OR-REPEATED-DATA, MAX-NUM-CHANGE-OF-DATA-IDENTFIER-EVENTS, MAX-NUM-COMPARISION-OF-VALUE-EVENTS, MAX-NUMBER-FREEZE-FRAME-RECORDS, MAX-NUMBER-OF-ALLOWED-UPDATES, MAX-NUMBER-OF-CONNECTIONS, MAX-NUMBER-OF-ELEMENTS, MAX-NUMBER-OF-EVENT-ENTRIES, MAX-NUMBER-OF-FILES, MAX-NUMBER-OF-OCCURRENCES, MAX-NUMBER-OF-PARALLEL-TRANSFERS, MAX-NUMBER-OF-REQUEST-CORRECTLY-RECEIVED-RESPONSE-PENDING, MAX-NUMBER-OF-RESP-PENDING-FRAMES, MAX-NUMBER-OF-STORED-DTC-STATUS-CHANGED-EVENTS, MAX-PERIODIC-DID-TO-READ, MAX-PWM-L, MAX-PWM-O, MAX-PWM-S, MAX-REQUEST-BYTES, MAX-RPT-EVENT-ID, MAX-RUN-CYCLE-LOOP, MAX-SAMPLES, MAX-SAMPLES-PER-INSTANCE, MAX-SDU-SIZE, MAX-SERVICE-POINT-ID, MAX-SIZE-TO-FILL, MAX-SLOTS-PER-CYCLE, MAX-SOURCE-ELEMENT, MAX-SOURCE-PORT-NUMBER, MAX-SUPPORTED-DID-LENGTH, MAX-TESTER-CONNECTIONS, MAXIMUM-ALLOWED-SIZE, MAXIMUM-KEY-LENGTH, MAXIMUM-LENGTH, MAXIMUM-MEMORY-CONSUMPTION, MAXIMUM-NUMBER-OF-RETRIES, MAXIMUM-RESIDENCE-TIME, MAXIMUM-SEGMENT-LENGTH, MAXIMUM-SEGMENT-LENGTH-REQUEST, MAXIMUM-SEGMENT-LENGTH-RESPONSE, MAXIMUM-TRANSMISSION-UNIT, MEM-ALIGNMENT, MEM-USAGE, MEMORY-CONSUMPTION, MEMORY-HIGH-ADDRESS, MEMORY-ID, MEMORY-LOW-ADDRESS, MESSAGE-ID, MESSAGE-LINE-NUMBER, MESSAGE-LINK-LENGTH, MESSAGE-LINK-POSITION, MESSAGE-TYPE, META-DATA-LENGTH, METHOD-ID, MIN, MIN-DATA-LENGTH, MIN-DESTINATION-PORT-NUMBER, MIN-LENGTH, MIN-MAJOR-VERSION, MIN-MARGIN, MIN-MINOR-VERSION, MIN-NUMBER-OF-OCCURRENCES, MIN-OK-STATE-INIT, MIN-OK-STATE-INVALID, MIN-OK-STATE-VALID, MIN-PWM-L, MIN-PWM-O, MIN-PWM-S, MIN-RPT-EVENT-ID, MIN-SERVICE-POINT-ID, MIN-SOURCE-PORT-NUMBER, MINIMUM-FIFO-LENGTH, MINIMUM-MEMORY-CONSUMPTION, MINIMUM-NUMBER-OF-REQUESTS, MINIMUM-RX-CONTAINER-QUEUE-SIZE, MINIMUM-SUSTAINED-SIZE, MINIMUM-TX-CONTAINER-QUEUE-SIZE, MINOR-PROTOCOL-VERSION, MINOR-VERSION, MIRROR-SOURCE-LIN-TO-CAN-RANGE-BASE-ID, MIRROR-STATUS-CAN-ID, MODULE-ID, MULTICAST-THRESHOLD, MULTICAST-UDP-PORT, N, N-DATA-SETS, N-ROM-BLOCKS, NAMED-CURVE-ID, NEIGHBOR-CACHE-SIZE, NETWORK-ID, NETWORK-INTERFACE-ID, NETWORK-SEGMENT-ID, NEXT-HEADER, NM-CAR-WAKE-UP-BIT-POSITION, NM-CAR-WAKE-UP-FILTER-NODE-ID, NM-CHANNEL-ID, NM-COORD-CLUSTER, NM-IMMEDIATE-NM-TRANSMISSIONS, NM-INSTANCE-ID, NM-USER-DATA-OFFSET, NRC-VALUE, NUM-FAILED-SECURITY-ACCESS, NUMBER-OF-CONNECTED-CLIENTS, NUMBER-OF-NOTIFIER-SETS, NUMBER-OF-PARALLEL-TCP-SESSIONS, NUMBER-OF-RESTART-ATTEMPTS, NUMBER-OF-WORKERS, NUMERICAL-VALUE, OBD-DTC-NUMBER, OFFSET, OFNS-DATA-ID-LIST, OFS-DATA-ID-LIST, ON-BOARD-MONITOR-ID, ON-TRANSITION-VALUE, OVERRIDE-ID, OWNERSHIP-STRENGTH, PACKAGER-ID, PADDING-VALUE, PARAMETER-ID, PARAMETER-SIZE, PAYLOAD-LENGTH, PAYLOAD-TYPE, PCM-BIT-DEPTH, PDU-COLLECTION-MAX-BUFFER-SIZE, PDU-MAX-LENGTH, PDUR-TP-CHUNK-SIZE, PERIOD, PID, PID-SIZE, PLCA-LOCAL-NODE-COUNT, PLCA-LOCAL-NODE-ID, PLCA-MAX-BURST-COUNT, PLCA-MAX-BURST-TIMER, PLCA-TRANSMIT-OPPORTUNITY-TIMER, PNC-CLUSTER-VECTOR-LENGTH, PNC-FILTER-ARRAY-MASK, PNC-FILTER-DATA-MASK, PNC-IDENTIFIER, PNC-VECTOR-LENGTH, PNC-VECTOR-OFFSET, PNC-WAKEUP-CAN-ID, PNC-WAKEUP-CAN-ID-MASK, PNC-WAKEUP-DATA-MASK, PNC-WAKEUP-DLC, PORT-NUMBER, POSITION, POWER-DOWN-TIME, PRIORITY, PRIORITY-ID, PRIVACY-LEVEL, PRODUCT-ID, PROP-SEG, PROTOCOL, PROTOCOL-VERSION, PROVIDER-RATE-DEVIATION-MAX, PWM-L, PWM-O, PWM-S, QUEUE-LENGTH, QUEUE-SIZE, RATE-CORRECTIONS-PER-MEASUREMENT-DURATION, REACTION-CODE, READER-ENTITY-ID, RECEIVE-WINDOW-MIN, RECORD-NUMBER, RECOVERY-NOTIFICATION-RETRY, REFILL-AMOUNT, REGENERATED-PRIORITY, REMAPPED-CAN-ID, REMOTE-PORT-RANGE-END, REMOTE-PORT-RANGE-START, REPLAY-PROTECTION-WINDOW, REQUEST-DATA-SIZE, REQUEST-SEED-ID, RESPONSE-DATA-SIZE, RETURN-CODE, RID-NUMBER, ROUTINE-INFO, RPT-EVENT-ID, RVF-ACTIVE-PIXELS, RVF-EVENT-DEFAULT, RVF-TOTAL-LINES, RX-MASK, SA-OVER-TIME, SCALING-INFO-SIZE, SCHEDULER-MAX-NUMBER, SDU-TYPE, SECOND-KEY-SLOT-ID, SECONDARY-FRESHNESS-VALUE-ID, SECURED-AREA-LENGTH, SECURED-AREA-OFFSET, SECURITY-ACCESS-LEVEL, SEED-SIZE, SENSOR-INSTANCE-ID, SEQUENCE-COUNTER-JUMP-WIDTH, SERVER-SERVICE-MAJOR-VERSION, SERVER-SERVICE-MINOR-VERSION, SERVICE-FIND-TIME-TO-LIVE, SERVICE-ID, SERVICE-IDENTIFIER, SERVICE-INSTANCE-ID, SERVICE-INTERFACE-ID, SERVICE-OFFER-TIME-TO-LIVE, SESSION-ID, SEVERITY, SIGNATURE-SCHEME-ID, SIZE, SIZE-OF-ARRAY-LENGTH-FIELD, SIZE-OF-ARRAY-LENGTH-FIELDS, SIZE-OF-STRING-LENGTH-FIELD, SIZE-OF-STRING-LENGTH-FIELDS, SIZE-OF-STRUCT-LENGTH-FIELD, SIZE-OF-STRUCT-LENGTH-FIELDS, SIZE-OF-UNION-LENGTH-FIELD, SIZE-OF-UNION-LENGTH-FIELDS, SIZE-OF-UNION-TYPE-SELECTOR-FIELD, SLEEP-REPETITIONS-OF-SLEEP-REQUEST, SLOT-CAPACITY, SLOT-ID, SOFTWARE-CLUSTER-ID, SOMEIP-SERVICE-DISCOVERY-PORT, SOURCE-ADDRESS-CODE, SOURCE-ADDRESS-MASK, SOURCE-ADDRESS-RANGE-END, SOURCE-ADDRESS-RANGE-START, SOURCE-CAN-ID-CODE, SOURCE-CAN-ID-MASK, SOURCE-ID, SOURCE-MAX-ADDRESS, SOURCE-MIN-ADDRESS, SPN, SSP-OFFSET, SSRC, START-ADDRESS, STATUS-ID, STREAM-ID, STREAM-IDENTIFIER, STREAMS-PER-FRAME, SUB-NODE-NUMBER, SUB-TYPE, SUBMESSAGE-TYPE, SUBNET-NUMBER, SUBSCRIBE-EVENTGROUP-RETRY-MAX, SUPERVISED-ENTITY-ID, SUPPLIER-ID, SUPPORT-INFO-BIT, SYNC-COUNTER-INIT, SYNC-DATA-ID-LIST, SYNC-JUMP-WIDTH, TAG-ID, TARGET-MODULE-ID, TCP-IP-ARP-NUM-GRATUITOUS-ARP-ON-STARTUP, TCP-IP-ICMP-V-4-TTL, TCP-IP-ICMP-V-6-HOP-LIMIT, TCP-IP-IP-NUM-FRAGMENTS, TCP-IP-IP-NUM-REASS-DGRAMS, TCP-IP-IP-REASSEMBLY-BUFFER-COUNT, TCP-IP-IP-REASSEMBLY-BUFFER-SIZE, TCP-IP-IP-REASSEMBLY-SEGMENT-COUNT, TCP-IP-IP-TX-FRAGMENT-BUFFER-COUNT, TCP-IP-IP-TX-FRAGMENT-BUFFER-SIZE, TCP-IP-NDP-DEFAULT-ROUTER-LIST-SIZE, TCP-IP-NDP-DELAY-FIRST-PROBE-TIME, TCP-IP-NDP-DESTINATION-CACHE-SIZE, TCP-IP-NDP-MAX-RANDOM-FACTOR, TCP-IP-NDP-MAX-RTR-SOLICITATIONS, TCP-IP-NDP-MIN-RANDOM-FACTOR, TCP-IP-NDP-NUM-MULTICAST-SOLICITATIONS, TCP-IP-NDP-NUM-UNICAST-SOLICITATIONS, TCP-IP-NDP-PREFIX-LIST-SIZE, TCP-IP-NDP-SLAAC-DAD-NUMBER-OF-TRANSMISSIONS, TCP-KEEP-ALIVE-PROBES-MAX, TCP-LOCAL-PORT, TCP-MAX-RTX, TCP-PORT, TCP-RECEIVE-WINDOW-MAX, TCP-REMOTE-PORT, TCP-SYN-MAX-RTX, TCP-TTL, TEST-ID, THRESHOLD-NUMBER, THRESHOLD-SIZE, TIME-LEAP-HEALING-COUNTER, TIME-SEG-1, TIME-SEG-2, TIME-TO-LIVE, TIMEOUT-CHECK, TIMESTAMP-INTERVAL, TLV-DATA-ID, TOLERATED-FAILED-CYCLES, TRAFFIC-CLASS, TRANSLATED-VLAN-ID, TRANSPORT-PRIORITY, TTL, TTL-MAX, TTL-MIN, TX-MASK, TYPE, UDP-COLLECTION-BUFFER-SIZE-THRESHOLD, UDP-LOCAL-PORT, UDP-MIN-TX-BUFFER-SIZE, UDP-PORT, UDP-REMOTE-PORT, UDP-TTL, UDS-DTC-NUMBER, UDS-SERVICE, UNCOMPRESSED-SOFTWARE-CLUSTER-SIZE, UNIQUE-STREAM-ID, UNIT-AND-SCALING-ID, UNUSED-BIT-PATTERN, UPDATE-INDICATION-BIT-POSITION, UPPER-BOUNDARY, UPPER-CAN-ID, UPPER-HEADER-BITS-TO-SHIFT, UPPER-MULTIPLICITY, VALUE, VARIANT-ID, VCID, VEHICLE-ANNOUNCEMENT-COUNT, VENDOR-ID, VERSION, VIN-INVALIDITY-PATTERN, VLAN-ID, VLAN-IDENTIFIER, VLAN-PRIORITY, WAKEUP-REPETITIONS-OF-WAKEUP-REQUEST, WINDOW-SIZE, WINDOW-SIZE-INIT, WINDOW-SIZE-INVALID, WINDOW-SIZE-VALID, WRITER-ENTITY-ID, WRITING-FREQUENCY
    /* 3495 */ ElementSpec {sub_elements: (17175, 17184), sub_element_ver: 3276, attributes: (115, 118), attributes_ver: 192, character_data: None, mode: ContentMode::Sequence, ref_info: (4621, 4622)}, // POSSIBLE-ERROR-REACTION
    /* 3496 */ ElementSpec {sub_elements: (19934, 19936), sub_element_ver: 22, attributes: (0, 2), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // POST-BUILD-VARIANT-CONDITION
    /* 3497 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2905, 2911), attributes_ver: 9361, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // MATCHING-CRITERION-REF, VARIANT-CRITERION-REF
    /* 3498 */ ElementSpec {sub_elements: (16034, 16044), sub_element_ver: 884, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (4622, 4627)}, // POST-BUILD-VARIANT-CRITERION
    /* 3499 */ ElementSpec {sub_elements: (19343, 19346), sub_element_ver: 22, attributes: (0, 2), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // POST-BUILD-VARIANT-CRITERION-VALUE
    /* 3500 */ ElementSpec {sub_elements: (16044, 16054), sub_element_ver: 884, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (4627, 4631)}, // POST-BUILD-VARIANT-CRITERION-VALUE-SET
    /* 3501 */ ElementSpec {sub_elements: (20914, 20915), sub_element_ver: 7, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // POST-BUILD-VARIANT-CRITERION-VALUES
    /* 3502 */ ElementSpec {sub_elements: (3234, 3256), sub_element_ver: 2897, attributes: (115, 118), attributes_ver: 0, character_data: None, mode: ContentMode::Sequence, ref_info: (4631, 4638)}, // PR-PORT-PROTOTYPE
    /* 3503 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2755, 2761), attributes_ver: 9319, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // PROVIDED-REQUIRED-INTERFACE-TREF
    /* 3504 */ ElementSpec {sub_elements: (11234, 11237), sub_element_ver: 7402, attributes: (0, 2), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // DOCUMENTATION-CONTENT
    /* 3505 */ ElementSpec {sub_elements: (12462, 12474), sub_element_ver: 7754, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (4638, 4642)}, // PREDEFINED-VARIANT
    /* 3506 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2035, 2041), attributes_ver: 9391, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // INCLUDED-VARIANT-REF
    /* 3507 */ ElementSpec {sub_elements: (20915, 20916), sub_element_ver: 519, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // INCLUDED-VARIANT-REFS
    /* 3508 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2161, 2167), attributes_ver: 9361, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // POST-BUILD-VARIANT-CRITERION-VALUE-SET-REF
    /* 3509 */ ElementSpec {sub_elements: (20916, 20917), sub_element_ver: 7, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // POST-BUILD-VARIANT-CRITERION-VALUE-SET-REFS
    /* 3510 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2167, 2173), attributes_ver: 9361, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // MEASURABLE-SYSTEM-CONSTANT-VALUES-REF, SW-SYSTEMCONSTANT-VALUE-SET-REF
    /* 3511 */ ElementSpec {sub_elements: (20917, 20918), sub_element_ver: 7, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // SW-SYSTEMCONSTANT-VALUE-SET-REFS
    /* 3512 */ ElementSpec {sub_elements: (17184, 17193), sub_element_ver: 7430, attributes: (115, 118), attributes_ver: 4960, character_data: None, mode: ContentMode::Sequence, ref_info: (4642, 4643)}, // PSK-IDENTITY
    /* 3513 */ ElementSpec {sub_elements: (17193, 17202), sub_element_ver: 3276, attributes: (0, 2), attributes_ver: 134, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // PRIMITIVE-ATTRIBUTE-CONDITION
    /* 3514 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2911, 2917), attributes_ver: 9325, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // ATTRIBUTE-REF
    /* 3515 */ ElementSpec {sub_elements: (7468, 7483), sub_element_ver: 3816, attributes: (115, 118), attributes_ver: 192, character_data: None, mode: ContentMode::Sequence, ref_info: (4643, 4649)}, // PRIMITIVE-ATTRIBUTE-TAILORING
    /* 3516 */ ElementSpec {sub_elements: (19074, 19075), sub_element_ver: 21, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // SUB-ATTRIBUTE-TAILORINGS
    /* 3517 */ ElementSpec {sub_elements: (19936, 19938), sub_element_ver: 301, attributes: (0, 2), attributes_ver: 301, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // PRIVACY-LEVEL
    /* 3518 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2917, 2923), attributes_ver: 3664, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // COMPU-METHOD-REF
    /* 3519 */ ElementSpec {sub_elements: (19346, 19349), sub_element_ver: 7253, attributes: (0, 2), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // PRM-CHAR
    /* 3520 */ ElementSpec {sub_elements: (19938, 19940), sub_element_ver: 22, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // (sub-group)
    /* 3521 */ ElementSpec {sub_elements: (19349, 19352), sub_element_ver: 22, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // (sub-group)
    /* 3522 */ ElementSpec {sub_elements: (19940, 19942), sub_element_ver: 7254, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // (sub-group)
    /* 3523 */ ElementSpec {sub_elements: (19942, 19944), sub_element_ver: 22, attributes: (57, 63), attributes_ver: 621, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // PRMS
    /* 3524 */ ElementSpec {sub_elements: (1892, 1920), sub_element_ver: 1757, attributes: (115, 118), attributes_ver: 1531, character_data: None, mode: ContentMode::Sequence, ref_info: (4649, 4657)}, // PROCESS
    /* 3525 */ ElementSpec {sub_elements: (20918, 20919), sub_element_ver: 19, attributes: (0, 2), attributes_ver: 77, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // PROCESS-ARGUMENT
    /* 3526 */ ElementSpec {sub_elements: (12474, 12486), sub_element_ver: 7766, attributes: (115, 118), attributes_ver: 2229, character_data: None, mode: ContentMode::Sequence, ref_info: (4657, 4661)}, // PROCESS-DESIGN
    /* 3527 */ ElementSpec {sub_elements: (20919, 20920), sub_element_ver: 118, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // DETERMINISTIC-CLIENT-RESOURCE-NEEDSS
    /* 3528 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2053, 2059), attributes_ver: 48, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // EXECUTABLE-REF
    /* 3529 */ ElementSpec {sub_elements: (20920, 20921), sub_element_ver: 6, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // EXECUTABLE-REFS
    /* 3530 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (175, 181), attributes_ver: 2229, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // DESIGN-REF, PROCESS-REF
    /* 3531 */ ElementSpec {sub_elements: (14355, 14366), sub_element_ver: 8139, attributes: (115, 118), attributes_ver: 48, character_data: None, mode: ContentMode::Sequence, ref_info: (4661, 4665)}, // PROCESS-DESIGN-TO-MACHINE-DESIGN-MAPPING
    /* 3532 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2695, 2701), attributes_ver: 48, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // MACHINE-DESIGN-REF
    /* 3533 */ ElementSpec {sub_elements: (16054, 16064), sub_element_ver: 8455, attributes: (115, 118), attributes_ver: 6852, character_data: None, mode: ContentMode::Sequence, ref_info: (4665, 4669)}, // PROCESS-DESIGN-TO-MACHINE-DESIGN-MAPPING-SET
    /* 3534 */ ElementSpec {sub_elements: (526, 527), sub_element_ver: 290, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // PROCESS-DESIGN-TO-MACHINE-DESIGN-MAPPINGS
    /* 3535 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2923, 2929), attributes_ver: 9499, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // DETERMINISTIC-CLIENT-REF
    /* 3536 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2053, 2059), attributes_ver: 9469, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // EXECUTABLE-REF
    /* 3537 */ ElementSpec {sub_elements: (20921, 20922), sub_element_ver: 6, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // EXECUTABLE-REFS
    /* 3538 */ ElementSpec {sub_elements: (16064, 16074), sub_element_ver: 1927, attributes: (115, 118), attributes_ver: 77, character_data: None, mode: ContentMode::Sequence, ref_info: (4669, 4675)}, // PROCESS-EXECUTION-ERROR
    /* 3539 */ ElementSpec {sub_elements: (20922, 20923), sub_element_ver: 538, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // LOG-TRACE-LOG-MODES
    /* 3540 */ ElementSpec {sub_elements: (20923, 20924), sub_element_ver: 1776, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // MODE-DEPENDENT-STARTUP-CONFIGS
    /* 3541 */ ElementSpec {sub_elements: (16074, 16084), sub_element_ver: 7730, attributes: (115, 118), attributes_ver: 5218, character_data: None, mode: ContentMode::Sequence, ref_info: (4675, 4677)}, // PROCESS-PHM-ACTION-ITEM
    /* 3542 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (349, 355), attributes_ver: 7730, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // PROCESS-REF
    /* 3543 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 3350, character_data: Some(708), mode: ContentMode::Characters, ref_info: (0, 0)}, // ACTION-TYPE
    /* 3544 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2221, 2227), attributes_ver: 500, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // SECURITY-EVENT-DEFINITION-REF, SECURITY-EVENT-REF
    /* 3545 */ ElementSpec {sub_elements: (20924, 20925), sub_element_ver: 19, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // SECURITY-EVENT-REFS
    /* 3546 */ ElementSpec {sub_elements: (20925, 20926), sub_element_ver: 48, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // STATE-DEPENDENT-STARTUP-CONFIGS
    /* 3547 */ ElementSpec {sub_elements: (6236, 6252), sub_element_ver: 5256, attributes: (115, 118), attributes_ver: 1153, character_data: None, mode: ContentMode::Sequence, ref_info: (4677, 4678)}, // PROCESS-TO-MACHINE-MAPPING
    /* 3548 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2929, 2935), attributes_ver: 48, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // DESIGN-REF
    /* 3549 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2587, 2593), attributes_ver: 9355, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // MACHINE-REF
    /* 3550 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2215, 2221), attributes_ver: 9355, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // NON-OS-MODULE-INSTANTIATION-REF
    /* 3551 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (349, 355), attributes_ver: 9355, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // CONTAINED-PROCESS-REF, PROCESS-REF
    /* 3552 */ ElementSpec {sub_elements: (16084, 16094), sub_element_ver: 3376, attributes: (115, 118), attributes_ver: 1153, character_data: None, mode: ContentMode::Sequence, ref_info: (4678, 4684)}, // PROCESS-TO-MACHINE-MAPPING-SET
    /* 3553 */ ElementSpec {sub_elements: (20926, 20927), sub_element_ver: 8, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // PROCESS-TO-MACHINE-MAPPINGS
    /* 3554 */ ElementSpec {sub_elements: (20927, 20928), sub_element_ver: 8, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // SHALL-NOT-RUN-ON-REFS
    /* 3555 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2935, 2941), attributes_ver: 9355, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // SHALL-NOT-RUN-ON-REF, SHALL-RUN-ON-REF
    /* 3556 */ ElementSpec {sub_elements: (20928, 20929), sub_element_ver: 8, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // SHALL-RUN-ON-REFS
    /* 3557 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 22, character_data: Some(709), mode: ContentMode::Characters, ref_info: (0, 0)}, // PROCESSING-KIND
    /* 3558 */ ElementSpec {sub_elements: (17202, 17211), sub_element_ver: 1153, attributes: (115, 118), attributes_ver: 1153, character_data: None, mode: ContentMode::Sequence, ref_info: (4684, 4685)}, // PROCESSOR
    /* 3559 */ ElementSpec {sub_elements: (17211, 17220), sub_element_ver: 3949, attributes: (115, 118), attributes_ver: 1153, character_data: None, mode: ContentMode::Sequence, ref_info: (4685, 4686)}, // PROCESSOR-CORE
    /* 3560 */ ElementSpec {sub_elements: (20929, 20930), sub_element_ver: 8, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // CORES
    /* 3561 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 617, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // PROG-CODE
    /* 3562 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 22, character_data: Some(711), mode: ContentMode::Characters, ref_info: (0, 0)}, // PROGRAMMING-LANGUAGE
    /* 3563 */ ElementSpec {sub_elements: (19944, 19946), sub_element_ver: 4021, attributes: (0, 2), attributes_ver: 4021, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // PROVIDED-DDS-EVENT-QOS-PROPS
    /* 3564 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (733, 739), attributes_ver: 4021, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // EVENT-REF
    /* 3565 */ ElementSpec {sub_elements: (6252, 6268), sub_element_ver: 4021, attributes: (115, 118), attributes_ver: 4021, character_data: None, mode: ContentMode::Sequence, ref_info: (4686, 4693)}, // PROVIDED-DDS-SERVICE-INSTANCE
    /* 3566 */ ElementSpec {sub_elements: (20930, 20931), sub_element_ver: 74, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // EVENT-QOS-PROPSS
    /* 3567 */ ElementSpec {sub_elements: (18831, 18835), sub_element_ver: 4237, attributes: (0, 2), attributes_ver: 538, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // RECOVERY-ACTION-IREF
    /* 3568 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (811, 817), attributes_ver: 4237, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // CONTEXT-COMPONENT-PROTOTYPE-REF
    /* 3569 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2743, 2749), attributes_ver: 4237, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // CONTEXT-P-PORT-PROTOTYPE-REF
    /* 3570 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (1033, 1039), attributes_ver: 4237, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // CONTEXT-ROOT-SW-COMPONENT-PROTOTYPE-REF
    /* 3571 */ ElementSpec {sub_elements: (2191, 2218), sub_element_ver: 1948, attributes: (115, 118), attributes_ver: 0, character_data: None, mode: ContentMode::Sequence, ref_info: (4693, 4695)}, // PROVIDED-SERVICE-INSTANCE
    /* 3572 */ ElementSpec {sub_elements: (20931, 20932), sub_element_ver: 0, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // EVENT-HANDLERS
    /* 3573 */ ElementSpec {sub_elements: (19946, 19948), sub_element_ver: 64, attributes: (0, 2), attributes_ver: 64, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // PROVIDED-SERVICE-INSTANCE-REF-CONDITIONAL
    /* 3574 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (847, 853), attributes_ver: 1642, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // PROVIDED-SERVICE-INSTANCE-REF
    /* 3575 */ ElementSpec {sub_elements: (20932, 20933), sub_element_ver: 64, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // SD-SERVER-TIMER-CONFIGS
    /* 3576 */ ElementSpec {sub_elements: (14366, 14377), sub_element_ver: 1642, attributes: (115, 118), attributes_ver: 909, character_data: None, mode: ContentMode::Sequence, ref_info: (4695, 4701)}, // PROVIDED-SERVICE-INSTANCE-TO-SW-CLUSTER-DESIGN-P-PORT-PROTOTYPE-MAPPING
    /* 3577 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2941, 2947), attributes_ver: 1642, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // PROVIDED-SERVICE-INSTANCE-REF
    /* 3578 */ ElementSpec {sub_elements: (2691, 2715), sub_element_ver: 2398, attributes: (115, 118), attributes_ver: 1531, character_data: None, mode: ContentMode::Sequence, ref_info: (4701, 4709)}, // PROVIDED-SOMEIP-SERVICE-INSTANCE
    /* 3579 */ ElementSpec {sub_elements: (20933, 20934), sub_element_ver: 115, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // EVENT-PROPSS
    /* 3580 */ ElementSpec {sub_elements: (20934, 20935), sub_element_ver: 4, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // PROVIDED-EVENT-GROUPS
    /* 3581 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2947, 2953), attributes_ver: 1187, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // SD-SERVER-CONFIG-REF
    /* 3582 */ ElementSpec {sub_elements: (2373, 2387), sub_element_ver: 2179, attributes: (115, 118), attributes_ver: 1531, character_data: None, mode: ContentMode::Sequence, ref_info: (4709, 4717)}, // PROVIDED-USER-DEFINED-SERVICE-INSTANCE
    /* 3583 */ ElementSpec {sub_elements: (16094, 16104), sub_element_ver: 8465, attributes: (115, 118), attributes_ver: 1153, character_data: None, mode: ContentMode::Sequence, ref_info: (4717, 4718)}, // PSK-IDENTITY-TO-KEY-SLOT-MAPPING
    /* 3584 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2953, 2959), attributes_ver: 9337, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // KEY-IDENTITY-REF
    /* 3585 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (985, 991), attributes_ver: 9505, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // KEY-REF
    /* 3586 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 22, character_data: Some(714), mode: ContentMode::Characters, ref_info: (0, 0)}, // PULSE-TEST
    /* 3587 */ ElementSpec {sub_elements: (3779, 3787), sub_element_ver: 6018, attributes: (115, 118), attributes_ver: 637, character_data: None, mode: ContentMode::Sequence, ref_info: (4718, 4720)}, // PURE-LOCAL-TIME-BASE
    /* 3588 */ ElementSpec {sub_elements: (5460, 5477), sub_element_ver: 4754, attributes: (0, 2), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // QUEUED-RECEIVER-COM-SPEC
    /* 3589 */ ElementSpec {sub_elements: (12282, 12292), sub_element_ver: 7658, attributes: (0, 2), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // QUEUED-SENDER-COM-SPEC
    /* 3590 */ ElementSpec {sub_elements: (19948, 19950), sub_element_ver: 22, attributes: (0, 2), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // R-MODE-GROUP-IN-ATOMIC-SWC-INSTANCE-REF
    /* 3591 */ ElementSpec {sub_elements: (19352, 19355), sub_element_ver: 22, attributes: (0, 2), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // DISABLED-MODE-IREF, MODE-IREF
    /* 3592 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2761, 2767), attributes_ver: 9361, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // CONTEXT-PORT-REF, CONTEXT-R-PORT-REF, TARGET-R-PORT-REF
    /* 3593 */ ElementSpec {sub_elements: (19950, 19952), sub_element_ver: 22, attributes: (0, 2), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // OPERATION-IREF
    /* 3594 */ ElementSpec {sub_elements: (19952, 19954), sub_element_ver: 22, attributes: (0, 2), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // R-PORT-IN-COMPOSITION-INSTANCE-REF, REPORTED-SECURITY-EVENT-IREF, REQUESTER-IREF
    /* 3595 */ ElementSpec {sub_elements: (3256, 3278), sub_element_ver: 2919, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (4720, 4726)}, // R-PORT-PROTOTYPE
    /* 3596 */ ElementSpec {sub_elements: (18141, 18147), sub_element_ver: 9036, attributes: (0, 2), attributes_ver: 1153, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // CHECKPOINT-IREF, EXECUTABLE-REQUIRED-PORT-IREF, HEALTH-CHANNEL-IREF, MODE-REPORTER-PORT-IREF, PORT-PROTOTYPE-IREF, R-PORT-PROTOTYPE-IN-EXECUTABLE-IREF, R-PORT-PROTOTYPE-IREF, REPORTING-PORT-PROTOTYPE-IREF, REQUIRED-SERVICE-PORT-IREF, STATE-REQUEST-PORT-IREF, SUPERVISED-ENTITY-IREF, TARGET-PHM-SUPERVISED-ENTITY-IREF, TIME-SYNC-PORT-PROTOTYPE-IREF, TIME-SYNC-R-PORT-PROTOTYPE-IREF
    /* 3597 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (811, 817), attributes_ver: 9355, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // CONTEXT-COMPONENT-PROTOTYPE-REF
    /* 3598 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (1033, 1039), attributes_ver: 9355, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // CONTEXT-ROOT-SW-COMPONENT-PROTOTYPE-REF
    /* 3599 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (247, 253), attributes_ver: 9355, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // TARGET-R-PORT-PROTOTYPE-REF
    /* 3600 */ ElementSpec {sub_elements: (19355, 19358), sub_element_ver: 909, attributes: (0, 2), attributes_ver: 64, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // REQUIRED-PORT-PROTOTYPE-IREF, SW-CLUSTER-DESIGN-REQUIRED-PORT-IREF
    /* 3601 */ ElementSpec {sub_elements: (19358, 19361), sub_element_ver: 9211, attributes: (0, 2), attributes_ver: 9533, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // INSTANCE-ID-PROPS, R-PORT-PROTOTYPE-PROPS
    /* 3602 */ ElementSpec {sub_elements: (19954, 19956), sub_element_ver: 22, attributes: (0, 2), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // R-TRIGGER-IN-ATOMIC-SWC-INSTANCE-REF, REQUIRED-TRIGGER-IREF, TRIGGER-IREF
    /* 3603 */ ElementSpec {sub_elements: (19956, 19958), sub_element_ver: 22, attributes: (0, 2), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // DATA-IREF
    /* 3604 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 0, character_data: Some(716), mode: ContentMode::Characters, ref_info: (0, 0)}, // RAM-BLOCK-STATUS-CONTROL
    /* 3605 */ ElementSpec {sub_elements: (10436, 10449), sub_element_ver: 7086, attributes: (115, 118), attributes_ver: 0, character_data: None, mode: ContentMode::Sequence, ref_info: (4726, 4730)}, // RAPID-PROTOTYPING-SCENARIO
    /* 3606 */ ElementSpec {sub_elements: (20935, 20936), sub_element_ver: 21, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // RPT-PROFILES
    /* 3607 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2959, 2965), attributes_ver: 9319, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // HOST-SYSTEM-REF, RPT-SYSTEM-REF
    /* 3608 */ ElementSpec {sub_elements: (3190, 3204), sub_element_ver: 1927, attributes: (115, 118), attributes_ver: 77, character_data: None, mode: ContentMode::Sequence, ref_info: (4730, 4740)}, // RAW-DATA-STREAM-CLIENT-INTERFACE
    /* 3609 */ ElementSpec {sub_elements: (14377, 14388), sub_element_ver: 8150, attributes: (115, 118), attributes_ver: 909, character_data: None, mode: ContentMode::Sequence, ref_info: (4740, 4746)}, // RAW-DATA-STREAM-DEPLOYMENT
    /* 3610 */ ElementSpec {sub_elements: (20936, 20937), sub_element_ver: 538, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // METHOD-DEPLOYMENTS
    /* 3611 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2965, 2971), attributes_ver: 1642, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // RAW-DATA-STREAM-INTERFACE-REF
    /* 3612 */ ElementSpec {sub_elements: (17608, 17616), sub_element_ver: 4093, attributes: (0, 2), attributes_ver: 81, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // UNICAST-CREDENTIALS
    /* 3613 */ ElementSpec {sub_elements: (17608, 17615), sub_element_ver: 4093, attributes: (0, 2), attributes_ver: 81, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // MULTICAST-CREDENTIALS, UNICAST-UDP-CREDENTIALS
    /* 3614 */ ElementSpec {sub_elements: (14388, 14399), sub_element_ver: 1642, attributes: (115, 118), attributes_ver: 909, character_data: None, mode: ContentMode::Sequence, ref_info: (4746, 4751)}, // RAW-DATA-STREAM-GRANT-DESIGN
    /* 3615 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2971, 2977), attributes_ver: 1642, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // RAW-DATA-STREAM-REF
    /* 3616 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2977, 2983), attributes_ver: 1642, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // DESIGN-REF
    /* 3617 */ ElementSpec {sub_elements: (4789, 4807), sub_element_ver: 4237, attributes: (115, 118), attributes_ver: 2892, character_data: None, mode: ContentMode::Sequence, ref_info: (4751, 4760)}, // RAW-DATA-STREAM-INTERFACE
    /* 3618 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2983, 2989), attributes_ver: 1642, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // DEPLOYMENT-REF
    /* 3619 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (349, 355), attributes_ver: 1642, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // PROCESS-REF
    /* 3620 */ ElementSpec {sub_elements: (16104, 16114), sub_element_ver: 4237, attributes: (115, 118), attributes_ver: 2892, character_data: None, mode: ContentMode::Sequence, ref_info: (4760, 4761)}, // RAW-DATA-STREAM-METHOD-DEPLOYMENT
    /* 3621 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (673, 679), attributes_ver: 4237, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // METHOD-REF, TARGET-METHOD-REF
    /* 3622 */ ElementSpec {sub_elements: (20937, 20938), sub_element_ver: 538, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // METHOD-REFS
    /* 3623 */ ElementSpec {sub_elements: (3190, 3204), sub_element_ver: 1927, attributes: (115, 118), attributes_ver: 77, character_data: None, mode: ContentMode::Sequence, ref_info: (4761, 4771)}, // RAW-DATA-STREAM-SERVER-INTERFACE
    /* 3624 */ ElementSpec {sub_elements: (17220, 17229), sub_element_ver: 803, attributes: (0, 2), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // RECEIVER-ANNOTATION
    /* 3625 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 488, character_data: Some(720), mode: ContentMode::Characters, ref_info: (0, 0)}, // RECEIVER-CAPABILITY
    /* 3626 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (409, 415), attributes_ver: 9349, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // EXTERNAL-REPLACEMENT-REF, ROOT-DATA-PROTOTYPE-REF
    /* 3627 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 77, character_data: Some(721), mode: ContentMode::Characters, ref_info: (0, 0)}, // RECEIVER-INTENT
    /* 3628 */ ElementSpec {sub_elements: (19958, 19960), sub_element_ver: 77, attributes: (0, 2), attributes_ver: 77, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // RECEPTION-PROPS
    /* 3629 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 22, character_data: Some(722), mode: ContentMode::Characters, ref_info: (0, 0)}, // SW-RECORD-LAYOUT-GROUP-FROM, SW-RECORD-LAYOUT-GROUP-TO
    /* 3630 */ ElementSpec {sub_elements: (19361, 19364), sub_element_ver: 22, attributes: (0, 2), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // RECORD-VALUE-SPECIFICATION
    /* 3631 */ ElementSpec {sub_elements: (11118, 11130), sub_element_ver: 7598, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // ELEMENTS, FIELDS
    /* 3632 */ ElementSpec {sub_elements: (14399, 14410), sub_element_ver: 8161, attributes: (115, 118), attributes_ver: 77, character_data: None, mode: ContentMode::Sequence, ref_info: (4771, 4777)}, // RECOVERY-NOTIFICATION
    /* 3633 */ ElementSpec {sub_elements: (12486, 12498), sub_element_ver: 1927, attributes: (115, 118), attributes_ver: 77, character_data: None, mode: ContentMode::Sequence, ref_info: (4777, 4783)}, // RECOVERY-NOTIFICATION-TO-P-PORT-PROTOTYPE-MAPPING
    /* 3634 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2269, 2275), attributes_ver: 500, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // RECOVERY-NOTIFICATION-REF
    /* 3635 */ ElementSpec {sub_elements: (3779, 3787), sub_element_ver: 4237, attributes: (115, 118), attributes_ver: 2892, character_data: None, mode: ContentMode::Sequence, ref_info: (4783, 4785)}, // RECOVERY-VIA-APPLICATION-ACTION
    /* 3636 */ ElementSpec {sub_elements: (12498, 12510), sub_element_ver: 4237, attributes: (115, 118), attributes_ver: 2892, character_data: None, mode: ContentMode::Sequence, ref_info: (4785, 4790)}, // RECOVERY-VIA-APPLICATION-ACTION-TO-CLIENT-SERVER-OPERATION-MAPPING
    /* 3637 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (349, 355), attributes_ver: 4237, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // PROCESS-REF
    /* 3638 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2989, 2995), attributes_ver: 4237, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // RECOVERY-VIA-APPLICATION-ACTION-REF
    /* 3639 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 0, character_data: Some(725), mode: ContentMode::Characters, ref_info: (0, 0)}, // REENTRANCY-LEVEL
    /* 3640 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (175, 180), attributes_ver: 9439, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // REF
    /* 3641 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 0), attributes_ver: 0, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // REF
    /* 3642 */ ElementSpec {sub_elements: (17822, 17829), sub_element_ver: 8905, attributes: (0, 2), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // REFERENCE-BASE
    /* 3643 */ ElementSpec {sub_elements: (20938, 20939), sub_element_ver: 519, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // GLOBAL-ELEMENTS
    /* 3644 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2995, 3001), attributes_ver: 9319, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // GLOBAL-IN-PACKAGE-REF
    /* 3645 */ ElementSpec {sub_elements: (20939, 20940), sub_element_ver: 0, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // GLOBAL-IN-PACKAGE-REFS
    /* 3646 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2995, 3001), attributes_ver: 9361, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // PACKAGE-REF
    /* 3647 */ ElementSpec {sub_elements: (18835, 18839), sub_element_ver: 192, attributes: (0, 2), attributes_ver: 134, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // REFERENCE-CONDITION
    /* 3648 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (3001, 3007), attributes_ver: 9325, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // REFERENCE-REF
    /* 3649 */ ElementSpec {sub_elements: (8814, 8828), sub_element_ver: 3816, attributes: (115, 118), attributes_ver: 192, character_data: None, mode: ContentMode::Sequence, ref_info: (4790, 4796)}, // REFERENCE-TAILORING
    /* 3650 */ ElementSpec {sub_elements: (19960, 19962), sub_element_ver: 134, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // CLASS-TAILORINGS, TYPE-TAILORINGS
    /* 3651 */ ElementSpec {sub_elements: (19364, 19367), sub_element_ver: 22, attributes: (0, 2), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // REFERENCE-VALUE-SPECIFICATION
    /* 3652 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 0), attributes_ver: 0, character_data: Some(728), mode: ContentMode::Characters, ref_info: (0, 0)}, // ACL-OBJECT-CLASS, GLOBAL-ELEMENT
    /* 3653 */ ElementSpec {sub_elements: (19962, 19964), sub_element_ver: 120, attributes: (0, 2), attributes_ver: 120, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // SDXF
    /* 3654 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (211, 217), attributes_ver: 9331, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // REFERRABLE-REF
    /* 3655 */ ElementSpec {sub_elements: (20940, 20941), sub_element_ver: 354, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // SHORT-NAME-FRAGMENTS
    /* 3656 */ ElementSpec {sub_elements: (20941, 20942), sub_element_ver: 7, attributes: (0, 2), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // RELATIVE-TOLERANCE
    /* 3657 */ ElementSpec {sub_elements: (18839, 18843), sub_element_ver: 12, attributes: (0, 2), attributes_ver: 12, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // REMOTE-ENDPOINT-CONFIGURATION
    /* 3658 */ ElementSpec {sub_elements: (19964, 19966), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 0, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // REMOTING-TECHNOLOGY
    /* 3659 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 0, character_data: Some(729), mode: ContentMode::Characters, ref_info: (0, 0)}, // NAME
    /* 3660 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 120, character_data: Some(730), mode: ContentMode::Characters, ref_info: (0, 0)}, // REPORT-BEHAVIOR
    /* 3661 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 0, character_data: Some(731), mode: ContentMode::Characters, ref_info: (0, 0)}, // REQUEST-METHOD
    /* 3662 */ ElementSpec {sub_elements: (19966, 19968), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 0, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // REQUEST-RESPONSE-DELAY
    /* 3663 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 9, character_data: Some(732), mode: ContentMode::Characters, ref_info: (0, 0)}, // REQUEST-TYPE
    /* 3664 */ ElementSpec {sub_elements: (19968, 19970), sub_element_ver: 4021, attributes: (0, 2), attributes_ver: 4021, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // REQUIRED-DDS-EVENT-QOS-PROPS
    /* 3665 */ ElementSpec {sub_elements: (6268, 6284), sub_element_ver: 4021, attributes: (115, 118), attributes_ver: 4021, character_data: None, mode: ContentMode::Sequence, ref_info: (4796, 4803)}, // REQUIRED-DDS-SERVICE-INSTANCE
    /* 3666 */ ElementSpec {sub_elements: (20942, 20943), sub_element_ver: 74, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // EVENT-QOS-PROPSS
    /* 3667 */ ElementSpec {sub_elements: (18424, 18429), sub_element_ver: 9079, attributes: (0, 2), attributes_ver: 48, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // METHOD-IREF
    /* 3668 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (247, 253), attributes_ver: 1642, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // CONTEXT-R-PORT-PROTOTYPE-REF, TARGET-R-PORT-PROTOTYPE-REF
    /* 3669 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (673, 679), attributes_ver: 48, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // TARGET-METHOD-REF
    /* 3670 */ ElementSpec {sub_elements: (14410, 14421), sub_element_ver: 1642, attributes: (115, 118), attributes_ver: 909, character_data: None, mode: ContentMode::Sequence, ref_info: (4803, 4809)}, // REQUIRED-SERVICE-INSTANCE-TO-SW-CLUSTER-DESIGN-R-PORT-PROTOTYPE-MAPPING
    /* 3671 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (3007, 3013), attributes_ver: 1642, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // REQUIRED-SERVICE-INSTANCE-REF
    /* 3672 */ ElementSpec {sub_elements: (2448, 2473), sub_element_ver: 2179, attributes: (115, 118), attributes_ver: 1531, character_data: None, mode: ContentMode::Sequence, ref_info: (4809, 4817)}, // REQUIRED-SOMEIP-SERVICE-INSTANCE
    /* 3673 */ ElementSpec {sub_elements: (20312, 20313), sub_element_ver: 2121, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // BLACKLISTED-VERSIONS
    /* 3674 */ ElementSpec {sub_elements: (20943, 20944), sub_element_ver: 115, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // METHOD-REQUEST-PROPSS, METHOD-RESPONSE-PROPSS
    /* 3675 */ ElementSpec {sub_elements: (20944, 20945), sub_element_ver: 4, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // REQUIRED-EVENT-GROUPS
    /* 3676 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (3013, 3019), attributes_ver: 1187, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // SD-CLIENT-CONFIG-REF
    /* 3677 */ ElementSpec {sub_elements: (2373, 2387), sub_element_ver: 2179, attributes: (115, 118), attributes_ver: 1531, character_data: None, mode: ContentMode::Sequence, ref_info: (4817, 4825)}, // REQUIRED-USER-DEFINED-SERVICE-INSTANCE
    /* 3678 */ ElementSpec {sub_elements: (6284, 6300), sub_element_ver: 5272, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (4825, 4826)}, // BSW-RESOURCE-ESTIMATION, RESOURCE-CONSUMPTION, RTE-RESOURCE-ESTIMATION
    /* 3679 */ ElementSpec {sub_elements: (20945, 20946), sub_element_ver: 21, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // ACCESS-COUNT-SETS
    /* 3680 */ ElementSpec {sub_elements: (18843, 18847), sub_element_ver: 29, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // EXECUTION-TIMES
    /* 3681 */ ElementSpec {sub_elements: (19367, 19370), sub_element_ver: 22, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // HEAP-USAGES
    /* 3682 */ ElementSpec {sub_elements: (20946, 20947), sub_element_ver: 7, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // MEMORY-SECTIONS
    /* 3683 */ ElementSpec {sub_elements: (20947, 20948), sub_element_ver: 6, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // MEMORY-USAGES
    /* 3684 */ ElementSpec {sub_elements: (20948, 20949), sub_element_ver: 386, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // SECTION-NAME-PREFIXS
    /* 3685 */ ElementSpec {sub_elements: (19370, 19373), sub_element_ver: 22, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // STACK-USAGES
    /* 3686 */ ElementSpec {sub_elements: (20949, 20950), sub_element_ver: 2121, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // SYSTEM-MEMORY-USAGES
    /* 3687 */ ElementSpec {sub_elements: (16114, 16124), sub_element_ver: 8475, attributes: (115, 118), attributes_ver: 1531, character_data: None, mode: ContentMode::Sequence, ref_info: (4826, 4827)}, // RESOURCE-GROUP
    /* 3688 */ ElementSpec {sub_elements: (20950, 20951), sub_element_ver: 92, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // ARGUMENTS
    /* 3689 */ ElementSpec {sub_elements: (17229, 17238), sub_element_ver: 5288, attributes: (115, 118), attributes_ver: 5288, character_data: None, mode: ContentMode::Sequence, ref_info: (4827, 4832)}, // REST-ARRAY-PROPERTY-DEF
    /* 3690 */ ElementSpec {sub_elements: (18148, 18153), sub_element_ver: 5288, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Choice, ref_info: (0, 0)}, // ELEMENT
    /* 3691 */ ElementSpec {sub_elements: (3779, 3787), sub_element_ver: 5288, attributes: (115, 118), attributes_ver: 5288, character_data: None, mode: ContentMode::Sequence, ref_info: (4832, 4838)}, // REST-BOOLEAN-PROPERTY-DEF
    /* 3692 */ ElementSpec {sub_elements: (16124, 16134), sub_element_ver: 5868, attributes: (115, 118), attributes_ver: 5288, character_data: None, mode: ContentMode::Sequence, ref_info: (4838, 4839)}, // REST-ELEMENT-DEF
    /* 3693 */ ElementSpec {sub_elements: (18847, 18851), sub_element_ver: 5288, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // ENDPOINTS
    /* 3694 */ ElementSpec {sub_elements: (18147, 18153), sub_element_ver: 5288, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // PROPERTYS
    /* 3695 */ ElementSpec {sub_elements: (19970, 19972), sub_element_ver: 546, attributes: (0, 2), attributes_ver: 546, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // REST-ENDPOINT-ARGUMENT
    /* 3696 */ ElementSpec {sub_elements: (18147, 18153), sub_element_ver: 5288, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Choice, ref_info: (0, 0)}, // PARAMETER
    /* 3697 */ ElementSpec {sub_elements: (14421, 14432), sub_element_ver: 5868, attributes: (115, 118), attributes_ver: 5288, character_data: None, mode: ContentMode::Sequence, ref_info: (4839, 4843)}, // REST-ENDPOINT-DELETE
    /* 3698 */ ElementSpec {sub_elements: (14421, 14432), sub_element_ver: 5868, attributes: (115, 118), attributes_ver: 5288, character_data: None, mode: ContentMode::Sequence, ref_info: (4843, 4847)}, // REST-ENDPOINT-GET
    /* 3699 */ ElementSpec {sub_elements: (14421, 14432), sub_element_ver: 5868, attributes: (115, 118), attributes_ver: 5288, character_data: None, mode: ContentMode::Sequence, ref_info: (4847, 4851)}, // REST-ENDPOINT-POST
    /* 3700 */ ElementSpec {sub_elements: (14421, 14432), sub_element_ver: 5868, attributes: (115, 118), attributes_ver: 5288, character_data: None, mode: ContentMode::Sequence, ref_info: (4851, 4855)}, // REST-ENDPOINT-PUT
    /* 3701 */ ElementSpec {sub_elements: (20951, 20952), sub_element_ver: 92, attributes: (0, 2), attributes_ver: 546, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // REST-ENUMERATOR-DEF
    /* 3702 */ ElementSpec {sub_elements: (6300, 6316), sub_element_ver: 5288, attributes: (115, 118), attributes_ver: 5288, character_data: None, mode: ContentMode::Sequence, ref_info: (4855, 4860)}, // REST-HTTP-PORT-PROTOTYPE-MAPPING
    /* 3703 */ ElementSpec {sub_elements: (20952, 20953), sub_element_ver: 2392, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // ACCEPTS-ENCODINGS
    /* 3704 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (373, 379), attributes_ver: 5294, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // HOST-REF
    /* 3705 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (349, 355), attributes_ver: 5294, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // PROCESS-REF
    /* 3706 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2023, 2029), attributes_ver: 5294, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // TLS-SECURE-COM-PROPS-REF
    /* 3707 */ ElementSpec {sub_elements: (12510, 12522), sub_element_ver: 5868, attributes: (115, 118), attributes_ver: 5288, character_data: None, mode: ContentMode::Sequence, ref_info: (4860, 4867)}, // REST-INTEGER-PROPERTY-DEF
    /* 3708 */ ElementSpec {sub_elements: (12510, 12522), sub_element_ver: 5868, attributes: (115, 118), attributes_ver: 5288, character_data: None, mode: ContentMode::Sequence, ref_info: (4867, 4874)}, // REST-NUMBER-PROPERTY-DEF
    /* 3709 */ ElementSpec {sub_elements: (16134, 16144), sub_element_ver: 5868, attributes: (115, 118), attributes_ver: 5288, character_data: None, mode: ContentMode::Sequence, ref_info: (4874, 4880)}, // REST-OBJECT-REF
    /* 3710 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (3019, 3025), attributes_ver: 5294, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // ELEMENT-REF, OBJECT-REF
    /* 3711 */ ElementSpec {sub_elements: (20953, 20954), sub_element_ver: 92, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // OBJECT-REFS
    /* 3712 */ ElementSpec {sub_elements: (12522, 12534), sub_element_ver: 5868, attributes: (115, 118), attributes_ver: 5288, character_data: None, mode: ContentMode::Sequence, ref_info: (4880, 4881)}, // REST-RESOURCE-DEF
    /* 3713 */ ElementSpec {sub_elements: (20954, 20955), sub_element_ver: 92, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // ELEMENTS
    /* 3714 */ ElementSpec {sub_elements: (20955, 20956), sub_element_ver: 92, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // RESOURCES
    /* 3715 */ ElementSpec {sub_elements: (20956, 20957), sub_element_ver: 92, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // SYSTEM-TRIGGERED-EVENTS
    /* 3716 */ ElementSpec {sub_elements: (7483, 7498), sub_element_ver: 5868, attributes: (115, 118), attributes_ver: 5288, character_data: None, mode: ContentMode::Sequence, ref_info: (4881, 4890)}, // REST-SERVICE-INTERFACE
    /* 3717 */ ElementSpec {sub_elements: (16144, 16154), sub_element_ver: 5868, attributes: (115, 118), attributes_ver: 5288, character_data: None, mode: ContentMode::Sequence, ref_info: (4890, 4896)}, // REST-STRING-PROPERTY-DEF
    /* 3718 */ ElementSpec {sub_elements: (20957, 20958), sub_element_ver: 92, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // ENUMS
    /* 3719 */ ElementSpec {sub_elements: (20958, 20959), sub_element_ver: 92, attributes: (0, 2), attributes_ver: 546, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // REST-SYSTEM-TRIGGERED-EVENT
    /* 3720 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 22, character_data: Some(737), mode: ContentMode::Characters, ref_info: (0, 0)}, // RESUME-POSITION
    /* 3721 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 22, character_data: Some(738), mode: ContentMode::Characters, ref_info: (0, 0)}, // AR-RELEASE-VERSION, ECU-EXTRACT-VERSION, ECUC-DEF-EDITION, MAXIMUM-SUPPORTED-UCM-MASTER-VERSION, MAXIMUM-SUPPORTED-UCM-VERSION, MINIMUM-SUPPORTED-UCM-MASTER-VERSION, MINIMUM-SUPPORTED-UCM-VERSION, PRODUCT-RELEASE, REVISION-LABEL, REVISION-LABEL-P-1, REVISION-LABEL-P-2, SW-VERSION, SYSTEM-VERSION
    /* 3722 */ ElementSpec {sub_elements: (19373, 19376), sub_element_ver: 9214, attributes: (0, 2), attributes_ver: 656, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // ROLE-BASED-BSW-MODULE-ENTRY-ASSIGNMENT
    /* 3723 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (547, 553), attributes_ver: 9349, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // ASSIGNED-ENTRY-REF
    /* 3724 */ ElementSpec {sub_elements: (18429, 18434), sub_element_ver: 9084, attributes: (0, 2), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // ROLE-BASED-DATA-ASSIGNMENT, WRITING-STRATEGY-ROLE
    /* 3725 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (3025, 3031), attributes_ver: 9361, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // PER-INSTANCE-MEMORY-REF, USED-PIM-REF
    /* 3726 */ ElementSpec {sub_elements: (19376, 19379), sub_element_ver: 140, attributes: (0, 2), attributes_ver: 120, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // ROLE-BASED-DATA-TYPE-ASSIGNMENT
    /* 3727 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2413, 2419), attributes_ver: 9331, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // USED-IMPLEMENTATION-DATA-TYPE-REF
    /* 3728 */ ElementSpec {sub_elements: (18851, 18855), sub_element_ver: 9145, attributes: (0, 2), attributes_ver: 0, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // ROLE-BASED-MC-DATA-ASSIGNMENT
    /* 3729 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2605, 2611), attributes_ver: 9319, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // MC-DATA-INSTANCE-REF
    /* 3730 */ ElementSpec {sub_elements: (20959, 20960), sub_element_ver: 0, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // MC-DATA-INSTANCE-REFS
    /* 3731 */ ElementSpec {sub_elements: (19379, 19382), sub_element_ver: 22, attributes: (0, 2), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // ROLE-BASED-PORT-ASSIGNMENT
    /* 3732 */ ElementSpec {sub_elements: (19972, 19974), sub_element_ver: 77, attributes: (0, 2), attributes_ver: 77, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // ROLE-BASED-RESOURCE-DEPENDENCY
    /* 3733 */ ElementSpec {sub_elements: (16154, 16164), sub_element_ver: 8485, attributes: (115, 118), attributes_ver: 909, character_data: None, mode: ContentMode::Sequence, ref_info: (4896, 4899)}, // ROOT-COMPOSITION
    /* 3734 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2725, 2731), attributes_ver: 8720, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // APPLICATION-TYPE-REF
    /* 3735 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2725, 2731), attributes_ver: 3664, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // APPLICATION-TYPE-TREF
    /* 3736 */ ElementSpec {sub_elements: (17238, 17247), sub_element_ver: 1531, attributes: (115, 118), attributes_ver: 1531, character_data: None, mode: ContentMode::Sequence, ref_info: (4899, 4902)}, // ROOT-SW-COMPONENT-PROTOTYPE
    /* 3737 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2725, 2731), attributes_ver: 9469, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // APPLICATION-TYPE-TREF
    /* 3738 */ ElementSpec {sub_elements: (12534, 12546), sub_element_ver: 1082, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (4902, 4905)}, // ROOT-SW-COMPOSITION-PROTOTYPE
    /* 3739 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (3031, 3037), attributes_ver: 9361, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // CALIBRATION-PARAMETER-VALUE-SET-REF
    /* 3740 */ ElementSpec {sub_elements: (20960, 20961), sub_element_ver: 7, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // CALIBRATION-PARAMETER-VALUE-SET-REFS
    /* 3741 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (3037, 3043), attributes_ver: 9361, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // FLAT-MAP-REF
    /* 3742 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (823, 829), attributes_ver: 9361, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // SOFTWARE-COMPOSITION-TREF
    /* 3743 */ ElementSpec {sub_elements: (10449, 10462), sub_element_ver: 3721, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (4905, 4907)}, // ROUGH-ESTIMATE-HEAP-USAGE
    /* 3744 */ ElementSpec {sub_elements: (4259, 4278), sub_element_ver: 3797, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (4907, 4909)}, // ROUGH-ESTIMATE-OF-EXECUTION-TIME
    /* 3745 */ ElementSpec {sub_elements: (8828, 8842), sub_element_ver: 3721, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (4909, 4911)}, // ROUGH-ESTIMATE-STACK-USAGE
    /* 3746 */ ElementSpec {sub_elements: (19974, 19976), sub_element_ver: 22, attributes: (139, 147), attributes_ver: 9304, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // ROW
    /* 3747 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 134, character_data: Some(742), mode: ContentMode::Characters, ref_info: (0, 0)}, // RPT-HOOK-ACCESS, RPT-READ-ACCESS, RPT-WRITE-ACCESS
    /* 3748 */ ElementSpec {sub_elements: (12546, 12558), sub_element_ver: 3816, attributes: (115, 118), attributes_ver: 192, character_data: None, mode: ContentMode::Sequence, ref_info: (4911, 4912)}, // RPT-COMPONENT
    /* 3749 */ ElementSpec {sub_elements: (20961, 20962), sub_element_ver: 21, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // RPT-EXECUTABLE-ENTITYS
    /* 3750 */ ElementSpec {sub_elements: (6316, 6332), sub_element_ver: 5304, attributes: (115, 118), attributes_ver: 0, character_data: None, mode: ContentMode::Sequence, ref_info: (4912, 4913)}, // RPT-CONTAINER
    /* 3751 */ ElementSpec {sub_elements: (20962, 20963), sub_element_ver: 0, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // BY-PASS-POINT-IREFS
    /* 3752 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (3043, 3049), attributes_ver: 9325, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // EXPLICIT-RPT-PROFILE-SELECTION-REF
    /* 3753 */ ElementSpec {sub_elements: (20963, 20964), sub_element_ver: 21, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // EXPLICIT-RPT-PROFILE-SELECTION-REFS
    /* 3754 */ ElementSpec {sub_elements: (20964, 20965), sub_element_ver: 0, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // RPT-CONTAINERS
    /* 3755 */ ElementSpec {sub_elements: (20965, 20966), sub_element_ver: 0, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // RPT-HOOKS
    /* 3756 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 134, character_data: Some(743), mode: ContentMode::Characters, ref_info: (0, 0)}, // RPT-ENABLER-IMPL-TYPE, STIM-ENABLER
    /* 3757 */ ElementSpec {sub_elements: (10462, 10475), sub_element_ver: 3816, attributes: (115, 118), attributes_ver: 192, character_data: None, mode: ContentMode::Sequence, ref_info: (4913, 4914)}, // RPT-EXECUTABLE-ENTITY
    /* 3758 */ ElementSpec {sub_elements: (6332, 6348), sub_element_ver: 3816, attributes: (115, 118), attributes_ver: 192, character_data: None, mode: ContentMode::Sequence, ref_info: (4914, 4915)}, // RPT-EXECUTABLE-ENTITY-EVENT
    /* 3759 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (3049, 3055), attributes_ver: 9325, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // EXECUTION-CONTEXT-REF
    /* 3760 */ ElementSpec {sub_elements: (20966, 20967), sub_element_ver: 21, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // EXECUTION-CONTEXT-REFS
    /* 3761 */ ElementSpec {sub_elements: (20967, 20968), sub_element_ver: 21, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // RPT-SERVICE-POINT-POST-REFS
    /* 3762 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (3055, 3061), attributes_ver: 9325, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // RPT-SERVICE-POINT-POST-REF, RPT-SERVICE-POINT-PRE-REF
    /* 3763 */ ElementSpec {sub_elements: (20968, 20969), sub_element_ver: 21, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // RPT-SERVICE-POINT-PRE-REFS
    /* 3764 */ ElementSpec {sub_elements: (18855, 18859), sub_element_ver: 192, attributes: (0, 2), attributes_ver: 134, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // RPT-EXECUTABLE-ENTITY-PROPERTIES
    /* 3765 */ ElementSpec {sub_elements: (20969, 20970), sub_element_ver: 21, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // RPT-EXECUTABLE-ENTITY-EVENTS
    /* 3766 */ ElementSpec {sub_elements: (20795, 20796), sub_element_ver: 21, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // MC-DATA-ASSIGNMENTS, RPT-READS, RPT-WRITES
    /* 3767 */ ElementSpec {sub_elements: (777, 785), sub_element_ver: 3276, attributes: (115, 118), attributes_ver: 192, character_data: None, mode: ContentMode::Sequence, ref_info: (4915, 4916)}, // RPT-EXECUTION-CONTEXT
    /* 3768 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 134, character_data: Some(745), mode: ContentMode::Characters, ref_info: (0, 0)}, // RPT-EXECUTION-CONTROL
    /* 3769 */ ElementSpec {sub_elements: (18434, 18439), sub_element_ver: 691, attributes: (0, 2), attributes_ver: 0, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // RPT-HOOK
    /* 3770 */ ElementSpec {sub_elements: (20154, 20155), sub_element_ver: 0, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // SDGS
    /* 3771 */ ElementSpec {sub_elements: (19976, 19978), sub_element_ver: 134, attributes: (0, 2), attributes_ver: 134, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // RP-IMPL-POLICY, RPT-IMPL-POLICY
    /* 3772 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 134, character_data: Some(746), mode: ContentMode::Characters, ref_info: (0, 0)}, // RPT-PREPARATION-LEVEL
    /* 3773 */ ElementSpec {sub_elements: (10475, 10488), sub_element_ver: 3816, attributes: (115, 118), attributes_ver: 192, character_data: None, mode: ContentMode::Sequence, ref_info: (4916, 4917)}, // RPT-PROFILE
    /* 3774 */ ElementSpec {sub_elements: (14432, 14443), sub_element_ver: 3276, attributes: (115, 118), attributes_ver: 192, character_data: None, mode: ContentMode::Sequence, ref_info: (4917, 4918)}, // RPT-SERVICE-POINT
    /* 3775 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 134, character_data: Some(749), mode: ContentMode::Characters, ref_info: (0, 0)}, // RPT-SERVICE-POINT
    /* 3776 */ ElementSpec {sub_elements: (19382, 19385), sub_element_ver: 192, attributes: (0, 2), attributes_ver: 134, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // RPT-SUPPORT-DATA
    /* 3777 */ ElementSpec {sub_elements: (20970, 20971), sub_element_ver: 21, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // EXECUTION-CONTEXTS
    /* 3778 */ ElementSpec {sub_elements: (20971, 20972), sub_element_ver: 21, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // RPT-COMPONENTS
    /* 3779 */ ElementSpec {sub_elements: (20972, 20973), sub_element_ver: 21, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // RPT-SERVICE-POINTS
    /* 3780 */ ElementSpec {sub_elements: (19385, 19388), sub_element_ver: 192, attributes: (0, 2), attributes_ver: 134, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // RESULTING-RPT-SW-PROTOTYPING-ACCESS, RPT-SW-PROTOTYPING-ACCESS
    /* 3781 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 77, character_data: Some(750), mode: ContentMode::Characters, ref_info: (0, 0)}, // RETURN-VALUE-PROVISION
    /* 3782 */ ElementSpec {sub_elements: (20973, 20974), sub_element_ver: 7, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // DISABLED-MODE-IREFS
    /* 3783 */ ElementSpec {sub_elements: (19392, 19394), sub_element_ver: 81, attributes: (0, 2), attributes_ver: 81, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // RTE-EVENT-IREF
    /* 3784 */ ElementSpec {sub_elements: (17247, 17256), sub_element_ver: 4093, attributes: (115, 118), attributes_ver: 81, character_data: None, mode: ContentMode::Sequence, ref_info: (4918, 4919)}, // RTE-EVENT-IN-COMPOSITION-SEPARATION
    /* 3785 */ ElementSpec {sub_elements: (20974, 20975), sub_element_ver: 20, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // RTE-EVENT-IREFS
    /* 3786 */ ElementSpec {sub_elements: (14443, 14454), sub_element_ver: 4093, attributes: (115, 118), attributes_ver: 81, character_data: None, mode: ContentMode::Sequence, ref_info: (4919, 4920)}, // RTE-EVENT-IN-COMPOSITION-TO-OS-TASK-PROXY-MAPPING
    /* 3787 */ ElementSpec {sub_elements: (19388, 19391), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 0, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // RTE-EVENT-IREF
    /* 3788 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (3061, 3067), attributes_ver: 9319, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // TARGET-EVENT-REF, TARGET-RTE-EVENT-REF
    /* 3789 */ ElementSpec {sub_elements: (19391, 19394), sub_element_ver: 81, attributes: (0, 2), attributes_ver: 81, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // RTE-EVENT-IREF
    /* 3790 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (805, 811), attributes_ver: 4093, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // CONTEXT-ROOT-COMPOSITION-REF
    /* 3791 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (811, 817), attributes_ver: 4093, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // CONTEXT-COMPONENT-PROTOTYPE-REF, CONTEXT-SW-COMPONENT-REF
    /* 3792 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (3061, 3067), attributes_ver: 4093, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // TARGET-RTE-EVENT-REF
    /* 3793 */ ElementSpec {sub_elements: (17256, 17265), sub_element_ver: 4093, attributes: (115, 118), attributes_ver: 81, character_data: None, mode: ContentMode::Sequence, ref_info: (4920, 4921)}, // RTE-EVENT-IN-SYSTEM-SEPARATION
    /* 3794 */ ElementSpec {sub_elements: (20975, 20976), sub_element_ver: 20, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // RTE-EVENT-IREFS
    /* 3795 */ ElementSpec {sub_elements: (14454, 14465), sub_element_ver: 4093, attributes: (115, 118), attributes_ver: 81, character_data: None, mode: ContentMode::Sequence, ref_info: (4921, 4922)}, // RTE-EVENT-IN-SYSTEM-TO-OS-TASK-PROXY-MAPPING
    /* 3796 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (3067, 3073), attributes_ver: 9361, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // RUNNABLE-REF, START-ON-EVENT-REF, SWC-RUNNABLE-REF
    /* 3797 */ ElementSpec {sub_elements: (19978, 19980), sub_element_ver: 97, attributes: (0, 2), attributes_ver: 9, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // RTE-PLUGIN-PROPS
    /* 3798 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (937, 943), attributes_ver: 1187, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // ASSOCIATED-RTE-PLUGIN-REF
    /* 3799 */ ElementSpec {sub_elements: (19980, 19982), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 0, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // RTP-TP
    /* 3800 */ ElementSpec {sub_elements: (17887, 17889), sub_element_ver: 0, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Choice, ref_info: (0, 0)}, // TCP-UDP-CONFIG
    /* 3801 */ ElementSpec {sub_elements: (12558, 12570), sub_element_ver: 7430, attributes: (115, 118), attributes_ver: 4960, character_data: None, mode: ContentMode::Sequence, ref_info: (4922, 4923)}, // RULE
    /* 3802 */ ElementSpec {sub_elements: (18439, 18444), sub_element_ver: 691, attributes: (0, 2), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // RULE-ARGUMENTS
    /* 3803 */ ElementSpec {sub_elements: (18444, 18449), sub_element_ver: 691, attributes: (0, 2), attributes_ver: 0, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // RULE-BASED-AXIS-CONT
    /* 3804 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (829, 835), attributes_ver: 9319, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // UNIT-REF
    /* 3805 */ ElementSpec {sub_elements: (19394, 19397), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 0, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // SW-VALUE-CONT
    /* 3806 */ ElementSpec {sub_elements: (19397, 19400), sub_element_ver: 1116, attributes: (0, 2), attributes_ver: 0, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // RULE-BASED-VALUES
    /* 3807 */ ElementSpec {sub_elements: (20976, 20977), sub_element_ver: 0, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // ARGUMENTSS
    /* 3808 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (3073, 3079), attributes_ver: 9337, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // EXPRESSION-REF, LOGICAL-EXPRESSION-ARGUMENT-REF
    /* 3809 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 75, character_data: Some(752), mode: ContentMode::Characters, ref_info: (0, 0)}, // RULE-INIT-STATE
    /* 3810 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (3079, 3085), attributes_ver: 9337, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // FALSE-ACTION-LIST-REF, TRUE-ACTION-LIST-REF
    /* 3811 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 22, character_data: Some(753), mode: ContentMode::Characters, ref_info: (0, 0)}, // RUN-MODE
    /* 3812 */ ElementSpec {sub_elements: (981, 1018), sub_element_ver: 1045, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (4923, 4928)}, // RUNNABLE-ENTITY
    /* 3813 */ ElementSpec {sub_elements: (20977, 20978), sub_element_ver: 386, attributes: (0, 2), attributes_ver: 656, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // RUNNABLE-ENTITY-ARGUMENT
    /* 3814 */ ElementSpec {sub_elements: (20978, 20979), sub_element_ver: 386, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // ARGUMENTS
    /* 3815 */ ElementSpec {sub_elements: (20979, 20980), sub_element_ver: 7, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // ASYNCHRONOUS-SERVER-CALL-RESULT-POINTS
    /* 3816 */ ElementSpec {sub_elements: (20980, 20981), sub_element_ver: 7, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // DATA-READ-ACCESSS, DATA-RECEIVE-POINT-BY-ARGUMENTS, DATA-RECEIVE-POINT-BY-VALUES, DATA-SEND-POINTS, DATA-WRITE-ACCESSS, READ-LOCAL-VARIABLES, WRITTEN-LOCAL-VARIABLES
    /* 3817 */ ElementSpec {sub_elements: (20981, 20982), sub_element_ver: 7, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // EXTERNAL-TRIGGERING-POINTS
    /* 3818 */ ElementSpec {sub_elements: (14465, 14476), sub_element_ver: 2765, attributes: (115, 118), attributes_ver: 0, character_data: None, mode: ContentMode::Sequence, ref_info: (4928, 4932)}, // RUNNABLE-ENTITY-GROUP
    /* 3819 */ ElementSpec {sub_elements: (20982, 20983), sub_element_ver: 0, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // RUNNABLE-ENTITY-GROUP-IREFS
    /* 3820 */ ElementSpec {sub_elements: (20983, 20984), sub_element_ver: 0, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // RUNNABLE-ENTITY-IREFS
    /* 3821 */ ElementSpec {sub_elements: (19400, 19403), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 0, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // RUNNABLE-ENTITY-IREF
    /* 3822 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (3067, 3073), attributes_ver: 9319, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // TARGET-RUNNABLE-ENTITY-REF
    /* 3823 */ ElementSpec {sub_elements: (20984, 20985), sub_element_ver: 7, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // INTERNAL-TRIGGERING-POINTS
    /* 3824 */ ElementSpec {sub_elements: (20985, 20986), sub_element_ver: 7, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // MODE-ACCESS-POINTS
    /* 3825 */ ElementSpec {sub_elements: (20986, 20987), sub_element_ver: 7, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // MODE-SWITCH-POINTS
    /* 3826 */ ElementSpec {sub_elements: (20987, 20988), sub_element_ver: 7, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // PARAMETER-ACCESSS
    /* 3827 */ ElementSpec {sub_elements: (19982, 19984), sub_element_ver: 22, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // SERVER-CALL-POINTS
    /* 3828 */ ElementSpec {sub_elements: (20988, 20989), sub_element_ver: 7, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // WAIT-POINTS
    /* 3829 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 401, character_data: Some(756), mode: ContentMode::Characters, ref_info: (0, 0)}, // RUNTIME-IP-ADDRESS-CONFIGURATION, RUNTIME-PORT-CONFIGURATION
    /* 3830 */ ElementSpec {sub_elements: (14817, 14827), sub_element_ver: 3276, attributes: (115, 118), attributes_ver: 192, character_data: None, mode: ContentMode::Sequence, ref_info: (4932, 4934)}, // RUNTIME-ERROR
    /* 3831 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 120, character_data: Some(757), mode: ContentMode::Characters, ref_info: (0, 0)}, // RX-ACCEPT-CONTAINED-I-PDU
    /* 3832 */ ElementSpec {sub_elements: (19984, 19986), sub_element_ver: 656, attributes: (0, 2), attributes_ver: 656, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // CAN-IDENTIFIER-RANGE, RX-IDENTIFIER-RANGE
    /* 3833 */ ElementSpec {sub_elements: (11298, 11305), sub_element_ver: 7406, attributes: (0, 2), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // SAVE-CONFIGURATION-ENTRY
    /* 3834 */ ElementSpec {sub_elements: (18859, 18863), sub_element_ver: 871, attributes: (3840, 3843), attributes_ver: 871, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // SCALE-CONSTR
    /* 3835 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (3799, 3803), attributes_ver: 30, character_data: Some(974), mode: ContentMode::Characters, ref_info: (0, 0)}, // SD
    /* 3836 */ ElementSpec {sub_elements: (18153, 18159), sub_element_ver: 691, attributes: (0, 2), attributes_ver: 0, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // SD-CLIENT-CONFIG
    /* 3837 */ ElementSpec {sub_elements: (20130, 20131), sub_element_ver: 0, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // CAPABILITY-RECORDS
    /* 3838 */ ElementSpec {sub_elements: (17829, 17836), sub_element_ver: 2767, attributes: (0, 2), attributes_ver: 0, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // SD-SERVER-CONFIG
    /* 3839 */ ElementSpec {sub_elements: (20989, 20990), sub_element_ver: 43, attributes: (3799, 3802), attributes_ver: 140, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // SDF
    /* 3840 */ ElementSpec {sub_elements: (18863, 18867), sub_element_ver: 9149, attributes: (3799, 3802), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // SDG
    /* 3841 */ ElementSpec {sub_elements: (7498, 7513), sub_element_ver: 3816, attributes: (115, 118), attributes_ver: 192, character_data: None, mode: ContentMode::Sequence, ref_info: (4934, 4936)}, // SDG-AGGREGATION-WITH-VARIATION
    /* 3842 */ ElementSpec {sub_elements: (17836, 17843), sub_element_ver: 8912, attributes: (115, 118), attributes_ver: 615, character_data: None, mode: ContentMode::Sequence, ref_info: (4936, 4937)}, // SDG-CAPTION
    /* 3843 */ ElementSpec {sub_elements: (10488, 10501), sub_element_ver: 3816, attributes: (115, 118), attributes_ver: 192, character_data: None, mode: ContentMode::Sequence, ref_info: (4937, 4938)}, // SDG-CLASS
    /* 3844 */ ElementSpec {sub_elements: (18159, 18165), sub_element_ver: 192, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // ATTRIBUTES
    /* 3845 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (3085, 3091), attributes_ver: 9325, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // CONSTRAINT-REF, SDG-CONSTRAINT-REF
    /* 3846 */ ElementSpec {sub_elements: (20990, 20991), sub_element_ver: 21, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // SDG-CONSTRAINT-REFS
    /* 3847 */ ElementSpec {sub_elements: (16164, 16174), sub_element_ver: 3276, attributes: (115, 118), attributes_ver: 192, character_data: None, mode: ContentMode::Sequence, ref_info: (4938, 4942)}, // SDG-DEF
    /* 3848 */ ElementSpec {sub_elements: (20991, 20992), sub_element_ver: 21, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // SDG-CLASSES
    /* 3849 */ ElementSpec {sub_elements: (7513, 7526), sub_element_ver: 5883, attributes: (115, 118), attributes_ver: 192, character_data: None, mode: ContentMode::Sequence, ref_info: (4942, 4945)}, // SDG-FOREIGN-REFERENCE
    /* 3850 */ ElementSpec {sub_elements: (7513, 7528), sub_element_ver: 5883, attributes: (115, 118), attributes_ver: 192, character_data: None, mode: ContentMode::Sequence, ref_info: (4945, 4948)}, // SDG-FOREIGN-REFERENCE-WITH-VARIATION
    /* 3851 */ ElementSpec {sub_elements: (4278, 4295), sub_element_ver: 3816, attributes: (115, 118), attributes_ver: 192, character_data: None, mode: ContentMode::Sequence, ref_info: (4948, 4951)}, // SDG-PRIMITIVE-ATTRIBUTE
    /* 3852 */ ElementSpec {sub_elements: (4278, 4297), sub_element_ver: 3816, attributes: (115, 118), attributes_ver: 192, character_data: None, mode: ContentMode::Sequence, ref_info: (4951, 4954)}, // SDG-PRIMITIVE-ATTRIBUTE-WITH-VARIATION
    /* 3853 */ ElementSpec {sub_elements: (12570, 12582), sub_element_ver: 3816, attributes: (115, 118), attributes_ver: 192, character_data: None, mode: ContentMode::Sequence, ref_info: (4954, 4956)}, // SDG-REFERENCE
    /* 3854 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (3091, 3097), attributes_ver: 9325, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // DEST-SDG-REF, SDG-CLASS-REF, SUB-SDG-REF
    /* 3855 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (3097, 3103), attributes_ver: 9361, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // SDG-CAPTION-REF
    /* 3856 */ ElementSpec {sub_elements: (12582, 12594), sub_element_ver: 3816, attributes: (115, 118), attributes_ver: 192, character_data: None, mode: ContentMode::Sequence, ref_info: (4956, 4961)}, // SDG-TAILORING
    /* 3857 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 1549, character_data: Some(762), mode: ContentMode::Characters, ref_info: (0, 0)}, // SEARCH-BEHAVIOR
    /* 3858 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 64, character_data: Some(763), mode: ContentMode::Characters, ref_info: (0, 0)}, // SEARCH-INTENTION
    /* 3859 */ ElementSpec {sub_elements: (12594, 12606), sub_element_ver: 7778, attributes: (115, 118), attributes_ver: 9, character_data: None, mode: ContentMode::Sequence, ref_info: (4961, 4963)}, // SEC-OC-CRYPTO-SERVICE-MAPPING
    /* 3860 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (3103, 3109), attributes_ver: 1642, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // CRYPTO-SERVICE-QUEUE-REF
    /* 3861 */ ElementSpec {sub_elements: (17265, 17274), sub_element_ver: 1153, attributes: (115, 118), attributes_ver: 1153, character_data: None, mode: ContentMode::Sequence, ref_info: (4963, 4965)}, // SEC-OC-DEPLOYMENT
    /* 3862 */ ElementSpec {sub_elements: (20992, 20993), sub_element_ver: 8, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // SEC-OC-JOB-MAPPINGS
    /* 3863 */ ElementSpec {sub_elements: (16174, 16184), sub_element_ver: 8495, attributes: (115, 118), attributes_ver: 1153, character_data: None, mode: ContentMode::Sequence, ref_info: (4965, 4966)}, // SEC-OC-JOB-MAPPING
    /* 3864 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (3109, 3115), attributes_ver: 9355, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // SEC-OC-JOB-REQUIREMENT-REF
    /* 3865 */ ElementSpec {sub_elements: (17274, 17283), sub_element_ver: 1153, attributes: (115, 118), attributes_ver: 1153, character_data: None, mode: ContentMode::Sequence, ref_info: (4966, 4967)}, // SEC-OC-JOB-REQUIREMENT
    /* 3866 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 1153, character_data: Some(766), mode: ContentMode::Characters, ref_info: (0, 0)}, // SEC-OC-JOB-SEMANTIC
    /* 3867 */ ElementSpec {sub_elements: (5477, 5494), sub_element_ver: 4771, attributes: (115, 118), attributes_ver: 1153, character_data: None, mode: ContentMode::Sequence, ref_info: (4967, 4974)}, // SEC-OC-SECURE-COM-PROPS
    /* 3868 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2383, 2389), attributes_ver: 3664, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // AUTHENTICATION-REF
    /* 3869 */ ElementSpec {sub_elements: (20993, 20994), sub_element_ver: 8, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // JOB-REQUIREMENTS
    /* 3870 */ ElementSpec {sub_elements: (19986, 19988), sub_element_ver: 12, attributes: (0, 2), attributes_ver: 12, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // SEC-OC-SECURE-COM-PROPS-REF-CONDITIONAL
    /* 3871 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (3115, 3121), attributes_ver: 425, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // SEC-OC-SECURE-COM-PROPS-REF
    /* 3872 */ ElementSpec {sub_elements: (18449, 18454), sub_element_ver: 9089, attributes: (0, 2), attributes_ver: 656, character_data: None, mode: ContentMode::Sequence, ref_info: (4974, 4976)}, // SECTION-NAME-PREFIX
    /* 3873 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2065, 2071), attributes_ver: 9319, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // IMPLEMENTED-IN-REF
    /* 3874 */ ElementSpec {sub_elements: (19988, 19990), sub_element_ver: 538, attributes: (0, 2), attributes_ver: 538, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // SECURE-COM-CONFIG-TO-CRYPTO-KEY-SLOT-MAPPING
    /* 3875 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (985, 991), attributes_ver: 4237, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // CRYPTO-KEY-SLOT-REF
    /* 3876 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (793, 799), attributes_ver: 4237, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // SECURE-COM-CONFIG-REF
    /* 3877 */ ElementSpec {sub_elements: (16184, 16194), sub_element_ver: 5868, attributes: (115, 118), attributes_ver: 5288, character_data: None, mode: ContentMode::Sequence, ref_info: (4976, 4980)}, // SECURE-COM-PROPS-SET
    /* 3878 */ ElementSpec {sub_elements: (19990, 19992), sub_element_ver: 546, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // SECURE-COM-PROPSS
    /* 3879 */ ElementSpec {sub_elements: (16194, 16204), sub_element_ver: 3276, attributes: (115, 118), attributes_ver: 192, character_data: None, mode: ContentMode::Sequence, ref_info: (4980, 4981)}, // SECURE-COMMUNICATION-AUTHENTICATION-PROPS
    /* 3880 */ ElementSpec {sub_elements: (10501, 10514), sub_element_ver: 3816, attributes: (115, 118), attributes_ver: 192, character_data: None, mode: ContentMode::Sequence, ref_info: (4981, 4982)}, // SECURE-COMMUNICATION-FRESHNESS-PROPS
    /* 3881 */ ElementSpec {sub_elements: (4807, 4825), sub_element_ver: 4255, attributes: (0, 2), attributes_ver: 120, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // SECURE-COMMUNICATION-PROPS
    /* 3882 */ ElementSpec {sub_elements: (14476, 14487), sub_element_ver: 3276, attributes: (115, 118), attributes_ver: 192, character_data: None, mode: ContentMode::Sequence, ref_info: (4982, 4986)}, // SECURE-COMMUNICATION-PROPS-SET
    /* 3883 */ ElementSpec {sub_elements: (20994, 20995), sub_element_ver: 21, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // AUTHENTICATION-PROPSS
    /* 3884 */ ElementSpec {sub_elements: (20995, 20996), sub_element_ver: 21, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // FRESHNESS-PROPSS
    /* 3885 */ ElementSpec {sub_elements: (17283, 17292), sub_element_ver: 5584, attributes: (115, 118), attributes_ver: 192, character_data: None, mode: ContentMode::Sequence, ref_info: (4986, 4988)}, // SECURE-ON-BOARD-COMMUNICATION-NEEDS
    /* 3886 */ ElementSpec {sub_elements: (3799, 3819), sub_element_ver: 3356, attributes: (115, 118), attributes_ver: 140, character_data: None, mode: ContentMode::Sequence, ref_info: (4988, 4997)}, // SECURED-I-PDU
    /* 3887 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (3121, 3127), attributes_ver: 9325, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // AUTHENTICATION-PROPS-REF
    /* 3888 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (3127, 3133), attributes_ver: 9325, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // FRESHNESS-PROPS-REF
    /* 3889 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (859, 865), attributes_ver: 9331, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // CONTAINED-PDU-TRIGGERING-REF, PAYLOAD-REF, PDU-TRIGGERING-REF, PERIODIC-RESPONSE-UUDT-REF
    /* 3890 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 854, character_data: Some(772), mode: ContentMode::Characters, ref_info: (0, 0)}, // USE-SECURED-PDU-HEADER
    /* 3891 */ ElementSpec {sub_elements: (16204, 16214), sub_element_ver: 1927, attributes: (115, 118), attributes_ver: 77, character_data: None, mode: ContentMode::Sequence, ref_info: (4997, 4999)}, // AGGREGATION
    /* 3892 */ ElementSpec {sub_elements: (20996, 20997), sub_element_ver: 19, attributes: (0, 2), attributes_ver: 77, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // SECURITY-EVENT-CONTEXT-DATA
    /* 3893 */ ElementSpec {sub_elements: (14487, 14498), sub_element_ver: 3027, attributes: (115, 118), attributes_ver: 12, character_data: None, mode: ContentMode::Sequence, ref_info: (4999, 5006)}, // SECURITY-EVENT-CONTEXT-DATA-DEFINITION
    /* 3894 */ ElementSpec {sub_elements: (19992, 19994), sub_element_ver: 12, attributes: (0, 2), attributes_ver: 12, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // SECURITY-EVENT-CONTEXT-DATA-DEFINITION-REF-CONDITIONAL
    /* 3895 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (3133, 3139), attributes_ver: 425, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // SECURITY-EVENT-CONTEXT-DATA-DEFINITION-REF
    /* 3896 */ ElementSpec {sub_elements: (10514, 10527), sub_element_ver: 3027, attributes: (115, 118), attributes_ver: 12, character_data: None, mode: ContentMode::Sequence, ref_info: (5006, 5007)}, // SECURITY-EVENT-CONTEXT-DATA-ELEMENT
    /* 3897 */ ElementSpec {sub_elements: (20997, 20998), sub_element_ver: 12, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // CONTEXT-DATA-ELEMENTS, NESTED-CONTEXT-DATAS
    /* 3898 */ ElementSpec {sub_elements: (19994, 19996), sub_element_ver: 12, attributes: (0, 2), attributes_ver: 12, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // SECURITY-EVENT-CONTEXT-DATA-ELEMENT-REF-CONDITIONAL
    /* 3899 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (3139, 3145), attributes_ver: 425, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // SECURITY-EVENT-CONTEXT-DATA-ELEMENT-REF
    /* 3900 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (3145, 3151), attributes_ver: 425, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // SECURITY-EVENT-REPORT-INSTANCE-DEFINITION-REF
    /* 3901 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 77, character_data: Some(775), mode: ContentMode::Characters, ref_info: (0, 0)}, // CONTEXT-DATA-SOURCE
    /* 3902 */ ElementSpec {sub_elements: (10527, 10540), sub_element_ver: 1927, attributes: (115, 118), attributes_ver: 77, character_data: None, mode: ContentMode::Sequence, ref_info: (5007, 5016)}, // SECURITY-EVENT-CONTEXT-MAPPING-APPLICATION
    /* 3903 */ ElementSpec {sub_elements: (10540, 10553), sub_element_ver: 1927, attributes: (115, 118), attributes_ver: 77, character_data: None, mode: ContentMode::Sequence, ref_info: (5016, 5025)}, // SECURITY-EVENT-CONTEXT-MAPPING-BSW-MODULE
    /* 3904 */ ElementSpec {sub_elements: (10553, 10566), sub_element_ver: 1927, attributes: (115, 118), attributes_ver: 77, character_data: None, mode: ContentMode::Sequence, ref_info: (5025, 5034)}, // SECURITY-EVENT-CONTEXT-MAPPING-COMM-CONNECTOR
    /* 3905 */ ElementSpec {sub_elements: (20879, 20880), sub_element_ver: 19, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // COMM-CONNECTORS
    /* 3906 */ ElementSpec {sub_elements: (20998, 20999), sub_element_ver: 19, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // FILTER-CHAINS
    /* 3907 */ ElementSpec {sub_elements: (10566, 10579), sub_element_ver: 1927, attributes: (115, 118), attributes_ver: 77, character_data: None, mode: ContentMode::Sequence, ref_info: (5034, 5043)}, // SECURITY-EVENT-CONTEXT-MAPPING-FUNCTIONAL-CLUSTER
    /* 3908 */ ElementSpec {sub_elements: (20999, 21000), sub_element_ver: 19, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // IDSM-INSTANCES
    /* 3909 */ ElementSpec {sub_elements: (21000, 21001), sub_element_ver: 19, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // MAPPED-SECURITY-EVENTS
    /* 3910 */ ElementSpec {sub_elements: (7528, 7543), sub_element_ver: 1927, attributes: (115, 118), attributes_ver: 77, character_data: None, mode: ContentMode::Sequence, ref_info: (5043, 5044)}, // SECURITY-EVENT-CONTEXT-PROPS
    /* 3911 */ ElementSpec {sub_elements: (21001, 21002), sub_element_ver: 19, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // CONTEXT-DATAS
    /* 3912 */ ElementSpec {sub_elements: (21002, 21003), sub_element_ver: 19, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // SECURITY-EVENTS
    /* 3913 */ ElementSpec {sub_elements: (12606, 12618), sub_element_ver: 7100, attributes: (115, 118), attributes_ver: 77, character_data: None, mode: ContentMode::Sequence, ref_info: (5044, 5051)}, // SECURITY-EVENT-DEFINITION
    /* 3914 */ ElementSpec {sub_elements: (19996, 19998), sub_element_ver: 77, attributes: (0, 2), attributes_ver: 77, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // SECURITY-EVENT-DEFINITION-REF-CONDITIONAL
    /* 3915 */ ElementSpec {sub_elements: (21003, 21004), sub_element_ver: 12, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // SECURITY-EVENT-CONTEXT-DATA-DEFINITIONS
    /* 3916 */ ElementSpec {sub_elements: (10579, 10592), sub_element_ver: 1927, attributes: (115, 118), attributes_ver: 77, character_data: None, mode: ContentMode::Sequence, ref_info: (5051, 5058)}, // SECURITY-EVENT-FILTER-CHAIN
    /* 3917 */ ElementSpec {sub_elements: (19998, 20000), sub_element_ver: 77, attributes: (0, 2), attributes_ver: 77, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // SECURITY-EVENT-FILTER-CHAIN-REF-CONDITIONAL
    /* 3918 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (3151, 3157), attributes_ver: 500, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // SECURITY-EVENT-FILTER-CHAIN-REF
    /* 3919 */ ElementSpec {sub_elements: (10592, 10605), sub_element_ver: 7099, attributes: (115, 118), attributes_ver: 77, character_data: None, mode: ContentMode::Sequence, ref_info: (5058, 5064)}, // SECURITY-EVENT-MAPPING
    /* 3920 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (349, 355), attributes_ver: 500, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // PROCESS-REF
    /* 3921 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2221, 2227), attributes_ver: 425, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // SECURITY-EVENT-REF
    /* 3922 */ ElementSpec {sub_elements: (17292, 17301), sub_element_ver: 1927, attributes: (115, 118), attributes_ver: 77, character_data: None, mode: ContentMode::Sequence, ref_info: (5064, 5066)}, // ONE-EVERY-N
    /* 3923 */ ElementSpec {sub_elements: (14498, 14509), sub_element_ver: 3027, attributes: (115, 118), attributes_ver: 12, character_data: None, mode: ContentMode::Sequence, ref_info: (5066, 5073)}, // SECURITY-EVENT-REPORT-INSTANCE-DEFINITION
    /* 3924 */ ElementSpec {sub_elements: (21004, 21005), sub_element_ver: 12, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // CONTEXT-TYPE-LISTS
    /* 3925 */ ElementSpec {sub_elements: (10605, 10618), sub_element_ver: 3027, attributes: (115, 118), attributes_ver: 12, character_data: None, mode: ContentMode::Sequence, ref_info: (5073, 5080)}, // SECURITY-EVENT-REPORT-INSTANCE-VALUE
    /* 3926 */ ElementSpec {sub_elements: (21005, 21006), sub_element_ver: 12, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // CONTEXT-DATA-ELEMENT-IDENTIFICATIONS
    /* 3927 */ ElementSpec {sub_elements: (3190, 3204), sub_element_ver: 1927, attributes: (115, 118), attributes_ver: 77, character_data: None, mode: ContentMode::Sequence, ref_info: (5080, 5090)}, // SECURITY-EVENT-REPORT-INTERFACE
    /* 3928 */ ElementSpec {sub_elements: (14509, 14520), sub_element_ver: 1927, attributes: (115, 118), attributes_ver: 77, character_data: None, mode: ContentMode::Sequence, ref_info: (5090, 5096)}, // SECURITY-EVENT-REPORT-TO-SECURITY-EVENT-DEFINITION-MAPPING
    /* 3929 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 77, character_data: Some(781), mode: ContentMode::Characters, ref_info: (0, 0)}, // DEFAULT-REPORTING-MODE
    /* 3930 */ ElementSpec {sub_elements: (16214, 16224), sub_element_ver: 1927, attributes: (115, 118), attributes_ver: 77, character_data: None, mode: ContentMode::Sequence, ref_info: (5096, 5098)}, // STATE
    /* 3931 */ ElementSpec {sub_elements: (21006, 21007), sub_element_ver: 19, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // BLOCK-IF-STATE-ACTIVE-AP-IREFS
    /* 3932 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (3157, 3163), attributes_ver: 500, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // BLOCK-IF-STATE-ACTIVE-CP-REF
    /* 3933 */ ElementSpec {sub_elements: (21007, 21008), sub_element_ver: 19, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // BLOCK-IF-STATE-ACTIVE-CP-REFS
    /* 3934 */ ElementSpec {sub_elements: (16224, 16234), sub_element_ver: 1927, attributes: (115, 118), attributes_ver: 77, character_data: None, mode: ContentMode::Sequence, ref_info: (5098, 5100)}, // THRESHOLD
    /* 3935 */ ElementSpec {sub_elements: (19403, 19406), sub_element_ver: 22, attributes: (0, 2), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // SEGMENT-POSITION
    /* 3936 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 77, character_data: Some(782), mode: ContentMode::Characters, ref_info: (0, 0)}, // SEND-INDICATION
    /* 3937 */ ElementSpec {sub_elements: (17220, 17228), sub_element_ver: 803, attributes: (0, 2), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // SENDER-ANNOTATION
    /* 3938 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 488, character_data: Some(783), mode: ContentMode::Characters, ref_info: (0, 0)}, // SENDER-CAPABILITY
    /* 3939 */ ElementSpec {sub_elements: (21008, 21009), sub_element_ver: 0, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // COMPOSITE-NETWORK-REPRESENTATIONS
    /* 3940 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (409, 415), attributes_ver: 9361, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // DATA-ELEMENT-REF, FIRST-DATA-PROTOTYPE-REF, SECOND-DATA-PROTOTYPE-REF
    /* 3941 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 77, character_data: Some(784), mode: ContentMode::Characters, ref_info: (0, 0)}, // SENDER-INTENT
    /* 3942 */ ElementSpec {sub_elements: (19406, 19409), sub_element_ver: 22, attributes: (0, 2), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // SENDER-REC-ARRAY-ELEMENT-MAPPING
    /* 3943 */ ElementSpec {sub_elements: (19409, 19412), sub_element_ver: 626, attributes: (0, 2), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // SENDER-REC-ARRAY-TYPE-MAPPING
    /* 3944 */ ElementSpec {sub_elements: (21009, 21010), sub_element_ver: 7, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // ARRAY-ELEMENT-MAPPINGS
    /* 3945 */ ElementSpec {sub_elements: (17843, 17850), sub_element_ver: 8919, attributes: (0, 2), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // SENDER-REC-RECORD-ELEMENT-MAPPING
    /* 3946 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (415, 421), attributes_ver: 9391, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // APPLICATION-RECORD-ELEMENT-REF
    /* 3947 */ ElementSpec {sub_elements: (21010, 21011), sub_element_ver: 7, attributes: (0, 2), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // SENDER-REC-RECORD-TYPE-MAPPING
    /* 3948 */ ElementSpec {sub_elements: (21011, 21012), sub_element_ver: 7, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // RECORD-ELEMENT-MAPPINGS
    /* 3949 */ ElementSpec {sub_elements: (17301, 17310), sub_element_ver: 8702, attributes: (0, 2), attributes_ver: 0, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // SENDER-RECEIVER-COMPOSITE-ELEMENT-TO-SIGNAL-MAPPING
    /* 3950 */ ElementSpec {sub_elements: (20000, 20002), sub_element_ver: 0, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Choice, ref_info: (0, 0)}, // TYPE-MAPPING
    /* 3951 */ ElementSpec {sub_elements: (5494, 5511), sub_element_ver: 4788, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (5100, 5110)}, // SENDER-RECEIVER-INTERFACE
    /* 3952 */ ElementSpec {sub_elements: (21012, 21013), sub_element_ver: 7, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // INVALIDATION-POLICYS
    /* 3953 */ ElementSpec {sub_elements: (21013, 21014), sub_element_ver: 64, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // META-DATA-ITEM-SETS
    /* 3954 */ ElementSpec {sub_elements: (16234, 16244), sub_element_ver: 4872, attributes: (0, 2), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // SENDER-RECEIVER-TO-SIGNAL-GROUP-MAPPING
    /* 3955 */ ElementSpec {sub_elements: (20000, 20002), sub_element_ver: 22, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Choice, ref_info: (0, 0)}, // COMPLEX-TYPE-MAPPING, TYPE-MAPPING
    /* 3956 */ ElementSpec {sub_elements: (14520, 14531), sub_element_ver: 8172, attributes: (0, 2), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // SENDER-RECEIVER-TO-SIGNAL-MAPPING
    /* 3957 */ ElementSpec {sub_elements: (3637, 3658), sub_element_ver: 3006, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (5110, 5120)}, // SENSOR-ACTUATOR-SW-COMPONENT-TYPE
    /* 3958 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (3163, 3169), attributes_ver: 9361, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // HARDWARE-ELEMENT-REF, SENSOR-ACTUATOR-REF
    /* 3959 */ ElementSpec {sub_elements: (18454, 18459), sub_element_ver: 804, attributes: (0, 2), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // SEPARATE-SIGNAL-PATH
    /* 3960 */ ElementSpec {sub_elements: (20002, 20004), sub_element_ver: 9234, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Choice, ref_info: (0, 0)}, // (sub-group)
    /* 3961 */ ElementSpec {sub_elements: (7543, 7558), sub_element_ver: 5898, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // (sub-group)
    /* 3962 */ ElementSpec {sub_elements: (20004, 20006), sub_element_ver: 22, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // (sub-group)
    /* 3963 */ ElementSpec {sub_elements: (20006, 20008), sub_element_ver: 22, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // (sub-group)
    /* 3964 */ ElementSpec {sub_elements: (20008, 20010), sub_element_ver: 617, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Choice, ref_info: (0, 0)}, // (sub-group)
    /* 3965 */ ElementSpec {sub_elements: (20010, 20012), sub_element_ver: 22, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Choice, ref_info: (0, 0)}, // (sub-group)
    /* 3966 */ ElementSpec {sub_elements: (7544, 7555), sub_element_ver: 7538, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // (sub-group)
    /* 3967 */ ElementSpec {sub_elements: (7544, 7555), sub_element_ver: 5899, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // (sub-group)
    /* 3968 */ ElementSpec {sub_elements: (19412, 19415), sub_element_ver: 9217, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Choice, ref_info: (0, 0)}, // (sub-group)
    /* 3969 */ ElementSpec {sub_elements: (20012, 20014), sub_element_ver: 7402, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Choice, ref_info: (0, 0)}, // (sub-group)
    /* 3970 */ ElementSpec {sub_elements: (18459, 18464), sub_element_ver: 9094, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // (sub-group)
    /* 3971 */ ElementSpec {sub_elements: (20014, 20016), sub_element_ver: 22, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Choice, ref_info: (0, 0)}, // (sub-group)
    /* 3972 */ ElementSpec {sub_elements: (19415, 19418), sub_element_ver: 22, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // (sub-group)
    /* 3973 */ ElementSpec {sub_elements: (7543, 7557), sub_element_ver: 5898, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // (sub-group)
    /* 3974 */ ElementSpec {sub_elements: (7544, 7555), sub_element_ver: 7551, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // (sub-group)
    /* 3975 */ ElementSpec {sub_elements: (18464, 18469), sub_element_ver: 455, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // (sub-group)
    /* 3976 */ ElementSpec {sub_elements: (21014, 21015), sub_element_ver: 7, attributes: (0, 2), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // SEQUENCE-COUNTER
    /* 3977 */ ElementSpec {sub_elements: (14531, 14542), sub_element_ver: 2765, attributes: (115, 118), attributes_ver: 0, character_data: None, mode: ContentMode::Sequence, ref_info: (5120, 5124)}, // SERIALIZATION-TECHNOLOGY
    /* 3978 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 64, character_data: Some(786), mode: ContentMode::Characters, ref_info: (0, 0)}, // SERIALIZER
    /* 3979 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 22, character_data: Some(787), mode: ContentMode::Characters, ref_info: (0, 0)}, // SERVER-ARGUMENT-IMPL-POLICY
    /* 3980 */ ElementSpec {sub_elements: (18469, 18474), sub_element_ver: 9099, attributes: (0, 2), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // SERVER-COM-SPEC
    /* 3981 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2077, 2083), attributes_ver: 500, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // FIELD-REF, GETTER-REF, SETTER-REF
    /* 3982 */ ElementSpec {sub_elements: (21015, 21016), sub_element_ver: 43, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // ASSIGNED-DATA-TYPES
    /* 3983 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 81, character_data: Some(788), mode: ContentMode::Characters, ref_info: (0, 0)}, // DIAGNOSTIC-RELEVANCE
    /* 3984 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (541, 547), attributes_ver: 9469, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // EVENT-REF, SOURCE-EVENT-REF, TARGET-EVENT-REF
    /* 3985 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (607, 613), attributes_ver: 4093, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // SOURCE-TRIGGER-REF, TARGET-TRIGGER-REF, TRIGGER-REF
    /* 3986 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2077, 2083), attributes_ver: 9469, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // FIELD-REF, SOURCE-FIELD-REF, TARGET-FIELD-REF
    /* 3987 */ ElementSpec {sub_elements: (16244, 16254), sub_element_ver: 1642, attributes: (115, 118), attributes_ver: 909, character_data: None, mode: ContentMode::Sequence, ref_info: (5124, 5128)}, // SERVICE-INSTANCE-COLLECTION-SET
    /* 3988 */ ElementSpec {sub_elements: (18867, 18871), sub_element_ver: 9153, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // SERVICE-INSTANCES
    /* 3989 */ ElementSpec {sub_elements: (19418, 19421), sub_element_ver: 5336, attributes: (0, 2), attributes_ver: 645, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // SERVICE-INSTANCE-PORT-CONFIG
    /* 3990 */ ElementSpec {sub_elements: (10618, 10631), sub_element_ver: 5336, attributes: (115, 118), attributes_ver: 5336, character_data: None, mode: ContentMode::Sequence, ref_info: (5128, 5132)}, // SERVICE-INSTANCE-TO-APPLICATION-ENDPOINT-MAPPING
    /* 3991 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (3681, 3686), attributes_ver: 5336, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // SERVICE-INSTANCE-REF
    /* 3992 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (3686, 3691), attributes_ver: 5336, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // TRANSPORT-LAYER-INDEPENDENT-INSTANCE-ID-REF
    /* 3993 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (661, 667), attributes_ver: 9469, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // COMMUNICATION-CONNECTOR-REF
    /* 3994 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (3115, 3121), attributes_ver: 1187, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // SEC-OC-COM-PROPS-FOR-MULTICAST-REF
    /* 3995 */ ElementSpec {sub_elements: (21016, 21017), sub_element_ver: 9, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // SEC-OC-COM-PROPS-FOR-MULTICAST-REFS
    /* 3996 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2869, 2875), attributes_ver: 1187, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // SECURE-COM-PROPS-FOR-TCP-REF, SECURE-COM-PROPS-FOR-UDP-REF
    /* 3997 */ ElementSpec {sub_elements: (21017, 21018), sub_element_ver: 1543, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // SECURE-COM-PROPS-FOR-TCP-REFS
    /* 3998 */ ElementSpec {sub_elements: (21018, 21019), sub_element_ver: 1543, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // SECURE-COM-PROPS-FOR-UDP-REFS
    /* 3999 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (763, 769), attributes_ver: 9469, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // SERVICE-INSTANCE-REF
    /* 4000 */ ElementSpec {sub_elements: (21019, 21020), sub_element_ver: 9, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // SERVICE-INSTANCE-REFS
    /* 4001 */ ElementSpec {sub_elements: (7558, 7573), sub_element_ver: 5913, attributes: (115, 118), attributes_ver: 1153, character_data: None, mode: ContentMode::Sequence, ref_info: (5132, 5138)}, // SERVICE-INSTANCE-TO-PORT-PROTOTYPE-MAPPING
    /* 4002 */ ElementSpec {sub_elements: (6348, 6364), sub_element_ver: 5320, attributes: (115, 118), attributes_ver: 1153, character_data: None, mode: ContentMode::Sequence, ref_info: (5138, 5144)}, // SERVICE-INSTANCE-TO-SIGNAL-MAPPING
    /* 4003 */ ElementSpec {sub_elements: (21020, 21021), sub_element_ver: 8, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // EVENT-ELEMENT-MAPPINGS
    /* 4004 */ ElementSpec {sub_elements: (21021, 21022), sub_element_ver: 8, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // FIELD-MAPPINGS
    /* 4005 */ ElementSpec {sub_elements: (21022, 21023), sub_element_ver: 6, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // FIRE-AND-FORGET-METHOD-MAPPINGS
    /* 4006 */ ElementSpec {sub_elements: (21023, 21024), sub_element_ver: 6, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // METHOD-MAPPINGS
    /* 4007 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (763, 769), attributes_ver: 9355, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // SERVICE-INSTANCE-REF
    /* 4008 */ ElementSpec {sub_elements: (16254, 16264), sub_element_ver: 5868, attributes: (115, 118), attributes_ver: 5288, character_data: None, mode: ContentMode::Sequence, ref_info: (5144, 5148)}, // SERVICE-INSTANCE-TO-SIGNAL-MAPPING-SET
    /* 4009 */ ElementSpec {sub_elements: (572, 573), sub_element_ver: 92, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // SERVICE-INSTANCE-TO-SIGNAL-MAPPINGS
    /* 4010 */ ElementSpec {sub_elements: (21024, 21025), sub_element_ver: 20, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // TRIGGER-MAPPINGS
    /* 4011 */ ElementSpec {sub_elements: (3278, 3300), sub_element_ver: 2941, attributes: (115, 118), attributes_ver: 1531, character_data: None, mode: ContentMode::Sequence, ref_info: (5148, 5157)}, // SERVICE-INTERFACE
    /* 4012 */ ElementSpec {sub_elements: (16264, 16274), sub_element_ver: 8051, attributes: (115, 118), attributes_ver: 8051, character_data: None, mode: ContentMode::Sequence, ref_info: (5157, 5159)}, // SERVICE-INTERFACE-APPLICATION-ERROR-MAPPING
    /* 4013 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (679, 685), attributes_ver: 9367, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // SOURCE-POSSIBLE-ERROR-REF, TARGET-POSSIBLE-ERROR-REF
    /* 4014 */ ElementSpec {sub_elements: (18474, 18479), sub_element_ver: 9104, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // EVENT-DEPLOYMENTS
    /* 4015 */ ElementSpec {sub_elements: (18479, 18484), sub_element_ver: 9109, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // FIELD-DEPLOYMENTS
    /* 4016 */ ElementSpec {sub_elements: (18484, 18489), sub_element_ver: 9114, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // METHOD-DEPLOYMENTS
    /* 4017 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (3169, 3175), attributes_ver: 9469, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // COMPOSITE-SERVICE-INTERFACE-REF, SERVICE-INTERFACE-REF, SOURCE-SERVICE-INTERFACE-REF
    /* 4018 */ ElementSpec {sub_elements: (3819, 3839), sub_element_ver: 3376, attributes: (115, 118), attributes_ver: 1153, character_data: None, mode: ContentMode::Sequence, ref_info: (5159, 5160)}, // SERVICE-INTERFACE-ELEMENT-SECURE-COM-CONFIG
    /* 4019 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (745, 751), attributes_ver: 9355, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // FIELD-NOTIFIER-REF, GETTER-CALL-REF, GETTER-RETURN-REF, SETTER-CALL-REF, SETTER-RETURN-REF
    /* 4020 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (781, 787), attributes_ver: 9355, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // METHOD-CALL-REF, METHOD-RETURN-REF
    /* 4021 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2869, 2875), attributes_ver: 9337, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // SECURE-COM-PROPS-REF
    /* 4022 */ ElementSpec {sub_elements: (14542, 14553), sub_element_ver: 8183, attributes: (115, 118), attributes_ver: 1531, character_data: None, mode: ContentMode::Sequence, ref_info: (5160, 5165)}, // SERVICE-INTERFACE-EVENT-MAPPING
    /* 4023 */ ElementSpec {sub_elements: (20171, 20172), sub_element_ver: 4, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // EVENTS
    /* 4024 */ ElementSpec {sub_elements: (14553, 14564), sub_element_ver: 8183, attributes: (115, 118), attributes_ver: 1531, character_data: None, mode: ContentMode::Sequence, ref_info: (5165, 5170)}, // SERVICE-INTERFACE-FIELD-MAPPING
    /* 4025 */ ElementSpec {sub_elements: (20169, 20170), sub_element_ver: 4, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // FIELDS
    /* 4026 */ ElementSpec {sub_elements: (10631, 10644), sub_element_ver: 7112, attributes: (115, 118), attributes_ver: 1531, character_data: None, mode: ContentMode::Sequence, ref_info: (5170, 5174)}, // SERVICE-INTERFACE-MAPPING
    /* 4027 */ ElementSpec {sub_elements: (14564, 14575), sub_element_ver: 8194, attributes: (115, 118), attributes_ver: 8194, character_data: None, mode: ContentMode::Sequence, ref_info: (5174, 5178)}, // SERVICE-INTERFACE-MAPPING-SET
    /* 4028 */ ElementSpec {sub_elements: (18871, 18875), sub_element_ver: 9157, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // ELEMENT-MAPPINGS
    /* 4029 */ ElementSpec {sub_elements: (18421, 18422), sub_element_ver: 574, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // INTERFACE-MAPPINGS
    /* 4030 */ ElementSpec {sub_elements: (21025, 21026), sub_element_ver: 4, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // SOURCE-SERVICE-INTERFACE-REFS
    /* 4031 */ ElementSpec {sub_elements: (14575, 14586), sub_element_ver: 8183, attributes: (115, 118), attributes_ver: 1531, character_data: None, mode: ContentMode::Sequence, ref_info: (5178, 5183)}, // SERVICE-INTERFACE-METHOD-MAPPING
    /* 4032 */ ElementSpec {sub_elements: (20170, 20171), sub_element_ver: 4, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // METHODS
    /* 4033 */ ElementSpec {sub_elements: (21026, 21027), sub_element_ver: 75, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // OPTIONAL-ELEMENTS
    /* 4034 */ ElementSpec {sub_elements: (16274, 16284), sub_element_ver: 1642, attributes: (115, 118), attributes_ver: 909, character_data: None, mode: ContentMode::Sequence, ref_info: (5183, 5187)}, // SERVICE-INTERFACE-PEDIGREE
    /* 4035 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (3169, 3175), attributes_ver: 1642, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // SERVICE-INTERFACE-REF
    /* 4036 */ ElementSpec {sub_elements: (21027, 21028), sub_element_ver: 64, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // SERVICE-INTERFACE-REFS
    /* 4037 */ ElementSpec {sub_elements: (20274, 20275), sub_element_ver: 1541, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // POSSIBLE-ERRORS
    /* 4038 */ ElementSpec {sub_elements: (17310, 17319), sub_element_ver: 8711, attributes: (0, 2), attributes_ver: 75, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // SERVICE-INTERFACE-SUB-ELEMENT
    /* 4039 */ ElementSpec {sub_elements: (21028, 21029), sub_element_ver: 491, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // OPT-APP-RECORD-ELEMENT-IN-METHOD-IREFS
    /* 4040 */ ElementSpec {sub_elements: (21029, 21030), sub_element_ver: 491, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // OPT-APP-RECORD-ELEMENT-IN-SERVICE-INTERFACE-IREFS
    /* 4041 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (397, 403), attributes_ver: 9337, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // OPT-ARGUMENT-REF
    /* 4042 */ ElementSpec {sub_elements: (21030, 21031), sub_element_ver: 491, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // OPT-ARGUMENT-REFS
    /* 4043 */ ElementSpec {sub_elements: (21031, 21032), sub_element_ver: 491, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // OPT-IMPL-RECORD-ELEMENTS
    /* 4044 */ ElementSpec {sub_elements: (14586, 14597), sub_element_ver: 4093, attributes: (115, 118), attributes_ver: 81, character_data: None, mode: ContentMode::Sequence, ref_info: (5187, 5192)}, // SERVICE-INTERFACE-TRIGGER-MAPPING
    /* 4045 */ ElementSpec {sub_elements: (21032, 21033), sub_element_ver: 20, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // TRIGGERS
    /* 4046 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (673, 679), attributes_ver: 9469, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // METHOD-REF, SOURCE-METHOD-REF, TARGET-METHOD-REF
    /* 4047 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 656, character_data: Some(798), mode: ContentMode::Characters, ref_info: (0, 0)}, // SERVICE-KIND
    /* 4048 */ ElementSpec {sub_elements: (3168, 3188), sub_element_ver: 2831, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (5192, 5202)}, // SERVICE-PROXY-SW-COMPONENT-TYPE
    /* 4049 */ ElementSpec {sub_elements: (3168, 3188), sub_element_ver: 2831, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (5202, 5212)}, // SERVICE-SW-COMPONENT-TYPE
    /* 4050 */ ElementSpec {sub_elements: (5511, 5528), sub_element_ver: 4499, attributes: (115, 118), attributes_ver: 77, character_data: None, mode: ContentMode::Sequence, ref_info: (5212, 5217)}, // SERVICE-TIMING
    /* 4051 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (763, 769), attributes_ver: 500, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // SERVICE-INSTANCE-REF
    /* 4052 */ ElementSpec {sub_elements: (21033, 21034), sub_element_ver: 19, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // SERVICE-INSTANCE-REFS
    /* 4053 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 64, character_data: Some(799), mode: ContentMode::Characters, ref_info: (0, 0)}, // VERSION-DRIVEN-FIND-BEHAVIOR
    /* 4054 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 134, character_data: Some(800), mode: ContentMode::Characters, ref_info: (0, 0)}, // SEVERITY
    /* 4055 */ ElementSpec {sub_elements: (20016, 20018), sub_element_ver: 1612, attributes: (0, 2), attributes_ver: 1612, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // SHORT-NAME-FRAGMENT
    /* 4056 */ ElementSpec {sub_elements: (16284, 16294), sub_element_ver: 7430, attributes: (115, 118), attributes_ver: 4960, character_data: None, mode: ContentMode::Sequence, ref_info: (5217, 5219)}, // SIGNAL-BASED-EVENT-DEPLOYMENT
    /* 4057 */ ElementSpec {sub_elements: (18476, 18477), sub_element_ver: 75, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // EVENT-ELEMENTS
    /* 4058 */ ElementSpec {sub_elements: (10644, 10657), sub_element_ver: 7125, attributes: (115, 118), attributes_ver: 2356, character_data: None, mode: ContentMode::Sequence, ref_info: (5219, 5221)}, // SIGNAL-BASED-EVENT-ELEMENT-TO-I-SIGNAL-TRIGGERING-MAPPING
    /* 4059 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (3175, 3181), attributes_ver: 9337, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // SIGNAL-BASED-EVENT-REF
    /* 4060 */ ElementSpec {sub_elements: (16294, 16304), sub_element_ver: 7430, attributes: (115, 118), attributes_ver: 4960, character_data: None, mode: ContentMode::Sequence, ref_info: (5221, 5223)}, // SIGNAL-BASED-FIELD-DEPLOYMENT
    /* 4061 */ ElementSpec {sub_elements: (18480, 18481), sub_element_ver: 75, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // FIELD-ELEMENTS
    /* 4062 */ ElementSpec {sub_elements: (5528, 5545), sub_element_ver: 4805, attributes: (115, 118), attributes_ver: 1153, character_data: None, mode: ContentMode::Sequence, ref_info: (5223, 5225)}, // SIGNAL-BASED-FIELD-TO-I-SIGNAL-TRIGGERING-MAPPING
    /* 4063 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2317, 2323), attributes_ver: 9355, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // CALL-SIGNAL-TRIGGERING-REF, GETTER-CALL-SIGNAL-REF, GETTER-RETURN-SIGNAL-REF, I-SIGNAL-TRIGGERING-REF, NOTIFIER-SIGNAL-TRIGGERING-REF, RETURN-SIGNAL-TRIGGERING-REF, SETTER-CALL-SIGNAL-REF, SETTER-RETURN-SIGNAL-REF
    /* 4064 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (3181, 3187), attributes_ver: 9337, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // SIGNAL-BASED-FIELD-REF
    /* 4065 */ ElementSpec {sub_elements: (16304, 16314), sub_element_ver: 3664, attributes: (115, 118), attributes_ver: 463, character_data: None, mode: ContentMode::Sequence, ref_info: (5225, 5227)}, // SIGNAL-BASED-FIRE-AND-FORGET-METHOD-TO-I-SIGNAL-TRIGGERING-MAPPING
    /* 4066 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2317, 2323), attributes_ver: 3664, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // I-SIGNAL-TRIGGERING-REF
    /* 4067 */ ElementSpec {sub_elements: (7588, 7597), sub_element_ver: 7430, attributes: (115, 118), attributes_ver: 4960, character_data: None, mode: ContentMode::Sequence, ref_info: (5227, 5229)}, // SIGNAL-BASED-METHOD-DEPLOYMENT
    /* 4068 */ ElementSpec {sub_elements: (12618, 12630), sub_element_ver: 7790, attributes: (115, 118), attributes_ver: 2356, character_data: None, mode: ContentMode::Sequence, ref_info: (5229, 5231)}, // METHOD-MAPPING, SIGNAL-BASED-METHOD-TO-I-SIGNAL-TRIGGERING-MAPPING
    /* 4069 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (673, 679), attributes_ver: 1187, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // METHOD-REF
    /* 4070 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (3187, 3193), attributes_ver: 9337, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // SIGNAL-BASED-METHOD-REF
    /* 4071 */ ElementSpec {sub_elements: (6364, 6377), sub_element_ver: 7138, attributes: (115, 118), attributes_ver: 7138, character_data: None, mode: ContentMode::Sequence, ref_info: (5231, 5237)}, // SIGNAL-BASED-SERVICE-INTERFACE-DEPLOYMENT
    /* 4072 */ ElementSpec {sub_elements: (16314, 16324), sub_element_ver: 4093, attributes: (115, 118), attributes_ver: 81, character_data: None, mode: ContentMode::Sequence, ref_info: (5237, 5239)}, // SIGNAL-BASED-TRIGGER-TO-I-SIGNAL-TRIGGERING-MAPPING
    /* 4073 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2317, 2323), attributes_ver: 4093, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // I-SIGNAL-TRIGGERING-REF
    /* 4074 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 22, character_data: Some(813), mode: ContentMode::Characters, ref_info: (0, 0)}, // SIGNAL-FAN
    /* 4075 */ ElementSpec {sub_elements: (18875, 18879), sub_element_ver: 29, attributes: (0, 2), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // SIGNAL-I-PDU-COUNTER
    /* 4076 */ ElementSpec {sub_elements: (19421, 19424), sub_element_ver: 22, attributes: (0, 2), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // SIGNAL-I-PDU-REPLICATION
    /* 4077 */ ElementSpec {sub_elements: (21034, 21035), sub_element_ver: 7, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // REPLICA-PDUS-REFS
    /* 4078 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 64, character_data: Some(814), mode: ContentMode::Characters, ref_info: (0, 0)}, // SERVICE-CONTROL
    /* 4079 */ ElementSpec {sub_elements: (14597, 14608), sub_element_ver: 1642, attributes: (115, 118), attributes_ver: 909, character_data: None, mode: ContentMode::Sequence, ref_info: (5239, 5240)}, // SIGNAL-SERVICE-TRANSLATION-ELEMENT-PROPS
    /* 4080 */ ElementSpec {sub_elements: (19616, 19618), sub_element_ver: 64, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Choice, ref_info: (0, 0)}, // DATA-PROTOTOTYPE-IN-PORT-INTERFACE-REF, ELEMENT
    /* 4081 */ ElementSpec {sub_elements: (10657, 10670), sub_element_ver: 3087, attributes: (115, 118), attributes_ver: 909, character_data: None, mode: ContentMode::Sequence, ref_info: (5240, 5241)}, // SIGNAL-SERVICE-TRANSLATION-EVENT-PROPS
    /* 4082 */ ElementSpec {sub_elements: (21035, 21036), sub_element_ver: 64, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // ELEMENT-PROPSS
    /* 4083 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (3193, 3199), attributes_ver: 1642, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // SERVICE-ELEMENT-MAPPING-REF
    /* 4084 */ ElementSpec {sub_elements: (21036, 21037), sub_element_ver: 64, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // SERVICE-ELEMENT-MAPPING-REFS
    /* 4085 */ ElementSpec {sub_elements: (10670, 10683), sub_element_ver: 3087, attributes: (115, 118), attributes_ver: 909, character_data: None, mode: ContentMode::Sequence, ref_info: (5241, 5242)}, // SIGNAL-SERVICE-TRANSLATION-PROPS
    /* 4086 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (1015, 1021), attributes_ver: 1642, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // CONTROL-CONSUMED-EVENT-GROUP-REF
    /* 4087 */ ElementSpec {sub_elements: (21037, 21038), sub_element_ver: 64, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // CONTROL-CONSUMED-EVENT-GROUP-REFS
    /* 4088 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (901, 907), attributes_ver: 1642, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // CONTROL-PNC-REF
    /* 4089 */ ElementSpec {sub_elements: (21038, 21039), sub_element_ver: 64, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // CONTROL-PNC-REFS
    /* 4090 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (1021, 1027), attributes_ver: 1642, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // CONTROL-PROVIDED-EVENT-GROUP-REF
    /* 4091 */ ElementSpec {sub_elements: (21039, 21040), sub_element_ver: 64, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // CONTROL-PROVIDED-EVENT-GROUP-REFS
    /* 4092 */ ElementSpec {sub_elements: (16324, 16334), sub_element_ver: 1642, attributes: (115, 118), attributes_ver: 909, character_data: None, mode: ContentMode::Sequence, ref_info: (5242, 5248)}, // SIGNAL-SERVICE-TRANSLATION-PROPS-SET
    /* 4093 */ ElementSpec {sub_elements: (21040, 21041), sub_element_ver: 64, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // SIGNAL-SERVICE-TRANSLATION-PROPSS
    /* 4094 */ ElementSpec {sub_elements: (21041, 21042), sub_element_ver: 64, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // SIGNAL-SERVICE-TRANSLATION-EVENT-PROPSS
    /* 4095 */ ElementSpec {sub_elements: (4297, 4316), sub_element_ver: 3721, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (5248, 5250)}, // SIMULATED-EXECUTION-TIME
    /* 4096 */ ElementSpec {sub_elements: (18364, 18369), sub_element_ver: 456, attributes: (0, 2), attributes_ver: 22, character_data: Some(982), mode: ContentMode::Mixed, ref_info: (0, 0)}, // LABEL, LABEL-1, LONG-NAME-1
    /* 4097 */ ElementSpec {sub_elements: (15854, 15864), sub_element_ver: 8505, attributes: (3843, 3846), attributes_ver: 840, character_data: Some(982), mode: ContentMode::Mixed, ref_info: (0, 0)}, // FT
    /* 4098 */ ElementSpec {sub_elements: (10228, 10241), sub_element_ver: 7151, attributes: (3843, 3846), attributes_ver: 840, character_data: Some(982), mode: ContentMode::Mixed, ref_info: (0, 0)}, // FT
    /* 4099 */ ElementSpec {sub_elements: (14608, 14619), sub_element_ver: 1502, attributes: (115, 118), attributes_ver: 230, character_data: None, mode: ContentMode::Sequence, ref_info: (5250, 5257)}, // SM-INTERACTS-WITH-NM-MAPPING
    /* 4100 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (3199, 3205), attributes_ver: 230, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // ACTION-ITEM-REF
    /* 4101 */ ElementSpec {sub_elements: (18879, 18883), sub_element_ver: 67, attributes: (0, 2), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // SO-AD-CONFIG
    /* 4102 */ ElementSpec {sub_elements: (21042, 21043), sub_element_ver: 0, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // CONNECTION-BUNDLES
    /* 4103 */ ElementSpec {sub_elements: (21043, 21044), sub_element_ver: 7, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // CONNECTIONS
    /* 4104 */ ElementSpec {sub_elements: (21044, 21045), sub_element_ver: 7, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // LOGIC-ADDRESSS
    /* 4105 */ ElementSpec {sub_elements: (21045, 21046), sub_element_ver: 7, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // SOCKET-ADDRESSS
    /* 4106 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 22, character_data: Some(815), mode: ContentMode::Characters, ref_info: (0, 0)}, // AUTOSAR-CONNECTOR
    /* 4107 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 22, character_data: Some(816), mode: ContentMode::Characters, ref_info: (0, 0)}, // SOCKET-PROTOCOL
    /* 4108 */ ElementSpec {sub_elements: (16334, 16344), sub_element_ver: 8515, attributes: (115, 118), attributes_ver: 0, character_data: None, mode: ContentMode::Sequence, ref_info: (5257, 5261)}, // SO-AD-ROUTING-GROUP
    /* 4109 */ ElementSpec {sub_elements: (17850, 17857), sub_element_ver: 1642, attributes: (0, 2), attributes_ver: 64, character_data: None, mode: ContentMode::Sequence, ref_info: (5261, 5262)}, // SO-CON-I-PDU-IDENTIFIER
    /* 4110 */ ElementSpec {sub_elements: (20018, 20020), sub_element_ver: 64, attributes: (0, 2), attributes_ver: 64, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // SO-CON-I-PDU-IDENTIFIER-REF-CONDITIONAL
    /* 4111 */ ElementSpec {sub_elements: (2473, 2498), sub_element_ver: 2204, attributes: (115, 118), attributes_ver: 846, character_data: None, mode: ContentMode::Sequence, ref_info: (5262, 5263)}, // SOCKET-ADDRESS
    /* 4112 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (3205, 3211), attributes_ver: 1642, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // ALLOWED-I-PV-6-EXT-HEADERS-REF
    /* 4113 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (3211, 3217), attributes_ver: 1642, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // ALLOWED-TCP-OPTIONS-REF
    /* 4114 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2005, 2011), attributes_ver: 9361, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // CONNECTOR-REF
    /* 4115 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2005, 2011), attributes_ver: 9379, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // MULTICAST-CONNECTOR-REF
    /* 4116 */ ElementSpec {sub_elements: (21046, 21047), sub_element_ver: 401, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // MULTICAST-CONNECTOR-REFS
    /* 4117 */ ElementSpec {sub_elements: (20020, 20022), sub_element_ver: 64, attributes: (0, 2), attributes_ver: 64, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // SOCKET-ADDRESS-REF-CONDITIONAL
    /* 4118 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (3217, 3223), attributes_ver: 1642, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // SOCKET-ADDRESS-REF
    /* 4119 */ ElementSpec {sub_elements: (21047, 21048), sub_element_ver: 64, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // STATIC-SOCKET-CONNECTIONS
    /* 4120 */ ElementSpec {sub_elements: (2715, 2739), sub_element_ver: 2422, attributes: (0, 2), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // SOCKET-CONNECTION
    /* 4121 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (3205, 3211), attributes_ver: 9325, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // ALLOWED-I-PV-6-EXT-HEADERS-REF
    /* 4122 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (3211, 3217), attributes_ver: 9325, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // ALLOWED-TCP-OPTIONS-REF
    /* 4123 */ ElementSpec {sub_elements: (16344, 16354), sub_element_ver: 8525, attributes: (0, 2), attributes_ver: 0, character_data: None, mode: ContentMode::Sequence, ref_info: (5263, 5264)}, // SOCKET-CONNECTION-BUNDLE
    /* 4124 */ ElementSpec {sub_elements: (21043, 21044), sub_element_ver: 0, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // BUNDLED-CONNECTIONS
    /* 4125 */ ElementSpec {sub_elements: (21048, 21049), sub_element_ver: 43, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // PDUS
    /* 4126 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (3217, 3223), attributes_ver: 9319, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // CLIENT-PORT-REF, SERVER-PORT-REF
    /* 4127 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (3223, 3229), attributes_ver: 9361, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // DO-IP-SOURCE-ADDRESS-REF, DO-IP-TARGET-ADDRESS-REF
    /* 4128 */ ElementSpec {sub_elements: (17857, 17864), sub_element_ver: 8926, attributes: (0, 2), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // SOCKET-CONNECTION-IPDU-IDENTIFIER
    /* 4129 */ ElementSpec {sub_elements: (16354, 16364), sub_element_ver: 1642, attributes: (115, 118), attributes_ver: 909, character_data: None, mode: ContentMode::Sequence, ref_info: (5264, 5271)}, // SOCKET-CONNECTION-IPDU-IDENTIFIER-SET
    /* 4130 */ ElementSpec {sub_elements: (21049, 21050), sub_element_ver: 64, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // I-PDU-IDENTIFIERS
    /* 4131 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (3217, 3223), attributes_ver: 9361, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // LOCAL-PORT-REF, REMOTE-PORT-REF
    /* 4132 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2107, 2113), attributes_ver: 9361, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // DATA-PDU-REF, DIRECT-PDU-REF, FLOW-CONTROL-PDU-REF, FLOW-CONTROL-REF, N-PDU-REF
    /* 4133 */ ElementSpec {sub_elements: (21048, 21049), sub_element_ver: 7, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // PDUS
    /* 4134 */ ElementSpec {sub_elements: (18883, 18887), sub_element_ver: 4237, attributes: (0, 2), attributes_ver: 538, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // SOFTWARE-ACTIVATION-DEPENDENCY-COMPARE-CONDITION
    /* 4135 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (3229, 3235), attributes_ver: 4237, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // SOFTWARE-ACTIVATION-DEPENDENCY-REF
    /* 4136 */ ElementSpec {sub_elements: (20022, 20024), sub_element_ver: 538, attributes: (0, 2), attributes_ver: 538, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // CONFLICTS-TO, DEPENDS-ON, SOFTWARE-ACTIVATION-DEPENDENCY-FORMULA
    /* 4137 */ ElementSpec {sub_elements: (18891, 18893), sub_element_ver: 538, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // PARTS
    /* 4138 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 538, character_data: Some(822), mode: ContentMode::Characters, ref_info: (0, 0)}, // OPERATOR
    /* 4139 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 538, character_data: Some(823), mode: ContentMode::Characters, ref_info: (0, 0)}, // COMPARE-TYPE
    /* 4140 */ ElementSpec {sub_elements: (1089, 1123), sub_element_ver: 1153, attributes: (115, 118), attributes_ver: 1153, character_data: None, mode: ContentMode::Sequence, ref_info: (5271, 5278)}, // SOFTWARE-CLUSTER
    /* 4141 */ ElementSpec {sub_elements: (21050, 21051), sub_element_ver: 20, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // ARTIFACT-CHECKSUMS
    /* 4142 */ ElementSpec {sub_elements: (21051, 21052), sub_element_ver: 6, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // ARTIFACT-LOCATORS
    /* 4143 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (583, 589), attributes_ver: 500, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // CLAIMED-FUNCTION-GROUP-REF, TARGET-MODE-DECLARATION-GROUP-PROTOTYPE-REF
    /* 4144 */ ElementSpec {sub_elements: (21052, 21053), sub_element_ver: 19, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // CLAIMED-FUNCTION-GROUP-REFS
    /* 4145 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (3235, 3241), attributes_ver: 9355, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // CONTAINED-AR-ELEMENT-REF
    /* 4146 */ ElementSpec {sub_elements: (21053, 21054), sub_element_ver: 8, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // CONTAINED-AR-ELEMENT-REFS
    /* 4147 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2071, 2077), attributes_ver: 2229, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // CONTAINED-FIBEX-ELEMENT-REF, REQUIRED-FIBEX-ELEMENT-REF
    /* 4148 */ ElementSpec {sub_elements: (21054, 21055), sub_element_ver: 115, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // CONTAINED-FIBEX-ELEMENT-REFS
    /* 4149 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (3241, 3247), attributes_ver: 9355, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // CONTAINED-PACKAGE-ELEMENT-REF
    /* 4150 */ ElementSpec {sub_elements: (21055, 21056), sub_element_ver: 8, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // CONTAINED-PACKAGE-ELEMENT-REFS
    /* 4151 */ ElementSpec {sub_elements: (21056, 21057), sub_element_ver: 8, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // CONTAINED-PROCESS-REFS
    /* 4152 */ ElementSpec {sub_elements: (20024, 20026), sub_element_ver: 9236, attributes: (0, 2), attributes_ver: 9236, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // SOFTWARE-CLUSTER-DEPENDENCY
    /* 4153 */ ElementSpec {sub_elements: (18887, 18891), sub_element_ver: 9161, attributes: (0, 2), attributes_ver: 9161, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // SOFTWARE-CLUSTER-DEPENDENCY-COMPARE-CONDITION
    /* 4154 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (3247, 3253), attributes_ver: 9511, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // SOFTWARE-CLUSTER-REF
    /* 4155 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (3247, 3253), attributes_ver: 9457, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // DEPENDENT-SOFTWARE-CLUSTER-REF
    /* 4156 */ ElementSpec {sub_elements: (19424, 19427), sub_element_ver: 47, attributes: (0, 2), attributes_ver: 48, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // CONFLICTS-TO, DEPENDS-ON, SOFTWARE-CLUSTER-DEPENDENCY-FORMULA
    /* 4157 */ ElementSpec {sub_elements: (18891, 18895), sub_element_ver: 9165, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // PARTS
    /* 4158 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 48, character_data: Some(825), mode: ContentMode::Characters, ref_info: (0, 0)}, // OPERATOR
    /* 4159 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 9161, character_data: Some(826), mode: ContentMode::Characters, ref_info: (0, 0)}, // COMPARE-TYPE
    /* 4160 */ ElementSpec {sub_elements: (21057, 21058), sub_element_ver: 1170, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // DEPENDS-ONS
    /* 4161 */ ElementSpec {sub_elements: (2498, 2523), sub_element_ver: 2229, attributes: (115, 118), attributes_ver: 2229, character_data: None, mode: ContentMode::Sequence, ref_info: (5278, 5284)}, // SOFTWARE-CLUSTER-DESIGN
    /* 4162 */ ElementSpec {sub_elements: (21058, 21059), sub_element_ver: 48, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // CONTAINED-PROCESS-REFS
    /* 4163 */ ElementSpec {sub_elements: (20026, 20028), sub_element_ver: 637, attributes: (0, 2), attributes_ver: 637, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // SOFTWARE-CLUSTER-DESIGN-DEPENDENCY
    /* 4164 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (313, 319), attributes_ver: 6018, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // DEPENDENT-SOFTWARE-CLUSTER-DESIGN-REF
    /* 4165 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (313, 319), attributes_ver: 9397, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // DEPENDS-ON-REF
    /* 4166 */ ElementSpec {sub_elements: (21059, 21060), sub_element_ver: 2242, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // DEPENDS-ON-REFS
    /* 4167 */ ElementSpec {sub_elements: (21060, 21061), sub_element_ver: 494, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // DEPENDS-ONS
    /* 4168 */ ElementSpec {sub_elements: (19139, 19140), sub_element_ver: 2243, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // DIAGNOSTIC-ADDRESSS
    /* 4169 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (3253, 3259), attributes_ver: 2229, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // DIAGNOSTIC-CONTRIBUTION-REF
    /* 4170 */ ElementSpec {sub_elements: (21061, 21062), sub_element_ver: 115, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // DIAGNOSTIC-CONTRIBUTION-REFS
    /* 4171 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (3259, 3265), attributes_ver: 425, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // DO-IP-LOGICAL-ADDRESS-REF
    /* 4172 */ ElementSpec {sub_elements: (21062, 21063), sub_element_ver: 6, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // INTENDED-TARGET-MACHINE-REFS
    /* 4173 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (313, 319), attributes_ver: 2229, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // DESIGN-REF
    /* 4174 */ ElementSpec {sub_elements: (21063, 21064), sub_element_ver: 115, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // DESIGN-REFS
    /* 4175 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (3235, 3241), attributes_ver: 2229, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // REQUIRED-AR-ELEMENT-REF
    /* 4176 */ ElementSpec {sub_elements: (21064, 21065), sub_element_ver: 115, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // REQUIRED-AR-ELEMENT-REFS
    /* 4177 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (3265, 3271), attributes_ver: 230, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // REQUIRED-DESIGN-ELEMENT-REF
    /* 4178 */ ElementSpec {sub_elements: (21065, 21066), sub_element_ver: 16, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // REQUIRED-DESIGN-ELEMENT-REFS
    /* 4179 */ ElementSpec {sub_elements: (21066, 21067), sub_element_ver: 115, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // REQUIRED-FIBEX-ELEMENT-REFS
    /* 4180 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (3241, 3247), attributes_ver: 2229, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // REQUIRED-PACKAGE-ELEMENT-REF
    /* 4181 */ ElementSpec {sub_elements: (21067, 21068), sub_element_ver: 115, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // REQUIRED-PACKAGE-ELEMENT-REFS
    /* 4182 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (313, 319), attributes_ver: 9409, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // SUB-SOFTWARE-CLUSTER-REF
    /* 4183 */ ElementSpec {sub_elements: (21068, 21069), sub_element_ver: 2243, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // SUB-SOFTWARE-CLUSTER-REFS
    /* 4184 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 1153, character_data: Some(828), mode: ContentMode::Characters, ref_info: (0, 0)}, // ADDRESS-SEMANTICS
    /* 4185 */ ElementSpec {sub_elements: (19139, 19140), sub_element_ver: 92, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // DIAGNOSTIC-ADDRESSS
    /* 4186 */ ElementSpec {sub_elements: (7573, 7588), sub_element_ver: 5928, attributes: (115, 118), attributes_ver: 463, character_data: None, mode: ContentMode::Sequence, ref_info: (5284, 5290)}, // SOFTWARE-CLUSTER-DIAGNOSTIC-DEPLOYMENT-PROPS
    /* 4187 */ ElementSpec {sub_elements: (19139, 19142), sub_element_ver: 301, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // DIAGNOSTIC-ADDRESSS
    /* 4188 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (3253, 3259), attributes_ver: 3664, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // DIAGNOSTIC-EXTRACT-REF
    /* 4189 */ ElementSpec {sub_elements: (20428, 20429), sub_element_ver: 6, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // EXTERNAL-AUTHENTICATIONS
    /* 4190 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (3271, 3277), attributes_ver: 3664, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // DIAGNOSTIC-DEPLOYMENT-PROPS-REF
    /* 4191 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (3253, 3259), attributes_ver: 9427, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // DIAGNOSTIC-EXTRACT-REF
    /* 4192 */ ElementSpec {sub_elements: (18895, 18899), sub_element_ver: 9169, attributes: (0, 2), attributes_ver: 9169, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // DIAGNOSTIC-PROPS
    /* 4193 */ ElementSpec {sub_elements: (19139, 19140), sub_element_ver: 1176, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // DIAGNOSTIC-ADDRESSS
    /* 4194 */ ElementSpec {sub_elements: (20428, 20429), sub_element_ver: 1176, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // EXTERNAL-AUTHENTICATIONS
    /* 4195 */ ElementSpec {sub_elements: (20028, 20030), sub_element_ver: 1153, attributes: (0, 2), attributes_ver: 1153, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // SOFTWARE-CLUSTER-DOIP-DIAGNOSTIC-ADDRESS
    /* 4196 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 301, character_data: Some(830), mode: ContentMode::Characters, ref_info: (0, 0)}, // INSTALLATION-BEHAVIOR
    /* 4197 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (481, 487), attributes_ver: 48, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // LICENSE-REF, RELEASE-NOTES-REF
    /* 4198 */ ElementSpec {sub_elements: (21069, 21070), sub_element_ver: 48, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // LICENSE-REFS
    /* 4199 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2203, 2209), attributes_ver: 1187, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // MODULE-INSTANTIATION-REF
    /* 4200 */ ElementSpec {sub_elements: (21070, 21071), sub_element_ver: 9, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // MODULE-INSTANTIATION-REFS
    /* 4201 */ ElementSpec {sub_elements: (8842, 8856), sub_element_ver: 4822, attributes: (115, 118), attributes_ver: 4822, character_data: None, mode: ContentMode::Sequence, ref_info: (5290, 5294)}, // SOFTWARE-CLUSTER-REQUIREMENT
    /* 4202 */ ElementSpec {sub_elements: (19139, 19140), sub_element_ver: 491, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // DIAGNOSTIC-ADDRESSS
    /* 4203 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (3691, 3696), attributes_ver: 4822, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // DIAGNOSTIC-CONTRIBUTION-REF
    /* 4204 */ ElementSpec {sub_elements: (21071, 21072), sub_element_ver: 491, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // DIAGNOSTIC-CONTRIBUTION-REFS
    /* 4205 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (3696, 3701), attributes_ver: 4822, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // INTENDED-TARGET-MACHINE-REF
    /* 4206 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (3701, 3706), attributes_ver: 4822, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // REQUIREMENT-REF
    /* 4207 */ ElementSpec {sub_elements: (21072, 21073), sub_element_ver: 491, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // REQUIREMENT-REFS
    /* 4208 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (3706, 3711), attributes_ver: 4822, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // REQUIRED-AR-ELEMENT-REF
    /* 4209 */ ElementSpec {sub_elements: (21073, 21074), sub_element_ver: 491, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // REQUIRED-AR-ELEMENT-REFS
    /* 4210 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (3711, 3716), attributes_ver: 4822, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // REQUIRED-PACKAGE-ELEMENT-REF
    /* 4211 */ ElementSpec {sub_elements: (21074, 21075), sub_element_ver: 491, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // REQUIRED-PACKAGE-ELEMENT-REFS
    /* 4212 */ ElementSpec {sub_elements: (20030, 20032), sub_element_ver: 301, attributes: (0, 2), attributes_ver: 301, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // SOFTWARE-CLUSTER-SOVD-ADDRESS
    /* 4213 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (3247, 3253), attributes_ver: 6018, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // SUB-SOFTWARE-CLUSTER-REF
    /* 4214 */ ElementSpec {sub_elements: (21075, 21076), sub_element_ver: 494, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // SUB-SOFTWARE-CLUSTER-REFS
    /* 4215 */ ElementSpec {sub_elements: (20028, 20030), sub_element_ver: 123, attributes: (0, 2), attributes_ver: 123, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // SOFTWARE-CLUSTER-UDS-DIAGNOSTIC-ADDRESS
    /* 4216 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (1147, 1153), attributes_ver: 48, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // PACKAGER-SIGNATURE-REF, VENDOR-SIGNATURE-REF
    /* 4217 */ ElementSpec {sub_elements: (18899, 18903), sub_element_ver: 794, attributes: (0, 2), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // SOFTWARE-CONTEXT
    /* 4218 */ ElementSpec {sub_elements: (1920, 1948), sub_element_ver: 1785, attributes: (115, 118), attributes_ver: 48, character_data: None, mode: ContentMode::Sequence, ref_info: (5294, 5300)}, // SOFTWARE-PACKAGE
    /* 4219 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 48, character_data: Some(833), mode: ContentMode::Characters, ref_info: (0, 0)}, // ACTION-TYPE
    /* 4220 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 9535, character_data: Some(834), mode: ContentMode::Characters, ref_info: (0, 0)}, // ACTIVATION-ACTION
    /* 4221 */ ElementSpec {sub_elements: (21076, 21077), sub_element_ver: 63, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // PRE-ACTIVATE-IREFS
    /* 4222 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (481, 487), attributes_ver: 4093, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // PURPOSE-OF-UPDATE-REF
    /* 4223 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (3247, 3253), attributes_ver: 48, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // SOFTWARE-CLUSTER-REF
    /* 4224 */ ElementSpec {sub_elements: (10683, 10696), sub_element_ver: 7164, attributes: (115, 118), attributes_ver: 909, character_data: None, mode: ContentMode::Sequence, ref_info: (5300, 5301)}, // SOFTWARE-PACKAGE-STEP
    /* 4225 */ ElementSpec {sub_elements: (21077, 21078), sub_element_ver: 63, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // PRE-ACTIVATE-REFS
    /* 4226 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (3277, 3283), attributes_ver: 1642, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // PROCESS-REF, TRANSFER-REF
    /* 4227 */ ElementSpec {sub_elements: (21078, 21079), sub_element_ver: 64, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // TRANSFERS
    /* 4228 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (3277, 3283), attributes_ver: 4147, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // PRE-ACTIVATE-REF, VERIFY-REF
    /* 4229 */ ElementSpec {sub_elements: (21079, 21080), sub_element_ver: 63, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // VERIFY-REFS
    /* 4230 */ ElementSpec {sub_elements: (20032, 20034), sub_element_ver: 64, attributes: (0, 2), attributes_ver: 64, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // SOFTWARE-PACKAGE-STORING
    /* 4231 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 64, character_data: Some(835), mode: ContentMode::Characters, ref_info: (0, 0)}, // STORING
    /* 4232 */ ElementSpec {sub_elements: (21080, 21081), sub_element_ver: 64, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // TRANSFER-REFS
    /* 4233 */ ElementSpec {sub_elements: (21081, 21082), sub_element_ver: 63, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // VERIFY-IREFS
    /* 4234 */ ElementSpec {sub_elements: (20034, 20036), sub_element_ver: 9, attributes: (0, 2), attributes_ver: 9, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // COLLECTION-PROPS
    /* 4235 */ ElementSpec {sub_elements: (12630, 12642), sub_element_ver: 2941, attributes: (115, 118), attributes_ver: 1531, character_data: None, mode: ContentMode::Sequence, ref_info: (5301, 5307)}, // SOMEIP-DATA-PROTOTYPE-TRANSFORMATION-PROPS
    /* 4236 */ ElementSpec {sub_elements: (19427, 19430), sub_element_ver: 9190, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // DATA-PROTOTYPES
    /* 4237 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (3283, 3289), attributes_ver: 9469, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // SOMEIP-TRANSFORMATION-PROPS-REF
    /* 4238 */ ElementSpec {sub_elements: (10696, 10709), sub_element_ver: 5336, attributes: (115, 118), attributes_ver: 5336, character_data: None, mode: ContentMode::Sequence, ref_info: (5307, 5309)}, // NOTIFIER, SOMEIP-EVENT
    /* 4239 */ ElementSpec {sub_elements: (4316, 4335), sub_element_ver: 3835, attributes: (115, 118), attributes_ver: 1153, character_data: None, mode: ContentMode::Sequence, ref_info: (5309, 5311)}, // NOTIFIER, SOMEIP-EVENT-DEPLOYMENT
    /* 4240 */ ElementSpec {sub_elements: (11118, 11130), sub_element_ver: 1514, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Choice, ref_info: (0, 0)}, // EVENT-RECEPTION-DEFAULT-VALUE
    /* 4241 */ ElementSpec {sub_elements: (16364, 16374), sub_element_ver: 1531, attributes: (115, 118), attributes_ver: 1531, character_data: None, mode: ContentMode::Sequence, ref_info: (5311, 5312)}, // SOMEIP-EVENT-GROUP
    /* 4242 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (3289, 3295), attributes_ver: 9469, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // EVENT-REF
    /* 4243 */ ElementSpec {sub_elements: (21082, 21083), sub_element_ver: 4, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // EVENT-REFS
    /* 4244 */ ElementSpec {sub_elements: (19430, 19433), sub_element_ver: 9220, attributes: (0, 2), attributes_ver: 115, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // SOMEIP-EVENT-PROPS
    /* 4245 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (3289, 3295), attributes_ver: 2229, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // EVENT-REF
    /* 4246 */ ElementSpec {sub_elements: (12642, 12654), sub_element_ver: 5336, attributes: (115, 118), attributes_ver: 5336, character_data: None, mode: ContentMode::Sequence, ref_info: (5312, 5314)}, // SOMEIP-FIELD
    /* 4247 */ ElementSpec {sub_elements: (10709, 10722), sub_element_ver: 7177, attributes: (115, 118), attributes_ver: 1153, character_data: None, mode: ContentMode::Sequence, ref_info: (5314, 5316)}, // SOMEIP-FIELD-DEPLOYMENT
    /* 4248 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 1612, character_data: Some(838), mode: ContentMode::Characters, ref_info: (0, 0)}, // MESSAGE-TYPE
    /* 4249 */ ElementSpec {sub_elements: (7588, 7603), sub_element_ver: 5336, attributes: (115, 118), attributes_ver: 5336, character_data: None, mode: ContentMode::Sequence, ref_info: (5316, 5318)}, // GET, SET, SOMEIP-METHOD
    /* 4250 */ ElementSpec {sub_elements: (3839, 3859), sub_element_ver: 3396, attributes: (115, 118), attributes_ver: 1153, character_data: None, mode: ContentMode::Sequence, ref_info: (5318, 5320)}, // GET, SET, SOMEIP-METHOD-DEPLOYMENT
    /* 4251 */ ElementSpec {sub_elements: (19433, 19436), sub_element_ver: 9220, attributes: (0, 2), attributes_ver: 115, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // SOMEIP-METHOD-PROPS
    /* 4252 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (3295, 3301), attributes_ver: 2229, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // METHOD-REF
    /* 4253 */ ElementSpec {sub_elements: (17616, 17624), sub_element_ver: 3664, attributes: (0, 2), attributes_ver: 301, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // SOMEIP-RULE
    /* 4254 */ ElementSpec {sub_elements: (7603, 7618), sub_element_ver: 5943, attributes: (115, 118), attributes_ver: 1531, character_data: None, mode: ContentMode::Sequence, ref_info: (5320, 5321)}, // SOMEIP-PROVIDED-EVENT-GROUP
    /* 4255 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (3301, 3307), attributes_ver: 9469, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // EVENT-GROUP-REF
    /* 4256 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (3307, 3313), attributes_ver: 1187, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // SD-SERVER-EVENT-GROUP-TIMING-CONFIG-REF
    /* 4257 */ ElementSpec {sub_elements: (10722, 10735), sub_element_ver: 3664, attributes: (115, 118), attributes_ver: 463, character_data: None, mode: ContentMode::Sequence, ref_info: (5321, 5327)}, // SOMEIP-REMOTE-MULTICAST-CONFIG
    /* 4258 */ ElementSpec {sub_elements: (8856, 8870), sub_element_ver: 3664, attributes: (115, 118), attributes_ver: 463, character_data: None, mode: ContentMode::Sequence, ref_info: (5327, 5333)}, // SOMEIP-REMOTE-UNICAST-CONFIG
    /* 4259 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (3301, 3307), attributes_ver: 3664, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // EVENT-GROUP-REF
    /* 4260 */ ElementSpec {sub_elements: (21083, 21084), sub_element_ver: 6, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // EVENT-GROUP-REFS
    /* 4261 */ ElementSpec {sub_elements: (18489, 18494), sub_element_ver: 1538, attributes: (0, 2), attributes_ver: 531, character_data: None, mode: ContentMode::Sequence, ref_info: (5333, 5334)}, // SOMEIP-REQUIRED-EVENT-GROUP
    /* 4262 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (3313, 3319), attributes_ver: 1187, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // SD-CLIENT-EVENT-GROUP-TIMING-CONFIG-REF
    /* 4263 */ ElementSpec {sub_elements: (10735, 10748), sub_element_ver: 7190, attributes: (115, 118), attributes_ver: 3490, character_data: None, mode: ContentMode::Sequence, ref_info: (5334, 5340)}, // SD-CLIENT-EVENT-TIMING-CONFIG, SOMEIP-SD-CLIENT-EVENT-GROUP-TIMING-CONFIG
    /* 4264 */ ElementSpec {sub_elements: (20036, 20038), sub_element_ver: 64, attributes: (0, 2), attributes_ver: 64, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // SOMEIP-SD-CLIENT-EVENT-GROUP-TIMING-CONFIG-REF-CONDITIONAL
    /* 4265 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (3313, 3319), attributes_ver: 1642, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // SOMEIP-SD-CLIENT-EVENT-GROUP-TIMING-CONFIG-REF
    /* 4266 */ ElementSpec {sub_elements: (10748, 10761), sub_element_ver: 7203, attributes: (115, 118), attributes_ver: 3490, character_data: None, mode: ContentMode::Sequence, ref_info: (5340, 5346)}, // SD-CLIENT-CONFIG, SOMEIP-SD-CLIENT-SERVICE-INSTANCE-CONFIG
    /* 4267 */ ElementSpec {sub_elements: (20130, 20131), sub_element_ver: 1541, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // CAPABILITY-RECORDS
    /* 4268 */ ElementSpec {sub_elements: (20038, 20040), sub_element_ver: 64, attributes: (0, 2), attributes_ver: 64, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // SOMEIP-SD-CLIENT-SERVICE-INSTANCE-CONFIG-REF-CONDITIONAL
    /* 4269 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (3013, 3019), attributes_ver: 1642, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // SOMEIP-SD-CLIENT-SERVICE-INSTANCE-CONFIG-REF
    /* 4270 */ ElementSpec {sub_elements: (17624, 17632), sub_element_ver: 3664, attributes: (0, 2), attributes_ver: 301, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // SOMEIP-SD-RULE
    /* 4271 */ ElementSpec {sub_elements: (10735, 10745), sub_element_ver: 2104, attributes: (115, 118), attributes_ver: 9, character_data: None, mode: ContentMode::Sequence, ref_info: (5346, 5352)}, // SOMEIP-SD-SERVER-EVENT-GROUP-TIMING-CONFIG
    /* 4272 */ ElementSpec {sub_elements: (20040, 20042), sub_element_ver: 64, attributes: (0, 2), attributes_ver: 64, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // SOMEIP-SD-SERVER-EVENT-GROUP-TIMING-CONFIG-REF-CONDITIONAL
    /* 4273 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (3307, 3313), attributes_ver: 1642, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // SOMEIP-SD-SERVER-EVENT-GROUP-TIMING-CONFIG-REF
    /* 4274 */ ElementSpec {sub_elements: (20042, 20044), sub_element_ver: 9238, attributes: (0, 2), attributes_ver: 2200, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // SD-SERVER-EVENT-CONFIG
    /* 4275 */ ElementSpec {sub_elements: (7618, 7633), sub_element_ver: 5958, attributes: (115, 118), attributes_ver: 3490, character_data: None, mode: ContentMode::Sequence, ref_info: (5352, 5358)}, // SD-SERVER-CONFIG, SOMEIP-SD-SERVER-SERVICE-INSTANCE-CONFIG
    /* 4276 */ ElementSpec {sub_elements: (20044, 20046), sub_element_ver: 64, attributes: (0, 2), attributes_ver: 64, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // SOMEIP-SD-SERVER-SERVICE-INSTANCE-CONFIG-REF-CONDITIONAL
    /* 4277 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2947, 2953), attributes_ver: 1642, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // SOMEIP-SD-SERVER-SERVICE-INSTANCE-CONFIG-REF
    /* 4278 */ ElementSpec {sub_elements: (18903, 18907), sub_element_ver: 9173, attributes: (0, 2), attributes_ver: 531, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // SOMEIP-SERVICE-DISCOVERY
    /* 4279 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (373, 379), attributes_ver: 9469, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // MULTICAST-SD-IP-ADDRESS-REF, UNICAST-NETWORK-ENDPOINT-REF
    /* 4280 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2869, 2875), attributes_ver: 9355, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // MULTICAST-SECURE-COM-PROPS-REF, UNICAST-SECURE-COM-PROPS-REF
    /* 4281 */ ElementSpec {sub_elements: (21084, 21085), sub_element_ver: 8, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // UNICAST-SECURE-COM-PROPS-REFS
    /* 4282 */ ElementSpec {sub_elements: (1526, 1555), sub_element_ver: 1531, attributes: (115, 118), attributes_ver: 1531, character_data: None, mode: ContentMode::Sequence, ref_info: (5358, 5365)}, // SOMEIP-SERVICE-INSTANCE-TO-MACHINE-MAPPING
    /* 4283 */ ElementSpec {sub_elements: (21085, 21086), sub_element_ver: 568, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // PORT-CONFIGS
    /* 4284 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (3319, 3325), attributes_ver: 3664, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // REMOTE-MULTICAST-CONFIG-REF
    /* 4285 */ ElementSpec {sub_elements: (21086, 21087), sub_element_ver: 6, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // REMOTE-MULTICAST-CONFIG-REFS
    /* 4286 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (3325, 3331), attributes_ver: 3664, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // REMOTE-UNICAST-CONFIG-REF
    /* 4287 */ ElementSpec {sub_elements: (21087, 21088), sub_element_ver: 6, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // REMOTE-UNICAST-CONFIG-REFS
    /* 4288 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (3331, 3337), attributes_ver: 4093, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // LOCAL-TCP-PORT-REF, LOCAL-UDP-PORT-REF, TCP-PORT-REF, UDP-PORT-REF
    /* 4289 */ ElementSpec {sub_elements: (6364, 6380), sub_element_ver: 5336, attributes: (115, 118), attributes_ver: 5336, character_data: None, mode: ContentMode::Sequence, ref_info: (5365, 5370)}, // SOMEIP-SERVICE-INTERFACE
    /* 4290 */ ElementSpec {sub_elements: (6380, 6396), sub_element_ver: 3376, attributes: (115, 118), attributes_ver: 1153, character_data: None, mode: ContentMode::Sequence, ref_info: (5370, 5377)}, // SOMEIP-SERVICE-INTERFACE-DEPLOYMENT
    /* 4291 */ ElementSpec {sub_elements: (21088, 21089), sub_element_ver: 8, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // EVENT-GROUPS
    /* 4292 */ ElementSpec {sub_elements: (21088, 21089), sub_element_ver: 568, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // EVENT-GROUPS
    /* 4293 */ ElementSpec {sub_elements: (20046, 20048), sub_element_ver: 2200, attributes: (0, 2), attributes_ver: 2200, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // REQUIRED-SERVICE-VERSION, SERVICE-INTERFACE-VERSION
    /* 4294 */ ElementSpec {sub_elements: (20048, 20050), sub_element_ver: 1153, attributes: (0, 2), attributes_ver: 1153, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // SERVICE-INTERFACE-VERSION, SOMEIP-SERVICE-VERSION
    /* 4295 */ ElementSpec {sub_elements: (20050, 20052), sub_element_ver: 4021, attributes: (0, 2), attributes_ver: 4021, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // TIMING-PROPS
    /* 4296 */ ElementSpec {sub_elements: (14619, 14630), sub_element_ver: 8205, attributes: (115, 118), attributes_ver: 9, character_data: None, mode: ContentMode::Sequence, ref_info: (5377, 5378)}, // SOMEIP-TP-CHANNEL
    /* 4297 */ ElementSpec {sub_elements: (12654, 12666), sub_element_ver: 6839, attributes: (115, 118), attributes_ver: 192, character_data: None, mode: ContentMode::Sequence, ref_info: (5378, 5383)}, // SOMEIP-TP-CONFIG
    /* 4298 */ ElementSpec {sub_elements: (21089, 21090), sub_element_ver: 9, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // TP-CHANNELS
    /* 4299 */ ElementSpec {sub_elements: (21090, 21091), sub_element_ver: 21, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // TP-CONNECTIONS
    /* 4300 */ ElementSpec {sub_elements: (18907, 18911), sub_element_ver: 6848, attributes: (0, 2), attributes_ver: 134, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // SOMEIP-TP-CONNECTION
    /* 4301 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (3337, 3343), attributes_ver: 1187, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // TP-CHANNEL-REF
    /* 4302 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (859, 865), attributes_ver: 9325, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // GLOBAL-TIME-PDU-TRIGGERING-REF, TD-PDU-TRIGGERING-FILTER-REF, TP-SDU-REF, TRANSPORT-PDU-REF
    /* 4303 */ ElementSpec {sub_elements: (17632, 17640), sub_element_ver: 244, attributes: (0, 2), attributes_ver: 120, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // SOMEIP-TRANSFORMATION-DESCRIPTION
    /* 4304 */ ElementSpec {sub_elements: (18494, 18499), sub_element_ver: 140, attributes: (0, 2), attributes_ver: 120, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // SOMEIP-TRANSFORMATION-I-SIGNAL-PROPS
    /* 4305 */ ElementSpec {sub_elements: (4825, 4843), sub_element_ver: 4273, attributes: (0, 2), attributes_ver: 120, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // SOMEIP-TRANSFORMATION-I-SIGNAL-PROPS-CONDITIONAL
    /* 4306 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (3343, 3349), attributes_ver: 1642, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // TLV-DATA-ID-0-REF, TLV-DATA-ID-DEFINITION-REF
    /* 4307 */ ElementSpec {sub_elements: (21091, 21092), sub_element_ver: 64, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // TLV-DATA-ID-0-REFS
    /* 4308 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (3343, 3349), attributes_ver: 500, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // TLV-DATA-ID-DEFINITION-REF
    /* 4309 */ ElementSpec {sub_elements: (21092, 21093), sub_element_ver: 19, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // TLV-DATA-ID-DEFINITION-REFS
    /* 4310 */ ElementSpec {sub_elements: (21093, 21094), sub_element_ver: 9, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // TLV-DATA-IDS
    /* 4311 */ ElementSpec {sub_elements: (21094, 21095), sub_element_ver: 43, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // SOMEIP-TRANSFORMATION-I-SIGNAL-PROPS-VARIANTS
    /* 4312 */ ElementSpec {sub_elements: (10761, 10774), sub_element_ver: 7216, attributes: (115, 118), attributes_ver: 192, character_data: None, mode: ContentMode::Sequence, ref_info: (5383, 5385)}, // SOMEIP-TRANSFORMATION-PROPS
    /* 4313 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 1612, character_data: Some(847), mode: ContentMode::Characters, ref_info: (0, 0)}, // SESSION-HANDLING, SESSION-HANDLING-SR
    /* 4314 */ ElementSpec {sub_elements: (8870, 8884), sub_element_ver: 3664, attributes: (115, 118), attributes_ver: 463, character_data: None, mode: ContentMode::Sequence, ref_info: (5385, 5392)}, // SOVD-GATEWAY-INSTANTIATION
    /* 4315 */ ElementSpec {sub_elements: (18911, 18915), sub_element_ver: 3664, attributes: (0, 2), attributes_ver: 301, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // UNICAST-CREDENTIALS
    /* 4316 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (661, 667), attributes_ver: 3664, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // COMMUNICATION-CONNECTOR-REF
    /* 4317 */ ElementSpec {sub_elements: (21095, 21096), sub_element_ver: 6, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // COMMUNICATION-CONNECTOR-REFS
    /* 4318 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2869, 2875), attributes_ver: 3664, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // SECURE-PROPS-FOR-EXTERNAL-COMM-REF, SECURE-PROPS-FOR-TCP-REF, SECURE-PROPS-FOR-UDP-REF
    /* 4319 */ ElementSpec {sub_elements: (10774, 10787), sub_element_ver: 3664, attributes: (115, 118), attributes_ver: 463, character_data: None, mode: ContentMode::Sequence, ref_info: (5392, 5399)}, // SOVD-SERVER-INSTANTIATION
    /* 4320 */ ElementSpec {sub_elements: (12666, 12678), sub_element_ver: 3816, attributes: (115, 118), attributes_ver: 192, character_data: None, mode: ContentMode::Sequence, ref_info: (5399, 5402)}, // SPECIFICATION-DOCUMENT-SCOPE
    /* 4321 */ ElementSpec {sub_elements: (21096, 21097), sub_element_ver: 21, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // DOCUMENT-ELEMENT-SCOPES
    /* 4322 */ ElementSpec {sub_elements: (21097, 21098), sub_element_ver: 21, attributes: (0, 2), attributes_ver: 134, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // SPECIFICATION-SCOPE
    /* 4323 */ ElementSpec {sub_elements: (21098, 21099), sub_element_ver: 21, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // SPECIFICATION-DOCUMENT-SCOPES
    /* 4324 */ ElementSpec {sub_elements: (6396, 6412), sub_element_ver: 5128, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (5402, 5406)}, // SPORADIC-EVENT-TRIGGERING
    /* 4325 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2617, 2623), attributes_ver: 9361, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // EXECUTABLE-ENTITY-REF, EXECUTABLE-REF
    /* 4326 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 134, character_data: Some(848), mode: ContentMode::Characters, ref_info: (0, 0)}, // APPLIES-TO
    /* 4327 */ ElementSpec {sub_elements: (3859, 3879), sub_element_ver: 3416, attributes: (115, 118), attributes_ver: 1531, character_data: None, mode: ContentMode::Sequence, ref_info: (5406, 5412)}, // STARTUP-CONFIG
    /* 4328 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (3349, 3355), attributes_ver: 500, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // EXECUTION-ERROR-REF
    /* 4329 */ ElementSpec {sub_elements: (21099, 21100), sub_element_ver: 19, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // PROCESS-ARGUMENTS
    /* 4330 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (3716, 3721), attributes_ver: 7886, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // RESOURCE-GROUP-REF
    /* 4331 */ ElementSpec {sub_elements: (21100, 21101), sub_element_ver: 568, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // RESOURCE-GROUP-REFS
    /* 4332 */ ElementSpec {sub_elements: (16374, 16384), sub_element_ver: 8535, attributes: (115, 118), attributes_ver: 8535, character_data: None, mode: ContentMode::Sequence, ref_info: (5412, 5417)}, // STARTUP-CONFIG-SET
    /* 4333 */ ElementSpec {sub_elements: (604, 605), sub_element_ver: 574, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // STARTUP-CONFIGS
    /* 4334 */ ElementSpec {sub_elements: (21101, 21102), sub_element_ver: 2800, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // STARTUP-OPTIONS
    /* 4335 */ ElementSpec {sub_elements: (19436, 19439), sub_element_ver: 9223, attributes: (0, 2), attributes_ver: 9223, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // STARTUP-OPTION
    /* 4336 */ ElementSpec {sub_elements: (7633, 7648), sub_element_ver: 3027, attributes: (115, 118), attributes_ver: 12, character_data: None, mode: ContentMode::Sequence, ref_info: (5417, 5428)}, // STATE-CLIENT-INTERFACE
    /* 4337 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2425, 2431), attributes_ver: 425, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // FUNCTION-GROUP-TYPE-REF
    /* 4338 */ ElementSpec {sub_elements: (10787, 10800), sub_element_ver: 6092, attributes: (115, 118), attributes_ver: 463, character_data: None, mode: ContentMode::Sequence, ref_info: (5428, 5434)}, // STATE-DEPENDENT-FIREWALL
    /* 4339 */ ElementSpec {sub_elements: (21102, 21103), sub_element_ver: 6, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // FIREWALL-RULE-PROPSS
    /* 4340 */ ElementSpec {sub_elements: (21103, 21104), sub_element_ver: 6, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // FIREWALL-STATE-IREFS
    /* 4341 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2089, 2095), attributes_ver: 230, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // FIREWALL-STATE-MODE-DECLARATION-REF
    /* 4342 */ ElementSpec {sub_elements: (21104, 21105), sub_element_ver: 16, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // FIREWALL-STATE-MODE-DECLARATION-REFS
    /* 4343 */ ElementSpec {sub_elements: (18499, 18504), sub_element_ver: 9119, attributes: (0, 2), attributes_ver: 48, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // STATE-DEPENDENT-STARTUP-CONFIG
    /* 4344 */ ElementSpec {sub_elements: (20818, 20819), sub_element_ver: 48, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // EXECUTION-DEPENDENCYS
    /* 4345 */ ElementSpec {sub_elements: (20836, 20837), sub_element_ver: 48, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // FUNCTION-GROUP-STATE-IREFS
    /* 4346 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2647, 2653), attributes_ver: 48, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // RESOURCE-GROUP-REF
    /* 4347 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2653, 2659), attributes_ver: 48, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // STARTUP-CONFIG-REF
    /* 4348 */ ElementSpec {sub_elements: (8884, 8898), sub_element_ver: 6545, attributes: (115, 118), attributes_ver: 6545, character_data: None, mode: ContentMode::Sequence, ref_info: (5434, 5446)}, // STATE-MANAGEMEN-PHM-ERROR-INTERFACE
    /* 4349 */ ElementSpec {sub_elements: (16384, 16394), sub_element_ver: 3664, attributes: (115, 118), attributes_ver: 463, character_data: None, mode: ContentMode::Sequence, ref_info: (5446, 5447)}, // STATE-MANAGEMENT-ACTION-LIST
    /* 4350 */ ElementSpec {sub_elements: (18504, 18509), sub_element_ver: 9124, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // ACTION-ITEMS
    /* 4351 */ ElementSpec {sub_elements: (11118, 11130), sub_element_ver: 3664, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Choice, ref_info: (0, 0)}, // COMPARE-VALUE
    /* 4352 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 301, character_data: Some(851), mode: ContentMode::Characters, ref_info: (0, 0)}, // COMPARE-TYPE
    /* 4353 */ ElementSpec {sub_elements: (21105, 21106), sub_element_ver: 6, attributes: (0, 2), attributes_ver: 301, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // FORMULA, STATE-MANAGEMENT-COMPARE-FORMULA
    /* 4354 */ ElementSpec {sub_elements: (19439, 19442), sub_element_ver: 463, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // PARTS
    /* 4355 */ ElementSpec {sub_elements: (7093, 7107), sub_element_ver: 3664, attributes: (115, 118), attributes_ver: 463, character_data: None, mode: ContentMode::Sequence, ref_info: (5447, 5459)}, // STATE-MANAGEMENT-DIAG-TRIGGER-INTERFACE
    /* 4356 */ ElementSpec {sub_elements: (7093, 7107), sub_element_ver: 3664, attributes: (115, 118), attributes_ver: 463, character_data: None, mode: ContentMode::Sequence, ref_info: (5459, 5471)}, // STATE-MANAGEMENT-EM-ERROR-INTERFACE
    /* 4357 */ ElementSpec {sub_elements: (19442, 19444), sub_element_ver: 301, attributes: (0, 2), attributes_ver: 301, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // STATE-MANAGEMENT-ERROR-COMPARE-RULE
    /* 4358 */ ElementSpec {sub_elements: (7648, 7663), sub_element_ver: 3664, attributes: (115, 118), attributes_ver: 463, character_data: None, mode: ContentMode::Sequence, ref_info: (5471, 5482)}, // STATE-MANAGEMENT-FUNCTION-GROUP-SWITCH-NOTIFICATION-INTERFACE
    /* 4359 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2425, 2431), attributes_ver: 3664, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // MODE-GROUP-REF
    /* 4360 */ ElementSpec {sub_elements: (14630, 14641), sub_element_ver: 3664, attributes: (115, 118), attributes_ver: 463, character_data: None, mode: ContentMode::Sequence, ref_info: (5482, 5488)}, // STATE-MANAGEMENT-MODULE-INSTANTIATION
    /* 4361 */ ElementSpec {sub_elements: (21106, 21107), sub_element_ver: 6, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // ACTION-ITEM-LISTS
    /* 4362 */ ElementSpec {sub_elements: (21107, 21108), sub_element_ver: 6, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // NOTIFICATIONS
    /* 4363 */ ElementSpec {sub_elements: (20052, 20054), sub_element_ver: 301, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // REQUESTS
    /* 4364 */ ElementSpec {sub_elements: (17319, 17328), sub_element_ver: 1502, attributes: (115, 118), attributes_ver: 230, character_data: None, mode: ContentMode::Sequence, ref_info: (5488, 5490)}, // STATE-MANAGEMENT-NM-ACTION-ITEM
    /* 4365 */ ElementSpec {sub_elements: (3364, 3378), sub_element_ver: 3027, attributes: (115, 118), attributes_ver: 12, character_data: None, mode: ContentMode::Sequence, ref_info: (5490, 5502)}, // STATE-MANAGEMENT-PHM-ERROR-INTERFACE
    /* 4366 */ ElementSpec {sub_elements: (16394, 16404), sub_element_ver: 3664, attributes: (115, 118), attributes_ver: 463, character_data: None, mode: ContentMode::Sequence, ref_info: (5502, 5504)}, // STATE-MANAGEMENT-REQUEST-ERROR
    /* 4367 */ ElementSpec {sub_elements: (21108, 21109), sub_element_ver: 6, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // RULES
    /* 4368 */ ElementSpec {sub_elements: (20054, 20056), sub_element_ver: 301, attributes: (0, 2), attributes_ver: 301, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // STATE-MANAGEMENT-REQUEST-RULE
    /* 4369 */ ElementSpec {sub_elements: (16404, 16414), sub_element_ver: 3664, attributes: (115, 118), attributes_ver: 463, character_data: None, mode: ContentMode::Sequence, ref_info: (5504, 5506)}, // STATE-MANAGEMENT-REQUEST-TRIGGER
    /* 4370 */ ElementSpec {sub_elements: (14641, 14652), sub_element_ver: 8216, attributes: (115, 118), attributes_ver: 463, character_data: None, mode: ContentMode::Sequence, ref_info: (5506, 5508)}, // STATE-MANAGEMENT-SET-FUNCTION-GROUP-STATE-ACTION-ITEM
    /* 4371 */ ElementSpec {sub_elements: (17328, 17337), sub_element_ver: 1502, attributes: (115, 118), attributes_ver: 230, character_data: None, mode: ContentMode::Sequence, ref_info: (5508, 5510)}, // STATE-MANAGEMENT-SLEEP-ACTION-ITEM
    /* 4372 */ ElementSpec {sub_elements: (10800, 10813), sub_element_ver: 7229, attributes: (115, 118), attributes_ver: 463, character_data: None, mode: ContentMode::Sequence, ref_info: (5510, 5512)}, // STATE-MANAGEMENT-STATE-MACHINE-ACTION-ITEM
    /* 4373 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (583, 589), attributes_ver: 230, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // START-STATE-MACHINE-REF, STOP-STATE-MACHINE-REF
    /* 4374 */ ElementSpec {sub_elements: (16414, 16424), sub_element_ver: 3664, attributes: (115, 118), attributes_ver: 463, character_data: None, mode: ContentMode::Sequence, ref_info: (5512, 5514)}, // STATE-MANAGEMENT-STATE-NOTIFICATION
    /* 4375 */ ElementSpec {sub_elements: (4126, 4134), sub_element_ver: 3664, attributes: (115, 118), attributes_ver: 463, character_data: None, mode: ContentMode::Sequence, ref_info: (5514, 5516)}, // STATE-MANAGEMENT-SYNC-ACTION-ITEM
    /* 4376 */ ElementSpec {sub_elements: (19442, 19445), sub_element_ver: 463, attributes: (0, 2), attributes_ver: 301, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // STATE-MANAGEMENT-TRIGGER-COMPARE-RULE
    /* 4377 */ ElementSpec {sub_elements: (19445, 19448), sub_element_ver: 22, attributes: (0, 2), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // STATIC-PART
    /* 4378 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (3355, 3361), attributes_ver: 9361, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // I-PDU-REF, I-SIGNAL-I-PDU-REF, REPLICA-PDUS-REF
    /* 4379 */ ElementSpec {sub_elements: (10813, 10826), sub_element_ver: 1643, attributes: (115, 118), attributes_ver: 909, character_data: None, mode: ContentMode::Sequence, ref_info: (5516, 5517)}, // STATIC-SOCKET-CONNECTION
    /* 4380 */ ElementSpec {sub_elements: (21109, 21110), sub_element_ver: 64, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // I-PDU-IDENTIFIERS
    /* 4381 */ ElementSpec {sub_elements: (21110, 21111), sub_element_ver: 64, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // REMOTE-ADDRESSS
    /* 4382 */ ElementSpec {sub_elements: (12678, 12690), sub_element_ver: 7802, attributes: (0, 2), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (5517, 5519)}, // STD
    /* 4383 */ ElementSpec {sub_elements: (3974, 3993), sub_element_ver: 3854, attributes: (115, 118), attributes_ver: 9, character_data: None, mode: ContentMode::Sequence, ref_info: (5519, 5531)}, // STD-CPP-IMPLEMENTATION-DATA-TYPE
    /* 4384 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 401, character_data: Some(855), mode: ContentMode::Characters, ref_info: (0, 0)}, // INITIAL-STATUS
    /* 4385 */ ElementSpec {sub_elements: (21111, 21112), sub_element_ver: 16, attributes: (0, 2), attributes_ver: 123, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // IEEE-1722-TP-RULE
    /* 4386 */ ElementSpec {sub_elements: (20056, 20058), sub_element_ver: 123, attributes: (0, 2), attributes_ver: 123, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // DESTINATION-IPV-4-ADDRESS, SOURCE-IPV-4-ADDRESS
    /* 4387 */ ElementSpec {sub_elements: (20058, 20060), sub_element_ver: 123, attributes: (0, 2), attributes_ver: 123, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // DESTINATION-IPV-6-ADDRESS, SOURCE-IPV-6-ADDRESS
    /* 4388 */ ElementSpec {sub_elements: (20060, 20062), sub_element_ver: 123, attributes: (0, 2), attributes_ver: 123, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // DESTINATION-MAC-ADDRESS, SOURCE-MAC-ADDRESS
    /* 4389 */ ElementSpec {sub_elements: (20062, 20064), sub_element_ver: 123, attributes: (0, 2), attributes_ver: 123, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // STREAM-FILTER-PORT-RANGE
    /* 4390 */ ElementSpec {sub_elements: (18509, 18514), sub_element_ver: 230, attributes: (0, 2), attributes_ver: 123, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // DATA-LINK-LAYER-RULE
    /* 4391 */ ElementSpec {sub_elements: (18165, 18171), sub_element_ver: 230, attributes: (0, 2), attributes_ver: 123, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // IP-TP-RULE
    /* 4392 */ ElementSpec {sub_elements: (21112, 21113), sub_element_ver: 16, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // DESTINATION-PORTS, SOURCE-PORTS
    /* 4393 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 796, character_data: Some(982), mode: ContentMode::Characters, ref_info: (0, 0)}, // A-2-L-DISPLAY-TEXT, ABBR-NAME, ACL-CONTEXT, ADDITIONAL-INFORMATION, AFFECTED-APPLICATION, AFFECTED-BSW-MODULE, AFFECTED-FUNCTIONAL-CLUSTER, AH-CIPHER-SUITE-NAME, ALGORITHM-FAMILY, ALGORITHM-MODE, ALGORITHM-SECONDARY-FAMILY, ALLOWED-KEYSLOT-USAGE, ALTERNATIVE-NAME, ANNOTATION-ORIGIN, APPLICATION-DESCRIPTION, APPLICATION-ID, APPROVAL-STATUS, ARGUMENT, ATTRIBUTE-NAME, AUTH-ALGORITHM, BASE-TYPE-ENCODING, BGCOLOR, BULK-DATA-CATEGORY, CATEGORY, CDD-TYPE, CERT-COMMON-NAME, CHECKSUM-VALUE, CIPHER-SUITE, CIPHER-SUITE-NAME, CIPHER-SUITE-SHORT-LABEL, CLASSIFICATION, COLLECTION-SEMANTICS, COMMENT, COMMUNICATION-MODE, COMPONENT-QUALIFIER, CONTENT-TYPE, CONTEXT-DESCRIPTION, CONTEXT-ID, CONTEXT-TYPE-LIST, COUNT-PROFILE, CRYPTO-ALG-ID, CRYPTO-ALGORITHM-ID, CRYPTO-ALGORITHM-STRING, CRYPTO-KEY-DESCRIPTION, CRYPTO-OBJECT-TYPE, CRYPTO-PRIMITIVE, CUSTOM-TRIGGER, DATA-PROVIDER, DEPENDENCY, DESTINATION-CONTEXT, DESTINATION-TYPE, DLT-ECU-ID, DOMAIN, DYNAMIC-ARRAY-SIZE-PROFILE, ECU-ID, ENCODING, ENUMERATOR-VALUE, ESP-CIPHER-SUITE-NAME, EVENT-OBD-READINESS-GROUP, FIELD-REPLY-TOPIC-NAME, FIELD-REQUEST-TOPIC-NAME, FILE-NAME, FILE-TYPE, FILE-TYPE-PATTERN, FORMAT, FULLY-QUALIFIED-DOMAIN-NAME, FUNCTION, FUNCTION-CLUSTER-AFFILIATION, FUNCTION-NAME, FUNCTION-PROTOTYPE-EMITTER, GID, GROUP-ID, HARDWARE-PLATFORM, HEADER-FILE, IDENTIFIER, IDENTITY, IKE-CIPHER-SUITE-NAME, IMPORTANCE, INIT-VALUE, INPUT, INSTANCE-ID, INTERRUPT-SOURCE, IP-ADDRESS, ISSUED-BY, IUMPR-GROUP, KEY, KEY-STORAGE-TYPE, LOCAL-ID, LOG-CHANNEL-ID, LOG-TRACE-PORT-ID, LOG-TRACE-PROCESS-DESC, LOG-TRACE-PROCESS-ID, MCD-IDENTIFIER, MEMORY-HIGH-ADDRESS-LABEL, MEMORY-LOW-ADDRESS-LABEL, MESSAGE-SOURCE-FILE, MESSAGE-TYPE-INFO, METHOD-REPLY-TOPIC-NAME, METHOD-REQUEST-TOPIC-NAME, MSR-QUERY-NAME, NAME, NODE-IDENTIFIER, NUMBER, OPTION-ARGUMENT, OPTION-NAME, OPTIONS, ORIGIN, PACKAGING-PIN-NAME, PARENT-CATEGORY, PARENT-SHORT-LABEL, PARTITION-NAME, PATH, PATTERN, PORT-PROTOTYPE-SLUG-FRAGMENT, POSITION, PRIMITIVE-FAMILY, PROCESSOR-MODE, PROCESSOR-SPEED, PROFILE-NAME, PROTOCOL, PROTOCOL-KIND, PROTOCOL-NAME, PROTOCOL-VERSION, PSK-IDENTITY, PSK-IDENTITY-HINT, PUBLISHER, QOS-PROFILE, REGULAR-EXPRESSION, REMOTE-ID, REQUIRED-RTE-VENDOR, RESOURCE-GUARD-VALUE, ROLE, ROUTING-ACTIVATION-TYPE, SAFETY-CONDITION, SAFETY-POLICY, SCHEDULING-POLICY, SERVER-NAME-IDENTIFICATION, SERVICE-INTERFACE-ID, SHORT-LABEL, SHORT-LABEL-PATTERN, SHORT-NAME-PATTERN, SOCKET-OPTION, STANDARD, STANDARD-REVISION, STATE, STRING-ENCODING, SUBTITLE, SW-RECORD-LAYOUT-GROUP-INDEX, SW-RECORD-LAYOUT-V-INDEX, SW-RECORD-LAYOUT-V-PROP, TARGET-TYPE, TEST-PATTERN, TEXT, TIME-SYNC-SERVER-IDENTIFIER, TIMESTAMP-FORMAT, TOOL, TOOL-VERSION, TOPIC-DATA, TOPIC-NAME, TP-ADDRESS, TP-TECHNOLOGY, TRANSPORT-PLUGIN, TRANSPORT-PROTOCOL, TYPE, TYPE-APPROVAL, TYPE-DEFINITION, TYPE-EMITTER, UNIT, URI, USED-CODE-GENERATOR, VALUE, VENDOR, VERIFICATION-HASH, VERSION, VT
    /* 4394 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 531, character_data: Some(856), mode: ContentMode::Characters, ref_info: (0, 0)}, // CONTRACT-VERSION, DELTA-PACKAGE-APPLICABLE-VERSION, PREVIOUS-CONTRACT-VERSION, PREVIOUS-EXECUTABLE-VERSION, UCM-SOFTWARE-VERSION, VERSION
    /* 4395 */ ElementSpec {sub_elements: (2879, 2902), sub_element_ver: 2586, attributes: (115, 122), attributes_ver: 9312, character_data: None, mode: ContentMode::Sequence, ref_info: (5531, 5534)}, // STRUCTURED-REQ
    /* 4396 */ ElementSpec {sub_elements: (21113, 21114), sub_element_ver: 21, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // APPLIES-TO-DEPENDENCIES
    /* 4397 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (343, 349), attributes_ver: 9331, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // TESTED-ITEM-REF
    /* 4398 */ ElementSpec {sub_elements: (21114, 21115), sub_element_ver: 43, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // TESTED-ITEM-REFS
    /* 4399 */ ElementSpec {sub_elements: (19448, 19451), sub_element_ver: 776, attributes: (0, 2), attributes_ver: 656, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // SUB-ELEMENT-MAPPING
    /* 4400 */ ElementSpec {sub_elements: (20064, 20066), sub_element_ver: 656, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // FIRST-ELEMENTS, SECOND-ELEMENTS
    /* 4401 */ ElementSpec {sub_elements: (20379, 20380), sub_element_ver: 386, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // TEXT-TABLE-MAPPINGS
    /* 4402 */ ElementSpec {sub_elements: (777, 785), sub_element_ver: 3276, attributes: (115, 118), attributes_ver: 192, character_data: None, mode: ContentMode::Sequence, ref_info: (5534, 5536)}, // SUPERVISED-ENTITY-CHECKPOINT-NEEDS
    /* 4403 */ ElementSpec {sub_elements: (20066, 20068), sub_element_ver: 134, attributes: (0, 2), attributes_ver: 134, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // SUPERVISED-ENTITY-CHECKPOINT-NEEDS-REF-CONDITIONAL
    /* 4404 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (3361, 3367), attributes_ver: 9325, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // SUPERVISED-ENTITY-CHECKPOINT-NEEDS-REF
    /* 4405 */ ElementSpec {sub_elements: (4843, 4861), sub_element_ver: 4291, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (5536, 5538)}, // SUPERVISED-ENTITY-NEEDS
    /* 4406 */ ElementSpec {sub_elements: (21115, 21116), sub_element_ver: 21, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // CHECKPOINTSS
    /* 4407 */ ElementSpec {sub_elements: (14652, 14663), sub_element_ver: 8227, attributes: (115, 118), attributes_ver: 2229, character_data: None, mode: ContentMode::Sequence, ref_info: (5538, 5539)}, // SUPERVISION-CHECKPOINT
    /* 4408 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (349, 355), attributes_ver: 1187, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // PROCESS-REF
    /* 4409 */ ElementSpec {sub_elements: (5545, 5562), sub_element_ver: 4822, attributes: (115, 118), attributes_ver: 4822, character_data: None, mode: ContentMode::Sequence, ref_info: (5539, 5540)}, // SUPERVISION-ENTITY
    /* 4410 */ ElementSpec {sub_elements: (20643, 20644), sub_element_ver: 491, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // ALIVE-SUPERVISIONS
    /* 4411 */ ElementSpec {sub_elements: (20877, 20878), sub_element_ver: 491, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // CHECKPOINTS
    /* 4412 */ ElementSpec {sub_elements: (20644, 20645), sub_element_ver: 491, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // DEADLINE-SUPERVISIONS
    /* 4413 */ ElementSpec {sub_elements: (20648, 20649), sub_element_ver: 491, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // LOGICAL-SUPERVISIONS
    /* 4414 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (3666, 3671), attributes_ver: 4822, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // PROCESS-REF
    /* 4415 */ ElementSpec {sub_elements: (20652, 20653), sub_element_ver: 491, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // TRANSITIONS
    /* 4416 */ ElementSpec {sub_elements: (14663, 14674), sub_element_ver: 4093, attributes: (115, 118), attributes_ver: 81, character_data: None, mode: ContentMode::Sequence, ref_info: (5540, 5541)}, // SUPERVISION-MODE
    /* 4417 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (3367, 3373), attributes_ver: 4093, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // ACTIVE-SUPERVISION-REF
    /* 4418 */ ElementSpec {sub_elements: (21116, 21117), sub_element_ver: 20, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // ACTIVE-SUPERVISION-REFS
    /* 4419 */ ElementSpec {sub_elements: (17337, 17346), sub_element_ver: 4093, attributes: (115, 118), attributes_ver: 81, character_data: None, mode: ContentMode::Sequence, ref_info: (5541, 5542)}, // SUPERVISION-MODE-CONDITION
    /* 4420 */ ElementSpec {sub_elements: (21117, 21118), sub_element_ver: 20, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // STATE-REFERENCES
    /* 4421 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (3373, 3379), attributes_ver: 4093, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // MODE-CONDITION-REF
    /* 4422 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 134, character_data: Some(861), mode: ContentMode::Characters, ref_info: (0, 0)}, // SUPPORT-BUFFER-LOCKING
    /* 4423 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 22, character_data: Some(982), mode: ContentMode::Characters, ref_info: (0, 0)}, // SECTION-INITIALIZATION-POLICY, SUB, SUP
    /* 4424 */ ElementSpec {sub_elements: (7663, 7678), sub_element_ver: 5973, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (5542, 5548)}, // SW-ADDR-METHOD
    /* 4425 */ ElementSpec {sub_elements: (18171, 18177), sub_element_ver: 845, attributes: (0, 2), attributes_ver: 796, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // SW-AXIS-CONT
    /* 4426 */ ElementSpec {sub_elements: (19451, 19454), sub_element_ver: 847, attributes: (0, 2), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // SW-AXIS-GENERIC
    /* 4427 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (3379, 3385), attributes_ver: 9361, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // SW-AXIS-TYPE-REF
    /* 4428 */ ElementSpec {sub_elements: (21118, 21119), sub_element_ver: 7, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // SW-GENERIC-AXIS-PARAMS
    /* 4429 */ ElementSpec {sub_elements: (18177, 18183), sub_element_ver: 9042, attributes: (0, 2), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // SW-AXIS-GROUPED
    /* 4430 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (355, 361), attributes_ver: 9361, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // INPUT-VARIABLE-TYPE-REF, SHARED-AXIS-TYPE-REF, VALUE-AXIS-DATA-TYPE-REF
    /* 4431 */ ElementSpec {sub_elements: (16424, 16434), sub_element_ver: 8545, attributes: (0, 2), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // SW-AXIS-INDIVIDUAL
    /* 4432 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2917, 2923), attributes_ver: 9361, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // COMPU-METHOD-REF
    /* 4433 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (3385, 3391), attributes_ver: 9361, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // DATA-CONSTR-REF
    /* 4434 */ ElementSpec {sub_elements: (18917, 18919), sub_element_ver: 22, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // SW-COMPARISON-VARIABLES, SW-VARIABLE-REFS
    /* 4435 */ ElementSpec {sub_elements: (14674, 14685), sub_element_ver: 5080, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (5548, 5552)}, // SW-AXIS-TYPE
    /* 4436 */ ElementSpec {sub_elements: (21119, 21120), sub_element_ver: 7, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // SW-GENERIC-AXIS-PARAM-TYPES
    /* 4437 */ ElementSpec {sub_elements: (4335, 4354), sub_element_ver: 3873, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (5552, 5559)}, // SW-BASE-TYPE
    /* 4438 */ ElementSpec {sub_elements: (20068, 20070), sub_element_ver: 22, attributes: (0, 2), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // SW-BIT-REPRESENTATION
    /* 4439 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 22, character_data: Some(865), mode: ContentMode::Characters, ref_info: (0, 0)}, // SW-CALIBRATION-ACCESS
    /* 4440 */ ElementSpec {sub_elements: (18183, 18189), sub_element_ver: 9048, attributes: (0, 2), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // SW-CALPRM-AXIS
    /* 4441 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (3391, 3397), attributes_ver: 9361, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // BASE-TYPE-REF
    /* 4442 */ ElementSpec {sub_elements: (21120, 21121), sub_element_ver: 7, attributes: (0, 2), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // SW-CALPRM-AXIS-SET
    /* 4443 */ ElementSpec {sub_elements: (20070, 20072), sub_element_ver: 617, attributes: (0, 2), attributes_ver: 617, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // SW-CALPRM-IMPL
    /* 4444 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (3803, 3807), attributes_ver: 1026, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // SW-CALPRM-PROTOTYPE-REF
    /* 4445 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2605, 2611), attributes_ver: 9361, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // MC-DATA-INSTANCE-REF, MC-DATA-INSTANCE-VAR-REF
    /* 4446 */ ElementSpec {sub_elements: (19454, 19457), sub_element_ver: 617, attributes: (0, 2), attributes_ver: 617, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // SW-CLASS-ATTR-INSTANCE-IMPL
    /* 4447 */ ElementSpec {sub_elements: (21121, 21122), sub_element_ver: 513, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // SW-CALPRM-IMPLS
    /* 4448 */ ElementSpec {sub_elements: (21122, 21123), sub_element_ver: 513, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // SW-CLASS-IMPLS
    /* 4449 */ ElementSpec {sub_elements: (21123, 21124), sub_element_ver: 513, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // SW-VARIABLE-IMPLS
    /* 4450 */ ElementSpec {sub_elements: (20072, 20074), sub_element_ver: 617, attributes: (0, 2), attributes_ver: 617, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // SW-CLASS-IMPL
    /* 4451 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (3807, 3811), attributes_ver: 1026, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // SW-CLASS-PROTOTYPE-REF
    /* 4452 */ ElementSpec {sub_elements: (17640, 17648), sub_element_ver: 1026, attributes: (115, 118), attributes_ver: 617, character_data: None, mode: ContentMode::Sequence, ref_info: (5559, 5563)}, // SW-CLASS-INSTANCE
    /* 4453 */ ElementSpec {sub_elements: (13519, 13525), sub_element_ver: 1026, attributes: (115, 118), attributes_ver: 617, character_data: None, mode: ContentMode::Sequence, ref_info: (5563, 5567)}, // SW-CODE-SYNTAX
    /* 4454 */ ElementSpec {sub_elements: (6412, 6428), sub_element_ver: 5352, attributes: (0, 2), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // DOCUMENTATION, SW-COMPONENT-DOCUMENTATION
    /* 4455 */ ElementSpec {sub_elements: (21124, 21125), sub_element_ver: 513, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // SW-CALIBRATION-NOTESS
    /* 4456 */ ElementSpec {sub_elements: (21125, 21126), sub_element_ver: 513, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // SW-CARB-DOCS
    /* 4457 */ ElementSpec {sub_elements: (21126, 21127), sub_element_ver: 513, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // SW-DIAGNOSTICS-NOTESS
    /* 4458 */ ElementSpec {sub_elements: (21127, 21128), sub_element_ver: 513, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // SW-FEATURE-DEFS
    /* 4459 */ ElementSpec {sub_elements: (21128, 21129), sub_element_ver: 513, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // SW-FEATURE-DESCS
    /* 4460 */ ElementSpec {sub_elements: (21129, 21130), sub_element_ver: 513, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // SW-MAINTENANCE-NOTESS
    /* 4461 */ ElementSpec {sub_elements: (21130, 21131), sub_element_ver: 513, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // SW-TEST-DESCS
    /* 4462 */ ElementSpec {sub_elements: (12690, 12702), sub_element_ver: 4093, attributes: (115, 118), attributes_ver: 81, character_data: None, mode: ContentMode::Sequence, ref_info: (5567, 5571)}, // SW-COMPONENT-MAPPING-CONSTRAINTS
    /* 4463 */ ElementSpec {sub_elements: (21131, 21132), sub_element_ver: 20, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // RTE-EVENT-SEPARATIONS
    /* 4464 */ ElementSpec {sub_elements: (21132, 21133), sub_element_ver: 20, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // RTE-EVENT-TO-OS-TASK-PROXY-MAPPINGS
    /* 4465 */ ElementSpec {sub_elements: (20344, 20345), sub_element_ver: 20, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // SWC-TO-APPLICATION-PARTITION-MAPPINGS
    /* 4466 */ ElementSpec {sub_elements: (16434, 16444), sub_element_ver: 841, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (5571, 5574)}, // SW-COMPONENT-PROTOTYPE
    /* 4467 */ ElementSpec {sub_elements: (20074, 20076), sub_element_ver: 77, attributes: (0, 2), attributes_ver: 77, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // SW-COMPONENT-PROTOTYPE-ASSIGNMENT
    /* 4468 */ ElementSpec {sub_elements: (21133, 21134), sub_element_ver: 0, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // CONSISTENCY-NEEDSS
    /* 4469 */ ElementSpec {sub_elements: (21134, 21135), sub_element_ver: 7, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // PORT-GROUPS
    /* 4470 */ ElementSpec {sub_elements: (19457, 19460), sub_element_ver: 67, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // PORTS
    /* 4471 */ ElementSpec {sub_elements: (20228, 20229), sub_element_ver: 519, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // SW-COMPONENT-DOCUMENTATIONS
    /* 4472 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (3397, 3403), attributes_ver: 4093, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // SWC-MAPPING-CONSTRAINT-REF
    /* 4473 */ ElementSpec {sub_elements: (21135, 21136), sub_element_ver: 20, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // SWC-MAPPING-CONSTRAINT-REFS
    /* 4474 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (3403, 3409), attributes_ver: 9319, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // UNIT-GROUP-REF
    /* 4475 */ ElementSpec {sub_elements: (21136, 21137), sub_element_ver: 0, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // UNIT-GROUP-REFS
    /* 4476 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (3409, 3415), attributes_ver: 9361, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // MAPPING-REF
    /* 4477 */ ElementSpec {sub_elements: (21137, 21138), sub_element_ver: 7, attributes: (0, 2), attributes_ver: 796, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // NETWORK-REPRESENTATION, NETWORK-REPRESENTATION-PROPS, PHYSICAL-PROPS, RESULTING-PROPERTIES, SW-DATA-DEF-PROPS
    /* 4478 */ ElementSpec {sub_elements: (1285, 1317), sub_element_ver: 1349, attributes: (0, 2), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // SW-DATA-DEF-PROPS-CONDITIONAL
    /* 4479 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (3415, 3421), attributes_ver: 9361, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // SW-RECORD-LAYOUT-REF
    /* 4480 */ ElementSpec {sub_elements: (9118, 9119), sub_element_ver: 9, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // SW-VALUE-BLOCK-SIZE-MULTS
    /* 4481 */ ElementSpec {sub_elements: (21138, 21139), sub_element_ver: 7, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // SW-DATA-DEF-PROPS-VARIANTS
    /* 4482 */ ElementSpec {sub_elements: (20076, 20078), sub_element_ver: 22, attributes: (0, 2), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // SW-DATA-DEPENDENCY
    /* 4483 */ ElementSpec {sub_elements: (18915, 18919), sub_element_ver: 29, attributes: (0, 2), attributes_ver: 22, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // SW-DATA-DEPENDENCY-ARGS
    /* 4484 */ ElementSpec {sub_elements: (20078, 20080), sub_element_ver: 22, attributes: (0, 2), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // SW-GENERIC-AXIS-PARAM
    /* 4485 */ ElementSpec {sub_elements: (17346, 17355), sub_element_ver: 884, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (5574, 5575)}, // SW-GENERIC-AXIS-PARAM-TYPE
    /* 4486 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (3385, 3391), attributes_ver: 9391, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // DATA-CONSTR-REF
    /* 4487 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 22, character_data: Some(872), mode: ContentMode::Characters, ref_info: (0, 0)}, // SW-IMPL-POLICY
    /* 4488 */ ElementSpec {sub_elements: (14685, 14696), sub_element_ver: 8238, attributes: (115, 118), attributes_ver: 617, character_data: None, mode: ContentMode::Sequence, ref_info: (5575, 5580)}, // SW-MC-BASE-TYPE
    /* 4489 */ ElementSpec {sub_elements: (19460, 19463), sub_element_ver: 22, attributes: (0, 2), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // SW-POINTER-TARGET-PROPS
    /* 4490 */ ElementSpec {sub_elements: (16444, 16454), sub_element_ver: 884, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (5580, 5584)}, // SW-RECORD-LAYOUT
    /* 4491 */ ElementSpec {sub_elements: (10826, 10839), sub_element_ver: 7242, attributes: (0, 2), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // SW-RECORD-LAYOUT-GROUP
    /* 4492 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (3421, 3427), attributes_ver: 9391, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // SW-GENERIC-AXIS-PARAM-TYPE-REF
    /* 4493 */ ElementSpec {sub_elements: (12702, 12714), sub_element_ver: 7814, attributes: (0, 2), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // SW-RECORD-LAYOUT-V
    /* 4494 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (3421, 3427), attributes_ver: 9361, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // SW-GENERIC-AXIS-PARAM-TYPE-REF
    /* 4495 */ ElementSpec {sub_elements: (10839, 10852), sub_element_ver: 7255, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (5584, 5585)}, // RETURN-TYPE, SW-SERVICE-ARG
    /* 4496 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 22, character_data: Some(874), mode: ContentMode::Characters, ref_info: (0, 0)}, // SW-SERVICE-IMPL-POLICY
    /* 4497 */ ElementSpec {sub_elements: (16454, 16464), sub_element_ver: 884, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (5585, 5590)}, // SW-SYSTEMCONST
    /* 4498 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (3427, 3433), attributes_ver: 9349, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // SYSC-STRING-REF
    /* 4499 */ ElementSpec {sub_elements: (19463, 19466), sub_element_ver: 22, attributes: (0, 2), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // SW-SYSTEMCONST-VALUE
    /* 4500 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (3427, 3433), attributes_ver: 9361, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // SW-SYSTEMCONST-REF, SYSC-REF
    /* 4501 */ ElementSpec {sub_elements: (16464, 16474), sub_element_ver: 884, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (5590, 5594)}, // SW-SYSTEMCONSTANT-VALUE-SET
    /* 4502 */ ElementSpec {sub_elements: (21139, 21140), sub_element_ver: 7, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // SW-SYSTEMCONSTANT-VALUES
    /* 4503 */ ElementSpec {sub_elements: (18919, 18923), sub_element_ver: 846, attributes: (0, 2), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // SW-TEXT-PROPS
    /* 4504 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (3391, 3397), attributes_ver: 9391, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // BASE-TYPE-REF
    /* 4505 */ ElementSpec {sub_elements: (18923, 18927), sub_element_ver: 29, attributes: (0, 2), attributes_ver: 796, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // SW-VALUE-CONT
    /* 4506 */ ElementSpec {sub_elements: (18464, 18469), sub_element_ver: 455, attributes: (0, 2), attributes_ver: 22, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // SW-VALUES-PHYS
    /* 4507 */ ElementSpec {sub_elements: (20080, 20082), sub_element_ver: 617, attributes: (0, 2), attributes_ver: 617, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // SW-VARIABLE-IMPL
    /* 4508 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (3811, 3815), attributes_ver: 1026, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // SW-VARIABLE-PROTOTYPE-REF
    /* 4509 */ ElementSpec {sub_elements: (18917, 18919), sub_element_ver: 22, attributes: (0, 2), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // SW-HOST-VARIABLE
    /* 4510 */ ElementSpec {sub_elements: (8898, 8912), sub_element_ver: 5080, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (5594, 5601)}, // SWC-BSW-MAPPING
    /* 4511 */ ElementSpec {sub_elements: (21140, 21141), sub_element_ver: 7, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // RUNNABLE-MAPPINGS
    /* 4512 */ ElementSpec {sub_elements: (21141, 21142), sub_element_ver: 7, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // SYNCHRONIZED-MODE-GROUPS
    /* 4513 */ ElementSpec {sub_elements: (21142, 21143), sub_element_ver: 7, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // SYNCHRONIZED-TRIGGERS
    /* 4514 */ ElementSpec {sub_elements: (19466, 19469), sub_element_ver: 22, attributes: (0, 2), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // SWC-BSW-RUNNABLE-MAPPING
    /* 4515 */ ElementSpec {sub_elements: (19469, 19472), sub_element_ver: 22, attributes: (0, 2), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // SWC-BSW-SYNCHRONIZED-MODE-GROUP-PROTOTYPE
    /* 4516 */ ElementSpec {sub_elements: (19472, 19475), sub_element_ver: 22, attributes: (0, 2), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // SWC-BSW-SYNCHRONIZED-TRIGGER
    /* 4517 */ ElementSpec {sub_elements: (19475, 19478), sub_element_ver: 192, attributes: (0, 2), attributes_ver: 134, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // SWC-EXCLUSIVE-AREA-POLICY
    /* 4518 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (565, 571), attributes_ver: 9325, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // EXCLUSIVE-AREA-REF
    /* 4519 */ ElementSpec {sub_elements: (1555, 1584), sub_element_ver: 1560, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (5601, 5606)}, // SWC-IMPLEMENTATION
    /* 4520 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (3433, 3439), attributes_ver: 9361, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // BEHAVIOR-REF, SWC-BEHAVIOR-REF
    /* 4521 */ ElementSpec {sub_elements: (21143, 21144), sub_element_ver: 7, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // PER-INSTANCE-MEMORY-SIZES
    /* 4522 */ ElementSpec {sub_elements: (1317, 1349), sub_element_ver: 1381, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (5606, 5611)}, // SWC-INTERNAL-BEHAVIOR
    /* 4523 */ ElementSpec {sub_elements: (6428, 6444), sub_element_ver: 5368, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // EVENTS
    /* 4524 */ ElementSpec {sub_elements: (21144, 21145), sub_element_ver: 21, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // EXCLUSIVE-AREA-POLICYS
    /* 4525 */ ElementSpec {sub_elements: (20210, 20211), sub_element_ver: 7, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // INCLUDED-DATA-TYPE-SETS
    /* 4526 */ ElementSpec {sub_elements: (20211, 20212), sub_element_ver: 386, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // INCLUDED-MODE-DECLARATION-GROUP-SETS
    /* 4527 */ ElementSpec {sub_elements: (21145, 21146), sub_element_ver: 7, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // PER-INSTANCE-MEMORYS
    /* 4528 */ ElementSpec {sub_elements: (21146, 21147), sub_element_ver: 7, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // PORT-API-OPTIONS
    /* 4529 */ ElementSpec {sub_elements: (21147, 21148), sub_element_ver: 7, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // RUNNABLES
    /* 4530 */ ElementSpec {sub_elements: (20152, 20153), sub_element_ver: 7, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // SERVICE-DEPENDENCYS
    /* 4531 */ ElementSpec {sub_elements: (20224, 20225), sub_element_ver: 7, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // VARIATION-POINT-PROXYS
    /* 4532 */ ElementSpec {sub_elements: (10852, 10865), sub_element_ver: 5144, attributes: (115, 118), attributes_ver: 0, character_data: None, mode: ContentMode::Sequence, ref_info: (5611, 5617)}, // SWC-MODE-MANAGER-ERROR-EVENT
    /* 4533 */ ElementSpec {sub_elements: (8912, 8926), sub_element_ver: 2053, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (5617, 5623)}, // SWC-MODE-SWITCH-EVENT
    /* 4534 */ ElementSpec {sub_elements: (21148, 21149), sub_element_ver: 7, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // MODE-IREFS
    /* 4535 */ ElementSpec {sub_elements: (6444, 6460), sub_element_ver: 5384, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (5623, 5627)}, // SWC-SERVICE-DEPENDENCY
    /* 4536 */ ElementSpec {sub_elements: (20238, 20239), sub_element_ver: 7, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // ASSIGNED-DATAS
    /* 4537 */ ElementSpec {sub_elements: (21149, 21150), sub_element_ver: 7, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // ASSIGNED-PORTS, CLIENT-SERVER-PORTS
    /* 4538 */ ElementSpec {sub_elements: (18927, 18931), sub_element_ver: 140, attributes: (0, 2), attributes_ver: 120, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // MAPPED-SWC-SERVICE-DEPENDENCY-IREF, SWC-SERVICE-DEPENDENCY-IREF
    /* 4539 */ ElementSpec {sub_elements: (19478, 19481), sub_element_ver: 8194, attributes: (0, 2), attributes_ver: 8194, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // MAPPED-SWC-SERVICE-DEPENDENCY-IN-EXECUTABLE-IREF, MAPPED-SWC-SERVICE-DEPENDENCY-IREF, SWC-SERVICE-DEPENDENCY-IN-EXECUTABLE-IREF
    /* 4540 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (1315, 1321), attributes_ver: 9403, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // TARGET-SWC-SERVICE-DEPENDENCY-REF
    /* 4541 */ ElementSpec {sub_elements: (18931, 18935), sub_element_ver: 192, attributes: (0, 2), attributes_ver: 134, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // MAPPED-SWC-SERVICE-DEPENDENCY-IN-SYSTEM-IREF, MAPPED-SWC-SERVICE-DEPENDENCY-IREF, SWC-SERVICE-DEPENDENCY-IN-SYSTEM-IREF
    /* 4542 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2959, 2965), attributes_ver: 9325, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // BASE-REF
    /* 4543 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2887, 2893), attributes_ver: 9361, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // REPRESENTED-PORT-GROUP-REF, TARGET-REF
    /* 4544 */ ElementSpec {sub_elements: (664, 728), sub_element_ver: 664, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Choice, ref_info: (0, 0)}, // SERVICE-NEEDS
    /* 4545 */ ElementSpec {sub_elements: (4861, 4879), sub_element_ver: 4309, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (5627, 5632)}, // SWC-TIMING
    /* 4546 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (3433, 3439), attributes_ver: 9349, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // BEHAVIOR-REF
    /* 4547 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2725, 2731), attributes_ver: 9361, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // COMPONENT-REF, TYPE-TREF
    /* 4548 */ ElementSpec {sub_elements: (14696, 14707), sub_element_ver: 3276, attributes: (115, 118), attributes_ver: 192, character_data: None, mode: ContentMode::Sequence, ref_info: (5632, 5633)}, // SWC-TO-APPLICATION-PARTITION-MAPPING
    /* 4549 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (931, 937), attributes_ver: 9325, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // APPLICATION-PARTITION-REF
    /* 4550 */ ElementSpec {sub_elements: (8926, 8940), sub_element_ver: 6559, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (5633, 5634)}, // SWC-TO-ECU-MAPPING
    /* 4551 */ ElementSpec {sub_elements: (21150, 21151), sub_element_ver: 7, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // COMPONENT-IREFS
    /* 4552 */ ElementSpec {sub_elements: (18189, 18195), sub_element_ver: 804, attributes: (0, 2), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // SWC-TO-ECU-MAPPING-CONSTRAINT
    /* 4553 */ ElementSpec {sub_elements: (21151, 21152), sub_element_ver: 7, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // ECU-INSTANCE-REFS
    /* 4554 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 22, character_data: Some(884), mode: ContentMode::Characters, ref_info: (0, 0)}, // SWC-TO-ECU-MAPPING-CONSTRAINT-TYPE
    /* 4555 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (1903, 1909), attributes_ver: 9349, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // CONTROLLED-HW-ELEMENT-REF
    /* 4556 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (403, 409), attributes_ver: 9361, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // PARTITION-REF
    /* 4557 */ ElementSpec {sub_elements: (14707, 14718), sub_element_ver: 841, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (5634, 5635)}, // SWC-TO-IMPL-MAPPING
    /* 4558 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (3439, 3445), attributes_ver: 9361, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // COMPONENT-IMPLEMENTATION-REF
    /* 4559 */ ElementSpec {sub_elements: (20082, 20084), sub_element_ver: 22, attributes: (0, 2), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // SWC-TO-SWC-OPERATION-ARGUMENTS
    /* 4560 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 22, character_data: Some(885), mode: ContentMode::Characters, ref_info: (0, 0)}, // DIRECTION
    /* 4561 */ ElementSpec {sub_elements: (21152, 21153), sub_element_ver: 7, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // OPERATION-IREFS
    /* 4562 */ ElementSpec {sub_elements: (21153, 21154), sub_element_ver: 7, attributes: (0, 2), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // SWC-TO-SWC-SIGNAL
    /* 4563 */ ElementSpec {sub_elements: (21154, 21155), sub_element_ver: 7, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // DATA-ELEMENT-IREFS
    /* 4564 */ ElementSpec {sub_elements: (17355, 17364), sub_element_ver: 1502, attributes: (115, 118), attributes_ver: 230, character_data: None, mode: ContentMode::Sequence, ref_info: (5635, 5636)}, // SWITCH-ASYNCHRONOUS-TRAFFIC-SHAPER-GROUP-ENTRY
    /* 4565 */ ElementSpec {sub_elements: (8940, 8954), sub_element_ver: 1514, attributes: (115, 118), attributes_ver: 230, character_data: None, mode: ContentMode::Sequence, ref_info: (5636, 5637)}, // SWITCH-FLOW-METERING-ENTRY
    /* 4566 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 12, character_data: Some(888), mode: ContentMode::Characters, ref_info: (0, 0)}, // SWITCH-MAC-ADDRESS-LEARNING-MODE
    /* 4567 */ ElementSpec {sub_elements: (16474, 16484), sub_element_ver: 1502, attributes: (115, 118), attributes_ver: 230, character_data: None, mode: ContentMode::Sequence, ref_info: (5637, 5638)}, // FILTER-ACTION-DEST-PORT-MODIFICATION
    /* 4568 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 123, character_data: Some(889), mode: ContentMode::Characters, ref_info: (0, 0)}, // MODIFICATION
    /* 4569 */ ElementSpec {sub_elements: (7678, 7693), sub_element_ver: 1514, attributes: (115, 118), attributes_ver: 230, character_data: None, mode: ContentMode::Sequence, ref_info: (5638, 5639)}, // SWITCH-STREAM-FILTER-ENTRY
    /* 4570 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (3445, 3451), attributes_ver: 230, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // ASYNCHRONOUS-TRAFFIC-SHAPER-REF
    /* 4571 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (3451, 3457), attributes_ver: 230, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // FLOW-METERING-REF
    /* 4572 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (3457, 3463), attributes_ver: 230, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // STREAM-GATE-REF
    /* 4573 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (3463, 3469), attributes_ver: 230, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // STREAM-IDENTIFICATION-HANDLE-REF
    /* 4574 */ ElementSpec {sub_elements: (21155, 21156), sub_element_ver: 16, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // STREAM-IDENTIFICATION-HANDLE-REFS
    /* 4575 */ ElementSpec {sub_elements: (14718, 14729), sub_element_ver: 1502, attributes: (115, 118), attributes_ver: 230, character_data: None, mode: ContentMode::Sequence, ref_info: (5639, 5640)}, // STREAM-FILTER-RULE
    /* 4576 */ ElementSpec {sub_elements: (17364, 17373), sub_element_ver: 1502, attributes: (115, 118), attributes_ver: 230, character_data: None, mode: ContentMode::Sequence, ref_info: (5640, 5641)}, // SWITCH-STREAM-GATE-ENTRY
    /* 4577 */ ElementSpec {sub_elements: (7693, 7708), sub_element_ver: 1514, attributes: (115, 118), attributes_ver: 230, character_data: None, mode: ContentMode::Sequence, ref_info: (5641, 5642)}, // SWITCH-STREAM-IDENTIFICATION
    /* 4578 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (883, 889), attributes_ver: 230, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // EGRESS-PORT-REF, INGRESS-PORT-REF
    /* 4579 */ ElementSpec {sub_elements: (21156, 21157), sub_element_ver: 16, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // EGRESS-PORT-REFS
    /* 4580 */ ElementSpec {sub_elements: (21157, 21158), sub_element_ver: 16, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // INGRESS-PORT-REFS
    /* 4581 */ ElementSpec {sub_elements: (18449, 18452), sub_element_ver: 5048, attributes: (0, 2), attributes_ver: 656, character_data: None, mode: ContentMode::Sequence, ref_info: (5642, 5644)}, // EVENT-SYMBOL-NAME, SYMBOL-PROPS
    /* 4582 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (3846, 3849), attributes_ver: 860, character_data: Some(982), mode: ContentMode::Characters, ref_info: (0, 0)}, // SYMBOL
    /* 4583 */ ElementSpec {sub_elements: (18449, 18452), sub_element_ver: 9226, attributes: (0, 2), attributes_ver: 9439, character_data: None, mode: ContentMode::Sequence, ref_info: (5644, 5646)}, // SYMBOLIC-NAME-PROPS
    /* 4584 */ ElementSpec {sub_elements: (777, 785), sub_element_ver: 841, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (5646, 5648)}, // SYNC-TIME-BASE-MGR-USER-NEEDS
    /* 4585 */ ElementSpec {sub_elements: (7708, 7723), sub_element_ver: 3531, attributes: (115, 118), attributes_ver: 9, character_data: None, mode: ContentMode::Sequence, ref_info: (5648, 5651)}, // SYNCHRONIZATION-POINT-CONSTRAINT
    /* 4586 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (3469, 3475), attributes_ver: 1187, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // SOURCE-EEC-REF, TARGET-EEC-REF
    /* 4587 */ ElementSpec {sub_elements: (21158, 21159), sub_element_ver: 9, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // SOURCE-EEC-REFS
    /* 4588 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (1975, 1981), attributes_ver: 1187, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // SOURCE-EVENT-REF, TARGET-EVENT-REF
    /* 4589 */ ElementSpec {sub_elements: (21159, 21160), sub_element_ver: 9, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // SOURCE-EVENT-REFS
    /* 4590 */ ElementSpec {sub_elements: (21160, 21161), sub_element_ver: 9, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // TARGET-EEC-REFS
    /* 4591 */ ElementSpec {sub_elements: (21161, 21162), sub_element_ver: 9, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // TARGET-EVENT-REFS
    /* 4592 */ ElementSpec {sub_elements: (6460, 6476), sub_element_ver: 5400, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (5651, 5654)}, // SYNCHRONIZATION-TIMING-CONSTRAINT
    /* 4593 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (259, 265), attributes_ver: 9319, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // SCOPE-EVENT-REF, TRIGGERING-EVENT-REF
    /* 4594 */ ElementSpec {sub_elements: (21162, 21163), sub_element_ver: 0, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // SCOPE-EVENT-REFS
    /* 4595 */ ElementSpec {sub_elements: (21163, 21164), sub_element_ver: 7, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // SCOPE-REFS
    /* 4596 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 22, character_data: Some(892), mode: ContentMode::Characters, ref_info: (0, 0)}, // SYNCHRONIZATION-CONSTRAINT-TYPE
    /* 4597 */ ElementSpec {sub_elements: (16484, 16494), sub_element_ver: 6018, attributes: (115, 118), attributes_ver: 637, character_data: None, mode: ContentMode::Sequence, ref_info: (5654, 5656)}, // SYNCHRONIZED-MASTER-TIME-BASE
    /* 4598 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2251, 2257), attributes_ver: 6018, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // NETWORK-TIME-MASTER-REF
    /* 4599 */ ElementSpec {sub_elements: (17373, 17382), sub_element_ver: 6018, attributes: (115, 118), attributes_ver: 637, character_data: None, mode: ContentMode::Sequence, ref_info: (5656, 5658)}, // SYNCHRONIZED-SLAVE-TIME-BASE
    /* 4600 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2257, 2263), attributes_ver: 6018, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // NETWORK-TIME-SLAVE-REF
    /* 4601 */ ElementSpec {sub_elements: (17382, 17391), sub_element_ver: 1927, attributes: (115, 118), attributes_ver: 77, character_data: None, mode: ContentMode::Sequence, ref_info: (5658, 5660)}, // SYNCHRONIZED-TIME-BASE-CONSUMER
    /* 4602 */ ElementSpec {sub_elements: (3190, 3204), sub_element_ver: 1927, attributes: (115, 118), attributes_ver: 77, character_data: None, mode: ContentMode::Sequence, ref_info: (5660, 5670)}, // SYNCHRONIZED-TIME-BASE-CONSUMER-INTERFACE
    /* 4603 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2257, 2263), attributes_ver: 500, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // NETWORK-TIME-CONSUMER-REF
    /* 4604 */ ElementSpec {sub_elements: (16494, 16504), sub_element_ver: 1927, attributes: (115, 118), attributes_ver: 77, character_data: None, mode: ContentMode::Sequence, ref_info: (5670, 5672)}, // SYNCHRONIZED-TIME-BASE-PROVIDER
    /* 4605 */ ElementSpec {sub_elements: (7723, 7738), sub_element_ver: 1927, attributes: (115, 118), attributes_ver: 77, character_data: None, mode: ContentMode::Sequence, ref_info: (5672, 5682)}, // SYNCHRONIZED-TIME-BASE-PROVIDER-INTERFACE
    /* 4606 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2251, 2257), attributes_ver: 500, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // NETWORK-TIME-PROVIDER-REF
    /* 4607 */ ElementSpec {sub_elements: (8954, 8968), sub_element_ver: 6573, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (5682, 5688)}, // SYNCHRONOUS-SERVER-CALL-POINT
    /* 4608 */ ElementSpec {sub_elements: (2902, 2925), sub_element_ver: 2609, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (5688, 5697)}, // SYSTEM
    /* 4609 */ ElementSpec {sub_elements: (21164, 21165), sub_element_ver: 513, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // CHAPTERS
    /* 4610 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (3475, 3481), attributes_ver: 9331, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // CLIENT-ID-DEFINITION-SET-REF
    /* 4611 */ ElementSpec {sub_elements: (21165, 21166), sub_element_ver: 43, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // CLIENT-ID-DEFINITION-SET-REFS
    /* 4612 */ ElementSpec {sub_elements: (21166, 21167), sub_element_ver: 7, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // FIBEX-ELEMENTS
    /* 4613 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (3481, 3487), attributes_ver: 500, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // INTERPOLATION-ROUTINE-MAPPING-SET-REF
    /* 4614 */ ElementSpec {sub_elements: (21167, 21168), sub_element_ver: 19, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // INTERPOLATION-ROUTINE-MAPPING-SET-REFS
    /* 4615 */ ElementSpec {sub_elements: (21168, 21169), sub_element_ver: 21, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // J-1939-SHARED-ADDRESS-CLUSTERS
    /* 4616 */ ElementSpec {sub_elements: (1156, 1189), sub_element_ver: 1220, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (5697, 5698)}, // SYSTEM-MAPPING
    /* 4617 */ ElementSpec {sub_elements: (21169, 21170), sub_element_ver: 20, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // APP-OS-TASK-PROXY-TO-ECU-TASK-PROXY-MAPPINGS
    /* 4618 */ ElementSpec {sub_elements: (21170, 21171), sub_element_ver: 21, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // APPLICATION-PARTITION-TO-ECU-PARTITION-MAPPINGS
    /* 4619 */ ElementSpec {sub_elements: (21171, 21172), sub_element_ver: 9, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // COM-MANAGEMENT-MAPPINGS
    /* 4620 */ ElementSpec {sub_elements: (20084, 20086), sub_element_ver: 9, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // CRYPTO-SERVICE-MAPPINGS
    /* 4621 */ ElementSpec {sub_elements: (18195, 18201), sub_element_ver: 3135, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // DATA-MAPPINGS
    /* 4622 */ ElementSpec {sub_elements: (21172, 21173), sub_element_ver: 16, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // DDS-I-SIGNAL-TO-TOPIC-MAPPINGS
    /* 4623 */ ElementSpec {sub_elements: (21173, 21174), sub_element_ver: 7, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // ECU-RESOURCE-MAPPINGS
    /* 4624 */ ElementSpec {sub_elements: (21174, 21175), sub_element_ver: 21, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // J-1939-CONTROLLER-APPLICATION-TO-J-1939-NM-NODE-MAPPINGS
    /* 4625 */ ElementSpec {sub_elements: (19481, 19484), sub_element_ver: 22, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // MAPPING-CONSTRAINTS
    /* 4626 */ ElementSpec {sub_elements: (21175, 21176), sub_element_ver: 386, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // PNC-MAPPINGS
    /* 4627 */ ElementSpec {sub_elements: (21176, 21177), sub_element_ver: 19, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // PORT-ELEMENT-TO-COM-RESOURCE-MAPPINGS
    /* 4628 */ ElementSpec {sub_elements: (21177, 21178), sub_element_ver: 7, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // RESOURCE-ESTIMATIONS
    /* 4629 */ ElementSpec {sub_elements: (21178, 21179), sub_element_ver: 19, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // RESOURCE-TO-APPLICATION-PARTITION-MAPPINGS
    /* 4630 */ ElementSpec {sub_elements: (21179, 21180), sub_element_ver: 20, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // RTE-EVENT-SEPARATIONS
    /* 4631 */ ElementSpec {sub_elements: (21180, 21181), sub_element_ver: 20, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // RTE-EVENT-TO-OS-TASK-PROXY-MAPPINGS
    /* 4632 */ ElementSpec {sub_elements: (18935, 18939), sub_element_ver: 29, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // SIGNAL-PATH-CONSTRAINTS
    /* 4633 */ ElementSpec {sub_elements: (21181, 21182), sub_element_ver: 16, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // SOFTWARE-CLUSTER-TO-APPLICATION-PARTITION-MAPPINGS
    /* 4634 */ ElementSpec {sub_elements: (21182, 21183), sub_element_ver: 19, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // SOFTWARE-CLUSTER-TO-RESOURCE-MAPPINGS
    /* 4635 */ ElementSpec {sub_elements: (21183, 21184), sub_element_ver: 19, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // SW-CLUSTER-MAPPINGS
    /* 4636 */ ElementSpec {sub_elements: (21184, 21185), sub_element_ver: 7, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // SW-IMPL-MAPPINGS
    /* 4637 */ ElementSpec {sub_elements: (21185, 21186), sub_element_ver: 7, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // SW-MAPPINGS
    /* 4638 */ ElementSpec {sub_elements: (20344, 20345), sub_element_ver: 21, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // SWC-TO-APPLICATION-PARTITION-MAPPINGS
    /* 4639 */ ElementSpec {sub_elements: (21186, 21187), sub_element_ver: 16, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // SYSTEM-SIGNAL-GROUP-TO-COM-RESOURCE-MAPPINGS
    /* 4640 */ ElementSpec {sub_elements: (21187, 21188), sub_element_ver: 16, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // SYSTEM-SIGNAL-TO-COM-RESOURCE-MAPPINGS
    /* 4641 */ ElementSpec {sub_elements: (21188, 21189), sub_element_ver: 7, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // MAPPINGS
    /* 4642 */ ElementSpec {sub_elements: (17391, 17400), sub_element_ver: 8720, attributes: (115, 118), attributes_ver: 8720, character_data: None, mode: ContentMode::Sequence, ref_info: (5698, 5699)}, // SYSTEM-MEMORY-USAGE
    /* 4643 */ ElementSpec {sub_elements: (21189, 21190), sub_element_ver: 7, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // ROOT-SOFTWARE-COMPOSITIONS
    /* 4644 */ ElementSpec {sub_elements: (14729, 14740), sub_element_ver: 8249, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (5699, 5703)}, // SYSTEM-SIGNAL
    /* 4645 */ ElementSpec {sub_elements: (14740, 14751), sub_element_ver: 8260, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (5703, 5707)}, // SYSTEM-SIGNAL-GROUP
    /* 4646 */ ElementSpec {sub_elements: (21190, 21191), sub_element_ver: 7, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // SYSTEM-SIGNAL-REFS
    /* 4647 */ ElementSpec {sub_elements: (14751, 14762), sub_element_ver: 1502, attributes: (115, 118), attributes_ver: 230, character_data: None, mode: ContentMode::Sequence, ref_info: (5707, 5708)}, // SYSTEM-SIGNAL-GROUP-TO-COMMUNICATION-RESOURCE-MAPPING
    /* 4648 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2311, 2317), attributes_ver: 230, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // SYSTEM-SIGNAL-GROUP-REF
    /* 4649 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (1435, 1441), attributes_ver: 9331, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // TRANSFORMING-SYSTEM-SIGNAL-REF
    /* 4650 */ ElementSpec {sub_elements: (14762, 14773), sub_element_ver: 1502, attributes: (115, 118), attributes_ver: 230, character_data: None, mode: ContentMode::Sequence, ref_info: (5708, 5709)}, // SYSTEM-SIGNAL-TO-COMMUNICATION-RESOURCE-MAPPING
    /* 4651 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2881, 2887), attributes_ver: 230, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // SOFTWARE-CLUSTER-COM-RESOURCE-REF
    /* 4652 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (1435, 1441), attributes_ver: 230, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // SYSTEM-SIGNAL-REF
    /* 4653 */ ElementSpec {sub_elements: (20352, 20353), sub_element_ver: 19, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // SW-CLUSTERS
    /* 4654 */ ElementSpec {sub_elements: (21164, 21165), sub_element_ver: 519, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // SYSTEM-DOCUMENTATIONS
    /* 4655 */ ElementSpec {sub_elements: (5562, 5579), sub_element_ver: 4380, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (5709, 5714)}, // SYSTEM-TIMING
    /* 4656 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2959, 2965), attributes_ver: 9361, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // ECU-EXTRACT-REF, SYSTEM-REF
    /* 4657 */ ElementSpec {sub_elements: (18939, 18943), sub_element_ver: 8851, attributes: (57, 71), attributes_ver: 9257, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // TABLE
    /* 4658 */ ElementSpec {sub_elements: (18943, 18947), sub_element_ver: 6134, attributes: (0, 2), attributes_ver: 0, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // TAG-WITH-OPTIONAL-VALUE
    /* 4659 */ ElementSpec {sub_elements: (20086, 20088), sub_element_ver: 22, attributes: (0, 2), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // TARGET-I-PDU
    /* 4660 */ ElementSpec {sub_elements: (21191, 21192), sub_element_ver: 7, attributes: (3849, 3852), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // TBODY, TFOOT, THEAD
    /* 4661 */ ElementSpec {sub_elements: (20088, 20090), sub_element_ver: 77, attributes: (0, 2), attributes_ver: 77, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // ICMP-V-4-PROPS
    /* 4662 */ ElementSpec {sub_elements: (18514, 18519), sub_element_ver: 500, attributes: (0, 2), attributes_ver: 77, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // ICMP-V-6-PROPS
    /* 4663 */ ElementSpec {sub_elements: (17400, 17409), sub_element_ver: 3276, attributes: (115, 118), attributes_ver: 192, character_data: None, mode: ContentMode::Sequence, ref_info: (5714, 5715)}, // TCP-OPTION-FILTER-LIST
    /* 4664 */ ElementSpec {sub_elements: (21192, 21193), sub_element_ver: 21, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // ALLOWED-TCP-OPTIONS
    /* 4665 */ ElementSpec {sub_elements: (16504, 16514), sub_element_ver: 3276, attributes: (115, 118), attributes_ver: 192, character_data: None, mode: ContentMode::Sequence, ref_info: (5715, 5719)}, // TCP-OPTION-FILTER-SET
    /* 4666 */ ElementSpec {sub_elements: (21193, 21194), sub_element_ver: 21, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // TCP-OPTION-FILTER-LISTS
    /* 4667 */ ElementSpec {sub_elements: (4879, 4897), sub_element_ver: 1927, attributes: (0, 2), attributes_ver: 77, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // TCP-PROPS
    /* 4668 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 64, character_data: Some(900), mode: ContentMode::Characters, ref_info: (0, 0)}, // TCP-ROLE
    /* 4669 */ ElementSpec {sub_elements: (17648, 17656), sub_element_ver: 3664, attributes: (0, 2), attributes_ver: 301, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // TCP-RULE
    /* 4670 */ ElementSpec {sub_elements: (17656, 17664), sub_element_ver: 8810, attributes: (0, 2), attributes_ver: 0, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // TCP-TP, TCP-TP-CONFIG
    /* 4671 */ ElementSpec {sub_elements: (12714, 12726), sub_element_ver: 1927, attributes: (115, 118), attributes_ver: 77, character_data: None, mode: ContentMode::Sequence, ref_info: (5719, 5720)}, // TD-CP-SOFTWARE-CLUSTER-MAPPING
    /* 4672 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (943, 949), attributes_ver: 500, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // CP-SOFTWARE-CLUSTER-REF, PROVIDER-REF, REQUESTER-REF, REQUESTOR-REF
    /* 4673 */ ElementSpec {sub_elements: (21194, 21195), sub_element_ver: 19, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // REQUESTOR-REFS
    /* 4674 */ ElementSpec {sub_elements: (14773, 14784), sub_element_ver: 1927, attributes: (115, 118), attributes_ver: 77, character_data: None, mode: ContentMode::Sequence, ref_info: (5720, 5724)}, // TD-CP-SOFTWARE-CLUSTER-MAPPING-SET
    /* 4675 */ ElementSpec {sub_elements: (21195, 21196), sub_element_ver: 19, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // TD-CP-SOFTWARE-CLUSTER-RESOURCE-TO-TD-MAPPINGS
    /* 4676 */ ElementSpec {sub_elements: (21196, 21197), sub_element_ver: 19, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // TD-CP-SOFTWARE-CLUSTER-TO-TD-MAPPINGS
    /* 4677 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (3487, 3493), attributes_ver: 500, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // TIMING-DESCRIPTION-REF
    /* 4678 */ ElementSpec {sub_elements: (14784, 14795), sub_element_ver: 1927, attributes: (115, 118), attributes_ver: 77, character_data: None, mode: ContentMode::Sequence, ref_info: (5724, 5725)}, // TD-CP-SOFTWARE-CLUSTER-RESOURCE-MAPPING
    /* 4679 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (589, 595), attributes_ver: 9361, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // BSW-MODULE-DESCRIPTION-REF
    /* 4680 */ ElementSpec {sub_elements: (10865, 10878), sub_element_ver: 5988, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (5725, 5728)}, // TD-EVENT-BSW-INTERNAL-BEHAVIOR
    /* 4681 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 22, character_data: Some(901), mode: ContentMode::Characters, ref_info: (0, 0)}, // TD-EVENT-BSW-INTERNAL-BEHAVIOR-TYPE
    /* 4682 */ ElementSpec {sub_elements: (6476, 6492), sub_element_ver: 5416, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (5728, 5732)}, // TD-EVENT-BSW-MODE-DECLARATION
    /* 4683 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 22, character_data: Some(902), mode: ContentMode::Characters, ref_info: (0, 0)}, // TD-EVENT-BSW-MODE-DECLARATION-TYPE
    /* 4684 */ ElementSpec {sub_elements: (8968, 8982), sub_element_ver: 5988, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (5732, 5736)}, // TD-EVENT-BSW-MODULE
    /* 4685 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 22, character_data: Some(903), mode: ContentMode::Characters, ref_info: (0, 0)}, // TD-EVENT-BSW-MODULE-TYPE
    /* 4686 */ ElementSpec {sub_elements: (3658, 3669), sub_element_ver: 8271, attributes: (115, 118), attributes_ver: 776, character_data: None, mode: ContentMode::Sequence, ref_info: (5736, 5739)}, // TD-EVENT-COMPLEX
    /* 4687 */ ElementSpec {sub_elements: (8982, 8996), sub_element_ver: 6587, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (5739, 5744)}, // TD-EVENT-FR-CLUSTER-CYCLE-START
    /* 4688 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (3493, 3499), attributes_ver: 9361, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // FR-CLUSTER-REF
    /* 4689 */ ElementSpec {sub_elements: (7738, 7753), sub_element_ver: 5988, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (5744, 5748)}, // TD-EVENT-FRAME
    /* 4690 */ ElementSpec {sub_elements: (5579, 5596), sub_element_ver: 4839, attributes: (115, 118), attributes_ver: 192, character_data: None, mode: ContentMode::Sequence, ref_info: (5748, 5752)}, // TD-EVENT-FRAME-ETHERNET
    /* 4691 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (1825, 1831), attributes_ver: 9325, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // SOCKET-CONNECTION-BUNDLE-REF
    /* 4692 */ ElementSpec {sub_elements: (21197, 21198), sub_element_ver: 21, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // TD-HEADER-ID-FILTERS
    /* 4693 */ ElementSpec {sub_elements: (21198, 21199), sub_element_ver: 21, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // TD-PDU-TRIGGERING-FILTER-REFS
    /* 4694 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 134, character_data: Some(904), mode: ContentMode::Characters, ref_info: (0, 0)}, // TD-EVENT-TYPE
    /* 4695 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (3499, 3505), attributes_ver: 9361, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // FRAME-REF
    /* 4696 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2875, 2881), attributes_ver: 9361, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // PHYSICAL-CHANNEL-REF
    /* 4697 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 22, character_data: Some(905), mode: ContentMode::Characters, ref_info: (0, 0)}, // TD-EVENT-TYPE
    /* 4698 */ ElementSpec {sub_elements: (7753, 7768), sub_element_ver: 5988, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (5752, 5756)}, // TD-EVENT-I-PDU
    /* 4699 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2095, 2101), attributes_ver: 9361, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // DIRECT-TP-SDU-REF, I-PDU-REF, LIN-TP-N-SDU-REF, REVERSED-TP-SDU-REF, TP-SDU-REF
    /* 4700 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 22, character_data: Some(906), mode: ContentMode::Characters, ref_info: (0, 0)}, // TD-EVENT-TYPE
    /* 4701 */ ElementSpec {sub_elements: (7768, 7783), sub_element_ver: 5988, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (5756, 5760)}, // TD-EVENT-I-SIGNAL
    /* 4702 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 22, character_data: Some(907), mode: ContentMode::Characters, ref_info: (0, 0)}, // TD-EVENT-TYPE
    /* 4703 */ ElementSpec {sub_elements: (3658, 3679), sub_element_ver: 3195, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (5760, 5765)}, // TD-EVENT-MODE-DECLARATION
    /* 4704 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2089, 2095), attributes_ver: 9349, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // ENTRY-MODE-DECLARATION-REF, EXIT-MODE-DECLARATION-REF, MODE-DECLARATION-REF
    /* 4705 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (583, 589), attributes_ver: 9391, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // MODE-DECLARATION-REF
    /* 4706 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 22, character_data: Some(908), mode: ContentMode::Characters, ref_info: (0, 0)}, // TD-EVENT-MODE-DECLARATION-TYPE
    /* 4707 */ ElementSpec {sub_elements: (18947, 18951), sub_element_ver: 5055, attributes: (0, 2), attributes_ver: 656, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // OCCURRENCE-EXPRESSION
    /* 4708 */ ElementSpec {sub_elements: (21199, 21200), sub_element_ver: 386, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // ARGUMENTS
    /* 4709 */ ElementSpec {sub_elements: (18951, 18955), sub_element_ver: 5055, attributes: (0, 2), attributes_ver: 656, character_data: Some(982), mode: ContentMode::Mixed, ref_info: (0, 0)}, // FORMULA
    /* 4710 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (3505, 3511), attributes_ver: 9349, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // ARGUMENT-REF
    /* 4711 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (3511, 3517), attributes_ver: 9349, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // VARIABLE-REF
    /* 4712 */ ElementSpec {sub_elements: (21200, 21201), sub_element_ver: 21, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // MODES, TIMING-MODES
    /* 4713 */ ElementSpec {sub_elements: (21201, 21202), sub_element_ver: 386, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // VARIABLES
    /* 4714 */ ElementSpec {sub_elements: (4354, 4373), sub_element_ver: 3892, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (5765, 5770)}, // TD-EVENT-OPERATION
    /* 4715 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (673, 679), attributes_ver: 9391, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // OPERATION-REF
    /* 4716 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 22, character_data: Some(909), mode: ContentMode::Characters, ref_info: (0, 0)}, // TD-EVENT-OPERATION-TYPE
    /* 4717 */ ElementSpec {sub_elements: (10878, 10891), sub_element_ver: 4737, attributes: (115, 118), attributes_ver: 77, character_data: None, mode: ContentMode::Sequence, ref_info: (5770, 5774)}, // TD-EVENT-SERVICE-INSTANCE-DISCOVERY
    /* 4718 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 77, character_data: Some(910), mode: ContentMode::Characters, ref_info: (0, 0)}, // TD-EVENT-SERVICE-INSTANCE-DISCOVERY-TYPE
    /* 4719 */ ElementSpec {sub_elements: (8996, 9010), sub_element_ver: 4737, attributes: (115, 118), attributes_ver: 77, character_data: None, mode: ContentMode::Sequence, ref_info: (5774, 5778)}, // TD-EVENT-SERVICE-INSTANCE-EVENT
    /* 4720 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (541, 547), attributes_ver: 500, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // EVENT-REF
    /* 4721 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 77, character_data: Some(911), mode: ContentMode::Characters, ref_info: (0, 0)}, // TD-EVENT-SERVICE-INSTANCE-EVENT-TYPE
    /* 4722 */ ElementSpec {sub_elements: (9010, 9024), sub_element_ver: 4737, attributes: (115, 118), attributes_ver: 77, character_data: None, mode: ContentMode::Sequence, ref_info: (5778, 5782)}, // TD-EVENT-SERVICE-INSTANCE-FIELD
    /* 4723 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 77, character_data: Some(912), mode: ContentMode::Characters, ref_info: (0, 0)}, // TD-EVENT-SERVICE-INSTANCE-FIELD-TYPE
    /* 4724 */ ElementSpec {sub_elements: (9024, 9038), sub_element_ver: 4737, attributes: (115, 118), attributes_ver: 77, character_data: None, mode: ContentMode::Sequence, ref_info: (5782, 5786)}, // TD-EVENT-SERVICE-INSTANCE-METHOD
    /* 4725 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (673, 679), attributes_ver: 500, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // METHOD-REF
    /* 4726 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 77, character_data: Some(913), mode: ContentMode::Characters, ref_info: (0, 0)}, // TD-EVENT-SERVICE-INSTANCE-METHOD-TYPE
    /* 4727 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (1801, 1807), attributes_ver: 500, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // SERVICE-INSTANCE-TO-PORT-PROTOTYPE-MAPPING-REF
    /* 4728 */ ElementSpec {sub_elements: (12726, 12738), sub_element_ver: 6545, attributes: (115, 118), attributes_ver: 6545, character_data: None, mode: ContentMode::Sequence, ref_info: (5786, 5790)}, // TD-EVENT-SLLET-PORT
    /* 4729 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (421, 427), attributes_ver: 6545, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // PORT-REF
    /* 4730 */ ElementSpec {sub_elements: (7783, 7798), sub_element_ver: 6003, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (5790, 5794)}, // TD-EVENT-SWC-INTERNAL-BEHAVIOR
    /* 4731 */ ElementSpec {sub_elements: (10891, 10904), sub_element_ver: 4327, attributes: (115, 118), attributes_ver: 0, character_data: None, mode: ContentMode::Sequence, ref_info: (5794, 5798)}, // TD-EVENT-SWC-INTERNAL-BEHAVIOR-REFERENCE
    /* 4732 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (3517, 3523), attributes_ver: 9319, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // REFERENCED-TD-EVENT-SWC-REF
    /* 4733 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 22, character_data: Some(915), mode: ContentMode::Characters, ref_info: (0, 0)}, // TD-EVENT-SWC-INTERNAL-BEHAVIOR-TYPE
    /* 4734 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (1045, 1051), attributes_ver: 9319, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // TARGET-VARIABLE-ACCESS-REF, VARIABLE-ACCESS-REF
    /* 4735 */ ElementSpec {sub_elements: (4897, 4915), sub_element_ver: 4327, attributes: (115, 118), attributes_ver: 0, character_data: None, mode: ContentMode::Sequence, ref_info: (5798, 5803)}, // TD-EVENT-TRIGGER
    /* 4736 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (607, 613), attributes_ver: 9319, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // TARGET-TRIGGER-REF, TRIGGER-REF
    /* 4737 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 0, character_data: Some(916), mode: ContentMode::Characters, ref_info: (0, 0)}, // TD-EVENT-TRIGGER-TYPE
    /* 4738 */ ElementSpec {sub_elements: (9038, 9052), sub_element_ver: 6587, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (5803, 5808)}, // TD-EVENT-TT-CAN-CYCLE-START
    /* 4739 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (3523, 3529), attributes_ver: 9361, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // TT-CAN-CLUSTER-REF
    /* 4740 */ ElementSpec {sub_elements: (4373, 4392), sub_element_ver: 3911, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (5808, 5813)}, // TD-EVENT-VARIABLE-DATA-PROTOTYPE
    /* 4741 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (541, 547), attributes_ver: 9391, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // DATA-ELEMENT-REF
    /* 4742 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 22, character_data: Some(917), mode: ContentMode::Characters, ref_info: (0, 0)}, // TD-EVENT-VARIABLE-DATA-PROTOTYPE-TYPE
    /* 4743 */ ElementSpec {sub_elements: (10904, 10917), sub_element_ver: 3027, attributes: (115, 118), attributes_ver: 12, character_data: None, mode: ContentMode::Sequence, ref_info: (5813, 5817)}, // TD-EVENT-VFB-PORT-GROUP
    /* 4744 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (3529, 3535), attributes_ver: 425, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // TD-EVENT-VFB-PORT-REF
    /* 4745 */ ElementSpec {sub_elements: (21202, 21203), sub_element_ver: 12, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // TD-EVENT-VFB-PORT-REFS
    /* 4746 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2899, 2905), attributes_ver: 9319, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // PORT-PROTOTYPE-BLUEPRINT-REF
    /* 4747 */ ElementSpec {sub_elements: (19644, 19646), sub_element_ver: 12, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Choice, ref_info: (0, 0)}, // PORT-PROTOTYPE-IREF
    /* 4748 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (421, 427), attributes_ver: 9391, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // DERIVED-PORT-PROTOTYPE-REF, PORT-REF
    /* 4749 */ ElementSpec {sub_elements: (10917, 10930), sub_element_ver: 4327, attributes: (115, 118), attributes_ver: 0, character_data: None, mode: ContentMode::Sequence, ref_info: (5817, 5821)}, // TD-EVENT-VFB-REFERENCE
    /* 4750 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (3535, 3541), attributes_ver: 9319, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // REFERENCED-TD-EVENT-VFB-REF
    /* 4751 */ ElementSpec {sub_elements: (20090, 20092), sub_element_ver: 134, attributes: (0, 2), attributes_ver: 134, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // TD-HEADER-ID-RANGE
    /* 4752 */ ElementSpec {sub_elements: (12738, 12750), sub_element_ver: 3664, attributes: (115, 118), attributes_ver: 463, character_data: None, mode: ContentMode::Sequence, ref_info: (5821, 5823)}, // TDLET-ZONE-CLOCK
    /* 4753 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 77, character_data: Some(920), mode: ContentMode::Characters, ref_info: (0, 0)}, // TERMINATION-BEHAVIOR
    /* 4754 */ ElementSpec {sub_elements: (18519, 18524), sub_element_ver: 1105, attributes: (0, 2), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // SENDER-TO-SIGNAL-TEXT-TABLE-MAPPING, SIGNAL-TO-RECEIVER-TEXT-TABLE-MAPPING, TEXT-TABLE-MAPPING
    /* 4755 */ ElementSpec {sub_elements: (21203, 21204), sub_element_ver: 7, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // VALUE-PAIRS
    /* 4756 */ ElementSpec {sub_elements: (20092, 20094), sub_element_ver: 22, attributes: (0, 2), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // TEXT-TABLE-VALUE-PAIR
    /* 4757 */ ElementSpec {sub_elements: (19484, 19487), sub_element_ver: 22, attributes: (0, 2), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // META-DATA-ITEM-TYPE, TEXT-VALUE-SPECIFICATION
    /* 4758 */ ElementSpec {sub_elements: (21204, 21205), sub_element_ver: 21, attributes: (0, 2), attributes_ver: 134, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // TEXTUAL-CONDITION
    /* 4759 */ ElementSpec {sub_elements: (18955, 18959), sub_element_ver: 29, attributes: (3541, 3547), attributes_ver: 621, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // TGROUP
    /* 4760 */ ElementSpec {sub_elements: (12750, 12762), sub_element_ver: 4737, attributes: (115, 118), attributes_ver: 77, character_data: None, mode: ContentMode::Sequence, ref_info: (5823, 5830)}, // TIME-BASE-PROVIDER-TO-PERSISTENCY-MAPPING
    /* 4761 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (3547, 3553), attributes_ver: 500, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // PERSISTENCY-DEPLOYMENT-ELEMENT-REF
    /* 4762 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (3553, 3559), attributes_ver: 500, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // TIME-BASE-PROVIDER-REF
    /* 4763 */ ElementSpec {sub_elements: (20094, 20096), sub_element_ver: 77, attributes: (0, 2), attributes_ver: 77, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // TIME-BASE-RESOURCE-REF-CONDITIONAL
    /* 4764 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2347, 2353), attributes_ver: 500, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // TIME-BASE-RESOURCE-REF
    /* 4765 */ ElementSpec {sub_elements: (19487, 19490), sub_element_ver: 799, attributes: (0, 2), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // REPETITION-PERIOD, TIME-OFFSET, TIME-PERIOD
    /* 4766 */ ElementSpec {sub_elements: (20096, 20098), sub_element_ver: 22, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Choice, ref_info: (0, 0)}, // TOLERANCE
    /* 4767 */ ElementSpec {sub_elements: (20098, 20100), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 0, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // TIME-SYNC-CLIENT
    /* 4768 */ ElementSpec {sub_elements: (21205, 21206), sub_element_ver: 0, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // ORDERED-MASTER-LIST
    /* 4769 */ ElementSpec {sub_elements: (17864, 17871), sub_element_ver: 8933, attributes: (0, 2), attributes_ver: 115, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // TIME-SYNC-CORRECTION
    /* 4770 */ ElementSpec {sub_elements: (17409, 17418), sub_element_ver: 2229, attributes: (115, 118), attributes_ver: 2229, character_data: None, mode: ContentMode::Sequence, ref_info: (5830, 5836)}, // TIME-SYNC-MODULE-INSTANTIATION
    /* 4771 */ ElementSpec {sub_elements: (18524, 18529), sub_element_ver: 3775, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // TIME-BASES
    /* 4772 */ ElementSpec {sub_elements: (9052, 9066), sub_element_ver: 6601, attributes: (115, 118), attributes_ver: 2229, character_data: None, mode: ContentMode::Sequence, ref_info: (5836, 5842)}, // TIME-SYNC-PORT-PROTOTYPE-TO-TIME-BASE-MAPPING
    /* 4773 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (349, 355), attributes_ver: 2229, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // PROCESS-REF
    /* 4774 */ ElementSpec {sub_elements: (18201, 18207), sub_element_ver: 1617, attributes: (0, 2), attributes_ver: 0, character_data: None, mode: ContentMode::Sequence, ref_info: (5842, 5843)}, // TIME-SYNC-SERVER
    /* 4775 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 0, character_data: Some(923), mode: ContentMode::Characters, ref_info: (0, 0)}, // TIME-SYNC-TECHNOLOGY
    /* 4776 */ ElementSpec {sub_elements: (20100, 20102), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 0, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // TIME-SYNCHRONIZATION
    /* 4777 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 115, character_data: Some(924), mode: ContentMode::Characters, ref_info: (0, 0)}, // TIME-BASE-KIND
    /* 4778 */ ElementSpec {sub_elements: (7798, 7813), sub_element_ver: 6018, attributes: (115, 118), attributes_ver: 637, character_data: None, mode: ContentMode::Sequence, ref_info: (5843, 5853)}, // TIME-SYNCHRONIZATION-MASTER-INTERFACE
    /* 4779 */ ElementSpec {sub_elements: (7798, 7812), sub_element_ver: 6018, attributes: (115, 118), attributes_ver: 637, character_data: None, mode: ContentMode::Sequence, ref_info: (5853, 5863)}, // TIME-SYNCHRONIZATION-PURE-LOCAL-INTERFACE
    /* 4780 */ ElementSpec {sub_elements: (7798, 7813), sub_element_ver: 6018, attributes: (115, 118), attributes_ver: 637, character_data: None, mode: ContentMode::Sequence, ref_info: (5863, 5873)}, // TIME-SYNCHRONIZATION-SLAVE-INTERFACE
    /* 4781 */ ElementSpec {sub_elements: (18229, 18231), sub_element_ver: 64, attributes: (131, 137), attributes_ver: 9517, character_data: Some(982), mode: ContentMode::Mixed, ref_info: (0, 0)}, // TIME-BASED-FDC-THRESHOLD-STORAGE-VALUE, TIME-FAILED-THRESHOLD, TIME-PASSED-THRESHOLD, TIME-VALUE-VALUE-VARIATION-POINT
    /* 4782 */ ElementSpec {sub_elements: (20483, 20484), sub_element_ver: 6, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // PLATFORM-TIME-BASES
    /* 4783 */ ElementSpec {sub_elements: (12762, 12774), sub_element_ver: 3664, attributes: (115, 118), attributes_ver: 463, character_data: None, mode: ContentMode::Sequence, ref_info: (5873, 5874)}, // TIMING-CLOCK-SYNC-ACCURACY
    /* 4784 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (3559, 3565), attributes_ver: 3664, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // CLOCK-REFERENCE-REF, LOWER-REF, UPPER-REF
    /* 4785 */ ElementSpec {sub_elements: (16514, 16524), sub_element_ver: 3276, attributes: (115, 118), attributes_ver: 192, character_data: None, mode: ContentMode::Sequence, ref_info: (5874, 5875)}, // TIMING-CONDITION
    /* 4786 */ ElementSpec {sub_elements: (18529, 18534), sub_element_ver: 192, attributes: (0, 2), attributes_ver: 134, character_data: Some(982), mode: ContentMode::Mixed, ref_info: (0, 0)}, // TIMING-CONDITION-FORMULA
    /* 4787 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (3505, 3511), attributes_ver: 9325, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // TIMING-ARGUMENT-REF
    /* 4788 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (259, 265), attributes_ver: 9325, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // TIMING-EVENT-REF
    /* 4789 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (3565, 3571), attributes_ver: 9325, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // MODE-REF, TIMING-MODE-REF
    /* 4790 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (3511, 3517), attributes_ver: 9325, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // TIMING-VARIABLE-REF
    /* 4791 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (3571, 3577), attributes_ver: 9325, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // TIMING-CONDITION-REF
    /* 4792 */ ElementSpec {sub_elements: (10930, 10943), sub_element_ver: 7268, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (5875, 5877)}, // TIMING-DESCRIPTION-EVENT-CHAIN
    /* 4793 */ ElementSpec {sub_elements: (21206, 21207), sub_element_ver: 7, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // SEGMENT-REFS
    /* 4794 */ ElementSpec {sub_elements: (7813, 7828), sub_element_ver: 6033, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (5877, 5883)}, // TIMING-EVENT
    /* 4795 */ ElementSpec {sub_elements: (14795, 14806), sub_element_ver: 3276, attributes: (115, 118), attributes_ver: 192, character_data: None, mode: ContentMode::Sequence, ref_info: (5883, 5884)}, // TIMING-RESOURCE
    /* 4796 */ ElementSpec {sub_elements: (21199, 21200), sub_element_ver: 21, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // TIMING-ARGUMENTS
    /* 4797 */ ElementSpec {sub_elements: (21201, 21202), sub_element_ver: 21, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // TIMING-VARIABLES
    /* 4798 */ ElementSpec {sub_elements: (21207, 21208), sub_element_ver: 6, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // TIMING-CLOCK-SYNC-ACCURACYS
    /* 4799 */ ElementSpec {sub_elements: (21208, 21209), sub_element_ver: 6, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // TIMING-CLOCKS
    /* 4800 */ ElementSpec {sub_elements: (21209, 21210), sub_element_ver: 21, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // TIMING-CONDITIONS
    /* 4801 */ ElementSpec {sub_elements: (2739, 2763), sub_element_ver: 2446, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // TIMING-DESCRIPTIONS
    /* 4802 */ ElementSpec {sub_elements: (12774, 12786), sub_element_ver: 7826, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // TIMING-GUARANTEES, TIMING-REQUIREMENTS
    /* 4803 */ ElementSpec {sub_elements: (16524, 16534), sub_element_ver: 3276, attributes: (115, 118), attributes_ver: 192, character_data: None, mode: ContentMode::Sequence, ref_info: (5884, 5885)}, // TIMING-MODE-INSTANCE
    /* 4804 */ ElementSpec {sub_elements: (20102, 20104), sub_element_ver: 134, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Choice, ref_info: (0, 0)}, // MODE-INSTANCE
    /* 4805 */ ElementSpec {sub_elements: (19490, 19493), sub_element_ver: 4960, attributes: (0, 2), attributes_ver: 75, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // TLS-CIPHER-SUITE
    /* 4806 */ ElementSpec {sub_elements: (21210, 21211), sub_element_ver: 75, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // JOB-REQUIREMENTS
    /* 4807 */ ElementSpec {sub_elements: (16534, 16544), sub_element_ver: 4093, attributes: (115, 118), attributes_ver: 81, character_data: None, mode: ContentMode::Sequence, ref_info: (5885, 5889)}, // TLS-CONNECTION-GROUP
    /* 4808 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (385, 391), attributes_ver: 4093, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // TLS-CONNECTION-REF
    /* 4809 */ ElementSpec {sub_elements: (21211, 21212), sub_element_ver: 20, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // TLS-CONNECTION-REFS
    /* 4810 */ ElementSpec {sub_elements: (2925, 2948), sub_element_ver: 2632, attributes: (115, 118), attributes_ver: 9, character_data: None, mode: ContentMode::Sequence, ref_info: (5889, 5890)}, // TLS-CRYPTO-CIPHER-SUITE
    /* 4811 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (1147, 1153), attributes_ver: 1187, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // CERTIFICATE-REF, NEXT-HIGHER-CERTIFICATE-REF
    /* 4812 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (3577, 3583), attributes_ver: 4093, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // ELLIPTIC-CURVE-REF
    /* 4813 */ ElementSpec {sub_elements: (21212, 21213), sub_element_ver: 20, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // ELLIPTIC-CURVE-REFS
    /* 4814 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2383, 2389), attributes_ver: 4093, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // KEY-EXCHANGE-AUTHENTICATION-REF
    /* 4815 */ ElementSpec {sub_elements: (21213, 21214), sub_element_ver: 20, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // KEY-EXCHANGE-AUTHENTICATION-REFS
    /* 4816 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2479, 2485), attributes_ver: 1187, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // CRYPTO-SERVICE-KEY-REF, PRE-SHARED-KEY-REF
    /* 4817 */ ElementSpec {sub_elements: (17418, 17427), sub_element_ver: 4093, attributes: (115, 118), attributes_ver: 81, character_data: None, mode: ContentMode::Sequence, ref_info: (5890, 5891)}, // PROPS
    /* 4818 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (1147, 1153), attributes_ver: 4093, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // REMOTE-CERTIFICATE-REF
    /* 4819 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (3583, 3589), attributes_ver: 4093, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // SIGNATURE-SCHEME-REF
    /* 4820 */ ElementSpec {sub_elements: (21214, 21215), sub_element_ver: 20, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // SIGNATURE-SCHEME-REFS
    /* 4821 */ ElementSpec {sub_elements: (10943, 10956), sub_element_ver: 7281, attributes: (115, 118), attributes_ver: 9, character_data: None, mode: ContentMode::Sequence, ref_info: (5891, 5893)}, // TLS-CRYPTO-SERVICE-MAPPING
    /* 4822 */ ElementSpec {sub_elements: (16544, 16554), sub_element_ver: 3376, attributes: (115, 118), attributes_ver: 1153, character_data: None, mode: ContentMode::Sequence, ref_info: (5893, 5895)}, // TLS-DEPLOYMENT
    /* 4823 */ ElementSpec {sub_elements: (21215, 21216), sub_element_ver: 8, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // PSK-IDENTITY-TO-KEY-SLOT-MAPPINGS
    /* 4824 */ ElementSpec {sub_elements: (21216, 21217), sub_element_ver: 8, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // TLS-JOB-MAPPINGS
    /* 4825 */ ElementSpec {sub_elements: (9066, 9080), sub_element_ver: 1927, attributes: (115, 118), attributes_ver: 77, character_data: None, mode: ContentMode::Sequence, ref_info: (5895, 5902)}, // TLS-IAM-REMOTE-SUBJECT
    /* 4826 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (3589, 3595), attributes_ver: 500, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // ACCEPTED-CRYPTO-CIPHER-SUITE-WITH-PSK-REF
    /* 4827 */ ElementSpec {sub_elements: (21217, 21218), sub_element_ver: 19, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // ACCEPTED-CRYPTO-CIPHER-SUITE-WITH-PSK-REFS
    /* 4828 */ ElementSpec {sub_elements: (21218, 21219), sub_element_ver: 19, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // ACCEPTED-REMOTE-CERTIFICATE-REFS
    /* 4829 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2023, 2029), attributes_ver: 500, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // IAM-RELEVANT-TLS-SECURE-COM-PROPS-REF
    /* 4830 */ ElementSpec {sub_elements: (21219, 21220), sub_element_ver: 19, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // IAM-RELEVANT-TLS-SECURE-COM-PROPS-REFS
    /* 4831 */ ElementSpec {sub_elements: (16554, 16564), sub_element_ver: 8555, attributes: (115, 118), attributes_ver: 1153, character_data: None, mode: ContentMode::Sequence, ref_info: (5902, 5903)}, // TLS-JOB-MAPPING
    /* 4832 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (3595, 3601), attributes_ver: 9337, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // CRYPTO-JOB-REF, JOB-REF
    /* 4833 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (3601, 3607), attributes_ver: 9337, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // TLS-JOB-REQUIREMENT-REF
    /* 4834 */ ElementSpec {sub_elements: (17427, 17436), sub_element_ver: 7430, attributes: (115, 118), attributes_ver: 4960, character_data: None, mode: ContentMode::Sequence, ref_info: (5903, 5904)}, // TLS-JOB-REQUIREMENT
    /* 4835 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 75, character_data: Some(935), mode: ContentMode::Characters, ref_info: (0, 0)}, // TLS-JOB-SEMANTIC
    /* 4836 */ ElementSpec {sub_elements: (19493, 19496), sub_element_ver: 909, attributes: (0, 2), attributes_ver: 64, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // PSK-IDENTITY
    /* 4837 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2479, 2485), attributes_ver: 1642, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // PRE-SHARED-KEY-REF
    /* 4838 */ ElementSpec {sub_elements: (12786, 12798), sub_element_ver: 7838, attributes: (115, 118), attributes_ver: 1153, character_data: None, mode: ContentMode::Sequence, ref_info: (5904, 5911)}, // TLS-SECURE-COM-PROPS
    /* 4839 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2383, 2389), attributes_ver: 1187, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // AUTHENTICATION-REF, ENCRYPTION-REF, KEY-EXCHANGE-REF
    /* 4840 */ ElementSpec {sub_elements: (21220, 21221), sub_element_ver: 9, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // KEY-EXCHANGE-REFS
    /* 4841 */ ElementSpec {sub_elements: (21221, 21222), sub_element_ver: 75, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // SUPPORTED-CIPHER-SUITES
    /* 4842 */ ElementSpec {sub_elements: (21222, 21223), sub_element_ver: 9, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // TLS-CIPHER-SUITES
    /* 4843 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 9, character_data: Some(937), mode: ContentMode::Characters, ref_info: (0, 0)}, // VERSION
    /* 4844 */ ElementSpec {sub_elements: (17664, 17672), sub_element_ver: 8818, attributes: (0, 2), attributes_ver: 115, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // TLV-DATA-ID-DEFINITION
    /* 4845 */ ElementSpec {sub_elements: (16564, 16574), sub_element_ver: 1642, attributes: (115, 118), attributes_ver: 909, character_data: None, mode: ContentMode::Sequence, ref_info: (5911, 5917)}, // TLV-DATA-ID-DEFINITION-SET
    /* 4846 */ ElementSpec {sub_elements: (21093, 21094), sub_element_ver: 64, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // TLV-DATA-ID-DEFINITIONS
    /* 4847 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (397, 403), attributes_ver: 2229, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // TLV-ARGUMENT-REF
    /* 4848 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (433, 439), attributes_ver: 1187, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // TLV-IMPLEMENTATION-DATA-TYPE-ELEMENT-REF
    /* 4849 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (415, 421), attributes_ver: 1187, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // TLV-RECORD-ELEMENT-REF
    /* 4850 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (3607, 3613), attributes_ver: 9433, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // TLV-SUB-ELEMENT-REF
    /* 4851 */ ElementSpec {sub_elements: (16574, 16584), sub_element_ver: 8565, attributes: (115, 123), attributes_ver: 814, character_data: None, mode: ContentMode::Sequence, ref_info: (5917, 5918)}, // TOPIC-1
    /* 4852 */ ElementSpec {sub_elements: (7544, 7557), sub_element_ver: 5899, attributes: (0, 2), attributes_ver: 22, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // MSR-QUERY-RESULT-P-1
    /* 4853 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 22, character_data: Some(939), mode: ContentMode::Characters, ref_info: (0, 0)}, // ACK-TYPE
    /* 4854 */ ElementSpec {sub_elements: (16584, 16594), sub_element_ver: 841, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (5918, 5919)}, // TP-ADDRESS
    /* 4855 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2233, 2239), attributes_ver: 9361, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // COMMUNICATION-CLUSTER-REF
    /* 4856 */ ElementSpec {sub_elements: (777, 779), sub_element_ver: 1317, attributes: (0, 2), attributes_ver: 120, character_data: None, mode: ContentMode::Sequence, ref_info: (5919, 5920)}, // IDENT
    /* 4857 */ ElementSpec {sub_elements: (19496, 19499), sub_element_ver: 617, attributes: (0, 2), attributes_ver: 617, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // TP-ECU
    /* 4858 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (3815, 3819), attributes_ver: 1026, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // ECU-INSTANCE-REF
    /* 4859 */ ElementSpec {sub_elements: (20104, 20106), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 0, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // TCP-TP-PORT, UDP-TP-PORT
    /* 4860 */ ElementSpec {sub_elements: (20106, 20108), sub_element_ver: 123, attributes: (0, 2), attributes_ver: 123, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // TRACE-SWITCH-CONFIGURATION
    /* 4861 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (1783, 1789), attributes_ver: 230, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // TRACE-MESSAGE-REF
    /* 4862 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 123, character_data: Some(942), mode: ContentMode::Characters, ref_info: (0, 0)}, // TRACE-SWITCH
    /* 4863 */ ElementSpec {sub_elements: (16594, 16604), sub_element_ver: 1642, attributes: (115, 122), attributes_ver: 1642, character_data: None, mode: ContentMode::Sequence, ref_info: (5920, 5922)}, // TRACEABLE-TABLE
    /* 4864 */ ElementSpec {sub_elements: (14806, 14817), sub_element_ver: 8282, attributes: (115, 122), attributes_ver: 9312, character_data: None, mode: ContentMode::Sequence, ref_info: (5922, 5925)}, // TRACE
    /* 4865 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (343, 349), attributes_ver: 9391, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // TRACE-REF
    /* 4866 */ ElementSpec {sub_elements: (21223, 21224), sub_element_ver: 519, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // TRACE-REFS
    /* 4867 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 22, character_data: Some(945), mode: ContentMode::Characters, ref_info: (0, 0)}, // TRANSFER-PROPERTY
    /* 4868 */ ElementSpec {sub_elements: (21224, 21225), sub_element_ver: 21, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // DATA-PROTOTYPE-TRANSFORMATION-PROPSS
    /* 4869 */ ElementSpec {sub_elements: (3364, 3372), sub_element_ver: 3027, attributes: (115, 118), attributes_ver: 12, character_data: None, mode: ContentMode::Sequence, ref_info: (5925, 5926)}, // IDENT
    /* 4870 */ ElementSpec {sub_elements: (16604, 16614), sub_element_ver: 3276, attributes: (115, 118), attributes_ver: 192, character_data: None, mode: ContentMode::Sequence, ref_info: (5926, 5932)}, // TRANSFORMATION-PROPS-SET
    /* 4871 */ ElementSpec {sub_elements: (19499, 19502), sub_element_ver: 9229, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // TRANSFORMATION-PROPSS
    /* 4872 */ ElementSpec {sub_elements: (4915, 4933), sub_element_ver: 4345, attributes: (115, 118), attributes_ver: 1153, character_data: None, mode: ContentMode::Sequence, ref_info: (5932, 5938)}, // TRANSFORMATION-PROPS-TO-SERVICE-INTERFACE-ELEMENT-MAPPING
    /* 4873 */ ElementSpec {sub_elements: (21225, 21226), sub_element_ver: 8, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // EVENT-REFS
    /* 4874 */ ElementSpec {sub_elements: (21226, 21227), sub_element_ver: 8, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // FIELD-REFS
    /* 4875 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (673, 679), attributes_ver: 230, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // METHOD-CALL-REF, METHOD-RETURN-REF
    /* 4876 */ ElementSpec {sub_elements: (21227, 21228), sub_element_ver: 16, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // METHOD-CALL-REFS
    /* 4877 */ ElementSpec {sub_elements: (21228, 21229), sub_element_ver: 8, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // METHOD-REFS
    /* 4878 */ ElementSpec {sub_elements: (21229, 21230), sub_element_ver: 16, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // METHOD-RETURN-REFS
    /* 4879 */ ElementSpec {sub_elements: (16614, 16624), sub_element_ver: 5868, attributes: (115, 118), attributes_ver: 5288, character_data: None, mode: ContentMode::Sequence, ref_info: (5938, 5942)}, // TRANSFORMATION-PROPS-TO-SERVICE-INTERFACE-ELEMENT-MAPPING-SET
    /* 4880 */ ElementSpec {sub_elements: (648, 649), sub_element_ver: 92, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // MAPPINGS
    /* 4881 */ ElementSpec {sub_elements: (21230, 21231), sub_element_ver: 64, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // TLV-DATA-ID-DEFINITION-REFS
    /* 4882 */ ElementSpec {sub_elements: (21093, 21094), sub_element_ver: 1772, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // TLV-DATA-IDS
    /* 4883 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (1039, 1045), attributes_ver: 9355, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // TRANSFORMATION-PROPS-REF
    /* 4884 */ ElementSpec {sub_elements: (21231, 21232), sub_element_ver: 20, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // TRIGGER-REFS
    /* 4885 */ ElementSpec {sub_elements: (20108, 20110), sub_element_ver: 645, attributes: (0, 2), attributes_ver: 645, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // TRANSFORMATION-PROPS-TO-SERVICE-INTERFACE-MAPPING
    /* 4886 */ ElementSpec {sub_elements: (16624, 16634), sub_element_ver: 5336, attributes: (115, 118), attributes_ver: 5336, character_data: None, mode: ContentMode::Sequence, ref_info: (5942, 5946)}, // TRANSFORMATION-PROPS-TO-SERVICE-INTERFACE-MAPPING-SET
    /* 4887 */ ElementSpec {sub_elements: (21232, 21233), sub_element_ver: 568, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // TRANSFORMATION-PROPS-TO-SERVICE-INTERFACE-MAPPINGS
    /* 4888 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (3721, 3726), attributes_ver: 5336, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // TRANSFORMATION-PROPS-REF
    /* 4889 */ ElementSpec {sub_elements: (6492, 6508), sub_element_ver: 5432, attributes: (115, 118), attributes_ver: 140, character_data: None, mode: ContentMode::Sequence, ref_info: (5946, 5947)}, // TRANSFORMATION-TECHNOLOGY
    /* 4890 */ ElementSpec {sub_elements: (19502, 19505), sub_element_ver: 140, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // TRANSFORMATION-DESCRIPTIONS
    /* 4891 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 120, character_data: Some(950), mode: ContentMode::Characters, ref_info: (0, 0)}, // TRANSFORMER-CLASS
    /* 4892 */ ElementSpec {sub_elements: (7828, 7843), sub_element_ver: 6048, attributes: (115, 118), attributes_ver: 140, character_data: None, mode: ContentMode::Sequence, ref_info: (5947, 5953)}, // TRANSFORMER-HARD-ERROR-EVENT
    /* 4893 */ ElementSpec {sub_elements: (14817, 14828), sub_element_ver: 3276, attributes: (115, 118), attributes_ver: 192, character_data: None, mode: ContentMode::Sequence, ref_info: (5953, 5955)}, // TRANSIENT-FAULT
    /* 4894 */ ElementSpec {sub_elements: (21233, 21234), sub_element_ver: 21, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // POSSIBLE-ERROR-REACTIONS
    /* 4895 */ ElementSpec {sub_elements: (18959, 18963), sub_element_ver: 4049, attributes: (0, 2), attributes_ver: 77, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // TRANSMISSION-PROPS
    /* 4896 */ ElementSpec {sub_elements: (19616, 19618), sub_element_ver: 12, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // ON-CHANGE-DATA-PROTOTYPES
    /* 4897 */ ElementSpec {sub_elements: (20110, 20112), sub_element_ver: 22, attributes: (0, 2), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // TRANSMISSION-MODE-CONDITION
    /* 4898 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (3613, 3619), attributes_ver: 9361, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // I-SIGNAL-IN-I-PDU-REF
    /* 4899 */ ElementSpec {sub_elements: (18534, 18539), sub_element_ver: 948, attributes: (0, 2), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // TRANSMISSION-MODE-DECLARATION
    /* 4900 */ ElementSpec {sub_elements: (21234, 21235), sub_element_ver: 386, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // MODE-DRIVEN-FALSE-CONDITIONS, MODE-DRIVEN-TRUE-CONDITIONS
    /* 4901 */ ElementSpec {sub_elements: (21235, 21236), sub_element_ver: 7, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // TRANSMISSION-MODE-CONDITIONS
    /* 4902 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 77, character_data: Some(951), mode: ContentMode::Characters, ref_info: (0, 0)}, // TRANSMISSION-MODE
    /* 4903 */ ElementSpec {sub_elements: (20112, 20114), sub_element_ver: 22, attributes: (0, 2), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // TRANSMISSION-MODE-FALSE-TIMING, TRANSMISSION-MODE-TRUE-TIMING
    /* 4904 */ ElementSpec {sub_elements: (16634, 16644), sub_element_ver: 5336, attributes: (115, 118), attributes_ver: 5336, character_data: None, mode: ContentMode::Sequence, ref_info: (5955, 5959)}, // TRANSPORT-LAYER-INDEPENDENT-ID-COLLECTION-SET
    /* 4905 */ ElementSpec {sub_elements: (21236, 21237), sub_element_ver: 568, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // INSTANCE-IDS
    /* 4906 */ ElementSpec {sub_elements: (14828, 14839), sub_element_ver: 5336, attributes: (115, 118), attributes_ver: 5336, character_data: None, mode: ContentMode::Sequence, ref_info: (5959, 5962)}, // TRANSPORT-LAYER-INDEPENDENT-INSTANCE-ID
    /* 4907 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (3726, 3731), attributes_ver: 5336, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // SERVICE-INTERFACE-REF, SERVICE-INTERFACE-TREF
    /* 4908 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 531, character_data: Some(953), mode: ContentMode::Characters, ref_info: (0, 0)}, // TRANSPORT-PROTOCOL
    /* 4909 */ ElementSpec {sub_elements: (21237, 21238), sub_element_ver: 568, attributes: (0, 2), attributes_ver: 645, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // EVENT-MULTICAST-UDP-PORT, TCP-PORT, UDP-PORT
    /* 4910 */ ElementSpec {sub_elements: (14839, 14850), sub_element_ver: 7255, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (5962, 5966)}, // TRIGGER
    /* 4911 */ ElementSpec {sub_elements: (21238, 21239), sub_element_ver: 354, attributes: (0, 2), attributes_ver: 1612, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // TRIGGER-I-PDU-SEND-CONDITION
    /* 4912 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2089, 2095), attributes_ver: 9385, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // MODE-DECLARATION-REF
    /* 4913 */ ElementSpec {sub_elements: (21239, 21240), sub_element_ver: 354, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // MODE-DECLARATION-REFS
    /* 4914 */ ElementSpec {sub_elements: (18963, 18967), sub_element_ver: 81, attributes: (0, 2), attributes_ver: 81, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // TRIGGER-IREF
    /* 4915 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (247, 253), attributes_ver: 4093, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // CONTEXT-R-PORT-PROTOTYPE-REF
    /* 4916 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (1033, 1039), attributes_ver: 4093, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // CONTEXT-ROOT-SW-COMPONENT-PROTOTYPE-REF
    /* 4917 */ ElementSpec {sub_elements: (18967, 18971), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 0, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // TRIGGER-IREF
    /* 4918 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (811, 817), attributes_ver: 9319, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // CONTEXT-ATOMIC-COMPONENT-REF, CONTEXT-COMPONENT-PROTOTYPE-REF, CONTEXT-COMPONENT-REF, CONTEXT-SW-COMPONENT-PROTOTYPE-REF
    /* 4919 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (805, 811), attributes_ver: 9319, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // CONTEXT-COMPOSITION-REF, CONTEXT-ROOT-COMPOSITION-REF
    /* 4920 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (421, 427), attributes_ver: 9319, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // CONTEXT-PORT-PROTOTYPE-REF, CONTEXT-PORT-REF
    /* 4921 */ ElementSpec {sub_elements: (7843, 7858), sub_element_ver: 4788, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (5966, 5975)}, // TRIGGER-INTERFACE
    /* 4922 */ ElementSpec {sub_elements: (12798, 12810), sub_element_ver: 7646, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (5975, 5979)}, // TRIGGER-INTERFACE-MAPPING
    /* 4923 */ ElementSpec {sub_elements: (21240, 21241), sub_element_ver: 7, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // TRIGGER-MAPPINGS
    /* 4924 */ ElementSpec {sub_elements: (21032, 21033), sub_element_ver: 7, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // RELEASED-TRIGGERS, REQUIRED-TRIGGERS, TRIGGERS
    /* 4925 */ ElementSpec {sub_elements: (20114, 20116), sub_element_ver: 22, attributes: (0, 2), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // TRIGGER-MAPPING
    /* 4926 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (607, 613), attributes_ver: 9361, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // BSW-TRIGGER-REF, FIRST-TRIGGER-REF, MASTERED-TRIGGER-REF, SECOND-TRIGGER-REF, TARGET-TRIGGER-REF, TRIGGER-REF
    /* 4927 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 22, character_data: Some(955), mode: ContentMode::Characters, ref_info: (0, 0)}, // TRIGGER-MODE
    /* 4928 */ ElementSpec {sub_elements: (18539, 18544), sub_element_ver: 799, attributes: (0, 2), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // TRIGGER-PORT-ANNOTATION
    /* 4929 */ ElementSpec {sub_elements: (20116, 20118), sub_element_ver: 22, attributes: (0, 2), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // TRIGGER-REF-CONDITIONAL
    /* 4930 */ ElementSpec {sub_elements: (17672, 17680), sub_element_ver: 2767, attributes: (0, 2), attributes_ver: 0, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // TRIGGER-TO-SIGNAL-MAPPING
    /* 4931 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (1435, 1441), attributes_ver: 9319, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // CALL-SIGNAL-REF, RETURN-SIGNAL-REF, SYSTEM-SIGNAL-REF
    /* 4932 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 64, character_data: Some(956), mode: ContentMode::Characters, ref_info: (0, 0)}, // TRUSTED-PLATFORM-EXECUTABLE-LAUNCH-BEHAVIOR
    /* 4933 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (3819, 3823), attributes_ver: 407, character_data: Some(982), mode: ContentMode::Characters, ref_info: (0, 0)}, // TT
    /* 4934 */ ElementSpec {sub_elements: (19505, 19508), sub_element_ver: 22, attributes: (0, 2), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // TTCAN-ABSOLUTELY-SCHEDULED-TIMING
    /* 4935 */ ElementSpec {sub_elements: (20118, 20120), sub_element_ver: 22, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Choice, ref_info: (0, 0)}, // COMMUNICATION-CYCLE
    /* 4936 */ ElementSpec {sub_elements: (16644, 16654), sub_element_ver: 884, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (5979, 5988)}, // TTCAN-CLUSTER
    /* 4937 */ ElementSpec {sub_elements: (7858, 7873), sub_element_ver: 6063, attributes: (0, 2), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // TTCAN-CLUSTER-CONDITIONAL
    /* 4938 */ ElementSpec {sub_elements: (21241, 21242), sub_element_ver: 7, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // TTCAN-CLUSTER-VARIANTS
    /* 4939 */ ElementSpec {sub_elements: (1836, 1851), sub_element_ver: 1701, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (5988, 5991)}, // TTCAN-COMMUNICATION-CONNECTOR
    /* 4940 */ ElementSpec {sub_elements: (16654, 16664), sub_element_ver: 8335, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (5991, 5994)}, // TTCAN-COMMUNICATION-CONTROLLER
    /* 4941 */ ElementSpec {sub_elements: (14850, 14861), sub_element_ver: 1118, attributes: (0, 2), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // TTCAN-COMMUNICATION-CONTROLLER-CONDITIONAL
    /* 4942 */ ElementSpec {sub_elements: (21242, 21243), sub_element_ver: 7, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // TTCAN-COMMUNICATION-CONTROLLER-VARIANTS
    /* 4943 */ ElementSpec {sub_elements: (4627, 4642), sub_element_ver: 4129, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (5994, 5997)}, // TTCAN-PHYSICAL-CHANNEL
    /* 4944 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 22, character_data: Some(958), mode: ContentMode::Characters, ref_info: (0, 0)}, // TRIGGER
    /* 4945 */ ElementSpec {sub_elements: (16664, 16674), sub_element_ver: 1642, attributes: (115, 118), attributes_ver: 909, character_data: None, mode: ContentMode::Sequence, ref_info: (5997, 5998)}, // UCM-DESCRIPTION
    /* 4946 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (3619, 3625), attributes_ver: 1642, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // UCM-MODULE-INSTANTIATION-REF
    /* 4947 */ ElementSpec {sub_elements: (7873, 7888), sub_element_ver: 6078, attributes: (115, 118), attributes_ver: 463, character_data: None, mode: ContentMode::Sequence, ref_info: (5998, 6005)}, // UCM-MASTER-MODULE-INSTANTIATION
    /* 4948 */ ElementSpec {sub_elements: (14861, 14872), sub_element_ver: 8293, attributes: (115, 118), attributes_ver: 8293, character_data: None, mode: ContentMode::Sequence, ref_info: (6005, 6008)}, // UCM-MODULE-INSTANTIATION
    /* 4949 */ ElementSpec {sub_elements: (16674, 16684), sub_element_ver: 3664, attributes: (115, 118), attributes_ver: 463, character_data: None, mode: ContentMode::Sequence, ref_info: (6008, 6009)}, // BLOCK-INCONSISTENT, PREPARE-ROLLBACK, PREPARE-UPDATE, SERVICE-BUSY, UCM-NOT-AVAILABLE-ON-THE-NETWORK, UPDATE-SESSION-REJECTED, VERIFY-UPDATE
    /* 4950 */ ElementSpec {sub_elements: (16684, 16694), sub_element_ver: 1642, attributes: (115, 118), attributes_ver: 909, character_data: None, mode: ContentMode::Sequence, ref_info: (6009, 6010)}, // UCM-STEP
    /* 4951 */ ElementSpec {sub_elements: (21243, 21244), sub_element_ver: 64, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // SOFTWARE-PACKAGE-STEPS
    /* 4952 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (3625, 3631), attributes_ver: 1642, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // UCM-MASTER-FALLBACK-REF, UCM-REF
    /* 4953 */ ElementSpec {sub_elements: (7888, 7903), sub_element_ver: 6093, attributes: (115, 118), attributes_ver: 463, character_data: None, mode: ContentMode::Sequence, ref_info: (6010, 6017)}, // UCM-SUBORDINATE-MODULE-INSTANTIATION
    /* 4954 */ ElementSpec {sub_elements: (14872, 14883), sub_element_ver: 3664, attributes: (115, 118), attributes_ver: 463, character_data: None, mode: ContentMode::Sequence, ref_info: (6017, 6024)}, // UCM-TO-TIME-BASE-RESOURCE-MAPPING
    /* 4955 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2347, 2353), attributes_ver: 3664, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // TIME-BASE-RESOURCE-REF
    /* 4956 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (3619, 3625), attributes_ver: 3664, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // UCM-REF
    /* 4957 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 134, character_data: Some(961), mode: ContentMode::Characters, ref_info: (0, 0)}, // UDP-CHECKSUM-HANDLING
    /* 4958 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 115, character_data: Some(962), mode: ContentMode::Characters, ref_info: (0, 0)}, // UDP-COLLECTION-TRIGGER
    /* 4959 */ ElementSpec {sub_elements: (903, 944), sub_element_ver: 967, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (6024, 6026)}, // UDP-NM-CLUSTER
    /* 4960 */ ElementSpec {sub_elements: (18971, 18975), sub_element_ver: 9064, attributes: (0, 2), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // UDP-NM-CLUSTER-COUPLING
    /* 4961 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2011, 2017), attributes_ver: 9361, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // COUPLED-CLUSTER-REF
    /* 4962 */ ElementSpec {sub_elements: (21244, 21245), sub_element_ver: 7, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // COUPLED-CLUSTER-REFS
    /* 4963 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (919, 925), attributes_ver: 9325, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // V-LAN-REF, VLAN-REF
    /* 4964 */ ElementSpec {sub_elements: (20120, 20122), sub_element_ver: 22, attributes: (0, 2), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // UDP-NM-ECU
    /* 4965 */ ElementSpec {sub_elements: (18975, 18979), sub_element_ver: 1651, attributes: (0, 2), attributes_ver: 64, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // NETWORK-CONFIGURATION
    /* 4966 */ ElementSpec {sub_elements: (2763, 2787), sub_element_ver: 2470, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (6026, 6028)}, // UDP-NM-NODE
    /* 4967 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2005, 2011), attributes_ver: 2229, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // COMMUNICATION-CONNECTOR-REF
    /* 4968 */ ElementSpec {sub_elements: (21245, 21246), sub_element_ver: 19, attributes: (0, 2), attributes_ver: 77, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // UDP-PROPS
    /* 4969 */ ElementSpec {sub_elements: (17648, 17653), sub_element_ver: 3664, attributes: (0, 2), attributes_ver: 301, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // UDP-RULE
    /* 4970 */ ElementSpec {sub_elements: (21246, 21247), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 0, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // UDP-TP
    /* 4971 */ ElementSpec {sub_elements: (17436, 17445), sub_element_ver: 8729, attributes: (0, 2), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // UNASSIGN-FRAME-ID
    /* 4972 */ ElementSpec {sub_elements: (7903, 7918), sub_element_ver: 6108, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (6028, 6032)}, // UNIT
    /* 4973 */ ElementSpec {sub_elements: (16694, 16704), sub_element_ver: 6531, attributes: (115, 118), attributes_ver: 871, character_data: None, mode: ContentMode::Sequence, ref_info: (6032, 6036)}, // UNIT-GROUP
    /* 4974 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (829, 835), attributes_ver: 9391, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // UNIT-REF
    /* 4975 */ ElementSpec {sub_elements: (21247, 21248), sub_element_ver: 519, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // UNIT-REFS
    /* 4976 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2863, 2869), attributes_ver: 9361, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // PHYSICAL-DIMENSION-REF
    /* 4977 */ ElementSpec {sub_elements: (11320, 11321), sub_element_ver: 21, attributes: (0, 2), attributes_ver: 134, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // UNRESOLVED-REFERENCE-RESTRICTION
    /* 4978 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 0, character_data: Some(982), mode: ContentMode::Characters, ref_info: (0, 0)}, // CONTENT-URI, INTENDED-FILENAME, LDAP-URL, LOG-TRACE-FILE-PATH, PATH, PERSISTENCY-CENTRAL-STORAGE-URI, REPOSITORY, URI
    /* 4979 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (3852, 3855), attributes_ver: 22, character_data: Some(982), mode: ContentMode::Characters, ref_info: (0, 0)}, // URL
    /* 4980 */ ElementSpec {sub_elements: (16704, 16714), sub_element_ver: 2765, attributes: (115, 118), attributes_ver: 0, character_data: None, mode: ContentMode::Sequence, ref_info: (6036, 6044)}, // USER-DEFINED-CLUSTER
    /* 4981 */ ElementSpec {sub_elements: (18207, 18213), sub_element_ver: 691, attributes: (0, 2), attributes_ver: 0, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // USER-DEFINED-CLUSTER-CONDITIONAL
    /* 4982 */ ElementSpec {sub_elements: (21248, 21249), sub_element_ver: 0, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // USER-DEFINED-CLUSTER-VARIANTS
    /* 4983 */ ElementSpec {sub_elements: (1836, 1851), sub_element_ver: 6123, attributes: (115, 118), attributes_ver: 0, character_data: None, mode: ContentMode::Sequence, ref_info: (6044, 6046)}, // USER-DEFINED-COMMUNICATION-CONNECTOR
    /* 4984 */ ElementSpec {sub_elements: (16714, 16724), sub_element_ver: 8575, attributes: (115, 118), attributes_ver: 0, character_data: None, mode: ContentMode::Sequence, ref_info: (6046, 6048)}, // USER-DEFINED-COMMUNICATION-CONTROLLER
    /* 4985 */ ElementSpec {sub_elements: (20122, 20124), sub_element_ver: 72, attributes: (0, 2), attributes_ver: 0, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // USER-DEFINED-COMMUNICATION-CONTROLLER-CONDITIONAL
    /* 4986 */ ElementSpec {sub_elements: (21249, 21250), sub_element_ver: 0, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // USER-DEFINED-COMMUNICATION-CONTROLLER-VARIANTS
    /* 4987 */ ElementSpec {sub_elements: (7273, 7284), sub_element_ver: 2034, attributes: (115, 118), attributes_ver: 140, character_data: None, mode: ContentMode::Sequence, ref_info: (6048, 6055)}, // USER-DEFINED-ETHERNET-FRAME
    /* 4988 */ ElementSpec {sub_elements: (12810, 12822), sub_element_ver: 7850, attributes: (115, 118), attributes_ver: 1531, character_data: None, mode: ContentMode::Sequence, ref_info: (6055, 6057)}, // NOTIFIER, USER-DEFINED-EVENT-DEPLOYMENT
    /* 4989 */ ElementSpec {sub_elements: (11118, 11130), sub_element_ver: 3027, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Choice, ref_info: (0, 0)}, // EVENT-RECEPTION-DEFAULT-VALUE
    /* 4990 */ ElementSpec {sub_elements: (10956, 10969), sub_element_ver: 7294, attributes: (115, 118), attributes_ver: 1531, character_data: None, mode: ContentMode::Sequence, ref_info: (6057, 6059)}, // USER-DEFINED-FIELD-DEPLOYMENT
    /* 4991 */ ElementSpec {sub_elements: (5205, 5219), sub_element_ver: 6139, attributes: (115, 118), attributes_ver: 192, character_data: None, mode: ContentMode::Sequence, ref_info: (6059, 6061)}, // USER-DEFINED-GLOBAL-TIME-MASTER
    /* 4992 */ ElementSpec {sub_elements: (5222, 5237), sub_element_ver: 6138, attributes: (115, 118), attributes_ver: 192, character_data: None, mode: ContentMode::Sequence, ref_info: (6061, 6063)}, // USER-DEFINED-GLOBAL-TIME-SLAVE
    /* 4993 */ ElementSpec {sub_elements: (9080, 9094), sub_element_ver: 6615, attributes: (115, 118), attributes_ver: 776, character_data: None, mode: ContentMode::Sequence, ref_info: (6063, 6072)}, // USER-DEFINED-I-PDU
    /* 4994 */ ElementSpec {sub_elements: (3839, 3849), sub_element_ver: 7294, attributes: (115, 118), attributes_ver: 1531, character_data: None, mode: ContentMode::Sequence, ref_info: (6072, 6074)}, // GET, SET, USER-DEFINED-METHOD-DEPLOYMENT
    /* 4995 */ ElementSpec {sub_elements: (10969, 10982), sub_element_ver: 7307, attributes: (115, 118), attributes_ver: 776, character_data: None, mode: ContentMode::Sequence, ref_info: (6074, 6082)}, // USER-DEFINED-PDU
    /* 4996 */ ElementSpec {sub_elements: (9094, 9108), sub_element_ver: 6629, attributes: (115, 118), attributes_ver: 0, character_data: None, mode: ContentMode::Sequence, ref_info: (6082, 6084)}, // USER-DEFINED-PHYSICAL-CHANNEL
    /* 4997 */ ElementSpec {sub_elements: (1526, 1543), sub_element_ver: 1531, attributes: (115, 118), attributes_ver: 1531, character_data: None, mode: ContentMode::Sequence, ref_info: (6084, 6091)}, // USER-DEFINED-SERVICE-INSTANCE-TO-MACHINE-MAPPING
    /* 4998 */ ElementSpec {sub_elements: (2992, 3005), sub_element_ver: 2941, attributes: (115, 118), attributes_ver: 1531, character_data: None, mode: ContentMode::Sequence, ref_info: (6091, 6098)}, // USER-DEFINED-SERVICE-INTERFACE-DEPLOYMENT
    /* 4999 */ ElementSpec {sub_elements: (1808, 1812), sub_element_ver: 140, attributes: (0, 2), attributes_ver: 120, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // USER-DEFINED-TRANSFORMATION-COM-SPEC-PROPS
    /* 5000 */ ElementSpec {sub_elements: (1808, 1813), sub_element_ver: 140, attributes: (0, 2), attributes_ver: 120, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // USER-DEFINED-TRANSFORMATION-DESCRIPTION
    /* 5001 */ ElementSpec {sub_elements: (18544, 18549), sub_element_ver: 140, attributes: (0, 2), attributes_ver: 120, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // USER-DEFINED-TRANSFORMATION-I-SIGNAL-PROPS
    /* 5002 */ ElementSpec {sub_elements: (18549, 18554), sub_element_ver: 8375, attributes: (0, 2), attributes_ver: 120, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // USER-DEFINED-TRANSFORMATION-I-SIGNAL-PROPS-CONDITIONAL
    /* 5003 */ ElementSpec {sub_elements: (21250, 21251), sub_element_ver: 43, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // USER-DEFINED-TRANSFORMATION-I-SIGNAL-PROPS-VARIANTS
    /* 5004 */ ElementSpec {sub_elements: (777, 785), sub_element_ver: 1531, attributes: (115, 118), attributes_ver: 1531, character_data: None, mode: ContentMode::Sequence, ref_info: (6098, 6100)}, // USER-DEFINED-TRANSFORMATION-PROPS
    /* 5005 */ ElementSpec {sub_elements: (4126, 4134), sub_element_ver: 3664, attributes: (115, 118), attributes_ver: 463, character_data: None, mode: ContentMode::Sequence, ref_info: (6100, 6102)}, // V-2-X-DATA-MANAGER-NEEDS
    /* 5006 */ ElementSpec {sub_elements: (777, 785), sub_element_ver: 3276, attributes: (115, 118), attributes_ver: 192, character_data: None, mode: ContentMode::Sequence, ref_info: (6102, 6104)}, // V-2-X-FAC-USER-NEEDS
    /* 5007 */ ElementSpec {sub_elements: (777, 785), sub_element_ver: 3276, attributes: (115, 118), attributes_ver: 192, character_data: None, mode: ContentMode::Sequence, ref_info: (6104, 6106)}, // V-2-X-M-USER-NEEDS
    /* 5008 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 134, character_data: Some(968), mode: ContentMode::Characters, ref_info: (0, 0)}, // V-2-X-SUPPORTED
    /* 5009 */ ElementSpec {sub_elements: (20124, 20126), sub_element_ver: 7253, attributes: (0, 2), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // VG
    /* 5010 */ ElementSpec {sub_elements: (20126, 20128), sub_element_ver: 22, attributes: (0, 2), attributes_ver: 22, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // SW-ARRAYSIZE
    /* 5011 */ ElementSpec {sub_elements: (18213, 18219), sub_element_ver: 192, attributes: (0, 2), attributes_ver: 134, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // VALUE-RESTRICTION
    /* 5012 */ ElementSpec {sub_elements: (12822, 12834), sub_element_ver: 7862, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (6106, 6111)}, // REPLACE-WITH, VARIABLE-ACCESS
    /* 5013 */ ElementSpec {sub_elements: (19508, 19511), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 0, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // VARIABLE-ACCESS-IREF
    /* 5014 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 656, character_data: Some(971), mode: ContentMode::Characters, ref_info: (0, 0)}, // SCOPE
    /* 5015 */ ElementSpec {sub_elements: (12834, 12846), sub_element_ver: 7646, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (6111, 6115)}, // VARIABLE-AND-PARAMETER-INTERFACE-MAPPING
    /* 5016 */ ElementSpec {sub_elements: (12846, 12858), sub_element_ver: 1082, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (6115, 6120)}, // BULK-NV-BLOCK, RAM-BLOCK, VARIABLE-DATA-PROTOTYPE
    /* 5017 */ ElementSpec {sub_elements: (19511, 19514), sub_element_ver: 617, attributes: (0, 2), attributes_ver: 617, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // VARIABLE-DATA-PROTOTYPE-IREF
    /* 5018 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (3823, 3827), attributes_ver: 1026, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // TARGET-DATA-ELEMENT-REF
    /* 5019 */ ElementSpec {sub_elements: (18979, 18983), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 0, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // IMPLICIT-DATA-ACCESS-IREF
    /* 5020 */ ElementSpec {sub_elements: (18983, 18987), sub_element_ver: 29, attributes: (0, 2), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // DATA-ELEMENT-IREF, RECEIVER-IREF, SENDER-IREF, TRANSLATION-TARGET-IREF, VARIABLE-DATA-PROTOTYPE-IREF
    /* 5021 */ ElementSpec {sub_elements: (18987, 18991), sub_element_ver: 29, attributes: (0, 2), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // AUTOSAR-VARIABLE-IREF
    /* 5022 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (361, 367), attributes_ver: 9361, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // CONTEXT-DATA-PROTOTYPE-REF
    /* 5023 */ ElementSpec {sub_elements: (18554, 18559), sub_element_ver: 776, attributes: (0, 2), attributes_ver: 656, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // VARIABLE-INSTANCE-IREF
    /* 5024 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (361, 367), attributes_ver: 9349, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // CONTEXT-DATA-PROTOTYPE-REF, TARGET-DATA-PROTOTYPE-REF
    /* 5025 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (421, 427), attributes_ver: 9349, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // CONTEXT-PORT-PROTOTYPE-REF
    /* 5026 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (367, 373), attributes_ver: 9349, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // TARGET-DATA-PROTOTYPE-REF, TARGET-DATA-PROTOYPE-REF
    /* 5027 */ ElementSpec {sub_elements: (17680, 17688), sub_element_ver: 8826, attributes: (0, 2), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // VARIATION-POINT
    /* 5028 */ ElementSpec {sub_elements: (21251, 21252), sub_element_ver: 7, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // POST-BUILD-VARIANT-CONDITIONS
    /* 5029 */ ElementSpec {sub_elements: (10982, 10995), sub_element_ver: 7320, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (6120, 6121)}, // VARIATION-POINT-PROXY
    /* 5030 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (1063, 1069), attributes_ver: 9319, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // IMPLEMENTATION-DATA-TYPE-REF
    /* 5031 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (2905, 2911), attributes_ver: 9319, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // POST-BUILD-VALUE-ACCESS-REF
    /* 5032 */ ElementSpec {sub_elements: (21251, 21252), sub_element_ver: 0, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // POST-BUILD-VARIANT-CONDITIONS
    /* 5033 */ ElementSpec {sub_elements: (9108, 9122), sub_element_ver: 6643, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Choice, ref_info: (0, 0)}, // VALUE-ACCESS
    /* 5034 */ ElementSpec {sub_elements: (19514, 19517), sub_element_ver: 192, attributes: (0, 2), attributes_ver: 134, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // VARIATION-RESTRICTION
    /* 5035 */ ElementSpec {sub_elements: (20128, 20130), sub_element_ver: 64, attributes: (0, 2), attributes_ver: 64, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // VEHICLE-DRIVER-NOTIFICATION
    /* 5036 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 64, character_data: Some(973), mode: ContentMode::Characters, ref_info: (0, 0)}, // NOTIFICATION-STATE
    /* 5037 */ ElementSpec {sub_elements: (3300, 3322), sub_element_ver: 2963, attributes: (115, 118), attributes_ver: 909, character_data: None, mode: ContentMode::Sequence, ref_info: (6121, 6128)}, // VEHICLE-PACKAGE
    /* 5038 */ ElementSpec {sub_elements: (21252, 21253), sub_element_ver: 64, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // DRIVER-NOTIFICATIONS
    /* 5039 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (1147, 1153), attributes_ver: 1642, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // PACKAGER-SIGNATURE-REF
    /* 5040 */ ElementSpec {sub_elements: (21253, 21254), sub_element_ver: 64, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // ROLLOUT-QUALIFICATIONS
    /* 5041 */ ElementSpec {sub_elements: (21254, 21255), sub_element_ver: 64, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // UCM-MASTER-FALLBACK-REFS
    /* 5042 */ ElementSpec {sub_elements: (21255, 21256), sub_element_ver: 64, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // UCMS
    /* 5043 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (481, 487), attributes_ver: 1642, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // VEHICLE-DESCRIPTION-REF
    /* 5044 */ ElementSpec {sub_elements: (12858, 12870), sub_element_ver: 7874, attributes: (115, 118), attributes_ver: 909, character_data: None, mode: ContentMode::Sequence, ref_info: (6128, 6129)}, // VEHICLE-ROLLOUT-STEP
    /* 5045 */ ElementSpec {sub_elements: (21256, 21257), sub_element_ver: 20, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // SAFETY-CONDITIONS
    /* 5046 */ ElementSpec {sub_elements: (21257, 21258), sub_element_ver: 64, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // UCM-PROCESSINGS
    /* 5047 */ ElementSpec {sub_elements: (777, 785), sub_element_ver: 3276, attributes: (115, 118), attributes_ver: 192, character_data: None, mode: ContentMode::Sequence, ref_info: (6129, 6131)}, // VENDOR-SPECIFIC-SERVICE-NEEDS
    /* 5048 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (3827, 3831), attributes_ver: 9527, character_data: Some(974), mode: ContentMode::Characters, ref_info: (0, 0)}, // COMMAND, DEFAULT-VALUE, EXPRESSION, VALUE, VT
    /* 5049 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 81, character_data: Some(975), mode: ContentMode::Characters, ref_info: (0, 0)}, // VERIFICATION-STATUS-INDICATION-MODE
    /* 5050 */ ElementSpec {sub_elements: (4392, 4411), sub_element_ver: 3930, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (6131, 6138)}, // VFB-TIMING
    /* 5051 */ ElementSpec {sub_elements: (10995, 11008), sub_element_ver: 5144, attributes: (115, 118), attributes_ver: 0, character_data: None, mode: ContentMode::Sequence, ref_info: (6138, 6139)}, // VIEW-MAP
    /* 5052 */ ElementSpec {sub_elements: (21258, 21259), sub_element_ver: 0, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // FIRST-ELEMENT-INSTANCE-IREFS
    /* 5053 */ ElementSpec {sub_elements: (21259, 21260), sub_element_ver: 0, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // FIRST-ELEMENT-REFS
    /* 5054 */ ElementSpec {sub_elements: (21260, 21261), sub_element_ver: 0, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // SECOND-ELEMENT-INSTANCE-IREFS
    /* 5055 */ ElementSpec {sub_elements: (21261, 21262), sub_element_ver: 0, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // SECOND-ELEMENT-REFS
    /* 5056 */ ElementSpec {sub_elements: (16724, 16734), sub_element_ver: 2765, attributes: (115, 118), attributes_ver: 0, character_data: None, mode: ContentMode::Sequence, ref_info: (6139, 6143)}, // VIEW-MAP-SET
    /* 5057 */ ElementSpec {sub_elements: (21262, 21263), sub_element_ver: 0, attributes: (0, 0), attributes_ver: 0, character_data: None, mode: ContentMode::Bag, ref_info: (0, 0)}, // VIEW-MAPS
    /* 5058 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 123, character_data: Some(977), mode: ContentMode::Characters, ref_info: (0, 0)}, // VIOLATED-SAFETY-CONDITION-BEHAVIOR
    /* 5059 */ ElementSpec {sub_elements: (17445, 17454), sub_element_ver: 2765, attributes: (115, 118), attributes_ver: 0, character_data: None, mode: ContentMode::Sequence, ref_info: (6143, 6144)}, // VLAN
    /* 5060 */ ElementSpec {sub_elements: (18991, 18995), sub_element_ver: 9177, attributes: (0, 2), attributes_ver: 0, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // VLAN-MEMBERSHIP
    /* 5061 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (919, 925), attributes_ver: 9319, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // DEFAULT-VLAN-REF, VLAN-REF
    /* 5062 */ ElementSpec {sub_elements: (14883, 14894), sub_element_ver: 8304, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (6144, 6145)}, // WAIT-POINT
    /* 5063 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (3061, 3067), attributes_ver: 9361, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // TRIGGER-REF
    /* 5064 */ ElementSpec {sub_elements: (6823, 6834), sub_element_ver: 2765, attributes: (115, 118), attributes_ver: 0, character_data: None, mode: ContentMode::Sequence, ref_info: (6145, 6148)}, // WARNING-INDICATOR-REQUESTED-BIT-NEEDS
    /* 5065 */ ElementSpec {sub_elements: (17454, 17463), sub_element_ver: 7430, attributes: (115, 118), attributes_ver: 4960, character_data: None, mode: ContentMode::Sequence, ref_info: (6148, 6150)}, // WATCHDOG-ACTION-ITEM
    /* 5066 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 75, character_data: Some(978), mode: ContentMode::Characters, ref_info: (0, 0)}, // ACTION-TYPE
    /* 5067 */ ElementSpec {sub_elements: (17463, 17472), sub_element_ver: 7730, attributes: (115, 118), attributes_ver: 5218, character_data: None, mode: ContentMode::Sequence, ref_info: (6150, 6152)}, // WATCHDOG-PHM-ACTION-ITEM
    /* 5068 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 2), attributes_ver: 3350, character_data: Some(979), mode: ContentMode::Characters, ref_info: (0, 0)}, // ACTION-TYPE
    /* 5069 */ ElementSpec {sub_elements: (11008, 11021), sub_element_ver: 3721, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (6152, 6154)}, // WORST-CASE-HEAP-USAGE
    /* 5070 */ ElementSpec {sub_elements: (9122, 9136), sub_element_ver: 3721, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (6154, 6156)}, // WORST-CASE-STACK-USAGE
    /* 5071 */ ElementSpec {sub_elements: (2810, 2823), sub_element_ver: 3316, attributes: (115, 118), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (6156, 6165)}, // XCP-PDU
    /* 5072 */ ElementSpec {sub_elements: (11021, 11034), sub_element_ver: 7333, attributes: (0, 2), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (6165, 6167)}, // XDOC
    /* 5073 */ ElementSpec {sub_elements: (17688, 17696), sub_element_ver: 8834, attributes: (0, 2), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (6167, 6169)}, // XFILE
    /* 5074 */ ElementSpec {sub_elements: (19517, 19520), sub_element_ver: 800, attributes: (84, 96), attributes_ver: 9284, character_data: None, mode: ContentMode::Sequence, ref_info: (0, 0)}, // XREF
    /* 5075 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (211, 217), attributes_ver: 9361, character_data: Some(726), mode: ContentMode::Characters, ref_info: (0, 0)}, // REFERRABLE-REF, SDX-REF, VALUE-REF
    /* 5076 */ ElementSpec {sub_elements: (11021, 11024), sub_element_ver: 841, attributes: (0, 2), attributes_ver: 22, character_data: None, mode: ContentMode::Sequence, ref_info: (6169, 6171)}, // XREF-TARGET
    /* 5077 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 0), attributes_ver: 0, character_data: Some(981), mode: ContentMode::Characters, ref_info: (0, 0)}, // ABSOLUTE, ALIVE-TIMEOUT, BIT, BSW-RESOLUTION, COM-PROCESSING-PERIOD, CYCLE, CYCLE-TIME-MAIN-FUNCTION, DELAY, EXPECTED-ALIVE-CYCLE, FACTOR-SI-TO-UNIT, MACROTICK-DURATION, MAX-ALIVE-CYCLE, MAX-SAMPLE-POINT, MAX-SYNC-JUMP-WIDTH, MICROTICK-DURATION, MIN-ALIVE-CYCLE, MIN-SAMPLE-POINT, MIN-SYNC-JUMP-WIDTH, MINIMUM-DELAY, MINIMUM-START-INTERVAL, NM-CYCLETIME-MAIN-FUNCTION, NM-DETECTION-LOCK, NM-MAIN-FUNCTION-PERIOD, NM-MESSAGE-TIMEOUT-TIME, NM-MSG-CYCLE-OFFSET, NM-MSG-CYCLE-TIME, NM-MSG-REDUCED-TIME, NM-NETWORK-TIMEOUT, NM-REMOTE-SLEEP-INDICATION-TIME, NM-REPEAT-MESSAGE-TIME, NM-SHUTDOWN-DELAY-TIMER, NM-WAIT-BUS-SLEEP-TIME, NTU, OFFSET-SI-TO-UNIT, P-2-MAX, P-2-TIMING, PERIOD, PROPABILITY, SAMPLE-CLOCK-PERIOD, ST-MIN, TIME-BASE, TIME-BASE-JITTER, TIME-BR, TIME-BUFFER, TIME-CS, TIME-FR-IF, TIMEOUT, TIMEOUT-AR, TIMEOUT-AS, TIMEOUT-BR, TIMEOUT-BS, TIMEOUT-CR, TIMEOUT-CS, VALUE
    /* 5078 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 0), attributes_ver: 0, character_data: Some(982), mode: ContentMode::Characters, ref_info: (0, 0)}, // ADDITIONAL-INFORMATION, ANNOTATION-ORIGIN, APPROVAL-STATUS, BASE-TYPE-ENCODING, CATEGORY, CLASSIFICATION, COMMENT, COMMUNICATION-MODE, DESTINATION-CONTEXT, DESTINATION-TYPE, DIAG-REQUIREMENT, DOMAIN, GENERATOR, INIT-VALUE, INPUT, INTERRUPT-SOURCE, IP-ADDRESS, ISSUED-BY, IUMPR-GROUP, MSR-QUERY-NAME, NAME, NUMBER, OPTIONS, ORIGIN, POSITION, PROCESSOR-MODE, PROCESSOR-SPEED, PROTOCOL-NAME, PROTOCOL-VERSION, PUBLISHER, REGULAR-EXPRESSION, REQUIRED-RTE-VENDOR, SHORT-LABEL, STANDARD, STATE, SUBTITLE, SW-RECORD-LAYOUT-GROUP-INDEX, SW-RECORD-LAYOUT-V-INDEX, SW-RECORD-LAYOUT-V-PROP, TEST-PATTERN, TEXT, TOOL, TOOL-VERSION, TYPE, TYPE-DEFINITION, USED-CODE-GENERATOR, VENDOR, VERSION
    /* 5079 */ ElementSpec {sub_elements: (0, 0), sub_element_ver: 0, attributes: (0, 0), attributes_ver: 0, character_data: Some(983), mode: ContentMode::Characters, ref_info: (0, 0)}, // CSE-CODE
];

#[rustfmt::skip]
pub(crate) static REF_ITEMS: [EnumItem; 6171] = [
    EnumItem::AbstractClassTailoring,
    EnumItem::DataFormatElementReference,
    EnumItem::SpecElementReference,
    EnumItem::AclObjectSet,
    EnumItem::ArElement,
    EnumItem::AtpBlueprint,
    EnumItem::AtpBlueprintable,
    EnumItem::CollectableElement,
    EnumItem::PackageableElement,
    EnumItem::AclOperation,
    EnumItem::ArElement,
    EnumItem::AtpBlueprint,
    EnumItem::AtpBlueprintable,
    EnumItem::CollectableElement,
    EnumItem::PackageableElement,
    EnumItem::AclPermission,
    EnumItem::ArElement,
    EnumItem::AtpBlueprint,
    EnumItem::AtpBlueprintable,
    EnumItem::CollectableElement,
    EnumItem::PackageableElement,
    EnumItem::AclRole,
    EnumItem::ArElement,
    EnumItem::AtpBlueprint,
    EnumItem::AtpBlueprintable,
    EnumItem::CollectableElement,
    EnumItem::PackageableElement,
    EnumItem::Action,
    EnumItem::ActionList,
    EnumItem::AdaptiveApplicationSwComponentType,
    EnumItem::ArElement,
    EnumItem::AtpBlueprint,
    EnumItem::AtpBlueprintable,
    EnumItem::AtpClassifier,
    EnumItem::AtpType,
    EnumItem::CollectableElement,
    EnumItem::PackageableElement,
    EnumItem::SwComponentType,
    EnumItem::AdaptiveAutosarApplication,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::PackageableElement,
    EnumItem::AdaptiveFirewallModuleInstantiation,
    EnumItem::AdaptiveModuleInstantiation,
    EnumItem::AtpClassifier,
    EnumItem::AtpFeature,
    EnumItem::AtpStructureElement,
    EnumItem::NonOsModuleInstantiation,
    EnumItem::AdaptiveFirewallToPortPrototypeMapping,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::PackageableElement,
    EnumItem::UploadableDeploymentElement,
    EnumItem::UploadablePackageElement,
    EnumItem::AdaptiveSwcInternalBehavior,
    EnumItem::AgeConstraint,
    EnumItem::TimingConstraint,
    EnumItem::Traceable,
    EnumItem::AggregationTailoring,
    EnumItem::AttributeTailoring,
    EnumItem::DataFormatElementReference,
    EnumItem::DataFormatElementScope,
    EnumItem::SpecElementReference,
    EnumItem::SpecElementScope,
    EnumItem::AliasNameSet,
    EnumItem::ArElement,
    EnumItem::AtpBlueprint,
    EnumItem::AtpBlueprintable,
    EnumItem::CollectableElement,
    EnumItem::PackageableElement,
    EnumItem::AliveSupervision,
    EnumItem::PhmSupervision,
    EnumItem::Allocator,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::PackageableElement,
    EnumItem::AnalyzedExecutionTime,
    EnumItem::ExecutionTime,
    EnumItem::ApApplicationEndpoint,
    EnumItem::ApApplicationError,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::PackageableElement,
    EnumItem::UploadablePackageElement,
    EnumItem::ApApplicationErrorDomain,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::PackageableElement,
    EnumItem::UploadablePackageElement,
    EnumItem::ApApplicationErrorSet,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::PackageableElement,
    EnumItem::UploadablePackageElement,
    EnumItem::ApSomeipTransformationProps,
    EnumItem::TransformationProps,
    EnumItem::ApmcAbstractDefinition,
    EnumItem::ApmcBooleanParamDef,
    EnumItem::ApmcConfigurationElementDef,
    EnumItem::ApmcContainerElementDef,
    EnumItem::ApmcParameterDef,
    EnumItem::ApmcAbstractDefinition,
    EnumItem::ApmcChoiceContainerDef,
    EnumItem::ApmcConfigurationElementDef,
    EnumItem::ApmcContainerDef,
    EnumItem::ApmcAbstractDefinition,
    EnumItem::ApmcChoiceContainerReferenceDef,
    EnumItem::ApmcConfigurationElementDef,
    EnumItem::ApmcContainerElementDef,
    EnumItem::ApmcReferenceDef,
    EnumItem::ApmcAbstractDefinition,
    EnumItem::ApmcConfigurationElementDef,
    EnumItem::ApmcContainerElementDef,
    EnumItem::ApmcContainerReferenceDef,
    EnumItem::ApmcReferenceDef,
    EnumItem::ApmcContainerElementValue,
    EnumItem::ApmcContainerReferenceValue,
    EnumItem::ApmcReferenceValue,
    EnumItem::ApmcContainerValue,
    EnumItem::ApmcDefinitionCollection,
    EnumItem::ArElement,
    EnumItem::AtpBlueprint,
    EnumItem::AtpBlueprintable,
    EnumItem::CollectableElement,
    EnumItem::PackageableElement,
    EnumItem::UploadablePackageElement,
    EnumItem::ApmcEnumerationLiteralDef,
    EnumItem::ApmcAbstractDefinition,
    EnumItem::ApmcConfigurationElementDef,
    EnumItem::ApmcContainerElementDef,
    EnumItem::ApmcEnumerationParamDef,
    EnumItem::ApmcParameterDef,
    EnumItem::ApmcAbstractDefinition,
    EnumItem::ApmcConfigurationElementDef,
    EnumItem::ApmcContainerElementDef,
    EnumItem::ApmcFloatParamDef,
    EnumItem::ApmcParameterDef,
    EnumItem::ApmcAbstractDefinition,
    EnumItem::ApmcAbstractForeignReferenceDef,
    EnumItem::ApmcConfigurationElementDef,
    EnumItem::ApmcContainerElementDef,
    EnumItem::ApmcForeignReferenceDef,
    EnumItem::ApmcReferenceDef,
    EnumItem::ApmcAbstractReferenceValue,
    EnumItem::ApmcContainerElementValue,
    EnumItem::ApmcForeignReferenceValue,
    EnumItem::ApmcReferenceValue,
    EnumItem::ApmcAbstractDefinition,
    EnumItem::ApmcFunctionalClusterDef,
    EnumItem::ArElement,
    EnumItem::AtpBlueprint,
    EnumItem::AtpBlueprintable,
    EnumItem::CollectableElement,
    EnumItem::PackageableElement,
    EnumItem::UploadablePackageElement,
    EnumItem::ApmcFunctionalClusterValue,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::PackageableElement,
    EnumItem::UploadablePackageElement,
    EnumItem::ApmcAbstractDefinition,
    EnumItem::ApmcAbstractInstanceReferenceDef,
    EnumItem::ApmcConfigurationElementDef,
    EnumItem::ApmcContainerElementDef,
    EnumItem::ApmcInstanceReferenceDef,
    EnumItem::ApmcReferenceDef,
    EnumItem::ApmcAbstractInstanceReferenceValue,
    EnumItem::ApmcContainerElementValue,
    EnumItem::ApmcInstanceReferenceValue,
    EnumItem::ApmcReferenceValue,
    EnumItem::ApmcAbstractDefinition,
    EnumItem::ApmcConfigurationElementDef,
    EnumItem::ApmcContainerElementDef,
    EnumItem::ApmcIntegerParamDef,
    EnumItem::ApmcParameterDef,
    EnumItem::ApmcContainerElementValue,
    EnumItem::ApmcNumericalParamValue,
    EnumItem::ApmcParameterValue,
    EnumItem::ApmcAbstractDefinition,
    EnumItem::ApmcConfigurationElementDef,
    EnumItem::ApmcContainerDef,
    EnumItem::ApmcParamConfContainerDef,
    EnumItem::ApmcAbstractDefinition,
    EnumItem::ApmcConfigurationElementDef,
    EnumItem::ApmcContainerElementDef,
    EnumItem::ApmcParameterDef,
    EnumItem::ApmcStringParamDef,
    EnumItem::ApmcContainerElementValue,
    EnumItem::ApmcParameterValue,
    EnumItem::ApmcTextualParamValue,
    EnumItem::ApmcAbstractDefinition,
    EnumItem::ApmcAbstractForeignReferenceDef,
    EnumItem::ApmcConfigurationElementDef,
    EnumItem::ApmcContainerElementDef,
    EnumItem::ApmcReferenceDef,
    EnumItem::ApmcUpstreamDocForeignReferenceDef,
    EnumItem::ApmcAbstractReferenceValue,
    EnumItem::ApmcContainerElementValue,
    EnumItem::ApmcReferenceValue,
    EnumItem::ApmcUpstreamDocForeignReferenceValue,
    EnumItem::ApmcAbstractDefinition,
    EnumItem::ApmcAbstractInstanceReferenceDef,
    EnumItem::ApmcConfigurationElementDef,
    EnumItem::ApmcContainerElementDef,
    EnumItem::ApmcReferenceDef,
    EnumItem::ApmcUpstreamDocInstanceReferenceDef,
    EnumItem::ApmcAbstractInstanceReferenceValue,
    EnumItem::ApmcContainerElementValue,
    EnumItem::ApmcReferenceValue,
    EnumItem::ApmcUpstreamDocInstanceReferenceValue,
    EnumItem::ApmcAbstractDefinition,
    EnumItem::ApmcAbstractForeignReferenceDef,
    EnumItem::ApmcConfigurationElementDef,
    EnumItem::ApmcContainerElementDef,
    EnumItem::ApmcReferenceDef,
    EnumItem::ApmcUriForeignReferenceDef,
    EnumItem::ApmcAbstractReferenceValue,
    EnumItem::ApmcContainerElementValue,
    EnumItem::ApmcReferenceValue,
    EnumItem::ApmcUriForeignReferenceValue,
    EnumItem::ApmcAbstractDefinition,
    EnumItem::ApmcAbstractInstanceReferenceDef,
    EnumItem::ApmcConfigurationElementDef,
    EnumItem::ApmcContainerElementDef,
    EnumItem::ApmcReferenceDef,
    EnumItem::ApmcUriInstanceReferenceDef,
    EnumItem::ApmcAbstractInstanceReferenceValue,
    EnumItem::ApmcContainerElementValue,
    EnumItem::ApmcReferenceValue,
    EnumItem::ApmcUriInstanceReferenceValue,
    EnumItem::ApmcValueCollection,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::PackageableElement,
    EnumItem::UploadablePackageElement,
    EnumItem::AppOsTaskProxyToEcuTaskProxyMapping,
    EnumItem::ApplicabilityInfoSet,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::PackageableElement,
    EnumItem::ActionItem,
    EnumItem::ApplicationActionItem,
    EnumItem::ApplicationArrayDataType,
    EnumItem::ApplicationCompositeDataType,
    EnumItem::ApplicationDataType,
    EnumItem::ArElement,
    EnumItem::AtpBlueprint,
    EnumItem::AtpBlueprintable,
    EnumItem::AtpClassifier,
    EnumItem::AtpType,
    EnumItem::AutosarDataType,
    EnumItem::CollectableElement,
    EnumItem::PackageableElement,
    EnumItem::ApplicationArrayElement,
    EnumItem::ApplicationCompositeElementDataPrototype,
    EnumItem::AtpFeature,
    EnumItem::AtpPrototype,
    EnumItem::DataPrototype,
    EnumItem::ApplicationAssocMapDataType,
    EnumItem::ApplicationCompositeDataType,
    EnumItem::ApplicationDataType,
    EnumItem::ArElement,
    EnumItem::AtpBlueprint,
    EnumItem::AtpBlueprintable,
    EnumItem::AtpClassifier,
    EnumItem::AtpType,
    EnumItem::AutosarDataType,
    EnumItem::CollectableElement,
    EnumItem::PackageableElement,
    EnumItem::ApplicationAssocMapElement,
    EnumItem::ApplicationCompositeElementDataPrototype,
    EnumItem::AtpFeature,
    EnumItem::AtpPrototype,
    EnumItem::DataPrototype,
    EnumItem::ApplicationDataType,
    EnumItem::ApplicationDeferredDataType,
    EnumItem::ArElement,
    EnumItem::AtpBlueprint,
    EnumItem::AtpBlueprintable,
    EnumItem::AtpClassifier,
    EnumItem::AtpType,
    EnumItem::AutosarDataType,
    EnumItem::CollectableElement,
    EnumItem::PackageableElement,
    EnumItem::ApplicationEndpoint,
    EnumItem::ApplicationError,
    EnumItem::ApplicationInterface,
    EnumItem::ArElement,
    EnumItem::AtpBlueprint,
    EnumItem::AtpBlueprintable,
    EnumItem::AtpClassifier,
    EnumItem::AtpType,
    EnumItem::CollectableElement,
    EnumItem::PackageableElement,
    EnumItem::PortInterface,
    EnumItem::ApplicationModeRequestPhmActionItem,
    EnumItem::PhmActionItem,
    EnumItem::ApplicationPartition,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::PackageableElement,
    EnumItem::ApplicationPartitionToEcuPartitionMapping,
    EnumItem::ApplicationDataType,
    EnumItem::ApplicationPrimitiveDataType,
    EnumItem::ArElement,
    EnumItem::AtpBlueprint,
    EnumItem::AtpBlueprintable,
    EnumItem::AtpClassifier,
    EnumItem::AtpType,
    EnumItem::AutosarDataType,
    EnumItem::CollectableElement,
    EnumItem::PackageableElement,
    EnumItem::ApplicationCompositeDataType,
    EnumItem::ApplicationDataType,
    EnumItem::ApplicationRecordDataType,
    EnumItem::ArElement,
    EnumItem::AtpBlueprint,
    EnumItem::AtpBlueprintable,
    EnumItem::AtpClassifier,
    EnumItem::AtpType,
    EnumItem::AutosarDataType,
    EnumItem::CollectableElement,
    EnumItem::PackageableElement,
    EnumItem::ApplicationCompositeElementDataPrototype,
    EnumItem::ApplicationRecordElement,
    EnumItem::AtpFeature,
    EnumItem::AtpPrototype,
    EnumItem::DataPrototype,
    EnumItem::ApplicationSwComponentType,
    EnumItem::ArElement,
    EnumItem::AtomicSwComponentType,
    EnumItem::AtpBlueprint,
    EnumItem::AtpBlueprintable,
    EnumItem::AtpClassifier,
    EnumItem::AtpType,
    EnumItem::CollectableElement,
    EnumItem::PackageableElement,
    EnumItem::SwComponentType,
    EnumItem::AppliedStandard,
    EnumItem::ArPackage,
    EnumItem::AtpBlueprint,
    EnumItem::AtpBlueprintable,
    EnumItem::CollectableElement,
    EnumItem::ArbitraryEventTriggering,
    EnumItem::EventTriggeringConstraint,
    EnumItem::TimingConstraint,
    EnumItem::Traceable,
    EnumItem::Arbitration,
    EnumItem::ArgumentDataPrototype,
    EnumItem::AtpFeature,
    EnumItem::AtpPrototype,
    EnumItem::AutosarDataPrototype,
    EnumItem::DataPrototype,
    EnumItem::ArtifactChecksum,
    EnumItem::ArElement,
    EnumItem::ArtifactChecksumToCryptoProviderMapping,
    EnumItem::CollectableElement,
    EnumItem::FunctionalClusterInteractsWithFunctionalClusterMapping,
    EnumItem::PackageableElement,
    EnumItem::UploadableDeploymentElement,
    EnumItem::UploadablePackageElement,
    EnumItem::ArtifactLocator,
    EnumItem::AssemblySwConnector,
    EnumItem::AtpClassifier,
    EnumItem::AtpFeature,
    EnumItem::AtpStructureElement,
    EnumItem::SwConnector,
    EnumItem::AbstractAccessPoint,
    EnumItem::AsynchronousServerCallPoint,
    EnumItem::AtpClassifier,
    EnumItem::AtpFeature,
    EnumItem::AtpStructureElement,
    EnumItem::ServerCallPoint,
    EnumItem::AbstractAccessPoint,
    EnumItem::AsynchronousServerCallResultPoint,
    EnumItem::AtpClassifier,
    EnumItem::AtpFeature,
    EnumItem::AtpStructureElement,
    EnumItem::AbstractEvent,
    EnumItem::AsynchronousServerCallReturnsEvent,
    EnumItem::AtpClassifier,
    EnumItem::AtpFeature,
    EnumItem::AtpStructureElement,
    EnumItem::RteEvent,
    EnumItem::AutosarOperationArgumentInstance,
    EnumItem::AutosarVariableInstance,
    EnumItem::AbstractEvent,
    EnumItem::AtpClassifier,
    EnumItem::AtpFeature,
    EnumItem::AtpStructureElement,
    EnumItem::BackgroundEvent,
    EnumItem::RteEvent,
    EnumItem::BinaryManifestAddressableObject,
    EnumItem::BinaryManifestItem,
    EnumItem::BinaryManifestItemDefinition,
    EnumItem::BinaryManifestAddressableObject,
    EnumItem::BinaryManifestMetaDataField,
    EnumItem::BinaryManifestProvideResource,
    EnumItem::BinaryManifestResource,
    EnumItem::BinaryManifestRequireResource,
    EnumItem::BinaryManifestResource,
    EnumItem::BinaryManifestResourceDefinition,
    EnumItem::BlockState,
    EnumItem::ArElement,
    EnumItem::BlueprintMappingSet,
    EnumItem::CollectableElement,
    EnumItem::PackageableElement,
    EnumItem::BswAsynchronousServerCallPoint,
    EnumItem::BswModuleCallPoint,
    EnumItem::BswAsynchronousServerCallResultPoint,
    EnumItem::BswModuleCallPoint,
    EnumItem::AbstractEvent,
    EnumItem::BswAsynchronousServerCallReturnsEvent,
    EnumItem::BswEvent,
    EnumItem::BswScheduleEvent,
    EnumItem::AbstractEvent,
    EnumItem::BswBackgroundEvent,
    EnumItem::BswEvent,
    EnumItem::BswScheduleEvent,
    EnumItem::BswCalledEntity,
    EnumItem::BswModuleEntity,
    EnumItem::ExecutableEntity,
    EnumItem::ArElement,
    EnumItem::BswCompositionTiming,
    EnumItem::CollectableElement,
    EnumItem::PackageableElement,
    EnumItem::TimingExtension,
    EnumItem::AbstractEvent,
    EnumItem::BswDataReceivedEvent,
    EnumItem::BswEvent,
    EnumItem::BswScheduleEvent,
    EnumItem::BswDebugInfo,
    EnumItem::BswDirectCallPoint,
    EnumItem::BswModuleCallPoint,
    EnumItem::BswDistinguishedPartition,
    EnumItem::ArElement,
    EnumItem::AtpBlueprint,
    EnumItem::AtpBlueprintable,
    EnumItem::BswEntryRelationshipSet,
    EnumItem::CollectableElement,
    EnumItem::PackageableElement,
    EnumItem::AbstractEvent,
    EnumItem::BswEvent,
    EnumItem::BswExternalTriggerOccurredEvent,
    EnumItem::BswScheduleEvent,
    EnumItem::ArElement,
    EnumItem::BswImplementation,
    EnumItem::CollectableElement,
    EnumItem::Implementation,
    EnumItem::PackageableElement,
    EnumItem::AtpClassifier,
    EnumItem::AtpFeature,
    EnumItem::AtpStructureElement,
    EnumItem::BswInternalBehavior,
    EnumItem::InternalBehavior,
    EnumItem::AbstractEvent,
    EnumItem::BswEvent,
    EnumItem::BswInternalTriggerOccurredEvent,
    EnumItem::BswScheduleEvent,
    EnumItem::BswInternalTriggeringPoint,
    EnumItem::BswInterruptEntity,
    EnumItem::BswModuleEntity,
    EnumItem::ExecutableEntity,
    EnumItem::AbstractEvent,
    EnumItem::BswEvent,
    EnumItem::BswInterruptEvent,
    EnumItem::BswMgrNeeds,
    EnumItem::ServiceNeeds,
    EnumItem::AbstractEvent,
    EnumItem::BswEvent,
    EnumItem::BswModeManagerErrorEvent,
    EnumItem::BswScheduleEvent,
    EnumItem::AbstractEvent,
    EnumItem::BswEvent,
    EnumItem::BswModeSwitchEvent,
    EnumItem::BswScheduleEvent,
    EnumItem::AbstractEvent,
    EnumItem::BswEvent,
    EnumItem::BswModeSwitchedAckEvent,
    EnumItem::BswScheduleEvent,
    EnumItem::BswModuleClientServerEntry,
    EnumItem::BswModuleDependency,
    EnumItem::ArElement,
    EnumItem::AtpBlueprint,
    EnumItem::AtpBlueprintable,
    EnumItem::AtpClassifier,
    EnumItem::AtpFeature,
    EnumItem::AtpStructureElement,
    EnumItem::BswModuleDescription,
    EnumItem::CollectableElement,
    EnumItem::PackageableElement,
    EnumItem::ArElement,
    EnumItem::AtpBlueprint,
    EnumItem::AtpBlueprintable,
    EnumItem::BswModuleEntry,
    EnumItem::CollectableElement,
    EnumItem::PackageableElement,
    EnumItem::ArElement,
    EnumItem::BswModuleTiming,
    EnumItem::CollectableElement,
    EnumItem::PackageableElement,
    EnumItem::TimingExtension,
    EnumItem::AbstractEvent,
    EnumItem::BswEvent,
    EnumItem::BswOperationInvokedEvent,
    EnumItem::AbstractEvent,
    EnumItem::BswEvent,
    EnumItem::BswOsTaskExecutionEvent,
    EnumItem::BswScheduleEvent,
    EnumItem::BswModuleEntity,
    EnumItem::BswSchedulableEntity,
    EnumItem::ExecutableEntity,
    EnumItem::BswSchedulerNamePrefix,
    EnumItem::ImplementationProps,
    EnumItem::AtpClassifier,
    EnumItem::AtpFeature,
    EnumItem::AtpStructureElement,
    EnumItem::BswServiceDependencyIdent,
    EnumItem::IdentCaption,
    EnumItem::BswModuleCallPoint,
    EnumItem::BswSynchronousServerCallPoint,
    EnumItem::AbstractEvent,
    EnumItem::BswEvent,
    EnumItem::BswScheduleEvent,
    EnumItem::BswTimingEvent,
    EnumItem::BswVariableAccess,
    EnumItem::AtpBlueprint,
    EnumItem::AtpBlueprintable,
    EnumItem::BuildAction,
    EnumItem::BuildActionEntity,
    EnumItem::AtpBlueprint,
    EnumItem::AtpBlueprintable,
    EnumItem::BuildActionEnvironment,
    EnumItem::ArElement,
    EnumItem::AtpBlueprint,
    EnumItem::AtpBlueprintable,
    EnumItem::BuildActionManifest,
    EnumItem::CollectableElement,
    EnumItem::PackageableElement,
    EnumItem::AtpClassifier,
    EnumItem::AtpFeature,
    EnumItem::AtpStructureElement,
    EnumItem::BulkNvDataDescriptor,
    EnumItem::BurstPatternEventTriggering,
    EnumItem::EventTriggeringConstraint,
    EnumItem::TimingConstraint,
    EnumItem::Traceable,
    EnumItem::BusMirrorChannelMapping,
    EnumItem::BusMirrorChannelMappingCan,
    EnumItem::CollectableElement,
    EnumItem::FibexElement,
    EnumItem::PackageableElement,
    EnumItem::BusMirrorChannelMapping,
    EnumItem::BusMirrorChannelMappingFlexray,
    EnumItem::CollectableElement,
    EnumItem::FibexElement,
    EnumItem::PackageableElement,
    EnumItem::BusMirrorChannelMapping,
    EnumItem::BusMirrorChannelMappingIp,
    EnumItem::CollectableElement,
    EnumItem::FibexElement,
    EnumItem::PackageableElement,
    EnumItem::BusMirrorChannelMapping,
    EnumItem::BusMirrorChannelMappingUserDefined,
    EnumItem::CollectableElement,
    EnumItem::FibexElement,
    EnumItem::PackageableElement,
    EnumItem::ArElement,
    EnumItem::CalibrationParameterValueSet,
    EnumItem::CollectableElement,
    EnumItem::PackageableElement,
    EnumItem::AbstractCanCluster,
    EnumItem::ArElement,
    EnumItem::CanCluster,
    EnumItem::CollectableElement,
    EnumItem::CommunicationCluster,
    EnumItem::FibexElement,
    EnumItem::PackageableElement,
    EnumItem::UploadableDesignElement,
    EnumItem::UploadablePackageElement,
    EnumItem::AbstractCanCommunicationConnector,
    EnumItem::CanCommunicationConnector,
    EnumItem::CommunicationConnector,
    EnumItem::AbstractCanCommunicationController,
    EnumItem::CanCommunicationController,
    EnumItem::CommunicationController,
    EnumItem::CanFrame,
    EnumItem::CollectableElement,
    EnumItem::FibexElement,
    EnumItem::Frame,
    EnumItem::PackageableElement,
    EnumItem::CanFrameTriggering,
    EnumItem::FrameTriggering,
    EnumItem::CanNmCluster,
    EnumItem::NmCluster,
    EnumItem::CanNmNode,
    EnumItem::NmNode,
    EnumItem::AbstractCanPhysicalChannel,
    EnumItem::CanPhysicalChannel,
    EnumItem::PhysicalChannel,
    EnumItem::CanTpAddress,
    EnumItem::CanTpChannel,
    EnumItem::CanTpConfig,
    EnumItem::CollectableElement,
    EnumItem::FibexElement,
    EnumItem::PackageableElement,
    EnumItem::TpConfig,
    EnumItem::CanTpNode,
    EnumItem::ArElement,
    EnumItem::CanXlProps,
    EnumItem::CollectableElement,
    EnumItem::PackageableElement,
    EnumItem::UploadableDesignElement,
    EnumItem::UploadablePackageElement,
    EnumItem::Caption,
    EnumItem::Chapter,
    EnumItem::ChargeManagerNeeds,
    EnumItem::ServiceNeeds,
    EnumItem::CheckpointTransition,
    EnumItem::ClassContentConditional,
    EnumItem::ClientIdDefinition,
    EnumItem::ArElement,
    EnumItem::ClientIdDefinitionSet,
    EnumItem::CollectableElement,
    EnumItem::PackageableElement,
    EnumItem::ArElement,
    EnumItem::AtpBlueprint,
    EnumItem::AtpBlueprintable,
    EnumItem::AtpClassifier,
    EnumItem::AtpType,
    EnumItem::ClientServerInterface,
    EnumItem::CollectableElement,
    EnumItem::PackageableElement,
    EnumItem::PortInterface,
    EnumItem::AtpBlueprint,
    EnumItem::AtpBlueprintable,
    EnumItem::ClientServerInterfaceMapping,
    EnumItem::PortInterfaceMapping,
    EnumItem::ArElement,
    EnumItem::AtpBlueprint,
    EnumItem::ClientServerInterfaceToBswModuleEntryBlueprintMapping,
    EnumItem::CollectableElement,
    EnumItem::PackageableElement,
    EnumItem::AtpClassifier,
    EnumItem::AtpFeature,
    EnumItem::AtpStructureElement,
    EnumItem::ClientServerOperation,
    EnumItem::AdaptiveModuleInstantiation,
    EnumItem::AtpClassifier,
    EnumItem::AtpFeature,
    EnumItem::AtpStructureElement,
    EnumItem::CmModuleInstantiation,
    EnumItem::NonOsModuleInstantiation,
    EnumItem::Code,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::Collection,
    EnumItem::PackageableElement,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::ComCertificateToCryptoCertificateMapping,
    EnumItem::FunctionalClusterInteractsWithFunctionalClusterMapping,
    EnumItem::PackageableElement,
    EnumItem::UploadableDeploymentElement,
    EnumItem::UploadablePackageElement,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::ComEventGrant,
    EnumItem::ComGrant,
    EnumItem::Grant,
    EnumItem::PackageableElement,
    EnumItem::UploadableDeploymentElement,
    EnumItem::UploadablePackageElement,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::ComEventGrantDesign,
    EnumItem::ComGrantDesign,
    EnumItem::GrantDesign,
    EnumItem::PackageableElement,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::ComFieldGrant,
    EnumItem::ComGrant,
    EnumItem::Grant,
    EnumItem::PackageableElement,
    EnumItem::UploadableDeploymentElement,
    EnumItem::UploadablePackageElement,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::ComFieldGrantDesign,
    EnumItem::ComGrantDesign,
    EnumItem::GrantDesign,
    EnumItem::PackageableElement,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::ComFindServiceGrant,
    EnumItem::Grant,
    EnumItem::PackageableElement,
    EnumItem::UploadableDeploymentElement,
    EnumItem::UploadablePackageElement,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::ComFindServiceGrantDesign,
    EnumItem::GrantDesign,
    EnumItem::PackageableElement,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::ComKeyToCryptoKeySlotMapping,
    EnumItem::FunctionalClusterInteractsWithFunctionalClusterMapping,
    EnumItem::PackageableElement,
    EnumItem::UploadableDeploymentElement,
    EnumItem::UploadablePackageElement,
    EnumItem::ComManagementMapping,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::ComGrant,
    EnumItem::ComMethodGrant,
    EnumItem::Grant,
    EnumItem::PackageableElement,
    EnumItem::UploadableDeploymentElement,
    EnumItem::UploadablePackageElement,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::ComGrantDesign,
    EnumItem::ComMethodGrantDesign,
    EnumItem::GrantDesign,
    EnumItem::PackageableElement,
    EnumItem::ComMgrUserNeeds,
    EnumItem::ServiceNeeds,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::ComOfferServiceGrant,
    EnumItem::Grant,
    EnumItem::PackageableElement,
    EnumItem::UploadableDeploymentElement,
    EnumItem::UploadablePackageElement,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::ComOfferServiceGrantDesign,
    EnumItem::GrantDesign,
    EnumItem::PackageableElement,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::ComSecOcToCryptoKeySlotMapping,
    EnumItem::FunctionalClusterInteractsWithFunctionalClusterMapping,
    EnumItem::PackageableElement,
    EnumItem::UploadableDeploymentElement,
    EnumItem::UploadablePackageElement,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::ComGrant,
    EnumItem::ComTriggerGrant,
    EnumItem::Grant,
    EnumItem::PackageableElement,
    EnumItem::UploadableDeploymentElement,
    EnumItem::UploadablePackageElement,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::ComGrantDesign,
    EnumItem::ComTriggerGrantDesign,
    EnumItem::GrantDesign,
    EnumItem::PackageableElement,
    EnumItem::Compiler,
    EnumItem::ArElement,
    EnumItem::AtomicSwComponentType,
    EnumItem::AtpBlueprint,
    EnumItem::AtpBlueprintable,
    EnumItem::AtpClassifier,
    EnumItem::AtpType,
    EnumItem::CollectableElement,
    EnumItem::ComplexDeviceDriverSwComponentType,
    EnumItem::PackageableElement,
    EnumItem::SwComponentType,
    EnumItem::ArElement,
    EnumItem::AtpBlueprint,
    EnumItem::AtpBlueprintable,
    EnumItem::AtpClassifier,
    EnumItem::AtpType,
    EnumItem::CollectableElement,
    EnumItem::CompositeInterface,
    EnumItem::PackageableElement,
    EnumItem::PortInterface,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::CompositionPPortToExecutablePPortMapping,
    EnumItem::CompositionPortToExecutablePortMapping,
    EnumItem::PackageableElement,
    EnumItem::UploadablePackageElement,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::CompositionPortToExecutablePortMapping,
    EnumItem::CompositionRPortToExecutableRPortMapping,
    EnumItem::PackageableElement,
    EnumItem::UploadablePackageElement,
    EnumItem::ArElement,
    EnumItem::AtpBlueprint,
    EnumItem::AtpBlueprintable,
    EnumItem::AtpClassifier,
    EnumItem::AtpType,
    EnumItem::CollectableElement,
    EnumItem::CompositionSwComponentType,
    EnumItem::PackageableElement,
    EnumItem::SwComponentType,
    EnumItem::ArElement,
    EnumItem::AtpBlueprint,
    EnumItem::AtpBlueprintable,
    EnumItem::CollectableElement,
    EnumItem::CompuMethod,
    EnumItem::PackageableElement,
    EnumItem::ConcreteClassTailoring,
    EnumItem::DataFormatElementReference,
    EnumItem::DataFormatElementScope,
    EnumItem::SpecElementReference,
    EnumItem::SpecElementScope,
    EnumItem::ConcretePatternEventTriggering,
    EnumItem::EventTriggeringConstraint,
    EnumItem::TimingConstraint,
    EnumItem::Traceable,
    EnumItem::AtpBlueprint,
    EnumItem::AtpBlueprintable,
    EnumItem::ConsistencyNeeds,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::ConsistencyNeedsBlueprintSet,
    EnumItem::PackageableElement,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::ConstantSpecification,
    EnumItem::PackageableElement,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::ConstantSpecificationMappingSet,
    EnumItem::PackageableElement,
    EnumItem::ConstraintTailoring,
    EnumItem::DataFormatElementReference,
    EnumItem::DataFormatElementScope,
    EnumItem::SpecElementReference,
    EnumItem::SpecElementScope,
    EnumItem::ConsumedEventGroup,
    EnumItem::CollectableElement,
    EnumItem::ConsumedProvidedServiceInstanceGroup,
    EnumItem::FibexElement,
    EnumItem::PackageableElement,
    EnumItem::AbstractServiceInstance,
    EnumItem::ConsumedServiceInstance,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::ContainerIPdu,
    EnumItem::FibexElement,
    EnumItem::IPdu,
    EnumItem::PackageableElement,
    EnumItem::Pdu,
    EnumItem::UploadableDesignElement,
    EnumItem::UploadablePackageElement,
    EnumItem::CollectableElement,
    EnumItem::CouplingElement,
    EnumItem::FibexElement,
    EnumItem::PackageableElement,
    EnumItem::CouplingElementAbstractDetails,
    EnumItem::CouplingElementSwitchDetails,
    EnumItem::CouplingPort,
    EnumItem::CouplingPortAbstractShaper,
    EnumItem::CouplingPortAsynchronousTrafficShaper,
    EnumItem::CouplingPortAbstractShaper,
    EnumItem::CouplingPortCreditBasedShaper,
    EnumItem::CouplingPortAbstractShaper,
    EnumItem::CouplingPortEnhancedTrafficShaper,
    EnumItem::CouplingPortFifo,
    EnumItem::CouplingPortStructuralElement,
    EnumItem::CouplingPortScheduler,
    EnumItem::CouplingPortStructuralElement,
    EnumItem::CouplingPortShaper,
    EnumItem::CouplingPortStructuralElement,
    EnumItem::CouplingPortTrafficClassAssignment,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::CpSoftwareCluster,
    EnumItem::PackageableElement,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::CpSoftwareClusterBinaryManifestDescriptor,
    EnumItem::PackageableElement,
    EnumItem::CpSoftwareClusterCommunicationResource,
    EnumItem::CpSoftwareClusterResource,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::CpSoftwareClusterMappingSet,
    EnumItem::PackageableElement,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::CpSoftwareClusterResourcePool,
    EnumItem::PackageableElement,
    EnumItem::CpSoftwareClusterResourceToApplicationPartitionMapping,
    EnumItem::CpSoftwareClusterResource,
    EnumItem::CpSoftwareClusterServiceResource,
    EnumItem::CpSoftwareClusterToApplicationPartitionMapping,
    EnumItem::CpSoftwareClusterToEcuInstanceMapping,
    EnumItem::CpSoftwareClusterToResourceMapping,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::CpSwClusterResourceToDiagDataElemMapping,
    EnumItem::DiagnosticCommonElement,
    EnumItem::DiagnosticMapping,
    EnumItem::PackageableElement,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::CpSwClusterResourceToDiagFunctionIdMapping,
    EnumItem::DiagnosticCommonElement,
    EnumItem::DiagnosticMapping,
    EnumItem::PackageableElement,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::CpSwClusterToDiagEventMapping,
    EnumItem::DiagnosticCommonElement,
    EnumItem::DiagnosticMapping,
    EnumItem::PackageableElement,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::CpSwClusterToDiagRoutineSubfunctionMapping,
    EnumItem::DiagnosticCommonElement,
    EnumItem::DiagnosticMapping,
    EnumItem::PackageableElement,
    EnumItem::AbstractImplementationDataType,
    EnumItem::ArElement,
    EnumItem::AtpBlueprint,
    EnumItem::AtpBlueprintable,
    EnumItem::AtpClassifier,
    EnumItem::AtpType,
    EnumItem::AutosarDataType,
    EnumItem::CollectableElement,
    EnumItem::CppImplementationDataType,
    EnumItem::PackageableElement,
    EnumItem::AbstractImplementationDataTypeElement,
    EnumItem::AtpClassifier,
    EnumItem::AtpFeature,
    EnumItem::AtpStructureElement,
    EnumItem::CppImplementationDataTypeContextTarget,
    EnumItem::CppImplementationDataTypeElement,
    EnumItem::CryptoCertificate,
    EnumItem::ArElement,
    EnumItem::AtpBlueprint,
    EnumItem::AtpBlueprintable,
    EnumItem::AtpClassifier,
    EnumItem::AtpType,
    EnumItem::CollectableElement,
    EnumItem::CryptoCertificateInterface,
    EnumItem::CryptoInterface,
    EnumItem::PackageableElement,
    EnumItem::PortInterface,
    EnumItem::CryptoCertificateKeySlotNeeds,
    EnumItem::CryptoNeeds,
    EnumItem::ServiceNeeds,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::CryptoCertificateToPortPrototypeMapping,
    EnumItem::PackageableElement,
    EnumItem::UploadableDeploymentElement,
    EnumItem::UploadablePackageElement,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::CryptoDriver,
    EnumItem::PackageableElement,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::CryptoEllipticCurveProps,
    EnumItem::PackageableElement,
    EnumItem::CryptoJob,
    EnumItem::CryptoKeyManagementNeeds,
    EnumItem::ServiceNeeds,
    EnumItem::CryptoKeySlot,
    EnumItem::AbstractCryptoKeySlotInterface,
    EnumItem::ArElement,
    EnumItem::AtpBlueprint,
    EnumItem::AtpBlueprintable,
    EnumItem::AtpClassifier,
    EnumItem::AtpType,
    EnumItem::CollectableElement,
    EnumItem::CryptoInterface,
    EnumItem::CryptoKeySlotClientInterface,
    EnumItem::PackageableElement,
    EnumItem::PortInterface,
    EnumItem::CryptoKeySlotDesign,
    EnumItem::AbstractCryptoKeySlotInterface,
    EnumItem::ArElement,
    EnumItem::AtpBlueprint,
    EnumItem::AtpBlueprintable,
    EnumItem::AtpClassifier,
    EnumItem::AtpType,
    EnumItem::CollectableElement,
    EnumItem::CryptoInterface,
    EnumItem::CryptoKeySlotInterface,
    EnumItem::PackageableElement,
    EnumItem::PortInterface,
    EnumItem::AbstractCryptoKeySlotToPortPrototypeMapping,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::CryptoKeySlotToClientPortPrototypeMapping,
    EnumItem::PackageableElement,
    EnumItem::UploadableDeploymentElement,
    EnumItem::UploadablePackageElement,
    EnumItem::AbstractCryptoKeySlotToPortPrototypeMapping,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::CryptoKeySlotToPortPrototypeMapping,
    EnumItem::PackageableElement,
    EnumItem::UploadableDeploymentElement,
    EnumItem::UploadablePackageElement,
    EnumItem::CryptoKeySlotUsageDesign,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::CryptoKeySlotUsageDesignMapping,
    EnumItem::PackageableElement,
    EnumItem::UploadableDesignElement,
    EnumItem::UploadablePackageElement,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::CryptoKeySlotUserDesign,
    EnumItem::PackageableElement,
    EnumItem::UploadableDesignElement,
    EnumItem::UploadablePackageElement,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::CryptoKeySlotUserDesignMapping,
    EnumItem::PackageableElement,
    EnumItem::UploadableDesignElement,
    EnumItem::UploadablePackageElement,
    EnumItem::AdaptiveModuleInstantiation,
    EnumItem::AtpClassifier,
    EnumItem::AtpFeature,
    EnumItem::AtpStructureElement,
    EnumItem::CryptoModuleInstantiation,
    EnumItem::NonOsModuleInstantiation,
    EnumItem::ArElement,
    EnumItem::AtpBlueprint,
    EnumItem::AtpBlueprintable,
    EnumItem::CollectableElement,
    EnumItem::CryptoNeed,
    EnumItem::PackageableElement,
    EnumItem::CryptoNeedToCryptoJobMapping,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::CryptoNeedToPortPrototypeMapping,
    EnumItem::PackageableElement,
    EnumItem::CryptoPrimitive,
    EnumItem::CryptoProvider,
    EnumItem::ArElement,
    EnumItem::AtpBlueprint,
    EnumItem::AtpBlueprintable,
    EnumItem::AtpClassifier,
    EnumItem::AtpType,
    EnumItem::CollectableElement,
    EnumItem::CryptoInterface,
    EnumItem::CryptoProviderInterface,
    EnumItem::PackageableElement,
    EnumItem::PortInterface,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::CryptoProviderToPortPrototypeMapping,
    EnumItem::PackageableElement,
    EnumItem::UploadableDeploymentElement,
    EnumItem::UploadablePackageElement,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::CryptoServiceCertificate,
    EnumItem::PackageableElement,
    EnumItem::UploadableDesignElement,
    EnumItem::UploadablePackageElement,
    EnumItem::CryptoServiceJobNeeds,
    EnumItem::ServiceNeeds,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::CryptoServiceKey,
    EnumItem::PackageableElement,
    EnumItem::UploadableDesignElement,
    EnumItem::UploadablePackageElement,
    EnumItem::CryptoServiceNeeds,
    EnumItem::ServiceNeeds,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::CryptoServicePrimitive,
    EnumItem::PackageableElement,
    EnumItem::UploadableDesignElement,
    EnumItem::UploadablePackageElement,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::CryptoServiceQueue,
    EnumItem::PackageableElement,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::CryptoSignatureScheme,
    EnumItem::PackageableElement,
    EnumItem::ArElement,
    EnumItem::AtpBlueprint,
    EnumItem::AtpBlueprintable,
    EnumItem::AtpClassifier,
    EnumItem::AtpType,
    EnumItem::CollectableElement,
    EnumItem::CryptoInterface,
    EnumItem::CryptoTrustMasterInterface,
    EnumItem::PackageableElement,
    EnumItem::PortInterface,
    EnumItem::AbstractImplementationDataType,
    EnumItem::ArElement,
    EnumItem::AtpBlueprint,
    EnumItem::AtpBlueprintable,
    EnumItem::AtpClassifier,
    EnumItem::AtpType,
    EnumItem::AutosarDataType,
    EnumItem::CollectableElement,
    EnumItem::CppImplementationDataType,
    EnumItem::CppImplementationDataTypeContextTarget,
    EnumItem::CustomCppImplementationDataType,
    EnumItem::PackageableElement,
    EnumItem::ArElement,
    EnumItem::AtpBlueprint,
    EnumItem::AtpBlueprintable,
    EnumItem::CollectableElement,
    EnumItem::DataConstr,
    EnumItem::PackageableElement,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::DataExchangePoint,
    EnumItem::PackageableElement,
    EnumItem::AtpClassifier,
    EnumItem::AtpFeature,
    EnumItem::AtpStructureElement,
    EnumItem::DataPrototypeGroup,
    EnumItem::DataPrototypeTransformationPropsIdent,
    EnumItem::AbstractEvent,
    EnumItem::AtpClassifier,
    EnumItem::AtpFeature,
    EnumItem::AtpStructureElement,
    EnumItem::DataReceiveErrorEvent,
    EnumItem::RteEvent,
    EnumItem::AbstractEvent,
    EnumItem::AtpClassifier,
    EnumItem::AtpFeature,
    EnumItem::AtpStructureElement,
    EnumItem::DataReceivedEvent,
    EnumItem::RteEvent,
    EnumItem::AbstractEvent,
    EnumItem::AtpClassifier,
    EnumItem::AtpFeature,
    EnumItem::AtpStructureElement,
    EnumItem::DataSendCompletedEvent,
    EnumItem::RteEvent,
    EnumItem::DataTransformation,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::DataTransformationSet,
    EnumItem::PackageableElement,
    EnumItem::ArElement,
    EnumItem::AtpBlueprint,
    EnumItem::AtpBlueprintable,
    EnumItem::CollectableElement,
    EnumItem::DataTypeMappingSet,
    EnumItem::PackageableElement,
    EnumItem::AbstractEvent,
    EnumItem::AtpClassifier,
    EnumItem::AtpFeature,
    EnumItem::AtpStructureElement,
    EnumItem::DataWriteCompletedEvent,
    EnumItem::RteEvent,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::DcmIPdu,
    EnumItem::FibexElement,
    EnumItem::IPdu,
    EnumItem::PackageableElement,
    EnumItem::Pdu,
    EnumItem::UploadableDesignElement,
    EnumItem::UploadablePackageElement,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::DdsCpConfig,
    EnumItem::PackageableElement,
    EnumItem::AbstractServiceInstance,
    EnumItem::DdsCpConsumedServiceInstance,
    EnumItem::DdsCpServiceInstance,
    EnumItem::DdsCpDomain,
    EnumItem::DdsCpPartition,
    EnumItem::AbstractServiceInstance,
    EnumItem::DdsCpProvidedServiceInstance,
    EnumItem::DdsCpServiceInstance,
    EnumItem::DdsCpQosProfile,
    EnumItem::DdsCpTopic,
    EnumItem::DdsDomainRange,
    EnumItem::DdsEventDeployment,
    EnumItem::ServiceEventDeployment,
    EnumItem::DdsFieldDeployment,
    EnumItem::ServiceFieldDeployment,
    EnumItem::DdsMethodDeployment,
    EnumItem::ServiceMethodDeployment,
    EnumItem::AdaptivePlatformServiceInstance,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::DdsProvidedServiceInstance,
    EnumItem::PackageableElement,
    EnumItem::ProvidedApServiceInstance,
    EnumItem::UploadableDesignElement,
    EnumItem::UploadablePackageElement,
    EnumItem::AdaptivePlatformServiceInstance,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::DdsRequiredServiceInstance,
    EnumItem::PackageableElement,
    EnumItem::RequiredApServiceInstance,
    EnumItem::UploadableDesignElement,
    EnumItem::UploadablePackageElement,
    EnumItem::DdsRpcServiceDeployment,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::DdsSecureComProps,
    EnumItem::PackageableElement,
    EnumItem::SecureComProps,
    EnumItem::UploadableDesignElement,
    EnumItem::UploadablePackageElement,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::DdsSecureGovernance,
    EnumItem::PackageableElement,
    EnumItem::UploadableDesignElement,
    EnumItem::UploadablePackageElement,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::DdsServiceInstanceToMachineMapping,
    EnumItem::PackageableElement,
    EnumItem::ServiceInstanceToMachineMapping,
    EnumItem::UploadableDesignElement,
    EnumItem::UploadablePackageElement,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::DdsServiceInterfaceDeployment,
    EnumItem::PackageableElement,
    EnumItem::ServiceInterfaceDeployment,
    EnumItem::UploadableDesignElement,
    EnumItem::UploadablePackageElement,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::DdsTopicAccessRule,
    EnumItem::PackageableElement,
    EnumItem::UploadableDesignElement,
    EnumItem::UploadablePackageElement,
    EnumItem::DeadlineSupervision,
    EnumItem::PhmSupervision,
    EnumItem::DefItem,
    EnumItem::AtpClassifier,
    EnumItem::AtpFeature,
    EnumItem::AtpStructureElement,
    EnumItem::DelegationSwConnector,
    EnumItem::SwConnector,
    EnumItem::DependencyOnArtifact,
    EnumItem::AdaptiveModuleInstantiation,
    EnumItem::ArElement,
    EnumItem::AtpClassifier,
    EnumItem::AtpFeature,
    EnumItem::AtpStructureElement,
    EnumItem::CollectableElement,
    EnumItem::DeterministicClient,
    EnumItem::DeterministicSyncInstantiation,
    EnumItem::NonOsModuleInstantiation,
    EnumItem::PackageableElement,
    EnumItem::UploadablePackageElement,
    EnumItem::DeterministicClientResourceNeeds,
    EnumItem::AdaptiveModuleInstantiation,
    EnumItem::AtpClassifier,
    EnumItem::AtpFeature,
    EnumItem::AtpStructureElement,
    EnumItem::DeterministicSyncInstantiation,
    EnumItem::DeterministicSyncMaster,
    EnumItem::NonOsModuleInstantiation,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::DeterministicSyncMasterToTimeBaseConsumerMapping,
    EnumItem::FunctionalClusterInteractsWithFunctionalClusterMapping,
    EnumItem::PackageableElement,
    EnumItem::UploadablePackageElement,
    EnumItem::DevelopmentError,
    EnumItem::TracedFailure,
    EnumItem::DiagEventDebounceAlgorithm,
    EnumItem::DiagEventDebounceCounterBased,
    EnumItem::DiagEventDebounceAlgorithm,
    EnumItem::DiagEventDebounceMonitorInternal,
    EnumItem::DiagEventDebounceAlgorithm,
    EnumItem::DiagEventDebounceTimeBased,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::DiagnosticAccessPermission,
    EnumItem::DiagnosticCommonElement,
    EnumItem::PackageableElement,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::DiagnosticAging,
    EnumItem::DiagnosticCommonElement,
    EnumItem::PackageableElement,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::DiagnosticAuthRole,
    EnumItem::DiagnosticCommonElement,
    EnumItem::PackageableElement,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::DiagnosticAuthTransmitCertificate,
    EnumItem::DiagnosticAuthentication,
    EnumItem::DiagnosticCommonElement,
    EnumItem::DiagnosticServiceInstance,
    EnumItem::PackageableElement,
    EnumItem::DiagnosticAuthTransmitCertificateEvaluation,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::DiagnosticAuthTransmitCertificateMapping,
    EnumItem::DiagnosticCommonElement,
    EnumItem::DiagnosticMapping,
    EnumItem::PackageableElement,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::DiagnosticAuthenticationClass,
    EnumItem::DiagnosticCommonElement,
    EnumItem::DiagnosticServiceClass,
    EnumItem::PackageableElement,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::DiagnosticAuthentication,
    EnumItem::DiagnosticAuthenticationConfiguration,
    EnumItem::DiagnosticCommonElement,
    EnumItem::DiagnosticServiceInstance,
    EnumItem::PackageableElement,
    EnumItem::ArElement,
    EnumItem::AtpBlueprint,
    EnumItem::AtpBlueprintable,
    EnumItem::AtpClassifier,
    EnumItem::AtpType,
    EnumItem::CollectableElement,
    EnumItem::DiagnosticAuthenticationInterface,
    EnumItem::DiagnosticPortInterface,
    EnumItem::PackageableElement,
    EnumItem::PortInterface,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::DiagnosticAuthenticationPortMapping,
    EnumItem::DiagnosticCommonElement,
    EnumItem::DiagnosticMapping,
    EnumItem::DiagnosticSwMapping,
    EnumItem::PackageableElement,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::DiagnosticClearCondition,
    EnumItem::DiagnosticCommonElement,
    EnumItem::DiagnosticCondition,
    EnumItem::PackageableElement,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::DiagnosticClearConditionGroup,
    EnumItem::DiagnosticCommonElement,
    EnumItem::DiagnosticConditionGroup,
    EnumItem::PackageableElement,
    EnumItem::DiagnosticCapabilityElement,
    EnumItem::DiagnosticClearConditionNeeds,
    EnumItem::ServiceNeeds,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::DiagnosticClearConditionPortMapping,
    EnumItem::DiagnosticCommonElement,
    EnumItem::DiagnosticMapping,
    EnumItem::DiagnosticSwMapping,
    EnumItem::PackageableElement,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::DiagnosticClearDiagnosticInformation,
    EnumItem::DiagnosticCommonElement,
    EnumItem::DiagnosticServiceInstance,
    EnumItem::PackageableElement,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::DiagnosticClearDiagnosticInformationClass,
    EnumItem::DiagnosticCommonElement,
    EnumItem::DiagnosticServiceClass,
    EnumItem::PackageableElement,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::DiagnosticClearResetEmissionRelatedInfo,
    EnumItem::DiagnosticCommonElement,
    EnumItem::DiagnosticServiceInstance,
    EnumItem::PackageableElement,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::DiagnosticClearResetEmissionRelatedInfoClass,
    EnumItem::DiagnosticCommonElement,
    EnumItem::DiagnosticServiceClass,
    EnumItem::PackageableElement,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::DiagnosticComControl,
    EnumItem::DiagnosticCommonElement,
    EnumItem::DiagnosticServiceInstance,
    EnumItem::PackageableElement,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::DiagnosticComControlClass,
    EnumItem::DiagnosticCommonElement,
    EnumItem::DiagnosticServiceClass,
    EnumItem::PackageableElement,
    EnumItem::ArElement,
    EnumItem::AtpBlueprint,
    EnumItem::AtpBlueprintable,
    EnumItem::AtpClassifier,
    EnumItem::AtpType,
    EnumItem::CollectableElement,
    EnumItem::DiagnosticComControlInterface,
    EnumItem::DiagnosticPortInterface,
    EnumItem::PackageableElement,
    EnumItem::PortInterface,
    EnumItem::DiagnosticCapabilityElement,
    EnumItem::DiagnosticCommunicationManagerNeeds,
    EnumItem::ServiceNeeds,
    EnumItem::DiagnosticCapabilityElement,
    EnumItem::DiagnosticComponentNeeds,
    EnumItem::ServiceNeeds,
    EnumItem::ArElement,
    EnumItem::AtpBlueprint,
    EnumItem::AtpBlueprintable,
    EnumItem::AtpClassifier,
    EnumItem::AtpType,
    EnumItem::CollectableElement,
    EnumItem::DiagnosticConditionInterface,
    EnumItem::DiagnosticPortInterface,
    EnumItem::PackageableElement,
    EnumItem::PortInterface,
    EnumItem::DiagnosticConnectedIndicator,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::DiagnosticConnection,
    EnumItem::PackageableElement,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::DiagnosticContributionSet,
    EnumItem::PackageableElement,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::DiagnosticCommonElement,
    EnumItem::DiagnosticControlDtcSetting,
    EnumItem::DiagnosticServiceInstance,
    EnumItem::PackageableElement,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::DiagnosticCommonElement,
    EnumItem::DiagnosticControlDtcSettingClass,
    EnumItem::DiagnosticServiceClass,
    EnumItem::PackageableElement,
    EnumItem::DiagnosticCapabilityElement,
    EnumItem::DiagnosticControlNeeds,
    EnumItem::ServiceNeeds,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::DiagnosticCommonElement,
    EnumItem::DiagnosticCustomServiceClass,
    EnumItem::DiagnosticServiceClass,
    EnumItem::PackageableElement,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::DiagnosticCommonElement,
    EnumItem::DiagnosticCustomServiceInstance,
    EnumItem::DiagnosticServiceInstance,
    EnumItem::PackageableElement,
    EnumItem::DiagnosticDataElement,
    EnumItem::ArElement,
    EnumItem::AtpBlueprint,
    EnumItem::AtpBlueprintable,
    EnumItem::AtpClassifier,
    EnumItem::AtpType,
    EnumItem::CollectableElement,
    EnumItem::DiagnosticAbstractDataIdentifierInterface,
    EnumItem::DiagnosticDataElementInterface,
    EnumItem::DiagnosticPortInterface,
    EnumItem::PackageableElement,
    EnumItem::PortInterface,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::DiagnosticAbstractDataIdentifier,
    EnumItem::DiagnosticCommonElement,
    EnumItem::DiagnosticDataIdentifier,
    EnumItem::PackageableElement,
    EnumItem::ArElement,
    EnumItem::AtpBlueprint,
    EnumItem::AtpBlueprintable,
    EnumItem::AtpClassifier,
    EnumItem::AtpType,
    EnumItem::CollectableElement,
    EnumItem::DiagnosticAbstractDataIdentifierInterface,
    EnumItem::DiagnosticDataIdentifierGenericInterface,
    EnumItem::DiagnosticPortInterface,
    EnumItem::PackageableElement,
    EnumItem::PortInterface,
    EnumItem::ArElement,
    EnumItem::AtpBlueprint,
    EnumItem::AtpBlueprintable,
    EnumItem::AtpClassifier,
    EnumItem::AtpType,
    EnumItem::CollectableElement,
    EnumItem::DiagnosticAbstractDataIdentifierInterface,
    EnumItem::DiagnosticDataIdentifierInterface,
    EnumItem::DiagnosticPortInterface,
    EnumItem::PackageableElement,
    EnumItem::PortInterface,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::DiagnosticCommonElement,
    EnumItem::DiagnosticDataIdentifierSet,
    EnumItem::PackageableElement,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::DiagnosticCommonElement,
    EnumItem::DiagnosticDataPortMapping,
    EnumItem::DiagnosticMapping,
    EnumItem::DiagnosticSwMapping,
    EnumItem::PackageableElement,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::DiagnosticCommonElement,
    EnumItem::DiagnosticDataTransfer,
    EnumItem::DiagnosticMemoryByAddress,
    EnumItem::DiagnosticServiceInstance,
    EnumItem::PackageableElement,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::DiagnosticCommonElement,
    EnumItem::DiagnosticDataTransferClass,
    EnumItem::DiagnosticServiceClass,
    EnumItem::PackageableElement,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::DiagnosticAuthentication,
    EnumItem::DiagnosticCommonElement,
    EnumItem::DiagnosticDeAuthentication,
    EnumItem::DiagnosticServiceInstance,
    EnumItem::PackageableElement,
    EnumItem::DiagnosticDebounceAlgorithmProps,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::DiagnosticCommonElement,
    EnumItem::DiagnosticDemProvidedDataMapping,
    EnumItem::DiagnosticMapping,
    EnumItem::PackageableElement,
    EnumItem::ArElement,
    EnumItem::AtpBlueprint,
    EnumItem::AtpBlueprintable,
    EnumItem::AtpClassifier,
    EnumItem::AtpType,
    EnumItem::CollectableElement,
    EnumItem::DiagnosticDoIpActivationLineInterface,
    EnumItem::DiagnosticPortInterface,
    EnumItem::PackageableElement,
    EnumItem::PortInterface,
    EnumItem::AbstractDoIpPortMapping,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::DiagnosticCommonElement,
    EnumItem::DiagnosticDoIpActivationLinePortMapping,
    EnumItem::DiagnosticMapping,
    EnumItem::DiagnosticSwMapping,
    EnumItem::PackageableElement,
    EnumItem::ArElement,
    EnumItem::AtpBlueprint,
    EnumItem::AtpBlueprintable,
    EnumItem::AtpClassifier,
    EnumItem::AtpType,
    EnumItem::CollectableElement,
    EnumItem::DiagnosticDoIpEntityIdentificationInterface,
    EnumItem::DiagnosticPortInterface,
    EnumItem::PackageableElement,
    EnumItem::PortInterface,
    EnumItem::AbstractDoIpPortMapping,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::DiagnosticCommonElement,
    EnumItem::DiagnosticDoIpEntityIdentificationPortMapping,
    EnumItem::DiagnosticMapping,
    EnumItem::DiagnosticSwMapping,
    EnumItem::PackageableElement,
    EnumItem::ArElement,
    EnumItem::AtpBlueprint,
    EnumItem::AtpBlueprintable,
    EnumItem::AtpClassifier,
    EnumItem::AtpType,
    EnumItem::CollectableElement,
    EnumItem::DiagnosticDoIpGroupIdentificationInterface,
    EnumItem::DiagnosticPortInterface,
    EnumItem::PackageableElement,
    EnumItem::PortInterface,
    EnumItem::AbstractDoIpPortMapping,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::DiagnosticCommonElement,
    EnumItem::DiagnosticDoIpGroupIdentificationPortMapping,
    EnumItem::DiagnosticMapping,
    EnumItem::DiagnosticSwMapping,
    EnumItem::PackageableElement,
    EnumItem::ArElement,
    EnumItem::AtpBlueprint,
    EnumItem::AtpBlueprintable,
    EnumItem::AtpClassifier,
    EnumItem::AtpType,
    EnumItem::CollectableElement,
    EnumItem::DiagnosticDoIpPowerModeInterface,
    EnumItem::DiagnosticPortInterface,
    EnumItem::PackageableElement,
    EnumItem::PortInterface,
    EnumItem::AbstractDoIpPortMapping,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::DiagnosticCommonElement,
    EnumItem::DiagnosticDoIpPowerModePortMapping,
    EnumItem::DiagnosticMapping,
    EnumItem::DiagnosticSwMapping,
    EnumItem::PackageableElement,
    EnumItem::ArElement,
    EnumItem::AtpBlueprint,
    EnumItem::AtpBlueprintable,
    EnumItem::AtpClassifier,
    EnumItem::AtpType,
    EnumItem::CollectableElement,
    EnumItem::DiagnosticDoIpTriggerVehicleAnnouncementInterface,
    EnumItem::DiagnosticPortInterface,
    EnumItem::PackageableElement,
    EnumItem::PortInterface,
    EnumItem::AbstractDoIpPortMapping,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::DiagnosticCommonElement,
    EnumItem::DiagnosticDoIpTriggerVehicleAnnouncementPortMapping,
    EnumItem::DiagnosticMapping,
    EnumItem::DiagnosticSwMapping,
    EnumItem::PackageableElement,
    EnumItem::ArElement,
    EnumItem::AtpBlueprint,
    EnumItem::AtpBlueprintable,
    EnumItem::AtpClassifier,
    EnumItem::AtpType,
    EnumItem::CollectableElement,
    EnumItem::DiagnosticDownloadInterface,
    EnumItem::DiagnosticPortInterface,
    EnumItem::PackageableElement,
    EnumItem::PortInterface,
    EnumItem::ArElement,
    EnumItem::AtpBlueprint,
    EnumItem::AtpBlueprintable,
    EnumItem::AtpClassifier,
    EnumItem::AtpType,
    EnumItem::CollectableElement,
    EnumItem::DiagnosticDtcInformationInterface,
    EnumItem::DiagnosticPortInterface,
    EnumItem::PackageableElement,
    EnumItem::PortInterface,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::DiagnosticAbstractDataIdentifier,
    EnumItem::DiagnosticCommonElement,
    EnumItem::DiagnosticDynamicDataIdentifier,
    EnumItem::PackageableElement,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::DiagnosticCommonElement,
    EnumItem::DiagnosticDynamicallyDefineDataIdentifier,
    EnumItem::DiagnosticServiceInstance,
    EnumItem::PackageableElement,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::DiagnosticCommonElement,
    EnumItem::DiagnosticDynamicallyDefineDataIdentifierClass,
    EnumItem::DiagnosticServiceClass,
    EnumItem::PackageableElement,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::DiagnosticCommonElement,
    EnumItem::DiagnosticEcuInstanceProps,
    EnumItem::PackageableElement,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::DiagnosticCommonElement,
    EnumItem::DiagnosticEcuReset,
    EnumItem::DiagnosticServiceInstance,
    EnumItem::PackageableElement,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::DiagnosticCommonElement,
    EnumItem::DiagnosticEcuResetClass,
    EnumItem::DiagnosticServiceClass,
    EnumItem::PackageableElement,
    EnumItem::ArElement,
    EnumItem::AtpBlueprint,
    EnumItem::AtpBlueprintable,
    EnumItem::AtpClassifier,
    EnumItem::AtpType,
    EnumItem::CollectableElement,
    EnumItem::DiagnosticEcuResetInterface,
    EnumItem::DiagnosticPortInterface,
    EnumItem::PackageableElement,
    EnumItem::PortInterface,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::DiagnosticCommonElement,
    EnumItem::DiagnosticCondition,
    EnumItem::DiagnosticEnableCondition,
    EnumItem::PackageableElement,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::DiagnosticCommonElement,
    EnumItem::DiagnosticConditionGroup,
    EnumItem::DiagnosticEnableConditionGroup,
    EnumItem::PackageableElement,
    EnumItem::DiagnosticCapabilityElement,
    EnumItem::DiagnosticEnableConditionNeeds,
    EnumItem::ServiceNeeds,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::DiagnosticCommonElement,
    EnumItem::DiagnosticEnableConditionPortMapping,
    EnumItem::DiagnosticMapping,
    EnumItem::DiagnosticSwMapping,
    EnumItem::PackageableElement,
    EnumItem::DiagnosticEnvBswModeElement,
    EnumItem::DiagnosticEnvModeElement,
    EnumItem::DiagnosticEnvModeElement,
    EnumItem::DiagnosticEnvSwcModeElement,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::DiagnosticCommonElement,
    EnumItem::DiagnosticEnvironmentalCondition,
    EnumItem::PackageableElement,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::DiagnosticCommonElement,
    EnumItem::DiagnosticEvent,
    EnumItem::PackageableElement,
    EnumItem::DiagnosticCapabilityElement,
    EnumItem::DiagnosticEventInfoNeeds,
    EnumItem::ServiceNeeds,
    EnumItem::ArElement,
    EnumItem::AtpBlueprint,
    EnumItem::AtpBlueprintable,
    EnumItem::AtpClassifier,
    EnumItem::AtpType,
    EnumItem::CollectableElement,
    EnumItem::DiagnosticEventInterface,
    EnumItem::DiagnosticPortInterface,
    EnumItem::PackageableElement,
    EnumItem::PortInterface,
    EnumItem::DiagnosticCapabilityElement,
    EnumItem::DiagnosticEventManagerNeeds,
    EnumItem::ServiceNeeds,
    EnumItem::DiagnosticCapabilityElement,
    EnumItem::DiagnosticEventNeeds,
    EnumItem::ServiceNeeds,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::DiagnosticCommonElement,
    EnumItem::DiagnosticEventPortMapping,
    EnumItem::DiagnosticMapping,
    EnumItem::DiagnosticSwMapping,
    EnumItem::PackageableElement,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::DiagnosticCommonElement,
    EnumItem::DiagnosticEventToDebounceAlgorithmMapping,
    EnumItem::DiagnosticMapping,
    EnumItem::PackageableElement,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::DiagnosticCommonElement,
    EnumItem::DiagnosticEventToEnableConditionGroupMapping,
    EnumItem::DiagnosticMapping,
    EnumItem::PackageableElement,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::DiagnosticCommonElement,
    EnumItem::DiagnosticEventToOperationCycleMapping,
    EnumItem::DiagnosticMapping,
    EnumItem::PackageableElement,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::DiagnosticCommonElement,
    EnumItem::DiagnosticEventToSecurityEventMapping,
    EnumItem::DiagnosticMapping,
    EnumItem::PackageableElement,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::DiagnosticCommonElement,
    EnumItem::DiagnosticEventToStorageConditionGroupMapping,
    EnumItem::DiagnosticMapping,
    EnumItem::PackageableElement,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::DiagnosticCommonElement,
    EnumItem::DiagnosticEventToTroubleCodeJ1939Mapping,
    EnumItem::DiagnosticMapping,
    EnumItem::PackageableElement,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::DiagnosticCommonElement,
    EnumItem::DiagnosticEventToTroubleCodeUdsMapping,
    EnumItem::DiagnosticMapping,
    EnumItem::PackageableElement,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::DiagnosticCommonElement,
    EnumItem::DiagnosticExtendedDataRecord,
    EnumItem::PackageableElement,
    EnumItem::ArElement,
    EnumItem::AtpBlueprint,
    EnumItem::AtpBlueprintable,
    EnumItem::AtpClassifier,
    EnumItem::AtpType,
    EnumItem::CollectableElement,
    EnumItem::DiagnosticExternalAuthenticationInterface,
    EnumItem::DiagnosticPortInterface,
    EnumItem::PackageableElement,
    EnumItem::PortInterface,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::DiagnosticCommonElement,
    EnumItem::DiagnosticExternalAuthenticationPortMapping,
    EnumItem::DiagnosticMapping,
    EnumItem::DiagnosticSwMapping,
    EnumItem::PackageableElement,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::DiagnosticAbstractAliasEvent,
    EnumItem::DiagnosticCommonElement,
    EnumItem::DiagnosticFimAliasEvent,
    EnumItem::PackageableElement,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::DiagnosticAbstractAliasEvent,
    EnumItem::DiagnosticCommonElement,
    EnumItem::DiagnosticFimAliasEventGroup,
    EnumItem::PackageableElement,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::DiagnosticCommonElement,
    EnumItem::DiagnosticFimAliasEventGroupMapping,
    EnumItem::DiagnosticMapping,
    EnumItem::PackageableElement,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::DiagnosticCommonElement,
    EnumItem::DiagnosticFimAliasEventMapping,
    EnumItem::DiagnosticMapping,
    EnumItem::PackageableElement,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::DiagnosticCommonElement,
    EnumItem::DiagnosticFimEventGroup,
    EnumItem::PackageableElement,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::DiagnosticCommonElement,
    EnumItem::DiagnosticFimFunctionMapping,
    EnumItem::DiagnosticMapping,
    EnumItem::DiagnosticSwMapping,
    EnumItem::PackageableElement,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::DiagnosticCommonElement,
    EnumItem::DiagnosticFreezeFrame,
    EnumItem::PackageableElement,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::DiagnosticCommonElement,
    EnumItem::DiagnosticFunctionIdentifier,
    EnumItem::PackageableElement,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::DiagnosticCommonElement,
    EnumItem::DiagnosticFunctionIdentifierInhibit,
    EnumItem::PackageableElement,
    EnumItem::DiagnosticFunctionInhibitSource,
    EnumItem::ArElement,
    EnumItem::AtpBlueprint,
    EnumItem::AtpBlueprintable,
    EnumItem::AtpClassifier,
    EnumItem::AtpType,
    EnumItem::CollectableElement,
    EnumItem::DiagnosticGenericUdsInterface,
    EnumItem::DiagnosticPortInterface,
    EnumItem::PackageableElement,
    EnumItem::PortInterface,
    EnumItem::DiagnosticCapabilityElement,
    EnumItem::DiagnosticGenericUdsNeeds,
    EnumItem::ServiceNeeds,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::DiagnosticCommonElement,
    EnumItem::DiagnosticGenericUdsPortMapping,
    EnumItem::DiagnosticMapping,
    EnumItem::DiagnosticSwMapping,
    EnumItem::PackageableElement,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::DiagnosticCommonElement,
    EnumItem::DiagnosticIndicator,
    EnumItem::PackageableElement,
    EnumItem::ArElement,
    EnumItem::AtpBlueprint,
    EnumItem::AtpBlueprintable,
    EnumItem::AtpClassifier,
    EnumItem::AtpType,
    EnumItem::CollectableElement,
    EnumItem::DiagnosticIndicatorInterface,
    EnumItem::DiagnosticPortInterface,
    EnumItem::PackageableElement,
    EnumItem::PortInterface,
    EnumItem::DiagnosticCapabilityElement,
    EnumItem::DiagnosticIndicatorNeeds,
    EnumItem::ServiceNeeds,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::DiagnosticCommonElement,
    EnumItem::DiagnosticIndicatorPortMapping,
    EnumItem::DiagnosticMapping,
    EnumItem::DiagnosticSwMapping,
    EnumItem::PackageableElement,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::DiagnosticCommonElement,
    EnumItem::DiagnosticInfoType,
    EnumItem::PackageableElement,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::DiagnosticCommonElement,
    EnumItem::DiagnosticInhibitSourceEventMapping,
    EnumItem::DiagnosticMapping,
    EnumItem::PackageableElement,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::DiagnosticCommonElement,
    EnumItem::DiagnosticIoControl,
    EnumItem::DiagnosticServiceInstance,
    EnumItem::PackageableElement,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::DiagnosticCommonElement,
    EnumItem::DiagnosticIoControlClass,
    EnumItem::DiagnosticServiceClass,
    EnumItem::PackageableElement,
    EnumItem::DiagnosticCapabilityElement,
    EnumItem::DiagnosticIoControlNeeds,
    EnumItem::ServiceNeeds,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::DiagnosticCommonElement,
    EnumItem::DiagnosticIumpr,
    EnumItem::PackageableElement,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::DiagnosticCommonElement,
    EnumItem::DiagnosticIumprDenominatorGroup,
    EnumItem::PackageableElement,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::DiagnosticCommonElement,
    EnumItem::DiagnosticIumprGroup,
    EnumItem::PackageableElement,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::DiagnosticCommonElement,
    EnumItem::DiagnosticIumprToFunctionIdentifierMapping,
    EnumItem::DiagnosticMapping,
    EnumItem::PackageableElement,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::DiagnosticCommonElement,
    EnumItem::DiagnosticJ1939ExpandedFreezeFrame,
    EnumItem::PackageableElement,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::DiagnosticCommonElement,
    EnumItem::DiagnosticJ1939FreezeFrame,
    EnumItem::PackageableElement,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::DiagnosticCommonElement,
    EnumItem::DiagnosticJ1939Node,
    EnumItem::PackageableElement,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::DiagnosticCommonElement,
    EnumItem::DiagnosticJ1939Spn,
    EnumItem::PackageableElement,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::DiagnosticCommonElement,
    EnumItem::DiagnosticJ1939SpnMapping,
    EnumItem::DiagnosticMapping,
    EnumItem::PackageableElement,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::DiagnosticCommonElement,
    EnumItem::DiagnosticJ1939SwMapping,
    EnumItem::DiagnosticMapping,
    EnumItem::DiagnosticSwMapping,
    EnumItem::PackageableElement,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::DiagnosticCommonElement,
    EnumItem::DiagnosticMapping,
    EnumItem::DiagnosticMasterToSlaveEventMapping,
    EnumItem::PackageableElement,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::DiagnosticMasterToSlaveEventMappingSet,
    EnumItem::PackageableElement,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::DiagnosticCommonElement,
    EnumItem::DiagnosticMeasurementIdentifier,
    EnumItem::PackageableElement,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::DiagnosticCommonElement,
    EnumItem::DiagnosticMemoryDestination,
    EnumItem::DiagnosticMemoryDestinationMirror,
    EnumItem::PackageableElement,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::DiagnosticCommonElement,
    EnumItem::DiagnosticMapping,
    EnumItem::DiagnosticMemoryDestinationPortMapping,
    EnumItem::DiagnosticSwMapping,
    EnumItem::PackageableElement,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::DiagnosticCommonElement,
    EnumItem::DiagnosticMemoryDestination,
    EnumItem::DiagnosticMemoryDestinationPrimary,
    EnumItem::PackageableElement,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::DiagnosticCommonElement,
    EnumItem::DiagnosticMemoryDestination,
    EnumItem::DiagnosticMemoryDestinationUserDefined,
    EnumItem::PackageableElement,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::DiagnosticCommonElement,
    EnumItem::DiagnosticMemoryIdentifier,
    EnumItem::PackageableElement,
    EnumItem::ArElement,
    EnumItem::AtpBlueprint,
    EnumItem::AtpBlueprintable,
    EnumItem::AtpClassifier,
    EnumItem::AtpType,
    EnumItem::CollectableElement,
    EnumItem::DiagnosticMonitorInterface,
    EnumItem::DiagnosticPortInterface,
    EnumItem::PackageableElement,
    EnumItem::PortInterface,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::DiagnosticCommonElement,
    EnumItem::DiagnosticMapping,
    EnumItem::DiagnosticMonitorPortMapping,
    EnumItem::DiagnosticSwMapping,
    EnumItem::PackageableElement,
    EnumItem::ArElement,
    EnumItem::AtpBlueprint,
    EnumItem::AtpBlueprintable,
    EnumItem::AtpClassifier,
    EnumItem::AtpType,
    EnumItem::CollectableElement,
    EnumItem::DiagnosticMultipleConditionInterface,
    EnumItem::DiagnosticMultipleResourceInterface,
    EnumItem::DiagnosticPortInterface,
    EnumItem::PackageableElement,
    EnumItem::PortInterface,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::DiagnosticCommonElement,
    EnumItem::DiagnosticMapping,
    EnumItem::DiagnosticMultipleConditionPortMapping,
    EnumItem::DiagnosticMultipleResourcePortMapping,
    EnumItem::DiagnosticSwMapping,
    EnumItem::PackageableElement,
    EnumItem::ArElement,
    EnumItem::AtpBlueprint,
    EnumItem::AtpBlueprintable,
    EnumItem::AtpClassifier,
    EnumItem::AtpType,
    EnumItem::CollectableElement,
    EnumItem::DiagnosticMultipleEventInterface,
    EnumItem::DiagnosticMultipleResourceInterface,
    EnumItem::DiagnosticPortInterface,
    EnumItem::PackageableElement,
    EnumItem::PortInterface,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::DiagnosticCommonElement,
    EnumItem::DiagnosticMapping,
    EnumItem::DiagnosticMultipleEventPortMapping,
    EnumItem::DiagnosticMultipleResourcePortMapping,
    EnumItem::DiagnosticSwMapping,
    EnumItem::PackageableElement,
    EnumItem::ArElement,
    EnumItem::AtpBlueprint,
    EnumItem::AtpBlueprintable,
    EnumItem::AtpClassifier,
    EnumItem::AtpType,
    EnumItem::CollectableElement,
    EnumItem::DiagnosticMultipleMonitorInterface,
    EnumItem::DiagnosticMultipleResourceInterface,
    EnumItem::DiagnosticPortInterface,
    EnumItem::PackageableElement,
    EnumItem::PortInterface,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::DiagnosticCommonElement,
    EnumItem::DiagnosticMapping,
    EnumItem::DiagnosticMultipleMonitorPortMapping,
    EnumItem::DiagnosticMultipleResourcePortMapping,
    EnumItem::DiagnosticSwMapping,
    EnumItem::PackageableElement,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::DiagnosticCommonElement,
    EnumItem::DiagnosticOperationCycle,
    EnumItem::PackageableElement,
    EnumItem::ArElement,
    EnumItem::AtpBlueprint,
    EnumItem::AtpBlueprintable,
    EnumItem::AtpClassifier,
    EnumItem::AtpType,
    EnumItem::CollectableElement,
    EnumItem::DiagnosticOperationCycleInterface,
    EnumItem::DiagnosticPortInterface,
    EnumItem::PackageableElement,
    EnumItem::PortInterface,
    EnumItem::DiagnosticCapabilityElement,
    EnumItem::DiagnosticOperationCycleNeeds,
    EnumItem::ServiceNeeds,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::DiagnosticCommonElement,
    EnumItem::DiagnosticMapping,
    EnumItem::DiagnosticOperationCyclePortMapping,
    EnumItem::DiagnosticSwMapping,
    EnumItem::PackageableElement,
    EnumItem::DiagnosticParameterElement,
    EnumItem::AtpClassifier,
    EnumItem::AtpFeature,
    EnumItem::AtpStructureElement,
    EnumItem::DiagnosticParameterIdent,
    EnumItem::IdentCaption,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::DiagnosticCommonElement,
    EnumItem::DiagnosticParameterIdentifier,
    EnumItem::PackageableElement,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::DiagnosticCommonElement,
    EnumItem::DiagnosticPowertrainFreezeFrame,
    EnumItem::PackageableElement,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::DiagnosticAuthentication,
    EnumItem::DiagnosticCommonElement,
    EnumItem::DiagnosticProofOfOwnership,
    EnumItem::DiagnosticServiceInstance,
    EnumItem::PackageableElement,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::DiagnosticCommonElement,
    EnumItem::DiagnosticProtocol,
    EnumItem::PackageableElement,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::DiagnosticCommonElement,
    EnumItem::DiagnosticMapping,
    EnumItem::DiagnosticProvidedDataMapping,
    EnumItem::PackageableElement,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::DiagnosticCommonElement,
    EnumItem::DiagnosticDataByIdentifier,
    EnumItem::DiagnosticReadDataByIdentifier,
    EnumItem::DiagnosticServiceInstance,
    EnumItem::PackageableElement,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::DiagnosticCommonElement,
    EnumItem::DiagnosticReadDataByIdentifierClass,
    EnumItem::DiagnosticServiceClass,
    EnumItem::PackageableElement,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::DiagnosticCommonElement,
    EnumItem::DiagnosticReadDataByPeriodicId,
    EnumItem::DiagnosticServiceInstance,
    EnumItem::PackageableElement,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::DiagnosticCommonElement,
    EnumItem::DiagnosticReadDataByPeriodicIdClass,
    EnumItem::DiagnosticServiceClass,
    EnumItem::PackageableElement,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::DiagnosticCommonElement,
    EnumItem::DiagnosticReadDtcInformation,
    EnumItem::DiagnosticServiceInstance,
    EnumItem::PackageableElement,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::DiagnosticCommonElement,
    EnumItem::DiagnosticReadDtcInformationClass,
    EnumItem::DiagnosticServiceClass,
    EnumItem::PackageableElement,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::DiagnosticCommonElement,
    EnumItem::DiagnosticMemoryAddressableRangeAccess,
    EnumItem::DiagnosticMemoryByAddress,
    EnumItem::DiagnosticReadMemoryByAddress,
    EnumItem::DiagnosticServiceInstance,
    EnumItem::PackageableElement,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::DiagnosticCommonElement,
    EnumItem::DiagnosticReadMemoryByAddressClass,
    EnumItem::DiagnosticServiceClass,
    EnumItem::PackageableElement,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::DiagnosticCommonElement,
    EnumItem::DiagnosticDataByIdentifier,
    EnumItem::DiagnosticReadScalingDataByIdentifier,
    EnumItem::DiagnosticServiceInstance,
    EnumItem::PackageableElement,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::DiagnosticCommonElement,
    EnumItem::DiagnosticReadScalingDataByIdentifierClass,
    EnumItem::DiagnosticServiceClass,
    EnumItem::PackageableElement,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::DiagnosticCommonElement,
    EnumItem::DiagnosticRequestControlOfOnBoardDevice,
    EnumItem::DiagnosticServiceInstance,
    EnumItem::PackageableElement,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::DiagnosticCommonElement,
    EnumItem::DiagnosticRequestControlOfOnBoardDeviceClass,
    EnumItem::DiagnosticServiceClass,
    EnumItem::PackageableElement,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::DiagnosticCommonElement,
    EnumItem::DiagnosticRequestCurrentPowertrainData,
    EnumItem::DiagnosticServiceInstance,
    EnumItem::PackageableElement,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::DiagnosticCommonElement,
    EnumItem::DiagnosticRequestCurrentPowertrainDataClass,
    EnumItem::DiagnosticServiceClass,
    EnumItem::PackageableElement,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::DiagnosticCommonElement,
    EnumItem::DiagnosticMemoryAddressableRangeAccess,
    EnumItem::DiagnosticMemoryByAddress,
    EnumItem::DiagnosticRequestDownload,
    EnumItem::DiagnosticServiceInstance,
    EnumItem::PackageableElement,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::DiagnosticCommonElement,
    EnumItem::DiagnosticRequestDownloadClass,
    EnumItem::DiagnosticServiceClass,
    EnumItem::PackageableElement,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::DiagnosticCommonElement,
    EnumItem::DiagnosticRequestEmissionRelatedDtc,
    EnumItem::DiagnosticServiceInstance,
    EnumItem::PackageableElement,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::DiagnosticCommonElement,
    EnumItem::DiagnosticRequestEmissionRelatedDtcClass,
    EnumItem::DiagnosticServiceClass,
    EnumItem::PackageableElement,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::DiagnosticCommonElement,
    EnumItem::DiagnosticRequestEmissionRelatedDtcPermanentStatus,
    EnumItem::DiagnosticServiceInstance,
    EnumItem::PackageableElement,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::DiagnosticCommonElement,
    EnumItem::DiagnosticRequestEmissionRelatedDtcPermanentStatusClass,
    EnumItem::DiagnosticServiceClass,
    EnumItem::PackageableElement,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::DiagnosticCommonElement,
    EnumItem::DiagnosticRequestFileTransfer,
    EnumItem::DiagnosticServiceInstance,
    EnumItem::PackageableElement,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::DiagnosticCommonElement,
    EnumItem::DiagnosticRequestFileTransferClass,
    EnumItem::DiagnosticServiceClass,
    EnumItem::PackageableElement,
    EnumItem::ArElement,
    EnumItem::AtpBlueprint,
    EnumItem::AtpBlueprintable,
    EnumItem::AtpClassifier,
    EnumItem::AtpType,
    EnumItem::CollectableElement,
    EnumItem::DiagnosticPortInterface,
    EnumItem::DiagnosticRequestFileTransferInterface,
    EnumItem::PackageableElement,
    EnumItem::PortInterface,
    EnumItem::DiagnosticCapabilityElement,
    EnumItem::DiagnosticRequestFileTransferNeeds,
    EnumItem::ServiceNeeds,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::DiagnosticCommonElement,
    EnumItem::DiagnosticRequestOnBoardMonitoringTestResults,
    EnumItem::DiagnosticServiceInstance,
    EnumItem::PackageableElement,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::DiagnosticCommonElement,
    EnumItem::DiagnosticRequestOnBoardMonitoringTestResultsClass,
    EnumItem::DiagnosticServiceClass,
    EnumItem::PackageableElement,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::DiagnosticCommonElement,
    EnumItem::DiagnosticRequestPowertrainFreezeFrameData,
    EnumItem::DiagnosticServiceInstance,
    EnumItem::PackageableElement,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::DiagnosticCommonElement,
    EnumItem::DiagnosticRequestPowertrainFreezeFrameDataClass,
    EnumItem::DiagnosticServiceClass,
    EnumItem::PackageableElement,
    EnumItem::DiagnosticRequestRoutineResults,
    EnumItem::DiagnosticRoutineSubfunction,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::DiagnosticCommonElement,
    EnumItem::DiagnosticMemoryAddressableRangeAccess,
    EnumItem::DiagnosticMemoryByAddress,
    EnumItem::DiagnosticRequestUpload,
    EnumItem::DiagnosticServiceInstance,
    EnumItem::PackageableElement,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::DiagnosticCommonElement,
    EnumItem::DiagnosticRequestUploadClass,
    EnumItem::DiagnosticServiceClass,
    EnumItem::PackageableElement,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::DiagnosticCommonElement,
    EnumItem::DiagnosticRequestVehicleInfo,
    EnumItem::DiagnosticServiceInstance,
    EnumItem::PackageableElement,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::DiagnosticCommonElement,
    EnumItem::DiagnosticRequestVehicleInfoClass,
    EnumItem::DiagnosticServiceClass,
    EnumItem::PackageableElement,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::DiagnosticCommonElement,
    EnumItem::DiagnosticResponseOnEvent,
    EnumItem::DiagnosticServiceInstance,
    EnumItem::PackageableElement,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::DiagnosticCommonElement,
    EnumItem::DiagnosticResponseOnEventClass,
    EnumItem::DiagnosticServiceClass,
    EnumItem::PackageableElement,
    EnumItem::DiagnosticCapabilityElement,
    EnumItem::DiagnosticResponseOnEventNeeds,
    EnumItem::ServiceNeeds,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::DiagnosticCommonElement,
    EnumItem::DiagnosticRoutine,
    EnumItem::PackageableElement,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::DiagnosticCommonElement,
    EnumItem::DiagnosticRoutineControl,
    EnumItem::DiagnosticServiceInstance,
    EnumItem::PackageableElement,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::DiagnosticCommonElement,
    EnumItem::DiagnosticRoutineControlClass,
    EnumItem::DiagnosticServiceClass,
    EnumItem::PackageableElement,
    EnumItem::ArElement,
    EnumItem::AtpBlueprint,
    EnumItem::AtpBlueprintable,
    EnumItem::AtpClassifier,
    EnumItem::AtpType,
    EnumItem::CollectableElement,
    EnumItem::DiagnosticAbstractRoutineInterface,
    EnumItem::DiagnosticPortInterface,
    EnumItem::DiagnosticRoutineGenericInterface,
    EnumItem::PackageableElement,
    EnumItem::PortInterface,
    EnumItem::ArElement,
    EnumItem::AtpBlueprint,
    EnumItem::AtpBlueprintable,
    EnumItem::AtpClassifier,
    EnumItem::AtpType,
    EnumItem::CollectableElement,
    EnumItem::DiagnosticAbstractRoutineInterface,
    EnumItem::DiagnosticPortInterface,
    EnumItem::DiagnosticRoutineInterface,
    EnumItem::PackageableElement,
    EnumItem::PortInterface,
    EnumItem::DiagnosticCapabilityElement,
    EnumItem::DiagnosticRoutineNeeds,
    EnumItem::ServiceNeeds,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::DiagnosticCommonElement,
    EnumItem::DiagnosticMapping,
    EnumItem::DiagnosticSecureCodingMapping,
    EnumItem::PackageableElement,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::DiagnosticCommonElement,
    EnumItem::DiagnosticSecurityAccess,
    EnumItem::DiagnosticServiceInstance,
    EnumItem::PackageableElement,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::DiagnosticCommonElement,
    EnumItem::DiagnosticSecurityAccessClass,
    EnumItem::DiagnosticServiceClass,
    EnumItem::PackageableElement,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::DiagnosticCommonElement,
    EnumItem::DiagnosticMapping,
    EnumItem::DiagnosticSecurityEventReportingModeMapping,
    EnumItem::PackageableElement,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::DiagnosticCommonElement,
    EnumItem::DiagnosticSecurityLevel,
    EnumItem::PackageableElement,
    EnumItem::ArElement,
    EnumItem::AtpBlueprint,
    EnumItem::AtpBlueprintable,
    EnumItem::AtpClassifier,
    EnumItem::AtpType,
    EnumItem::CollectableElement,
    EnumItem::DiagnosticPortInterface,
    EnumItem::DiagnosticSecurityLevelInterface,
    EnumItem::PackageableElement,
    EnumItem::PortInterface,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::DiagnosticCommonElement,
    EnumItem::DiagnosticMapping,
    EnumItem::DiagnosticSecurityLevelPortMapping,
    EnumItem::DiagnosticSwMapping,
    EnumItem::PackageableElement,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::DiagnosticCommonElement,
    EnumItem::DiagnosticMapping,
    EnumItem::DiagnosticServiceDataIdentifierMapping,
    EnumItem::DiagnosticSwMapping,
    EnumItem::PackageableElement,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::DiagnosticCommonElement,
    EnumItem::DiagnosticMapping,
    EnumItem::DiagnosticServiceDataIdentifierPortMapping,
    EnumItem::DiagnosticSwMapping,
    EnumItem::PackageableElement,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::DiagnosticCommonElement,
    EnumItem::DiagnosticMapping,
    EnumItem::DiagnosticServiceDataMapping,
    EnumItem::DiagnosticSwMapping,
    EnumItem::PackageableElement,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::DiagnosticCommonElement,
    EnumItem::DiagnosticMapping,
    EnumItem::DiagnosticServiceGenericMapping,
    EnumItem::DiagnosticSwMapping,
    EnumItem::PackageableElement,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::DiagnosticCommonElement,
    EnumItem::DiagnosticMapping,
    EnumItem::DiagnosticServiceSwMapping,
    EnumItem::DiagnosticSwMapping,
    EnumItem::PackageableElement,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::DiagnosticCommonElement,
    EnumItem::DiagnosticServiceTable,
    EnumItem::PackageableElement,
    EnumItem::ArElement,
    EnumItem::AtpBlueprint,
    EnumItem::AtpBlueprintable,
    EnumItem::AtpClassifier,
    EnumItem::AtpType,
    EnumItem::CollectableElement,
    EnumItem::DiagnosticPortInterface,
    EnumItem::DiagnosticServiceValidationInterface,
    EnumItem::PackageableElement,
    EnumItem::PortInterface,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::DiagnosticCommonElement,
    EnumItem::DiagnosticMapping,
    EnumItem::DiagnosticServiceValidationMapping,
    EnumItem::DiagnosticSwMapping,
    EnumItem::PackageableElement,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::DiagnosticCommonElement,
    EnumItem::DiagnosticSession,
    EnumItem::PackageableElement,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::DiagnosticCommonElement,
    EnumItem::DiagnosticServiceInstance,
    EnumItem::DiagnosticSessionControl,
    EnumItem::PackageableElement,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::DiagnosticCommonElement,
    EnumItem::DiagnosticServiceClass,
    EnumItem::DiagnosticSessionControlClass,
    EnumItem::PackageableElement,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::DiagnosticCommonElement,
    EnumItem::DiagnosticSoftwareClusterProps,
    EnumItem::PackageableElement,
    EnumItem::ArElement,
    EnumItem::AtpBlueprint,
    EnumItem::AtpBlueprintable,
    EnumItem::AtpClassifier,
    EnumItem::AtpType,
    EnumItem::CollectableElement,
    EnumItem::DiagnosticPortInterface,
    EnumItem::DiagnosticSovdAuthorizationInterface,
    EnumItem::DiagnosticSovdPortInterface,
    EnumItem::PackageableElement,
    EnumItem::PortInterface,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::DiagnosticCommonElement,
    EnumItem::DiagnosticMapping,
    EnumItem::DiagnosticSovdAuthorizationPortMapping,
    EnumItem::DiagnosticSwMapping,
    EnumItem::PackageableElement,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::DiagnosticCommonElement,
    EnumItem::DiagnosticSovdBulkData,
    EnumItem::DiagnosticSovdServiceInstance,
    EnumItem::PackageableElement,
    EnumItem::ArElement,
    EnumItem::AtpBlueprint,
    EnumItem::AtpBlueprintable,
    EnumItem::AtpClassifier,
    EnumItem::AtpType,
    EnumItem::CollectableElement,
    EnumItem::DiagnosticPortInterface,
    EnumItem::DiagnosticSovdBulkDataInterface,
    EnumItem::DiagnosticSovdPortInterface,
    EnumItem::PackageableElement,
    EnumItem::PortInterface,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::DiagnosticCommonElement,
    EnumItem::DiagnosticMapping,
    EnumItem::DiagnosticSovdBulkDataPortMapping,
    EnumItem::DiagnosticSwMapping,
    EnumItem::PackageableElement,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::DiagnosticCommonElement,
    EnumItem::DiagnosticSovdConfiguration,
    EnumItem::DiagnosticSovdConfigurationBulkData,
    EnumItem::DiagnosticSovdServiceInstance,
    EnumItem::PackageableElement,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::DiagnosticCommonElement,
    EnumItem::DiagnosticMapping,
    EnumItem::DiagnosticSovdConfigurationDataIdentifierMapping,
    EnumItem::PackageableElement,
    EnumItem::ArElement,
    EnumItem::AtpBlueprint,
    EnumItem::AtpBlueprintable,
    EnumItem::AtpClassifier,
    EnumItem::AtpType,
    EnumItem::CollectableElement,
    EnumItem::DiagnosticPortInterface,
    EnumItem::DiagnosticSovdConfigurationInterface,
    EnumItem::DiagnosticSovdPortInterface,
    EnumItem::PackageableElement,
    EnumItem::PortInterface,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::DiagnosticCommonElement,
    EnumItem::DiagnosticSovdConfiguration,
    EnumItem::DiagnosticSovdConfigurationParameter,
    EnumItem::DiagnosticSovdServiceInstance,
    EnumItem::PackageableElement,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::DiagnosticCommonElement,
    EnumItem::DiagnosticMapping,
    EnumItem::DiagnosticSovdConfigurationPortMapping,
    EnumItem::DiagnosticSwMapping,
    EnumItem::PackageableElement,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::DiagnosticCommonElement,
    EnumItem::DiagnosticSovdFaultMemoryAccess,
    EnumItem::DiagnosticSovdServiceInstance,
    EnumItem::PackageableElement,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::DiagnosticCommonElement,
    EnumItem::DiagnosticSovdLock,
    EnumItem::PackageableElement,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::DiagnosticCommonElement,
    EnumItem::DiagnosticSovdLog,
    EnumItem::DiagnosticSovdServiceInstance,
    EnumItem::PackageableElement,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::DiagnosticCommonElement,
    EnumItem::DiagnosticSovdMethod,
    EnumItem::PackageableElement,
    EnumItem::DiagnosticSovdMethodPrimitive,
    EnumItem::ArElement,
    EnumItem::AtpBlueprint,
    EnumItem::AtpBlueprintable,
    EnumItem::AtpClassifier,
    EnumItem::AtpType,
    EnumItem::CollectableElement,
    EnumItem::DiagnosticPortInterface,
    EnumItem::DiagnosticSovdPortInterface,
    EnumItem::DiagnosticSovdProximityChallengeInterface,
    EnumItem::PackageableElement,
    EnumItem::PortInterface,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::DiagnosticCommonElement,
    EnumItem::DiagnosticMapping,
    EnumItem::DiagnosticSovdProximityChallengePortMapping,
    EnumItem::DiagnosticSwMapping,
    EnumItem::PackageableElement,
    EnumItem::ArElement,
    EnumItem::AtpBlueprint,
    EnumItem::AtpBlueprintable,
    EnumItem::AtpClassifier,
    EnumItem::AtpType,
    EnumItem::CollectableElement,
    EnumItem::DiagnosticPortInterface,
    EnumItem::DiagnosticSovdPortInterface,
    EnumItem::DiagnosticSovdServiceValidationInterface,
    EnumItem::PackageableElement,
    EnumItem::PortInterface,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::DiagnosticCommonElement,
    EnumItem::DiagnosticMapping,
    EnumItem::DiagnosticSovdServiceValidationPortMapping,
    EnumItem::DiagnosticSwMapping,
    EnumItem::PackageableElement,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::DiagnosticCommonElement,
    EnumItem::DiagnosticSovdServiceInstance,
    EnumItem::DiagnosticSovdUpdate,
    EnumItem::PackageableElement,
    EnumItem::ArElement,
    EnumItem::AtpBlueprint,
    EnumItem::AtpBlueprintable,
    EnumItem::AtpClassifier,
    EnumItem::AtpType,
    EnumItem::CollectableElement,
    EnumItem::DiagnosticPortInterface,
    EnumItem::DiagnosticSovdPortInterface,
    EnumItem::DiagnosticSovdUpdateInterface,
    EnumItem::PackageableElement,
    EnumItem::PortInterface,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::DiagnosticCommonElement,
    EnumItem::DiagnosticMapping,
    EnumItem::DiagnosticSovdUpdatePortMapping,
    EnumItem::DiagnosticSwMapping,
    EnumItem::PackageableElement,
    EnumItem::DiagnosticRoutineSubfunction,
    EnumItem::DiagnosticStartRoutine,
    EnumItem::DiagnosticRoutineSubfunction,
    EnumItem::DiagnosticStopRoutine,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::DiagnosticCommonElement,
    EnumItem::DiagnosticCondition,
    EnumItem::DiagnosticStorageCondition,
    EnumItem::PackageableElement,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::DiagnosticCommonElement,
    EnumItem::DiagnosticConditionGroup,
    EnumItem::DiagnosticStorageConditionGroup,
    EnumItem::PackageableElement,
    EnumItem::DiagnosticCapabilityElement,
    EnumItem::DiagnosticStorageConditionNeeds,
    EnumItem::ServiceNeeds,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::DiagnosticCommonElement,
    EnumItem::DiagnosticMapping,
    EnumItem::DiagnosticStorageConditionPortMapping,
    EnumItem::DiagnosticSwMapping,
    EnumItem::PackageableElement,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::DiagnosticCommonElement,
    EnumItem::DiagnosticTestResult,
    EnumItem::PackageableElement,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::DiagnosticCommonElement,
    EnumItem::DiagnosticTestRoutineIdentifier,
    EnumItem::PackageableElement,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::DiagnosticCommonElement,
    EnumItem::DiagnosticMemoryByAddress,
    EnumItem::DiagnosticServiceInstance,
    EnumItem::DiagnosticTransferExit,
    EnumItem::PackageableElement,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::DiagnosticCommonElement,
    EnumItem::DiagnosticServiceClass,
    EnumItem::DiagnosticTransferExitClass,
    EnumItem::PackageableElement,
    EnumItem::ArElement,
    EnumItem::AtpBlueprint,
    EnumItem::AtpBlueprintable,
    EnumItem::AtpClassifier,
    EnumItem::AtpType,
    EnumItem::CollectableElement,
    EnumItem::DiagnosticPortInterface,
    EnumItem::DiagnosticTransmitCertificateInterface,
    EnumItem::PackageableElement,
    EnumItem::PortInterface,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::DiagnosticCommonElement,
    EnumItem::DiagnosticTroubleCodeGroup,
    EnumItem::PackageableElement,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::DiagnosticCommonElement,
    EnumItem::DiagnosticTroubleCode,
    EnumItem::DiagnosticTroubleCodeJ1939,
    EnumItem::PackageableElement,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::DiagnosticCommonElement,
    EnumItem::DiagnosticTroubleCode,
    EnumItem::DiagnosticTroubleCodeObd,
    EnumItem::PackageableElement,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::DiagnosticCommonElement,
    EnumItem::DiagnosticTroubleCodeProps,
    EnumItem::PackageableElement,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::DiagnosticCommonElement,
    EnumItem::DiagnosticTroubleCode,
    EnumItem::DiagnosticTroubleCodeUds,
    EnumItem::PackageableElement,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::DiagnosticCommonElement,
    EnumItem::DiagnosticMapping,
    EnumItem::DiagnosticTroubleCodeUdsToClearConditionGroupMapping,
    EnumItem::PackageableElement,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::DiagnosticCommonElement,
    EnumItem::DiagnosticMapping,
    EnumItem::DiagnosticTroubleCodeUdsToTroubleCodeObdMapping,
    EnumItem::PackageableElement,
    EnumItem::DiagnosticCapabilityElement,
    EnumItem::DiagnosticUploadDownloadNeeds,
    EnumItem::ServiceNeeds,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::DiagnosticCommonElement,
    EnumItem::DiagnosticMapping,
    EnumItem::DiagnosticSwMapping,
    EnumItem::DiagnosticUploadDownloadPortMapping,
    EnumItem::PackageableElement,
    EnumItem::ArElement,
    EnumItem::AtpBlueprint,
    EnumItem::AtpBlueprintable,
    EnumItem::AtpClassifier,
    EnumItem::AtpType,
    EnumItem::CollectableElement,
    EnumItem::DiagnosticPortInterface,
    EnumItem::DiagnosticUploadInterface,
    EnumItem::PackageableElement,
    EnumItem::PortInterface,
    EnumItem::DiagnosticCapabilityElement,
    EnumItem::DiagnosticValueNeeds,
    EnumItem::ServiceNeeds,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::DiagnosticAuthentication,
    EnumItem::DiagnosticCommonElement,
    EnumItem::DiagnosticServiceInstance,
    EnumItem::DiagnosticVerifyCertificateBidirectional,
    EnumItem::PackageableElement,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::DiagnosticAuthentication,
    EnumItem::DiagnosticCommonElement,
    EnumItem::DiagnosticServiceInstance,
    EnumItem::DiagnosticVerifyCertificateUnidirectional,
    EnumItem::PackageableElement,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::DiagnosticCommonElement,
    EnumItem::DiagnosticDataByIdentifier,
    EnumItem::DiagnosticServiceInstance,
    EnumItem::DiagnosticWriteDataByIdentifier,
    EnumItem::PackageableElement,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::DiagnosticCommonElement,
    EnumItem::DiagnosticServiceClass,
    EnumItem::DiagnosticWriteDataByIdentifierClass,
    EnumItem::PackageableElement,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::DiagnosticCommonElement,
    EnumItem::DiagnosticMemoryAddressableRangeAccess,
    EnumItem::DiagnosticMemoryByAddress,
    EnumItem::DiagnosticServiceInstance,
    EnumItem::DiagnosticWriteMemoryByAddress,
    EnumItem::PackageableElement,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::DiagnosticCommonElement,
    EnumItem::DiagnosticServiceClass,
    EnumItem::DiagnosticWriteMemoryByAddressClass,
    EnumItem::PackageableElement,
    EnumItem::DiagnosticCapabilityElement,
    EnumItem::DiagnosticsCommunicationSecurityNeeds,
    EnumItem::ServiceNeeds,
    EnumItem::DltApplication,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::DltApplicationToProcessMapping,
    EnumItem::PackageableElement,
    EnumItem::UploadableDeploymentElement,
    EnumItem::UploadablePackageElement,
    EnumItem::DltArgument,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::DltContext,
    EnumItem::PackageableElement,
    EnumItem::UploadableDesignElement,
    EnumItem::UploadablePackageElement,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::DltEcu,
    EnumItem::PackageableElement,
    EnumItem::UploadableDesignElement,
    EnumItem::UploadablePackageElement,
    EnumItem::DltLogChannel,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::DltLogChannelDesign,
    EnumItem::PackageableElement,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::DltLogChannelDesignToProcessDesignMapping,
    EnumItem::PackageableElement,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::DltLogChannelToProcessMapping,
    EnumItem::PackageableElement,
    EnumItem::UploadablePackageElement,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::DltLogSink,
    EnumItem::PackageableElement,
    EnumItem::UploadableDeploymentElement,
    EnumItem::UploadablePackageElement,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::DltLogSinkToPortPrototypeMapping,
    EnumItem::PackageableElement,
    EnumItem::UploadableDeploymentElement,
    EnumItem::UploadablePackageElement,
    EnumItem::DltMessage,
    EnumItem::CollectableElement,
    EnumItem::DltMessageCollectionSet,
    EnumItem::FibexElement,
    EnumItem::PackageableElement,
    EnumItem::DltUserNeeds,
    EnumItem::ServiceNeeds,
    EnumItem::DoIpActivationLineNeeds,
    EnumItem::DoIpServiceNeeds,
    EnumItem::ServiceNeeds,
    EnumItem::AbstractFunctionalClusterDesign,
    EnumItem::DoIpFunctionalClusterDesign,
    EnumItem::DoIpGidNeeds,
    EnumItem::DoIpServiceNeeds,
    EnumItem::ServiceNeeds,
    EnumItem::DoIpGidSynchronizationNeeds,
    EnumItem::DoIpServiceNeeds,
    EnumItem::ServiceNeeds,
    EnumItem::AdaptiveModuleInstantiation,
    EnumItem::AtpClassifier,
    EnumItem::AtpFeature,
    EnumItem::AtpStructureElement,
    EnumItem::DoIpInstantiation,
    EnumItem::NonOsModuleInstantiation,
    EnumItem::DoIpInterface,
    EnumItem::DoIpLogicAddress,
    EnumItem::AbstractDoIpLogicAddressProps,
    EnumItem::DoIpLogicTargetAddressProps,
    EnumItem::AbstractDoIpLogicAddressProps,
    EnumItem::DoIpLogicTesterAddressProps,
    EnumItem::DoIpLogicalAddress,
    EnumItem::DoIpNetworkConfigurationDesign,
    EnumItem::DoIpPowerModeStatusNeeds,
    EnumItem::DoIpServiceNeeds,
    EnumItem::ServiceNeeds,
    EnumItem::DoIpRoutingActivation,
    EnumItem::DoIpRoutingActivationAuthenticationNeeds,
    EnumItem::DoIpServiceNeeds,
    EnumItem::ServiceNeeds,
    EnumItem::DoIpRoutingActivationConfirmationNeeds,
    EnumItem::DoIpServiceNeeds,
    EnumItem::ServiceNeeds,
    EnumItem::CollectableElement,
    EnumItem::DoIpTpConfig,
    EnumItem::FibexElement,
    EnumItem::PackageableElement,
    EnumItem::TpConfig,
    EnumItem::DocumentElementScope,
    EnumItem::SpecElementReference,
    EnumItem::SpecElementScope,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::Documentation,
    EnumItem::PackageableElement,
    EnumItem::UploadableDesignElement,
    EnumItem::UploadablePackageElement,
    EnumItem::DocumentationContext,
    EnumItem::DiagnosticCapabilityElement,
    EnumItem::DtcStatusChangeNotificationNeeds,
    EnumItem::ServiceNeeds,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::E2EProfileCompatibilityProps,
    EnumItem::PackageableElement,
    EnumItem::UploadableDesignElement,
    EnumItem::UploadablePackageElement,
    EnumItem::E2EProfileConfiguration,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::E2EProfileConfigurationSet,
    EnumItem::PackageableElement,
    EnumItem::UploadableDesignElement,
    EnumItem::UploadablePackageElement,
    EnumItem::ArElement,
    EnumItem::AtomicSwComponentType,
    EnumItem::AtpBlueprint,
    EnumItem::AtpBlueprintable,
    EnumItem::AtpClassifier,
    EnumItem::AtpType,
    EnumItem::CollectableElement,
    EnumItem::EcuAbstractionSwComponentType,
    EnumItem::PackageableElement,
    EnumItem::SwComponentType,
    EnumItem::CollectableElement,
    EnumItem::EcuInstance,
    EnumItem::FibexElement,
    EnumItem::PackageableElement,
    EnumItem::EcuMapping,
    EnumItem::EcuPartition,
    EnumItem::EcuStateMgrUserNeeds,
    EnumItem::ServiceNeeds,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::EcuTiming,
    EnumItem::PackageableElement,
    EnumItem::TimingExtension,
    EnumItem::AtpDefinition,
    EnumItem::EcucAddInfoParamDef,
    EnumItem::EcucCommonAttributes,
    EnumItem::EcucDefinitionElement,
    EnumItem::EcucParameterDef,
    EnumItem::AtpDefinition,
    EnumItem::EcucBooleanParamDef,
    EnumItem::EcucCommonAttributes,
    EnumItem::EcucDefinitionElement,
    EnumItem::EcucParameterDef,
    EnumItem::AtpDefinition,
    EnumItem::EcucChoiceContainerDef,
    EnumItem::EcucContainerDef,
    EnumItem::EcucDefinitionElement,
    EnumItem::AtpDefinition,
    EnumItem::EcucAbstractInternalReferenceDef,
    EnumItem::EcucAbstractReferenceDef,
    EnumItem::EcucChoiceReferenceDef,
    EnumItem::EcucCommonAttributes,
    EnumItem::EcucDefinitionElement,
    EnumItem::EcucContainerValue,
    EnumItem::ArElement,
    EnumItem::AtpBlueprint,
    EnumItem::AtpBlueprintable,
    EnumItem::CollectableElement,
    EnumItem::EcucDefinitionCollection,
    EnumItem::PackageableElement,
    EnumItem::EcucDestinationUriDef,
    EnumItem::ArElement,
    EnumItem::AtpBlueprint,
    EnumItem::AtpBlueprintable,
    EnumItem::CollectableElement,
    EnumItem::EcucDestinationUriDefSet,
    EnumItem::PackageableElement,
    EnumItem::EcucEnumerationLiteralDef,
    EnumItem::AtpDefinition,
    EnumItem::EcucCommonAttributes,
    EnumItem::EcucDefinitionElement,
    EnumItem::EcucEnumerationParamDef,
    EnumItem::EcucParameterDef,
    EnumItem::AtpDefinition,
    EnumItem::EcucCommonAttributes,
    EnumItem::EcucDefinitionElement,
    EnumItem::EcucFloatParamDef,
    EnumItem::EcucParameterDef,
    EnumItem::AtpDefinition,
    EnumItem::EcucAbstractExternalReferenceDef,
    EnumItem::EcucAbstractReferenceDef,
    EnumItem::EcucCommonAttributes,
    EnumItem::EcucDefinitionElement,
    EnumItem::EcucForeignReferenceDef,
    EnumItem::AtpDefinition,
    EnumItem::EcucAbstractStringParamDef,
    EnumItem::EcucCommonAttributes,
    EnumItem::EcucDefinitionElement,
    EnumItem::EcucFunctionNameDef,
    EnumItem::EcucParameterDef,
    EnumItem::AtpDefinition,
    EnumItem::EcucAbstractExternalReferenceDef,
    EnumItem::EcucAbstractReferenceDef,
    EnumItem::EcucCommonAttributes,
    EnumItem::EcucDefinitionElement,
    EnumItem::EcucInstanceReferenceDef,
    EnumItem::AtpDefinition,
    EnumItem::EcucCommonAttributes,
    EnumItem::EcucDefinitionElement,
    EnumItem::EcucIntegerParamDef,
    EnumItem::EcucParameterDef,
    EnumItem::AtpDefinition,
    EnumItem::EcucAbstractStringParamDef,
    EnumItem::EcucCommonAttributes,
    EnumItem::EcucDefinitionElement,
    EnumItem::EcucLinkerSymbolDef,
    EnumItem::EcucParameterDef,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::EcucModuleConfigurationValues,
    EnumItem::PackageableElement,
    EnumItem::ArElement,
    EnumItem::AtpBlueprint,
    EnumItem::AtpBlueprintable,
    EnumItem::AtpDefinition,
    EnumItem::CollectableElement,
    EnumItem::EcucDefinitionElement,
    EnumItem::EcucModuleDef,
    EnumItem::PackageableElement,
    EnumItem::AtpDefinition,
    EnumItem::EcucAbstractStringParamDef,
    EnumItem::EcucCommonAttributes,
    EnumItem::EcucDefinitionElement,
    EnumItem::EcucMultilineStringParamDef,
    EnumItem::EcucParameterDef,
    EnumItem::AtpDefinition,
    EnumItem::EcucContainerDef,
    EnumItem::EcucDefinitionElement,
    EnumItem::EcucParamConfContainerDef,
    EnumItem::EcucQuery,
    EnumItem::AtpDefinition,
    EnumItem::EcucAbstractInternalReferenceDef,
    EnumItem::EcucAbstractReferenceDef,
    EnumItem::EcucCommonAttributes,
    EnumItem::EcucDefinitionElement,
    EnumItem::EcucReferenceDef,
    EnumItem::AtpDefinition,
    EnumItem::EcucAbstractStringParamDef,
    EnumItem::EcucCommonAttributes,
    EnumItem::EcucDefinitionElement,
    EnumItem::EcucParameterDef,
    EnumItem::EcucStringParamDef,
    EnumItem::AtpDefinition,
    EnumItem::EcucAbstractInternalReferenceDef,
    EnumItem::EcucAbstractReferenceDef,
    EnumItem::EcucCommonAttributes,
    EnumItem::EcucDefinitionElement,
    EnumItem::EcucSymbolicNameReferenceDef,
    EnumItem::AtpDefinition,
    EnumItem::EcucAbstractInternalReferenceDef,
    EnumItem::EcucAbstractReferenceDef,
    EnumItem::EcucCommonAttributes,
    EnumItem::EcucDefinitionElement,
    EnumItem::EcucUriReferenceDef,
    EnumItem::EcucValidationCondition,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::EcucValueCollection,
    EnumItem::PackageableElement,
    EnumItem::End2EndEventProtectionProps,
    EnumItem::End2EndMethodProtectionProps,
    EnumItem::EndToEndProtection,
    EnumItem::EndToEndProtection,
    EnumItem::EndToEndProtectionISignalIPdu,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::EndToEndProtectionSet,
    EnumItem::PackageableElement,
    EnumItem::EndToEndProtection,
    EnumItem::EndToEndProtectionVariablePrototype,
    EnumItem::CollectableElement,
    EnumItem::EnumerationMappingTable,
    EnumItem::PackageableElement,
    EnumItem::EocEventRef,
    EnumItem::EocExecutableEntityRefAbstract,
    EnumItem::EocExecutableEntityRef,
    EnumItem::EocExecutableEntityRefAbstract,
    EnumItem::EocExecutableEntityRefAbstract,
    EnumItem::EocExecutableEntityRefGroup,
    EnumItem::ErrorTracerNeeds,
    EnumItem::ServiceNeeds,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::EthIpProps,
    EnumItem::PackageableElement,
    EnumItem::UploadableDesignElement,
    EnumItem::UploadablePackageElement,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::EthTcpIpIcmpProps,
    EnumItem::PackageableElement,
    EnumItem::UploadableDesignElement,
    EnumItem::UploadablePackageElement,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::EthTcpIpProps,
    EnumItem::PackageableElement,
    EnumItem::UploadableDesignElement,
    EnumItem::UploadablePackageElement,
    EnumItem::CollectableElement,
    EnumItem::EthTpConfig,
    EnumItem::FibexElement,
    EnumItem::PackageableElement,
    EnumItem::TpConfig,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::CommunicationCluster,
    EnumItem::EthernetCluster,
    EnumItem::FibexElement,
    EnumItem::PackageableElement,
    EnumItem::UploadableDesignElement,
    EnumItem::UploadablePackageElement,
    EnumItem::CommunicationConnector,
    EnumItem::EthernetCommunicationConnector,
    EnumItem::CommunicationController,
    EnumItem::EthernetCommunicationController,
    EnumItem::CollectableElement,
    EnumItem::EthernetFrame,
    EnumItem::FibexElement,
    EnumItem::Frame,
    EnumItem::PackageableElement,
    EnumItem::EthernetFrameTriggering,
    EnumItem::FrameTriggering,
    EnumItem::EthernetNetworkConfiguration,
    EnumItem::NetworkConfiguration,
    EnumItem::EthernetPhysicalChannel,
    EnumItem::PhysicalChannel,
    EnumItem::EthernetPriorityRegeneration,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::EthernetRawDataStreamClientMapping,
    EnumItem::EthernetRawDataStreamMapping,
    EnumItem::PackageableElement,
    EnumItem::RawDataStreamMapping,
    EnumItem::UploadableDeploymentElement,
    EnumItem::UploadablePackageElement,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::EthernetRawDataStreamGrant,
    EnumItem::Grant,
    EnumItem::PackageableElement,
    EnumItem::RawDataStreamGrant,
    EnumItem::UploadableDeploymentElement,
    EnumItem::UploadablePackageElement,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::EthernetRawDataStreamMapping,
    EnumItem::PackageableElement,
    EnumItem::RawDataStreamMapping,
    EnumItem::UploadablePackageElement,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::EthernetRawDataStreamMapping,
    EnumItem::EthernetRawDataStreamServerMapping,
    EnumItem::PackageableElement,
    EnumItem::RawDataStreamMapping,
    EnumItem::UploadableDeploymentElement,
    EnumItem::UploadablePackageElement,
    EnumItem::EthernetWakeupSleepOnDatalineConfig,
    EnumItem::CollectableElement,
    EnumItem::EthernetWakeupSleepOnDatalineConfigSet,
    EnumItem::FibexElement,
    EnumItem::PackageableElement,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::EvaluatedVariantSet,
    EnumItem::PackageableElement,
    EnumItem::EventHandler,
    EnumItem::EventMapping,
    EnumItem::ExclusiveArea,
    EnumItem::ExclusiveAreaNestingOrder,
    EnumItem::ArElement,
    EnumItem::AtpClassifier,
    EnumItem::CollectableElement,
    EnumItem::Executable,
    EnumItem::PackageableElement,
    EnumItem::UploadableDesignElement,
    EnumItem::UploadablePackageElement,
    EnumItem::ExecutableEntityActivationReason,
    EnumItem::ImplementationProps,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::ExecutableGroup,
    EnumItem::PackageableElement,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::ExecutableTiming,
    EnumItem::PackageableElement,
    EnumItem::TimingExtension,
    EnumItem::ExecutionOrderConstraint,
    EnumItem::TimingConstraint,
    EnumItem::Traceable,
    EnumItem::ExecutionTimeConstraint,
    EnumItem::TimingConstraint,
    EnumItem::Traceable,
    EnumItem::AbstractEvent,
    EnumItem::AtpClassifier,
    EnumItem::AtpFeature,
    EnumItem::AtpStructureElement,
    EnumItem::ExternalTriggerOccurredEvent,
    EnumItem::RteEvent,
    EnumItem::AbstractAccessPoint,
    EnumItem::AtpClassifier,
    EnumItem::AtpFeature,
    EnumItem::AtpStructureElement,
    EnumItem::ExternalTriggeringPointIdent,
    EnumItem::IdentCaption,
    EnumItem::AtpFeature,
    EnumItem::AtpPrototype,
    EnumItem::AutosarDataPrototype,
    EnumItem::DataPrototype,
    EnumItem::Field,
    EnumItem::FieldMapping,
    EnumItem::FireAndForgetMapping,
    EnumItem::FireAndForgetMethodMapping,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::FirewallRule,
    EnumItem::PackageableElement,
    EnumItem::UploadableDesignElement,
    EnumItem::UploadablePackageElement,
    EnumItem::ArElement,
    EnumItem::AtpBlueprint,
    EnumItem::AtpBlueprintable,
    EnumItem::AtpClassifier,
    EnumItem::AtpType,
    EnumItem::CollectableElement,
    EnumItem::FirewallStateSwitchInterface,
    EnumItem::PackageableElement,
    EnumItem::PortInterface,
    EnumItem::FlatInstanceDescriptor,
    EnumItem::ArElement,
    EnumItem::AtpBlueprint,
    EnumItem::AtpBlueprintable,
    EnumItem::CollectableElement,
    EnumItem::FlatMap,
    EnumItem::PackageableElement,
    EnumItem::CollectableElement,
    EnumItem::FibexElement,
    EnumItem::FlexrayArTpConfig,
    EnumItem::PackageableElement,
    EnumItem::TpConfig,
    EnumItem::FlexrayArTpNode,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::CommunicationCluster,
    EnumItem::FibexElement,
    EnumItem::FlexrayCluster,
    EnumItem::PackageableElement,
    EnumItem::UploadableDesignElement,
    EnumItem::UploadablePackageElement,
    EnumItem::CommunicationConnector,
    EnumItem::FlexrayCommunicationConnector,
    EnumItem::CommunicationController,
    EnumItem::FlexrayCommunicationController,
    EnumItem::CollectableElement,
    EnumItem::FibexElement,
    EnumItem::FlexrayFrame,
    EnumItem::Frame,
    EnumItem::PackageableElement,
    EnumItem::FlexrayFrameTriggering,
    EnumItem::FrameTriggering,
    EnumItem::FlexrayNmCluster,
    EnumItem::NmCluster,
    EnumItem::FlexrayNmNode,
    EnumItem::NmNode,
    EnumItem::FlexrayPhysicalChannel,
    EnumItem::PhysicalChannel,
    EnumItem::CollectableElement,
    EnumItem::FibexElement,
    EnumItem::FlexrayTpConfig,
    EnumItem::PackageableElement,
    EnumItem::TpConfig,
    EnumItem::FlexrayTpConnectionControl,
    EnumItem::FlexrayTpNode,
    EnumItem::FlexrayTpPduPool,
    EnumItem::FmAttributeDef,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::FmFeature,
    EnumItem::PackageableElement,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::FmFeatureMap,
    EnumItem::PackageableElement,
    EnumItem::FmFeatureMapAssertion,
    EnumItem::FmFeatureMapCondition,
    EnumItem::FmFeatureMapElement,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::FmFeatureModel,
    EnumItem::PackageableElement,
    EnumItem::FmFeatureRelation,
    EnumItem::FmFeatureRestriction,
    EnumItem::FmFeatureSelection,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::FmFeatureSelectionSet,
    EnumItem::PackageableElement,
    EnumItem::CommConnectorPort,
    EnumItem::FramePort,
    EnumItem::FunctionGroupModeRequestPhmActionItem,
    EnumItem::PhmActionItem,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::FunctionGroupPortMapping,
    EnumItem::PackageableElement,
    EnumItem::UploadableDeploymentElement,
    EnumItem::UploadablePackageElement,
    EnumItem::ArElement,
    EnumItem::AtpClassifier,
    EnumItem::CollectableElement,
    EnumItem::FunctionGroupSet,
    EnumItem::PackageableElement,
    EnumItem::UploadableDesignElement,
    EnumItem::UploadablePackageElement,
    EnumItem::FunctionInhibitionAvailabilityNeeds,
    EnumItem::ServiceNeeds,
    EnumItem::FunctionInhibitionNeeds,
    EnumItem::ServiceNeeds,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::FunctionalClusterInteractsWithDiagnosticEventMapping,
    EnumItem::FunctionalClusterInteractsWithFunctionalClusterMapping,
    EnumItem::PackageableElement,
    EnumItem::UploadableDeploymentElement,
    EnumItem::UploadablePackageElement,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::FunctionalClusterInteractsWithFunctionalClusterMapping,
    EnumItem::FunctionalClusterInteractsWithPersistencyDeploymentMapping,
    EnumItem::PackageableElement,
    EnumItem::UploadableDeploymentElement,
    EnumItem::UploadablePackageElement,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::FunctionalClusterInteractsWithFunctionalClusterMapping,
    EnumItem::FunctionalClusterToSecurityEventDefinitionMapping,
    EnumItem::PackageableElement,
    EnumItem::UploadableDeploymentElement,
    EnumItem::UploadablePackageElement,
    EnumItem::DoIpServiceNeeds,
    EnumItem::FurtherActionByteNeeds,
    EnumItem::ServiceNeeds,
    EnumItem::CollectableElement,
    EnumItem::FibexElement,
    EnumItem::Gateway,
    EnumItem::PackageableElement,
    EnumItem::GeneralParameter,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::GeneralPurposeConnection,
    EnumItem::PackageableElement,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::FibexElement,
    EnumItem::GeneralPurposeIPdu,
    EnumItem::IPdu,
    EnumItem::PackageableElement,
    EnumItem::Pdu,
    EnumItem::UploadableDesignElement,
    EnumItem::UploadablePackageElement,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::FibexElement,
    EnumItem::GeneralPurposePdu,
    EnumItem::PackageableElement,
    EnumItem::Pdu,
    EnumItem::UploadableDesignElement,
    EnumItem::UploadablePackageElement,
    EnumItem::GeneralPurposeTimerServiceNeeds,
    EnumItem::ServiceNeeds,
    EnumItem::AdaptiveModuleInstantiation,
    EnumItem::AtpClassifier,
    EnumItem::AtpFeature,
    EnumItem::AtpStructureElement,
    EnumItem::GenericDiagnosticTransportInstantiation,
    EnumItem::NonOsModuleInstantiation,
    EnumItem::AbstractEthernetFrame,
    EnumItem::CollectableElement,
    EnumItem::EthernetFrame,
    EnumItem::FibexElement,
    EnumItem::Frame,
    EnumItem::GenericEthernetFrame,
    EnumItem::PackageableElement,
    EnumItem::AdaptiveModuleInstantiation,
    EnumItem::AtpClassifier,
    EnumItem::AtpFeature,
    EnumItem::AtpStructureElement,
    EnumItem::GenericModuleInstantiation,
    EnumItem::NonOsModuleInstantiation,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::GenericTpConnection,
    EnumItem::PackageableElement,
    EnumItem::UploadableDesignElement,
    EnumItem::UploadablePackageElement,
    EnumItem::GlobalSupervision,
    EnumItem::PhmSupervision,
    EnumItem::GlobalSupervisionEntity,
    EnumItem::GlobalSupervisionNeeds,
    EnumItem::ServiceNeeds,
    EnumItem::GlobalTimeCanMaster,
    EnumItem::GlobalTimeMaster,
    EnumItem::GlobalTimeCanSlave,
    EnumItem::GlobalTimeSlave,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::FibexElement,
    EnumItem::GlobalTimeDomain,
    EnumItem::PackageableElement,
    EnumItem::UploadableDesignElement,
    EnumItem::UploadablePackageElement,
    EnumItem::GlobalTimeEthMaster,
    EnumItem::GlobalTimeMaster,
    EnumItem::GlobalTimeEthSlave,
    EnumItem::GlobalTimeSlave,
    EnumItem::GlobalTimeFrMaster,
    EnumItem::GlobalTimeMaster,
    EnumItem::GlobalTimeFrSlave,
    EnumItem::GlobalTimeSlave,
    EnumItem::GlobalTimeGateway,
    EnumItem::HardwareTestNeeds,
    EnumItem::ServiceNeeds,
    EnumItem::HealthChannel,
    EnumItem::HealthChannelExternalMode,
    EnumItem::HealthChannel,
    EnumItem::HealthChannelExternalStatus,
    EnumItem::HealthChannel,
    EnumItem::HealthChannelSupervision,
    EnumItem::HwAttributeDef,
    EnumItem::HwAttributeLiteralDef,
    EnumItem::ArElement,
    EnumItem::AtpDefinition,
    EnumItem::CollectableElement,
    EnumItem::HwCategory,
    EnumItem::PackageableElement,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::HwDescriptionEntity,
    EnumItem::HwElement,
    EnumItem::PackageableElement,
    EnumItem::HwDescriptionEntity,
    EnumItem::HwPin,
    EnumItem::HwDescriptionEntity,
    EnumItem::HwPinGroup,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::HwDescriptionEntity,
    EnumItem::HwType,
    EnumItem::PackageableElement,
    EnumItem::CommConnectorPort,
    EnumItem::IPduPort,
    EnumItem::IPduTriggering,
    EnumItem::IPv6ExtHeaderFilterList,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::IPv6ExtHeaderFilterSet,
    EnumItem::PackageableElement,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::FibexElement,
    EnumItem::ISignal,
    EnumItem::PackageableElement,
    EnumItem::UploadableDesignElement,
    EnumItem::UploadablePackageElement,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::FibexElement,
    EnumItem::ISignalGroup,
    EnumItem::PackageableElement,
    EnumItem::UploadableDesignElement,
    EnumItem::UploadablePackageElement,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::FibexElement,
    EnumItem::IPdu,
    EnumItem::ISignalIPdu,
    EnumItem::PackageableElement,
    EnumItem::Pdu,
    EnumItem::UploadableDesignElement,
    EnumItem::UploadablePackageElement,
    EnumItem::CollectableElement,
    EnumItem::FibexElement,
    EnumItem::ISignalIPduGroup,
    EnumItem::PackageableElement,
    EnumItem::CommConnectorPort,
    EnumItem::ISignalPort,
    EnumItem::ISignalToIPduMapping,
    EnumItem::ISignalTriggering,
    EnumItem::AdaptiveModuleInstantiation,
    EnumItem::AtpClassifier,
    EnumItem::AtpFeature,
    EnumItem::AtpStructureElement,
    EnumItem::IamModuleInstantiation,
    EnumItem::NonOsModuleInstantiation,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::IdsDesign,
    EnumItem::PackageableElement,
    EnumItem::UploadableDesignElement,
    EnumItem::UploadablePackageElement,
    EnumItem::IdsMgrCustomTimestampNeeds,
    EnumItem::ServiceNeeds,
    EnumItem::IdsMgrNeeds,
    EnumItem::ServiceNeeds,
    EnumItem::ArElement,
    EnumItem::AtpBlueprint,
    EnumItem::AtpBlueprintable,
    EnumItem::AtpClassifier,
    EnumItem::AtpType,
    EnumItem::CollectableElement,
    EnumItem::IdsmAbstractPortInterface,
    EnumItem::IdsmContextProviderInterface,
    EnumItem::PackageableElement,
    EnumItem::PortInterface,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::IdsmContextProviderMapping,
    EnumItem::PackageableElement,
    EnumItem::UploadableDeploymentElement,
    EnumItem::UploadablePackageElement,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::IdsCommonElement,
    EnumItem::IdsmInstance,
    EnumItem::PackageableElement,
    EnumItem::UploadableDesignElement,
    EnumItem::UploadablePackageElement,
    EnumItem::AdaptiveModuleInstantiation,
    EnumItem::AtpClassifier,
    EnumItem::AtpFeature,
    EnumItem::AtpStructureElement,
    EnumItem::IdsPlatformInstantiation,
    EnumItem::IdsmModuleInstantiation,
    EnumItem::NonOsModuleInstantiation,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::IdsCommonElement,
    EnumItem::IdsmProperties,
    EnumItem::PackageableElement,
    EnumItem::UploadableDesignElement,
    EnumItem::UploadablePackageElement,
    EnumItem::ArElement,
    EnumItem::AtpBlueprint,
    EnumItem::AtpBlueprintable,
    EnumItem::AtpClassifier,
    EnumItem::AtpType,
    EnumItem::CollectableElement,
    EnumItem::IdsmAbstractPortInterface,
    EnumItem::IdsmQualifiedEventReceiverInterface,
    EnumItem::PackageableElement,
    EnumItem::PortInterface,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::IdsmQualifiedEventReceiverMapping,
    EnumItem::PackageableElement,
    EnumItem::UploadableDeploymentElement,
    EnumItem::UploadablePackageElement,
    EnumItem::AbstractSecurityIdsmInstanceFilter,
    EnumItem::IdsmRateLimitation,
    EnumItem::ArElement,
    EnumItem::AtpBlueprint,
    EnumItem::AtpBlueprintable,
    EnumItem::AtpClassifier,
    EnumItem::AtpType,
    EnumItem::CollectableElement,
    EnumItem::IdsmAbstractPortInterface,
    EnumItem::IdsmReportingModeProviderInterface,
    EnumItem::PackageableElement,
    EnumItem::PortInterface,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::IdsmReportingModeProviderMapping,
    EnumItem::PackageableElement,
    EnumItem::UploadableDeploymentElement,
    EnumItem::UploadablePackageElement,
    EnumItem::ArElement,
    EnumItem::AtpBlueprint,
    EnumItem::AtpBlueprintable,
    EnumItem::AtpClassifier,
    EnumItem::AtpType,
    EnumItem::CollectableElement,
    EnumItem::IdsmAbstractPortInterface,
    EnumItem::IdsmTimestampProviderInterface,
    EnumItem::PackageableElement,
    EnumItem::PortInterface,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::IdsmTimestampProviderMapping,
    EnumItem::PackageableElement,
    EnumItem::UploadableDeploymentElement,
    EnumItem::UploadablePackageElement,
    EnumItem::AbstractSecurityIdsmInstanceFilter,
    EnumItem::IdsmTrafficLimitation,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::EthernetMacRawDataStreamMapping,
    EnumItem::Ieee1722AcfBusPartRawDataStreamConsumerMapping,
    EnumItem::Ieee1722RawDataStreamMapping,
    EnumItem::PackageableElement,
    EnumItem::RawDataStreamMapping,
    EnumItem::UploadableDeploymentElement,
    EnumItem::UploadablePackageElement,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::EthernetMacRawDataStreamMapping,
    EnumItem::Ieee1722AcfBusRawDataStreamConsumerMapping,
    EnumItem::Ieee1722RawDataStreamMapping,
    EnumItem::PackageableElement,
    EnumItem::RawDataStreamMapping,
    EnumItem::UploadableDeploymentElement,
    EnumItem::UploadablePackageElement,
    EnumItem::AbstractRawDataStreamInterface,
    EnumItem::ArElement,
    EnumItem::AtpBlueprint,
    EnumItem::AtpBlueprintable,
    EnumItem::AtpClassifier,
    EnumItem::AtpType,
    EnumItem::CollectableElement,
    EnumItem::Ieee1722RawDataStreamConsumerInterface,
    EnumItem::MacLayerRawDataStreamInterface,
    EnumItem::PackageableElement,
    EnumItem::PortInterface,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::EthernetMacRawDataStreamMapping,
    EnumItem::Ieee1722RawDataStreamConsumerMapping,
    EnumItem::Ieee1722RawDataStreamMapping,
    EnumItem::PackageableElement,
    EnumItem::RawDataStreamMapping,
    EnumItem::UploadableDeploymentElement,
    EnumItem::UploadablePackageElement,
    EnumItem::AbstractRawDataStreamInterface,
    EnumItem::ArElement,
    EnumItem::AtpBlueprint,
    EnumItem::AtpBlueprintable,
    EnumItem::AtpClassifier,
    EnumItem::AtpType,
    EnumItem::CollectableElement,
    EnumItem::Ieee1722RawDataStreamProducerInterface,
    EnumItem::MacLayerRawDataStreamInterface,
    EnumItem::PackageableElement,
    EnumItem::PortInterface,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::EthernetMacRawDataStreamMapping,
    EnumItem::Ieee1722RawDataStreamMapping,
    EnumItem::Ieee1722RawDataStreamProducerMapping,
    EnumItem::PackageableElement,
    EnumItem::RawDataStreamMapping,
    EnumItem::UploadableDeploymentElement,
    EnumItem::UploadablePackageElement,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::Ieee1722TpAafConnection,
    EnumItem::Ieee1722TpAvConnection,
    EnumItem::Ieee1722TpConnection,
    EnumItem::PackageableElement,
    EnumItem::Ieee1722TpAcfBus,
    EnumItem::Ieee1722TpAcfCan,
    EnumItem::Ieee1722TpAcfBusPart,
    EnumItem::Ieee1722TpAcfCanPart,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::Ieee1722TpAcfConnection,
    EnumItem::Ieee1722TpConnection,
    EnumItem::PackageableElement,
    EnumItem::Ieee1722TpAcfBus,
    EnumItem::Ieee1722TpAcfLin,
    EnumItem::Ieee1722TpAcfBusPart,
    EnumItem::Ieee1722TpAcfLinPart,
    EnumItem::CollectableElement,
    EnumItem::FibexElement,
    EnumItem::Ieee1722TpConfig,
    EnumItem::PackageableElement,
    EnumItem::TpConfig,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::Ieee1722TpAvConnection,
    EnumItem::Ieee1722TpConnection,
    EnumItem::Ieee1722TpCrfConnection,
    EnumItem::PackageableElement,
    EnumItem::AbstractEthernetFrame,
    EnumItem::CollectableElement,
    EnumItem::EthernetFrame,
    EnumItem::FibexElement,
    EnumItem::Frame,
    EnumItem::Ieee1722TpEthernetFrame,
    EnumItem::PackageableElement,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::Ieee1722TpAvConnection,
    EnumItem::Ieee1722TpConnection,
    EnumItem::Ieee1722TpIidcConnection,
    EnumItem::PackageableElement,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::Ieee1722TpAvConnection,
    EnumItem::Ieee1722TpConnection,
    EnumItem::Ieee1722TpRvfConnection,
    EnumItem::PackageableElement,
    EnumItem::AbstractImplementationDataType,
    EnumItem::ArElement,
    EnumItem::AtpBlueprint,
    EnumItem::AtpBlueprintable,
    EnumItem::AtpClassifier,
    EnumItem::AtpType,
    EnumItem::AutosarDataType,
    EnumItem::CollectableElement,
    EnumItem::ImplementationDataType,
    EnumItem::PackageableElement,
    EnumItem::AbstractImplementationDataTypeElement,
    EnumItem::AtpClassifier,
    EnumItem::AtpFeature,
    EnumItem::AtpStructureElement,
    EnumItem::ImplementationDataTypeElement,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::ImplementationDataTypeElementExtension,
    EnumItem::PackageableElement,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::ImplementationDataTypeExtension,
    EnumItem::PackageableElement,
    EnumItem::AtpBlueprint,
    EnumItem::AtpBlueprintable,
    EnumItem::ImpositionTime,
    EnumItem::ArElement,
    EnumItem::AtpBlueprint,
    EnumItem::AtpBlueprintable,
    EnumItem::CollectableElement,
    EnumItem::ImpositionTimeDefinitionGroup,
    EnumItem::PackageableElement,
    EnumItem::IndicatorStatusNeeds,
    EnumItem::ServiceNeeds,
    EnumItem::AbstractEvent,
    EnumItem::AtpClassifier,
    EnumItem::AtpFeature,
    EnumItem::AtpStructureElement,
    EnumItem::InitEvent,
    EnumItem::RteEvent,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::InterfaceMapping,
    EnumItem::PackageableElement,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::InterfaceMappingSet,
    EnumItem::PackageableElement,
    EnumItem::AbstractEvent,
    EnumItem::AtpClassifier,
    EnumItem::AtpFeature,
    EnumItem::AtpStructureElement,
    EnumItem::InternalTriggerOccurredEvent,
    EnumItem::RteEvent,
    EnumItem::AbstractAccessPoint,
    EnumItem::AtpClassifier,
    EnumItem::AtpFeature,
    EnumItem::AtpStructureElement,
    EnumItem::InternalTriggeringPoint,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::InterpolationRoutineMappingSet,
    EnumItem::PackageableElement,
    EnumItem::AbstractIamRemoteSubject,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::IpIamRemoteSubject,
    EnumItem::PackageableElement,
    EnumItem::UploadableDeploymentElement,
    EnumItem::UploadablePackageElement,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::IpSecConfigProps,
    EnumItem::PackageableElement,
    EnumItem::UploadableDesignElement,
    EnumItem::UploadablePackageElement,
    EnumItem::AbstractIamRemoteSubject,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::IpSecIamRemoteSubject,
    EnumItem::PackageableElement,
    EnumItem::UploadableDeploymentElement,
    EnumItem::UploadablePackageElement,
    EnumItem::IpSecRule,
    EnumItem::AbstractCanCluster,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::CommunicationCluster,
    EnumItem::FibexElement,
    EnumItem::J1939Cluster,
    EnumItem::PackageableElement,
    EnumItem::UploadableDesignElement,
    EnumItem::UploadablePackageElement,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::J1939ControllerApplication,
    EnumItem::PackageableElement,
    EnumItem::J1939DcmDm19Support,
    EnumItem::ServiceNeeds,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::FibexElement,
    EnumItem::IPdu,
    EnumItem::J1939DcmIPdu,
    EnumItem::PackageableElement,
    EnumItem::Pdu,
    EnumItem::UploadableDesignElement,
    EnumItem::UploadablePackageElement,
    EnumItem::J1939NmCluster,
    EnumItem::NmCluster,
    EnumItem::J1939NmNode,
    EnumItem::NmNode,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::FibexElement,
    EnumItem::IPdu,
    EnumItem::J1939ProtectedIPdu,
    EnumItem::PackageableElement,
    EnumItem::Pdu,
    EnumItem::UploadableDesignElement,
    EnumItem::UploadablePackageElement,
    EnumItem::J1939RmIncomingRequestServiceNeeds,
    EnumItem::ServiceNeeds,
    EnumItem::J1939RmOutgoingRequestServiceNeeds,
    EnumItem::ServiceNeeds,
    EnumItem::J1939SharedAddressCluster,
    EnumItem::CollectableElement,
    EnumItem::FibexElement,
    EnumItem::J1939TpConfig,
    EnumItem::PackageableElement,
    EnumItem::TpConfig,
    EnumItem::J1939TpNode,
    EnumItem::Keyword,
    EnumItem::ArElement,
    EnumItem::AtpBlueprint,
    EnumItem::AtpBlueprintable,
    EnumItem::CollectableElement,
    EnumItem::KeywordSet,
    EnumItem::PackageableElement,
    EnumItem::LatencyTimingConstraint,
    EnumItem::TimingConstraint,
    EnumItem::Traceable,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::LifeCycleInfoSet,
    EnumItem::PackageableElement,
    EnumItem::AtpBlueprint,
    EnumItem::AtpBlueprintable,
    EnumItem::LifeCycleState,
    EnumItem::ArElement,
    EnumItem::AtpBlueprint,
    EnumItem::AtpBlueprintable,
    EnumItem::CollectableElement,
    EnumItem::LifeCycleStateDefinitionGroup,
    EnumItem::PackageableElement,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::CommunicationCluster,
    EnumItem::FibexElement,
    EnumItem::LinCluster,
    EnumItem::PackageableElement,
    EnumItem::UploadableDesignElement,
    EnumItem::UploadablePackageElement,
    EnumItem::CommunicationConnector,
    EnumItem::LinCommunicationConnector,
    EnumItem::CollectableElement,
    EnumItem::FibexElement,
    EnumItem::Frame,
    EnumItem::LinEventTriggeredFrame,
    EnumItem::LinFrame,
    EnumItem::PackageableElement,
    EnumItem::FrameTriggering,
    EnumItem::LinFrameTriggering,
    EnumItem::CommunicationController,
    EnumItem::LinCommunicationController,
    EnumItem::LinMaster,
    EnumItem::LinNmCluster,
    EnumItem::NmCluster,
    EnumItem::LinPhysicalChannel,
    EnumItem::PhysicalChannel,
    EnumItem::LinScheduleTable,
    EnumItem::CommunicationController,
    EnumItem::LinCommunicationController,
    EnumItem::LinSlave,
    EnumItem::LinSlaveConfigIdent,
    EnumItem::CollectableElement,
    EnumItem::FibexElement,
    EnumItem::Frame,
    EnumItem::LinFrame,
    EnumItem::LinSporadicFrame,
    EnumItem::PackageableElement,
    EnumItem::CollectableElement,
    EnumItem::FibexElement,
    EnumItem::LinTpConfig,
    EnumItem::PackageableElement,
    EnumItem::TpConfig,
    EnumItem::LinTpNode,
    EnumItem::CollectableElement,
    EnumItem::FibexElement,
    EnumItem::Frame,
    EnumItem::LinFrame,
    EnumItem::LinUnconditionalFrame,
    EnumItem::PackageableElement,
    EnumItem::Linker,
    EnumItem::LocalSupervision,
    EnumItem::PhmSupervision,
    EnumItem::AdaptiveModuleInstantiation,
    EnumItem::AtpClassifier,
    EnumItem::AtpFeature,
    EnumItem::AtpStructureElement,
    EnumItem::LogAndTraceInstantiation,
    EnumItem::NonOsModuleInstantiation,
    EnumItem::ArElement,
    EnumItem::AtpBlueprint,
    EnumItem::AtpBlueprintable,
    EnumItem::AtpClassifier,
    EnumItem::AtpType,
    EnumItem::CollectableElement,
    EnumItem::LogAndTraceInterface,
    EnumItem::PackageableElement,
    EnumItem::PortInterface,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::LogAndTraceMessageCollectionSet,
    EnumItem::PackageableElement,
    EnumItem::UploadableDesignElement,
    EnumItem::UploadablePackageElement,
    EnumItem::LogicAddress,
    EnumItem::LogicalExpression,
    EnumItem::LogicalSupervision,
    EnumItem::PhmSupervision,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::LtMessageCollectionToPortPrototypeMapping,
    EnumItem::PackageableElement,
    EnumItem::MacAddressVlanMembership,
    EnumItem::MacMulticastGroup,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::MacSecGlobalKayProps,
    EnumItem::PackageableElement,
    EnumItem::UploadableDesignElement,
    EnumItem::UploadablePackageElement,
    EnumItem::MacSecKayParticipant,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::MacSecParticipantSet,
    EnumItem::PackageableElement,
    EnumItem::UploadableDesignElement,
    EnumItem::UploadablePackageElement,
    EnumItem::ArElement,
    EnumItem::AtpClassifier,
    EnumItem::AtpFeature,
    EnumItem::AtpStructureElement,
    EnumItem::CollectableElement,
    EnumItem::Machine,
    EnumItem::PackageableElement,
    EnumItem::UploadableDeploymentElement,
    EnumItem::UploadablePackageElement,
    EnumItem::ArElement,
    EnumItem::AtpClassifier,
    EnumItem::AtpFeature,
    EnumItem::AtpStructureElement,
    EnumItem::CollectableElement,
    EnumItem::FibexElement,
    EnumItem::MachineDesign,
    EnumItem::PackageableElement,
    EnumItem::UploadableDesignElement,
    EnumItem::UploadablePackageElement,
    EnumItem::MachineModeRequestPhmActionItem,
    EnumItem::PhmActionItem,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::MachineTiming,
    EnumItem::PackageableElement,
    EnumItem::TimingExtension,
    EnumItem::McDataInstance,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::McFunction,
    EnumItem::PackageableElement,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::McGroup,
    EnumItem::PackageableElement,
    EnumItem::ExecutionTime,
    EnumItem::MeasuredExecutionTime,
    EnumItem::HeapUsage,
    EnumItem::MeasuredHeapUsage,
    EnumItem::MeasuredStackUsage,
    EnumItem::StackUsage,
    EnumItem::MemorySection,
    EnumItem::MemoryUsage,
    EnumItem::MethodMapping,
    EnumItem::AbstractAccessPoint,
    EnumItem::AtpClassifier,
    EnumItem::AtpFeature,
    EnumItem::AtpStructureElement,
    EnumItem::IdentCaption,
    EnumItem::ModeAccessPointIdent,
    EnumItem::AtpClassifier,
    EnumItem::AtpFeature,
    EnumItem::AtpStructureElement,
    EnumItem::ModeDeclaration,
    EnumItem::ArElement,
    EnumItem::AtpBlueprint,
    EnumItem::AtpBlueprintable,
    EnumItem::AtpClassifier,
    EnumItem::AtpType,
    EnumItem::CollectableElement,
    EnumItem::ModeDeclarationGroup,
    EnumItem::PackageableElement,
    EnumItem::UploadableDesignElement,
    EnumItem::UploadablePackageElement,
    EnumItem::AtpFeature,
    EnumItem::AtpPrototype,
    EnumItem::ModeDeclarationGroupPrototype,
    EnumItem::AtpClassifier,
    EnumItem::AtpFeature,
    EnumItem::AtpStructureElement,
    EnumItem::ModeDeclarationMapping,
    EnumItem::ArElement,
    EnumItem::AtpClassifier,
    EnumItem::AtpType,
    EnumItem::CollectableElement,
    EnumItem::ModeDeclarationMappingSet,
    EnumItem::PackageableElement,
    EnumItem::AtpBlueprint,
    EnumItem::AtpBlueprintable,
    EnumItem::ModeInterfaceMapping,
    EnumItem::PortInterfaceMapping,
    EnumItem::ArElement,
    EnumItem::AtpBlueprint,
    EnumItem::AtpBlueprintable,
    EnumItem::AtpClassifier,
    EnumItem::AtpType,
    EnumItem::CollectableElement,
    EnumItem::ModeSwitchInterface,
    EnumItem::PackageableElement,
    EnumItem::PortInterface,
    EnumItem::AbstractAccessPoint,
    EnumItem::AtpClassifier,
    EnumItem::AtpFeature,
    EnumItem::AtpStructureElement,
    EnumItem::ModeSwitchPoint,
    EnumItem::AbstractEvent,
    EnumItem::AtpClassifier,
    EnumItem::AtpFeature,
    EnumItem::AtpStructureElement,
    EnumItem::ModeSwitchedAckEvent,
    EnumItem::RteEvent,
    EnumItem::AtpClassifier,
    EnumItem::AtpFeature,
    EnumItem::AtpStructureElement,
    EnumItem::ModeTransition,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::FibexElement,
    EnumItem::IPdu,
    EnumItem::MultiplexedIPdu,
    EnumItem::PackageableElement,
    EnumItem::Pdu,
    EnumItem::UploadableDesignElement,
    EnumItem::UploadablePackageElement,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::FibexElement,
    EnumItem::IPdu,
    EnumItem::NPdu,
    EnumItem::PackageableElement,
    EnumItem::Pdu,
    EnumItem::UploadableDesignElement,
    EnumItem::UploadablePackageElement,
    EnumItem::NetworkEndpoint,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::NetworkHandlePortMapping,
    EnumItem::PackageableElement,
    EnumItem::UploadableDeploymentElement,
    EnumItem::UploadablePackageElement,
    EnumItem::ArElement,
    EnumItem::AtpBlueprint,
    EnumItem::AtpBlueprintable,
    EnumItem::AtpClassifier,
    EnumItem::AtpType,
    EnumItem::CollectableElement,
    EnumItem::NetworkManagementPortInterface,
    EnumItem::PackageableElement,
    EnumItem::PortInterface,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::FibexElement,
    EnumItem::NmConfig,
    EnumItem::PackageableElement,
    EnumItem::UploadableDesignElement,
    EnumItem::UploadablePackageElement,
    EnumItem::NmEcu,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::NmHandleToFunctionGroupStateMapping,
    EnumItem::PackageableElement,
    EnumItem::UploadableDeploymentElement,
    EnumItem::UploadablePackageElement,
    EnumItem::AdaptiveModuleInstantiation,
    EnumItem::AtpClassifier,
    EnumItem::AtpFeature,
    EnumItem::AtpStructureElement,
    EnumItem::NmInstantiation,
    EnumItem::NonOsModuleInstantiation,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::FunctionalClusterInteractsWithFunctionalClusterMapping,
    EnumItem::NmInteractsWithSmMapping,
    EnumItem::PackageableElement,
    EnumItem::UploadableDeploymentElement,
    EnumItem::UploadablePackageElement,
    EnumItem::NmNetworkHandle,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::FibexElement,
    EnumItem::NmPdu,
    EnumItem::PackageableElement,
    EnumItem::Pdu,
    EnumItem::UploadableDesignElement,
    EnumItem::UploadablePackageElement,
    EnumItem::NoCheckpointSupervision,
    EnumItem::PhmSupervision,
    EnumItem::NoSupervision,
    EnumItem::PhmSupervision,
    EnumItem::AtpClassifier,
    EnumItem::AtpFeature,
    EnumItem::AtpStructureElement,
    EnumItem::NvBlockDescriptor,
    EnumItem::NvBlockNeeds,
    EnumItem::ServiceNeeds,
    EnumItem::ArElement,
    EnumItem::AtomicSwComponentType,
    EnumItem::AtpBlueprint,
    EnumItem::AtpBlueprintable,
    EnumItem::AtpClassifier,
    EnumItem::AtpType,
    EnumItem::CollectableElement,
    EnumItem::NvBlockSwComponentType,
    EnumItem::PackageableElement,
    EnumItem::SwComponentType,
    EnumItem::ArElement,
    EnumItem::AtpBlueprint,
    EnumItem::AtpBlueprintable,
    EnumItem::AtpClassifier,
    EnumItem::AtpType,
    EnumItem::CollectableElement,
    EnumItem::DataInterface,
    EnumItem::NvDataInterface,
    EnumItem::PackageableElement,
    EnumItem::PortInterface,
    EnumItem::DiagnosticCapabilityElement,
    EnumItem::ObdControlServiceNeeds,
    EnumItem::ServiceNeeds,
    EnumItem::DiagnosticCapabilityElement,
    EnumItem::ObdInfoServiceNeeds,
    EnumItem::ServiceNeeds,
    EnumItem::DiagnosticCapabilityElement,
    EnumItem::ObdMonitorServiceNeeds,
    EnumItem::ServiceNeeds,
    EnumItem::DiagnosticCapabilityElement,
    EnumItem::ObdPidServiceNeeds,
    EnumItem::ServiceNeeds,
    EnumItem::DiagnosticCapabilityElement,
    EnumItem::ObdRatioDenominatorNeeds,
    EnumItem::ServiceNeeds,
    EnumItem::DiagnosticCapabilityElement,
    EnumItem::ObdRatioServiceNeeds,
    EnumItem::ServiceNeeds,
    EnumItem::OffsetTimingConstraint,
    EnumItem::TimingConstraint,
    EnumItem::Traceable,
    EnumItem::AbstractEvent,
    EnumItem::AtpClassifier,
    EnumItem::AtpFeature,
    EnumItem::AtpStructureElement,
    EnumItem::OperationInvokedEvent,
    EnumItem::RteEvent,
    EnumItem::AdaptiveModuleInstantiation,
    EnumItem::AtpClassifier,
    EnumItem::AtpFeature,
    EnumItem::AtpStructureElement,
    EnumItem::OsModuleInstantiation,
    EnumItem::AbstractEvent,
    EnumItem::AtpClassifier,
    EnumItem::AtpFeature,
    EnumItem::AtpStructureElement,
    EnumItem::OsTaskExecutionEvent,
    EnumItem::RteEvent,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::OsTaskProxy,
    EnumItem::PackageableElement,
    EnumItem::AbstractProvidedPortPrototype,
    EnumItem::AtpBlueprintable,
    EnumItem::AtpFeature,
    EnumItem::AtpPrototype,
    EnumItem::PPortPrototype,
    EnumItem::PortPrototype,
    EnumItem::AbstractAccessPoint,
    EnumItem::AtpClassifier,
    EnumItem::AtpFeature,
    EnumItem::AtpStructureElement,
    EnumItem::ParameterAccess,
    EnumItem::AtpFeature,
    EnumItem::AtpPrototype,
    EnumItem::AutosarDataPrototype,
    EnumItem::DataPrototype,
    EnumItem::ParameterDataPrototype,
    EnumItem::ArElement,
    EnumItem::AtpBlueprint,
    EnumItem::AtpBlueprintable,
    EnumItem::AtpClassifier,
    EnumItem::AtpType,
    EnumItem::CollectableElement,
    EnumItem::DataInterface,
    EnumItem::PackageableElement,
    EnumItem::ParameterInterface,
    EnumItem::PortInterface,
    EnumItem::ArElement,
    EnumItem::AtpBlueprint,
    EnumItem::AtpBlueprintable,
    EnumItem::AtpClassifier,
    EnumItem::AtpType,
    EnumItem::CollectableElement,
    EnumItem::PackageableElement,
    EnumItem::ParameterSwComponentType,
    EnumItem::SwComponentType,
    EnumItem::AtpClassifier,
    EnumItem::AtpFeature,
    EnumItem::AtpStructureElement,
    EnumItem::PassThroughSwConnector,
    EnumItem::SwConnector,
    EnumItem::PduActivationRoutingGroup,
    EnumItem::PduToFrameMapping,
    EnumItem::PduTriggering,
    EnumItem::CollectableElement,
    EnumItem::FibexElement,
    EnumItem::PackageableElement,
    EnumItem::PdurIPduGroup,
    EnumItem::AtpClassifier,
    EnumItem::AtpFeature,
    EnumItem::AtpStructureElement,
    EnumItem::PerInstanceMemory,
    EnumItem::EventTriggeringConstraint,
    EnumItem::PeriodicEventTriggering,
    EnumItem::TimingConstraint,
    EnumItem::Traceable,
    EnumItem::AtpFeature,
    EnumItem::AtpPrototype,
    EnumItem::AutosarDataPrototype,
    EnumItem::DataPrototype,
    EnumItem::PersistencyDataElement,
    EnumItem::PersistencyInterfaceElement,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::FunctionalClusterInteractsWithFunctionalClusterMapping,
    EnumItem::PackageableElement,
    EnumItem::PersistencyDeploymentElementToCryptoKeySlotMapping,
    EnumItem::UploadableDeploymentElement,
    EnumItem::UploadablePackageElement,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::FunctionalClusterInteractsWithFunctionalClusterMapping,
    EnumItem::PackageableElement,
    EnumItem::PersistencyDeploymentToCryptoKeySlotMapping,
    EnumItem::UploadableDeploymentElement,
    EnumItem::UploadablePackageElement,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::FunctionalClusterInteractsWithFunctionalClusterMapping,
    EnumItem::PackageableElement,
    EnumItem::PersistencyDeploymentToDltLogChannelMapping,
    EnumItem::UploadablePackageElement,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::FunctionalClusterInteractsWithFunctionalClusterMapping,
    EnumItem::PackageableElement,
    EnumItem::PersistencyDeploymentToDltLogSinkMapping,
    EnumItem::UploadableDeploymentElement,
    EnumItem::UploadablePackageElement,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::PackageableElement,
    EnumItem::PersistencyDeploymentElement,
    EnumItem::PersistencyFile,
    EnumItem::UploadablePackageElement,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::PackageableElement,
    EnumItem::PersistencyDeployment,
    EnumItem::PersistencyFileArray,
    EnumItem::UploadablePackageElement,
    EnumItem::PersistencyFileElement,
    EnumItem::PersistencyInterfaceElement,
    EnumItem::PersistencyFileProxy,
    EnumItem::ArElement,
    EnumItem::AtpBlueprint,
    EnumItem::AtpBlueprintable,
    EnumItem::AtpClassifier,
    EnumItem::AtpType,
    EnumItem::CollectableElement,
    EnumItem::PackageableElement,
    EnumItem::PersistencyFileProxyInterface,
    EnumItem::PersistencyInterface,
    EnumItem::PortInterface,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::PackageableElement,
    EnumItem::PersistencyFileProxyToFileMapping,
    EnumItem::UploadablePackageElement,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::PackageableElement,
    EnumItem::PersistencyDeployment,
    EnumItem::PersistencyFileStorage,
    EnumItem::UploadableDeploymentElement,
    EnumItem::UploadableExclusivePackageElement,
    EnumItem::UploadablePackageElement,
    EnumItem::ArElement,
    EnumItem::AtpBlueprint,
    EnumItem::AtpBlueprintable,
    EnumItem::AtpClassifier,
    EnumItem::AtpType,
    EnumItem::CollectableElement,
    EnumItem::PackageableElement,
    EnumItem::PersistencyFileStorageInterface,
    EnumItem::PersistencyInterface,
    EnumItem::PortInterface,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::PackageableElement,
    EnumItem::PersistencyDeployment,
    EnumItem::PersistencyKeyValueDatabase,
    EnumItem::UploadablePackageElement,
    EnumItem::ArElement,
    EnumItem::AtpBlueprint,
    EnumItem::AtpBlueprintable,
    EnumItem::AtpClassifier,
    EnumItem::AtpType,
    EnumItem::CollectableElement,
    EnumItem::PackageableElement,
    EnumItem::PersistencyInterface,
    EnumItem::PersistencyKeyValueDatabaseInterface,
    EnumItem::PortInterface,
    EnumItem::PersistencyDeploymentElement,
    EnumItem::PersistencyKeyValuePair,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::PackageableElement,
    EnumItem::PersistencyDeployment,
    EnumItem::PersistencyKeyValueStorage,
    EnumItem::UploadableDeploymentElement,
    EnumItem::UploadableExclusivePackageElement,
    EnumItem::UploadablePackageElement,
    EnumItem::ArElement,
    EnumItem::AtpBlueprint,
    EnumItem::AtpBlueprintable,
    EnumItem::AtpClassifier,
    EnumItem::AtpType,
    EnumItem::CollectableElement,
    EnumItem::PackageableElement,
    EnumItem::PersistencyInterface,
    EnumItem::PersistencyKeyValueStorageInterface,
    EnumItem::PortInterface,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::PackageableElement,
    EnumItem::PersistencyPortPrototypeToFileArrayMapping,
    EnumItem::UploadablePackageElement,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::PackageableElement,
    EnumItem::PersistencyPortPrototypeToDeploymentMapping,
    EnumItem::PersistencyPortPrototypeToFileStorageMapping,
    EnumItem::UploadableDeploymentElement,
    EnumItem::UploadableExclusivePackageElement,
    EnumItem::UploadablePackageElement,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::PackageableElement,
    EnumItem::PersistencyPortPrototypeToKeyValueDatabaseMapping,
    EnumItem::UploadablePackageElement,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::PackageableElement,
    EnumItem::PersistencyPortPrototypeToDeploymentMapping,
    EnumItem::PersistencyPortPrototypeToKeyValueStorageMapping,
    EnumItem::UploadableDeploymentElement,
    EnumItem::UploadableExclusivePackageElement,
    EnumItem::UploadablePackageElement,
    EnumItem::PhmAction,
    EnumItem::PhmActionList,
    EnumItem::PhmArbitration,
    EnumItem::AtpFeature,
    EnumItem::PhmCheckpoint,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::PackageableElement,
    EnumItem::PhmContributionToMachineMapping,
    EnumItem::UploadableDeploymentElement,
    EnumItem::UploadablePackageElement,
    EnumItem::ArElement,
    EnumItem::AtpBlueprint,
    EnumItem::AtpBlueprintable,
    EnumItem::AtpClassifier,
    EnumItem::AtpType,
    EnumItem::CollectableElement,
    EnumItem::PackageableElement,
    EnumItem::PhmHealthChannelInterface,
    EnumItem::PlatformHealthManagementInterface,
    EnumItem::PortInterface,
    EnumItem::ArElement,
    EnumItem::AtpBlueprint,
    EnumItem::AtpBlueprintable,
    EnumItem::AtpClassifier,
    EnumItem::AtpType,
    EnumItem::CollectableElement,
    EnumItem::PackageableElement,
    EnumItem::PhmAbstractRecoveryNotificationInterface,
    EnumItem::PhmHealthChannelRecoveryNotificationInterface,
    EnumItem::PlatformHealthManagementInterface,
    EnumItem::PortInterface,
    EnumItem::AtpFeature,
    EnumItem::PhmHealthChannelStatus,
    EnumItem::PhmLogicalExpression,
    EnumItem::ArElement,
    EnumItem::AtpBlueprint,
    EnumItem::AtpBlueprintable,
    EnumItem::AtpClassifier,
    EnumItem::AtpType,
    EnumItem::CollectableElement,
    EnumItem::PackageableElement,
    EnumItem::PhmRecoveryActionInterface,
    EnumItem::PlatformHealthManagementInterface,
    EnumItem::PortInterface,
    EnumItem::PhmRule,
    EnumItem::ArElement,
    EnumItem::AtpBlueprint,
    EnumItem::AtpBlueprintable,
    EnumItem::AtpClassifier,
    EnumItem::AtpType,
    EnumItem::CollectableElement,
    EnumItem::PackageableElement,
    EnumItem::PhmSupervisedEntityInterface,
    EnumItem::PlatformHealthManagementInterface,
    EnumItem::PortInterface,
    EnumItem::ArElement,
    EnumItem::AtpBlueprint,
    EnumItem::AtpBlueprintable,
    EnumItem::AtpClassifier,
    EnumItem::AtpType,
    EnumItem::CollectableElement,
    EnumItem::PackageableElement,
    EnumItem::PhmAbstractRecoveryNotificationInterface,
    EnumItem::PhmSupervisionRecoveryNotificationInterface,
    EnumItem::PlatformHealthManagementInterface,
    EnumItem::PortInterface,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::PackageableElement,
    EnumItem::PhysicalDimension,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::PackageableElement,
    EnumItem::PhysicalDimensionMappingSet,
    EnumItem::ActionItem,
    EnumItem::PlatformActionItem,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::PackageableElement,
    EnumItem::PlatformHealthManagementContribution,
    EnumItem::UploadableDeploymentElement,
    EnumItem::UploadablePackageElement,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::PackageableElement,
    EnumItem::PlatformModuleEndpointConfiguration,
    EnumItem::PlatformModuleEthernetEndpointConfiguration,
    EnumItem::PhmActionItem,
    EnumItem::PlatformPhmActionItem,
    EnumItem::PncMappingIdent,
    EnumItem::ArElement,
    EnumItem::AtpClassifier,
    EnumItem::AtpFeature,
    EnumItem::AtpStructureElement,
    EnumItem::CollectableElement,
    EnumItem::PackageableElement,
    EnumItem::PortBlueprint,
    EnumItem::PortElementToCommunicationResourceMapping,
    EnumItem::AtpClassifier,
    EnumItem::AtpFeature,
    EnumItem::AtpStructureElement,
    EnumItem::PortGroup,
    EnumItem::ArElement,
    EnumItem::AtpBlueprint,
    EnumItem::AtpBlueprintable,
    EnumItem::CollectableElement,
    EnumItem::PackageableElement,
    EnumItem::PortInterfaceMappingSet,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::PackageableElement,
    EnumItem::PortInterfaceToDataTypeMapping,
    EnumItem::UploadablePackageElement,
    EnumItem::ArElement,
    EnumItem::AtpBlueprint,
    EnumItem::AtpClassifier,
    EnumItem::AtpFeature,
    EnumItem::AtpStructureElement,
    EnumItem::CollectableElement,
    EnumItem::PackageableElement,
    EnumItem::PortPrototypeBlueprint,
    EnumItem::PossibleErrorReaction,
    EnumItem::ArElement,
    EnumItem::AtpDefinition,
    EnumItem::CollectableElement,
    EnumItem::PackageableElement,
    EnumItem::PostBuildVariantCriterion,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::PackageableElement,
    EnumItem::PostBuildVariantCriterionValueSet,
    EnumItem::AbstractProvidedPortPrototype,
    EnumItem::AbstractRequiredPortPrototype,
    EnumItem::AtpBlueprintable,
    EnumItem::AtpFeature,
    EnumItem::AtpPrototype,
    EnumItem::PortPrototype,
    EnumItem::PrPortPrototype,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::PackageableElement,
    EnumItem::PredefinedVariant,
    EnumItem::PresharedKeyIdentity,
    EnumItem::AttributeTailoring,
    EnumItem::DataFormatElementReference,
    EnumItem::DataFormatElementScope,
    EnumItem::PrimitiveAttributeTailoring,
    EnumItem::SpecElementReference,
    EnumItem::SpecElementScope,
    EnumItem::AbstractExecutionContext,
    EnumItem::ArElement,
    EnumItem::AtpClassifier,
    EnumItem::CollectableElement,
    EnumItem::PackageableElement,
    EnumItem::Process,
    EnumItem::UploadableDeploymentElement,
    EnumItem::UploadablePackageElement,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::PackageableElement,
    EnumItem::ProcessDesign,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::PackageableElement,
    EnumItem::ProcessDesignToMachineDesignMapping,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::PackageableElement,
    EnumItem::ProcessDesignToMachineDesignMappingSet,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::PackageableElement,
    EnumItem::ProcessExecutionError,
    EnumItem::UploadableDeploymentElement,
    EnumItem::UploadablePackageElement,
    EnumItem::PhmActionItem,
    EnumItem::ProcessPhmActionItem,
    EnumItem::ProcessToMachineMapping,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::PackageableElement,
    EnumItem::ProcessToMachineMappingSet,
    EnumItem::UploadableDeploymentElement,
    EnumItem::UploadablePackageElement,
    EnumItem::Processor,
    EnumItem::ProcessorCore,
    EnumItem::AdaptivePlatformServiceInstance,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::PackageableElement,
    EnumItem::ProvidedApServiceInstance,
    EnumItem::ProvidedDdsServiceInstance,
    EnumItem::UploadablePackageElement,
    EnumItem::AbstractServiceInstance,
    EnumItem::ProvidedServiceInstance,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::PackageableElement,
    EnumItem::ProvidedServiceInstanceToSwClusterDesignPPortPrototypeMapping,
    EnumItem::ServiceInstanceToSwClusterDesignPortPrototypeMapping,
    EnumItem::UploadablePackageElement,
    EnumItem::AdaptivePlatformServiceInstance,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::PackageableElement,
    EnumItem::ProvidedApServiceInstance,
    EnumItem::ProvidedSomeipServiceInstance,
    EnumItem::UploadableDesignElement,
    EnumItem::UploadablePackageElement,
    EnumItem::AdaptivePlatformServiceInstance,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::PackageableElement,
    EnumItem::ProvidedApServiceInstance,
    EnumItem::ProvidedUserDefinedServiceInstance,
    EnumItem::UploadableDesignElement,
    EnumItem::UploadablePackageElement,
    EnumItem::PskIdentityToKeySlotMapping,
    EnumItem::PureLocalTimeBase,
    EnumItem::TimeBaseResource,
    EnumItem::AbstractRequiredPortPrototype,
    EnumItem::AtpBlueprintable,
    EnumItem::AtpFeature,
    EnumItem::AtpPrototype,
    EnumItem::PortPrototype,
    EnumItem::RPortPrototype,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::PackageableElement,
    EnumItem::RapidPrototypingScenario,
    EnumItem::AbstractRawDataStreamInterface,
    EnumItem::ArElement,
    EnumItem::AtpBlueprint,
    EnumItem::AtpBlueprintable,
    EnumItem::AtpClassifier,
    EnumItem::AtpType,
    EnumItem::CollectableElement,
    EnumItem::PackageableElement,
    EnumItem::PortInterface,
    EnumItem::RawDataStreamClientInterface,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::PackageableElement,
    EnumItem::RawDataStreamDeployment,
    EnumItem::UploadableDeploymentElement,
    EnumItem::UploadablePackageElement,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::GrantDesign,
    EnumItem::PackageableElement,
    EnumItem::RawDataStreamGrantDesign,
    EnumItem::ArElement,
    EnumItem::AtpBlueprint,
    EnumItem::AtpBlueprintable,
    EnumItem::AtpClassifier,
    EnumItem::AtpType,
    EnumItem::CollectableElement,
    EnumItem::PackageableElement,
    EnumItem::PortInterface,
    EnumItem::RawDataStreamInterface,
    EnumItem::RawDataStreamMethodDeployment,
    EnumItem::AbstractRawDataStreamInterface,
    EnumItem::ArElement,
    EnumItem::AtpBlueprint,
    EnumItem::AtpBlueprintable,
    EnumItem::AtpClassifier,
    EnumItem::AtpType,
    EnumItem::CollectableElement,
    EnumItem::PackageableElement,
    EnumItem::PortInterface,
    EnumItem::RawDataStreamServerInterface,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::PackageableElement,
    EnumItem::RecoveryNotification,
    EnumItem::UploadableDeploymentElement,
    EnumItem::UploadablePackageElement,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::PackageableElement,
    EnumItem::RecoveryNotificationToPPortPrototypeMapping,
    EnumItem::UploadableDeploymentElement,
    EnumItem::UploadablePackageElement,
    EnumItem::PhmActionItem,
    EnumItem::RecoveryViaApplicationAction,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::PackageableElement,
    EnumItem::RecoveryViaApplicationActionToClientServerOperationMapping,
    EnumItem::UploadablePackageElement,
    EnumItem::AttributeTailoring,
    EnumItem::DataFormatElementReference,
    EnumItem::DataFormatElementScope,
    EnumItem::ReferenceTailoring,
    EnumItem::SpecElementReference,
    EnumItem::SpecElementScope,
    EnumItem::AdaptivePlatformServiceInstance,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::PackageableElement,
    EnumItem::RequiredApServiceInstance,
    EnumItem::RequiredDdsServiceInstance,
    EnumItem::UploadablePackageElement,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::PackageableElement,
    EnumItem::RequiredServiceInstanceToSwClusterDesignRPortPrototypeMapping,
    EnumItem::ServiceInstanceToSwClusterDesignPortPrototypeMapping,
    EnumItem::UploadablePackageElement,
    EnumItem::AdaptivePlatformServiceInstance,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::PackageableElement,
    EnumItem::RequiredApServiceInstance,
    EnumItem::RequiredSomeipServiceInstance,
    EnumItem::UploadableDesignElement,
    EnumItem::UploadablePackageElement,
    EnumItem::AdaptivePlatformServiceInstance,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::PackageableElement,
    EnumItem::RequiredApServiceInstance,
    EnumItem::RequiredUserDefinedServiceInstance,
    EnumItem::UploadableDesignElement,
    EnumItem::UploadablePackageElement,
    EnumItem::ResourceConsumption,
    EnumItem::ResourceGroup,
    EnumItem::AtpClassifier,
    EnumItem::AtpFeature,
    EnumItem::AtpStructureElement,
    EnumItem::RestAbstractPropertyDef,
    EnumItem::RestArrayPropertyDef,
    EnumItem::AtpClassifier,
    EnumItem::AtpFeature,
    EnumItem::AtpStructureElement,
    EnumItem::RestAbstractPropertyDef,
    EnumItem::RestBooleanPropertyDef,
    EnumItem::RestPrimitivePropertyDef,
    EnumItem::RestElementDef,
    EnumItem::AtpBlueprint,
    EnumItem::AtpBlueprintable,
    EnumItem::RestAbstractEndpoint,
    EnumItem::RestEndpointDelete,
    EnumItem::AtpBlueprint,
    EnumItem::AtpBlueprintable,
    EnumItem::RestAbstractEndpoint,
    EnumItem::RestEndpointGet,
    EnumItem::AtpBlueprint,
    EnumItem::AtpBlueprintable,
    EnumItem::RestAbstractEndpoint,
    EnumItem::RestEndpointPost,
    EnumItem::AtpBlueprint,
    EnumItem::AtpBlueprintable,
    EnumItem::RestAbstractEndpoint,
    EnumItem::RestEndpointPut,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::PackageableElement,
    EnumItem::RestHttpPortPrototypeMapping,
    EnumItem::UploadablePackageElement,
    EnumItem::AtpClassifier,
    EnumItem::AtpFeature,
    EnumItem::AtpStructureElement,
    EnumItem::RestAbstractNumericalPropertyDef,
    EnumItem::RestAbstractPropertyDef,
    EnumItem::RestIntegerPropertyDef,
    EnumItem::RestPrimitivePropertyDef,
    EnumItem::AtpClassifier,
    EnumItem::AtpFeature,
    EnumItem::AtpStructureElement,
    EnumItem::RestAbstractNumericalPropertyDef,
    EnumItem::RestAbstractPropertyDef,
    EnumItem::RestNumberPropertyDef,
    EnumItem::RestPrimitivePropertyDef,
    EnumItem::AtpClassifier,
    EnumItem::AtpFeature,
    EnumItem::AtpStructureElement,
    EnumItem::RestAbstractPropertyDef,
    EnumItem::RestObjectRef,
    EnumItem::RestPrimitivePropertyDef,
    EnumItem::RestResourceDef,
    EnumItem::ArElement,
    EnumItem::AtpBlueprint,
    EnumItem::AtpBlueprintable,
    EnumItem::AtpClassifier,
    EnumItem::AtpType,
    EnumItem::CollectableElement,
    EnumItem::PackageableElement,
    EnumItem::PortInterface,
    EnumItem::RestServiceInterface,
    EnumItem::AtpClassifier,
    EnumItem::AtpFeature,
    EnumItem::AtpStructureElement,
    EnumItem::RestAbstractPropertyDef,
    EnumItem::RestPrimitivePropertyDef,
    EnumItem::RestStringPropertyDef,
    EnumItem::AtpFeature,
    EnumItem::AtpPrototype,
    EnumItem::RootSwClusterDesignComponentPrototype,
    EnumItem::AtpFeature,
    EnumItem::AtpPrototype,
    EnumItem::RootSwComponentPrototype,
    EnumItem::AtpFeature,
    EnumItem::AtpPrototype,
    EnumItem::RootSwCompositionPrototype,
    EnumItem::HeapUsage,
    EnumItem::RoughEstimateHeapUsage,
    EnumItem::ExecutionTime,
    EnumItem::RoughEstimateOfExecutionTime,
    EnumItem::RoughEstimateStackUsage,
    EnumItem::StackUsage,
    EnumItem::RptComponent,
    EnumItem::RptContainer,
    EnumItem::RptExecutableEntity,
    EnumItem::RptExecutableEntityEvent,
    EnumItem::RptExecutionContext,
    EnumItem::RptProfile,
    EnumItem::RptServicePoint,
    EnumItem::RteEventInCompositionSeparation,
    EnumItem::RteEventInCompositionToOsTaskProxyMapping,
    EnumItem::RteEventInSystemSeparation,
    EnumItem::RteEventInSystemToOsTaskProxyMapping,
    EnumItem::Rule,
    EnumItem::AtpClassifier,
    EnumItem::AtpFeature,
    EnumItem::AtpStructureElement,
    EnumItem::ExecutableEntity,
    EnumItem::RunnableEntity,
    EnumItem::AtpClassifier,
    EnumItem::AtpFeature,
    EnumItem::AtpStructureElement,
    EnumItem::RunnableEntityGroup,
    EnumItem::RuntimeError,
    EnumItem::TracedFailure,
    EnumItem::SdgAggregationWithVariation,
    EnumItem::SdgAttribute,
    EnumItem::SdgCaption,
    EnumItem::SdgClass,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::PackageableElement,
    EnumItem::SdgDef,
    EnumItem::SdgAbstractForeignReference,
    EnumItem::SdgAttribute,
    EnumItem::SdgForeignReference,
    EnumItem::SdgAbstractForeignReference,
    EnumItem::SdgAttribute,
    EnumItem::SdgForeignReferenceWithVariation,
    EnumItem::SdgAbstractPrimitiveAttribute,
    EnumItem::SdgAttribute,
    EnumItem::SdgPrimitiveAttribute,
    EnumItem::SdgAbstractPrimitiveAttribute,
    EnumItem::SdgAttribute,
    EnumItem::SdgPrimitiveAttributeWithVariation,
    EnumItem::SdgAttribute,
    EnumItem::SdgReference,
    EnumItem::DataFormatElementReference,
    EnumItem::DataFormatElementScope,
    EnumItem::SdgTailoring,
    EnumItem::SpecElementReference,
    EnumItem::SpecElementScope,
    EnumItem::CryptoServiceMapping,
    EnumItem::SecOcCryptoServiceMapping,
    EnumItem::SecOcDeployment,
    EnumItem::SecureCommunicationDeployment,
    EnumItem::SecOcJobMapping,
    EnumItem::SecOcJobRequirement,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::PackageableElement,
    EnumItem::SecOcSecureComProps,
    EnumItem::SecureComProps,
    EnumItem::UploadableDesignElement,
    EnumItem::UploadablePackageElement,
    EnumItem::ImplementationProps,
    EnumItem::SectionNamePrefix,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::PackageableElement,
    EnumItem::SecureComPropsSet,
    EnumItem::SecureCommunicationAuthenticationProps,
    EnumItem::SecureCommunicationFreshnessProps,
    EnumItem::CollectableElement,
    EnumItem::FibexElement,
    EnumItem::PackageableElement,
    EnumItem::SecureCommunicationPropsSet,
    EnumItem::SecureOnBoardCommunicationNeeds,
    EnumItem::ServiceNeeds,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::FibexElement,
    EnumItem::IPdu,
    EnumItem::PackageableElement,
    EnumItem::Pdu,
    EnumItem::SecuredIPdu,
    EnumItem::UploadableDesignElement,
    EnumItem::UploadablePackageElement,
    EnumItem::AbstractSecurityEventFilter,
    EnumItem::SecurityEventAggregationFilter,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::IdsCommonElement,
    EnumItem::PackageableElement,
    EnumItem::SecurityEventContextDataDefinition,
    EnumItem::UploadableDesignElement,
    EnumItem::UploadablePackageElement,
    EnumItem::SecurityEventContextDataElement,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::IdsCommonElement,
    EnumItem::IdsMapping,
    EnumItem::PackageableElement,
    EnumItem::SecurityEventContextMapping,
    EnumItem::SecurityEventContextMappingApplication,
    EnumItem::UploadableDesignElement,
    EnumItem::UploadablePackageElement,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::IdsCommonElement,
    EnumItem::IdsMapping,
    EnumItem::PackageableElement,
    EnumItem::SecurityEventContextMapping,
    EnumItem::SecurityEventContextMappingBswModule,
    EnumItem::UploadableDesignElement,
    EnumItem::UploadablePackageElement,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::IdsCommonElement,
    EnumItem::IdsMapping,
    EnumItem::PackageableElement,
    EnumItem::SecurityEventContextMapping,
    EnumItem::SecurityEventContextMappingCommConnector,
    EnumItem::UploadableDesignElement,
    EnumItem::UploadablePackageElement,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::IdsCommonElement,
    EnumItem::IdsMapping,
    EnumItem::PackageableElement,
    EnumItem::SecurityEventContextMapping,
    EnumItem::SecurityEventContextMappingFunctionalCluster,
    EnumItem::UploadableDesignElement,
    EnumItem::UploadablePackageElement,
    EnumItem::SecurityEventContextProps,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::IdsCommonElement,
    EnumItem::PackageableElement,
    EnumItem::SecurityEventDefinition,
    EnumItem::UploadableDesignElement,
    EnumItem::UploadablePackageElement,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::IdsCommonElement,
    EnumItem::PackageableElement,
    EnumItem::SecurityEventFilterChain,
    EnumItem::UploadableDesignElement,
    EnumItem::UploadablePackageElement,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::PackageableElement,
    EnumItem::SecurityEventMapping,
    EnumItem::UploadableDeploymentElement,
    EnumItem::UploadablePackageElement,
    EnumItem::AbstractSecurityEventFilter,
    EnumItem::SecurityEventOneEveryNFilter,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::IdsCommonElement,
    EnumItem::PackageableElement,
    EnumItem::SecurityEventReportInstanceDefinition,
    EnumItem::UploadableDesignElement,
    EnumItem::UploadablePackageElement,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::IdsCommonElement,
    EnumItem::PackageableElement,
    EnumItem::SecurityEventReportInstanceValue,
    EnumItem::UploadableDesignElement,
    EnumItem::UploadablePackageElement,
    EnumItem::ArElement,
    EnumItem::AtpBlueprint,
    EnumItem::AtpBlueprintable,
    EnumItem::AtpClassifier,
    EnumItem::AtpType,
    EnumItem::CollectableElement,
    EnumItem::IdsmAbstractPortInterface,
    EnumItem::PackageableElement,
    EnumItem::PortInterface,
    EnumItem::SecurityEventReportInterface,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::PackageableElement,
    EnumItem::SecurityEventReportToSecurityEventDefinitionMapping,
    EnumItem::UploadableDesignElement,
    EnumItem::UploadablePackageElement,
    EnumItem::AbstractSecurityEventFilter,
    EnumItem::SecurityEventStateFilter,
    EnumItem::AbstractSecurityEventFilter,
    EnumItem::SecurityEventThresholdFilter,
    EnumItem::ArElement,
    EnumItem::AtpBlueprint,
    EnumItem::AtpBlueprintable,
    EnumItem::AtpClassifier,
    EnumItem::AtpType,
    EnumItem::CollectableElement,
    EnumItem::DataInterface,
    EnumItem::PackageableElement,
    EnumItem::PortInterface,
    EnumItem::SenderReceiverInterface,
    EnumItem::ArElement,
    EnumItem::AtomicSwComponentType,
    EnumItem::AtpBlueprint,
    EnumItem::AtpBlueprintable,
    EnumItem::AtpClassifier,
    EnumItem::AtpType,
    EnumItem::CollectableElement,
    EnumItem::PackageableElement,
    EnumItem::SensorActuatorSwComponentType,
    EnumItem::SwComponentType,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::PackageableElement,
    EnumItem::SerializationTechnology,
    EnumItem::CollectableElement,
    EnumItem::FibexElement,
    EnumItem::PackageableElement,
    EnumItem::ServiceInstanceCollectionSet,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::PackageableElement,
    EnumItem::ServiceInstanceToApplicationEndpointMapping,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::PackageableElement,
    EnumItem::ServiceInstanceToPortPrototypeMapping,
    EnumItem::UploadableDesignElement,
    EnumItem::UploadablePackageElement,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::PackageableElement,
    EnumItem::ServiceInstanceToSignalMapping,
    EnumItem::UploadableDesignElement,
    EnumItem::UploadablePackageElement,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::PackageableElement,
    EnumItem::ServiceInstanceToSignalMappingSet,
    EnumItem::ArElement,
    EnumItem::AtpBlueprint,
    EnumItem::AtpBlueprintable,
    EnumItem::AtpClassifier,
    EnumItem::AtpType,
    EnumItem::CollectableElement,
    EnumItem::PackageableElement,
    EnumItem::PortInterface,
    EnumItem::ServiceInterface,
    EnumItem::ServiceInterfaceApplicationErrorMapping,
    EnumItem::ServiceInterfaceElementMapping,
    EnumItem::ServiceInterfaceElementSecureComConfig,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::PackageableElement,
    EnumItem::ServiceInterfaceElementMapping,
    EnumItem::ServiceInterfaceEventMapping,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::PackageableElement,
    EnumItem::ServiceInterfaceElementMapping,
    EnumItem::ServiceInterfaceFieldMapping,
    EnumItem::AtpBlueprint,
    EnumItem::AtpBlueprintable,
    EnumItem::PortInterfaceMapping,
    EnumItem::ServiceInterfaceMapping,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::PackageableElement,
    EnumItem::ServiceInterfaceMappingSet,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::PackageableElement,
    EnumItem::ServiceInterfaceElementMapping,
    EnumItem::ServiceInterfaceMethodMapping,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::PackageableElement,
    EnumItem::ServiceInterfacePedigree,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::PackageableElement,
    EnumItem::ServiceInterfaceElementMapping,
    EnumItem::ServiceInterfaceTriggerMapping,
    EnumItem::ArElement,
    EnumItem::AtomicSwComponentType,
    EnumItem::AtpBlueprint,
    EnumItem::AtpBlueprintable,
    EnumItem::AtpClassifier,
    EnumItem::AtpType,
    EnumItem::CollectableElement,
    EnumItem::PackageableElement,
    EnumItem::ServiceProxySwComponentType,
    EnumItem::SwComponentType,
    EnumItem::ArElement,
    EnumItem::AtomicSwComponentType,
    EnumItem::AtpBlueprint,
    EnumItem::AtpBlueprintable,
    EnumItem::AtpClassifier,
    EnumItem::AtpType,
    EnumItem::CollectableElement,
    EnumItem::PackageableElement,
    EnumItem::ServiceSwComponentType,
    EnumItem::SwComponentType,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::PackageableElement,
    EnumItem::ServiceTiming,
    EnumItem::TimingExtension,
    EnumItem::ServiceEventDeployment,
    EnumItem::SignalBasedEventDeployment,
    EnumItem::AbstractSignalBasedToISignalTriggeringMapping,
    EnumItem::SignalBasedEventElementToISignalTriggeringMapping,
    EnumItem::ServiceFieldDeployment,
    EnumItem::SignalBasedFieldDeployment,
    EnumItem::AbstractSignalBasedToISignalTriggeringMapping,
    EnumItem::SignalBasedFieldToISignalTriggeringMapping,
    EnumItem::AbstractSignalBasedToISignalTriggeringMapping,
    EnumItem::SignalBasedFireAndForgetMethodToISignalTriggeringMapping,
    EnumItem::ServiceMethodDeployment,
    EnumItem::SignalBasedMethodDeployment,
    EnumItem::AbstractSignalBasedToISignalTriggeringMapping,
    EnumItem::SignalBasedMethodToISignalTriggeringMapping,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::PackageableElement,
    EnumItem::ServiceInterfaceDeployment,
    EnumItem::SignalBasedServiceInterfaceDeployment,
    EnumItem::UploadablePackageElement,
    EnumItem::AbstractSignalBasedToISignalTriggeringMapping,
    EnumItem::SignalBasedTriggerToISignalTriggeringMapping,
    EnumItem::SignalServiceTranslationElementProps,
    EnumItem::SignalServiceTranslationEventProps,
    EnumItem::SignalServiceTranslationProps,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::PackageableElement,
    EnumItem::SignalServiceTranslationPropsSet,
    EnumItem::UploadableDesignElement,
    EnumItem::UploadablePackageElement,
    EnumItem::ExecutionTime,
    EnumItem::SimulatedExecutionTime,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::FunctionalClusterInteractsWithFunctionalClusterMapping,
    EnumItem::PackageableElement,
    EnumItem::SmInteractsWithNmMapping,
    EnumItem::UploadableDeploymentElement,
    EnumItem::UploadablePackageElement,
    EnumItem::CollectableElement,
    EnumItem::FibexElement,
    EnumItem::PackageableElement,
    EnumItem::SoAdRoutingGroup,
    EnumItem::SoConIPduIdentifier,
    EnumItem::SocketAddress,
    EnumItem::SocketConnectionBundle,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::FibexElement,
    EnumItem::PackageableElement,
    EnumItem::SocketConnectionIpduIdentifierSet,
    EnumItem::UploadableDesignElement,
    EnumItem::UploadablePackageElement,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::PackageableElement,
    EnumItem::SoftwareActivationDependency,
    EnumItem::SoftwareCluster,
    EnumItem::UploadableDeploymentElement,
    EnumItem::UploadablePackageElement,
    EnumItem::ArElement,
    EnumItem::AtpClassifier,
    EnumItem::CollectableElement,
    EnumItem::PackageableElement,
    EnumItem::SoftwareActivationDependency,
    EnumItem::SoftwareClusterDesign,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::PackageableElement,
    EnumItem::SoftwareClusterDiagnosticDeploymentProps,
    EnumItem::UploadableDeploymentElement,
    EnumItem::UploadablePackageElement,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::PackageableElement,
    EnumItem::SoftwareClusterRequirement,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::PackageableElement,
    EnumItem::SoftwarePackage,
    EnumItem::UploadableDeploymentElement,
    EnumItem::UploadablePackageElement,
    EnumItem::SoftwarePackageStep,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::PackageableElement,
    EnumItem::SomeipDataPrototypeTransformationProps,
    EnumItem::UploadableDesignElement,
    EnumItem::UploadablePackageElement,
    EnumItem::ServiceEventDeployment,
    EnumItem::SomeipEvent,
    EnumItem::ServiceEventDeployment,
    EnumItem::SomeipEventDeployment,
    EnumItem::SomeipEventGroup,
    EnumItem::ServiceFieldDeployment,
    EnumItem::SomeipField,
    EnumItem::ServiceFieldDeployment,
    EnumItem::SomeipFieldDeployment,
    EnumItem::ServiceMethodDeployment,
    EnumItem::SomeipMethod,
    EnumItem::ServiceMethodDeployment,
    EnumItem::SomeipMethodDeployment,
    EnumItem::SomeipProvidedEventGroup,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::PackageableElement,
    EnumItem::SomeipRemoteMulticastConfig,
    EnumItem::UploadableDesignElement,
    EnumItem::UploadablePackageElement,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::PackageableElement,
    EnumItem::SomeipRemoteUnicastConfig,
    EnumItem::UploadableDesignElement,
    EnumItem::UploadablePackageElement,
    EnumItem::SomeipRequiredEventGroup,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::PackageableElement,
    EnumItem::SomeipSdClientEventGroupTimingConfig,
    EnumItem::UploadableDesignElement,
    EnumItem::UploadablePackageElement,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::PackageableElement,
    EnumItem::SomeipSdClientServiceInstanceConfig,
    EnumItem::UploadableDesignElement,
    EnumItem::UploadablePackageElement,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::PackageableElement,
    EnumItem::SomeipSdServerEventGroupTimingConfig,
    EnumItem::UploadableDesignElement,
    EnumItem::UploadablePackageElement,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::PackageableElement,
    EnumItem::SomeipSdServerServiceInstanceConfig,
    EnumItem::UploadableDesignElement,
    EnumItem::UploadablePackageElement,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::PackageableElement,
    EnumItem::ServiceInstanceToMachineMapping,
    EnumItem::SomeipServiceInstanceToMachineMapping,
    EnumItem::UploadableDesignElement,
    EnumItem::UploadablePackageElement,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::PackageableElement,
    EnumItem::ServiceInterfaceDeployment,
    EnumItem::SomeipServiceInterface,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::PackageableElement,
    EnumItem::ServiceInterfaceDeployment,
    EnumItem::SomeipServiceInterfaceDeployment,
    EnumItem::UploadableDesignElement,
    EnumItem::UploadablePackageElement,
    EnumItem::SomeipTpChannel,
    EnumItem::CollectableElement,
    EnumItem::FibexElement,
    EnumItem::PackageableElement,
    EnumItem::SomeipTpConfig,
    EnumItem::TpConfig,
    EnumItem::SomeipTransformationProps,
    EnumItem::TransformationProps,
    EnumItem::AdaptiveModuleInstantiation,
    EnumItem::AtpClassifier,
    EnumItem::AtpFeature,
    EnumItem::AtpStructureElement,
    EnumItem::NonOsModuleInstantiation,
    EnumItem::SovdGatewayInstantiation,
    EnumItem::SovdModuleInstantiation,
    EnumItem::AdaptiveModuleInstantiation,
    EnumItem::AtpClassifier,
    EnumItem::AtpFeature,
    EnumItem::AtpStructureElement,
    EnumItem::NonOsModuleInstantiation,
    EnumItem::SovdModuleInstantiation,
    EnumItem::SovdServerInstantiation,
    EnumItem::SpecElementReference,
    EnumItem::SpecElementScope,
    EnumItem::SpecificationDocumentScope,
    EnumItem::EventTriggeringConstraint,
    EnumItem::SporadicEventTriggering,
    EnumItem::TimingConstraint,
    EnumItem::Traceable,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::PackageableElement,
    EnumItem::StartupConfig,
    EnumItem::UploadableDeploymentElement,
    EnumItem::UploadablePackageElement,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::PackageableElement,
    EnumItem::StartupConfigSet,
    EnumItem::UploadablePackageElement,
    EnumItem::ArElement,
    EnumItem::AtpBlueprint,
    EnumItem::AtpBlueprintable,
    EnumItem::AtpClassifier,
    EnumItem::AtpType,
    EnumItem::CollectableElement,
    EnumItem::PackageableElement,
    EnumItem::PortInterface,
    EnumItem::StateClientInterface,
    EnumItem::StateManagementNotificationInterface,
    EnumItem::StateManagementPortInterface,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::PackageableElement,
    EnumItem::StateDependentFirewall,
    EnumItem::UploadableDesignElement,
    EnumItem::UploadablePackageElement,
    EnumItem::ArElement,
    EnumItem::AtpBlueprint,
    EnumItem::AtpBlueprintable,
    EnumItem::AtpClassifier,
    EnumItem::AtpType,
    EnumItem::CollectableElement,
    EnumItem::PackageableElement,
    EnumItem::PortInterface,
    EnumItem::StateManagemenPhmErrorInterface,
    EnumItem::StateManagementErrorInterface,
    EnumItem::StateManagementPortInterface,
    EnumItem::StateManagementRequestInterface,
    EnumItem::StateManagementActionList,
    EnumItem::ArElement,
    EnumItem::AtpBlueprint,
    EnumItem::AtpBlueprintable,
    EnumItem::AtpClassifier,
    EnumItem::AtpType,
    EnumItem::CollectableElement,
    EnumItem::PackageableElement,
    EnumItem::PortInterface,
    EnumItem::StateManagementDiagTriggerInterface,
    EnumItem::StateManagementPortInterface,
    EnumItem::StateManagementRequestInterface,
    EnumItem::StateManagementTriggerInterface,
    EnumItem::ArElement,
    EnumItem::AtpBlueprint,
    EnumItem::AtpBlueprintable,
    EnumItem::AtpClassifier,
    EnumItem::AtpType,
    EnumItem::CollectableElement,
    EnumItem::PackageableElement,
    EnumItem::PortInterface,
    EnumItem::StateManagementEmErrorInterface,
    EnumItem::StateManagementErrorInterface,
    EnumItem::StateManagementPortInterface,
    EnumItem::StateManagementRequestInterface,
    EnumItem::ArElement,
    EnumItem::AtpBlueprint,
    EnumItem::AtpBlueprintable,
    EnumItem::AtpClassifier,
    EnumItem::AtpType,
    EnumItem::CollectableElement,
    EnumItem::PackageableElement,
    EnumItem::PortInterface,
    EnumItem::StateManagementFunctionGroupSwitchNotificationInterface,
    EnumItem::StateManagementNotificationInterface,
    EnumItem::StateManagementPortInterface,
    EnumItem::AdaptiveModuleInstantiation,
    EnumItem::AtpClassifier,
    EnumItem::AtpFeature,
    EnumItem::AtpStructureElement,
    EnumItem::NonOsModuleInstantiation,
    EnumItem::StateManagementModuleInstantiation,
    EnumItem::StateManagementActionItem,
    EnumItem::StateManagementNmActionItem,
    EnumItem::ArElement,
    EnumItem::AtpBlueprint,
    EnumItem::AtpBlueprintable,
    EnumItem::AtpClassifier,
    EnumItem::AtpType,
    EnumItem::CollectableElement,
    EnumItem::PackageableElement,
    EnumItem::PortInterface,
    EnumItem::StateManagementErrorInterface,
    EnumItem::StateManagementPhmErrorInterface,
    EnumItem::StateManagementPortInterface,
    EnumItem::StateManagementRequestInterface,
    EnumItem::StateManagementRequestError,
    EnumItem::StateManagementStateRequest,
    EnumItem::StateManagementRequestTrigger,
    EnumItem::StateManagementStateRequest,
    EnumItem::StateManagementActionItem,
    EnumItem::StateManagementSetFunctionGroupStateActionItem,
    EnumItem::StateManagementActionItem,
    EnumItem::StateManagementSleepActionItem,
    EnumItem::StateManagementActionItem,
    EnumItem::StateManagementStateMachineActionItem,
    EnumItem::AtpClassifier,
    EnumItem::StateManagementStateNotification,
    EnumItem::StateManagementActionItem,
    EnumItem::StateManagementSyncActionItem,
    EnumItem::StaticSocketConnection,
    EnumItem::SingleLanguageReferrable,
    EnumItem::Std,
    EnumItem::AbstractImplementationDataType,
    EnumItem::ArElement,
    EnumItem::AtpBlueprint,
    EnumItem::AtpBlueprintable,
    EnumItem::AtpClassifier,
    EnumItem::AtpType,
    EnumItem::AutosarDataType,
    EnumItem::CollectableElement,
    EnumItem::CppImplementationDataType,
    EnumItem::CppImplementationDataTypeContextTarget,
    EnumItem::PackageableElement,
    EnumItem::StdCppImplementationDataType,
    EnumItem::StructuredReq,
    EnumItem::TraceReferrable,
    EnumItem::Traceable,
    EnumItem::ServiceNeeds,
    EnumItem::SupervisedEntityCheckpointNeeds,
    EnumItem::ServiceNeeds,
    EnumItem::SupervisedEntityNeeds,
    EnumItem::SupervisionCheckpoint,
    EnumItem::SupervisionEntity,
    EnumItem::SupervisionMode,
    EnumItem::SupervisionModeCondition,
    EnumItem::ArElement,
    EnumItem::AtpBlueprint,
    EnumItem::AtpBlueprintable,
    EnumItem::CollectableElement,
    EnumItem::PackageableElement,
    EnumItem::SwAddrMethod,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::PackageableElement,
    EnumItem::SwAxisType,
    EnumItem::ArElement,
    EnumItem::AtpBlueprint,
    EnumItem::AtpBlueprintable,
    EnumItem::BaseType,
    EnumItem::CollectableElement,
    EnumItem::PackageableElement,
    EnumItem::SwBaseType,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::PackageableElement,
    EnumItem::SwClassInstance,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::PackageableElement,
    EnumItem::SwCodeSyntax,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::PackageableElement,
    EnumItem::SwComponentMappingConstraints,
    EnumItem::AtpFeature,
    EnumItem::AtpPrototype,
    EnumItem::SwComponentPrototype,
    EnumItem::SwGenericAxisParamType,
    EnumItem::ArElement,
    EnumItem::BaseType,
    EnumItem::CollectableElement,
    EnumItem::PackageableElement,
    EnumItem::SwMcBaseType,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::PackageableElement,
    EnumItem::SwRecordLayout,
    EnumItem::SwServiceArg,
    EnumItem::ArElement,
    EnumItem::AtpDefinition,
    EnumItem::CollectableElement,
    EnumItem::PackageableElement,
    EnumItem::SwSystemconst,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::PackageableElement,
    EnumItem::SwSystemconstantValueSet,
    EnumItem::ArElement,
    EnumItem::AtpClassifier,
    EnumItem::AtpFeature,
    EnumItem::AtpStructureElement,
    EnumItem::CollectableElement,
    EnumItem::PackageableElement,
    EnumItem::SwcBswMapping,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::Implementation,
    EnumItem::PackageableElement,
    EnumItem::SwcImplementation,
    EnumItem::AtpClassifier,
    EnumItem::AtpFeature,
    EnumItem::AtpStructureElement,
    EnumItem::InternalBehavior,
    EnumItem::SwcInternalBehavior,
    EnumItem::AbstractEvent,
    EnumItem::AtpClassifier,
    EnumItem::AtpFeature,
    EnumItem::AtpStructureElement,
    EnumItem::RteEvent,
    EnumItem::SwcModeManagerErrorEvent,
    EnumItem::AbstractEvent,
    EnumItem::AtpClassifier,
    EnumItem::AtpFeature,
    EnumItem::AtpStructureElement,
    EnumItem::RteEvent,
    EnumItem::SwcModeSwitchEvent,
    EnumItem::AtpClassifier,
    EnumItem::AtpFeature,
    EnumItem::AtpStructureElement,
    EnumItem::SwcServiceDependency,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::PackageableElement,
    EnumItem::SwcTiming,
    EnumItem::TimingExtension,
    EnumItem::SwcToApplicationPartitionMapping,
    EnumItem::SwcToEcuMapping,
    EnumItem::SwcToImplMapping,
    EnumItem::SwitchAsynchronousTrafficShaperGroupEntry,
    EnumItem::SwitchFlowMeteringEntry,
    EnumItem::SwitchStreamFilterActionDestPortModification,
    EnumItem::SwitchStreamFilterEntry,
    EnumItem::SwitchStreamFilterRule,
    EnumItem::SwitchStreamGateEntry,
    EnumItem::SwitchStreamIdentification,
    EnumItem::ImplementationProps,
    EnumItem::SymbolProps,
    EnumItem::ImplementationProps,
    EnumItem::SymbolicNameProps,
    EnumItem::ServiceNeeds,
    EnumItem::SyncTimeBaseMgrUserNeeds,
    EnumItem::SynchronizationPointConstraint,
    EnumItem::TimingConstraint,
    EnumItem::Traceable,
    EnumItem::SynchronizationTimingConstraint,
    EnumItem::TimingConstraint,
    EnumItem::Traceable,
    EnumItem::SynchronizedMasterTimeBase,
    EnumItem::TimeBaseResource,
    EnumItem::SynchronizedSlaveTimeBase,
    EnumItem::TimeBaseResource,
    EnumItem::SynchronizedTimeBaseConsumer,
    EnumItem::TimeBaseResource,
    EnumItem::AbstractSynchronizedTimeBaseInterface,
    EnumItem::ArElement,
    EnumItem::AtpBlueprint,
    EnumItem::AtpBlueprintable,
    EnumItem::AtpClassifier,
    EnumItem::AtpType,
    EnumItem::CollectableElement,
    EnumItem::PackageableElement,
    EnumItem::PortInterface,
    EnumItem::SynchronizedTimeBaseConsumerInterface,
    EnumItem::SynchronizedTimeBaseProvider,
    EnumItem::TimeBaseResource,
    EnumItem::AbstractSynchronizedTimeBaseInterface,
    EnumItem::ArElement,
    EnumItem::AtpBlueprint,
    EnumItem::AtpBlueprintable,
    EnumItem::AtpClassifier,
    EnumItem::AtpType,
    EnumItem::CollectableElement,
    EnumItem::PackageableElement,
    EnumItem::PortInterface,
    EnumItem::SynchronizedTimeBaseProviderInterface,
    EnumItem::AbstractAccessPoint,
    EnumItem::AtpClassifier,
    EnumItem::AtpFeature,
    EnumItem::AtpStructureElement,
    EnumItem::ServerCallPoint,
    EnumItem::SynchronousServerCallPoint,
    EnumItem::ArElement,
    EnumItem::AtpClassifier,
    EnumItem::AtpFeature,
    EnumItem::AtpStructureElement,
    EnumItem::CollectableElement,
    EnumItem::PackageableElement,
    EnumItem::System,
    EnumItem::UploadableDesignElement,
    EnumItem::UploadablePackageElement,
    EnumItem::SystemMapping,
    EnumItem::SystemMemoryUsage,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::PackageableElement,
    EnumItem::SystemSignal,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::PackageableElement,
    EnumItem::SystemSignalGroup,
    EnumItem::SystemSignalGroupToCommunicationResourceMapping,
    EnumItem::SystemSignalToCommunicationResourceMapping,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::PackageableElement,
    EnumItem::SystemTiming,
    EnumItem::TimingExtension,
    EnumItem::TcpOptionFilterList,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::PackageableElement,
    EnumItem::TcpOptionFilterSet,
    EnumItem::TdCpSoftwareClusterMapping,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::PackageableElement,
    EnumItem::TdCpSoftwareClusterMappingSet,
    EnumItem::TdCpSoftwareClusterResourceMapping,
    EnumItem::TdEventBswInternalBehavior,
    EnumItem::TimingDescription,
    EnumItem::TimingDescriptionEvent,
    EnumItem::TdEventBsw,
    EnumItem::TdEventBswModeDeclaration,
    EnumItem::TimingDescription,
    EnumItem::TimingDescriptionEvent,
    EnumItem::TdEventBsw,
    EnumItem::TdEventBswModule,
    EnumItem::TimingDescription,
    EnumItem::TimingDescriptionEvent,
    EnumItem::TdEventComplex,
    EnumItem::TimingDescription,
    EnumItem::TimingDescriptionEvent,
    EnumItem::TdEventCom,
    EnumItem::TdEventCycleStart,
    EnumItem::TdEventFrClusterCycleStart,
    EnumItem::TimingDescription,
    EnumItem::TimingDescriptionEvent,
    EnumItem::TdEventCom,
    EnumItem::TdEventFrame,
    EnumItem::TimingDescription,
    EnumItem::TimingDescriptionEvent,
    EnumItem::TdEventCom,
    EnumItem::TdEventFrameEthernet,
    EnumItem::TimingDescription,
    EnumItem::TimingDescriptionEvent,
    EnumItem::TdEventCom,
    EnumItem::TdEventIPdu,
    EnumItem::TimingDescription,
    EnumItem::TimingDescriptionEvent,
    EnumItem::TdEventCom,
    EnumItem::TdEventISignal,
    EnumItem::TimingDescription,
    EnumItem::TimingDescriptionEvent,
    EnumItem::TdEventModeDeclaration,
    EnumItem::TdEventVfb,
    EnumItem::TdEventVfbPort,
    EnumItem::TimingDescription,
    EnumItem::TimingDescriptionEvent,
    EnumItem::TdEventOperation,
    EnumItem::TdEventVfb,
    EnumItem::TdEventVfbPort,
    EnumItem::TimingDescription,
    EnumItem::TimingDescriptionEvent,
    EnumItem::TdEventServiceInstance,
    EnumItem::TdEventServiceInstanceDiscovery,
    EnumItem::TimingDescription,
    EnumItem::TimingDescriptionEvent,
    EnumItem::TdEventServiceInstance,
    EnumItem::TdEventServiceInstanceEvent,
    EnumItem::TimingDescription,
    EnumItem::TimingDescriptionEvent,
    EnumItem::TdEventServiceInstance,
    EnumItem::TdEventServiceInstanceField,
    EnumItem::TimingDescription,
    EnumItem::TimingDescriptionEvent,
    EnumItem::TdEventServiceInstance,
    EnumItem::TdEventServiceInstanceMethod,
    EnumItem::TimingDescription,
    EnumItem::TimingDescriptionEvent,
    EnumItem::TdEventSllet,
    EnumItem::TdEventSlletPort,
    EnumItem::TimingDescription,
    EnumItem::TimingDescriptionEvent,
    EnumItem::TdEventSwc,
    EnumItem::TdEventSwcInternalBehavior,
    EnumItem::TimingDescription,
    EnumItem::TimingDescriptionEvent,
    EnumItem::TdEventSwc,
    EnumItem::TdEventSwcInternalBehaviorReference,
    EnumItem::TimingDescription,
    EnumItem::TimingDescriptionEvent,
    EnumItem::TdEventTrigger,
    EnumItem::TdEventVfb,
    EnumItem::TdEventVfbPort,
    EnumItem::TimingDescription,
    EnumItem::TimingDescriptionEvent,
    EnumItem::TdEventCom,
    EnumItem::TdEventCycleStart,
    EnumItem::TdEventTtCanCycleStart,
    EnumItem::TimingDescription,
    EnumItem::TimingDescriptionEvent,
    EnumItem::TdEventVariableDataPrototype,
    EnumItem::TdEventVfb,
    EnumItem::TdEventVfbPort,
    EnumItem::TimingDescription,
    EnumItem::TimingDescriptionEvent,
    EnumItem::TdEventVfb,
    EnumItem::TdEventVfbPortGroup,
    EnumItem::TimingDescription,
    EnumItem::TimingDescriptionEvent,
    EnumItem::TdEventVfb,
    EnumItem::TdEventVfbReference,
    EnumItem::TimingDescription,
    EnumItem::TimingDescriptionEvent,
    EnumItem::TdletZoneClock,
    EnumItem::TimingClock,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::FunctionalClusterInteractsWithFunctionalClusterMapping,
    EnumItem::PackageableElement,
    EnumItem::TimeBaseProviderToPersistencyMapping,
    EnumItem::UploadableDeploymentElement,
    EnumItem::UploadablePackageElement,
    EnumItem::AdaptiveModuleInstantiation,
    EnumItem::AtpClassifier,
    EnumItem::AtpFeature,
    EnumItem::AtpStructureElement,
    EnumItem::NonOsModuleInstantiation,
    EnumItem::TimeSyncModuleInstantiation,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::PackageableElement,
    EnumItem::TimeSyncPortPrototypeToTimeBaseMapping,
    EnumItem::UploadableDeploymentElement,
    EnumItem::UploadablePackageElement,
    EnumItem::TimeSyncServerConfiguration,
    EnumItem::ArElement,
    EnumItem::AtpBlueprint,
    EnumItem::AtpBlueprintable,
    EnumItem::AtpClassifier,
    EnumItem::AtpType,
    EnumItem::CollectableElement,
    EnumItem::PackageableElement,
    EnumItem::PortInterface,
    EnumItem::TimeSynchronizationInterface,
    EnumItem::TimeSynchronizationMasterInterface,
    EnumItem::ArElement,
    EnumItem::AtpBlueprint,
    EnumItem::AtpBlueprintable,
    EnumItem::AtpClassifier,
    EnumItem::AtpType,
    EnumItem::CollectableElement,
    EnumItem::PackageableElement,
    EnumItem::PortInterface,
    EnumItem::TimeSynchronizationInterface,
    EnumItem::TimeSynchronizationPureLocalInterface,
    EnumItem::ArElement,
    EnumItem::AtpBlueprint,
    EnumItem::AtpBlueprintable,
    EnumItem::AtpClassifier,
    EnumItem::AtpType,
    EnumItem::CollectableElement,
    EnumItem::PackageableElement,
    EnumItem::PortInterface,
    EnumItem::TimeSynchronizationInterface,
    EnumItem::TimeSynchronizationSlaveInterface,
    EnumItem::TimingClockSyncAccuracy,
    EnumItem::TimingCondition,
    EnumItem::TimingDescription,
    EnumItem::TimingDescriptionEventChain,
    EnumItem::AbstractEvent,
    EnumItem::AtpClassifier,
    EnumItem::AtpFeature,
    EnumItem::AtpStructureElement,
    EnumItem::RteEvent,
    EnumItem::TimingEvent,
    EnumItem::TimingExtensionResource,
    EnumItem::TimingModeInstance,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::PackageableElement,
    EnumItem::TlsConnectionGroup,
    EnumItem::TlsCryptoCipherSuite,
    EnumItem::TlsCryptoCipherSuiteProps,
    EnumItem::CryptoServiceMapping,
    EnumItem::TlsCryptoServiceMapping,
    EnumItem::SecureCommunicationDeployment,
    EnumItem::TlsDeployment,
    EnumItem::AbstractIamRemoteSubject,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::PackageableElement,
    EnumItem::TlsIamRemoteSubject,
    EnumItem::UploadableDeploymentElement,
    EnumItem::UploadablePackageElement,
    EnumItem::TlsJobMapping,
    EnumItem::TlsJobRequirement,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::PackageableElement,
    EnumItem::SecureComProps,
    EnumItem::TlsSecureComProps,
    EnumItem::UploadableDesignElement,
    EnumItem::UploadablePackageElement,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::PackageableElement,
    EnumItem::TlvDataIdDefinitionSet,
    EnumItem::UploadableDesignElement,
    EnumItem::UploadablePackageElement,
    EnumItem::Topic1,
    EnumItem::TpAddress,
    EnumItem::TpConnectionIdent,
    EnumItem::Traceable,
    EnumItem::TraceableTable,
    EnumItem::TraceReferrable,
    EnumItem::Traceable,
    EnumItem::TraceableText,
    EnumItem::TransformationISignalPropsIdent,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::PackageableElement,
    EnumItem::TransformationPropsSet,
    EnumItem::UploadableDesignElement,
    EnumItem::UploadablePackageElement,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::PackageableElement,
    EnumItem::TransformationPropsToServiceInterfaceElementMapping,
    EnumItem::UploadableDesignElement,
    EnumItem::UploadablePackageElement,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::PackageableElement,
    EnumItem::TransformationPropsToServiceInterfaceElementMappingSet,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::PackageableElement,
    EnumItem::TransformationPropsToServiceInterfaceMappingSet,
    EnumItem::TransformationTechnology,
    EnumItem::AbstractEvent,
    EnumItem::AtpClassifier,
    EnumItem::AtpFeature,
    EnumItem::AtpStructureElement,
    EnumItem::RteEvent,
    EnumItem::TransformerHardErrorEvent,
    EnumItem::TracedFailure,
    EnumItem::TransientFault,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::PackageableElement,
    EnumItem::TransportLayerIndependentIdCollectionSet,
    EnumItem::AtpFeature,
    EnumItem::AtpPrototype,
    EnumItem::TransportLayerIndependentInstanceId,
    EnumItem::AtpClassifier,
    EnumItem::AtpFeature,
    EnumItem::AtpStructureElement,
    EnumItem::Trigger,
    EnumItem::ArElement,
    EnumItem::AtpBlueprint,
    EnumItem::AtpBlueprintable,
    EnumItem::AtpClassifier,
    EnumItem::AtpType,
    EnumItem::CollectableElement,
    EnumItem::PackageableElement,
    EnumItem::PortInterface,
    EnumItem::TriggerInterface,
    EnumItem::AtpBlueprint,
    EnumItem::AtpBlueprintable,
    EnumItem::PortInterfaceMapping,
    EnumItem::TriggerInterfaceMapping,
    EnumItem::AbstractCanCluster,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::CommunicationCluster,
    EnumItem::FibexElement,
    EnumItem::PackageableElement,
    EnumItem::TtcanCluster,
    EnumItem::UploadableDesignElement,
    EnumItem::UploadablePackageElement,
    EnumItem::AbstractCanCommunicationConnector,
    EnumItem::CommunicationConnector,
    EnumItem::TtcanCommunicationConnector,
    EnumItem::AbstractCanCommunicationController,
    EnumItem::CommunicationController,
    EnumItem::TtcanCommunicationController,
    EnumItem::AbstractCanPhysicalChannel,
    EnumItem::PhysicalChannel,
    EnumItem::TtcanPhysicalChannel,
    EnumItem::UcmDescription,
    EnumItem::AdaptiveModuleInstantiation,
    EnumItem::AtpClassifier,
    EnumItem::AtpFeature,
    EnumItem::AtpStructureElement,
    EnumItem::NonOsModuleInstantiation,
    EnumItem::UcmMasterModuleInstantiation,
    EnumItem::UcmModuleInstantiation,
    EnumItem::AdaptiveModuleInstantiation,
    EnumItem::NonOsModuleInstantiation,
    EnumItem::UcmModuleInstantiation,
    EnumItem::UcmRetryStrategy,
    EnumItem::UcmStep,
    EnumItem::AdaptiveModuleInstantiation,
    EnumItem::AtpClassifier,
    EnumItem::AtpFeature,
    EnumItem::AtpStructureElement,
    EnumItem::NonOsModuleInstantiation,
    EnumItem::UcmModuleInstantiation,
    EnumItem::UcmSubordinateModuleInstantiation,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::FunctionalClusterInteractsWithFunctionalClusterMapping,
    EnumItem::PackageableElement,
    EnumItem::UcmToTimeBaseResourceMapping,
    EnumItem::UploadableDeploymentElement,
    EnumItem::UploadablePackageElement,
    EnumItem::NmCluster,
    EnumItem::UdpNmCluster,
    EnumItem::NmNode,
    EnumItem::UdpNmNode,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::PackageableElement,
    EnumItem::Unit,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::PackageableElement,
    EnumItem::UnitGroup,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::CommunicationCluster,
    EnumItem::FibexElement,
    EnumItem::PackageableElement,
    EnumItem::UploadableDesignElement,
    EnumItem::UploadablePackageElement,
    EnumItem::UserDefinedCluster,
    EnumItem::CommunicationConnector,
    EnumItem::UserDefinedCommunicationConnector,
    EnumItem::CommunicationController,
    EnumItem::UserDefinedCommunicationController,
    EnumItem::AbstractEthernetFrame,
    EnumItem::CollectableElement,
    EnumItem::EthernetFrame,
    EnumItem::FibexElement,
    EnumItem::Frame,
    EnumItem::PackageableElement,
    EnumItem::UserDefinedEthernetFrame,
    EnumItem::ServiceEventDeployment,
    EnumItem::UserDefinedEventDeployment,
    EnumItem::ServiceFieldDeployment,
    EnumItem::UserDefinedFieldDeployment,
    EnumItem::GlobalTimeMaster,
    EnumItem::UserDefinedGlobalTimeMaster,
    EnumItem::GlobalTimeSlave,
    EnumItem::UserDefinedGlobalTimeSlave,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::FibexElement,
    EnumItem::IPdu,
    EnumItem::PackageableElement,
    EnumItem::Pdu,
    EnumItem::UploadableDesignElement,
    EnumItem::UploadablePackageElement,
    EnumItem::UserDefinedIPdu,
    EnumItem::ServiceMethodDeployment,
    EnumItem::UserDefinedMethodDeployment,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::FibexElement,
    EnumItem::PackageableElement,
    EnumItem::Pdu,
    EnumItem::UploadableDesignElement,
    EnumItem::UploadablePackageElement,
    EnumItem::UserDefinedPdu,
    EnumItem::PhysicalChannel,
    EnumItem::UserDefinedPhysicalChannel,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::PackageableElement,
    EnumItem::ServiceInstanceToMachineMapping,
    EnumItem::UploadableDesignElement,
    EnumItem::UploadablePackageElement,
    EnumItem::UserDefinedServiceInstanceToMachineMapping,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::PackageableElement,
    EnumItem::ServiceInterfaceDeployment,
    EnumItem::UploadableDesignElement,
    EnumItem::UploadablePackageElement,
    EnumItem::UserDefinedServiceInterfaceDeployment,
    EnumItem::TransformationProps,
    EnumItem::UserDefinedTransformationProps,
    EnumItem::ServiceNeeds,
    EnumItem::V2XDataManagerNeeds,
    EnumItem::ServiceNeeds,
    EnumItem::V2XFacUserNeeds,
    EnumItem::ServiceNeeds,
    EnumItem::V2XMUserNeeds,
    EnumItem::AbstractAccessPoint,
    EnumItem::AtpClassifier,
    EnumItem::AtpFeature,
    EnumItem::AtpStructureElement,
    EnumItem::VariableAccess,
    EnumItem::AtpBlueprint,
    EnumItem::AtpBlueprintable,
    EnumItem::PortInterfaceMapping,
    EnumItem::VariableAndParameterInterfaceMapping,
    EnumItem::AtpFeature,
    EnumItem::AtpPrototype,
    EnumItem::AutosarDataPrototype,
    EnumItem::DataPrototype,
    EnumItem::VariableDataPrototype,
    EnumItem::VariationPointProxy,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::PackageableElement,
    EnumItem::SoftwareActivationDependency,
    EnumItem::UploadableDeploymentElement,
    EnumItem::UploadablePackageElement,
    EnumItem::VehiclePackage,
    EnumItem::VehicleRolloutStep,
    EnumItem::ServiceNeeds,
    EnumItem::VendorSpecificServiceNeeds,
    EnumItem::ArElement,
    EnumItem::AtpBlueprint,
    EnumItem::AtpBlueprintable,
    EnumItem::CollectableElement,
    EnumItem::PackageableElement,
    EnumItem::TimingExtension,
    EnumItem::VfbTiming,
    EnumItem::ViewMap,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::PackageableElement,
    EnumItem::ViewMapSet,
    EnumItem::VlanConfig,
    EnumItem::WaitPoint,
    EnumItem::DiagnosticCapabilityElement,
    EnumItem::ServiceNeeds,
    EnumItem::WarningIndicatorRequestedBitNeeds,
    EnumItem::ActionItem,
    EnumItem::WatchdogActionItem,
    EnumItem::PhmActionItem,
    EnumItem::WatchdogPhmActionItem,
    EnumItem::HeapUsage,
    EnumItem::WorstCaseHeapUsage,
    EnumItem::StackUsage,
    EnumItem::WorstCaseStackUsage,
    EnumItem::ArElement,
    EnumItem::CollectableElement,
    EnumItem::FibexElement,
    EnumItem::IPdu,
    EnumItem::PackageableElement,
    EnumItem::Pdu,
    EnumItem::UploadableDesignElement,
    EnumItem::UploadablePackageElement,
    EnumItem::XcpPdu,
    EnumItem::SingleLanguageReferrable,
    EnumItem::Xdoc,
    EnumItem::SingleLanguageReferrable,
    EnumItem::Xfile,
    EnumItem::SingleLanguageReferrable,
    EnumItem::XrefTarget,
];

#[cfg(feature = "docstrings")]
#[rustfmt::skip]
pub(crate) static ELEMENT_DOCSTRINGS: [&str; 6069] = [
    "\"This aggregation represents the collection of diagnostic addresses that apply for the SoftwareClusterDesign.",
    "\"This aggregation represents the definition transmission props in the context of the enclosing ReceiverComSpec.",
    "\"This reference identifies the applicable process.",
    "\"feature\" holds the list of features of the feature model. No FMFeature may be contained twice in this list. Also, each FMFeature may be contained on only one feature model.",
    "'''Repetitive Execution Order Constraint only:'''\r\n\r\nThe number of [ARMetaClass{ExecutableEntity}]s (slots) that are executed in a given order within a cycle, for the Repetitive Execution Order Constraint.",
    "'''Repetitive Execution Order Constraint only:'''\r\n\r\nThe number of repetitions (cycles) of the event in the Repetitive Execution Order Constraint.",
    "'''begin restrict to AP'''\r\nThis attribute defines the resulting UDS DTC status byte for the related event, which shall not be cleared according to the ClearEventAllowed callback.\r\n'''end restrict to AP'''\r\n'''begin restrict to CP'''\r\nThis attribute defines the resulting UDS status byte for the related event, which shall not be cleared according to the ClearEventAllowed callback.\r\n'''end restrict to CP'''",
    "'''begin restrict to CP AP'''\r\nAggregation of the root software composition, containing all software components in the System in a hierarchical structure.\r\nThis element is not required when the System description is used for a network-only use-case.\r\n\r\natpVariation: The RootSwCompositionPrototype can vary.\r\n'''end restrict to CP AP'''\r\n'''begin restrict to FO'''\r\nAggregation of the root software composition, containing all software components in the System in a hierarchical structure.\r\n'''end restrict to FO'''\r\nThe upper multiplicity of this role has been increased to * due to resolving an atpVariation stereotype. The previous value was 1.",
    "'''begin restrict to CP'''\r\nAggregation of all mapping aspects (mapping of SW components to ECUs, mapping of data elements to signals, and mapping constraints).\r\n\r\nIn order to support OEM / Tier 1 interaction and shared development for one common System this aggregation is atpSplitable and atpVariation. The content of SystemMapping can be provided by several parties using different names for the SystemMapping.\r\n\r\nThis element is not required when the System description is used for a network-only use-case.\r\n'''end restrict to CP'''\r\n'''begin restrict to AP'''\r\nAggregation of all mapping aspects relevant in the System Description.\r\n'''end restrict to AP'''",
    "'''begin restrict to CP'''\r\nDescribes the maximum amount of offer repetitions (if aggregated by SdServerConfig) or the maximum amount of find repetitions (if aggregated by SdClientConfig).\r\n'''end restrict to CP'''\r\n'''begin restrict to AP'''\r\nDescribes the maximum amount of offer repetitions  (if aggregated in role initialOfferBehavior by SomeipSdServerServiceInstanceConfig) or the maximum amount of find repetitions (if aggregated in role initialFindBehavior by SomeipSdClientServiceInstanceConfig).\r\n'''end restrict to AP'''",
    "'''begin restrict to CP'''\r\nLength of call queue on the server side. The queue is implemented by the RTE. The value shall be greater or equal to 1. Setting the value of queueLength to 1 implies that incoming requests are rejected while another request that arrived earlier is being processed.\r\n'''end restrict to CP'''\r\n'''begin restrict to AP'''\r\nLength of call queue on the server side. \r\n'''end restrict to AP'''",
    "'''begin restrict to CP'''\r\nMax Value in seconds to delay randomly the first offer (if aggregated by SdServerConfig) or the transmission of a find message (if aggregated by SdClientConfig). \r\n'''end restrict to CP'''\r\n'''begin restrict to AP'''\r\nMax Value in seconds to delay randomly the first offer (if aggregated in role initialOfferBehavior by SomeipSdServerServiceInstanceConfig) or the transmission of a find message (if aggregated in role initialFindBehavior by SomeipSdClientServiceInstanceConfig).\r\n'''end restrict to AP'''",
    "'''begin restrict to CP'''\r\nMin Value in seconds to delay randomly the first offer  or the transmission of a find message (if aggregated by SdClientConfig). \r\n'''end restrict to CP'''\r\n'''begin restrict to AP'''\r\nMin Value in seconds to delay randomly the first offer (if aggregated in role initialOfferBehavior by SomeipSdServerServiceInstanceConfig) or the transmission of a find message  (if aggregated in role initialFindBehavior by SomeipSdClientServiceInstanceConfig). \r\n'''end restrict to AP'''",
    "'''begin restrict to CP'''\r\nReference to the [ARMetaClass{DataTypeMappingSet}] to be applied for the used  [ARMetaClass{ApplicationDataType}]s in [ARMetaClass{PortInterface}]s.\r\n\r\nBackground: when developing subsystems it may happen that [ARMetaClass{ApplicationDataType}]s are used on the surface of [ARMetaClass{CompositionSwComponentType}]s. In this case it would be reasonable to be able to also provide the intended mapping to the [ARMetaClass{ImplementationDataType}]s. However, this mapping shall be informal and not technically binding for the implementors mainly because the RTE generator is not concerned about the [ARMetaClass{CompositionSwComponentType}]s. \r\n\r\nRationale: if the mapping of [ARMetaClass{ApplicationDataType}]s on the delegated and inner\r\n[ARMetaClass{PortPrototype}] matches then the mapping to [ARMetaClass{ImplementationDataType}]s is not impacting compatibility.\r\n'''end restrict to CP'''\r\n'''begin restrict to AP'''\r\nReference to the [ARMetaClass{DataTypeMapping}] to be applied for the used [ARMetaClass{ApplicationDataType}]s in [ARMetaClass{ServiceInterface}]s.\r\n'''end restrict to AP'''",
    "'''begin restrict to CP'''\r\nThe base delay for offer repetitions (if aggregated by SdServerConfig) or find repetitions (if aggregated by SdClientConfig). Successive find messages have an exponential back off delay.\r\n'''end restrict to CP'''\r\n'''begin restrict to AP'''\r\nThe base delay for offer repetitions (if aggregated in role initialOfferBehavior by SomeipSdServerServiceInstanceConfig) or find repetitions (if aggregated in role initialFindBehavior by SomeipSdClientServiceInstanceConfig). Successive find messages have an exponential back off delay.\r\n'''end restrict to AP'''",
    "'''begin restrict to CP'''\r\nThe instantiated components that are part of this composition.\r\nThe aggregation of [ARMetaClass{SwComponentPrototype}] is subject to variability with the purpose to support the conditional existence of a [ARMetaClass{SwComponentPrototype}]. Please be aware: if the conditional existence of [ARMetaClass{SwComponentPrototype}]s is resolved post-build, the deselected [ARMetaClass{SwComponentPrototype}]s are still contained in the ECUs build but the instances are inactive in that they are not scheduled by the RTE.\r\n\r\nThe aggregation is marked as atpSplitable in order to allow the addition of service components to the ECU extract during the ECU integration.\r\n\r\nThe use case for having 0 components owned by the [ARMetaClass{CompositionSwComponentType}] could be to deliver an empty [ARMetaClass{CompositionSwComponentType}] to e.g. a supplier for filling the internal structure.\r\n'''end restrict to CP'''\r\n'''begin restrict to AP'''\r\nThe instantiated components that are part of this composition.\r\n'''end restrict to AP'''",
    "* ISignalPort with communicationDirection = in:\r\nOptional timeout value in seconds for the reception of the ISignal.\r\nThe attribute value is used to configure the ComTimeout in the COM module. The RTE ignores this attribute. The timeout can also be specified with the NonqueuedReceiverComSpec.aliveTimeout attribute. If a full DataMapping exists for the SystemSignal and the value is available in the configured ReceiverComSpec, then the timeout value in the ReceiverComSpec overrides this optional timeout specification during the creation of the Base Ecu Configuration of the COM module.\r\n* ISignalPort with communicationDirection = out:\r\nOptional timeout value in seconds for the transmission of the ISignal.\r\nThe attribute value is used to configure the ComTimeout in the COM module. The RTE ignores this attribute. The timeout can also be specified with the enderComSpec.transmissionAcknowledge.timeout attribute. If a full DataMapping exists for the SystemSignal and the value is available in the configured SenderComSpec, then the timeout value in the SenderComSpec overrides this optional timeout specification during the creation of the Base Ecu Configuration of the COM module.\r\n \r\nThis attribute can be used in the following cases:\r\n* legacy signal where the System Description doesn't use a complete Software Component Description (VFB View) and where the DataMapping is missing.\r\n* bus monitoring use cases in which the DataMapping is ignored.",
    "*ISignalPort with communicationDirection = in:\r\nOptional first timeout value in seconds for the reception of the ISignal.\r\n*ISignalPort with communicationDirection = out:\r\nOptional first timeout value in seconds for transmission deadline monitoring.",
    "3 Byte OBD DTC value based on the definition from SAE J2012. The existence of this attribute is only required if separated UDS and OBD DTC values are used for SAE J1979-2. If this attribute does not exist, then UDS DTC values are used with J1979-2.",
    "<desc> represents a general but brief description of the object in question.",
    "<verbatim> is a paragraph in which white-space (in particular blanks and line feeds) is obeyed. This enables basic preformatting to be carried out, which can even be displayed on simple devices. Behavior is the same as PRE in HTML .\r\nThis aggregation contains a variation point although it is not variant. Therefore, this variation point shall not exist in models. See constr_2638.",
    "A ConstantSpecification defined in the application domain.",
    "A ConstantSpecification defined in the implementation domain.",
    "A FlexRayTpChannel references a set of NPdus. These NPdus are logically assembled into a pool of Rx NPdus and another pool of Tx NPdus. It shall be ensured that a second channel either references all NPdus of such a pool, or none.",
    "A GlobalTimeGateway may exist in the context of a GlobalTimeDomain to actively update the global time information as it is routed from one GlobalTimeDomain to another.",
    "A McFunction that is seen as part of the enclosing group.",
    "A TpConfig is existing always in the context of exactly one CommunicationCluster.",
    "A Trigger released by this module or cluster. It can be connected to the requiredTriggers of other modules or clusters via the configuration of the BswScheduler. It can also be synchronized with Triggers provided via ports by an associated ServiceSwComponentType, EcuAbstractionSwComponentType or ComplexDeviceDriverSwComponentType.",
    "A Trigger to be mapped.",
    "A VLAN is identified by this attribute according to IEEE 802.1Q. The allowed values range is from 0..4095.",
    "A call point used in the code of this entity.\r\n\r\nThe variability of this association is especially targeted at debug scenarios: It is possible to have one variant calling into the AUTOSAR debug module and another one which doesn't.",
    "A code entity for which the behavior is described",
    "A composed event chain consists of an arbitrary number of sub-chains.",
    "A connection has a reference to a set of NPdus (FrTpRxPduPool) which are\r\ndefined for receiving data via this particular connection. \r\n\r\nThe following constraint is valid only for the System Extract/ECU Extract:\r\nIn case this connection is applied to the transmitter the rxPduPool holds the\r\nactually received NPdus. In case this connection is applied to the receiver the rxPduPool holds the actually sent NPdus.",
    "A connection has a reference to a set of NPdus (FrTpTxPduPool) which are\r\ndefined for sending data via this particular connection.\r\n\r\nThe following constraint is valid only for the System Extract/ECU Extract:\r\nIn case this connection is applied to the transmitter the txPduPool holds the\r\nactually sent NPdus. In case this connection is applied to the receiver the\r\ntxPduPool holds the actually received NPdus.",
    "A data element declared locally to this module, cluster or library. It shall be used (within AUTOSAR) only for debugging purposes.\r\nThis aggregation contains a variation point although it is not variant. Therefore, this variation point shall not exist in models. See constr_2638.",
    "A data instance to be used for calibration.",
    "A data instance to be used for measurement.",
    "A definition of the type with the syntax of a 'C' typedef.",
    "A derivation of a Configuration Parameter value can be specified by an informal Calculation Formula or by a formal language that can be used to specify the computational rules.",
    "A descriptor instance aggregated in the flat map. \r\n\r\nThe variation point accounts for the fact, that the system in scope can be subject to variability, and thus the existence of some instances is variable.\r\n\r\nThe aggregation has been made splitable because the content might be contributed by different stakeholders at different times in the workflow. Plus, the overall size might be so big that eventually it becomes more manageable if it is distributed over several files.",
    "A formula that contains the actual restriction.",
    "A frames layout as a sequence of Pdus.\r\n\r\natpVariation: The content of a frame can be variable.",
    "A list of abstract model Clocks.",
    "A list of accuracies - which may be used to specify synchronizations from one model clock to another model clock.",
    "A list of slaves can respond to the master request if at least one of the signals carried in its unconditional frame is updated. \r\nFor each response a LinFrameTriggering and a LinUnconditionalFrame shall be defined. Within a channel a LIN Frame shall be referenced by only one FrameTriggering. This allows a derivation of the identifier of a substituted Frame. The identifier is specified in FrameTriggering element. \r\nThe Unconditional frames associated with an event triggered frame shall:\r\n* have equal length.\r\n* use the same checksum model (i.e. mixing LIN 1.x and LIN 2.x frames is not allowed).\r\n* reserve the first data field to its protected identifier (even if the associated unconditional frame is scheduled as a unconditional frame in the same or another schedule table).\r\n* be published by different slave nodes.\r\n* shall not be included directly in the same schedule table as the event triggered frame is scheduled.",
    "A manifest specifying the intended build\r\nactions for the software delivered with this implementation.\r\nThis property was modified due to atpVariation (DirectedAssociationPattern).",
    "A mapping between a pair of SWC and BSW runnables.",
    "A mode group provided by this module. The acknowledgement of a switch of this group raises this event.",
    "A mode group which is accessed via API call by this entity. It shall be a ModeDeclarationGroupPrototype required by this module or cluster.\r\nThis property was modified due to atpVariation (DirectedAssociationPattern).",
    "A mode group which is managed by this entity. It shall be a ModeDeclarationGroupPrototype provided by this module or cluster.\r\nThis property was modified due to atpVariation (DirectedAssociationPattern).",
    "A multicast MAC address (Media Access Control address) is a identifier for a group of hosts in a network.",
    "A networkRepresentation is used to define how the dataElement is mapped to a communication bus.",
    "A pair of SWC and BSW Triggers to be synchronized by the scheduler.",
    "A pair of SWC and BSW mode group prototypes to be synchronized by the scheduler.",
    "A partition can execute either in CPU user mode (execInUserMode = TRUE) or supervisor mode (execInUserMode = FALSE). In user mode, the partition has a limited access to memory, to memory mapped hardware and to CPU. In user mode, the partition is mapped to a non-trusted OS-Application.",
    "A port group being part of this component.",
    "A prefix to be used for the memory section symbol in the code.",
    "A prefix to be used in generated names for the BswModuleScheduler in the context of this BswModuleEntity, for example entry point prototypes, macros for dealing with exclusive areas, header file names.\r\n\r\nDetails are defined in the SWS RTE.\r\n\r\nThe prefix supersedes default rules for the prefix of those names.",
    "A sequence of records to store arbitrary name/value pairs conveying additional information about the named service.",
    "A sequence of records to store arbitrary name/value pairs conveying additional information about the named service.\r\nCapability records shall only be existing if the respective SdClientConfig is composed by a ConsumedServiceInstance (see constr_3260).\r\nThis aggregation contains a variation point although it is not variant. Therefore, this variation point shall not exist in models. See constr_2638.",
    "A sequence of records to store arbitrary name/value pairs conveying additional information about the named service.\r\nCapability records shall only be existing if the respective SdServerConfig is composed by a ProvidedServiceInstance (see constr_3259).\r\nThis aggregation contains a variation point although it is not variant. Therefore, this variation point shall not exist in models. See constr_2638.",
    "A sequence of records to store arbitrary name/value pairs conveying additional information about the named service.\r\nThis aggregation contains a variation point although it is not variant. Therefore, this variation point shall not exist in models. See constr_2638.",
    "A set of modes which is owned and provided by this module or cluster. It can be connected to the requiredModeGroups of other modules or clusters via the configuration of the BswScheduler. It can also be synchronized with modes provided via ports by an associated ServiceSwComponentType, EcuAbstractionSwComponentType or ComplexDeviceDriverSwComponentType.",
    "A single item (example: Nv block) for which the quality of a service is defined.\r\n\r\nThe aggregation is marked as <<atpSplitable>> to allow for extension during the ECU configuration process.\r\n\r\nThis association is deprecated since R4.0.3, since ServiceNeeds shall be associated with the new element BswServiceDependency within the BswInternalBehavior.",
    "A sub-function that is seen as part of the enclosing function.",
    "A sub-group that is seen as part of the enclosing group.",
    "A table can be built of individual segments. Such a segment is called tgroup.",
    "A timing condition the timing constraint depends on. In other words it specifies the condition the timing constraint holds.",
    "A transformer can be configured with transformer specific parameters which are represented by the TransformerDescription.\r\nThe upper multiplicity of this role has been increased to * due to resolving an atpVariation stereotype. The previous value was 1.",
    "A transformer chain consists of an ordered list of transformers. The ISignal specific configuration properties for each transformer are defined in the TransformationISignalProps class. The transformer configuration properties that are common for all ISignals are described in the TransformationTechnology class.",
    "A transformer chain consists of an ordered list of transformers. The ISignalGroup specific configuration properties for each transformer are defined in the TransformationISignalProps class. The transformer configuration properties that are common for all ISignalGroups are described in the TransformationTechnology class.",
    "A trigger issued by this entity via BSW Scheduler API call. It shall be a BswTrigger released (i.e. owned) by this module or cluster.\r\nThis property was modified due to atpVariation (DirectedAssociationPattern).",
    "A unique identifiers per resource used for the connection process.\r\nThe identifier is required to be unique in the scope of a single machine. \r\nIf software clusters are designed to be reused on multiple machines the uniqueness requirements applies for all the intended machines.",
    "AAF AES3 stream streams_per_frame.",
    "AH (Authentication Header) algorithm to be used for the connection, e.g. HMAC/SHA2-256",
    "AH (Authentication Header) algorithm to be used for the connection, e.g. sha1-sha256-modp1024.",
    "AUTOSAR COM allows configuring statically two different transmission modes for each\r\nI-PDU (True and False). The Transmission Mode Selector evaluates the conditions for a subset of signals and decides the transmission mode. It is possible to switch between the transmission modes during runtime.",
    "AUTOSAR COM and AUTOSAR IPDUM are filling not used areas of an IPDU with this bit-pattern. This attribute is mandatory to avoid undefined behavior. This byte-pattern will be repeated throughout the IPdu.",
    "AUTOSAR COM and AUTOSAR IPDUM are filling not used areas of an IPdu with this bit-pattern. This attribute is mandatory to avoid undefined behavior. This byte-pattern will be repeated throughout the IPdu. \r\n\r\nIn a complete System Description this attribute is mandatory. If a MultiplexedPdu is received by a Pdu Gateway and is not delivered to the IPduM but routed directly to a bus interface then the content of the MulitplexedPdu doesn't need to be described in the System Extract/Ecu Extract. To support this use case the multiplicity is set to 0..1.",
    "AUTOSAR COM is filling not used areas of an Pdu with this bit-pattern. This attribute can only be used if the nmDataInformation attribute is set to true.",
    "AUTOSAR identifier of the target module of which the dependencies are defined. \r\n\r\nThis information is optional, because the target module may also be identified by targetModuleRef.",
    "Absolute offset (with respect to the NM-PDU) of the partial networking request release information vector that is defined in bytes as an index starting with 0.",
    "AbstractAccessPoint for which the count value is applicable.",
    "Acceptance field of a CAN XL message.",
    "According to the value of the selector field some parts of the IPdu have a different layout. \r\nIn a complete System Description a MultiplexedIPdu shall contain a DynamicPart. \r\nThe following use cases support the multiplicity to be 0..1:\r\n* If a MultiplexedIPdu is received by a Pdu Gateway and is not delivered to the IPduM but routed directly to a bus interface then the content of the MulitplexedIPdu doesn't need to be described in the System Extract/Ecu Extract.\r\n* If a MultiplexedIPdu is received by an ECU which is only interested in the static part of the MultiplexedIPdu then the dynamicPart does not need to be described in the System Extract/Ecu Extract.\r\natpVariation: Content of a multiplexed PDU can vary.\r\nThe upper multiplicity of this role has been increased to * due to resolving an atpVariation stereotype. The previous value was 1.",
    "Action that is performed by the firewall if the matchingRule is fulfilled.",
    "Activation point used by the module entity to activate one or more internal triggers.\r\nThis property was modified due to atpVariation (DirectedAssociationPattern).",
    "Additional CanFD ranges of the bit timing related configuration of a CanFD controller. If this element exists the controller supports CanFD frames and the ECU developer shall take these ranges as requirements for the configuration of the CanFD controller.",
    "Additional CanXL ranges of the bit timing related configuration of a CanXL controller. If this element exists the controller supports CanXL frames and the ECU developer shall take these ranges as requirements for the configuration of the CanXL controller.",
    "Additional optional ISignal properties that may be stored in different files.",
    "Additional properties of the EcuInstance that may vary in different Variants of the Ecu.\r\nThe upper multiplicity of this role has been increased to * due to resolving an atpVariation stereotype. The previous value was 1.",
    "Additional properties of the GlobalTimeDomain\r\nThis aggregation contains a variation point although it is not variant. Therefore, this variation point shall not exist in models. See constr_2638.",
    "Additional properties of the GlobalTimeDomain.\r\nThe upper multiplicity of this role has been increased to * due to resolving an atpVariation stereotype. The previous value was 1.",
    "Additional reference with variant support.\r\nThis property was modified due to atpVariation (DirectedAssociationPattern).",
    "Additional timespan in macroticks which takes jitter into account to be able to set the JobListPointer to the next possible job which can be executed in case the FlexRay Job List Execution Function has be resynchronized.",
    "Addressing method related to this code entity. Via an association to the same SwAddrMethod, it can be specified that several code entities (even of different modules or components)  shall be located in the same memory without already specifying the memory section itself.",
    "Addressing method related to this data object. Via an association to the same SwAddrMethod it can be specified that several DataPrototypes shall be located in the same memory without already specifying the memory section itself.",
    "Adressing Type of this connection:\r\n\r\ntrue: Two Bytes\r\n\r\nfalse: One Byte",
    "After reception of a response pending frame the P2 timeout counter is reloaded with the timeout time P2max.",
    "After reception of a response pending frame the P2 timeout counter is reloaded with the timeout time P2max.\r\n\r\nPlease note that this attribute is replaced by LinTpNode.p2Max and shall no longer be used.",
    "Aggregates all ECU Configuration Values within this Container.\r\n\r\natpVariation: [RS_ECUC_00079]",
    "Aggregates all References with this container.\r\n\r\natpVariation: [RS_ECUC_00079]",
    "Aggregates all containers that belong to this module configuration.\r\n\r\natpVariation: [RS_ECUC_00078]",
    "Aggregates all sub-containers within this container.\r\n\r\natpVariation: [RS_ECUC_00078]",
    "Aggregates the top-level container definitions of this specific module definition.",
    "Aggregation of the mandatory BufferProperties.",
    "Aggregation on the literals used to define this enumeration parameter. \r\nThis aggregation is optional if the surrounding EcucModuleDef has the category STANDARDIZED_MODULE_DEFINITION. If the category attribute of the EcucModuleDef is set to VENDOR_SPECIFIC_MODULE_DEFINITION then this aggregation is mandatory.",
    "AliasNames contained in the AliasNameSet.",
    "All FMFeatures in this FMFeatureSelectionSet shall be part of the referenced FMFeatureModel.",
    "All channels controlled by a single controller.",
    "All consumers of the event are referenced here.",
    "All incoming messages at this CouplingPort shall be tagged with this VLAN Id. This tagging is performed regardless whether the message already has a VLAN tag or is untagged, an existing VLAN tag will be overwritten.\r\n\r\nThis feature is XOR with CoupligPort.defaultVlan.",
    "All static and dynamic resources for each implementation are described  within the ResourceConsumption class.",
    "All the possible parameter containers for the reference are specified.",
    "Allow dynamic reconfiguration of link MTU via Router Advertisements.",
    "Allows L-PDU length reduction and indicates that the related CC buffer has to be reconfigured for the actual length and Header-CRC before transmission of the L-PDU. \r\n\r\nIf this attribute is set to true than the referenced Frame length attribute defines the max. length.",
    "Allows a definition of the size of the per-instance memory for this implementation.\r\nThe aggregation of PerInstanceMemorySize  is subject to variability with the purpose to support variability in the software components implementations. Typically different algorithms in the implementation are requiring different number of memory objects, in this case PerInstanceMemory.",
    "Allows a textual documentation of the intended interrupt source.",
    "Allows to map a given SwComponentPrototype to a formally defined partition at a point in time when the corresponding EcuInstance is not yet known or defined.",
    "Alternative name of a specification element if its name doesn't fit into the shortName. E.g. because the name contains spaces.",
    "Amount of data in bytes (excluding header information) that can be received to define the rate policy.",
    "Amount of time in seconds that a client may keep the IP address.",
    "An ECU specific ID for responses of diagnostic routines.",
    "An ECUs TP address on the referenced channel. This represents the diagnostic Address.",
    "An ECUs reception or send ports.\r\n\r\natpVariation: If signals/PDUs/frames are variable, the corresponding ports shall be variable, too.",
    "An I-Pdu group can be included in other I-Pdu groups. Contained I-Pdu groups shall not be referenced by the EcuInstance.",
    "An IPsec policy defines the rules that determine which type of IP traffic needs to be secured using IPsec and how that traffic is secured.",
    "An abstract memory section required by this Implementation.",
    "An argument belonging to this BswModuleEntry.",
    "An argument of this ClientServerOperation",
    "An argument value defined by this port.",
    "An assignment between McDataInstances.\r\nThis supports the indication of related McDataElement implementing the of \"RP global buffer\", \"RP global measurement buffer\", \"RP enabler flag\".\r\nThis aggregation contains a variation point although it is not variant. Therefore, this variation point shall not exist in models. See constr_2638.",
    "An element with a name or ID that is specified in the Specification Document.",
    "An emptySignal is created if no actual data is configured for a client-server communication, but if the RTE shall send a SignalGroup to initiate the communication.\r\nAn EmptySignalMapping shall only reference a SystemSignal that is referenced by an ISignal with length equal to zero.",
    "An event required by this module behavior.",
    "An expression of type FMFormulaByFeaturesAndAttributes may refer to FMFeatures.",
    "An expression of type FMFormulaByFeaturesAndAttributes may refer to attributes of FMFeatures.",
    "An expression of type FMFormulaByFeaturesAndSwSystemconsts may refer to FMFeatures.",
    "An included Pdu counter is used to ensure that a sequence of Pdus is maintained.\r\nThe upper multiplicity of this role has been increased to * due to resolving an atpVariation stereotype. The previous value was 1.",
    "An internal triggering point.",
    "An occurrence expression can reference an arbitrary number of OperationArgumentPrototypes in its expression. This association aggregates instance references to OperationArgumentPrototypes which can be referenced in the expression.\r\nThis aggregation contains a variation point although it is not variant. Therefore, this variation point shall not exist in models. See constr_2638.",
    "An occurrence expression can reference an arbitrary number of TimingModeInstances in its expression. This association aggregates instance references to ModeDeclaration which can be referenced in the expression.\r\nThis aggregation contains a variation point although it is not variant. Therefore, this variation point shall not exist in models. See constr_2638.",
    "An occurrence expression can reference an arbitrary number of VariableDataPrototypes in its expression. This association aggregates instance references to VariableDataPrototypes which can be referenced in the expression.\r\nThis aggregation contains a variation point although it is not variant. Therefore, this variation point shall not exist in models. See constr_2638.",
    "An optional attribute to be used for additional information on the role of this data instance, for example in the context of rapid prototyping.",
    "An optional attribute to be used to set the ASAM ASAP2 DISPLAY_IDENTIFIER attribute.",
    "An optional special data group is attached to every variation point. These data can be used by external software systems to attach application specific data. For example, a variant management system might add an identifier, an URL or a specific classifier.\r\nThis aggregation contains a variation point although it is not variant. Therefore, this variation point shall not exist in models. See constr_2638.",
    "Annotates the standard according to which the PID is given, e.g. \"ISO15031-5\" or \"SAE J1979 Rev May 2007\".",
    "Annotation of this PortPrototype with respect to client/server communication.",
    "Annotations on this IO Hardware Abstraction port.",
    "Annotations on this delegated port.",
    "Annotations on this mode port.",
    "Annotations on this non voilatile data port.",
    "Annotations on this parameter port.",
    "Annotations on this trigger port.",
    "Any EcucContainerDef with a destinationUri that is identical to the destinationUri that is referenced here defines a valid target.",
    "Applicable startup configurations.",
    "Applicable startup options",
    "Application addressing",
    "Application errors that are defined as part of this interface.",
    "Application on DltEcu that provides log or trace data.",
    "ApplicationPartition for which the mapping applies.",
    "Applied TextTableMapping(s)",
    "Arbitrary Address Capable field of the NAME of this node.",
    "Assignement of the DltContext that groups log and trace messages that will be transmitted to the DltLogSink.",
    "Assignment of IPduIdentifiers that are transmitted over the static SocketConnection.\r\nThis property was modified due to atpVariation (DirectedAssociationPattern).",
    "Assignment of a unique name to a flat representation.",
    "Assignment of a unique name to an Identifiable.",
    "Assignment of configuration properties valid for this SomeipTpConnection.",
    "Assigns a name to this element.",
    "Assigns a set of MAC-Multicast-Addresses which are addressable via this CouplingPort. This is a static pre-configuration and further addresses may be learned during runtime.",
    "Associated axis calculation strategy.",
    "Associated axis description in textual form.",
    "Association  to one or more physical connectors (max number of connectors for FlexRay: 2).\r\n\r\nIn a System Description this reference is mandatory. In an ECU Extract this reference is optional (references to ECUs that are not part of the ECU Extract shall be avoided).",
    "Association to a CommunicationCluster in the topology description.",
    "Association to a CommunicationConnector in the topology description. \r\n\r\nIn a System Description this reference is mandatory. In an ECU Extract this reference is optional (references to ECUs that are not part of the ECU Extract shall be avoided).",
    "Association to a CommunicationConnector in the topology description. \r\nIn a System Description this reference is mandatory. In an ECU Extract this reference is optional (references to ECUs that are not part of the ECU Extract shall be avoided).",
    "Association to a CommunicationConnector in the topology description. In a System Description this reference is mandatory. In an ECU Extract this reference is optional (references to ECUs that are not part of the ECU Extract shall be avoided).",
    "Association to a CommunicationConnector in the topology description. This reference shall be used if the SocketAddress describes an IP multicast address, i.e. if the aggregated ApplicationEndpoint references a NetworkEndpoint that describes \r\nan IP Address in the IP multicast range. Such a SocketAddress contains references to those Ecus (via the multicastConnector reference) in the model that will receive multicast messages via the SocketAddress that is defined by the aggregated ApplicationEndpoint and NetworkEndpoint, i.e. IP Address and UDP Port combination.",
    "Association to a CommunicationConnector in the topology description. This reference shall be used if the SocketAddress describes an IP unicast address for an ECU that is part of the model.",
    "Association to an CommunicationController in the topology description.",
    "Association to an ECUInstance in the topology description.",
    "Attribute denotes whether a VLAN tagged ethernet frame will be\r\n# sent with its VLAN tag (sentTagged)\r\n# sent without a VLAN tag (sentUntagged)\r\n# will be dropped at this port (notSent or VLAN  not member of this list)",
    "Attribute is used to distinguish a request from a response.",
    "Authentication properties used to configure SecuredIPdus.",
    "AutosarDataType belonging to the includedDataTypeSet",
    "Average value of a date (in seconds)",
    "BAM (Broadcast Announce Message)  is a broadcast protocol. If this attribute is set to true broadcast is used. Since address FF is the only broadcast address, there's no reason to configure it.",
    "Base ID merged with the LIN frame ID to form the CAN ID.\r\n\r\nOnly required when a BusMirrorChannel that refers to a LinPhysicalChannel in the role channel is referenced in the role sourceChannel.",
    "Base ID merged with the masked parts of the original CAN ID to form the mapped CAN ID.",
    "Base type associated with the containing data object.",
    "Behavior of the check functionality",
    "Behavior of the linked indicator.",
    "Bit mask for CAN Identifier used to configure the CAN Transceiver for partial network wakeup.",
    "Bit mask for CAN Payload used to configure the CAN Transceiver for partial network wakeup.",
    "Bit mask for Ethernet Payload used to configure the NM filter mask for the Network Management.",
    "Bit mask for FlexRay Payload used to configure the NM filter mask for the Network Management.",
    "Bit mask for NM-Pdu Payload used to configure the NM filter mask for the Network Management.",
    "Bit offset of CRC from the beginning of the Array representation of the Signal Group/VariableDataPrototype (MSB order, bit numbering: bit 0 is the least important). The offset shall be a multiplicity of 8 and it should be 0 whenever possible. For example, offset 8 means that the CRC will take the byte 1, i.e. bits 8..15. If crcOffset is not present the value is defined by the selected profile.",
    "Bit offset of Counter from the beginning of the Array representation of the Signal Group/VariableDataPrototype (MSB order, bit numbering: bit 0 is the least important). The offset shall be a multiplicity of 4 and it should be 8 whenever possible. For example, offset 8 means that the counter will take the low nibble of the byte 1, i.e. bits 8 .. 11. If counterOffset is not present the value is defined by the selected profile.",
    "Bit offset of the low nibble of the high byte of Data ID. The applicability of this attribute is controlled by [constr_1261].",
    "Bit timing related configuration of a CAN controller for payload and CRC of a CanFD frame. If this element exists the controller supports CanFD frames and the ECU developer shall take these values for the configuration of the CanFD controller.",
    "Bit timing related configuration of a CAN controller for payload and CRC of a CanXL frame. If this element exists the controller supports CanXL frames and the ECU developer shall take these values for the configuration of the CanXL controller.",
    "Boolean configuration which determines whether or not frames received in the dynamic segment that don't contain a message ID will be admitted into the FIFO.",
    "Boolean flag that controls the transition to the POC:halt state due to a clock synchronization errors. \r\nIf set to true, the Communication Controller is allowed to transition to POC:halt. \r\nIf set to false, the Communication Controller will not transition to the POC:halt state but will enter or remain in the normal POC (passive State).",
    "Busspecific NmEcu attributes. \r\nPlease note that this aggregation is deprecated and is replaced by the busDependentNmEcu aggregation.",
    "By means of this reference the grouping of DiagnosticAliasEvents within the DiagnosticFimSummaryEvent can be specified.",
    "By this means it is possible to create a hierarchy of subDomains where one global time domain can declare one or more other global time domains as its subDomains.",
    "By this means it is possible to create a hierarchy of subDomains where one global time domain can declare one or more other global time domains as its subDomains.\r\nThis property was modified due to atpVariation (DirectedAssociationPattern).",
    "Byte Position of Data Byte that should be used for the bitwise XOR with Invert and the bitwise AND with Mask.",
    "Byte Position of Id.",
    "Byte Position of Invert.",
    "Byte Position of Mask.",
    "Byte offset that describes the location of the ContainedPdu in the ContainerPdu if no header is used.",
    "CAN 2.0 configuration parameters for the CAN XL controller.",
    "CAN Bit Timing configuration",
    "CAN FD configuration parameters for the CAN XL controller.",
    "CAN ID of the CAN status frame.\r\n\r\nIf configured, a status frame will be sent on the CAN destination bus that contains the state of all active source buses.",
    "CAN Identifier used to configure the CAN Transceiver for partial network wakeup.",
    "CAN XL configuration parameter requirements for the CAN XL controller.",
    "CAN XL configuration parameters for the CAN XL controller.",
    "CAN bus off monitoring / recovery at system level.",
    "CAN identifier mask which denotes relevant bits in the CAN Identifier. This attribute defines a CAN Identifier range in an alternative way to canIdentifierRange. It identifies the bits of the configured CAN Identifier that must match the received CAN Identifier.",
    "CP Software Cluster providing the resource",
    "CP Software Cluster requesting the resource",
    "CP Software Clusters of this System\r\nThis property was modified due to atpVariation (DirectedAssociationPattern).",
    "CPU resource limit in percentage of the total CPU capacity on the machine.",
    "CRF base frequency in Hz.",
    "CRF timestamp interval as multiple of the baseFrequency.",
    "Capacity of the slot in bytes to be reserved by the stack vendor. One use case is to define this value in case that the cryptoObjectType is undefined and the slot size can not be deduced from cryptoObjectType and cryptoAlgId.\r\n\r\n\"0\" means slot size can be deduced from cryptoObjectType and cryptoAlgId.",
    "Capacity of the slot in bytes to be reserved by the stack vendor. One use case is to define this value in case that the cryptoObjectType is undefined and the slot size can not be deduced from cryptoObjectType and cryptoAlgId.\r\n\"0\" means slot size can be deduced from cryptoObjectType and cryptoAlgId.",
    "Category of the interrupt",
    "Certificate representing the identity certificate authority applicable to the domain(s) specified by domainsIds.",
    "Certificate representing the permissions certificate authority applicable to the domain(s) specified by domainsIds.",
    "Change description for Class immediateNvDataStorage in table \"Table A.111: DiagnosticTroubleCodeProps\":\r\n\r\nSwitch to enable immediate storage triggering of an according event memory entry persistently to NVRAM.\r\n\r\ntrue: immediate non-volatile storage triggering on first occurrence and shutdown.\r\n\r\nfalse: immediate non-volatile storage triggering on shutdown.",
    "Channels speed in bits/s.",
    "Cipher Suite to use for MACsec.",
    "Cipher suite configuration to use with MACsec.",
    "Clear monitoring window on transition from state Valid to state Invalid.",
    "Client Port for TCP/UDP connection in an abstract communication sense. The client is the major requester of the communication. Please note that the client may also produce data.",
    "Client Timing configuration settings that are EventGroup specific.",
    "Client Timing configuration settings that are EventGroup specific.\r\nThis property was modified due to atpVariation (DirectedAssociationPattern).",
    "Client specific configuration settings relevant for the SOME/IP service discovery.",
    "Client specific configuration settings relevant for the SOME/IP service discovery.\r\nThis property was modified due to atpVariation (DirectedAssociationPattern).",
    "ClientServerOperation instance qualifying the communication resource",
    "ClientServerOperation(s) of this ClientServerInterface.",
    "Cluster specific NmEcu attributes",
    "Collection of  supported cipher suites that are used to negotiate the security settings for a network connection defined by the ServiceInstanceToMachineMapping.",
    "Collection of  supported cipher suites that are used to negotiate the security settings for a network connection.",
    "Collection of AliveSupervisions in the context of this GlobalSupervision.",
    "Collection of AliveSupervisions in the context of this LocalSupervision.",
    "Collection of AliveSupervisions in the context of this SupervisionEntity.",
    "Collection of Application Addresses that are used on the CommunicationConnector.",
    "Collection of ApplicationPartitions available in the CpSoftwareCluster",
    "Collection of Arbitrations in the context of a PlatformHealthManagementContribution.",
    "Collection of AutosarDataPrototype related configuration settings for a transformer.",
    "Collection of CheckpointTransitions in the context of this GlobalSupervision.",
    "Collection of CheckpointTransitions in the context of this LocalSupervision.",
    "Collection of CheckpointTransitions in the context of this SupervisionEntity.",
    "Collection of CouplingPorts which are managed in the scope of this Ethernet GlobalTimeDomain.",
    "Collection of DDS Domain definitions.",
    "Collection of DDS Partition definitions.",
    "Collection of DDS QOS Profiles.",
    "Collection of DDS Topics.",
    "Collection of DataPrototypes for which the settings in SomeipDataPrototypeTransformationProps are valid. For reuse reasons the SomeipDataPrototypeTransformationProps is able to aggregate several DataPrototypes.",
    "Collection of DdsISignalToDdsTopicMappings.",
    "Collection of DeadlineSupervisions in the context of this GlobalSupervision.",
    "Collection of DeadlineSupervisions in the context of this LocalSupervision.",
    "Collection of DeadlineSupervisions in the context of this SupervisionEntity.",
    "Collection of DltMessages in the DltMessageCollectionSet.",
    "Collection of DltMessages in the DltMessageCollectionSet.\r\nThis aggregation contains a variation point although it is not variant. Therefore, this variation point shall not exist in models. See constr_2638.",
    "Collection of DoIp Addresses.",
    "Collection of DoIpRoutingActivation possibilities defined in the DoIpInterface.",
    "Collection of Flow Metering Entries.",
    "Collection of GlobalSupervisionEntitys in the context of a PlatformHealthManagementContribution.",
    "Collection of GlobalSupervisions in the context of a PlatformHealthManagementContribution.",
    "Collection of HealthChannels in the context of a PlatformHealthManagementContribution.",
    "Collection of IEEE1722Tp connections.\r\nThis property was modified due to atpVariation (DirectedAssociationPattern).",
    "Collection of IPduIdentifiers that are transmitted over Socket Connections.",
    "Collection of J1939Clusters that share a common address space for the routing of messages.",
    "Collection of LocalSupervisions in the context of a GlobalSupervision.",
    "Collection of LocalSupervisions in the context of a PlatformHealthManagementContribution.",
    "Collection of LogicalExpressions in the context of an Arbitration.",
    "Collection of LogicalSupervisions in the context of this GlobalSupervision.",
    "Collection of LogicalSupervisions in the context of this LocalSupervision.",
    "Collection of LogicalSupervisions in the context of this SupervisionEntity.",
    "Collection of NM Clusters\r\n\r\natpVariation: Derived, because cluster can be variable.",
    "Collection of NM ECUs\r\n\r\natpVariation: Derived, because EcuInstance can be variable.",
    "Collection of NetworkEndpoints that are used in the VLan.",
    "Collection of NmClusterCouplings\r\n\r\natpVariation: Derived, because NmCluster can vary.",
    "Collection of NmNodes of the NmCluster. \r\n\r\natpVariation: Derived, because NmNode can be variable.",
    "Collection of NoSupervisions in the context of this GlobalSupervision.",
    "Collection of PhmCheckpoints in the context of this SupervisionEntity.",
    "Collection of SignalServiceTranslationProps.",
    "Collection of SoAdAddresses.",
    "Collection of SocketConnectionBundles.",
    "Collection of SocketConnections in the connectionGroup.\r\nThis aggregation contains a variation point although it is not variant. Therefore, this variation point shall not exist in models. See constr_2638.",
    "Collection of Stream Filter Entries.",
    "Collection of Stream Gate Entries.",
    "Collection of SupervisionEntitys in the context of a PlatformHealthManagementContribution.",
    "Collection of SupervisionModeConditions in the context of a PlatformHealthManagementContribution.",
    "Collection of SupervisionModes in the context of this GlobalSupervision.",
    "Collection of TP Addresses.\r\n\r\natpVariation: Derived, because EcuInstance can vary.",
    "Collection of TP Adresses.\r\n\r\natpVariation: Derived, because EcuInstance can vary.",
    "Collection of TP Ecus\r\n\r\natpVariation: Derived, because EcuInstance\r\ncan vary.",
    "Collection of TP Ecus \r\n\r\natpVariation: Derived, because EcuInstance can vary.",
    "Collection of TpAddresses.",
    "Collection of TpAddresses.\r\n\r\natpVariation: Derived, because EcuInstance can vary.",
    "Collection of Traffic Shaper Groups.",
    "Collection of action items.",
    "Collection of action lists.",
    "Collection of additional LogicAddress properties.",
    "Collection of annotations of this ports sender/receiver communication.",
    "Collection of blacklisted versions.",
    "Collection of blocklisted versions",
    "Collection of blocklisted versions.",
    "Collection of checkpoints in the context of a PlatformHealthManagementContribution.",
    "Collection of consumed events.",
    "Collection of consumed operations.",
    "Collection of cryptographic job requirements.",
    "Collection of event groups provided by the ProvidedServiceInstance",
    "Collection of firewall rules that apply in the vehicle mode",
    "Collection of logical DoIP Addresses.",
    "Collection of logical expressions.",
    "Collection of mappings between ServiceInterfaceElementSecureComConfig and CryptoKeySlot.",
    "Collection of permitted lists for the filtering of TCP options.",
    "Collection of provided events.",
    "Collection of provided operations.",
    "Collection of reportable instances of security events.",
    "Collection of rules in the context of an Arbitration.",
    "Collection of rules.",
    "Collection of stateReferences.",
    "Collection of switch stream identification entries.",
    "Collection of the execution time descriptions for this implementation.\r\nThe aggregation of executionTime is subject to variability with the purpose to support the conditional existence of runnable entities.",
    "Collection of the heap memory allocated by this implementation.",
    "Collection of the memory allocated by the owner.",
    "Collection of the stack memory usage for each runnable entity of this implementation.\r\nThe aggregation of StackUsage is subject to variability with the purpose to support the conditional existence of runnable entities.",
    "Collection of the system memory allocated by the owner.",
    "Collection of timing attributes configurable for a method that is provided or requested by a Service Instance.",
    "Collection of timing attributes configurable for an event that is provided by a Service Instance.",
    "Collection of unidirectional connections between a source address and a target address.",
    "Collection of validation conditions which all need to evaluate to true in order to indicate a valid validation condition of the EcucDefinitionElement.",
    "Collects all the structural parts at which a CouplingPort may be configurable.",
    "Collects the debug info for this implementation.\r\nThe upper multiplicity of this role has been increased to * due to resolving an atpVariation stereotype. The previous value was 1.",
    "Com IPdu alternatives that are transmitted  in the Dynamic Part of the MultiplexedIPdu.",
    "Committed Burst Size (CBS) (accepted burst size in green token bucket).",
    "Committed Information Rate (CIR) (accepted rate in green token bucket) in bits per second.",
    "Communication Direction of the Connector Port (input or output Port).",
    "Communication Direction of the IEEE1722TpConnection.",
    "Communication resource for which the mapping applies.",
    "CommunicationControllers of the ECU.",
    "CommunicationControllers of the Machine that are used for description of 10-Base-T1S topologies\r\nThis aggregation contains a variation point although it is not variant. Therefore, this variation point shall not exist in models. See constr_2638.",
    "Compiler name (like gcc).",
    "Complete symbol of the function implementing the post service point. This symbol is used for post-build hooking purposes.",
    "Complete symbol of the function implementing the pre service point. This symbol is used for post-build hooking purposes.",
    "Complete symbol of the function implementing the service point. This symbol is used for post-build hooking purposes.",
    "Computation method associated with the semantics of this data object.",
    "Configuration of  FlexRay Autosar Transport Protocol channels.",
    "Configuration of Adaptive Autosar module instances that are running on the machine.",
    "Configuration of CAN TP channels.",
    "Configuration of DoIPChannels available in an DoIpInterface. Each DoIPChannel describes a connection between a doIpSourceAddress and a doIpTargetAddress and the exchange of DcmIPdus between the PduR and DoIP. A DoIP channel is constituted by the set of all DoIpTpConnection elements via which the configured EcuInstance sends or receives SDUs that are sharing the same local diagnosis address and tester address.",
    "Configuration of FlexRay TP Connection Controls.",
    "Configuration of FlexRay TP Connections.\r\n\r\natpVariation: Derived, because TpNode can vary.",
    "Configuration of FlexRay TP Pdu Pools.",
    "Configuration of J1939 TP connections.\r\n\r\natpVariation: Derived, because TpNode can vary.",
    "Configuration of LIN TP channels.\r\n\r\natpVariation: Derived, because TpNode can vary.",
    "Configuration of TLS-PSK identity that will be send from the client to the server.",
    "Configuration of a IPv4 DHCP server that runs on the network endpoint.",
    "Configuration of a IPv6 DHCP server that runs on the network endpoint.",
    "Configuration of a MKA Participant.",
    "Configuration of a UDP port and UDP multicast IP address of the Nm communication on a VLAN.",
    "Configuration of bytes in the message,",
    "Configuration of filter rules for ICMP (Internet Control Message Protocol).",
    "Configuration of firewall rules for DDS.",
    "Configuration of firewall rules for DoIP messages",
    "Configuration of firewall rules for SOME/IP Service Discovery messages",
    "Configuration of firewall rules for SOME/IP messages",
    "Configuration of generic firewall rules",
    "Configuration of rules on the Data Link Layer",
    "Configuration of rules on the Network Layer",
    "Configuration of rules on the Transport Layer",
    "Configuration of the DDS-RPC service providing access to the method when using DDS as the underlying network binding.",
    "Configuration of the Header File with the custom class declaration",
    "Configuration of the Header File with the custom class declaration.",
    "Configuration of the MsgId based trace switch",
    "Configuration of the ReachableTime (s) specified in [RFC4861 6.3.2. Host Variables].",
    "Configuration of the time synchronisation client.",
    "Configuration of the time synchronisation server.",
    "Configuration of the used transport protocol.",
    "Configuration options for Auto-IP (automatic private IP addressing).",
    "Configuration options for IPv4 packet fragmentation/reassembly.",
    "Configuration options for IPv4.",
    "Configuration options for IPv6.",
    "Configuration properties for DHCPv6.",
    "Configuration properties for IPv6 packet fragmentation/reassembly.",
    "Configuration properties for the ARP (Address Resolution Protocol).",
    "Configuration properties for the Neighbor Discovery Protocol for IPv6.",
    "Configuration settings for Functional Clusters on the machine design level.",
    "Configuration settings for individual events that are provided by the ServiceInstance.",
    "Configuration settings for individual methods that are provided by the ServiceInstance.",
    "Configuration settings for individual methods that are requested by the ServiceInstance.",
    "Configuration settings to secure the communication of ServiceInterface elements.",
    "Configured EID (Entity ID) used for VehicleIdentification Request.",
    "Configured GID (Group ID) used for VehicleIdentificationRequest. \r\nIf configured, take this value (and set \"Further action required\" byte to 0x00=\"No further action required\"), if not configured use ServiceInterface DoIPGroupIdentification to retrieve GID and 'further action required' values.",
    "Configures if TP Frames of not requested LIN-Slaves are dropped or not.",
    "Configures if TP Frames of not requested LIN-Slaves are dropped or not. \r\n\r\nPlease note that this attribute is replaced by LinTpNode.dropNotRequestedNad and shall no longer be used.",
    "Configures the DoIP protocol version used in the generic DoIP header. The valid range of this parameter is defined by the always latest release of ISO 13400-2 and can be extended with every new release of the ISO document. As example a value of 0x03 defines the ISO 13400-2:2019 release.",
    "Configures the SOME/IP serialization for the referenced dataPrototype in case of a String.  \r\nIt describes the size of the length field (in Bytes) that will be put in front of the String in the SOME/IP message.",
    "Configures the SOME/IP serialization for the referenced dataPrototype in case of a Union.  \r\nIt describes the size of the length field (in Bytes) that will be put in front of the Union in the SOME/IP message.",
    "Configures the SOME/IP serialization for the referenced dataPrototype in case of a Union.  \r\nIt describes the size of the type selector field (in Bytes) that will be put in front of the Union in the SOME/IP message.",
    "Configures the SOME/IP serialization for the referenced dataPrototype in case of a variable size Array (Vector), fixed-size Array or an Associative_Map.   \r\nIt describes the size of the length field (in Bytes) that will be put in front of the Array or Associative_Map in the SOME/IP message.",
    "Configures the SOME/IP serialization for the referenced dataPrototype in case of an Struct.  \r\nIt describes the size of the length field (in Bytes) that will be put in front of the Struct in the SOME/IP message.",
    "Configures the default value (s) for the RetransTimer variable specified in [RFC4861 6.3.2. Host Variables].",
    "Configures the encoding for SOME/IP serialization for the referenced dataPrototype in case of an String.",
    "Configures the maximum number of allowed response pending frames.",
    "Configures the maximum number of allowed response pending frames.\r\n\r\nPlease note that this attribute is replaced by LinTpNode.maxNumberOfRespPendingFrames and shall no longer be used.",
    "Connection to the ECUInstance in the Topology",
    "ConstantSpecificationMappings owned by the ConstantSpecificationMappingSet.",
    "Constrains an upper-bounds for any [ARMetaClass{TimingClockSyncAccuracy}].[ARMetaClassRole{accuracy}{TimingClockSyncAccuracy}] plus the [ARMetaClassRole{accuracyExt}{TDLETZoneClock}] of the [ARMetaClass{TDLETZoneClock}], that is referenced by the [ARMetaClass{TimingClockSyncAccuracy}].",
    "Constrains an upper-bounds for any combination of two [ARMetaClassRole{accuracy}{TimingClockSyncAccuracy}]s of referenced [ARMetaClass{TimingClockSyncAccuracy}]s plus the [ARMetaClassRole{accuracyExt}{TDLETZoneClock}]s of the [ARMetaClass{TDLETZoneClock}]s, that are referenced by those [ARMetaClass{TimingClockSyncAccuracy}]s.",
    "Constraint that enforces a mapping of RteEvent to a particular OsTask in the System context.",
    "Constraint that enforces a mapping of RteEvent to a particular OsTask in the context of a SwComponent.",
    "Constraint that enforces a mapping of a Swc to a particular Application Partition.\r\nThis aggregation contains a variation point although it is not variant. Therefore, this variation point shall not exist in models. See constr_2638.",
    "Constraints that limit the mapping freedom for the mapping of SW components to ECUs.",
    "Constraints that limit the mapping freedom for the mapping of data elements to signals.",
    "Consumed service instances.\r\nThis aggregation contains a variation point although it is not variant. Therefore, this variation point shall not exist in models. See constr_2638.",
    "ConsumedProvidedServiceInstanceGroup used in a Partial Network Cluster. This reference is optional, since this could be used for starting and stopping ConsumedProvidedServiceInstanceGroup according the requested partial network, but is not necessarily needed.\r\nThis property was modified due to atpVariation (DirectedAssociationPattern).",
    "Contains a reference to a variable which serves as a host-variable for a bit variable. Only applicable to bit objects.",
    "Contains details about the software context this heap usage is provided for.",
    "Contains details about the software context this stack usage is provided for.",
    "Contains information about the hardware context this heap usage is describing.",
    "Contains information about the hardware context this stack usage is describing.",
    "Contains the logical address of the receiver of a diagnostic message",
    "Control the way how return values are created in case of an out-of-range situation.",
    "Controls initial find behavior of clients.",
    "Controls offer behavior of the server.",
    "Controls whether the order of execution specified by this constraint can be intentionally ignored (TRUE), or shall be respected (FALSE).",
    "CorrectionField from the Follow_Up Message Header shall be included in CRC calculation.",
    "Count of repetitions for a sleep on dataline. If a sleep is rejected by the linked communication partner, the sleep is repeated until the count of repetitions exceed. If count of repetitions exceed, the Ethernet hardware (PHY) transit to sleep without acknowledgement of the connected link partner.",
    "Count of repetitions for a wake-up. This is used to increase the reliability in the network, such that an ECU which initiates the wake-up does repeat the wake-up and increase the probability that affected ECUs receive the wake-up.",
    "Count value for a AbstractAccessPoint.",
    "Coupling Flag that defines if unused \"green\" tokens in the first bucket are transferred to the second bucket as \"yellow\" tokens.",
    "CouplingPort speed in bits/s.",
    "Cryptography that is used by the MKA Participant.",
    "DDS Security access rule applicable to the DDS Topics used for service interface field access methods (Get, Set).",
    "DDS Security access rule applicable to the DDS Topics used for service interface methods.",
    "DDS Security access rule applicable to the DDS Topics used for the service interface event.",
    "DTC severity according to ISO 14229-1.",
    "Data Format Element that is implied by this element in the specification. Used to share one rationale for more tailorings.",
    "Data Length of the remote data frame used to configure the CAN Transceiver for partial network wakeup in Bytes.",
    "Data Length of the segment in bits.",
    "Data Message (TP.DT) used by CMDT and BAM.\r\n \r\nThe DataNPdu has a fixed length of 8 bytes.",
    "Data constraint for this data object.",
    "Data element these attributes belong to.",
    "Data element these quality of service attributes apply to.",
    "Data properties of this SwServiceArg.",
    "Data reception policy for inter-partition and/or inter-core communication.",
    "Date within period.",
    "Declares which communication addressing mode is supported.",
    "Default Hop-Limit value of outgoing ICMPv6 packets.",
    "Default Time-to-live value of outgoing TCP packets.",
    "Default Time-to-live value of outgoing UDP packets.",
    "Default expiry date, i.e. default end point of period for which all specified lifeCycleInfo apply. Note that the default period can be overridden for each lifeCycleInfo individually.",
    "Default network mask to be used by DHCP clients.\r\nNotation 255.255.255.255",
    "Default starting point of period in which all the specified lifeCycleInfo apply. Note that the default period can be overridden for each lifeCycleInfo individually.",
    "Default value of maximum receive window in bytes.",
    "Default value of the boolean configuration parameter.\r\n\r\natpVariation: [RS_ECUC_00083]",
    "Default value of the enumeration configuration parameter. This string needs to be one of the literals specified for this enumeration.",
    "Default value of the float configuration parameter.\r\n\r\natpVariation: [RS_ECUC_00083]",
    "Default value of the integer configuration parameter.\r\n\r\natpVariation: [RS_ECUC_00083]",
    "Default value of the string configuration parameter.",
    "Defiens the applicable Rapid Prototyping profils which are especially defining the smbol of the service functions and the valid id range.\r\nThe order of the RptProfiles determines the order of the service function invocation by RTE.",
    "Define the links to a freeze frame class sampler.\r\nThis property was modified due to atpVariation (DirectedAssociationPattern).",
    "Define the maximum length in bytes which limits the length of the Pdu during gateway operation if the runtime length of the received Pdu exceeds this limit.",
    "Defined DataElements in the extended record element.\r\nThis aggregation contains a variation point although it is not variant. Therefore, this variation point shall not exist in models. See constr_2638.",
    "Defined properties associated with the DemDTC.",
    "Defined properties associated with the DemDTC.\r\nThis property was modified due to atpVariation (DirectedAssociationPattern).",
    "Defined properties associated with the J1939 DTC.",
    "Defined whether the translation shall happen in a safe way.",
    "Defined whether the translation shall happen in a secure way.",
    "Defines a IPdu specific sender timeout which can reduce the ContainerIPdu timer when this containedIPdu is put inside the ContainerIPdu. This attribute is ignored on receiver side.",
    "Defines a boolean expression based on features and system constants which needs to evaluate to true for this mapping to become active.",
    "Defines a condition which needs to be fulfilled for this mapping to become active.",
    "Defines a key.",
    "Defines a list of ordered NetworkEndpoints.",
    "Defines a lower bound for the binding time of the variation points that are associated with the FMFeature, and refines its minimumIntendedBindingTime. This attribute is meant as a hint for the development process.",
    "Defines a lower bound for the binding time of the variation points that are associated with the FMFeature. This attribute is meant as a hint for the development process.",
    "Defines a pair of values which are translated into each other.",
    "Defines a per-instance memory object needed by this software component.\r\nThe aggregation of PerInstanceMemory is subject to variability with the purpose to support variability in the software components implementations. Typically different algorithms in the implementation are requiring different number of memory objects.",
    "Defines a priority of a ContainedTxPdu. 255 represents the lowest priority and 0 represent the highest priority.",
    "Defines a priority regeneration where the ingress priority is replaced by regenerated priority.",
    "Defines a priority which is mapped onto a Traffic Class.",
    "Defines a set of Traffic Classes which shall be handled by this FIFO.",
    "Defines a set of VLANs the set of macMulticastAddress apply to.",
    "Defines a set of macMulticastAddresses to be mapped to the CouplingPort.",
    "Defines a specific  symbol in order to generate the compiler abstraction  \"memclass\" code for this MemorySection. The existence of this attribute supersedes the usage of swAddrmethod.shortName for this purpose. \r\n\r\nThe complete name of the  \"memclass\" preprocessor symbol is constructed as <prefix>_<memClassSymbol> where prefix is defined in the same way as for the enclosing MemorySection. See also AUTOSAR_SWS_CompilerAbstraction SWS_COMPILER_00040.",
    "Defines an AUTOSAR typed memory-block that needs to be available for each instance of the Basic Software Module. \r\nThe aggregation of arTypedPerInstanceMemory is subject to variability with the purpose to support variability in the Basic Software Module's implementations. Typically different algorithms in the implementation are requiring different number of memory objects.",
    "Defines an AUTOSAR typed memory-block that needs to be available for each instance of the SW-component. \r\n\r\nThis is typically only useful if supportsMultipleInstantiation is set to \"true\" or if the component defines NVRAM access via permanent blocks.\r\n\r\nThe aggregation of arTypedPerInstanceMemory is subject to variability with the purpose to support variability in the software component's implementations. Typically different algorithms in the implementation are requiring different number of memory objects.",
    "Defines an environment for the execution of ExecutableEntites.",
    "Defines an optional filter to be applied during translation.",
    "Defines an upper bound for the binding time of the variation points that are associated with the FMFeature, and refines its maximumIntendedBindingTime. This attribute is meant as a hint for the development process.",
    "Defines an upper bound for the binding time of the variation points that are associated with the FMFeature. This attribute is meant as a hint for the development process.",
    "Defines and enables the ComTimeoutSubstituition for this ISignal.\r\nThis aggregation contains a variation point although it is not variant. Therefore, this variation point shall not exist in models. See constr_2638.",
    "Defines at which cycle the GlobalSupervision shall be executed.",
    "Defines how a specific event shall be handled.",
    "Defines how an Integrity Check Value (ICV) shall be handled at the receiver.",
    "Defines how the DEM is connected to the component or module to perform the IUMPR (In use monitor performance ratio) service.",
    "Defines how the FMFeature that is described by this\r\nFMFeatureSelection contributes to the FMFeatureSelectionSet. A\r\nFMFeature may have the state selected, deselected or undecided.",
    "Defines how the message is routed, either to\r\n* ARTI trace,\r\n* Logger (default),\r\n* ARTI trace and logger\r\n* None",
    "Defines how the node obtains its IP address.",
    "Defines how the referenced ISignal contributes to the send triggering of the ISignalIPdu.",
    "Defines how the service instance control shall behave.",
    "Defines if CRC (re)calculation for the permanent RAM Block is required.",
    "Defines if Write Verification shall be enabled for this NVRAM Block.",
    "Defines if client authentication shall be applied for this TLS connection.",
    "Defines if the AUTOSAR model may define a VariationPoint at this location.",
    "Defines if the Pdu contains NM Data. \r\nIf the NmPdu does not aggregate any ISignalToIPduMappings it still may contain UserData that is set via Nm_SetUserData(). If the ISignalToIPduMapping exists then the nmDataInformation attribute shall be ignored.",
    "Defines if the Pdu contains NM Vote information.",
    "Defines if the Static Block Id check shall be enabled.",
    "Defines if the operation cycle state is available over the power cycle (stored non-volatile) or not. \r\n\r\n* true: the operation cycle state is stored non-volatile \r\n* false: the operation cycle state is only stored volatile\r\n\r\nThis attribute is only relevant for the AUTOSAR adaptive platform. It no longer has a meaning on the AUTOSAR classic platform.",
    "Defines if the optional VIN/GID synchronization status is used additionally in the vehicle identification/announcement.",
    "Defines if the security extension according to IETF RFC 7366 shall be supported. This is useful for cipher suites using CBC mode.",
    "Defines if the security extension for max_fragment_length shall be supported as defined in IETF RFC 8449, chapter 4.1.",
    "Defines if the service points support the stimulation enabler.\r\nIf RptProfile.stimEnabler is \"none\" then no stimulation enabler is passed to the service function. Otherwise the stimulation enabler will be passed as a parameter.",
    "Defines if the transmission of the ContainerIPdu shall be requested right after the first ContainedIPdu was put into it. This attribute shall be ignored on receiver side.",
    "Defines if this ACF-stream is allowed to collect ACF-messages of different bus kinds (i.e. whether it is allowed to collect CAN and LIN ACF-messages in one ACF-stream message).",
    "Defines if this EcuInstance shall implement the PncGateway functionality on this CommunicationConnector and its respective PhysicalChannel. Several EcuInstances on the same PhysicalChannel can have the PncGateway functionality enabled, but only one of them shall have the pncGatewayType \"active\".",
    "Defines if this EcuInstance shall implement the dynamic PNC-to-channel-mapping functionality on this CommunicationConnector and its respective PhysicalChannel.",
    "Defines if this EcuInstance shall request Nm on all its PhysicalChannels which have Nm variant set to FULL each time a PNC is requested.",
    "Defines in this SupervisionMode the acceptable amount of time with EXPIRED supervision status of the enclosing GlobalSupervision before it is considered STOPPED.",
    "Defines maximum packets allowed to be transmitted within a TO. This configuration can be different from one ECU to another within the PLCA mixed segment.",
    "Defines more details of a CouplingPort in case a more specific configuration is required.",
    "Defines parameter(s) or characteristic value(s) shared between SwComponentPrototypes of the same SwComponentType\r\nThe aggregation of sharedParameter is subject to variability with the purpose to support variability in the software components implementations. Typically different algorithms in the implementation are requiring different number of memory objects.",
    "Defines parameter(s) or characteristic value(s) that needs to be available for each instance of the software-component. This is typically only useful if supportsMultipleInstantiation is set to \"true\".\r\nThe aggregation of perInstanceParameter is subject to variability with the purpose to support variability in the software components implementations. Typically different algorithms in the implementation are requiring different number of memory objects.",
    "Defines properties for a single translated element.",
    "Defines properties for a single translated event.",
    "Defines properties for an IPdu that is part of the ContainerIPdu.",
    "Defines relations for FMFeatures, for example dependencies on other FMFeatures, or conflicts with other FMFeatures. A FMFeature can only be part of a FMFeatureSelectionSet if all its relations are fulfilled.",
    "Defines restrictions for FMFeatures. A FMFeature can only be part of a FMFeatureSelectionSet if at least one of its restrictions evaluates to true.",
    "Defines sub-functions of the service ResponseOnEvent.",
    "Defines that this ConsumedEventGroup shall be requested (subscribed) as soon as the corresponding ConsumedServiceInstance is requested. This could be at ECU start, if ConsumedServiceInstance.autoRequire is set to TRUE or as soon as the ConsumedServiceInstance is requested by the application, if ConsumedServiceInstance.autoRequire is set to FALSE.",
    "Defines that this ConsumedServiceInstance shall be required (searched for) by the service discovery at ECU start.",
    "Defines that this ProvidedServiceInstance shall be offered by the service discovery at ECU start.",
    "Defines the Address Configuration Capability of the J1939NmNode (corresponding to an SAE J1939 Controller Application, CA).",
    "Defines the CANID ranges that are used for Nm. \r\nThis range definition is redundant to the attribute \"rxIdentifierRange\" of CanFrameTriggering. For backward compatibility reasons this redundancy shall be preserved and both shall be defined. In future this element will be removed from the model.",
    "Defines the CouplingPortFifo which provides the input to this shaper.",
    "Defines the DDS DEADLINE QoS policy.",
    "Defines the DDS DESTINATION_ORDER QoS policy.",
    "Defines the DDS DURABILITY QoS policy.",
    "Defines the DDS DURABILITY_SERVICE QoS policy.",
    "Defines the DDS HISTORY QoS policy.",
    "Defines the DDS LATENCY_BUDGET QoS policy.",
    "Defines the DDS LIFESPAN QoS policy.",
    "Defines the DDS LIVELINESS QoS policy.",
    "Defines the DDS OWNERSHIP QoS policy.",
    "Defines the DDS OWNERSHIP_STRENGTH QoS policy.",
    "Defines the DDS RELIABILITY QoS policy.",
    "Defines the DDS RESOURCE_LIMITS QoS policy.",
    "Defines the DDS TOPIC_DATA QoS policy.",
    "Defines the DDS TRANSPORT_PRIORITY QoS policy.",
    "Defines the IIDC source packet header (SPH) existence.",
    "Defines the IUMPR (In use monitor performance ratio) Group of the SAE standard. Note that possible values are not predefined by an enumeration meta-type in order to make the meta-model independent of the details of the SAE standard.",
    "Defines the IUMPR Group of the SAE standard. Note that possible values are not predefined by an enumeration meta-type in order to make the meta-model independent of the details of the SAE standard. Possible values are currently (AUTOSAR R3.1):\r\nCAT1 CAT2 OXS1 OXS2 EGR SAIR EVAP SECOXS1 SECOXS2 NMHCCAT NOXCAT NOXADSORB PMFILTER EGSENSOR BOOSTPRS NOGROUP NONE.",
    "Defines the Id to be used by the calling application when the respective SupervisedEntity is referred to.",
    "Defines the Id to be used by the calling application when this HealthChannel is referred to.",
    "Defines the MAC address learning mode of the Ethernet switch.",
    "Defines the MAC multicast address the Ethernet time sync messages are communicated on.",
    "Defines the Priority of this Stream Filter Entry.",
    "Defines the Process this Health Channel shall be monitored.",
    "Defines the RAM Block of the NVRAM Block provided by NvBlockSwComponentType.\r\nThis aggregation contains a variation point although it is not variant. Therefore, this variation point shall not exist in models. See constr_2638.",
    "Defines the ROM Block of the NVRAM Block provided by NvBlockSwComponentType.\r\nThis aggregation contains a variation point although it is not variant. Therefore, this variation point shall not exist in models. See constr_2638.",
    "Defines the RVF stream interlaced (i).",
    "Defines the RecoveryNotification for this HealthChannel.",
    "Defines the RecoveryNotification.",
    "Defines the Traffic Class which is assigned.",
    "Defines the VLANs this rate policy shall be limited on. If no VLAN is given this rate policy is not considering VLAN tags.",
    "Defines the acceptable amount of cycles with EXPIRED supervision status of this GlobalSupervision before it is considered STOPPED.",
    "Defines the acceptable amount of cycles with FAILED supervision status of this LocalSupervision before it is considered EXPIRED.",
    "Defines the acceptable amount of cycles with incorrect/failed alive supervisions for this GlobalSupervisionEntity before it is considered expired.",
    "Defines the acceptable amount of cycles with incorrect/failed alive supervisions for this SupervisionEntity before it is considered failed.",
    "Defines the action be performed on the referenced Process.",
    "Defines the action be performed on this application instance.",
    "Defines the action be performed on this platform instance.",
    "Defines the action to be performed on the watchdog.",
    "Defines the action to be performed when this rate policy is violated.",
    "Defines the action to modify the VLAN-ID within a VLAN tag of an Ethernet frame.",
    "Defines the action to modify the destination port(s) determined by the frame forwarding process for an particular Ethernet frame.",
    "Defines the allowed submessage type in the DDSI-RTPS message",
    "Defines the amount of Alive Indications of the SupervisionCheckpoint that are acceptable to be additional to the expectedAliveIndications within the aliveReferenceCycle.",
    "Defines the amount of Alive Indications of the SupervisionCheckpoint that are acceptable to be missing to the expectedAliveIndications within the aliveReferenceCycle.",
    "Defines the amount of expected Alive Indications of the SupervisionCheckpoint within the aliveReferenceCycle.",
    "Defines the amount of expected alive indications of the checkpoint within the supervisionCycle.",
    "Defines the application endpoint where the events of the event group are received in case of multicast reception.",
    "Defines the approval statis of a predefined variant. Two values are predefined: \"APPROVED\" and \"REJECTED\":\r\n\r\n* Approved variants are known to work.\r\n* Rejected variants are known NOT to work.\r\n\r\nFurther values can be approved on a per-company basis; within AUTOSAR only \"APPROVED\" and \"REJECTED\" should be recognized.",
    "Defines the approval status of a predefined variant. Two values are predefined: \"APPROVED\" and \"REJECTED\":\r\n\r\n* Approved variants are known to work.\r\n* Rejected variants are known NOT to work.\r\n\r\nFurther values can be approved on a per-company basis; within AUTOSAR only \"APPROVED\" and \"REJECTED\" should be recognized.",
    "Defines the available bandwidth as weight value of an enhanced transmission selection algorithm (ETS).",
    "Defines the available bandwidth in percent of an enhanced transmission selection algorithm (ETS).",
    "Defines the byte position of the source node identifier within the NmPdu. If this attribute is not configured, the Node Identification is not used.",
    "Defines the byteOrder of the header in ContainerIPdus.",
    "Defines the compliance of the Ethernet time sync messages to specific standards.",
    "Defines the configuration of DHCP servers that are running on the network endpoint.",
    "Defines the corresponding value.",
    "Defines the data protection policy applicable to metadata related to the DDS Topic(s).",
    "Defines the default endianness of the data belonging to a DID or RID which is applicable if the DiagnosticDataElement does not define the endianness via the swDataDefProps.baseType attribute.",
    "Defines the default traffic class for this CouplingPort.",
    "Defines the exact sequence of characters that are acceptable.",
    "Defines the execution semantics for this action list.",
    "Defines the fields of the message which shall be taken into account for CRC calculation and verification.",
    "Defines the frame priority where values from 0 (best effort) to 7 (highest) are allowed.",
    "Defines the fully qualified domain name (FQDN) e.g. some.example.host.",
    "Defines the functionality of Network Management.",
    "Defines the handling of frames at the ingress port.",
    "Defines the header id this IPdu shall have in case this IPdu is put inside a ContainerIPdu with headerType = longHeader.",
    "Defines the header id this IPdu shall have in case this IPdu is put inside a ContainerIPdu with headerType = shortHeader.",
    "Defines the immediate NmPdu cycle time in seconds which is used for nmImmediateNmTransmissions NmPdu transmissions. This attribute is only valid if nmImmediateNmTransmissions is greater one.",
    "Defines the immediate NmPdu cycle time in seconds which is used for nmImmediateNmTransmissions NmPdu transmissions. This parameter is only valid if CanNmImmediateNmTransmissions is greater one.",
    "Defines the increase of credit in bits per second for the AVB shaper.",
    "Defines the increase of credit in bits per second for the CBS shaper.",
    "Defines the initial state of this rule.",
    "Defines the initial status for enable or disable of acceptance of event reports of a diagnostic event.",
    "Defines the initial status for enable or disable of acceptance/storage of event reports of a diagnostic event. The value is the initialization after power up (before this condition is reported the first time). \r\n\r\ntrue: acceptance/storage of a diagnostic event enabled\r\n\r\nfalse: acceptance/storage of a diagnostic event disabled",
    "Defines the initial status for enable or disable of storage of a diagnostic event.",
    "Defines the interval during which the adaptive rate correction cancels out the rate and time deviation. Unit: seconds.",
    "Defines the interval during which the adaptive rate correction cancels out the rate- and time deviation.",
    "Defines the kind of cryptographic transformation to apply in DDS discovery communication.",
    "Defines the kind of cryptographic transformation to apply in DDS liveliness communication.",
    "Defines the kind of cryptographic transformation to apply to whole DDS RTPS.",
    "Defines the length in bytes of the user data contained in the Nm message. User data excludes the PNC bit vector.",
    "Defines the length of the header (in bits) this transformer will add in front of the data.",
    "Defines the length of the user data contained in the NmPdu.\r\n\r\nPlease note that this attribute is deprecated and will be removed in future.",
    "Defines the lifetime of a dynamically fetched IP address.",
    "Defines the links to an extended data class sampler.\r\nThis property was modified due to atpVariation (DirectedAssociationPattern).",
    "Defines the local application endpoint used to submit an event to a subscriber.\r\nFor the submission of events the service provider may use a different TpPort address (ApplicationEndpoint) then for the response of requests.",
    "Defines the longest time span before which the deadline is considered to be met for transition.",
    "Defines the lower boundary of credit for the CBS shaper.",
    "Defines the mapping between the VariableDataPrototypes in the NvBlockComponents ports and the VariableDataPrototypes of the RAM Block.\r\n\r\nThe aggregation of NvBlockDataMapping is subject to variability with the purpose to support the conditional existence of nv data ports.",
    "Defines the mapping between the VariableDataPrototypes in the NvBlockComponents ports and the VariableDataPrototypes of the non-volatile memory.\r\n\r\nThe aggregation of NvBlockDataMapping is subject to variability with the purpose to support the conditional existence of nv data ports.",
    "Defines the mapping of two particular ArgumentDataPrototypes with unequal names or unequal semantic (resolution or range) in context of Operations.",
    "Defines the mapping of two particular VariableDataPrototypes or ParameterDataPrototypes with unequal names and/or unequal semantic (resolution or range) in context of two different SenderReceiverInterfaces, NvDataInterfaces or ParameterInterfaces",
    "Defines the maximum SDU size (size of an Ethernet package) which is acceptable to be processed by the Ethernet switch.",
    "Defines the maximum allowed negative difference between the current Local Time Base value and a newly received Global Time Base value.",
    "Defines the maximum allowed positive difference between the current Local Time Base value and a newly received Global Time Base value.",
    "Defines the maximum buffer size in Byte which shall be filled before a socket with Pdu collection enabled shall be transmitted to the lower layer.",
    "Defines the maximum duration limit for which frames can reside in a switch (in seconds).",
    "Defines the method to modify the egress destination. Either overwrite or extend the egress destination.",
    "Defines the minimum amount of time between two time sync messages are transmitted.",
    "Defines the minimum time between an \"immediate\" message and the next periodic message.",
    "Defines the network infrastructure services provided or consumed.",
    "Defines the number of communication participants in case 10BASE-T1S and the nodePort reference is used.",
    "Defines the number of immediate NmPdus which shall be transmitted. If the value is zero no immediate NmPdus are transmitted. The cycle time of immediate NmPdus is defined by nmImmediateNmCycleTime.",
    "Defines the number of repetitions for the Direct/N-Times transmission mode and the event driven part of Mixed transmission mode.",
    "Defines the number of simultaneous rate measurements to determine the current rate deviation.",
    "Defines the numeric value which is used to identify the reporting of this HealthChannelExternalReportedStatus to the Phm.",
    "Defines the numeric value which is used to identify the reporting of this SupervisionCheckpoint to the Phm.",
    "Defines the numeric value which is used to indicate the indication of this status the Phm.",
    "Defines the numeric value which is used to indicate the reporting of this Checkpoint to the Phm.",
    "Defines the numeric value which is used to indicate the reporting of this Health Channel to the Phm.",
    "Defines the numeric value which is used to interact with this Supervised Entity when calling the Phm.",
    "Defines the numerical identification of a GlobalTime sub domain.",
    "Defines the order of the network endpoint list (e.g. 0, 1, 2, ...).",
    "Defines the padding for alignment purposes that will be added by the SOME/IP transformer after the serialized data of the variable data length data element. The alignment shall be specified in Bits.",
    "Defines the period for the pdelay request messages.",
    "Defines the position of the control bit vector within the Nm Pdu (Byte position). If this attribute is not configured, the Control Bit Vector is not used.",
    "Defines the position of the control bit vector within the NmPdu (Byte position). If this attribute is not configured, the Control Bit Vector is not used.",
    "Defines the possible set of status information available to the health channel.",
    "Defines the priority to traffic class assignment.",
    "Defines the priority which this rate policy shall be limited on. If no priority is given this rate policy is not considering priority.",
    "Defines the processing cycle of the main function of FrNm module.",
    "Defines the queue size of the CryptoServiceQueue.",
    "Defines the rate at which the token bucket is refilled with tokens in bit per second.",
    "Defines the reaction upon a second request (ClientB) that can not be processed (e.g. due to priority assessment).\r\n\r\nTRUE: when the second request (Client B) can not be processed, it shall be answered with NRC21 BusyRepeatRequest.\r\n\r\nFALSE: when the second request (Client B) can not be processed, it shall not be responded.",
    "Defines the required number of updates to the Time Base where the time difference to the previous received value has to remain within the bounds of timeLeapFutureThreshold and timeLeapPastThreshold until that Time Base is considered healed.",
    "Defines the requirements on AUTOSAR Services for a particular item.\r\n\r\nThe aggregation is subject to variability with the purpose to support the conditional existence of ServiceNeeds.\r\n\r\nThe aggregation is splitable in order to support that ServiceNeeds might be provided in later development steps.",
    "Defines the requirements on AUTOSAR Services for a particular item.\r\n\r\nThe aggregation of SwcServiceDependency is subject to variability with the purpose to support the conditional existence of ports as well as the conditional existence of ServiceNeeds.\r\n\r\nThe SwcServiceDependency owned by an SwcInternalBehavior can be located in a different physical file in order to support that SwcServiceDependency might be provided in later development \r\nsteps or even by different expert domain (e.g OBD expert for Obd related  Service Needs) tools. Therefore the aggregation is <<atpSplitable>>.",
    "Defines the role of an associated BswModuleEntry in the context of the ServiceNeeds element.",
    "Defines the role of an associated data object (owned by this module or cluster) in the context of the ServiceNeeds element.",
    "Defines the role of an associated data object of the same component.",
    "Defines the role of an associated port of the same component.",
    "Defines the role this CouplingPort takes in the context of the CouplingElement.",
    "Defines the schedule algorithm to be used.",
    "Defines the scope of the DEM_ClearDTC Api.",
    "Defines the scope of the DEM_ClearDTC Api.\r\n\r\n'''begin restrict to AP'''\r\nOn the adaptive platform, the value of this attribute can be different for each DiagnosticMemoryDestination.\r\n'''begin restrict to AP'''\r\n'''begin restrict to CP'''\r\nOn the classic platform, the value of this attribute has to be identical for each DiagnosticMemoryDestination.\r\n'''begin restrict to CP'''",
    "Defines the section name as explained in the main description. By using this attribute for code generation (instead of the shortName) it is possible to define several different MemorySections having the same name - e.g. symbol = CODE - but using different sectionNamePrefixes.",
    "Defines the servers / clients in a time synchronised network.",
    "Defines the service discovery find behavior.",
    "Defines the set of checkpoints which can be reported on this supervised entity.",
    "Defines the shortest time span after which the deadline is considered to be met for transition.",
    "Defines the size threshold in bytes which, when exceeded, triggers the sending of the IEEE1722Tp ACF message, even when the maxium IEEE1722Tp ACF message size has not been reached yet.",
    "Defines the size threshold which, when exceeded, triggers the sending of the ContainerIPdu although the maximum Pdu size has not been reached yet. Unit: byte.",
    "Defines the sourceChannel from which frames are received.",
    "Defines the status to be compared with for the Health Channel.",
    "Defines the subTLV fields which shall be included in the time sync message.",
    "Defines the targetChannel to which frames are forwarded.",
    "Defines the time a process shall terminate after it has announced its start of  termination by reporting terminatingCheckpoint.",
    "Defines the time base for the supervision cycle.",
    "Defines the time in seconds the service offer is valid.",
    "Defines the time in seconds the subscription of this event is expected by the client.\r\nthis value is sent from the client to the server in the SD-subscribeEvent message.",
    "Defines the time in seconds the subscription of this eventGroup is valid.\r\nThis value is sent from the server to the client in the SD subscribeEventGroupAck message.",
    "Defines the time in seconds which shall pass before a socket with Pdu collection enabled shall be transmitted to the lower layer after the first Pdu has been put into the socket buffer.",
    "Defines the time offset that is added to the current time at the producer in order to get the \"presentation time\" (in seconds) when content shall be presented at the consumers.",
    "Defines the time synchronisation technology used.",
    "Defines the time synchronisation technology used.\r\nPossible values are: NTP_RFC958, PTP_IEEE1588_2002, PTP_IEEE1588_2008, AVB_IEEE802_1AS and others.",
    "Defines the time when content shall be presented (in seconds). The actual absolute time is creation time plus relative presentation time",
    "Defines the time when content shall be presented (in seconds). The actual absolute time is creation time plus relative presentation time.",
    "Defines the timeout (in seconds) after COMM_FULL_COMMUNICATION sub-state COMM_FULL_COM_READY_SLEEP is left.",
    "Defines the timeout in seconds before an unacknowledged TCP segment is sent again.\r\nIf the tcpRetransmissionTimeout is not defined or set to \"INF\", no TCP segments shall be re-transmitted.",
    "Defines the timeout in seconds the PDU collection shall be transmitted at the latest after this PDU has been put into the buffer.",
    "Defines the trigger for the Com_SwitchIpduTxMode Transmission Mode switch. Only if all defined modeDrivenFalseConditions evaluate to true (AND associated) the transmissionModeFalseTiming shall be activated.  modeDrivenTrueCondition and modeDrivenFalseCondition shall never evaluate to true both at the same time.",
    "Defines the trigger for the Com_SwitchIpduTxMode Transmission Mode switch. Only if all defined modeDrivenTrueConditions evaluate to true (AND associated) the transmissionModeTrueTiming shall be activated.  modeDrivenTrueCondition and modeDrivenFalseCondition shall never evaluate to true both at the same time.",
    "Defines the trigger for the Com_TriggerIPDUSend API call. Only if all defined TriggerIPduSendConditions evaluate to true (AND associated) the Com_TriggerIPDUSend API shall be called.",
    "Defines the type of memory sections which can be associated with this addressing method.",
    "Defines the type of the indicator.",
    "Defines the upper boundary of credit for the CBS shaper.",
    "Defines the used Service-Discovery protocol.",
    "Defines the used debounce algorithms relevant in\r\nthe context of the enclosing\r\nDiagnosticCommonProps. Usually, there is a\r\nvariety of debouncing algorithms to take into\r\naccount and therefore the multiplicity of this\r\naggregation is set to 0..*.",
    "Defines the used remoting Technology.",
    "Defines the used serialization technology.",
    "Defines the value of one specific NamedCurve Id.",
    "Defines the value of one specific TLS Signature Scheme.",
    "Defines the value to be used for load balancing priority in the service offer. Lower value means higher priority.",
    "Defines the value to be used for load balancing weight in the service offer. Higher value means higher probability to be chosen.",
    "Defines to which ISignalIPdu - ISignalGroup pair this EndToEndProtection shall apply.\r\n\r\nIn case several ISignalGroups are used to transport the data (e.g. fan-out in the RTE) there may exist several EndToEndProtectionISignalIPdu definitions.",
    "Defines to which VariableDataPrototypes in the roles of one sender and one or more receivers this EndToEndprotection applies.\r\n\r\nIt shall be possible to aggregate several EndToEndProtectionVariablePrototype in case additional hierarchical decompositions are introduced subsequently. In this case one particular PortPrototype is split into multiple PortPrototypes and connectors, all representing the same data entity.\r\n\r\nCaveat: The E2E wrapper approach involves technologies that are not subjected to the AUTOSAR standard and is superseded by the superior E2E transformer approach (which is fully standardized by AUTOSAR). Hence, new projects (without legacy constraints due to carry-over parts) shall use the fully standardized E2E transformer approach.",
    "Defines usage of available data for dynamic block size calculation when protocol retry is enabled. This attribute describes in percent of available buffer that shall be used for retry.",
    "Defines whether PDELAY RESPONSE and PDELAY RESPONSE FOLLOW UP shall be sent on this CouplingPort.",
    "Defines whether a Icmp header checksum verification is performed or not.",
    "Defines whether a Ipv4 header checksum verification is performed or not.",
    "Defines whether a infrastructure service that runs on the network endpoint is a DoIP-Entity.",
    "Defines whether access control is to be enforced upon joining this domain.",
    "Defines whether an AUTOSAR Follow_Up TLV OFS Sub-TLV is used.",
    "Defines whether an AUTOSAR Follow_Up TLV Status Sub-TLV is used.",
    "Defines whether an AUTOSAR Follow_Up TLV Time Sub-TLV is used.",
    "Defines whether an AUTOSAR Follow_Up TLV UserData Sub-TLV is used.",
    "Defines whether an Integrity Check Value (ICV) shall be added to the sent time sync messages.",
    "Defines whether an NVRAM Block shall be treated resistant to configuration changes (true) or not (false). For details how to handle initialization in the latter case, please refer to the NVRAM specification.",
    "Defines whether and which header type is used (header id and length).",
    "Defines whether checksum verification is performed or not.",
    "Defines whether color-aware or color-blind mode shall be used.",
    "Defines whether discovery protection mechanisms should apply to the DDS Topic(s).",
    "Defines whether frames assigned to the traffic class associated with this CouplingPortFifo may be preempted or not.",
    "Defines whether frames handled by this CouplingPort may be preemted.",
    "Defines whether fully dynamic address resolution according to SAE J1939-81 shall be supported on this J1939NmCluster.\r\n\r\n* True: The dynamically allocated addresses on the bus are matched at runtime to the configured addresses.\r\n* False: The addresses on the bus resemble the configured addresses.",
    "Defines whether length verification is performed or not.",
    "Defines whether liveliness protection mechanisms should apply to the DDS Topic(s).",
    "Defines whether or not the associated RAM Block shall be implicitly stored during shutdown by the basic software.",
    "Defines whether or not the associated RAM Block shall be implicitly stored immediately during or after execution of the according SW-C RunnableEntity by the basic software.",
    "Defines whether or not the associated RAM Block shall be implicitly stored in case of ECU failure (e.g. loss of power) by the basic software. If the attribute storeEmergency is set to true the associated RAM Block shall be configured to have immediate priority.",
    "Defines whether or not the associated RAM Block shall be implicitly stored periodically by the basic software.",
    "Defines whether pncWakeupCanId and pncWakeupCanIdMask shall be interpreted as extended or standard CAN ID.",
    "Defines whether putting this AcfPart to the IEEE1722Tp ACF message triggers immediate sending of the IEEE1722Tp ACF message.",
    "Defines whether read access control mechanisms should apply to the DDS Topic(s).",
    "Defines whether standard or extended address format shall be used.",
    "Defines whether the \"fs\" (frame sync) shall be enabled.",
    "Defines whether the \"sp\" (sparse timestamp) shall be enabled.\r\n\r\nfalse: Normal operation, timestamp in every AAF AVTPDU\r\n\r\ntrue: Sparse mode, timestamp in every eighth AAF AVTPDU",
    "Defines whether the ECU shall be woken up by this CommunicationController.\r\n\r\nTRUE: wake up is possible\r\n\r\nFALSE: wake up is not supported\r\n\r\nNote: If wakeUpByControllerSupported is set to TRUE the feature shall be supported by both hardware and basic software.",
    "Defines whether the Path MTU Discovery shall be performed for the related socket.",
    "Defines whether the SOME/IP transformer shall use session handling for Sender/Receiver communication.",
    "Defines whether the ServiceInterface element (event or method) contributes to the triggering of the udp data transmission if data accumulation is enabled.",
    "Defines whether the ServiceInterface element (event or method) contributes to the triggering of the udp data transmission if data collection is enabled.",
    "Defines whether the aging cycle counter is processed every aging cycles or else only tested aging cycle are considered.\r\n\r\nIf the attribute is set to TRUE: only tested aging cycle are considered for aging cycle counter.\r\n\r\nIf the attribute is set to FALSE: aging cycle counter is processed every aging cycle.",
    "Defines whether the aging cycle counter is processed every aging cycles or else only tested aging cycle are considered.\r\n\r\nIf the attribute is set to TRUE: only tested aging cycle are considered for aging cycle counter.\r\n\r\nIf the attribute is set to FALSE: aging cycle counter is processed every aging cycle.\r\n\r\n'''begin restrict to AP'''\r\nOn the adaptive platform, the value of this attribute can be different for each DiagnosticMemoryDestination.\r\n'''begin restrict to AP'''\r\n'''begin restrict to CP'''\r\nOn the classic platform, the value of this attribute has to be identical for each DiagnosticMemoryDestination.\r\n'''begin restrict to CP'''",
    "Defines whether the associated RAM Block shall be implicitly restored during startup by the basic software.",
    "Defines whether the bit rate switch bit shall be set.",
    "Defines whether the derivation of SwitchPortGroups based on VLAN and/or CouplingPort.pncMapping shall be performed for this EcuInstance. If not defined the derivation shall not be done.",
    "Defines whether the length information for handling this SecuredIPdu with SecuredIPdu.useSecuredPduHeader=noHeader is taken from the configuration or from the actually provided length information during runtime.\r\n\r\ntrue: SecuredIPdu length information is taken from the actually provided length information during runtime.\r\n\r\nfalse: SecuredIPdu length information is taken from the configuration.",
    "Defines whether the local Address (that is aggregating the StaticSocketConnection) does a listen or a connect.",
    "Defines whether the nodes attached to this channel use an initial address claim, and whether they react to contending address claims of other nodes.\r\n\r\nTrue: The initial address claim is sent, and the node reacts to address claims of other nodes.\r\n\r\nFalse: The node only sends an address claim upon request, and does not care for contending address claims.",
    "Defines whether the rate correction value of a Time Base can be set by means of the method setRateCorrection().\r\n\r\nfalse: rate correction cannot be set by method setRateCorrection().\r\n\r\ntrue: rate correction can be set by method setRateCorrection().",
    "Defines whether the referenced Pdu contributes to the triggering of the socket transmission if Pdu collection is enabled for this socket.",
    "Defines whether the source element (which is mapped to the referenced element) triggers the sending of the respective payload.",
    "Defines whether the source element triggers the sending of the respective payload.",
    "Defines whether the source notifier element triggers the sending of the respective payload.",
    "Defines whether the transformer chain of client/server communication coordinates an autonomous error reaction together with the RTE or whether any error reaction is the responsibility of the application.",
    "Defines whether this ContainedIPdu shall be collected using a last-is-best or queued semantics.",
    "Defines whether this ContainerIPdu has a fixed set of containedIPdus assigned for reception.",
    "Defines whether this IPdu does trigger the sending of the ContainerIPdu.\r\nThis attribute is ignored on receiver side.",
    "Defines whether this IPdu may be collected inside a ContainerIPdu.",
    "Defines whether this NmCluster contributes to the partial network mechanism.",
    "Defines whether this PhmHealthChannelStatus shall cause the Phm to trigger the Health Channel recovery notification.\r\n\r\n* true: Indicates unhealthy state. Phm to trigger the Health Channel recovery notification when the Health channel status changes to this state.\r\n\r\n* false: Indicates healthy state. Phm not to trigger the Health Channel recovery notification when the Health channel status changes to this state.",
    "Defines whether this Stream Filter Entry includes the wildcard for SwitchStreamIdentification.",
    "Defines whether unauthenticated participants can join this domain.",
    "Defines whether write access control mechanisms should apply to the DDS Topic(s).",
    "Defines which CAN protocol shall be expected for frame reception.",
    "Defines which CAN protocol shall be used for frame transmission.",
    "Defines which CouplingPort is managed by this EthGlobalTimeManagedCouplingPort.",
    "Defines which CouplingPortScheduler is the last in the egress port structure.",
    "Defines which VLAN priority shall be assigned to a time sync message in case the message is sent using a VLAN tag.",
    "Defines which byte order shall be serialized by the SOME/IP transformer",
    "Defines which condition shall trigger this health channel wrt. the referenced mode.",
    "Defines which condition shall trigger this health channel wrt. the referenced supervision.",
    "Defines which kind of time base is requested at this interface.",
    "Defines which serialization technology shall be used.",
    "Defines write protection after first write:\r\n\r\ntrue: This block is prevented from being changed/erased or being replaced with the default ROM data after first initialization by the software-component.\r\n\r\nfalse: No such restriction.",
    "Defines, where a schedule table shall be proceeded in case if it has been interrupted by a run-once table or MRF/SRF.",
    "Definition of CAN XL specific attributes in case the frame is a CAN XL frame.",
    "Definition of ContextIds for the Application.\r\nThis property was modified due to atpVariation (DirectedAssociationPattern).",
    "Definition of IP rules assigned to the IpIamRemoteSubject.",
    "Definition of No Checkpoint Supervision.",
    "Definition of SignalToIPduMappings included in the SignalIPdu.\r\n\r\natpVariation: The content of a PDU can be variable.",
    "Definition of SomeipTpChannels that are collecting configuration properties that are valid for a collection of SomeipTpConnections.",
    "Definition of a Client Identifier that will be used by the RTE in a inter-ECU client-server communication.",
    "Definition of a Network Address.",
    "Definition of a filter rule IP and TP.",
    "Definition of a filter rule for IEEE1722Tp.",
    "Definition of a filter rule on the data link layer.",
    "Definition of a static SocketConnection.",
    "Definition of a stream filter rule for this SwitchStreamIdentification.",
    "Definition of a value to be used for the 4-bit \"evt\" field.",
    "Definition of additional context data that is reported with the security event in order to better support the analysis of a possible security threat.\r\nThis property was modified due to atpVariation (DirectedAssociationPattern).",
    "Definition of details for this specific CouplingElement.\r\nThe upper multiplicity of this role has been increased to * due to resolving an atpVariation stereotype. The previous value was 1.",
    "Definition of entries that define the ingress Vlan translation between IngressVlanID and TranslatedVlanID.",
    "Definition of the AAF AES3 aes3_data_type_h default value.",
    "Definition of the AAF AES3 aes3_data_type_l default value.",
    "Definition of the AAF AES3 stream aes3_data_type reference.",
    "Definition of the AAF PCM stream bit_depth.\r\n\r\ne.g. 16, 24, 32.",
    "Definition of the AAF PCM stream channels_per_frame.\r\n\r\ne.g. 1: mono, 2: stereo, 8: 7.1 multicannel",
    "Definition of the AAF stream format.",
    "Definition of the AAF stream nominal sample / frame rate.\r\n\r\nFor an AAF PCM stream this is the nominal sample rate.\r\n\r\nFor an AAF AES3 stream this is the nominal frame rate.",
    "Definition of the ACF CAN stream message type.",
    "Definition of the CRF stream pull value.",
    "Definition of the CRF stream type.",
    "Definition of the DDS Domain Id.",
    "Definition of the DDS Partition Name. '*' may be used to define the default partition.",
    "Definition of the DDS Topic Name.",
    "Definition of the E2E profile.",
    "Definition of the IIDC channel.",
    "Definition of the IIDC data block size (DBS).",
    "Definition of the IIDC fractionNumber (FN).",
    "Definition of the IIDC stream format (FMT).",
    "Definition of the IIDC sy.",
    "Definition of the IIDC tag.",
    "Definition of the IIDC tcode.",
    "Definition of the RVF stream active_pixels.",
    "Definition of the RVF stream colorspace.",
    "Definition of the RVF stream event (evt) default value.",
    "Definition of the RVF stream frame_rate.",
    "Definition of the RVF stream pixel_depth.",
    "Definition of the RVF stream pixel_format.",
    "Definition of the RVF stream total_lines.",
    "Definition of the formula used to calculate the value of the configuration element.",
    "Definition of the formula used to define existence dependencies.",
    "Definition of the formula used to define validation condition.",
    "Definition of the identifier range for IEEE1722Tp ACF Can messages.",
    "Definition of the networkRepresentation of the DltArgument.",
    "Definition of the networkRepresentation of the context data element.",
    "Definition of the operator to be applied to this LogicalExpression.",
    "Definition of the remote NetworkEndpoint. With \r\nthis reference the connection between the local NetworkEndpoint and the remote NetworkEndpoint is described on which the traffic is monitored.",
    "Definition of the shaper to be used for the processing of this FIFO.",
    "Definition of the time span which is used to calculate the rate deviation.",
    "Definition of the transported busses over this ACF connection.",
    "Definition of the two signal processing modes Immediate and Deferred for both Tx and Rx IPdus.",
    "Definition of whether or not CRC is supported. This is only relevant for selected bus systems.",
    "Definition of whether or not validation of the CRC is supported.",
    "Defintion of attributes for rate and offset correction.",
    "Defintion of remote addresses of peers.",
    "Defintion of the structure of the Sdg",
    "Delay before sending the first NUD probe in (s).",
    "Delay in seconds for a repetition of a sleep request. This is used to retry a synchronized shutdown of the connected Ethernet hardware (PHY) of the link partner.",
    "Delay in seconds for a repetition of a wake-up. This is used to increase the reliability in the network, such that an ECU which initiates the wake-up does repeat the wake-up and increase the probability that affected ECUs receive the wake-up.",
    "Delay in seconds to perform a sleep request if the Ethernet hardware (PHY) detect a pending wake-up. This is used to avoid the race condition, if a sleep was requested while a wake-up of a neighboring PHY was received via a local wake-up connection (e.g. I/O pin).",
    "Denotes the grouping of calibration parameters in the actual RTE code. Depending on the category, this information maybe required to set up the emulation code.",
    "Denotes the implementation policy as a standard function call, inline function or macro. This has to be specified on interface level because it determines the signature of the call.",
    "Denotes the type of the relationship.",
    "Describes a possible error reactions for the transient fault handler.",
    "Describes a read and writeable static memory object representing measurerment variables implemented by this software component. \r\nThe term \"static\" is used in the meaning of \"non-temporary\" and does not necessarily specify a linker encapsulation. This kind of memory is only supported if supportsMultipleInstantiation is FALSE.\r\n\r\nThe shortName of the VariableDataPrototype has to be equal with the ''C' identifier of the described variable.\r\n\r\nThe aggregation of staticMemory is subject to variability with the purpose to support variability in the software component's implementations. \r\n\r\nTypically different algorithms in the implementation are requiring different number of memory objects.",
    "Describes a read only memory object containing characteristic value(s)  implemented by this InternalBehavior. \r\n\r\nThe shortName of ParameterDataPrototype has to be equal to the ''C' identifier of the described constant.\r\n\r\nThe characteristic value(s) might be shared between\r\nSwComponentPrototypes of the same SwComponentType.\r\n\r\nThe aggregation of constantMemory is subject to variability with the purpose to support variability in the software component or module implementations. Typically different algorithms in the implementation are requiring different number of memory objects.",
    "Describes a read only memory object containing characteristic value(s)  needed by this BswInternalBehavior. The role name perInstanceParameter is chosen in analogy to the similar role in the context of SwcInternalBehavior.\r\n\r\nIn contrast to constantMemory, this object is not allocated locally by the module's code, but by the BSW Scheduler and it is accessed from the BSW module via the BSW Scheduler API. The main use case is the support of software emulation of calibration data.\r\n\r\nThe aggregation is subject to variability with the purpose to support implementation variants.",
    "Describes a single imposition time of this imposition time definition group.",
    "Describes a single life cycle state of this life cycle state definition group.",
    "Describes how the value of the data object has to be calculated from the value of another data object (by the MCD system).",
    "Describes the Dlt configuration on this EcuInstance.",
    "Describes the DltArgument length in case of Arrays and Strings in number of BaseTypes.",
    "Describes the DltLogChannels that are configured for the log/trace message output",
    "Describes the ISO 13400-2:2012 \"routing activation request activation type\" which is received via DoIP service 0x0005. 0x00 is DEFAULT, 0x01 is WWH-OBD. If neither of the specified values (0x00 or 0x01) is needed the token shall contain RA_ + hex value representation of the integer value shall be used (i.e: RA_0xE1).",
    "Describes the RptImplPolicy of a RptExecutableEvent for service based bypassing.",
    "Describes the applicability of parameters and variables.",
    "Describes the calibration method used by the RTE. This information is not needed for A2L generation, but to setup software emulation in the ECU.",
    "Describes the coupling type of this CouplingElement.",
    "Describes the dependency to another BSW module.",
    "Describes the implemented accessibility of data and modes by the rapid prototyping tooling.",
    "Describes the implemented code preparation for rapid prototyping at ExecutableEntity invocation.",
    "Describes the implemented code preparation for rapid prototyping at data accesses for a hook based bypassing.",
    "Describes the implemented code preparation for rapid prototyping at data accesses.",
    "Describes the length in byte of the additional information for RA authentication that is needed by the software entity. If the software entity is a software-component the attribute does not need to exist as the information is available via the length of the uint8 Array type. Otherwise (i.e the  software entity is a Complex Driver) this attribute needs to be filled out if additional information is needed.",
    "Describes the length in byte of the additional information for RA authentication that is provided by the software entity. If the software entity is a software-component the attribute does not need to exist as the information is available via the length of the uint8 Array type. Otherwise (i.e the  software entity is a Complex Driver) this attribute needs to be filled in if additional information is provided.",
    "Describes the length in byte of the additional information for RA confirmation that is needed by the software entity. If the software entity is a software-component the attribute does not need to exist as the information is available via the length of the uint8 Array type. Otherwise (i.e the  software entity is a Complex Driver) this attribute needs to be filled out if additional information is needed.",
    "Describes the length in byte of the additional information for RA confirmation that is provided by the software entity. If the software entity is a software-component the attribute does not need to exist as the information is available via the length of the uint8 Array type. Otherwise (i.e the  software entity is a Complex Driver) this attribute needs to be filled out if additional information is provided.",
    "Describes the length of the data type specified in the container in bits.",
    "Describes the limitations applicable on the internal domain (as opposed to the physical domain).",
    "Describes the limitations applicable on the physical domain (as opposed to the internal domain).",
    "Describes the logical address of the DoIP entity,  i.e. the Local Address that will route diagnostic requests to the Dcm of the DoIP entity.",
    "Describes the logical address of the DoIP entity, which is used for VehicleAnnouncement and RoutingActivation responses.",
    "Describes the maximal length of the context data in case of Arrays and Strings.",
    "Describes the maximum length of the BaseType  in bits",
    "Describes the maximum length of the BaseType in bits.",
    "Describes the primary trigger to allocate an event memory entry.",
    "Describes the required accessibility of data and modes by the rapid prototyping tooling.",
    "Describes the required code preparation for rapid prototyping at ExecutableEntity invocation.",
    "Describes the required code preparation for rapid prototyping at data accesses.",
    "Describes the trigger to allocate an event memory entry.",
    "Describes which axis of the referenced calibration parameter provides the values for the group axis.\r\nThe index satisfies the following convention:\r\n\r\n* 0 = value axis. in this case, the interpolation result of the referenced parameter is used as a base point index. \r\n* The index should only be specified if the parameter under swCalprm contains more than one axis. It is standard practice for the axis index of parameters with more than one axis, to be set to 1, if data has not been assigned to swAxisIndex.",
    "Description of components for which rapid prototyping support is implemented.",
    "Description of contained SecurityEventContextDataElements. If the SecurityEventContextDataDefintion has a primitive type then only one SecurityEventContextDataElement shall be used. If the SecurityEventContextDataDefintion is structured into several elements then for each one a SecurityEventContextDataElement shall be aggregated.",
    "Description of parameters that are contained in the target container.",
    "Description of references that are contained in the target container.",
    "Description of the binary representation in case of a bit variable.",
    "Description of the targetContainer in case that the destinationUriNestingPolicy is set to targetContainer. In all other cases the subContainers of the target container are defined here.",
    "Description of the targeted EcucContainerDef.",
    "Description of the test pattern used to acquire the measured values.",
    "Descriptor for the transported content.",
    "Determines the executionContext in which the McDataInstance describing a local (e.g Task-Local) buffer of a global buffer is valid.",
    "Determines the maximum receive buffer length (frame length) in bytes.",
    "Determines the maximum transmit buffer length (frame length) in bytes.",
    "Determines the type of request.",
    "Direct Transmission Mode.",
    "Direction addressed by this SwcToSwcClientServerOperation element.",
    "Disables the E2EStateMachine (only E2E check functionality is performed)",
    "Disables the transmission of NM-Data.",
    "Disables/Enables the E2E check. The E2Eheader is removed from the payload independent from the setting of this attribute.",
    "Discovery protocol.",
    "Discovery technology used.",
    "DltLogChannels that are configured for the log/trace message output",
    "DoIP Connections in the DoIpInterface that define the DoIP Pdus that are sent and received via SoAd over TCP or UDP.",
    "DoIP node consists of one or several DoIPInterfaces over which the ECU is able to communicate via DoIP independently. I.e. DoIP functionalities on each IP interface are isolated from each other.",
    "DoIp configuration on this EcuInstance.",
    "Documentation of the CryptoProvider that describes the implemented cryptographic primitives.",
    "DomainNumber from the Follow_Up Message Header shall be included in CRC calculation.",
    "Driver support for wakeup over Bus.",
    "Due to miss spell was set to obsolete. Please use outMeasurementSet instead.",
    "Due to miss spell, this element was set to obsolete.\r\nuse instead: objectDefinition.",
    "Duration for which the bitstrobing is paused after transmission [gdBit].",
    "Duration of a microtick. This attribute can be derived from samplePerMicrotick and gdSampleClockPeriod. \r\nUnit: seconds",
    "Duration of the cluster wide nominal macrotick, expressed in s.",
    "Dynamic part that shall be used to initialize this multiplexed IPdu.\r\n\r\nConstraint: Only one \"DynamicPartAlternative\" in a \"DynamicPart\" shall\r\nbe the initialDynamicPart.",
    "E2E State machine behavior concerning counting of detected counter errors and missing messages in states NODATA and INIT\r\n* value = 0 (false) or not defined: counting of detected counter errors and missing messages in states NODATA and INIT are counted per state separated (Autosar R23-11 or former behavior)\r\n* value = 1 (true): counting of detected counter errors and missing messages in states NODATA and INIT are counted in total",
    "E2E State machine behavior concerning transition from NODATA/INIT to INVALID \r\n\r\nvalue=0 (false): no direct transition from NODATA to INVALID, no transition from INIT to INVALID due to counter-related faults (Autosar R19-11 or former behavior)\r\n\r\nvalue=1 (true): direct transition from NODATA to INVALID covered, transition from INIT to INVALID due to counter-related faults covered (state machine extended)",
    "ECU Instance field of the NAME of this node.",
    "ESP (Encapsulating Security Payload) algorithm that provides encryption and optional authentication for the connection, e.g. AES-128+SHA2-256.",
    "ESP (Encapsulating Security Payload) algorithm that provides encryption and optional authentication for the connection, e.g. aes128-sha256.",
    "Each ApplicationArrayElement must be mapped on a SystemSignal.",
    "Each ApplicationArrayElement shall be mapped on a SystemSignal.",
    "Each ApplicationRecordElement must be mapped on a SystemSignal.",
    "Each ApplicationRecordElement shall be mapped on a SystemSignal.",
    "Each FMFeatureSelectionSet may include one or more FMFeatureSelectionSets. This establishes a hierarchy among FMFeatureSelectionSets. See constr_5003 and constr_5025 for details.",
    "Each SoftwareCluster can reserve the usage of a given functionGroup such that no other SoftwareCluster is allowed to use it",
    "Each frame in TTCAN is identified by its slot id and communication cycle. A description is provided by the usage of AbsolutelyScheduledTiming.",
    "Each slave node shall publish one response error in one of its transmitted unconditional frames.",
    "Ecu on which the BusMirroring is performed\r\nThis property was modified due to atpVariation (DirectedAssociationPattern).",
    "EcuInstance specific ICMP (Internet Control Message Protocol) attributes",
    "EcuInstance specific IP attributes.",
    "EcuInstance specific TcpIp Stack attributes.",
    "Element of an array, struct, or union in case of a nested declaration (i.e. without using \"typedefs\").\r\n\r\nThe aggregation of ImplementionDataTypeElement is subject to variability with the purpose to support the conditional existence of elements inside a ImplementationDataType representing a structure.",
    "Element of an array, struct, or union in case of a nested declaration (i.e. without using \"typedefs\").\r\n\r\nThe aggregation of ImplementionDataTypeElement is subject to variability with the purpose to support the conditional existence of elements inside a ImplementationDataType representing a structure. \r\nThe upper multiplicity of this role has been increased to * due to resolving an atpVariation stereotype. The previous value was -1.",
    "Element(s) have the life cycle as described in lcState.",
    "Element(s) that should be used instead of the one denoted in  referrable. \r\n\r\nOnly relevant in case of life cycle states lcState unlike \"valid\".\r\nIn case there are multiple references the exact semantics shall be individually described in the remark.",
    "Elements that are part of this package",
    "Enable Optimistic Duplicate Address Detection (DAD) according to RFC4429.",
    "Enable a transport plug-in (e.g., sharedMemory) in the underlying DDS binding implementation.",
    "Enable support for Tx/Rx cancellation.",
    "Enable support for dynamic block size calculation.",
    "Enable support for protocol retry.",
    "Enable/disable the NM Coordination algorithm to being able to initiate the\r\nsynchronization algorithm.",
    "Enable/disable the notification that a RepeatMessageRequest bit has been received.",
    "Enable/disable the notification that a RepeatMessageRequest bit has been received. This attribute is deprecated and shall be not used. It will be removed in the future. The nmRepeatMsgIndEnabled attribute in NmEcu shall be used instead.",
    "Enables (TRUE) or disables (FALSE) TCP Keep Alive Probes according to IETF RFC 1122 chapter 4.2.3.6.",
    "Enables (TRUE) or disables (FALSE) support for reassembling of incoming datagrams that are fragmented according to IETF RFC 815 (IP Datagram Reassembly Algorithms).",
    "Enables (TRUE) or disables (FALSE) support of Nagle's algorithm according to IETF RFC 1122 (chapter 4.2.3.4 When to Send Data). If enabled the Nagle's algorithm is activated per default for all TCP sockets, but can be deactivated per Socket (with the attribute TcpTp.nagleAlgorithm).",
    "Enables (TRUE) or disables (FALSE) support of TCP Fast Recovery according to IETF RFC 5681.",
    "Enables (TRUE) or disables (FALSE) support of TCP Fast Retransmission according to IETF RFC 5681.",
    "Enables (TRUE) or disables (FALSE) support of TCP congestion avoidance algorithm according to IETF RFC 5681.",
    "Enables (TRUE) or disables (FALSE) support of TCP slow start algorithm according to IETF RFC 5681.",
    "Enables (TRUE) or disables (FALSE) support of a NDP Packet Queue according to IETF RFC 4861, section 7.2.2.",
    "Enables Blocking all frames from the MAC address.",
    "Enables Drop Frame action.",
    "Enables bus synchronization support.",
    "Enables busload reduction support",
    "Enables channel multiplicity support.",
    "Enables control bit vector support.",
    "Enables for the Com module of this EcuInstance the minimum delay time monitoring for cyclic and repeated transmissions (TransmissionModeTiming has cyclicTiming assigned or eventControlledTiming with numberOfRepetitions > 0).",
    "Enables generation of service points by the RTE generator.",
    "Enables support for the Request2 PGN (RQST2).",
    "Enables support of the Passive Mode. The passive mode is configurable per channel.",
    "Enables the CAN Network Management state change notification.",
    "Enables the Communication Control support.",
    "Enables the Request Repeat Message Request support. Only valid if nmNodeIdEnabled is set to true.",
    "Enables the Request Repeat Message Request support. Only valid if nmNodeIdEnabled is set to true.\r\n\r\nPlease note that this attribute is deprecated and will be removed in future. It is replaced by the channel specific attribute located in NmCluster.",
    "Enables the asynchronous transmission of a CanNm PDU upon bus-communication request in Prepare-Bus-Sleep mode.",
    "Enables the source node identifier.",
    "Enables the source node identifier.\r\n\r\nPlease note that this attribute is deprecated and will be removed in future. It is replaced by the channel specific attribute located in NmCluster.",
    "Enables/disables the repeat message bit support",
    "End address for range of target-addresses (including this address).",
    "EndToEndTransformationDescription holds these attributes which are profile specific and have the same value for all E2E transformers.",
    "Enumeration to specify the name pattern of the Memory Allocation Keyword.",
    "Estimation for the resource consumption of the basic software.",
    "Estimation for the resource consumption of the run time environment.",
    "Event specific description of Indicators.",
    "EventGroup ID. Shall be unique within one system to allow service discovery.",
    "Exact version of compiler executable.",
    "Exact version of linker executable.",
    "Exactly one reference to a parameter container is allowed as destination.",
    "Excess Information Rate (EIR) (accepted rate in yellow token bucket) in bits per second.",
    "Excess burst size (EBS) (accepted burst size in yellow token bucket).",
    "ExecutableEntity event instance activation the owning RptExecutableEntity.",
    "ExecutableEntity instance which can be bypassed.",
    "Expanded range of measured clock deviation allowed for startup frames during integration. Unit:microtick",
    "Expected cycle time of alive trigger of this SE (in seconds)",
    "Expected cycle time of alive trigger of this SupervisedEntity (in seconds).",
    "Expiry date, i.e. end point of period the element does not have the denoted life cycle state lcState any more. If no periodEnd is given then the default period begin of LifeCycleInfoSet is assumed.",
    "Exponent to calculate the minimum number of \"Separation Cycles\" the sender has to wait for the next transmission of an FrTp N-Pdu.",
    "FIFO Frame Id range acceptance criteria.",
    "FIFO cycle counter acceptance criteria.",
    "FIFO message identifier acceptance criteria (Mask filter).",
    "FIFO message identifier acceptance criteria (Match filter).",
    "FIFO minimum length in Byte. An actual configuration/hardware may use a bigger value.",
    "Fault reaction code which can be returned by transient fault handler.",
    "Fifo channel admittance criteria.",
    "Filler character for text parameter to pad up to the maximum length swMaxTextSize.\r\n\r\nThe value will be interpreted according to the encoding specified in the associated base type of the data object, e.g. 0x30 (hex) represents the ASCII character zero as filler character and 0 (dec) represents an end of string as filler character.\r\n\r\nThe usage of the fill character depends on the arraySizeSemantics.",
    "Filter for DDSI-RTPS messages in which the appId\r\nin the DDSI-RTPS header and the INFO_DST (0x0E) submessage matches.",
    "Filter for DDSI-RTPS messages in which the hostId\r\nin the DDSI-RTPS header and the INFO_DST (0x0E) submessage matches.",
    "Filter for DDSI-RTPS messages in which the instanceId\r\nin the DDSI-RTPS header and the INFO_DST (0x0E) submessage matches.",
    "Filter for DDSI-RTPS messages in which the majorProtocolVersion\r\nin the DDSI-RTPS header matches.",
    "Filter for DDSI-RTPS messages in which the minorProtocolVersion\r\nin the DDSI-RTPS header matches.",
    "Filter for DDSI-RTPS messages in which the productId\r\nin the DDSI-RTPS header matches.",
    "Filter for DDSI-RTPS messages in which the readerEntityID\r\nin a DDSI-RTPS submessage matches",
    "Filter for DDSI-RTPS messages in which the vendorId\r\nin the DDSI-RTPS header matches.",
    "Filter for DDSI-RTPS messages in which the writerEntityID\r\nin a DDSI-RTPS submessage matches",
    "Filter for SOME/IP SD messages in which the MajorVersion in the SOME/IP header is greater or equal than minMajorVersion.",
    "Filter for SOME/IP SD messages in which the MajorVersion in the SOME/IP header is smaller or equal than maxMajorVersion.",
    "Filter for SOME/IP SD messages in which the MinorVersion in the SOME/IP header is greater or equal than minMinorVersion.",
    "Filter for SOME/IP SD messages in which the MinorVersion in the SOME/IP header is smaller or equal than maxMinorVersion.",
    "Filter for SOME/IP SD messages in which the entryType in the SOME/IP header matches.",
    "Filter for SOME/IP SD messages in which the eventGroupId in the SOME/IP header matches.",
    "Filter for SOME/IP SD messages in which the serviceInstanceId in the SOME/IP header matches.",
    "Filter for SOME/IP SD messages in which the serviceInterfaceId in the SOME/IP header matches.",
    "Filter for SOME/IP messages in which the clientId in the SOME/IP header matches.",
    "Filter for SOME/IP messages in which the majorVersion  in the SOME/IP header matches.",
    "Filter for SOME/IP messages in which the messageType in the SOME/IP header matches.",
    "Filter for SOME/IP messages in which the methodId in the SOME/IP header matches.",
    "Filter for SOME/IP messages in which the protocolVersion  in the SOME/IP header matches.",
    "Filter for SOME/IP messages in which the returnCode  in the SOME/IP header matches.",
    "Filter for SOME/IP messages in which the serviceInterfaceId in the SOME/IP header matches.",
    "Filter of packets with a Vlan priority.",
    "Filter of packets with a VlanId.",
    "Filter of packets with a specific Vlan priority.",
    "Filter of packets with a specific VlanId.",
    "Filter to match DoIP messages  in which the inverseprotocolVersion in the DoIP header matches.",
    "Filter to match DoIP messages  in which the payloadLength in the DoIP header matches.",
    "Filter to match DoIP messages  in which the payloadType in the DoIP header matches.",
    "Filter to match DoIP messages  in which the protocolVersion in the DoIP header matches.",
    "Filter to match DoIP messages in which the destinationAddress is greater or equal than destinationMinAddress.",
    "Filter to match DoIP messages in which the destinationAddress is smaller or equal than destinationMaxAddress.",
    "Filter to match DoIP messages in which the sourceAddress is greater or equal than sourceMinAddress..",
    "Filter to match DoIP messages in which the sourceAddress is smaller or equal than sourceMaxAddress.",
    "Filter to match DoIP messages that contain the udsService.",
    "Filter to match IEEE1722Tp packets with the stream Id number. Defined as 64bit stream id.",
    "Filter to match packets based on the EtherType field in the Ethernet frame.",
    "Filter to match packets based on the EtherType field in the Ethernet frame.\r\nThe EtherType is used to indicate which protocol is encapsulated in the payload of the frame.",
    "Filter to match packets that have the doNotFragment bit in the Header set.",
    "Filter to match packets that have the moreFragments flag in the Header set.",
    "Filter to match packets with a DSCP value.",
    "Filter to match packets with a ECN code point.",
    "Filter to match packets with a IP protocol number .",
    "Filter to match packets with a defined flow label.",
    "Filter to match packets with a defined traffic class or priority.",
    "Filter to match packets with a defined type of an extension header.",
    "Filter to match packets with a maximum ttl value (TimeToLive defines the lifetime of data on the network).",
    "Filter to match packets with a minimum hop limit.",
    "Filter to match packets with a minimum ipv4 header length.",
    "Filter to match packets with a minimum ttl value (TimeToLive defines the lifetime of data on the network).",
    "Filter to match packets with the IPv4 address range.",
    "Filter to match packets with the IPv4 address.",
    "Filter to match packets with the IPv6 address range.",
    "Filter to match packets with the IPv6 address.",
    "Filter to match packets with the Icmp code.",
    "Filter to match packets with the Icmp type.",
    "Filter to match packets with the MAC address range.",
    "Filter to match packets with the MAC address.",
    "Filter to match packets with the destination IPv4 address range.",
    "Filter to match packets with the destination IPv4 address range. \r\nThe destinationIpAddress with the destinationNetworkMask defines the IP address range.",
    "Filter to match packets with the destination IPv4 address.",
    "Filter to match packets with the destination IPv6 address range.",
    "Filter to match packets with the destination IPv6 address range. \r\nThe destinationIpAddress with the destinationNetworkMask defines the MAC address range.",
    "Filter to match packets with the destination IPv6 address.",
    "Filter to match packets with the destination MAC address range. The destinationMacAddress with the destinationMacAddressMask defines the MAC address range.",
    "Filter to match packets with the destination MAC address.",
    "Filter to match packets with the destination MAC address/mask.",
    "Filter to match packets with the maximum UDP/TCP port number.",
    "Filter to match packets with the maximum destination UDP/TCP port  number.",
    "Filter to match packets with the maximum source UDP/TCP port  number.",
    "Filter to match packets with the minimum UDP/TCP port number.",
    "Filter to match packets with the minimum destination UDP/TCP port  number.",
    "Filter to match packets with the minimum source UDP/TCP port  number.",
    "Filter to match packets with the set of destination UDP/TCP port ranges.",
    "Filter to match packets with the set of source UDP/TCP port ranges.",
    "Filter to match packets with the source IPv4 address range.",
    "Filter to match packets with the source IPv4 address range. \r\nThe sourceIpAddress with the sourceNetworkMask defines the IP address range.",
    "Filter to match packets with the source IPv4 address.",
    "Filter to match packets with the source IPv6 address range.",
    "Filter to match packets with the source IPv6 address range. \r\nThe sourceIpAddress with the sourceNetworkMask defines the IP address range.",
    "Filter to match packets with the source IPv6 address.",
    "Filter to match packets with the source MAC address range. \r\nThe sourceMacAddress with the sourceMacAddressMask defines the MAC address range.",
    "Filter to match packets with the source MAC address.",
    "Filter to match packets with the source MAC address/mask.",
    "Fine granular modeling of TransfromationProps on the level of DataPrototypes.",
    "Firewall rules defined in the context of a CouplingElement.",
    "Firewall rules defined in the context of an EcuInstance.",
    "Firewall rules that are defined in a firewall state",
    "Firewall rules that are defined in a firewall state.",
    "First to be mapped DataPrototype in context of a  SenderReceiverInterface, NvDataInterface, ParameterInterface or Operation.",
    "First to-be-mapped ClientServerOperation of a ClientServerInterface.",
    "Fixed amount added or subtracted to the calculated offset correction term to facilitate external offset correction, expressed in node-local microticks.",
    "Fixed amount added or subtracted to the calculated rate correction term to facilitate external rate correction, expressed in node-local microticks.",
    "Flag indicating when the update of the Network Management Vector in the CHI shall take place. If set to false, the update shall take place after the NIT. If set to true, the update shall take place after the end of the static segment.",
    "Flag indicating whether a Time Gateway Sink node will switch to local clock operation when synchronization with the Time Gateway Source node is lost (pFallBackInternal = true) or will instead go to POC:ready (pFallBackInternal = false).",
    "Flag indicating whether node operates as a startup node in a TT-E Time Triggered External Sync or TT-L Time Triggered Local Master Sync cluster.",
    "Flag indicating whether or not the node shall enter key slot only mode following startup.",
    "Flag indicating whether the Key Slot is used to transmit a startup frame.",
    "Flag indicating whether the Key Slot is used to transmit a sync frame.",
    "Flag indicating whether the node is externally synchronized (operating as Time Gateway Sink in an TT-E Time Triggered External Sync cluster) or locally synchronized.",
    "Flag whether this data element was not measured directly but instead was calculated from possibly several other measured or calculated values.",
    "For Level 2 or Level3 this property determines how the RTE implements the additional \"RP enabler\" flag.",
    "For a dependency of category MULTIPLEFEATURE, this defines the maximum number of features allowed.",
    "For a dependency of category MULTIPLEFEATURE, this defines the minimum number of features allowed.",
    "For modules where several instances of the VSMD can be defined the apiServicePrefix defines the API namespace of the derived instances, e.g. Cdd, Xfrm (ComXf, SomeIpXf, E2EXf).",
    "For multidimensional compound primitives (curve, map ...) it is necessary to know the dimensions.They are specified using swArraySize.",
    "For multidimensional compound primitivies (curve, map ...) it is necessary to know the dimensions.They are specified using swArraySize.\r\n\r\n* RES_AXIS",
    "For the AP, this reference defines the machine states of the block list. That means, if a security event (mapped to the filter chain to which the SecurityEventStateFilter belongs to) is reported when the machine is in one of the block listed states, the IdsM shall discard the reported security event.",
    "For the CP, this reference defines the states of the block list.\r\nThat means, if a security event (mapped to the filter chain to which the SecurityEventStateFilter belongs to) is reported when the currently active block state in the IdsM is one of the referenced block listed states, the IdsM shall discard the reported security event.",
    "FrFifoDepth configures the maximum number of rx-frames which can be contained in the FIFO.",
    "FrNm schedule variant according to FrNm SWS.",
    "Frame Gateway: The entire source frame is mapped as it is onto the target frame (what in general is only possible inside of a common platform). In this case source and target frame should be the identical object.\r\n\r\natpVariation: If frames are variable in clusters, the gateway frame mapping needs to be variable, too.",
    "Frame can be triggered by the J1939 request message.",
    "Frame_PID value.",
    "Freshness properties used to configure SecuredIPdus.",
    "Function Instance field of the NAME of this node.",
    "Function field of the NAME of this node.",
    "Global IPsec configuration settings that are valid for all IPSecRules that are defined on the NetworkEndpoint.",
    "Globally configured payload length of a static frame. Unit: 16-bit WORDS.",
    "Group of Log and Trace Messages assigned to the DltContext\r\nThis property was modified due to atpVariation (DirectedAssociationPattern).",
    "Group of [ARMetaClass{PortPrototype}]s on which the timing events shall apply",
    "Group of connections that can be used in this channel.",
    "HTTP Protocol version (e.g. 1.1)",
    "HTTP request method to be used.",
    "Hardware Port of the CouplingElement that is used to connect this CouplingPort to EcuInstances or other CouplingElements.",
    "Header type specifying the IPsec security mechanism.",
    "Highest RPT event id usable for RTE generated service points.\r\nThis attribute is relevant, if dedicated id range shall be applied to the ExecutableEntitys of a software component or specific ExecutableEntitys.",
    "Highest service point id useable for RTE generated service points.",
    "Holds the content of the formated text.",
    "Human language description of the condition.",
    "ICMPv4 configuration properties",
    "ICMPv6 configuration properties",
    "ID of detected failure used in reporting API as error or fault id.",
    "ID of the second Key slot, in which a second startup frame shall be sent in TT-L Time Triggered Local Master Sync or TT-E Time Triggered External Sync mode. If this parameter is set to zero the node does not have a second key slot.",
    "ID of the slot used to transmit the startup frame, sync frame, or designated single slot frame.\r\nIf the attributes keySlotUsedForStartUp, keySlotUsedForSync, or keySlotOnlyEnabled are set to true the key slot value is mandatory.",
    "IEEE 1722 stream identifier",
    "IEEE 1722 stream identifier.",
    "IKE encryption/authentication algorithms to be used for the connection.",
    "IP address of the default gateway.",
    "IP address of the default gateway. Notation 255.255.255.255",
    "IP address of the default router.",
    "IP addresses of pre configured DNS servers.",
    "IP addresses of preconfigured DNS servers.",
    "IP addresses of preconfigured DNS servers. Notation 255.255.255.255",
    "IP addresses of preconfigured DNS servers. Notation: FFFF:...:FFFF.",
    "IPSec rules and filters that are defined in the IPSecConfig for a specific NetworkEndpoint.",
    "IPdu Gateway: Arranges those IPdus that are transferred by the gateway from one channel to the other in pairs and defines the mapping between them.\r\n\r\natpVariation: If PDUs are variable in clusters, the gateway PDU mapping needs to be variable, too.",
    "IPdu Reference",
    "IPduGroup participating in a Mode Management PortGroup.",
    "IPduGroup participating in a Partial Network Cluster. This reference is optional in case an ecu extract has only indirect pnc access, i.e. ecu is not directly connected to a network which supports partial network.",
    "IPduM can be configured to send a transmission request for the new multiplexed IPdu to the PDU-Router because of the trigger conditions/ modes that are described in the TriggerMode enumeration.\r\n\r\nIn a complete System Description this attribute is mandatory. If a MultiplexedPdu is received by a Pdu Gateway and is not delivered to the IPduM but routed directly to a bus interface then the content of the MulitplexedPdu doesn't need to be described in the System Extract/Ecu Extract. To support this use case the multiplicity is set to 0..1.",
    "IPduM fills not updated areas of the ContainerPdu with this byte-pattern.",
    "IPv4 Address. Notation: 255.255.255.255.\r\nThe IP Address shall be declared in case the ipv4AddressSource is FIXED and thus no auto-configuration mechanism is used.",
    "IPv6 Address. Notation: FFFF:...:FFFF.\r\nThe IP Address shall be declared in case the ipv6AddressSource is FIXED and thus no auto-configuration mechanism is used.",
    "IPv6 Extension Header type allowed by this filter.",
    "IPv6 prefix length defines the part of the IPv6 address that is the network prefix.",
    "Id of the transported bus over the ACF connection.",
    "Identifer of the Partial Network Cluster. This number represents the absolute bit position of this Partial Network Cluster in the NM Pdu.",
    "Identification number that is used by DDS to identify DomainParticipants associated with an instance of the service.",
    "Identification number that is used by SOME/IP service discovery to identify the instance of the service.\r\n\r\nThe value 65535 for service instance id is reserved and should not be used.",
    "Identification of the CipherSuite according to the IANA assignments list.",
    "Identification of the NMCoordinator.",
    "Identifier mask which denotes static bits in the CAN identifier. The other bits can be set dynamically.",
    "Identifier mask which denotes the relevant bits in the CAN Identifier. Together with the identifier, this parameter defines a CAN identifier range.",
    "Identifier of the TimeSyncServer.",
    "Identifies a group of QoS Policies that apply to the DDS entities associated with an Event.",
    "Identifies a group of QoS Policies that apply to the DDS entities associated with the event, method, field, or the service instance.",
    "Identifies a group of QoS Policies that apply to the DDS entities created by the Client.",
    "Identifies a group of QoS Policies that apply to the DDS entities created by the Service Instance.",
    "Identifies the actual method. The possible names shall correspond to the symbols of the ECU configuration parameter for the calibration method of the RTE, and can include vendor specific methods.",
    "Identifies the role in terms of DoIP this network-node has.",
    "Identify a specific RTE vendor. This information is potentially important at the time of integrating (in particular: linking) the application code with the RTE. The semantics is that (if the association exists) the corresponding code has been created to fit to the vendor-mode RTE provided by this specific vendor. Attempting to integrate the code with another RTE generated in vendor mode is in general not possible.",
    "Identity Number field of the NAME of this node.",
    "If a rule is chosen which does not fill until the end, this determines until which size the rule shall fill the values.",
    "If cyclic propagation delay measurement is enabled, this parameter represents the default value of the propagation delay until the first actually measured propagation delay is available.\r\nIf cyclic propagation delay measurement is disabled, this parameter defines a fixed value for the propagation delay.",
    "If enabled an ICMPv6 parameter problem message will be sent if a received packet has been dropped due to unknown options or headers that are found in the packet.",
    "If enabled the IPv4/IPv6 processes incoming ICMP \"Packet Too Big\" messages and stores a MTU value for each destination address.",
    "If enabled the IPv6 processes incoming ICMPv6 \"Packet Too Big\" messages and stores a MTU value for each destination address.",
    "If enabled the NDP shall only process Neighbor Advertisements which are received in reaction to a previously transmitted Neighbor Solicitation as well as skipping updates to the Neighbor Cache based on received Neighbor Solicitations. If disabled all Neighbor Advertisements and Solicitations shall be processed as specified in RFC4861.",
    "If enabled the default Reachable Time value may be reconfigured based on received Router Advertisements.",
    "If enabled the default Retransmit Timer value may be reconfigured based on received Router Advertisements.",
    "If enabled the default hop limit may be reconfigured based on received Router Advertisements.",
    "If enabled the first router solicitation will be delayed randomly from [0...MAX_RTR_SOLICITATION_DELAY]. Otherwise the first router solicitation will be sent after exactly MAX_RTR_SOLICITATION_DELAY milliseconds.",
    "If enabled the value of ReachableTime will be multiplied with a random value between MIN_RANDOM_FACTOR and MAX_RANDOM_FACTOR in order to prevent multiple nodes from transmitting at exactly the same time.",
    "If enabled transmission of the first DAD Neighbor Solicitation will be delayed by a random value from [0...MAX_DAD_DELAY].",
    "If enabled, segmentation will be used for DLT messages that are larger than EthernetCommunicationConnector.maximumTransmissionUnit referenced via DltLogSink.endpointConfiguration.",
    "If enabled, segmentation will be used if a DLT message is larger than Pdu.length referenced via DltLogChannel.txPduTriggering.",
    "If enabled, then a local wake-up is forwarded to the physical dataline (e.g. 100BASE-T1). If disabled, then a local wake-up is not forwarded to the physical dataline.",
    "If enabled, then a local wake-up received via a local connection (e.g. I/O pin) shall be detected by the Ethernet hardware (PHY). If disabled, Ethernet hardware is not reacting on a local wake-up.",
    "If enabled, then a remote wake-up received on the physical dataline (e.g. 100BASE-T1) is forwarded as local wake-up (e.g. via an I/O pin). If disabled, then a remote wake-up is not forwarded as local wake-up.",
    "If enabled, then a remote wake-up received via the physical dataline (e.g. 100BASE-T1) shall be detected by the Ethernet hardware (PHY). If disabled, Ethernet hardware is not reaction on a remote wake-up.",
    "If given, the condition shall evaluate to true, in order for the FMFeatureRelation to be active.",
    "If identicalMapping is set == true the values of the two referenced DataPrototypes do not need any conversion of the values.",
    "If it evaluates to true the Ecu Parameter definition shall be processed as specified. Otherwise the parameter definition shall be ignored.",
    "If it evaluates to true the literal definition shall be processed as specified. Otherwise the literal definition shall be ignored.",
    "If multiple Pdus are transmitted over the same connection this headerId can be used to distinguish between the different Pdus.",
    "If multiple Pdus are transmitted over the same connection this headerId can be used to distinguish between the different Pdus.\r\n\r\nFor the constraints on constructing the headerId for SOME/IP also see PRS_SOMEIP_00245.",
    "If no I-Pdu has been received a default value will be distributed.",
    "If set to FALSE the DCM will not respond to diagnostic request that contains a service ID which is in the range from 0x40 to 0x7F or in the  range from 0xC0 to 0xFF (Response IDs).",
    "If set to TRUE, the Dcm module shall check the session, security and mode dependencies per source DIDs with a ReadDataByIdentifier (0x22) with DID in the range 0xF200 to 0xF3FF.\r\n\r\nIf set to FALSE. the Dcm module shall not check the session, security and mode dependencies per source DIDs with a ReadDataByIdentifier (0x22) with DID in the range 0xF200 to 0xF3FF.",
    "If set to TRUE, the GlobalTimeMaster is supposed to act as the root of global time information.",
    "If set to True, the enclosing SoftarePackageStep represents the actual activation of all affected SoftwarePackages.",
    "If set to true the CRC of the RAM Block shall be compared during a write job with the CRC which was calculated during the last successful read or write job in order to skip unnecessary NVRAM writings.",
    "If set to true the RAM Block shall be auto validated during shutdown phase.",
    "If set to true the Server \"learns\" the client IP address on connection request. This means that the statically configured IP Address of the related client shall be ignored. If set to false the Server only accepts statically configured IP address, e.g. 192.168.1.2. This means that the statically configured IP Address of the Client shall be used.",
    "If set to true the Server \"learns\" the client Port on connection request. This means that the statically configured Port of the related client shall be ignored. If set to false the Server only accepts statically configured Port. This means that the statically configured Port of the Client shall be used.",
    "If set to true the driving cycle shall automatically end at either Dem_Shutdown() or Dem_Init().\r\n\r\nThis attribute is only relevant for the AUTOSAR adaptive platform. It no longer has a meaning on the AUTOSAR classic platform.",
    "If set to true this attribute enables the support of CarWakeUp bit evaluation in received NmPdus.",
    "If set to true this attribute specifies an \"indirect API\" to be generated for the associated port which means that the software-component is able to access the actions on a port via a pointer to an object representing a port. This allows e.g. iterating over ports in a loop. This option has no effect for PPortPrototypes of client/server interfaces.",
    "If set to true, the BSW Module is able to use the API reference for deriving a pointer to an object",
    "If set to true, the software-component is able to use the API reference for deriving a pointer to an object.",
    "If set to true, this attribute indicates that the enclosing RPortPrototype may be left unconnected and that this aspect has explicitly been considered in the software-component's design.",
    "If set, the transformer uses the input buffer as output buffer.",
    "If the \"bit data object\" is hosted within another data object (e.g. if the memory can be accessed via byte as well as bit address), this attribute specifies the position of the data object. The count starts at zero (0).",
    "If the Ethernet frames handled by this EthernetCommunicationConnector are tunneled through CAN XL, then this reference shall refer the CanXlProps which contains the specific configuration parameters of the CAN XL controller of the physical CAN XL connection to be used for tunneling.",
    "If the Ethernet frames handled by this EthernetCommunicationController are to be tunneled through CAN XL, then this reference shall refer to the AbstractCanCommunicationController that aggregates the CanControllerXlConfiguration of the physical CAN XL channel to be used for tunneling.",
    "If the Event uses a prestored freeze-frame (using the operations PrestoreFreezeFrame and ClearPrestoredFreezeFrame of the service interface DiagnosticMonitor) this attribute indicates if the Event requires the data to be stored in non-volatile memory. TRUE = Dem shall store the prestored data in non-volatile memory, FALSE = Data can be lost at shutdown (not stored in Nvm)",
    "If the Event uses a prestored freeze-frame (using the operations PrestoreFreezeFrame and ClearPrestoredFreezeFrame of the service interface DiagnosticMonitor) this attribute indicates if the Event requires the data to be stored in non-volatile memory. TRUE = Dem shall store the prestored data in non-volatile memory, FALSE = Data can be lost at shutdown (not stored in Nvm).",
    "If the ExecutableEntity provides at least one activationReason element the RTE resp. BSW Scheduler shall provide means to read the activation vector of this executable entity execution.\r\n\r\nIf no activationReason element is provided the feature of being able to determine the activating RTEEvent is disabled for this ExecutableEntity.",
    "If the activationReasonRepresentation is referenced from the enclosing AbstractEvent this shall be taken as an indication that the latter contributes to the activating vector of this ExecutableEntity that owns the referenced ExecutableEntityActivationReason.",
    "If the attribute is set to true then reporting PASSED will reset the indication of a failed test in the current operation cycle. If the attribute is set to false then reporting PASSED will be ignored and not lead to a reset of the indication of a failed test.",
    "If the dedicated mapping is described, the SwComponentPrototypes can only be mapped to these referenced ECUInstances. \r\n\r\nIf the exclusive mapping is described, the SwComponentPrototypes cannot be mapped to these referenced ECUInstances.",
    "If the mixed addressing format is used, this parameter contains the transport protocol address extension value.",
    "If the transformer changes the size of the data, the CompuScale can be used to specify a rule to derive the size of the output data based on the size of the input data.\r\nThis aggregation contains a variation point although it is not variant. Therefore, this variation point shall not exist in models. See constr_2638.",
    "If the value of this attribute is set to \"true\" the enclosing RunnableEntity can be invoked concurrently (even for one instance of the corresponding AtomicSwComponentType). This implies that it is the responsibility of the implementation of the RunnableEntity to take care of this form of concurrency.",
    "If this aggregation exists an acknowledgement for the successful processing of the mode switch request is required.",
    "If this attribute indicates a relevance for diagnostics then the integrator has a much easier time identifying the candidates for the configuration of the diagnostic stack. \r\n\r\nExample: identification of mode conditions (e.g. communication between application and BswM) relevant for the Dcm.",
    "If this attribute is set to TRUE the StorageStateBit will be evaluated if this EventWindowTime is requested.",
    "If this attribute is set to true the CareWakeUp filtering is supported.",
    "If this attribute is set to true the CareWakeUp filtering is supported. In this case only the CarWakeUp bit within the NmPdu with source node identifier nmCarWakeUpFilterNodeId is considered as CarWakeUp request.",
    "If this attribute is set to true the Dem shall automatically end the driving cycle at either Dem_Shutdown() or Dem_Init().",
    "If this attribute is set to true the NvM shall process this block in the NvM_FirstInitAll() function.",
    "If this attribute is set to true the SecuredIPdu contains the Authentication Information for an AuthenticIPdu that is transmitted in a separate message. The AuthenticIPdu contains the original payload, i.e. the secured data.\r\n\r\nIf this attribute is set to false this SecuredIPdu contains the payload of an Authentic IPdu supplemented by additional Authentication Information.",
    "If this attribute is set to true the implementation of the reference is done using a Symbolic Name defined by the referenced container according to TPS_ECUC_02108.",
    "If this attribute is set to true the operation cycles is automatically (re-)started during Dem_PreInit().",
    "If this attribute is set to true then the build number shall be taken into account for the comparison. Build numbers don't have to be consecutive but could be created by some kind of hashing algorithm. In such a case it might make sense to include the build number in a test for equality but it is probably not reasonable to apply e.g. a less-than comparison.",
    "If this attribute is set to true, then the Rte_IStatus API shall exist. If the attribute does not exist or is set to false, then the Rte_IStatus API may still exist in response to the existence of further conditions.",
    "If this dependency is specified, the execution\r\ntime of the library code is included in the\r\nexecution time data for the runnable.",
    "If this parameter is available and set to true then a channel wakeup source shall be created for the PhysicalChannel referencing this CommunicationConnector.",
    "If this parameter is available and set to true then all available PNCs will be woken up as soon as a channel wakeup occurs.\r\nThis is ensured by adding all PNCs to all channel wakeup sources during upstream mapping.",
    "If this parameter is available and set to true then this PNC will be woken up as soon as a channel wakeup occurs on a channel where this PNC is assigned to.\r\nThis is ensured by adding this PNC to the corresponding channel wakeup sources during upstream mapping.",
    "If this parameter is available and set to true, then all available channels will be woken up as soon as at least one channel wakeup occurs. If PNCs are configured, then all PNCs will be requested upon a channel wakeup.",
    "If this parameter is true, then this network is a synchronizing network for the NM coordination cluster which it belongs to. The network is expected to call Nm_SynchronizationPoint() at regular intervals.",
    "If this value is >0 the IPv4/IPv6 will reset the MTU value stored for each destination after n seconds.",
    "If this value is >0 the IpV6 will reset the MTU value stored for each destination after n seconds.",
    "If true, the handle definition or auxiliary field of a binary manifest resource is optional and may not be used in all BinaryManifestResources referring to this BinaryManifestResourceDefinition.",
    "If true, the handle or auxiliary field in the context of binary manifest resource relates to an optional BinaryManifestItemDefinition and is not used.",
    "If withAuto is set to \"true\" for this parameter definition the isAutoValue can be set to \"true\".\r\n\r\nIf isAutoValue is set to \"true\" the actual value will not be considered during ECU Configuration but will be (re-)calculated by the code generator and stored in the value attribute afterwards. These implicit updated values might require a re-generation of other modules which reference these values.\r\n\r\nIf isAutoValue is not present the default is \"false\".",
    "If withAuto is set to \"true\" for this parameter definition the isAutoValue can be set to \"true\".\r\nIf isAutoValue is set to \"true\" the actual value will not be considered during ECU Configuration but will be (re-)calculated by the code generator and stored in the value attribute afterwards. These implicit updated values might require a re-generation of other modules which reference these values.\r\n\r\nIf isAutoValue is not present the default is \"false\".",
    "Image maps enable authors to specify regions of an image or object and assign a specific action to each region.",
    "Implement state message semantics for establishing communication among runnables of the same component.\r\nThe aggregation of explicitInterRunnableVariable is subject to variability with the purpose to support variability in the software components implementations. Typically different algorithms in the implementation are requiring different number of memory objects.",
    "Implement state message semantics for establishing communication among runnables of the same component.\r\nThe aggregation of implicitInterRunnableVariable is subject to variability with the purpose to support variability in the software components implementations. Typically different algorithms in the implementation are requiring different number of memory objects.",
    "Implementation policy for providing a mode group.",
    "Implementation policy for the reception of mode switches.",
    "Implementation policy for this data object.",
    "In case of EventCombination on Retrieval, this attribute specifies if a specific order of reporting is to be maintained.",
    "In case of a Repetitive Execution Order Constraint this association references the timing description event triggering every cycle.",
    "In case of a Repetitive Execution Order Constraint this attribute specifies the number of cycles the Execution Order Constraint is considering.",
    "In case of a Repetitive Execution Order Constraint this attribute specifies the number of slots every cycle of the Execution Order Constraint is consisting of.",
    "In case of a SET operation, the age will be interpreted as Delay while in a GET operation (input) it specifies the Lifetime of the signal within the IoHwAbstraction Layer",
    "In case of a server on one ECU with multiple clients on other ECUs, the client server communication shall use different unique COM signals and signal groups for each client to allow the identification of the client associated with each system signal.",
    "In case of variable length IPdus (with system signals of variable length), an additional NPdu (with the PGN in the CAN ID) is used for messages with up to 8 bytes.",
    "In case replay protection is active, this attribute defines the replay protection window.",
    "In case that a static service connection is used and a single peer exists this element is used to statically configure the remote peer's address.",
    "In case that the datatype of the event is composite all primitive elements of the datatype need to be described since every single one will be transported in an individual Signal over the communication medium.",
    "In case that the datatype of the field is composite and a notifier is defined for the field all primitive elements of the datatype need to be described since every single one will be transported in an individual Signal over the communication medium.",
    "In case the MKA instance acts as a Key Server, the priority is used to select the Cipher Suite to use with MACsec from the supported Ciphers.",
    "In client server communication, the server may return any value within the application error range.",
    "In difference to all the other computational methods every COMPU-SCALE will be applied including the bit MASK. Therefore it is allowed for this type of COMPU-METHOD, that COMPU-SCALES overlap. \r\n\r\nTo calculate the string reverse to a value, the string has to be split and the according value for each substring has to be summed up. The sum is finally transmitted.\r\n\r\nThe processing has to be done in order of the COMPU-SCALE elements.",
    "In driver modules which can be instantiated several times on a single ECU, SRS_BSW_00347 requires that the names of files, APIs, published parameters and memory allocation keywords are extended by the vendorId and a vendor specific name. \r\nThis parameter is used to specify the vendor specific name. In total, the implementation specific API name is generated as follows:\r\n<ModuleName>_<vendorId>_ <vendorApiInfix>_<API name from SWS>.\r\n\r\nE.g.  assuming that the vendorId of the implementer is 123 and the implementer chose a vendorApiInfix of \"v11r456\" an API name Can_Write defined in the SWS will translate to Can_123_v11r456_Write. \r\n\r\nThis attribute is mandatory for all modules with upper multiplicity > 1. It shall not be used for modules with upper multiplicity =1.\r\n\r\nSee also SWS_BSW_00102.",
    "In order to permit or deny certain types of IPv6 extension headers a permitted list of IPv6 extension headers can be configured.",
    "In the majority of cases this reference goes to ParameterDataPrototypes rather than VariableDataPrototypes. Pointing the reference to a VariableDataPrototype is limited to special use cases, e.g. if the AutosarParameterRef is used in the context of an SwAxisGrouped.\r\n\r\nThis reference is used if the arParameter is local to the current component. \r\n\r\nOf course, it would technically also be feasible to use an InstanceRef for this case. However, the InstanceRef would not have a contextElement (because the current instance is the context).\r\n\r\nHence, the local instance is a special case which may provide further optimization. Therefore an explicit reference is provided for this case.",
    "In the static part the SlotID defines the slot in which the frame is transmitted. \r\nThe SlotID also determines, in combination with FlexrayCluster::numberOfStaticSlots, whether the frame is sent in static or dynamic segment. \r\nIn the dynamic part, the slot id is equivalent to a priority. Lower dynamic slot ids are all sent until the end of the dynamic segment. Higher numbers, which were ignored that time, have to wait one cycle and then shall try again.\r\n\r\nminValue: 1\r\n\r\nmaxValue: 2047",
    "In the vast majority of cases a response is required. However, there are also cases where providing the response is not possible and/or not allowed.",
    "Incoming VlanID from received frame",
    "Indicate whether it is allowed to break the element.",
    "Indicate whether the corresponding software-component can be multiply instantiated on one ECU. In this case the attribute will result in an appropriate component API on programming language level (with or without instance handle).",
    "Indicates a callback expected to be called from another module and implemented by this module.\r\nThis property was modified due to atpVariation (DirectedAssociationPattern).",
    "Indicates a parameter as to be debugged.",
    "Indicates a variable as to be debugged.",
    "Indicates an abstract partition context in which the enclosing BswModuleEntity can be executed.",
    "Indicates an entry into another modules which is required by this module.\r\nThis property was modified due to atpVariation (DirectedAssociationPattern).",
    "Indicates an entry which is required by this module. \r\nReplacement of outgoingCallback / requiredEntry.\r\nThis property was modified due to atpVariation (DirectedAssociationPattern).",
    "Indicates if Keep-Alive messages are sent.",
    "Indicates if Nagle's Algorithm is used.",
    "Indicates if a container may have different number of instances in different post-build variants (previously known as post-build selectable configuration sets). TRUE means yes, FALSE means no.",
    "Indicates if a module supports different post-build variants (previously known as post-build selectable configuration sets). TRUE means yes, FALSE means no.",
    "Indicates if a parameter or a reference may have different number of instances in different post-build variants (previously known as post-build selectable configuration sets). TRUE means yes, FALSE means no.",
    "Indicates if a parameter or a reference may have different value in different post-build variants (previously known as post-build selectable configuration sets). TRUE means yes, FALSE means no.",
    "Indicates that the ExecutionOrderConstraints permits that an Executable Entity is referenced multiple times (TRUE) or only once (FALSE) in the constraint.",
    "Indicates whether NIT error status of each cluster shall be detected or not.",
    "Indicates whether a module implementation has or plans to have (i.e., introduced at link or post-build time) new post-build variation points. TRUE means yes, FALSE means no. If the attribute is not defined, FALSE semantics shall be assumed.",
    "Indicates whether the ExecutionOrderConstraint is only referring to Executable Entities (FALSE) or only to RTE and/or BSW Events (TRUE).",
    "Indicates whether the associated events of the SynchronizationTimingConstraint have a common stimulus or response.",
    "Indicates whether the referenced events shall occur only once (single occurrence) or multiple times (multiple occurrences) in the given time interval.",
    "Indicates whether the source port is dynamically assigned.",
    "Indication to the receivers that the corresponding Pdu was updated by the sender. \r\nThis attribute describes the position of the update bit in the frame that aggregates this PDUToFrameMapping. Length is always one bit.\r\n\r\nNote that the exact bit position of the updateIndicationBitPosition is linked to the value of the attribute packingByteOrder because the method of finding the bit position is different for the values mostSignificantByteFirst and mostSignificantByteLast. This means that if the value of packingByteOrder is changed while the value of updateIndicationBitPosition remains unchanged the exact bit position of updateIndicationBitPosition within the enclosing Frame still undergoes a change.\r\n\r\nThis attribute denotes the least significant bit for \"Little Endian\" and the most significant bit for \"Big Endian\" packed signals within the IPdu (see the description of the packingByteOrder attribute). In AUTOSAR the bit counting is always set to \"sawtooth\" and the bit order is set to \"Decreasing\". The bit counting in byte 0 starts with bit 0 (least significant bit). The most significant bit in byte 0 is bit 7.",
    "Industry Group field of the NAME of this node.",
    "Informal description of the condition used to to define existence dependencies.\r\nThis aggregation contains a variation point although it is not variant. Therefore, this variation point shall not exist in models. See constr_2638.",
    "Informal description of the derivation used to calculate the value of the configuration element.\r\nThis aggregation contains a variation point although it is not variant. Therefore, this variation point shall not exist in models. See constr_2638.",
    "Initial NAD of the LIN slave.",
    "Initial maximum allowed gap between two counter values of two consecutively received valid Data, i.e. how many subsequent lost data is accepted. For example, if the receiver gets Data with counter 1 and MaxDeltaCounterInit is 1, then at the next reception the receiver can accept Counters with values 2 and 3, but not 4.\r\n\r\nNote that if the receiver does not receive new Data at a consecutive read, then the receiver increments the tolerance by 1.",
    "Initial maximum allowed gap between two counter values of two consecutively received valid Data, i.e. how many subsequent lost data is accepted. For example, if the receiver gets Data with counter 1 and MaxDeltaCounterInit is 1, then at the next reception the receiver can accept Counters with values 2 and 3, but not 4.\r\n\r\nNote that if the receiver does not receive new Data at a consecutive read, then the receiver increments the tolerance by 1.\r\n\r\nCaveat: The E2E wrapper approach involves technologies that are not subjected to the AUTOSAR standard and is superseded by the superior E2E transformer approach (which is fully standardized by AUTOSAR). Hence, new projects (without legacy constraints due to carry-over parts) shall use the fully standardized E2E transformer approach.",
    "Initial value for a Field that is set before the ServiceInterface is offered.\r\nThis aggregation contains a variation point although it is not variant. Therefore, this variation point shall not exist in models. See constr_2638.",
    "Initial value to be sent if sender component is not yet fully initialized, but receiver needs data already.\r\nThis aggregation contains a variation point although it is not variant. Therefore, this variation point shall not exist in models. See constr_2638.",
    "Initial value to be used in case the sending component is not yet initialized. If the sender also specifies an initial value, then the receiver's value will be used.\r\nThis aggregation contains a variation point although it is not variant. Therefore, this variation point shall not exist in models. See constr_2638.",
    "Instance identifier. Can be used for e.g. service discovery to identify the instance of the event group.",
    "Instance identifier. Can be used for e.g. service discovery to identify the instance of the service.",
    "Instance of providing port.",
    "Instance of requiring port.",
    "Instance reference to a (potentially structured) member of a ClientServerOperation.",
    "Instance reference to a SwcServiceDependency that links ServiceNeeds to SWC service ports.",
    "Instance reference to the PhmCheckpoint defined in the context of a PortInterface.",
    "Instance reference to the RPortPrototype which represents the Supervised Entity instance.",
    "Instance reference to the mapped PPortPrototype typed by a AbstractSynchronizedTimeBaseInterface.",
    "Instance reference to the mapped PortPrototype typed by a TimeSynchronizationInterface.",
    "Instance reference to the mapped RPortPrototype typed by a AbstractSynchronizedTimeBaseInterface.",
    "InstanceReference representation in the ECU Configuration.\r\nThis aggregation contains a variation point although it is not variant. Therefore, this variation point shall not exist in models. See constr_2638.",
    "InstanceRefs to elements on the first \"side\".\r\nThis aggregation contains a variation point although it is not variant. Therefore, this variation point shall not exist in models. See constr_2638.",
    "InstanceRefs to elements on the second \"side\".\r\nThis aggregation contains a variation point although it is not variant. Therefore, this variation point shall not exist in models. See constr_2638.",
    "Integer number of macroticks between the static slot boundary and the closest macrotick boundary of the secondary time reference point based on the nominal macrotick duration. (pMacroInitialOffset). This optional parameter shall only be filled out if channel A is used.",
    "Integer number of macroticks between the static slot boundary and the closest macrotick boundary of the secondary time reference point based on the nominal macrotick duration. (pMacroInitialOffset). This optional parameter shall only be filled out if channel B is used.",
    "Intended capacity of the slot in bytes to be reserved by the stack vendor. One use case is to define this value in case that the cryptoObjectType is undefined and the slot size can not be deduced from cryptoObjectType and cryptoAlgorithmId.\r\n\r\nThe value \"0\" means slot size can be deduced from cryptoObjectType and cryptoAlgorithmId.",
    "Internal Priority Value (IPV), a priority value that determines the assigned traffic class.",
    "Interval between consecutive Router Solicitations in (s).",
    "InvalidationPolicy for a particular dataElement",
    "It determines if bus load reduction for the respective CanNm channel is active or not.",
    "J1939 messages (parameter groups, PGs) that can be transferred via this connection.",
    "J1939NmNode that is the target of the J1939ControllerApplicationTo1939NmNodeMapping.",
    "Key element of the map that is used to uniquely identify the value of the map.",
    "Key-value pair mapping enumeration values to unique integers.",
    "Kind of activation w.r.t. to the referred mode.",
    "LIN Supplier ID",
    "LIN Supplier ID.",
    "LIN function ID",
    "LIN function ID.",
    "Length of a basic-cycle. Unit: NTUs",
    "Length of call queue on the mode user side. The queue is implemented by the RTE. The value shall be greater or equal to 1. Setting the value of queueLength to 1 implies that incoming requests are rejected while another request that arrived earlier is being processed.",
    "Length of call queue on the sender side. The queue is implemented by the RTE resp.BswScheduler. The value shall be greater or equal to 0. Setting the value of queueLength to 0 implies non-queued communication.",
    "Length of call request queue on the server side. The queue is implemented by the SwCluC. The value shall be greater or equal to 1. Setting the value of queueLength to 1 implies that incoming requests are rejected while another request that arrived earlier is being processed.",
    "Length of payload and E2E header in bits.",
    "Length of payload including E2E header in bits.",
    "Length of queue for received events.",
    "Length of the Network Management vector in a cluster [bytes]",
    "Length of the cycle. Unit: seconds",
    "Length of the initialization vector.",
    "Length of the partial networking request release information vector (in bytes).",
    "Length of the queue (in which messages can be stored before processing) in the unit \"Log message\".",
    "Lifespan of data (0..255). The purpose of the TimeToLive field is to avoid a situation in which an undeliverable datagram keeps circulating on a system.",
    "Limits the burst frames in bit time. This configuration can be different from one ECU to another within the PLCA mixed segment. For PLCA burst mode to work properly this timer should be set greater than one IPG.",
    "LinConfigurableFrames shall list all frames (unconditional frames, event-triggered frames and sporadic frames) processed by the slave node. This element is necessary for the LIN 2.0 Assign-Frame command.",
    "LinOrderedConfigurableFrames shall list all frames (unconditional frames, event-triggered frames and sporadic frames) processed by the slave node. This element is necessary for the LIN 2.1 Assign-Frame-PID-Range command.",
    "LinSlaves that are handled by the LinMaster.",
    "Link to a PortGroup that is defined in a component which is part of this CompositionSwComponentType.",
    "Link to a resource which depends on this resource to implement them.",
    "Linker name.",
    "Links a PortGroup in a composition to another PortGroup, that is defined in a component which is part of this CompositionSwComponentType.",
    "Links a PortGroup in a composition to another PortGroup, that is defined in a component which is part of this CompositionSwComponentType. There shall be at most one innerGroup per contained SwComponentPrototype.",
    "List of CryptoCertificateToCryptoKeySlotMappings available in the CryptoStack.",
    "List of CryptoCertificates managed in the CryptoStack",
    "List of CryptoProviders provided by the CryptoStack",
    "List of EventGroups that are provided by the Service Instance.",
    "List of EventGroups that are used by the RequiredServiceInstance.",
    "List of all frames (unconditional frames, event-triggered frames and sporadic frames) processed by the slave node. This element is necessary for the LIN 2.1 Assign-Frame-PID-Range command.",
    "List of all frames that are processed by the slave node",
    "List of confidence intervals.",
    "List of configuration properties for Field notifiers that are provided by the Service Instance.",
    "List of configuration properties for Field notifiers that are required by the Service Instance.",
    "List of configuration properties for the DDS-RPC service that provides access to the field getters/setters of the service instance.",
    "List of configuration properties for the DDS-RPC service that provides the methods of the Service Instance.",
    "List of configuration properties for the DDS-RPC service that requires access to the field getters/setters of the service instance.",
    "List of configuration properties for the DDS-RPC service that requires access to the methods of the service instance.",
    "List of configuration properties for the Events that are provided by the Service Instance.",
    "List of configuration properties for the Events that are requested by the Client.",
    "List of configuration properties for the Events that are required by the Service Instance.",
    "List of valid binding times.",
    "Lists the sub-features of a feature.",
    "LiteralPrefix defines a common prefix for all AutosarDataTypes of the includedDataTypeSet to be added on enumeration literals, lowerLimit and upperLimit constants created by the RTE.",
    "Local class tailoring for content that is referenced by this reference.",
    "Local class tailoring which is applied if the content is contained by this aggregation.",
    "Logical address that is assigned to the referenced device in a network utilizing the Internet Protocol for communication between its nodes.",
    "Lower CAN Identifier of a receive CAN L-PDU for identifier range definition.",
    "Lower bound of the DdsDomainRange.",
    "Lower range of IP addresses to be issued to DHCP clients.  IPv6 Address. Notation: FFFF:...:FFFF.",
    "Lower range of IP addresses to be issued to DHCP clients. IPv4 Address. Notation: 255.255.255.255.",
    "Lowest RPT event id usable for RTE generated service points.\r\nThis attribute is relevant, if dedicated id range shall be applied to the ExecutableEntitys of a software component or specific ExecutableEntitys.",
    "Lowest service point id useable for RTE generated service points.",
    "MAC Address part of the Stream Id.",
    "MacMulticastGroup that is defined for the Subnet (EthernetCluster).",
    "Machine specific ICMP (Internet Control Message Protocol) attributes",
    "Machine specific IP attributes.",
    "Machine specific TcpIp Stack attributes.",
    "Magnitude of the maximum permissible offset correction value. Unit:microtick (pOffsetCorrectionOut)",
    "Magnitude of the maximum permissible rate correction value and the maximum drift offset between two nodes operating with unsynchronized clocks for one communication cycle. Unit:Microticks (pRateCorrectionOut)\r\n\r\nRemarks: This parameter maps to FlexRay \r\nProtocol 2.1 Rev. A parameter pdMaxDrift.",
    "Major Version of the ServiceInterface.",
    "Major Version of the ServiceInterface. Value can be set to a number that represents the Major Version of the searched service or to ANY.",
    "Major Version of the ServiceInterface. Value can be set to a number that represents the Major Version of the service.",
    "Major version number of the Service.",
    "Major version of the service contract.",
    "Mandates RP preparation level for access to VariableDataPrototype within generated RTE implementation.",
    "Manufacturer Code field of the NAME of this node.",
    "Map two different ApplicationErrors defined in the context of two different ClientServerInterfaces.",
    "Mapped VlanID after ingress Vlan translation",
    "Mapping of ApplicationPartitions to EcuPartitions",
    "Mapping of TLS-PSK to a concrete key defined in the CryptoDeployment.",
    "Mapping of a ClientServerOperation in a ClientServerInterface to a Method in a ServiceInterface.",
    "Mapping of a Field in a ServiceInterface to ClientServerOperations that represent the getter and setter methods and to a VariableDataPrototype that represents the notifier in the Field.",
    "Mapping of a Fire&Forget Method that is located in a ServiceInterface to a VariableDataPrototype in a SenderReceiverInterface or to a Trigger in a TriggerInterface.",
    "Mapping of a J1939ControllerApplication to a J1939NmNode.",
    "Mapping of a ServiceInterface of the Adaptive Platform to PortInterface elements of the Classic Platform. \r\nThe upper multiplicity of this role has been increased to * due to resolving an atpVariation stereotype. The previous value was -1.",
    "Mapping of a VariableDataPrototype in a SenderReceiverInterface to an Event in a ServiceInterface.",
    "Mapping of a communication resource to a SystemSignal.",
    "Mapping of a communication resource to a SystemSignalGroup.",
    "Mapping of a field to ISignalTriggerings.",
    "Mapping of a method to ISignalTriggerings.",
    "Mapping of a trigger to an ISignalTriggering.",
    "Mapping of an ISignalTriggering being part of a fire and forget message to a ClientServerOperation.",
    "Mapping of an OsTaskProxy that was created in the context of a SwComponent to an OsTaskProxy that was created in the context of an Ecu.",
    "Mapping of an argument with a primitive datatype to a signal.",
    "Mapping of an event or an element inside of the event to an ISignalTriggering.",
    "Mapping of arguments with composite datatypes.",
    "Mapping of hardware related topology elements onto their counterpart definitions in\r\nthe ECU Resource Template.\r\n\r\natpVariation: The ECU Resource type might be variable.",
    "Mapping of the JobRequirement to a concrete crypto job.",
    "Mapping of two ClientServerOperations in two different ClientServerInterfaces",
    "Mapping of two ModeDeclarationGroupPrototypes in two different ModeInterfaces",
    "Mapping of two Trigger in two different TriggerInterface",
    "Mapping that assigns serialization properties to a ServiceInterface.",
    "Mapping that assigns serialization properties to elements of a ServiceInterface.",
    "Mappings between Mode Management PortGroups and communication channels.",
    "Mappings between Virtual Function Clusters and Partial Network Clusters.",
    "Maps a CP software cluster resource to a temporal resource.",
    "Maps a Software Cluster resource to an Application Partition to restrict the usage.",
    "Maps a Software Cluster to an Application Partition to restrict the usage.\r\nThis aggregation contains a variation point although it is not variant. Therefore, this variation point shall not exist in models. See constr_2638.",
    "Maps a temporal resource to a mapping between a providing CP software cluster and requesting CP software clusters.",
    "Maschine specific IP attributes.",
    "Mask applied to original CAN IDs before comparison.",
    "Mask for old and new value.",
    "Mask for the supported DTC status bits by the Dem.",
    "Max Range.",
    "Max length allowed for this string.",
    "Max value allowed for the parameter defined.\r\n\r\natpVariation: [RS_ECUC_00084]",
    "Maximal number of checks in which ProfileStatus equal to E2E_P_ERROR was determined, within the last WindowSize checks, for the state E2E_SM_INIT.",
    "Maximal number of checks in which ProfileStatus equal to E2E_P_ERROR was determined, within the last WindowSize checks, for the state E2E_SM_INIT.\r\n\r\nThe minimum value is 0.",
    "Maximal number of checks in which ProfileStatus equal to E2E_P_ERROR was determined, within the last WindowSize checks, for the state E2E_SM_INVALID.",
    "Maximal number of checks in which ProfileStatus equal to E2E_P_ERROR was determined, within the last WindowSize checks, for the state E2E_SM_INVALID.\r\n\r\nThe minimum value is 0.",
    "Maximal number of checks in which ProfileStatus equal to E2E_P_ERROR was determined, within the last WindowSize checks, for the state E2E_SM_VALID.",
    "Maximal number of checks in which ProfileStatus equal to E2E_P_ERROR was determined, within the last WindowSize checks, for the state E2E_SM_VALID.\r\n\r\nThe minimum value is 0.",
    "Maximum allowable deviation in duration (in seconds)",
    "Maximum allowable deviation in percent (percent of the corresponding TimeValue).",
    "Maximum allowable response delay to entries received by multicast in seconds.",
    "Maximum allowed difference between two counter values of two consecutively received valid messages. For example, if the receiver gets data with counter 1 and MaxDeltaCounter is 3, then at the next reception the receiver can accept Counters with values 2, 3 or 4.",
    "Maximum amount of tester connections that shall be maintained at one time before alive check is performed.",
    "Maximum communication mode requested by this ComM user.",
    "Maximum cycle counter value in a given cluster.\r\nRemark: Set to 63 for FlexRay Protocol 2.1 Rev. A compliance.",
    "Maximum cycle time of alive trigger of this SE (in seconds)",
    "Maximum cycle time of alive trigger of this SupervisedEntity (in seconds).",
    "Maximum delay before the first Router Solicitation will be sent after interface initialization in (s).",
    "Maximum delay in seconds before sending the first Confirm message. If this value is bigger than the previous minimum delay value a random delay will be chosen from the interval.",
    "Maximum delay in seconds before sending the first Information Request message. If this value is bigger than the previous minimum delay value a random delay will be chosen from the interval.",
    "Maximum delay in seconds before sending the first Solicit message. If this value is bigger than the previous minimum delay value a random delay will be chosen from the interval.",
    "Maximum difference that is permitted between two consecutive values if the constraint is applied to an axis.",
    "Maximum length of payload and E2E header in bits.",
    "Maximum length of payload including E2E header in bits.",
    "Maximum number of Router Solicitations that will be sent before the first Router Advertisement has been received.",
    "Maximum number of base points contained in the axis of a map or curve.",
    "Maximum number of default router entries.",
    "Maximum number of diagnostic Conversations supported by the Diagnostic Server Instance. This attribute has no relation to the definition of the maximum number of clients in DoIP context, configured by means of DoIpNetworkConfiguration.maxTesterConnections.",
    "Maximum number of distinct syncframe identifiers present in a given cluster. This parameter maps to FlexRay Protocol 2.1  Rev. A parameter gSyncNodeMax.",
    "Maximum number of elements in list. If the maximum number is not constraint it shall be set to \"undefined\".",
    "Maximum number of entries in the destination cache.",
    "Maximum number of entries in the on-link prefix list.",
    "Maximum number of multicast solicitations that will be sent when performing address resolution.",
    "Maximum number of negative responses with response code 0x78 (requestCorrectlyReceived-ResponsePending) allowed per request. DCM will send a negative response with response code 0x10 (generalReject), in case the limit value gets reached.\r\nValue 0xFF means that no limit number of NRC 0x78 response apply.",
    "Maximum number of time quanta in the bit time.",
    "Maximum number of times that TCP retransmits an individual data segment before aborting the connection.",
    "Maximum number of times that a TCP Keep Alive is retransmitted before the connection is closed.",
    "Maximum number of times that a TCP SYN is retransmitted.",
    "Maximum number of times that a TCP segment is retransmitted before the TCP connection is closed. This parameter is only valid if tcpRetransmissionTimeout is configured. \r\nNote: This parameter also applies for FIN retransmissions.",
    "Maximum number of unicast solicitations that will be sent when performig Neighbor Unreachability Detection.",
    "Maximum payload length for the dynamic channel of a frame in 16 bit WORDS.",
    "Maximum possible value for the value of this attribute",
    "Maximum random factor used for randomization",
    "Maximum segment lifetime in [s].",
    "Maximum time allowed for the campaign to be active until UCM Master automatically cancels the campaign.",
    "Maximum time between SHM (Safety Header Message) and SDM (Safety Data Message) of one SDG (Safety Data Group)",
    "Maximum time, an outgoing message (event, method call or method response) may be delayed, due to data accumulation.",
    "Maximum time, an outgoing message (event, method call or method response) may be delayed, due to data collection.",
    "Maximum token capacity of the token bucket in bit.",
    "Maximum/Minimum allowable response delay to entries received by multicast in seconds.",
    "Maximum/Minimum allowable response delay to entries received by multicast in seconds.\r\nThe Service Discovery shall delay answers to entries that were transported in a multicast SOME/IP-SD message (e.g. FindService).",
    "Media Access Control address (MAC address) that uniquely identifies each EthernetCommunicationController in the network.",
    "Memory limit in bytes.",
    "Message priority of the incoming message.\r\n\r\nrange: 0-7",
    "MessageId for the referenced frame",
    "MessageId of the referenced frame.",
    "MessageLength from the Follow_Up Message Header shall be included in CRC calculation.",
    "Messages of VLANs that are defined here can be communicated via the CouplingPort.",
    "Middleware transport layer specific configuration settings for a Field that is defined in the ServiceInterface.",
    "Middleware transport layer specific configuration settings for a method that is defined in the ServiceInterface.",
    "Middleware transport layer specific configuration settings for an Event that is defined in the ServiceInterface.",
    "Min Range.",
    "Min length allowed for this string.",
    "Min value allowed for the parameter defined.\r\n\r\natpVariation: [RS_ECUC_00084]",
    "Minimal number of checks in which ProfileStatus equal to E2E_P_OK was determined, within the last WindowSize checks, for the state E2E_SM_INIT.",
    "Minimal number of checks in which ProfileStatus equal to E2E_P_OK was determined, within the last WindowSize checks, for the state E2E_SM_INIT.\r\n\r\nThe minimum value is 1.",
    "Minimal number of checks in which ProfileStatus equal to E2E_P_OK was determined, within the last WindowSize checks, for the state E2E_SM_INVALID.",
    "Minimal number of checks in which ProfileStatus equal to E2E_P_OK was determined, within the last WindowSize checks, for the state E2E_SM_INVALID.\r\n\r\nThe minimum value is 1.",
    "Minimal number of checks in which ProfileStatus equal to E2E_P_OK was determined, within the last WindowSize checks, for the state E2E_SM_VALID.",
    "Minimal number of checks in which ProfileStatus equal to E2E_P_OK was determined, within the last WindowSize checks, for the state E2E_SM_VALID.\r\n\r\nThe minimum value is 1.",
    "Minimum Delay in seconds between successive transmissions of this I-PDU, independent of the Transmission Mode.",
    "Minimum allowable response delay to entries received by multicast in seconds.",
    "Minimum cycle time of alive trigger of this SE (in seconds)",
    "Minimum cycle time of alive trigger of this SupervisedEntity (in seconds).",
    "Minimum delay (s) before the first Information Request message will be sent.",
    "Minimum delay (s) before the first Solicit message will be sent.",
    "Minimum delay in seconds before the first Confirm message will be sent.",
    "Minimum length of payload and E2E header in bits.",
    "Minimum length of payload including E2E header in bits.",
    "Minimum number of base points contained in the axis of a map or curve.",
    "Minimum number of elements in the list. If the minimum number is not constraint it shall be set to \"undefined\".",
    "Minimum number of time quanta in the bit time.",
    "Minimum possible value for the value of this attribute",
    "Minimum random factor used for randomization",
    "Minimum size of the TCP receive window in bytes.",
    "Minor Version of the Service that is provided by this DdsCpProvidedServiceInstance.",
    "Minor Version of the Service that is provided by this ProvidedServiceInstance.",
    "Minor Version of the ServiceInterface.",
    "Minor Version of the ServiceInterface. Value can be set to a number that represents the Minor Version of the searched service or to ANY.",
    "Minor version number of the Service.",
    "Minor version of the service contract.",
    "Mode Management PortGroup to be mapped onto a communication channel. This reference is optional in case that the System Description doesn't use a complete Software Component Description (VFB View). This supports the inclusion of legacy systems.",
    "ModeDeclarationGroupPrototype (of the same PortInterface) to which these communication attributes apply.",
    "ModeDeclarationGroupPrototype instance qualifying the communication resource",
    "ModeDeclarationGroupPrototype to be mapped.",
    "Multicast Address that is used by the client to subscribe to the server: This enables the multicast subscription feature.\r\nThis property was modified due to atpVariation (DirectedAssociationPattern).",
    "Multicast Address that is used for event communication in the IP-Multicast case. It is the destination address to which the server sends the \r\nmulticast event messages if the mulicastThreshold is exceeded.\r\n\r\nThis address is transmitted in the SD-SubscribeEventGroupAck Message to client (answer to SD-SubscribeEventGroup).\r\nThis property was modified due to atpVariation (DirectedAssociationPattern).",
    "Multicast IPv4 Address that is\r\ntransmitted in the EventGroupSubscribeAck message\r\nfor all available EventGroups that are available in\r\nthe ProvidedSomeipServiceInstance.",
    "Multicast IPv4 Address that is transmitted in the EventGroupSubscribeAck message.",
    "Multicast IPv4 Address to which the message will be transmitted.",
    "Multicast IPv6 Address that is\r\ntransmitted in the EventGroupSubscribeAck message\r\nfor all available EventGroups that are available in\r\nthe ProvidedSomeipServiceInstance.",
    "Multicast IPv6 Address that is transmitted in the EventGroupSubscribeAck message.",
    "Multicast IPv6 Address to which the message will be transmitted",
    "Multicast IPv6 Address to which the message will be transmitted.",
    "Multiplicity restriction of the attribute",
    "Name of the CipherSuite according to the IANA assignments list.",
    "Name of the DDS Reply Topic associated with the Field.",
    "Name of the DDS Reply Topic associated with the Method.",
    "Name of the DDS Request Topic associated with the Field.",
    "Name of the DDS Request Topic associated with the Method.",
    "Name of the DDS Topic associated with the Event.",
    "Name of the channel (Channel A or Channel B).",
    "Name of the used Transport Protocol.",
    "Neighbor Unreachability Detection is used to remove unused entries from the neighbor cache. This feature is a basic feature of NDP and should be turned on.",
    "Network Endpoint that defines the IPAddress of the machine.",
    "Network Target Address type.",
    "Network Timeout for CanNm PDUs in seconds\r\nIt denotes the time how long the CanNm shall stay in the Network Mode before transition into Prepare Bus-Sleep Mode shall take place.",
    "Network Timeout for NmPdus in seconds\r\nIt denotes the time how long the CanNm shall stay in the Network Mode before transition into Prepare Bus-Sleep Mode shall take place.",
    "Network Timeout for NmPdus in seconds.\r\nIt denotes the time how long the UdpNm shall stay in the Network Mode before transition into Prepare Bus-Sleep Mode shall take place.",
    "Network Timeout for UdpNm PDUs in seconds.\r\nIt denotes the time how long the CanNm shall stay in the Network Mode before transition into Prepare Bus-Sleep Mode shall take place.",
    "Network configuration (Protocol, Port, IP Address) for transmission of  dlt messages on a specific VLAN.",
    "Network configuration (Protocol, Port, IP Address) for transmission of DoIP messages on a specific VLAN.",
    "Network configuration for sending and receiving of Nm messages on the machine.",
    "Network configuration for transmission of DoIP messages.",
    "Network configuration for transmission of log & trace messages.",
    "Network interface specific DoIP properties.",
    "Network mask. Notation 255.255.255.255",
    "NetworkEndpoint on which the ProvidedServiceInstance\r\nthat is communicating with this ConsumedServiceInstance is allowed to be located so that the ACL check in the ServiceDiscovery is successful and the connection is allowed to be established.\r\nThis property was modified due to atpVariation (DirectedAssociationPattern).",
    "NetworkEndpoints",
    "NetworkEndpoints on which the ConsumedServiceInstances\r\nthat are communicating with this ProvidedServiceInstance are allowed to be located so that the ACL check in the ServiceDiscovery is successful and the connection is allowed to be established.\r\nThis property was modified due to atpVariation (DirectedAssociationPattern).",
    "Nm ECU may coordinate different clusters.",
    "NmCoordinationCluster identification number.",
    "Node identifier of local NmNode. Shall be unique in the NmCluster.",
    "Node specific bus cycle time in the periodic transmission mode with bus load reduction. Specified in seconds.",
    "Node specific time offset in the periodic transmission node. It determines the start delay of the transmission. Specified in seconds.",
    "NodeName configuration",
    "Nominal bit time (= 1 / fx:SPEED). gdBit = cSamplesPerBit * gdSampleClockPeriod. Unit: seconds (gdBit)",
    "Normalized sequential runtime at the beginning of the DeterministicClient::WaitForActivation cycle (which mostly cannot be parallelized), before the main usage of the worker pool starts.",
    "Number of Data required for validating the consistency of the counter that shall be received with a valid counter \r\n(i.e. counter within the allowed lock-in range) after the detection of an unexpected behavior of a received counter.",
    "Number of Data required for validating the consistency of the counter that shall be received with a valid counter (i.e. counter within the allowed lock-in range) after the detection of an unexpected behavior of a received counter.\r\n\r\nCaveat: The E2E wrapper approach involves technologies that are not subjected to the AUTOSAR standard and is superseded by the superior E2E transformer approach (which is fully standardized by AUTOSAR). Hence, new projects (without legacy constraints due to carry-over parts) shall use the fully standardized E2E transformer approach.",
    "Number of FlexRay Communication Cycles needed to transmit the Nm Data PDUs of all FlexRay Nm Ecus of this FlexRayNmCluster.",
    "Number of FlexRay Communication Cycles used to repeat the transmission of the Nm vote Pdus of all FlexRay NmEcus of this FlexRayNmCluster.  This value shall be an integral multiple of nmVotingCycle.",
    "Number of FlexRay CommunicationCycles needed to transmit the Nm vote of Pdus of all FlexRay NmEcus of this FlexRayNmCluster.",
    "Number of Minislots in the dynamic segment.",
    "Number of Neighbor Solicitations that have to be unanswered in order to set an autoconfigurated address to PREFERRED (usable) state.",
    "Number of ROM Blocks to be provided by the NVRAM manager for this block. Please note that these multiple ROM Blocks are given in a contiguous area.",
    "Number of additional bytes of MetaData in the PDU data field. The MetaData contains auxiliary information for the PDU, e.g. the CAN ID.",
    "Number of aging cycles needed to unlearn/delete the event.",
    "Number of bits allocated by a \"bit data object\" within its host data object.",
    "Number of bits in the Transmission Start Sequence [gdBits].",
    "Number of bits used by a node to test the overall duration of a received wake up symbol. Unit: gdBit",
    "Number of bits used by the node to test the duration of the 'idle' or HIGH phase of a received wakeup. \r\nUnit:bitDuration\r\n\r\nRemarks: This parameter maps to FlexRay Protocol 2.1 Rev. A parameter gdWakeupSymbolRxIdle.",
    "Number of bits used by the node to test the duration of the LOW phase of a received wakeup. Unit:bitDuration \r\n\r\nRemarks: This parameter maps to FlexRay Protocol 2.1 Rev. A parameter gdWakeupSymbolRxLow.",
    "Number of bits used by the node to transmit the 'idle' part of a\r\nwakeup symbol. \r\nUnit: gDbit",
    "Number of bits used by the node to transmit the LOW phase of awakeup symbol and  the HIGH and LOW phases of a WUDOP. Unit:bitDuration",
    "Number of buffers that can be used for fragment reassembly. In case of a reassembly error or if not all fragments are received in time this buffer will be blocked until the specified \"Fragment Reassembly Timeout\" has been exceeded. \r\n\r\nA value of 0 disables fragment reassembly.",
    "Number of checks required for validating the consistency of the counter that shall be received with a valid counter (i.e. counter within the allowed lock-in range) after the detection of an unexpected behavior of a received counter.",
    "Number of consecutive even/odd cycle pairs that shall have valid clock correction terms before the Communication Controller will be allowed to transition from the POC:normal passive state to POC:normal active state. If set to 0, the Communication Controller is not allowed to transition from POC:norm",
    "Number of consecutive failed alive cycles for this SupervisedEntity which shall be tolerated until the supervision status of the SupervisedEntity is set to WDGM_ALIVE_EXPIRED (see SWS WdgM for more details). \r\n\r\nNote that this value has to be recalculated with respect to the WdgM's own cycle time for ECU configuration.",
    "Number of data sets to be provided by the NVRAM manager for this block.\r\nThis is the total number of ROM Blocks and RAM Blocks.",
    "Number of identical IPdus needed for successful voting (1-3).",
    "Number of independent workers that process data-sets. Size of the worker pool shall be decided based on availability of resources like processor cores or memory.",
    "Number of macroticks the action point offset is from the beginning of the symbol window [Macroticks].",
    "Number of microticks between the closest macrotick boundary described by gMacroInitialOffset and the secondary time reference point.  The parameter depends on pDelayCompensationA and therefore it has to be set independently for each channel. This optional parameter shall only be filled out if channel A is used.",
    "Number of microticks between the closest macrotick boundary described by gMacroInitialOffset and the secondary time reference point.  The parameter depends on pDelayCompensationB and therefore it has to be set independently for each channel. This optional parameter shall only be filled out if channel B is used.",
    "Number of repetitions of the Tx-wakeup symbol to be sent during the CC_WakeupSend state of this Node in the cluster",
    "Number of samples per microtick",
    "Number of seconds before an error is reported or in case of allowed redundancy, the value is sent again.",
    "Number of seconds before an error is reported.",
    "Number of simultaneous rate measurements to determine the current rate deviation.",
    "Number of times Platform Health management tries sends a notification to State Management again before triggering a watchdog reaction.",
    "Number of vehicle announcement messages on IP address assignment. Represents parameter A_DoIP_Announce_Num of ISO 13400-2:2019.",
    "Object type that can be stored in the slot. \r\nIf this field contains \"Undefined\" then mSlotCapacity must be provided and larger then 0",
    "Object type that can be stored in the slot. \r\nIf this field contains \"Undefined\" then mSlotCapacity must be provided and larger then 0.",
    "Offset of the CRC in the Data[] array in bits.",
    "Offset of the Data ID nibble in the Data[] array in bits.",
    "Offset of the E2E header in the Data[] array in bits.",
    "Offset of the counter in the Data[] array in bits.",
    "On-board monitor ID according to ISO 15031-5.",
    "One First In First Out (FIFO) queued receive structure, defining the admittance criteria to the FIFO.",
    "One ISignalTriggering is defined for exactly one channel. Channels may have assigned an arbitrary number of ISignaltriggerings.\r\n\r\natpVariation: If signals/PDUs/frames are variable, the corresponding triggerings shall be variable, too.",
    "One PduTriggering is defined for exactly one channel. Channels may have assigned an arbitrary number of I-Pdu triggerings.\r\n\r\natpVariation: If signals/PDUs/frames are variable, the corresponding triggerings shall be variable, too.",
    "One axis belonging to this SwCalprmAxisSet",
    "One bit shall be used to configure whether or not external clock synchronisation will be allowed during runtime (only Level 2).",
    "One bit shall be used to distinguish between (potential) time masters and time slaves. This can be derived from the frame-triggering's triggers.",
    "One bit shall be used to distinguish between Level 1 and Level 2.",
    "One frame can be triggered several times, e.g. on different channels. If a frame has no frame triggering, it won't be sent at all. A frame triggering has assigned exactly one frame, which it triggers.",
    "One frame triggering is defined for exactly one channel. Channels may have assigned an arbitrary number of frame triggerings.\r\n\r\natpVariation: If signals/PDUs/frames are variable, the corresponding triggerings shall be variable, too.",
    "One of the associations representing one particular category of the hardware entity.",
    "One part transported over IEEE1722Tp channel.",
    "Only if Category = \"RELATION\". This represents the source instance of a relation.\r\nThis aggregation contains a variation point although it is not variant. Therefore, this variation point shall not exist in models. See constr_2638.",
    "Only if Category = \"RELATION\". This represents the source of a relation.",
    "Operation cycles types for the Dem to be supported by cycle-state APIs.",
    "Operation cycles types for the Dem.",
    "Operation these communication attributes apply to.",
    "Optional Can Id defined in case the Can Id can not be determined during runtime.",
    "Optional CouplingPort that can be used to connect the ECU to a CouplingElement (e.g. a switch).\r\nThis aggregation contains a variation point although it is not variant. Therefore, this variation point shall not exist in models. See constr_2638.",
    "Optional IPSec configuration that provides security services for IP packets.",
    "Optional Lin Id defined in case the Lin Id can not be determined during runtime.",
    "Optional annotation that can be added to each HwAttributeValue.",
    "Optional assignment of frame_PID values that are included in the request. The frame_PIDs are ordered.",
    "Optional attribute to define cyclic offers. Cyclic offer is active, if the delay is set (in seconds) and greater then 0.",
    "Optional attribute to define cyclic offers. Cyclic offer is active, if the delay is set (in seconds).",
    "Optional definition of Partitions within an Ecu.",
    "Optional definition of a CanId range.",
    "Optional definition of a ISignal's initValue in case the System Description doesn't use a complete Software Component Description (VFB View). This supports the inclusion of legacy system signals. \r\n\r\nThis value can be used to configure the Signal's \"InitValue\". \r\n\r\nIf a full DataMapping exist for the SystemSignal this information may be available from a configured SenderComSpec and ReceiverComSpec. \r\nIn this case the initvalues in SenderComSpec and/or ReceiverComSpec override this optional value specification. Further restrictions apply from the RTE specification.\r\nThis aggregation contains a variation point although it is not variant. Therefore, this variation point shall not exist in models. See constr_2638.",
    "Optional definition of a period in case of a periodically (time or angle) driven external trigger.",
    "Optional definition of one or more prefixes to be used for the BswScheduler.",
    "Optional definition of the VLAN priority for this stream.",
    "Optional definition of the destination MAC address for this stream. If no given then macAddressStreamId is used as destination MAC address.",
    "Optional mapping of SwComponentPrototypes that are typed by SensorActuatorSwComponentType to a HwElement with category SensorActuator.",
    "Optional mapping of software components to individual microcontroller cores residing in one ECU. A microcontroller core is described in the ECU Resource Template by the HwElement of HwCategory ProcessingUnit.",
    "Optional parameter which refines the scope of the TDEventBswModeDeclaration. If the parameter is set, the event occurs only if the mode declaration group prototype instance shall enter into the referenced ModeDeclaration.",
    "Optional parameter which refines the scope of the TDEventBswModeDeclaration. If the parameter is set, the event occurs only if the mode declaration group prototype instance shall exit from the referenced ModeDeclaration.",
    "Optional parameter which refines the scope of the TDEventModeDeclaration. If the parameter is set, the event occurs only if the mode declaration group prototype instance shall enter into the referenced ModeDeclaration.",
    "Optional parameter which refines the scope of the TDEventModeDeclaration. If the parameter is set, the event occurs only if the mode declaration group prototype instance shall exit from the referenced ModeDeclaration.",
    "Optional properties for configuration of PLCA (Physical Layer Collision Avoidance) in case 10-BASE-T1S Ethernet is used and PLCA is enabled on the CouplingPort (PHY).",
    "Optional reference from the Vendor Specific Module Definition to the Standardized Module Definition it refines. \r\nIn case this EcucModuleDef has the category STANDARDIZED_MODULE_DEFINITION \r\nthis reference shall not be provided. In case this EcucModuleDef has the category VENDOR_SPECIFIC_MODULE_DEFINITION this reference is mandatory.",
    "Optional reference that allows to Indicate the code artifact (header file) containing the preprocessor implementation of memory sections with this prefix.\r\n\r\nThe usage of this link supersedes the usage of a memory mapping header with the default name (derived from the BswModuleDescription's shortName).",
    "Optional reference to EthernetWakeupSleepOnDatalineConfig.",
    "Optional reference to a PortPrototype of the monitored Application in case that the communication over this port is monitored and defines the ContextId.",
    "Optional reference to a clock that holds the time base for an TD event.",
    "Optional reference to parameters or references which are affected by the ConfigurationClassAffection.",
    "Optional reference to the ECU where the CouplingElement is located.",
    "Optional reference to the SystemSignal which shall contain the transformed (linear) data.",
    "Optional specification of  a signal COM filter at the receiver side in case that  the System Description doesn't use a complete Software Component Description (VFB View). This supports the inclusion of legacy system signals. If a full DataMapping exist for the SystemSignal this information may be available from a configured ReceiverComSpec. In this case the ReceiverComSpec overrides this optional specification.",
    "Optional specification of a tolerance.",
    "Optional specification of the actual network representation for the referenced primitive DataPrototype. \r\nIf a network representation is provided then the baseType available in the SwDataDefProps shall be used as input for the serialization/deserialization. If the networkRepresentation is not provided then the baseType of the AbstractImplementationDataType shall be used for the serialization/deserialization.",
    "Optional timeout value in seconds for the reception of the ISignal.\r\nIn case the System Description doesn't use a complete Software Component Description (VFB View). This supports the inclusion of legacy system signals.\r\n\r\nIf a full DataMapping exist for the SystemSignal this information may be available from a configured ReceiverComSpec, in this case the timeout value in ReceiverComSpec override this optional timeout specification.",
    "Optional value to express invalidity of the actual data element.\r\nThis aggregation contains a variation point although it is not variant. Therefore, this variation point shall not exist in models. See constr_2638.",
    "Optional: code generator used.",
    "Optionally defines the length of the PNC Vector per CommunicationCluster (and VLAN in case of UdpNm). If not defined then System.pncVectorLength applies.\r\n\r\nShould only make the PNC Vector shorter (or same length as defined in System.pncVectorLength).",
    "Optionally defines the to be configured Pdu Router TpChunkSize for this routing relation.",
    "Options for generating the signature of port-related calls from a runnable to the RTE and vice versa.\r\nThe aggregation of PortPrototypes is subject to variability with the purpose to support the conditional existence of ports.",
    "Options how to generate the ExclusiveArea related APIs. When no SwcExclusiveAreaPolicy is specified for an ExclusiveArea the default values apply.",
    "Ordered List of predecessor inputs. The first element has the highest priority. The following elements have decreasing priorities.",
    "Ordered collection of DltArguments in the DltMessage.",
    "Ordered reference to the action items to be executed in the scope of this action list.",
    "Outer PortPrototype of this AtomicSwComponentType which belongs to the group. A port can belong to several groups or to no group at all.\r\nThis property was modified due to atpVariation (DirectedAssociationPattern).",
    "P2 timeout observation parameter.",
    "P2 timeout observation parameter. \r\n\r\nPlease note that this attribute is replaced by LinTpNode.p2Timing and shall no longer be used.",
    "PDUs handed over by the PDU Router (Transmission over the Ethernet) or PDUs handed over by SoAd (Reception over Ethernet). Multiple IPdus can be transmitted over one socket connection.",
    "PTO (Power Take Off) has an impact on the respective emission-related event (OBD). This information shall be provided by SW-C description in order to consider the PTO relevance e.g. for readiness (PID $01) computation. For events with dtcKind set to 'nonEmmissionRelatedDtc' this attribute is typically false.",
    "Parameter Group can be triggered by the J1939 request message.",
    "Parameter describing if the execution of the FrNm_Main function crosses theFlexRay cycle boundary or not.",
    "Parameter group number (PGN) of a J1939 message (parameter group, PG) that can be received or transmitted via J1939Tp. The PGN may be omitted when the a directPdu is referenced and is mapped into a CanFrameTriggering with an identifier.",
    "Parameter type defined on a corresponding axis type. References can only be made to axis parameters types which are defined within the referenced axis type.",
    "ParameterDataPrototype instance qualifying the communication resource.",
    "Parameters for this calculation algorithm.",
    "Particular Value specification for this record layout group.",
    "Payload serialization technology.",
    "Pdu Replication is a form of redundancy where the data content of one ISignalIPdu (source) is transmitted inside a set of replica ISignalIPdus. These ISignalIPdus (copies) have different Pdu IDs, identical PduCounters, identical data content and are transmitted with the same frequency.\r\nThe upper multiplicity of this role has been increased to * due to resolving an atpVariation stereotype. The previous value was 1.",
    "Pdu length in bytes. In case of dynamic length IPdus (containing a dynamical length signal), this value indicates the maximum data length. It should be noted that in former AUTOSAR releases (Rel 2.1, Rel 3.0, Rel 3.1, Rel 4.0 Rev. 1) this parameter was defined in bits. \r\n\r\nThe Pdu length of zero bytes is allowed.",
    "PduIdentifiers assigned for transmission over Tcp in case that the referencing PduActivationRoutingGroup is activated.",
    "PduIdentifiers assigned for transmission over Udp in case that the referencing PduActivationRoutingGroup is activated.",
    "Period of a CanNm message in seconds. It determines the periodic rate in the periodic transmission mode with bus load reduction and is the basis for transmit scheduling in the periodic transmission mode without bus load reduction.",
    "Period of a NmPdu in seconds. It determines the periodic rate in the periodic transmission mode with bus load reduction and is the basis for transmit scheduling in the periodic transmission mode without bus load reduction.",
    "Period of a UdpNm message in seconds. It determines the periodic rate in the periodic transmission mode with bus load reduction and is the basis for transmit scheduling in the periodic transmission mode without bus load reduction.",
    "Period of the repetition of cyclic transmissions.",
    "Period of timing event in seconds. The value of this attribute must be greater than zero.",
    "Period of timing event in seconds. The value of this attribute shall be greater than zero.",
    "Periodic Transmission Mode.",
    "Physical unit associated with the semantics of this data object. This attribute applies if no compuMethod is specified. If both units (this as well as via compuMethod) are specified the units shall be compatible.",
    "Please note that this aggregation is deprecated and will be removed in future. \r\nThe nPdu reference will be used instead.\r\nThis aggregation contains a variation point although it is not variant. Therefore, this variation point shall not exist in models. See constr_2638.",
    "Please note that this attribute is deprecated and will be removed in future.\r\n\r\nOld description:\r\nThis attribute defines the maximum number of trying to send a frame when the FrIf returns an error.",
    "Please note that this attribute is deprecated and will be removed in future.\r\n\r\nOld description:\r\nThis attribute defines the time in seconds of waiting for the next try (if retry is activated) to send via FrIf_Transmit. Specified in seconds.",
    "Please note that this attribute is deprecated and will be removed in future.\r\n\r\nThis switch determines if the respective CanNm channel is active or not. Indicates whether a particular CanNm channel shall be initialized (TRUE) or not (FALSE). If this parameter is set to FALSE the respective NM instance shall not be used during runtime.",
    "Please note that this attribute is deprecated and will be removed in future.\r\n\r\nmaxFcWait will be used instead to configure the maximum number of wait frames on receiver side. On the sender side, timeCs defines the maximum time for retries.",
    "Please note that this attribute is deprecated and will be removed in future.\r\n\r\ntimeBr will be used instead to configure the delay between two wait frames (and thus two buffer requests) on receiver side. On sender side, the main task cycle will be used.",
    "Please note that this attribute is obsolete and is no longer supported.\r\n\r\nOld description:\r\nThis parameter defines the time in seconds which the NM Coordination algorithm shall delay the release of the referenced cluster.",
    "Please note that this attribute is obsolete and is no longer supported. It is replaced by the attribute NmCoordinatorRole in NmNode.\r\n\r\nOld description:\r\nThis attribute indicates whether a NM Coordinator is an active gateway (true) or a passive gateway (false).",
    "Please note that this parameter is deprecated and will be removed in future.\r\n\r\nOld description:\r\nIf set to true this attribute enables the support of CarWakeUp bit evaluation in received NmPdus.",
    "Please note that this parameter is deprecated and will be removed in future. \r\n\r\nOld description:\r\nIf this attribute is set to true the CareWakeUp filtering is supported. In this case only the CarWakeUp bit within the NmPdu with source node identifier nmCarWakeUpFilterNodeId is considered as CarWakeUp request.",
    "Please note that this reference is deprecated and will be removed in future.\r\n\r\nA Tp Address can be assigned to an ECU without an existing TP Configuration. If TpNodes are described this reference shall not be used.",
    "Please note that this reference is deprecated and will be removed in future. \r\nThe PDU pool referenced by the FlexRayArTpChannel as nPdu will be used instead.",
    "Please note that this reference is deprecated and will be removed in the future. This reference is replaced by the J1939TpPg.directPdu reference.\r\n\r\nOld description:\r\nIn case of variable length IPdus (with system signals of variable length), an additional NPdu (with the PGN in the CAN ID) is used for messages with up to 8 bytes.",
    "Please note that this reference is deprecated and will be removed in the future. This reference is replaced by the J1939TpPg.tpSdu reference.\r\n\r\nOld description:\r\nReference to IPdus that are segmented by the Transport Protocol. \r\n\r\nTo support the low-level routing of NPdu's the NPdu is a specialization of an IPdu. More details can be found in the NPdu class description. Nevertheless the J1939TpConnection must not reference a NPdu with this tpSdu reference.",
    "Policy for a  perInstanceParameter in this BswInternalBehavior. The policy selects the options of the Schedule Manager API generation.",
    "Policy for a  releasedTrigger. The policy selects the options of the Schedule Manager API generation.",
    "Policy for a arTypedPerInstanceMemory The policy selects the options of the Schedule Manager API generation.",
    "Policy for a providedData. The policy selects the options of the Schedule Manager API generation.",
    "Policy for a requiredClientServerEntry. The policy selects the options of the Schedule Manager API generation.",
    "Policy for an  ExclusiveArea in this BswInternalBehavior. The policy selects the options of the Schedule Manager API generation.",
    "Policy for an  internalTriggeringPoint in this BswInternalBehavior.. The policy selects the options of the Schedule Manager API generation.",
    "Port Number.",
    "Position of PduCounter expressed in bits. Note that PduCounter is not allowed to cross a byte border.",
    "Position of an element in an array. Starting position is 0.",
    "Possibilities to define conditions",
    "Possibility to provide additional documentation notes while estimating the ECUResources.",
    "Possibility to provide additional documentation while defining the DataMapping.",
    "Possibility to provide additional documentation while defining the MappingConstraints.",
    "Possibility to provide additional documentation while defining the SignalPathConstraints.",
    "Possibility to provide additional documentation while defining the System. The System documentation can be composed of several chapters.",
    "Possibility to provide additional documentation while defining the System. The System documentation can be composed of several chapters.\r\nThe upper multiplicity of this role has been increased to * due to resolving an atpVariation stereotype. The previous value was \r\n.",
    "Possibility to provide additional notes while defining a model element (e.g. the ECU Configuration Parameter Values). These are not intended as documentation but are mere design notes.",
    "Possibility to provide additional notes while defining the ECU Configuration Parameter Values. These are not intended as documentation but are mere design notes.",
    "Possibility to provide additional notes while defining the FrameMapping.",
    "Possibility to provide additional notes while defining the IPduMapping.",
    "Possibility to provide additional notes while defining the ScheduleTableEntries.",
    "Possibility to provide additional notes while defining the SignalMapping",
    "Possible errors that may by raised by the referring operation.",
    "Possible operation modes\r\n\r\nTrue: Time-Triggered\r\n\r\nFalse: Event-Synchronised-Time-Triggered",
    "Pre-shared key identity shared during the handshake among the communication parties, to establish a TLS connection if the handshake is based on the existence of a pre-shared key.",
    "PreciseOriginTimestamp from the Follow_Up Message Field shall be included in CRC calculation.",
    "Priority ID of a CAN XL message.",
    "Priority of assignment (1 is highest). If a new address from an assignment method with a higher priority is available, it overwrites the IP address previously assigned by an assignment method with a lower priority.",
    "Priority of the event, in view of full event buffer. A lower value means higher priority.",
    "Programming language the implementation was created in.",
    "Properties to configure MACsec (Media access control security) and the MKA (MACsec Key Agreement) for the CouplingPort (PHY).",
    "Properties to configure the MKA instance (KaY) for a controlled CouplingPort (PaE).",
    "Protocol type used by the J1939TpConnection",
    "Protocol type.",
    "Provide the minimum time in seconds between two consecutive  transmissions of an ROE event.",
    "Provided communication attributes per interface element (data element or operation).",
    "Provided service instances.\r\nThis aggregation contains a variation point although it is not variant. Therefore, this variation point shall not exist in models. See constr_2638.",
    "Provides a formal worst case system usage. The unit is byte.",
    "Provides description on the rough estimate of the ExecutionTime.",
    "Provides information on the HardwareConfiguration used to specify this ExecutionTime.",
    "Provides information on the MemorySectionLocation which is involved in the ExecutionTime description.",
    "Provides information on the detailed SoftwareContext used to provide the ExecutionTime description.",
    "Provides the ability to express the semantics of a Collection depending on the intended use case. The collectionSemantics is specified as a NameToken which must be agreed by all stakeholders.",
    "Provides the amount of updates to this block from the application point of view. It has to be provided in \"number of write access per year\".",
    "Proxy of a variation points in the C/C++ implementation.",
    "Query to the ECU Configuration Description.",
    "RPT event id used for service points call.",
    "Rate policies to be applied for this CouplingPort.",
    "Reboot the platform after the verification of the activated software.",
    "Reboot the platform before the switch to the activated software.",
    "Record layout for this data object.",
    "Reentrancy from the viewpoint of clients invoking the service via the BSW Scheduler:\r\n\r\n* true: Enables the service to be invoked again, before the service has finished. \r\n\r\n* false: It is prohibited to invoke the service again before is has finished.",
    "Reentrancy from the viewpoint of function callers:\r\n\r\n* true: Enables the service to be invoked again, before the service has finished.\r\n\r\n* false: It is prohibited to invoke the service again before is has finished.",
    "Refer to a routine control that is used to authenticate and persist the secure coding data.",
    "Refer to write data by identifier instances that have the semantics to be a secure coding DID.",
    "Reference a lower level [ARMetaClass{TimingClock}], which is derived from a higher level [ARMetaClass{TimingClock}].",
    "Reference between a channel with role managing channel and a channel with role managed channel.",
    "Reference from the ComplexDeviceDriverSwComponentType to the description of the used HwElements.",
    "Reference from the EcuAbstractionComponentType to the description of the used HwElements.",
    "Reference from the Sensor Actuator Software Component Type to the description of the actual hardware.",
    "Reference target is member of a TlsConnectionGroup.",
    "Reference to \r\n\r\n* the vendor specific EcucModuleDef used in this BswImplementation if it represents a single module\r\n\r\n* several EcucModuleDefs used in this BswImplementation if it  represents a cluster of modules\r\n\r\n* one or no EcucModuleDefs used in this BswImplementation if it represents a library",
    "Reference to ApplicationPartitions that are mapped to an EcuPartition.",
    "Reference to CompuMethod of category TEXTTABLE that defines the supported user-defined privacy levels.",
    "Reference to DltMessages that can be transported over the DltLogChannel in the DltPdu.",
    "Reference to DltMessages that can be transported over the DltLogChannel.",
    "Reference to DltPdu that is received by the DltLogChannel",
    "Reference to DltPdu that is transmitted by the DltLogChannel.",
    "Reference to DoIPTargetAddress which is activated on this DoIpRoutingActivation.",
    "Reference to E2E profile configuration settings that are valid to protect the referenced event or field notifier.",
    "Reference to E2E profile configuration settings that are valid to protect the referenced method, field getter or field setter.",
    "Reference to EcuPartition to which the ApplicationPartitions are assigned.",
    "Reference to IPdus that are segmented by the Transport Protocol. \r\n\r\nTo support the low-level routing of NPdu's the NPdu is a specialization of an IPdu. More details can be found in the NPdu class description. Nevertheless the J1939TpConnection must not reference a NPdu with this tpSdu reference.",
    "Reference to IPdus that are segmented by the Transport Protocol. If more than one IPdu is referenced, the IPdus are used when the same PGN is received in parallel via different transport protocols (BAM, CMDT, direct) on the same J1939TpConnection.",
    "Reference to MKA participant settings supported on the CouplingPort.",
    "Reference to NPdus that are part of the PduPool.",
    "Reference to OsTaskProxies assigned to the EcuInstance.",
    "Reference to OsTaskProxy to which the RteEvent is mapped.",
    "Reference to PPortPrototype that is mapped to the DltLogSink.",
    "Reference to Pdu for which the ContainedIPduProps are valid.",
    "Reference to PduTriggerings that are connected to each other by a GeneralPurposeConnection.",
    "Reference to PhysicalChannel that is used in the bus mirroring as sourceChannel or targetChannel.\r\nThis property was modified due to atpVariation (DirectedAssociationPattern).",
    "Reference to RPortPrototype that is mapped to a DltLogSink",
    "Reference to RPortPrototype typed by a FirewallModeSwitchInterface",
    "Reference to RoutingGroups that can be enabled or disabled.",
    "Reference to RteEvent that is mapped to the OsTaskProxy.",
    "Reference to RteEvents that are not allowed to be mapped into the same OsTask.",
    "Reference to SecureComProps applicable to the service instance.",
    "Reference to ServiceInstances that are participating in a Partial Network Cluster.",
    "Reference to SupervisionModeCondition (Condition under which the configuration made under this SupervisionMode are to be applied).",
    "Reference to SwComponentPrototypes for which the dedicated or exclusive mapping is defined.",
    "Reference to UUDT responses.",
    "Reference to UdpNm cluster specific configuration settings.",
    "Reference to a ApplicationRecordElement in the context of the dataElement or in the context of a composite element.",
    "Reference to a ApplicationRecordElement in the context of the mappedOperation or in the context of a composite element.",
    "Reference to a BswServiceDependency that links ServiceNeeds to BswModuleEntries.",
    "Reference to a ClientServerOperation that represents the getter Method in the Field.",
    "Reference to a ClientServerOperation that represents the setter Method in the Field.",
    "Reference to a ClientServerOperation, which is mapped to a call SystemSignal and a return SystemSignal.",
    "Reference to a ClientSeverOperation that is located in a ClientSeverInterface.",
    "Reference to a Collection of Log or Trace messages",
    "Reference to a Com IPdu which is routed to the IPduM module and is combined to a multiplexedPdu.",
    "Reference to a DataPrototype or to an internal structure of a DataPrototype in the context of a ServiceInterface.",
    "Reference to a DataPrototype that is transported in the serialized ISignal.",
    "Reference to a DebounceAlgorithm assigned to a DiagnosticEvent.",
    "Reference to a DiagnosticEvent to which a DebounceAlgorithm is assigned.",
    "Reference to a DiagnosticEvent to which a J1939 Diagnostic Trouble Code is assigned.",
    "Reference to a DiagnosticEvent to which a StorageConditionGroup is assigned.",
    "Reference to a DiagnosticEvent to which a UDS Diagnostic Trouble Code  is assigned.",
    "Reference to a DiagnosticEvent to which an EnableConditionGroup is assigned.",
    "Reference to a DiagnosticEvent to which an OperationCycle is assigned.",
    "Reference to a DltApplication that defines the applicationId",
    "Reference to a DoIPRoutingActivation describing the possible routing activations of the DoIPTester.",
    "Reference to a Field that is deployed to a middleware transport layer.",
    "Reference to a Fire&Forget Method that is located in a ServiceInterface.",
    "Reference to a Flow Metering Entry.",
    "Reference to a Frame that is processed by the slave node.",
    "Reference to a HwElement of category CommunicationController in the ECU Resource Template.",
    "Reference to a HwElement of category ECU in the ECU Resource Template.",
    "Reference to a I-Pdu, N-Pdu or NmPdu that is transmitted in the Frame.",
    "Reference to a ISignal that is mapped into the ISignalIPdu. \r\n\r\nEach ISignal contained in the ISignalGroup shall be mapped into an IPdu by an own ISignalToIPduMapping. The references to the ISignal and to the ISignalGroup in an ISignalToIPduMapping are mutually exclusive.",
    "Reference to a ImplementationRecordElement in the context of the mappedOperation or in the context of a composite element. This reference shall only be used if the ArgumentDataPrototype that is referenced by the ClientServerCompositeTypeMapping is typed by an ImplementationDataType.",
    "Reference to a J1939 Diagnostic Trouble Code to which a DiagnosticEvent is assigned.",
    "Reference to a Method that is located in a ServiceInterface.",
    "Reference to a Operation, which is mapped to a signal group.",
    "Reference to a PNC Gateway ECU for PNCs which do not have a static channel mapping. This is needed to describe dynamic PNCs that can be learned only at run-time and which have no relation to an ISignalIPduGroup.",
    "Reference to a Partial Network that is included in the NmNetworkHandle.",
    "Reference to a Pdu that is mapped to a socket connection.",
    "Reference to a Pdu that is transmitted over a socket connection.",
    "Reference to a Pdu that will be protected against unauthorized manipulation and replay attacks.",
    "Reference to a PduTriggering that shall be transported using the \"TP\" semantics.",
    "Reference to a PortInterfaceMapping specifying the mapping of unequal named PortInterface elements of the two different PortInterfaces typing the two PortPrototypes which are referenced by the ConnectorPrototype.",
    "Reference to a Preshared Key Identity.",
    "Reference to a ProvidedServiceInstance mapped to a given PPortPrototype in the scope of the SwClusterDesign.",
    "Reference to a ROE message.",
    "Reference to a RPortPrototype representing a checkpoint for Platform Health Management.",
    "Reference to a RPortPrototype representing a supervised entity for Platform Health Management.",
    "Reference to a RequiredServiceInstance mapped to a given RPortPrototype in the scope of the SwClusterDesign.",
    "Reference to a SecOC JobRequirement that defines requirements for the cryptographic job that need to be executed.",
    "Reference to a SecureComProps definition to be used for the Integrity Check Value (ICV) calculation and verification.\r\nThis property was modified due to atpVariation (DirectedAssociationPattern).",
    "Reference to a ServiceInstance from which the corresponding ServiceInterface elements will be transported in the signal-based way over a communication medium.",
    "Reference to a ServiceInstance that is mapped to the Machine.",
    "Reference to a ServiceInstance that is represented in the Software Component by the mapped group of PortPrototypes.",
    "Reference to a ServiceInterface that is deployed to a middleware transport layer.",
    "Reference to a ServiceInterfaceDeployment that identifies the ServiceInterface that is represented by the ServiceInstance.",
    "Reference to a ServiceInterfaceElementMapping specifying the mapping of unequal named ServiceInterface elements of the two different ServiceInterfaces typing the two PortPrototypes which are referenced by the PassThroughSwConnector.",
    "Reference to a StorageConditionGroup assigned to a DiagnosticEvent.",
    "Reference to a Stream Gate Entry.",
    "Reference to a SwcServiceDependencyType that links ServiceNeeds to SWC service ports.",
    "Reference to a SwcServiceDependencyType that links ServiceNeeds to SWC service ports. This reference can be used in early stages of the development in order to identify the SwcServiceDependency without a full System Context.",
    "Reference to a SystemSignal with \"signalLength\" = 0 and an UpdateBit.",
    "Reference to a TLS JobRequirement that defines requirements for the cryptographic job that need to be executed.",
    "Reference to a TpConnection that identifies the receiver(s) of a particular communication",
    "Reference to a Trigger that is deployed to a middleware transport layer.",
    "Reference to a Trigger that is located in a TriggerInterface in case that the Fire&Forget Method is represented by this Trigger.",
    "Reference to a VLAN that is included in the NmNetworkHandle.",
    "Reference to a VariableDataPrototype of a PRPortPrototype of the NvBlockSwComponentType providing write and read access to the RAM Block.",
    "Reference to a VariableDataPrototype of a RAM Block.",
    "Reference to a VariableDataPrototype of a pPort of the NvBlockComponent providing read access to the RAM Block.If there is no PortPrototype providing read access (write-only) the reference can be omitted.",
    "Reference to a VariableDataPrototype of a rPort of the NvBlockComponent providing write access to the RAM Block. If there is no port providing write access (read-only) the reference can be omitted.",
    "Reference to a VariableDataPrototype representing the target of signal/service translation.",
    "Reference to a VariableDataPrototype that is located in a SenderReceiverInterface in case that the Fire&Forget Method is represented by this VariableDataPrototype.",
    "Reference to a VariableDataPrototype that is located in a SenderReceiverInterface.",
    "Reference to a VariableDataPrototype that represents the notifier in the Field.",
    "Reference to a applicationRecordElement in the context of the mappedOperation or in the context of a composite element. This reference shall only be used if the ArgumentDataPrototype that is referenced by the ClientServerCompositeTypeMapping is typed by an ApplicationDataType.",
    "Reference to a checkpoint in the context of AliveSupervision.",
    "Reference to a collection of Log or Trace messages that will be used by the application.",
    "Reference to a communication security protocol and its configuration settings that will provide communication security for Service Discovery messages that are transmitted using multicast, e.g. FindService message.",
    "Reference to a communication security protocol and its configuration settings that will provide communication security for Service Discovery messages that are transmitted using unicast, e.g. OfferService as answer to a FindService message. \r\n\r\n.",
    "Reference to a concrete CryptoJob defined in the CryptoDeployment.",
    "Reference to a concrete key defined in the CryptoDeployment.",
    "Reference to a custom defined specification element.",
    "Reference to a data element on the PPortPrototype and to the same data element on the RPortPrototype.",
    "Reference to a data element with a composite datatype from which one element is mapped to a SystemSignal.",
    "Reference to a data element with a composite datatype which is mapped to a signal group.",
    "Reference to a field getter call message that is protected by a security protocol.",
    "Reference to a field getter return message that is protected by a security protocol.",
    "Reference to a field notifier that is protected by a security protocol.",
    "Reference to a field notifier that is protected by an E2E profile.",
    "Reference to a field setter call message that is protected by a security protocol.",
    "Reference to a field setter return message that is protected by a security protocol.",
    "Reference to a field that is contained in the composite ServiceInterface.",
    "Reference to a field that is contained in the source ServiceInterface.",
    "Reference to a field that is located in a ServiceInterface.",
    "Reference to a group of unconditional frames that share the same frame slot. In case that more than one of the declared frames needs to be transferred, the one first listed shall be chosen. \r\n\r\nWithin a channel a LIN Frame shall be referenced by only one FrameTriggering. This allows a derivation of the identifier of a substituted Frame. The identifier is specified in FrameTriggering element. \r\n\r\nA LinUnconditionalFrame associated with a LinSporadicFrame may not be allocated in the same LinScheduleTable as the sporadic frame.",
    "Reference to a higher level [ARMetaClass{TimingClock}], from which a lower level [ARMetaClass{TimingClock}] is derived.",
    "Reference to a list of IPv6 Extension Headers allowed for this SocketConnection. If no list is referenced all IPv6 Extension Headers are allowed and processed.",
    "Reference to a list of TCP options allowed for this SocketConnection.",
    "Reference to a macMulticastGroup.",
    "Reference to a master (Time Sync Server).",
    "Reference to a method call message that is protected by a security protocol.",
    "Reference to a method defined in the context of a ServiceInterface.",
    "Reference to a method return message that is protected by a security protocol.",
    "Reference to a method that is contained in the composite ServiceInterface.",
    "Reference to a method that is contained in the source ServiceInterface.",
    "Reference to a method that is deployed to a middleware transport layer.",
    "Reference to a method, a field getter or a field setter that is protected by the E2E profile.",
    "Reference to a physical request message.",
    "Reference to a port where the mode will be reported for this health channel.",
    "Reference to a process in the scope of a HealthChannelExternalMode.",
    "Reference to a providedServiceInstance to get the instanceIdentifier information from the ProvidedServiceInstance.",
    "Reference to a reusable startup configuration with startup parameters.",
    "Reference to a set of ISignals that shall always be kept together.",
    "Reference to a set of SystemSignals that shall always be kept together.",
    "Reference to a set of serialization properties that are defined for ServiceInterfaces of the Executable.",
    "Reference to a signal to which a condition is attached.",
    "Reference to a specific ECU Instance description.",
    "Reference to a specific Implementation description.\r\n\r\nImplementation to be used by the specified SW component instance. This allows to achieve more precise estimates for the resource consumption that results from mapping the instance of an atomic SW component onto an ECU.",
    "Reference to a specific PortPrototype that represents the ServiceInstance.",
    "Reference to a specific PortPrototype that represents the raw data stream to the application.",
    "Reference to a specific PortPrototypes that represents the ServiceInstance.",
    "Reference to a specific instanceId that represents the ApplicationEndpoint that is independent of the Transport Layer.",
    "Reference to a synchronized time domain this offset time domain is based on. The reference source is the offset time domain. The reference target is the synchronized time domain.",
    "Reference to a trigger defined in the context of a ServiceInterface.",
    "Reference to a trigger that is contained in the source ServiceInterface.",
    "Reference to a trigger that is contained in the target ServiceInterface.",
    "Reference to additional settings for the E2E state machine.",
    "Reference to an ApplicationArrayElement in an array.",
    "Reference to an ApplicationPartition to which a SwComponentPrototype is mapped.",
    "Reference to an ApplicationRecordElement in the context of the dataElement or in the context of a composite element.",
    "Reference to an Data NPdu.",
    "Reference to an EnableConditionGroup assigned to a DiagnosticEvent.",
    "Reference to an Event or an element inside of the Event that will be mapped to an ISignalTriggering for signal-based transport over a communication channel.",
    "Reference to an Event that is deployed to a middleware transport layer.",
    "Reference to an Event that is located in a ServiceInterface.",
    "Reference to an IPdu that is segmented by the Transport Protocol.",
    "Reference to an ISignalGroup that is mapped into the SignalIPdu. \r\nIf an ISignalToIPduMapping for an ISignalGroup is defined, only the UpdateIndicationBitPosition and the transferProperty is relevant. The startPosition and the packingByteOrder shall be ignored. \r\n\r\nEach ISignal contained in the ISignalGroup shall be mapped into an IPdu by an own ISignalToIPduMapping. The references to the ISignal and to the ISignalGroup in an ISignalToIPduMapping are mutually exclusive.",
    "Reference to an ISignalIPduGroup that allows mapping of this PNC without statically mapping this PNC directly to a channel. This is needed to describe dynamic PNCs that can be learned only at run-time and which have also a relation to an ISignalIPduGroup.",
    "Reference to an ISignalTriggering being part of a fire and forget message.",
    "Reference to an ImplementationDataTypeElement in an array.",
    "Reference to an ImplementationRecordElement in the context of the dataElement or in the context of a composite element.",
    "Reference to an NPdu (Single Frame, First Frame or Consecutive Frame).\r\n\r\nThe Single Frame network protocol data unit (SF N_PDU) shall be sent out by the sending network entity and can be received by one or multiple receiving network entities.\r\nThe Single Frame (SF N_PDU) shall be sent out to transfer a service data unit that can be transferred via a single service request to the data link layer. This network protocol data unit shall be sent to transfer unsegmented messages.\r\n\r\nThe First Frame network protocol data unit (FF N_PDU) identifies the first network protocol data unit (N_PDU) of a segmented message transmitted by a network sending entity and received by a receiving network entity. \r\n\r\nThe Consecutive Frame network protocol data unit (CF N_PDU) transfers segments (N_Data) of the service data unit message data (<MessageData>). All network protocol data units (N_PDUs) transmitted by the sending entity after the First Frame network protocol data unit (FF N_PDU) shall be encoded as Consecutive Frames network protocol data units (CF N_PDUs).",
    "Reference to an OperationCycle assigned to a DiagnosticEvent.",
    "Reference to an OsTaskProxy that is created in the context of a SwComponent.",
    "Reference to an OsTaskProxy that is created in the context of an EcuInstance.",
    "Reference to an UDS Diagnostic Trouble Code  assigned to a DiagnosticEvent.",
    "Reference to an aging algorithm in case that an aging/unlearning of the event is allowed.",
    "Reference to an applicable resource group.",
    "Reference to an argument in the context of the mappedOperation.",
    "Reference to an argument in the context of the mappedOperation. \r\nOnly ClientServerCompositeTypeMapping elements that are directly aggregated by the ClientServerToSignalGroupMapping shall contain this reference.",
    "Reference to an element in an array.",
    "Reference to an event that is contained in the composite ServiceInterface.",
    "Reference to an event that is contained in the source ServiceInterface.",
    "Reference to an event that is part of the EventGroup.",
    "Reference to an event that is protected by a security protocol.",
    "Reference to an event that is protected by the E2E profile.",
    "Reference to an event that is provided.",
    "Reference to an event that is requested.",
    "Reference to an field or an element inside of the field that will be mapped to an ISignalTriggering for signal-based transport over a communication channel.",
    "Reference to an indexed array element in the context of the dataElement or in the context of a composite element.",
    "Reference to an indexed array element in the context of the mappedOperation or in the context of a composite element.",
    "Reference to an ordered list of Data Identifiers.",
    "Reference to an unconditional frame  that transmits the response error.\r\nThe referenced LinFrameTriggering shall contain a reference to an unconditionalFrame.",
    "Reference to another LogicalExpression which shall be considered in the evaluation of this LogicalExpression.",
    "Reference to any identifiable element. This allows to use Sdg even to establish arbitrary relationships.",
    "Reference to applicable resource groups.",
    "Reference to authentication properties that are valid for this SecuredIPdu.",
    "Reference to collection of FrameTriggerings that are used for the wakeup of this PNC (Application Frames or Nm Frames can be used). This reference is only valid if this EcuExtract represents an ECU which has direct PNC access, i.e. ECU is directly connected to a network which supports partial network.",
    "Reference to communication security configuration settings that are valid for the tcp unicast endpoint (Tcp Port + Unicast IP Address) defined by the ServiceInstanceToMachineMapping.",
    "Reference to communication security configuration settings that are valid for the tcp unicast endpoint (Tcp Port + unicast IP Address) defined by the PlatformModuleEthernetEndpointConfiguration.",
    "Reference to communication security configuration settings that are valid for the udp multicast endpoint (Port + Multicast IP Address) defined by the ServiceInstanceToMachineMapping.",
    "Reference to communication security configuration settings that are valid for the udp unicast endpoint (Udp Port + Unicast IP Address) defined by the ServiceInstanceToMachineMapping.",
    "Reference to communication security configuration settings that are valid for the udp unicast endpoint (Udp Port + unicast IP Address) defined by the PlatformModuleEthernetEndpointConfiguration.",
    "Reference to constraints that are valid for this SwComponentType.",
    "Reference to coupled CAN Clusters.",
    "Reference to coupled FlexRay Clusters.",
    "Reference to coupled UdpNm Clusters.",
    "Reference to custom SdgDefs that extend the data format of this baseline,",
    "Reference to custom specification of constraint.",
    "Reference to custom specifications that extend this baseline,",
    "Reference to data packets that are transmitted over Ethernet. Each data packet can contain multiple IPdus. \r\n\r\nPlease note that this reference is deprecated.",
    "Reference to enableConditions that are part of the EnableConditionGroup.\r\nThis property was modified due to atpVariation (DirectedAssociationPattern).",
    "Reference to executable that is executed in the process.",
    "Reference to executables that are contained in the Adaptive Autosar Application.",
    "Reference to firewall states in which the Firewall is active. If one of the referenced ModeDeclarations is the current firewall state then the firewall rule shall be considered as active.",
    "Reference to freshness properties that are valid for this SecuredIPdu.",
    "Reference to functional request messages.",
    "Reference to identifiable elements on the first \"side\".",
    "Reference to identifiable elements on the second \"side\".",
    "Reference to one ECU instance that implements the gateway.",
    "Reference to one modeDeclaration which is OR associated in the context of the ModeDrivenTransmissionModeCondition.",
    "Reference to one modeDeclaration which is OR associated in the context of the TriggerIPduSendCondition.",
    "Reference to one or more sets of recommended configuration values for this module or module cluster.",
    "Reference to one or two Modes that initiate the Mode Switch Event.",
    "Reference to one status of a PhmHealthChannel.",
    "Reference to output sinks for log or trace messages that are produced on the Machine.",
    "Reference to properties that are shared between MAC Security Key Agreement Entities.",
    "Reference to related McDataElement describing the implementation of \"RP global buffer\", \"RP global measurement buffer\", \"RP enabler flag\" and the \"RP runnable disabler flag\".\r\nThis aggregation contains a variation point although it is not variant. Therefore, this variation point shall not exist in models. See constr_2638.",
    "Reference to related McDataElements describing the implementation of \"RP runnable disabler flag\" and \"stimulation enabler flag\"\r\n\r\nThe possible roles of the RoleBasedMcDataAssignment.role attribute are:\r\n* RpRunnableDisablerFlag\r\nThis aggregation contains a variation point although it is not variant. Therefore, this variation point shall not exist in models. See constr_2638.",
    "Reference to replica Pdus of this IPdu.",
    "Reference to resource for which the dependency is depicted.",
    "Reference to storageConditions that are part of the StorageConditionGroup.\r\nThis property was modified due to atpVariation (DirectedAssociationPattern).",
    "Reference to the  Flow Control NPdu.\r\n\r\nThe Flow Control network protocol data unit (FC N_PDU) is identified by the Flow Control protocol control information (FC N_PCI). The Flow Control network protocol data unit (FC N_PDU) instructs a sending network entity to start, stop or resume transmission of CF N_PDUs. The Flow Control network protocol data unit shall be sent by the receiving network layer entity to the sending network layer entity, when ready to receive more data, after correct reception of:\r\n\r\na) First Frame network protocol data unit (FF N_PDU) \r\n\r\nb) the last Consecutive Frame network protocol data unit (CF N_PDU) of a block of Consecutive Frames (CF N_PDU) if further Consecutive Frame network protocol data unit (CF N_PDU) need(s) to be sent.",
    "Reference to the  Flow Control NPdu.\r\nPlease note that this reference is deprecated and will be removed in future.",
    "Reference to the ACF bus parts (Can or Lin frames) which shall be handled by this mapping.",
    "Reference to the ACF buses which shall be handled by this mapping.",
    "Reference to the AdaptiveModuleInstantiation that reports the SecurityEvent.",
    "Reference to the Asynchronous Traffic Shaper (ATS).",
    "Reference to the CanTpChannel on which this CanTpConnection is realized.",
    "Reference to the ClearCondition which is mapped to a SWC service port.",
    "Reference to the ClientServerOperation that is called by the client.",
    "Reference to the Command NPdus (TP.CM) that are used in the CMDT (Connection Mode Data Transfer) in both directions. \r\n\r\nBAM uses one TP.CM (Transport Protocol Command). \r\n\r\nThe flowControlNPdu has a fixed length of 8 bytes.\r\n\r\nPlease note that the role name \"flowControlIPdu\" is misleading and is kept for backward compatibilty reasons.",
    "Reference to the CommunicationConnector (VLAN) for which the network configuration is defined.",
    "Reference to the CommunicationConnector in the System Template",
    "Reference to the CommunicationConnector that represents the UdpNmNode in the topology description.",
    "Reference to the CommunicationController in the System Template",
    "Reference to the ConstantSpecificationMapping to be applied for the particular InternalBehavior",
    "Reference to the ConstantSpecificationMapping to be applied for the particular NVRAM Block",
    "Reference to the ConstantSpecificationMapping to be applied for the particular ParameterSwComponentType",
    "Reference to the CouplingPort to be taken into account as the egress role for this SwitchStreamIdentification.",
    "Reference to the CouplingPort to be taken into account as the ingress role for this SwitchStreamIdentification.",
    "Reference to the CryptoCertifcate in the Crypto Stack.",
    "Reference to the CryptoKeySlot",
    "Reference to the CryptoKeySlot in the Crypto Stack.",
    "Reference to the CryptoServiceCertificate in eligible AdaptiveModuleInstantiation (see [ARTraceRefExt{TPS_MANI_01458}]).",
    "Reference to the CryptoServiceKey in eligible AdaptiveModuleInstantiation (see [ARTraceRefExt{TPS_MANI_01459}])",
    "Reference to the DDS Partition this topic is communicated.",
    "Reference to the DDS Qos profile used for this ISignal.",
    "Reference to the DDS Topic used for this Event.",
    "Reference to the DataTypeMapping to be applied for the particular InternalBehavior",
    "Reference to the DataTypeMapping to be applied for the particular NVRAM Block.",
    "Reference to the DataTypeMapping to be applied for the particular ParameterSwComponentType",
    "Reference to the DdsTopic used as fragment for the topic name of field getters.",
    "Reference to the DdsTopic used as fragment for the topic name of field setters.",
    "Reference to the DdsTopic used as fragment for the topic name of method replies.",
    "Reference to the DdsTopic used as fragment for the topic name of method requests.",
    "Reference to the DdsTopic.",
    "Reference to the DiagnosticAuthentication that is assigned to a SWC service port.",
    "Reference to the DiagnosticCondition which is mapped to a SWC service port.",
    "Reference to the DiagnosticEvent that is assigned to SWC service ports.",
    "Reference to the DiagnosticEvent that is assigned to a SWC service port.",
    "Reference to the DiagnosticIndicator which is mapped to a SWC service port.",
    "Reference to the DiagnosticOperationCycle that is assigned to SWC service ports.",
    "Reference to the DiagnosticValueNeeds indicating the access to the current value via signalBasedDiagnostics.",
    "Reference to the DltContext to which this mapping belongs.",
    "Reference to the DltLogSink to which the PersistencyDeployment is mapped",
    "Reference to the DltMessage that has to be routed in the trace switch",
    "Reference to the DoIP Design that this DoIpInstantiation implements.",
    "Reference to the DoIP network configuration design that this DoIpNetworkConfiguration implements.",
    "Reference to the ECU this estimation is done for.",
    "Reference to the Ecu representation in the Log And Trace Extract.",
    "Reference to the EcuInstance in the System Template",
    "Reference to the EnableCondition which is mapped to a SWC service port.",
    "Reference to the EthernetCluster (Link) on which the KaY participants are located",
    "Reference to the EventGroup which encapsulates the signal-based payload.",
    "Reference to the ExclusiveArea this execution time is provided for.",
    "Reference to the ExecutableEntitites located in this section. This allows to locate different ExecutableEntitities in different sections even if the associated SwAddrmethod is the same.\r\n\r\nThis is applicable to code sections only.",
    "Reference to the Firewall module",
    "Reference to the Flow Control NPdu.",
    "Reference to the GlobalSupervision as source for the health channel.",
    "Reference to the GlobalTimeDomain this BusMirrorChannelMapping shall be synchonized with.\r\nThis property was modified due to atpVariation (DirectedAssociationPattern).",
    "Reference to the GlobalTimeDomain this DltConfig shall be synchronized with\r\nThis property was modified due to atpVariation (DirectedAssociationPattern).",
    "Reference to the GlobalTimeDomain this IEEE1722TpConnection shall be synchronized with.\r\nThis property was modified due to atpVariation (DirectedAssociationPattern).",
    "Reference to the HealthChannels which shall be considered for the evaluation of the LogicalExpression.",
    "Reference to the HwPinPortGroup of category CommunicationPort. The connection to the HwCommunicationController is described in the Ecu Resource Description.",
    "Reference to the IEEE1722TpConnection.",
    "Reference to the IPdu that is segmented by the Transport Protocol.",
    "Reference to the IPdu that is segmented by the Transport Protocol. \r\n\r\nThe source address of the transmitted NPdu is determined by the configured source CommunicationConnector.\r\nThe target address of the transmitted NPdu is determined by the configured target CommunicationConnector.",
    "Reference to the IPdu that is segmented by the Transport Protocol. \r\nIf support of both sending and receiving is used, this association references the IPdu used for the additional second direction.\r\n\r\nThe source address of the transmitted NPdu is determined by the configured target CommunicationConnector.\r\nThe target address of the transmitted NPdu is determined by the configured source CommunicationConnector.",
    "Reference to the IPdu that is segmented by the Transport Protocol. If support of both sending and receiving is used, this association references the IPdu used for the additional second direction.",
    "Reference to the ISignal.",
    "Reference to the ISignalGroup that is to be protected.",
    "Reference to the ISignalIPdu that transmits the protected ISignalGroup.",
    "Reference to the ISignalTriggering that is used to transport a piece of data of a notifier in a signal-based way over a communication channel.",
    "Reference to the ISignalTriggering that is used to transport a piece of data of an event that is defined in a  ServiceInterface in a signal-based way over a communication channel.",
    "Reference to the ISignalTriggering that is used to transport the getter method call in a signal-based way over a communication channel.",
    "Reference to the ISignalTriggering that is used to transport the getter method response in a signal-based way over a communication channel.",
    "Reference to the ISignalTriggering that is used to transport the method call in a signal-based way over a communication channel.",
    "Reference to the ISignalTriggering that is used to transport the method response in a signal-based way over a communication channel.",
    "Reference to the ISignalTriggering that is used to transport the setter method call in a signal-based way over a communication channel.",
    "Reference to the ISignalTriggering that is used to transport the setter method response in a signal-based way over a communication channel.",
    "Reference to the ISignalTriggering that is used to transport the trigger that is defined in a ServiceInterface in a signal-based way over a communication channel.",
    "Reference to the Ipdu for which the I-Pdu triggering is defined. One I-Pdu can be triggered on different channels (PduR fan-out).",
    "Reference to the J1939 Controller Application that is mapped to the referenced J1939NmNode.",
    "Reference to the LinSlaveEcu.",
    "Reference to the LocalSupervisions which are used to derive the status of this GlobalSupervision.",
    "Reference to the Log&Trace channel that contains the log/trace message output.",
    "Reference to the Log&Trace channel that contains the settings for the log/trace message output for a tuple of ApplicationId and ContextId (verbose mode) or a SessionId (non-verbose mode).",
    "Reference to the Machine to which the ServiceInstance is mapped.",
    "Reference to the MachineDesign this Machine is implementing.",
    "Reference to the MemoryDestination which is mapped to a SWC service port.",
    "Reference to the MemorySection which is mapped on a certain hardware memory segment.",
    "Reference to the ModeDeclaration which is taken as the comparator for the health channel's reported mode.",
    "Reference to the Modes that disable the Event.",
    "Reference to the NmEcu that contains this NmNode. (CommunicationController that is referenced by the NmNode shall be contained in the EcuInstance that is referenced by the NmEcu).",
    "Reference to the PNCs which control the offer/subscribe behavior of the translated service instance.",
    "Reference to the Pdu for which the PduTriggering is defined. One I-Pdu can be triggered on different channels (PduR fan-out). The Pdu routing by the PduR is only allowed for subclasses of IPdu. \r\n\r\nNevertheless is the reference to the Pdu element necessary since the PduTriggering element is also used to specify the sending and receiving connections to EcuPorts.",
    "Reference to the Pdu transported in the IEEE1722Tp channel.",
    "Reference to the PduTriggering that is used for transmission of the mirrored frames on the targetChannel.\r\nPlease note that on FlexRay several targetPduTriggerings may be used. For all other communication channels only a single targetPduTriggering is supported.\r\nThis property was modified due to atpVariation (DirectedAssociationPattern).",
    "Reference to the PduTriggering used for the upper layer transport of this DdsOperation request message.",
    "Reference to the PduTriggering used for the upper layer transport of this DdsOperation response message.",
    "Reference to the PduTriggerung used for the upper layer transport of this DdsEvent message.",
    "Reference to the Process in which the Executable that contains the SoftwareComponent and the referenced PortPrototype is executed.",
    "Reference to the Process in which the enclosing ServiceInstanceToPortPrototypeMapping is executed.",
    "Reference to the Process that is monitored by the DltLogChannel.",
    "Reference to the Process this NoSupervision applies to.",
    "Reference to the Process this PhmContribution shall be applied to.",
    "Reference to the Process this checkoint shall be monitored.",
    "Reference to the ProcessDesign in which the Executable that contains the SoftwareComponent and the referenced PortPrototype is executed.",
    "Reference to the ProcessDesign that is monitored by the DltLogChannel.",
    "Reference to the QOS Profile used for the service.",
    "Reference to the QOS Profile used for this Event.",
    "Reference to the RPortPrototype to which Log or Trace messages are assigned.",
    "Reference to the SecurityEvent that is reported by the AdaptiveModuleInstantiation.",
    "Reference to the SecurityLevel which is mapped to a SWC service port.",
    "Reference to the ServiceInstance  mapped to a SWC service port with DiagnosticUploadDownloadNeeds.",
    "Reference to the ServiceInstance  mapped to a SWC service port.",
    "Reference to the ServiceInstances  mapped to a SWC service port with DiagnosticGenericUdsNeeds.",
    "Reference to the ServiceInterface that is instantiated with the TransportLayerIndependentInstanceId.",
    "Reference to the ServiceInterfaceElementSecureComConfig element in the COM config.",
    "Reference to the ServiceInterfaces which belong to the same versioning.",
    "Reference to the SomeipEventGroup in the System Manifest for which the ServiceInstance related EventGroup settings are valid.",
    "Reference to the SomeipEventGroups this SomeipRemoteMulticastConfig applies to.",
    "Reference to the SomeipEventGroups this SomeipRemoteUnicatConfig applies to.",
    "Reference to the StorageCondition which is mapped to a SWC service port with DiagnosticStorageConditionNeeds.",
    "Reference to the SupervisionCheckpoint which is defined as the terminating checkpoint of this AliveSupervision.",
    "Reference to the SupervisionEntitys which shall be considered for this GlobalSupervisionEntity.",
    "Reference to the Swc that produces the log or trace message. Please note that this reference shall not be set in case that the Bsw module produces the associated log or trace messages.",
    "Reference to the SwitchStreamIdentifications this StreamFilterEntry applies to.",
    "Reference to the System Signal that is supposed to be transmitted in the ISignal.",
    "Reference to the SystemSignal to which one primitive of the composite type is mapped.",
    "Reference to the SystemSignal with the ApplicationError.",
    "Reference to the SystemSignal with the ClientID.",
    "Reference to the SystemSignal with the SequenceCounter.",
    "Reference to the SystemSignalGroup that is defined on VFB level and that is supposed to be transmitted in the ISignalGroup.",
    "Reference to the TP Address that is used by the TpNode. This reference is optional in case that the multicast TP Address is used (reference from TpConnection).",
    "Reference to the TP Address that is used by the TpNode. This reference is optional only when no TP is sent and only BAM is received.",
    "Reference to the Traffic Shaper Group this Asynchronous Traffic Shaper is part of.",
    "Reference to the TransformationTechnology description that contains transformer specific and ISignal independent configuration properties.",
    "Reference to the [ARMetaClass{ConstantSpecificationMapping}] to be applied for initValues of  [ARMetaClass{PPortComSpec}]s and [ARMetaClass{RPortComSpec}].",
    "Reference to the accessed calibration parameter.",
    "Reference to the action list which shall be executed when the rule evaluates to FALSE.",
    "Reference to the action list which shall be executed when the rule evaluates to TRUE.",
    "Reference to the actual graphic represented in the figure.",
    "Reference to the address of the receiver of the tpSdu.",
    "Reference to the address of the sender of the tpSdu.",
    "Reference to the affected Field in the context of an Executable.",
    "Reference to the applicable DiagnosticMemoryDestination.",
    "Reference to the callSignal to which the IN and INOUT ArgumentDataPrototypes are mapped.",
    "Reference to the collection of SignalBased to ISignalTriggerung mappings the properties apply to.",
    "Reference to the communication controller.\r\nThe CommunicationConnector and referenced CommunicationController shall be aggregated by the same ECUInstance. \r\n\r\nThe communicationController can be referenced by several CommunicationConnector elements. This is important for the FlexRay Bus. FlexRay communicates via two physical channels. But only one controller in an ECU is responsible for both channels. Thus, two connectors (for channel A and for channel B) shall reference to the same controller.",
    "Reference to the communication security protocol and its configuration settings that will provide communication security for the referenced ServiceInterfaceElement that is exchanged between a ProvidedServiceInstance and one or several RequiredServiceInstances.",
    "Reference to the components that have to be mapped together.",
    "Reference to the connection control.",
    "Reference to the context Process this mapping applies to.",
    "Reference to the corresponding ArgumentDataPrototype.",
    "Reference to the corresponding DiagnosticCustomServiceClass.",
    "Reference to the corresponding Trigger.",
    "Reference to the corresponding VariableDataPrototype.",
    "Reference to the corresponding data instance in the description of calibration data structures published by the RTE generator. This is used to support emulation methods inside the ECU, it is not required for A2L generation.",
    "Reference to the corresponding entry in the ECU Flat Map. This allows to trace back to the original specification of the generated data instance. This link shall be added by the RTE generator mainly for documentation purposes.\r\n\r\nThe reference is optional because \r\n* The McDataInstance may represent an array or struct in which only the subElements correspond to FlatMap entries.\r\n* The McDataInstance may represent a task local buffer for rapid prototyping access which is different from the \"main instance\" used for measurement access.",
    "Reference to the data element.",
    "Reference to the dataElement for which the InvalidationPolicy applies.",
    "Reference to the definition of this Container in the ECU Configuration Parameter Definition.",
    "Reference to the definition of this EcucAbstractReferenceValue subclasses in the ECU Configuration Parameter Definition.",
    "Reference to the definition of this EcucModuleConfigurationValues element. Typically, this is a vendor specific module configuration.",
    "Reference to the definition of this EcucParameterValue subclasses in the ECU Configuration Parameter Definition.",
    "Reference to the egress ports used as the target of the filter action to modify the egress port.",
    "Reference to the event for which the SomeipEventProps are applicable.",
    "Reference to the field.",
    "Reference to the final Checkpoint(s) for this LogicalSupervision.",
    "Reference to the first CouplingPort that is connected via the CouplingPortConnection.",
    "Reference to the hardware ProvidedMemorySegment.",
    "Reference to the initial Checkpoint(s) for this LogicalSupervision.",
    "Reference to the key where SAK shall be stored.",
    "Reference to the key where the ckn (Connectivity Association key) is stored.",
    "Reference to the leaf element the SignalServiceTranslationElementProps apply to.",
    "Reference to the logical expression that is evaluated for this rule.",
    "Reference to the lower layer Pdu used for the IEEE1722Tp protocol transport.",
    "Reference to the machine that contains the NmNode.",
    "Reference to the mapped ServiceInterfaceElementSecureComConfig.",
    "Reference to the mapped TimeBaseResource.",
    "Reference to the method for which the SomeipMethodProps are applicable.",
    "Reference to the method that will be mapped to an ISignalTriggering for signal-based transport over a communication channel.",
    "Reference to the method.",
    "Reference to the network address.",
    "Reference to the operation arguments of one operation which shall not take the predefined way in the topology.",
    "Reference to the operation at the client and at the server side whose arguments are described by SwcToSwcOperationArguments. The two ports referenced shall be connected by a connector in the software component description.",
    "Reference to the output sink to which the log or trace message will be transmitted,",
    "Reference to the partial networks this CouplingPort participates in.",
    "Reference to the process that is assigned to a Log And Trace applicationId.",
    "Reference to the process this GlobalSupervisionEntity shall be applied to.",
    "Reference to the process this SupervisionEntity shall be applied to.",
    "Reference to the process where the AdaptiveModuleInstantiation is executed.",
    "Reference to the process which represents the State Management instance that the recovery notification shall be applied to.",
    "Reference to the process which represents the application instance.",
    "Reference to the provided event group (aka EventHandler) which is automatically available when serviceControl equals translationStart.",
    "Reference to the representation of a Process that is required because the mapping could be different for different Processes referring to a specific Executable.",
    "Reference to the returnSignal to which the OUT and INOUT ArgumentDataPrototypes are mapped.",
    "Reference to the schedule table, which resolves a collision.",
    "Reference to the second CouplingPort that is connected via the CouplingPortConnection.",
    "Reference to the segmented IPdu.",
    "Reference to the set of SupervisionCheckpoints which shall not be considered for any kind of supervision.",
    "Reference to the set of preconfigured (i.e. fixed) configuration values for this BswImplementation.\r\n\r\nIf the BswImplementation represents a cluster of several modules, more than one EcucModuleConfigurationValues element can be referred (at most one per module), otherwise at most one such element can be referred.",
    "Reference to the signal group which contains the references to request signals used to transport the IN and INOUT arguments of the operation.",
    "Reference to the signal group which contains the references to response signals used to transport the OUT and INOUT arguments of the operation.",
    "Reference to the signal group, which contain all primitive datatypes of the composite type",
    "Reference to the software component instances that are being mapped to the specified Implementation. The targeted SwComponentPrototype needs be of the AtomicSwComponentType being implemented by the referenced Implementation.",
    "Reference to the source checkpoint for this transition.",
    "Reference to the system signal used to carry the argument",
    "Reference to the system signal used to carry the data element.",
    "Reference to the system signal used to carry the primitive ApplicationArrayElement.",
    "Reference to the system signal used to carry the primitive ApplicationRecordElement.",
    "Reference to the target checkpoint for this transition.",
    "Reference to the target module. It is an <<atpUriDef>> because the reference shall be used to identify the target module without actually needing the description of that target module.\r\nThis property was modified due to atpVariation (DirectedAssociationPattern).",
    "Reference to the transition in the context of a DeadlineSupervision.",
    "Reference to the transitions for this LogicalSupervision.",
    "Reference to the upper layer Sdu used for the transport of the payload of the IEEE1722Tp.",
    "Reference to the used indicator.",
    "Reference to the vlan (represented by the EthernetPhysicalChannel) this UdpNmCluster shall apply to.",
    "Referenced channel used by the node to send a wakeup pattern. (pWakeupChannel)",
    "References a channel that represents a VLAN or an untagged channel.",
    "References the ISignalIPdu that represents the SDG (Safety Data Group) that contains both the payload (signals) and the E2E protection data of the protected J1939 message.\r\nThis property was modified due to atpVariation (DirectedAssociationPattern).",
    "References to  SwcToEcuMappings that have been taken into account for the resource estimations. This way it is possible to define dfferent EcuResourceEstimations with diifferent mappings, e.g. before and after mapping an additional SW component.",
    "References to  the module definitions of individual software modules.",
    "References to the FramePort on every ECU of the system which sends and/or\r\nreceives the frame.\r\n\r\nReferences for both the sender and the receiver side shall be included when the system is completely defined.",
    "References to the IPduPort on every ECU of the system which sends and/or\r\nreceives the I-PDU.\r\n\r\nReferences for both the sender and the receiver side shall be included when the system is completely defined.",
    "References to the ISignalPort on every ECU of the system which sends and/or receives the ISignal.\r\n\r\nReferences for both the sender and the receiver side shall be included when the system is completely defined.",
    "References to the configuration of individual software modules that are present on this ECU.\r\n\r\natpVariation: [RS_ECUC_00079]\r\nThis property was modified due to atpVariation (DirectedAssociationPattern).",
    "References to the software component instances that are mapped to the referenced ApplicationPartition. If the component prototype referenced is a composition, this indicates that all atomic software components within the composition are mapped to the ApplicationPartition. \r\n\r\nIf there is additionally a mapping of some SwComponentPrototype INSIDE the Composition to another ApplicationPartition the inner mapping overrides the outer mapping.",
    "References to the software component instances that are mapped to the referenced ECUInstance. If the component prototype referenced is a composition, this indicates that all atomic software components within the composition are mapped to the ECU. \r\n\r\nIf there is aditionally a mapping of some SwComponentPrototype INSIDE the Composition to another ECU Instance the inner mapping overrides the outer mapping.",
    "Referencing the BSW module description, which this EcucModuleConfigurationValues element is configuring. This is optional because the EcucModuleConfigurationValues element is also used to configure the ECU infrastructure (memory map) or Application SW-Cs. However in case the EcucModuleConfigurationValues are used to configure the module, the reference is mandatory in order to fetch module specific \"common\" published information.",
    "Refernce(s) to one or multiple EcucContainerValue(s) qualifying the characteristics of the resource.",
    "Refers to \"upstream\" information on how the RTE uses this data instance.\r\nUse Case: Rapid Prototyping",
    "Refers to a SdgClass which is used on the definition side to model the destination type of the referenced Sdg. On the value side the reference is realized by means of the originating Sdg defining an sdgx attribute which refers to the sdgCaption of the referenced Sdg.",
    "Refers to a data instance within MC support data that is part of the set, i.e. a calibration parameter or measured variable.",
    "Refers to a physical time base reference on the respective platform level\r\nThis property was modified due to atpVariation (DirectedAssociationPattern).",
    "Refers to an entry in a FlatMap that is part of the set, for example a calibration parameter or measured variable.",
    "Refers to constraints, e.g. for plausibility checks.",
    "Refers to input variables of the axis. It is possible to specify more than one variable. Here the following is valid:\r\n\r\n* The variable with the highest priority shall be given first. It is used in the generation of the code and is also displayed first in the application system.\r\n\r\n* All variables referenced shall be of the same physical nature. This is usually detected in that the conversion formulae affected refer back to the same SI-units.\r\nIn AUTOSAR this ensured by the constraint, that the referenced input variables shall use a type compatible to \"inputVariableType\".\r\n\r\n* This multiple referencing allows a base point distribution for more than one input variable to be used. One example of this are the temperature curves which can depend both on the induction air temperature and the engine temperature.\r\n\r\nThese variables can be displayed simultaneously by MCD systems (adjustment systems), enabling operating points to be shown in the curves.",
    "Refers to the BSW Module Identifier defined by the AUTOSAR standard. For non-standardized modules, a proprietary identifier can be optionally chosen.",
    "Refers to the HealthChannel.",
    "Refers to the RAM location of this parameter group. To be used for the init-RAM method.",
    "Refers to the ROM location of this parameter group. To be used for the init-RAM method.",
    "Refers to the artifact belonging to this code descriptor.",
    "Refers to the base pointer in case of the double-pointered method.",
    "Refers to the instance in the ECU extract. This is valid only, if the FlatMap is used in the context of an ECU extract.\r\n\r\nThe reference shall be such that it uniquely defines the object instance. For example, if a data prototype is declared as a role within an SwcInternalBehavior, it is not enough to state the SwcInternalBehavior as context and the aggregated data prototype as target. In addition, the reference shall also include the complete path identifying instance of the component prototype and the AtomicSoftwareComponentType, which is refered by the particular SwcInternalBehavior.\r\nThis aggregation contains a variation point although it is not variant. Therefore, this variation point shall not exist in models. See constr_2638.",
    "Refers to the instance in the context of an \"upstream\" description, which could be:\r\nthe SYSTEM_DESCRIPTION, or\r\nSYSTEM_EXTRACT, or\r\nECU_SYSTEM_DESCRIPTION, or\r\nSW_CLUSTER_SYSTEM_DESCRIPTION, or\r\nthe basic software module description (in this case only the target reference of the AnyInstanceRef is needed), or\r\n(if a flat map is used in preliminary context) a description of an atomic component or composition.\r\n\r\nThis reference is optional in case the flat map is used in ECU context.\r\nThe reference shall be such that it uniquely defines the object instance in the given context. For example, if a data prototype is declared as a role within an SwcInternal\r\nBehavior, it is not enough to state the SwcInternal Behavior as context and the aggregated data prototype as target. In addition, the reference shall also include the complete path identifying the instance of the component prototype that contains the particular instance of Swc InternalBehavior.\r\nThis aggregation contains a variation point although it is not variant. Therefore, this variation point shall not exist in models. See constr_2638.",
    "Refers to the pointer table in case of the single-pointered method.",
    "Refers to the service identifier of the Standardized Interfaces of AUTOSAR basic software. For non-standardized interfaces, it can optionally be used for proprietary identification.",
    "Refers to the set of adjustable data (= calibration parameters) defined in this function.",
    "Refers to the set of adjustable data (= calibration parameters) referred by this McGroup.",
    "Refers to the set of adjustable data (= calibration parameters) referred by this function.",
    "Refers to the set of measurable belonging to this McGroup.",
    "Refers to the set of measurable input data for this function.",
    "Refers to the set of measurable local data in this function.",
    "Refers to the set of measurable output data from this function.",
    "Regenerated message priority.\r\n\r\nrange: 0-7",
    "Relates this Implementation to a generator tool in order to generate additional artifacts during integration.",
    "Relates to an artifact that will be generated during the integration of this Implementation by an associated generator tool. Note that this is an optional information since it might  not always be in the scope of a single module or component  to provide this information.",
    "Relationship between two BswModuleEntrys.",
    "Relative delay between this tableEntry and the start of the successor in the schedule table in seconds.",
    "Relative position in the schedule table. The first entry index in the schedule table is 0.",
    "Reliability against data loss on the non-volatile medium.",
    "Remark describing for example \r\n* why the element was given the specified life cycle\r\n* the semantics of useInstead",
    "Remark describing for example why the element was given the specified imposition time.",
    "RemoteAddress of the static SocketConnection.\r\nThis property was modified due to atpVariation (DirectedAssociationPattern).",
    "Remoting technology used.",
    "Removed. This association between SwcTiming and SwComponentType shall not be used to specify the scope of the SwcTiming. It is mandatory to use the association between SwcTiming and SwcInternalBehavior instead.",
    "Represents the extract of the System Configuration that is relevant for the ECU configured with that ECU Configuration Description.",
    "Request configuration that is used to determine whether an incoming DiagnosticMessage request needs to be interpreted as PHYSICAL or FUNCTIONAL. Any request with target address not within the configured target address range will be rejected.",
    "Request for acknowledgement",
    "Requested transmission acknowledgement for data element.",
    "Required alignment (1,2,4,...) of the referenced PerInstanceMemory.  Unit: byte.",
    "Required communication attributes, one for each interface element.",
    "Requirement for the time period (in seconds) by which this event is triggered.",
    "Requires the priority of writing this block in case of concurrent requests to write other blocks.",
    "Resource estimations for this set of mappings, zero or one per ECU instance.\r\n\r\natpVariation: Used ECUs are variable.",
    "Restriction of allowed usage of a key stored to the slot.",
    "Restriction of the Client Identifier for this Ecu to an allowed range of numerical values. The Client Identifier of the transaction handle is generated by the client RTE for inter-Ecu Client/Server communication.",
    "Restrictions on the usage of variant handling.",
    "Restricts how this keySlot may be used",
    "Revision of Ieee1722 standard",
    "Revision of Ieee1722 standard.",
    "Role of the MAC Security Key Agreement Entity",
    "Root element of an AUTOSAR description.",
    "Rough estimate of the heap usage. Unit: byte.",
    "Rough estimate of the stack usage. Unit: byte.",
    "Rules for remapping of a set of CAN IDs.",
    "Rules for remapping of single CanIds.",
    "Rules for remapping of single LIN Frames.",
    "RunnableEntity has explicit read access to dataElement of a sender-receiver PortPrototype or nv data of a nv data PortPrototype.\r\n\r\nThe result is passed back to the application by means of the return value.\r\nThe aggregation of dataReceivePointByValue is subject to variability with the purpose to support the conditional existence of sender receiver ports or the variant existence of data receive points in the implementation.",
    "RunnableEntity has explicit read access to dataElement of a sender-receiver PortPrototype or nv data of a nv data PortPrototype.\r\nThe result is passed back to the application by means of an argument in the function signature.\r\n\r\nThe aggregation of dataReceivePointByArgument is subject to variability with the purpose to support the conditional existence of sender receiver PortPrototype or the variant existence of data receive points in the implementation.",
    "RunnableEntity has explicit write access to dataElement of a sender-receiver PortPrototype or nv data of a nv data PortPrototype.\r\n\r\nThe aggregation of dataSendPoint is subject to variability with the purpose to support the conditional existence of sender receiver PortPrototype or the variant existence of data send points in the implementation.",
    "RunnableEntity has implicit read access to dataElement of a sender-receiver PortPrototype or nv data of a nv data PortPrototype.\r\n\r\nThe aggregation of dataReadAccess is subject to variability with the purpose to support the conditional existence of sender receiver ports or the variant existence of dataReadAccess in the implementation.",
    "RunnableEntity has implicit write access to dataElement of a sender-receiver PortPrototype or nv data of a nv data PortPrototype.\r\n\r\nThe aggregation of dataWriteAccess is subject to variability with the purpose to support the conditional existence of sender receiver ports or the variant existence of dataWriteAccess in the implementation.",
    "Rx timeout for the follow-up message.",
    "Rx timeout for the follow-up message. This is only relevant for selected bus systems Unit:seconds",
    "SDU type of a CAN XL message.",
    "SOME/IP EventGroups that are defined within the SOME/IP ServiceClass.",
    "Sample clock period. Unit: seconds",
    "Schedule tables organize the timings of the frames for LIN.\r\n\r\natpVariation: If the transmitted frames are variable, the corresponding ScheduleTables shall be variable, too.",
    "SecOC links an AuthenticIPdu and CryptographicIPdu together by repeating a specific part (Message Linker) of the AuthenticIPdu in the CryptographicIPdu. This attribute defines the length in bits of the messageLinker.",
    "SecOC links an AuthenticIPdu and CryptographicIPdu together by repeating a specific part (Message Linker) of the AuthenticIPdu in the CryptographicIPdu. This attribute defines the startPosition in bits of the messageLinker.",
    "Second to be mapped DataPrototype in context of a  SenderReceiverInterface, NvDataInterface, ParameterInterface or Operation.",
    "Second to-be-mapped ClientServerOperation of a ClientServerInterface.",
    "See \"DEADLINE\" chapter of DDS.\r\n\r\nTime given in seconds.",
    "See \"DESTINATION_ORDER\" chapter of DDS.",
    "See \"DURABILITY\" chapter in DDS.",
    "See \"DURABILITY_SERVICE\" chapter in DDS.",
    "See \"DURABILITY_SERVICE\" chapter in DDS.\r\n\r\nTime given in seconds.",
    "See \"HISTORY\" chapter of DDS.",
    "See \"LATENCY_BUDGET\" chapter of DDS.\r\n\r\nTime given in seconds.",
    "See \"LIFESPAN\" chapter of DDS.\r\n\r\nTime given in seconds.",
    "See \"LIVELINESS\" chapter of DDS.",
    "See \"LIVELINESS\" chapter of DDS.\r\n\r\nTime given in seconds.",
    "See \"OWNERSHIP\" chapter of DDS.",
    "See \"OWNERSHIP_STRENGTH\" chapter of DDS.",
    "See \"RELIABILITY\" chapter of DDS.",
    "See \"RELIABILITY\" chapter of DDS.\r\n\r\nTime given in seconds.",
    "See \"RESOURCE_LIMITS\" chapter of DDS.",
    "See \"TOPIC_DATA\" chapter in DDS.",
    "See \"TRANSPORT_PRIORITY\" chapter of DDS.",
    "Segments bit position relatively to the beginning of a multiplexed IPdu.\r\n\r\nNote that the absolute position of the segment in the MultiplexedIPdu is determined by the definition of the segmentByteOrder attribute of the SegmentPosition. If Big Endian is specified, the start position indicates the bit position of the most significant bit in the IPdu. If Little Endian is specified, the start position indicates the bit position of the least significant bit in the IPdu. In AUTOSAR the bit counting is always set to \"sawtooth\" and the bit order is set to \"Decreasing\". The bit counting in byte 0 starts with bit 0 (least significant bit). The most significant bit in byte 0 is bit 7.",
    "Select type of Event Combination support.",
    "Selection of event-groups the consumer wants to subscribe for.",
    "Selects a set of values for postbuild variant criterions.",
    "Selects a set of values for system constants.",
    "Semantic constraints that restrict the structure of the special data group.",
    "Send indication behavior for last-is-the best data communication.",
    "Senders and receivers of  TP messages.",
    "Senders and receivers of CAN TP messages.\r\n\r\natpVariation: Derived, because TpNode can vary.",
    "Senders and receivers of Can TP messages. \r\n\r\natpVariation: Derived, because EcuInstance can vary.",
    "Senders and receivers of FlexRay TP messages. \r\n\r\natpVariation: Derived, because EcuInstance can vary.",
    "Senders and receivers of J1939 TP messages. \r\n\r\natpVariation: Derived, because EcuInstance can vary.",
    "Senders and receivers of LIN TP messages. \r\n\r\natpVariation: Derived, because EcuInstance can vary.",
    "Senders and receivers of SOME/IP TP messages.",
    "Separation constraint that limits the mapping freedom for the mapping of RteEvents to OsTasks in the System context.",
    "Separation constraint that limits the mapping freedom for the mapping of RteEvents to OsTasks in the context of a SwComponent.",
    "SequenceId from the Follow_Up Message Header shall be included in CRC calculation.",
    "Server Name Indication (SNI) is needed if the IP address hosts multiple servers (on the same port), each of them using a different certificate.\r\n\r\nIf the client sends the SNI to the Server in the client hello, the server looks the SNI up in its certificate list and uses the certificate identified by the SNI.",
    "Server Port for TCP/UDP connection in an abstract communication sense. The server is the major provider of the communication. Please note that the server may also consume data.",
    "Server Priority.",
    "Server Timing configuration settings that are EventGroup specific.",
    "Server Timing configuration settings that are EventGroup specific.\r\nThis property was modified due to atpVariation (DirectedAssociationPattern).",
    "Server configuration parameter for Service-Discovery.",
    "Server specific configuration settings relevant for the SOME/IP service discovery.",
    "Server specific configuration settings relevant for the SOME/IP service discovery.\r\nThis property was modified due to atpVariation (DirectedAssociationPattern).",
    "Service Discovery Client configuration.",
    "Service Discovery Server configuration.",
    "Service PortPrototype used in the assigned role. This PortPrototype shall either belong to the same AtomicSwComponentType as the SwcInternalBehavior which owns the ServiceDependency or to the same NvBlockSwComponentType as the NvBlockDescriptor.",
    "Service major version.",
    "Service minor version.",
    "Service resource for which the mapping applies.",
    "ServiceInstances that are part of the collection.",
    "ServiceInterface that is mapped into the composite ServiceInterface.",
    "Set maximum block size (number of packets in TP.CM_CTS).",
    "Set maximum for expected block size (maximum number of packets in TP.CM_RTS).",
    "Set of ApplicationStates (Modes) that are defined for the process.",
    "Set of Client Identifiers that are used for inter-ECU client-server communication in the System.",
    "Set of MachineStates (Modes) that are defined for the machine. \r\nThe upper multiplicity of this role has been increased to * due to resolving an atpVariation stereotype. The previous value was 1.",
    "Set of Process States (Modes) that are defined for the process.",
    "Set of Process States that are defined for the process. This attribute is used to support the modeling of execution dependencies that utilize the condition of process state. Please note that the process states may not be modeled arbitrarily at any stage of the AUTOSAR workflow because the supported states are standardized in the context of the SWS Execution Management [cite{AP-SWS-ExecutionManagement}].\r\nThis aggregation contains a variation point although it is not variant. Therefore, this variation point shall not exist in models. See constr_2638.",
    "Set of access count values",
    "Set of domains to be covered by this property set.",
    "Set of mappings defined by this FMFeatureMap.",
    "Set of service discovery configuration settings that are defined on the machine for individual CommunicationConnectors.",
    "Sets of system constant values to be transferred to the MCD system, because the system constants have been specified with \r\n\"swCalibrationAccess\" = readonly.",
    "Sets the duration of the minimum time in seconds SOME/IP shall wait between the transmissions of segments into which the Method Call Message will be divided.",
    "Sets the duration of the minimum time in seconds SOME/IP shall wait between the transmissions of segments into which the Method Return Message will be divided.",
    "Sets the duration of the minimum time in seconds SOME/IP shall wait between the transmissions of segments.",
    "Sets the duration of the minimum time in seconds the SOME/IP TP module shall wait between the transmissions of NPdus.",
    "Sets the duration of the minimum time the CanTp sender shall wait between the transmissions of two CF N-PDUs.",
    "Sets the maximum value for the address configuration delay (s).",
    "Setting this attribute to true represents the ability of the Dcm to execute a freezeCurrentState.",
    "Setting this attribute to true represents the ability of the Dcm to execute a resetToDefault.",
    "Setting this attribute to true represents the ability of the Dcm to execute a shortTermAdjustment.",
    "Several destinationUris can be defined for an EcucContainerDef. With such destinationUris an EcucContainerDef is applicable for several EcucUriReferenceDefs.",
    "Severity level that is reported in case the restriction is violated.",
    "Shall be used to specify the role of the assigned data instance in relation to the instance that owns the assignment.\r\n\r\nThe standardized roles of the RoleBasedMcDataAssignment.role attribute are:\r\n* GlobalMeasurementBuffer\r\n* RpEnablerFlag\r\n* RpRunnableDisablerFlag\r\n* BufferOf",
    "Signal Gateway: Arranges those signals that are transferred by the gateway from one channel to the other in pairs and defines the mapping between them.\r\n\r\natpVariation: If signals are variable in clusters, the gateway signal mapping needs to be variable, too.",
    "Significance of the event, which indicates additional information concerning fault classification and resolution.",
    "Size (in bytes) of the reference perInstanceMemory.\r\nThe aggregation of PerInstanceMemorySize is subject to variability with the purpose to support variability in the software components implementations. Different algorithms in the implementation might require a different PerInstanceMemorySize.",
    "Size in bytes of scaling information for the DiagnosticDataElement if used with DiagnosticReadScalingDataByIdentifier",
    "Size of PduCounter expressed in bits. \r\nRange: 1..8",
    "Size of each fragment tx buffer in bytes.",
    "Size of the monitoring window for the E2E state machine.",
    "Size of the monitoring window for the E2E state machine.\r\n\r\nThe meaning is the number of correct cycles (E2E_P_OK) that are required in E2E_SM_INITCOM before the transition to E2E_SM_VALID. \r\n\r\nThe minimum allowed value is 1.",
    "Size of the monitoring window of state Init for the E2E state machine.",
    "Size of the monitoring window of state Invalid for the E2E state machine.",
    "Size of the monitoring window of state Valid for the E2E state machine.",
    "Size of the signal in bits. The size needs to be derived from the mapped VariableDataPrototype according to the mapping of primitive DataTypes to BaseTypes as used in the RTE.\r\nIndicates maximum size for dynamic length signals. \r\n\r\nThe ISignal length of zero bits is allowed.",
    "SoAd Configuration for one specific Physical Channel.",
    "Software Cluster Resource for which the mapping applies",
    "Software Cluster Resource for which the mapping applies.",
    "Software Components in the context of a CompositionSwComponentType belonging to this CP Software Cluster. This reference can be used to describe the belonging SWCs when the CP Software Cluster is described out of the context of a System, e.g. reusable CP Software Cluster.\r\nThis property was modified due to atpVariation (DirectedAssociationPattern).",
    "Software version of this implementation. The numbering contains three levels (like major, minor, patch), its values are vendor specific.",
    "Some endpoints can require a list of arguments.",
    "Source destination of the referencing mapping.",
    "Source node identifier for CarWakeUp filtering.",
    "Source node identifier for CarWakeUp filtering. If CarWakeUp filtering is supported (nmCarWakeUpFilterEnabled), only the CarWakeUp bit within the NmPdu with source node identifier nmCarWakeUpFilterNodeId is considered as CarWakeUp request.",
    "SourcePortIdentity from the Follow_Up Message Header shall be included in CRC calculation.",
    "Specific configuration properties for this SecuredIPdu.",
    "Specific parameter of a generic axis.",
    "Specification for which process step(s) this dependency is required.",
    "Specification if this concrete Meta-Class is a root element for validation. I.e.: The validation starts at an object of this concrete Meta-Class and continues by following all aggregations and references that are in scope of this Data Exchange Point.",
    "Specification of a sending behaviour where the exact time for the frames transmission is guaranteed.",
    "Specification of an expression leading to a value for this constant.\r\nThis aggregation contains a variation point although it is not variant. Therefore, this variation point shall not exist in models. See constr_2638.",
    "Specification of connections between CouplingElements and EcuInstances.",
    "Specification of how to handle AUTOSAR defined default values.",
    "Specification of tailorings of Constraints of that are owned by this Meta Classes",
    "Specification of tailorings of Constraints that are not explicitly owned by any Meta-Class",
    "Specification of tailorings of Meta Classes",
    "Specification of the actual network representation for the referenced primitive DataPrototype. \r\nIf a network representation is provided then the baseType shall be used by the Transformer as input for the serialization/deserilaization.",
    "Specification of the actual network representation. The usage of SwDataDefProps for this purpose is restricted to the attributes compuMethod and baseType. The optional baseType attributes \"memAllignment\" and \"byteOrder\" shall not be used. \r\n\r\nThe attribute \"dataTypePolicy\" in the SystemTemplate element defines whether this network representation shall be ignored and the information shall be taken over from  the network representation of the ComSpec. \r\n\r\nIf \"override\" is chosen by the system integrator the network representation can violate against the requirements defined in the PortInterface and in the network representation of the ComSpec. \r\n\r\nIn case that the System Description doesn't use a complete Software Component Description (VFB View) this element is used to configure \"ComSignalDataInvalidValue\" and the Data Semantics.",
    "Specification of the applicable Special Data Group",
    "Specification of the physical representation.",
    "Specification of the properties of exactly one NVRAM Block.",
    "Specification of the structure of the Special Data Group.",
    "Specifies a callback, which will be called from this module if required by \r\nanother module.\r\nThis property was modified due to atpVariation (DirectedAssociationPattern).",
    "Specifies a combination of revisions of AUTOSAR standards that are used as the specification baseline of this Data Exchange Point. All standard specification elements that are referenced by this Profile of Data Exchange Point have to be part of specifications that belong to the defined AUTOSAR standards.",
    "Specifies a data prototype provided by this module in order to be read  from another partition or core.The providedData is declared locally to this context and will be connected to the requiredData of another or the same module via the configuration of the BSW Scheduler.",
    "Specifies a data prototype required by this module in oder to be provided from another partition or core.The requiredData is declared locally to this context and will be connected to the providedData of another or the same module via the configuration of the BswScheduler.",
    "Specifies a trigger to be directly implemented via OS calls.",
    "Specifies additional information on the HardwareConfiguration.",
    "Specifies an element of a record.\r\n\r\nThe aggregation of ApplicationRecordElement is subject to variability with the purpose to support the conditional existence of elements inside a ApplicationrecordData Type.",
    "Specifies an element of an array, struct, or union data type.\r\n\r\nThe aggregation of ImplementionDataTypeElement is subject to variability with the purpose to support the conditional existence of elements inside a ImplementationDataType representing a structure.",
    "Specifies an entry provided by this module which can be called by other modules. This includes \"main\" functions and interrupt routines, but not callbacks (because the signature of a callback is defined by the caller).\r\nThis property was modified due to atpVariation (DirectedAssociationPattern).",
    "Specifies an entry provided by this module which can be called by other modules. This includes \"main\" functions, interrupt routines, and callbacks.\r\nReplacement of providedEntry / expectedCallback.\r\nThis property was modified due to atpVariation (DirectedAssociationPattern).",
    "Specifies for this ExclusiveArea if either one common set of Enter and Exit APIs for the whole BSW module is requested from the SchM or if the set of Enter and Exit APIs is expected per BswModuleEntity.\r\nThe default value is \"common\".",
    "Specifies for this ExclusiveArea if either one common set of Enter and Exit APIs for the whole software component is requested from the Rte or if the set of Enter and Exit APIs is expected per RunnableEntity.\r\nThe default value is \"common\".",
    "Specifies for which hardware element (e.g. ECU) this heap usage  usage is given.",
    "Specifies for which hardware element (e.g. ECU) this stack usage is given.",
    "Specifies if NM performs an additional transition from Network Mode to Repeat Message State (true) or not (false).",
    "Specifies if Nm drops irrelevant NM PDUs.\r\n\r\nfalse: Only NM PDUs with a Partial Network Information Bit (PNI) = true and containing a Partial Network request for this ECU trigger the standard RX indication handling and thus keep the ECU awake\r\n\r\ntrue: Every NM PDU triggers the standard RX indication handling and keeps the ECU awake",
    "Specifies if UDP checksum handling shall be enabled (udpChecksumEnabled) or skipped (udpChecksumDisabled) on the related socket connection.",
    "Specifies if a caption is required. Note: only Sdgs that have a caption can be referenced",
    "Specifies if error signaling shall be enabled. This is not possible when the transceiver is switched to PWM mode (trcvPwmModeEnabled set to TRUE).\r\n\r\nTRUE: Error signaling shall be enabled.\r\n\r\nFALSE: Error signaling shall be disabled.",
    "Specifies if the bit rate switching shall be used for transmissions. \r\n\r\nTRUE: CAN FD frames shall be sent with bit rate switching.\r\n\r\nFALSE: CAN FD frames shall be sent without bit rate switching.",
    "Specifies if the event is raised on entering or exiting a specific mode or is raised on the transition between two modes.",
    "Specifies if the number of instances of this container may be changed in post-build selectable and post-build loadable time in the ECU Configuration Value Description.\r\n\r\nThis attribute is only applicable to containers which may appear multiple times in the configuration set, i.e. their upperMultiplicity is greater than lowerMultiplicity and their upperMultiplicity is greater than 1.\r\n\r\nIf a value of this attribute is not defined in the EcucModuleDef with category STANDARDIZED_MODULE_DEFINITION, it shall be defined in the EcucModuleDef with category VENDOR_SPECIFIC_MODULE_DEFINITION for all containers with upperMultiplicity greater than lowerMultiplicity and upperMultiplicity greater than 1.\r\n\r\nThis attribute is removed from the specifications and shall not be used.",
    "Specifies if the referenced PduTriggering shall be collected using a queued (i.e. all PDU instances) or last-is-best (i.e. only the last PDU instance) semantics. If this attribute is not present the behavior of \"queued\" is assumed.",
    "Specifies if the storeEvent functionality of the ResponseOnEvent diagnostic service shall be supported or not. If set to true, the storeEvent functionality is available. If set to false the storeEvent functionality is not available.",
    "Specifies if the transceiver shall be set to the PWM mode.\r\n\r\nTRUE: The transceiver shall be switched to PWM mode.\r\n\r\nFALSE: The transceiver shall work in classic CAN mode.",
    "Specifies in which ConfigurationClass this parameter or reference is available for which ConfigurationVariant. \r\nThis aggregation is optional if the surrounding EcucModuleDef has the category STANDARDIZED_MODULE_DEFINITION. If the category attribute of the EcucModuleDef is set to VENDOR_SPECIFIC_MODULE_DEFINITION then this aggregation is mandatory.",
    "Specifies in which MultiplicityConfigurationClass this parameter or reference is available in a particular ConfigurationVariant. This aggregation is optional if the surrounding EcucModuleDef has the Category STANDARDIZED_MODULE_DEFINITION. If the category attribute of the EcucModuleDef is set to VENDOR_SPECIFIC_MODULE_DEFINITION, then this aggregation is mandatory.",
    "Specifies in which ValueConfigurationClass this parameter or reference is available in a particular ConfigurationVariant. This aggregation is optional if the surrounding EcucModuleDef has the Category STANDARDIZED_MODULE_DEFINITION. If the category attribute of the EcucModuleDef is set to VENDOR_SPECIFIC_MODULE_DEFINITION, then this aggregation is mandatory.",
    "Specifies in which mode the processor is operating.",
    "Specifies initial value(s) of the Field.",
    "Specifies initial value(s) of the ParameterDataPrototype\r\nThis aggregation contains a variation point although it is not variant. Therefore, this variation point shall not exist in models. See constr_2638.",
    "Specifies initial value(s) of the PerInstanceMemory",
    "Specifies initial value(s) of the VariableDataPrototype\r\nThis aggregation contains a variation point although it is not variant. Therefore, this variation point shall not exist in models. See constr_2638.",
    "Specifies number of messages to occur before the message is passed again",
    "Specifies one PortInterfaceMapping to support the connection of Ports typed by two different PortInterfaces with PortInterface elements having unequal names and/or unequal semantic (resolution or range).",
    "Specifies phase segment 1 in time quantas.",
    "Specifies phase segment 1 in time quantas.\r\n\r\ntimeSeg1 = Phase_Seg1",
    "Specifies phase segment 2 in time quantas.",
    "Specifies phase segment 2 in time quantas. \r\n\r\ntimeSeg2 = Phase_Seg2",
    "Specifies propagation delay in time quantas.",
    "Specifies properties for the usage of the CouplingPort in the scope of Global Time Sync.",
    "Specifies restrictions on the usage of variant handling.",
    "Specifies that the containing data object is a pointer to another data object.",
    "Specifies that this Implementation depends on the existence of another artifact (e.g. a library). This aggregation of DependencyOnArtifact is subject to variability with the purpose to support variability in the implementations. Different algorithms in the implementation might cause different dependencies, e.g. the number of used libraries.",
    "Specifies that this module or cluster depends on a certain mode group. The requiredModeGroup is local to  this context and will be connected to the providedModeGroup of another module or cluster via the configuration of the BswScheduler.",
    "Specifies that this module or cluster reacts upon an external trigger.This requiredTrigger is declared locally to this context and will be connected to the providedTrigger of another module or cluster via the configuration of the BswScheduler.",
    "Specifies that this module provides a client server entry which can be called from another partition or core.This entry is declared locally to this context and will be connected to the requiredClientServerEntry of another or the same module via the configuration of the BSW Scheduler.",
    "Specifies that this module requires a client server entry which can be implemented on another partition or core.This entry is declared locally to this context and will be connected to the providedClientServerEntry of another or the same module via the configuration of the BSW Scheduler.",
    "Specifies that this parameter's value is used, together with the aggregating container, to derive a symbolic name definition. See chapter \"Representation of Symbolic Names\" in Ecuc specification for more details.",
    "Specifies the BSW implementation that manifests the context.",
    "Specifies the BSW module instance the BSW event is related to.",
    "Specifies the BSW module instance the BSW module entity belongs to.",
    "Specifies the Byte pattern that is used for response messages if no valid GID could be retrieved. \r\nOnly the value '0' or '255' is allowed.",
    "Specifies the Byte pattern that is used for response messages if no valid VIN could be retrieved.\r\nOnly the value '0' or '255' is allowed.",
    "Specifies the ConfigurationClass for the given ConfigurationVariant.",
    "Specifies the ConfigurationVariant the ConfigurationClass is specified for.",
    "Specifies the IP Address which will be assigned to a DHCP Client at this SwitchPort.\r\nIf no dhcpAddressAssignment is provided all DHCP-Discover messages received at this Port will be discarded by the DHCP Server.",
    "Specifies the LinFrame that will be transmitted in this frame slot.",
    "Specifies the PDU that if contained in the Ethernet frame let the TDEventFrameEthernet occur.",
    "Specifies the PWM long phase length.",
    "Specifies the PWM short phase length.",
    "Specifies the PWM time offset.",
    "Specifies the SW component prototype representing the context.",
    "Specifies the Signal Fan In or Signal Fan Out inside the Composition Type.",
    "Specifies the SocketConnection by the means of which Physical Data Units (PDU) are transmitted or received within an Ethernet Frame.",
    "Specifies the SocketConnectionBundle by the means of which the PDUs are transmitted or received within an Ethernet Frame.",
    "Specifies the Transceiver Delay Compensation Offset in seconds. If not specified Transceiver Delay Compensation is disabled.",
    "Specifies the Transmitter Delay Compensation Offset in minimum time quanta. Transmitter Delay Compensation Offset is used to adjust the position of the Secondary Sample Point (SSP), relative to the beginning of the received bit. If this parameter is configured, the Transmitter Delay Compensation is done by measurement of the CAN controller. If not specified Transmitter Delay Compensation is disabled.",
    "Specifies the Variant ID",
    "Specifies the Variant ID.",
    "Specifies the abstract need on the Debounce Algorithm applied by the Diagnostic Event Manager.",
    "Specifies the abstract needs on the configuration of the NVRAM Manager for the single NVRAM Block described by this NvBlockDescriptor.\r\n\r\nIn addition, it may define requirements for writing strategies in an implementation of an NvBlockSwComponentType by the RTE.\r\n\r\nPlease note that the attributes nDataSets and nRomBlocks are not relevant for this aggregation because the RTE will allocate just one block anyway. In a different context, however, they do make sense.",
    "Specifies the accepted / not accepted content of the class. All rules apply that fullfill the condition of the ClassContentConditional",
    "Specifies the actual value.\r\nThis aggregation contains a variation point although it is not variant. Therefore, this variation point shall not exist in models. See constr_2638.",
    "Specifies the amount of data in bytes that shall be buffered for data transmission over the udp connection specified by this SomeipServiceInstanceToMachineMapping in case data accumulation is enabled.",
    "Specifies the amount of data in bytes that shall be buffered for data transmission over the udp connection specified by this SomeipServiceInstanceToMachineMapping. If this attribute is set to a value, then the data collection feature is enabled.",
    "Specifies the arguments used in the data dependency. Note that this is 0..1 since the aggregated class is a container (atpMixed).",
    "Specifies the bit position of the CarWakeUp within the NmPdu.",
    "Specifies the byte order of data in the serialized data stream.",
    "Specifies the compiler for which this implementation has been released",
    "Specifies the compiler options.",
    "Specifies the composition SW-C type playing the role of a SW-C containing further SW-Cs and represents the scope of the Execution Order Constraint.",
    "Specifies the connection negotiation of the CouplingPort.",
    "Specifies the conversion direction for which the TextTableMapping is applicable.",
    "Specifies the data exchange paradigm between [ARMetaClass{ExecutableEntity}]s within a LET interval.",
    "Specifies the data segment CAN 2.0 baud rate of the CAN XL controller in bits/s.",
    "Specifies the data segment CAN FD baud rate of the CAN XL controller in bits/s.",
    "Specifies the data segment CAN XL baud rate of the CAN XL controller in bits/s.",
    "Specifies the data segment baud rate of the CAN XL controller in bits/s.",
    "Specifies the data segment baud rate of the controller in bits/s.",
    "Specifies the destination of the reference.",
    "Specifies the direction of the data transfer. The direction shall indicate the direction of the actual information that is being consumed by the caller and/or the callee, not the direction of formal arguments in C.\r\n\r\nThe attribute is optional for backwards compatibility reasons.\r\nFor example, if a pointer is used to pass a memory address for the expected result, the direction shall be \"out\".\r\nIf a pointer is used to pass a memory address with content to be read by the callee, its direction shall be \"in\".",
    "Specifies the execution context which is required (in case of entries into this module) or guaranteed (in case of entries called from this module) for this service.",
    "Specifies the expected initialization of the variables (inclusive those which are implementing VariableDataPrototypes). Therefore this is an implementation constraint for initialization code of BSW modules (especially RTE) as well as the start-up code which initializes the memory segment to which the AutosarDataPrototypes referring to the SwAddrMethod's are later on mapped.\r\n\r\nIf the attribute is not defined it has the identical semantic as the attribute value \"INIT\"",
    "Specifies the header identifier or a range of header identifiers that if contained in the Ethernet frame let the TDEventFrameEthernet occur.",
    "Specifies the initial number of messages to occur before the first message is passed",
    "Specifies the input vector which is used to provide the ExecutionTime.",
    "Specifies the interval in seconds between subsequent keepalive probes.",
    "Specifies the kind of deliverable this EcucModuleConfigurationValues element provides. If this element is not used in a particular role (e.g. preconfiguredConfiguration or recommendedConfiguration) then the value shall be one of VariantPreCompile, VariantLinkTime, VariantPostBuild.",
    "Specifies the kind of this DataExchangePoint. It provides information if this DataExchangePoint represents \r\n* the output of a tool that produce data, \r\n* the input of a tool that consumes data or \r\n* an agreed profile",
    "Specifies the linker for which this implementation has been released.",
    "Specifies the linker options.",
    "Specifies the lower bounds for numeric values.",
    "Specifies the mac layer type of the CouplingPort.",
    "Specifies the mac layer type of the ethernet controller.",
    "Specifies the maximum PDU header identifier, in other words the upper bound of a range of PDU header identifiers.",
    "Specifies the maximum PWM long phase length.",
    "Specifies the maximum PWM short phase length.",
    "Specifies the maximum PWM time offset.",
    "Specifies the maximum Transceiver Delay Compensation Offset in seconds. If not specified Transceiver Delay Compensation is disabled.",
    "Specifies the maximum allowed bytes of a DoIP message request without the DoIP header.",
    "Specifies the maximum allowed gap of the sequence counter between two SYNC resp. two OFS messages.",
    "Specifies the maximum number of IP fragments per datagram.",
    "Specifies the maximum number of characters of textual values.",
    "Specifies the maximum number of consecutive data segments that can be managed in each reassembly buffer. If all fragments are received in order, only one segment will be needed.\r\n\r\nTo deal with fragments received out of order this value should be configured bigger than 1.",
    "Specifies the maximum number of fragmented IP datagrams that can be reassembled in parallel.",
    "Specifies the maximum number of times an object may occur.  If this primitive attribute is not set, then there is no limit with respect to the maximum occurrence.",
    "Specifies the maximum text size in characters. Note the size in bytes depends on the encoding in the corresponding baseType.",
    "Specifies the minimal number of characters of textual values.",
    "Specifies the minimal number of times an object shall occur. If this primitive attribute is not set, then the object is optional.",
    "Specifies the minimum PDU header identifier, in other words the lower bound of a range of PDU header identifiers.",
    "Specifies the minimum PWM long phase length.",
    "Specifies the minimum PWM short phase length.",
    "Specifies the minimum PWM time offset.",
    "Specifies the minimum Transceiver Delay Compensation Offset in seconds. If not specified Transceiver Delay Compensation is disabled.",
    "Specifies the minimum distance between subsequent occurrences of the event within the given time interval.",
    "Specifies the mode declaration group prototype that manifests the context.",
    "Specifies the multiplicity of the class in the current context.",
    "Specifies the name of a \"Function\" (in the sense of the MC system) to which this data object belongs. This corresponds to the Function in ASAM MCD 2MC /ASAP2 which defines the characteristic resp. which provides the measurement as output.\r\n\r\nThe function name is only used for support of MC systems. It can be predefined on the level of software component design. If it  is not  predefined, it could be filled out with a reasonable name, e.g. the component  prototype name, from the ECU extract. \r\n\r\nNote: This attribute is deprecated because an explicit model of MC functions can be set up by using the meta-class McFunction.",
    "Specifies the name that identifies the element.",
    "Specifies the number of segments for the Method Call that shall be transmitted in a burst ignoring separationTime. SeparationTime will then only be applied between bursts. If not configured, SeparationTime will be applied between all frames.",
    "Specifies the number of segments for the Method Response that shall be transmitted in a burst ignoring separationTime. SeparationTime will then only be applied between bursts. If not configured, SeparationTime will be applied between all frames.",
    "Specifies the number of segments that shall be transmitted in a burst ignoring separationTime. SeparationTime will then only be applied between bursts. If not configured, SeparationTime will be applied between all frames.",
    "Specifies the number of subscribed clients that trigger the server to change the transmission of events to multicast.\r\n\r\nExample:\r\nIf configured to 0 only unicast will be used.\r\nIf configured to 1 the first client will be already served by multicast.\r\nIf configured to 2 the first client will be served with unicast and as soon as the 2nd client arrives both will be served by multicast.\r\n\r\nThis does not influence the handling of initial events, which are served using unicast only.",
    "Specifies the number of subscribed clients that trigger the server to change the transmission of events to multicast.\r\n\r\nIf configured to 0 only unicast will be used.\r\nIf configured to 1 the first client will be already served by multicast.\r\nIf configured to 2 the first client will be server with unicast and as soon as the second client arrives both will be served by multicast.\r\n\r\nThis does not influence the handling of initial events, which are served using unicast only.",
    "Specifies the offset (in bytes) of the user data information in the NM message. User data excludes the PNC bit vector.",
    "Specifies the physical layer type of the CouplingPort.",
    "Specifies the port prototype representing the context.",
    "Specifies the position of the ResponseError bit in the frame. Each slave node shall publish one response error in one of its transmitted unconditional frames.",
    "Specifies the profile which the array will follow if it is a variable size array.",
    "Specifies the profile which the array will follow in case this data type is a variable size array.",
    "Specifies the protocol that is implemented by this transformer.",
    "Specifies the provided implementation code.",
    "Specifies the read or write access by MCD tools for this data object.",
    "Specifies the role of the entry in the given context. It shall be equal to the standardized name of the service call, especially in cases where no ServiceIdentifier is specified, e.g. for callbacks. Note that the ShortName is not always sufficient because it maybe vendor specific (e.g. for callbacks which can have more than one instance).",
    "Specifies the runtime of the reset timer in seconds. This reset time is valid for the reset of PN requests in the EIRA and in the ERA.",
    "Specifies the runtime of the reset timer in seconds. This reset time is valid for the reset of PN requests.",
    "Specifies the scope of this configuration element.",
    "Specifies the severity of unresolved references.",
    "Specifies the specific mode declaration in the given context.",
    "Specifies the specific type of ExecutionOrderConstraint.",
    "Specifies the speed the processor is operating.",
    "Specifies the state the software is in when the ExecutionTime is provided.",
    "Specifies the synchronization jump width for the controller in time quantas.",
    "Specifies the time base by means of CSE codes.",
    "Specifies the time in [s] between the last data packet sent (simple ACKs are not considered data) and the first keepalive probe.",
    "Specifies the time in seconds between the last data packet sent and the first keepalive probe.",
    "Specifies the time in seconds by which two consecutive starts of an ExecutableEntity are guaranteed to be separated.",
    "Specifies the time in seconds how long TCP connect attempts are repeated to reach SOAD_SOCON_ONLINE. This attribute is restricted to socket connection groups which are initiating a TCP connection and are under control of SoAd.",
    "Specifies the timeout in [s] after which an incomplete datagram gets discarded.",
    "Specifies the timeout in seconds after which an incomplete datagram gets discarded.",
    "Specifies the type of the execution time constrained by ExecutionTimeConstraint,",
    "Specifies the upper bounds for numeric values.",
    "Specifies the value which is used to pad unused data in CAN FD frames which are bigger than 8 byte if the length of a Pdu which was requested to be sent does not match the allowed DLC values of CAN FD.",
    "Specifies to which category of ApplicationDataType this ApplicationValueSpecification can be applied (e.g. as an initial value), thus imposing constraints on the structure and semantics of the contained values, see [constr_1006] and [constr_1519].",
    "Specifies to which transformer class this transformer belongs.",
    "Specifies whether calling of NvM functions for writing and/or status control of potentially modified RAM Blocks to NV memory shall be controlled by the RTE.",
    "Specifies whether changes on this parameter have some affection on other parameters.",
    "Specifies whether it shall be allowed on the value side to specify this parameter value as \"AUTO\".\r\n\r\nIf withAuto is \"true\" it shall be possible to set the \"isAutoValue\" attribute of the respective parameter to \"true\". This means that the actual value will not be considered during ECU Configuration but will be (re-)calculated by the code generator and stored in the value attribute afterwards. These implicit updated values might require a re-generation of other modules which reference these values.\r\n\r\nIf withAuto is \"false\" it shall not be possible to set the \"isAutoValue\" attribute of the respective parameter to \"true\".\r\n\r\nIf withAuto is not present the default is \"false\".",
    "Specifies whether it shall be allowed on the value side to specify this reference value as \"AUTO\".\r\n\r\nIf withAuto is \"true\" it shall be possible to set the \"isAutoValue\" attribute of the respective reference to \"true\". This means that the actual value will not be considered during ECU Configuration but will be (re-)calculated by the code generator and stored in the value attribute afterwards. These implicit updated values might require a re-generation of other modules which reference these values.\r\n\r\nIf withAuto is \"false\" it shall not be possible to set the \"isAutoValue\" attribute of the respective reference to \"true\".\r\n\r\nIf withAuto is not present the default is \"false\".",
    "Specifies whether the ECU instance may be put to a \"low power mode\" \r\n* true: sleep mode is supported \r\n* false: sleep mode is not supported \r\n\r\nNote: This flag may only be set to \"true\" if the feature is supported by both hardware and basic software.",
    "Specifies whether the connection requires a  bandwidth limitation or not.",
    "Specifies whether the module can handle the reception of an asynchronous mode switch (true) or not (false).",
    "Specifies whether the transformer chain is executed even if no input data are available.",
    "Specifies whether this container is used to define multiple configuration sets. Only one container in the whole EcucModuleDef shall have this enabled.",
    "Specifies whether this transformer gets access to the SWC's original data.",
    "Specifies which ConfigurationVariants are supported by this software module. \r\nThis attribute is optional if the EcucModuleDef has the category STANDARDIZED_MODULE_DEFINITION. If the category attribute of the EcucModuleDef is set to VENDOR_SPECIFIC_MODULE_DEFINITION then this attribute is mandatory.",
    "Specifies which MultiplicityConfigurationClass this container is available for which ConfigurationVariant. This aggregation is optional if the surrounding EcucModuleDef has the Category STANDARDIZED_MODULE_DEFINITION.\r\nIf the category attribute of the EcucModuleDef is set to VENDOR_SPECIFIC_MODULE_DEFINITION and if the upperMultiplicity is greater than the lowerMultiplicity then this aggregation is mandatory.",
    "Specifies which affect do changes in this parameter have on other parameters.  This attribute is deprecated and will be removed in future versions.",
    "Specify the amount of time (in seconds) after which the software component (via the RTE)  needs to be notified if the corresponding data item have not been received according to the specified timing description.\r\n\r\nIf the aliveTimeout attribute is 0 no timeout monitoring shall be performed.",
    "Specify the amount of time (in seconds) after which the software component (via the RTE) needs to be notified if the corresponding data item have not been received according to the specified timing description.\r\n\r\nIf the aliveTimeout attribute is 0 no timeout monitoring shall be performed.",
    "Specify the detection time if a local wake-up in seconds is present on the local wake-up connection (e.g. I/O pin). A local wake-up has to be present at least for wakeupLocalDetectionTime to be detected a valid local wake-up.",
    "Specify the duration of a local wake-up in seconds to be present on the local wake-up connection (e.g. I/O pin).",
    "Standard output-priority outgoing Frames will be tagged with.\r\n\r\nDefines the priority that received frames are assigned together with the VLAN Id (defaultVlan). The values from 0 (best effort) to 7 (highest) are allowed.\r\n\r\nIn case modifyVlan and an already tagged received frame, the actual priority of the received frame is not modified.",
    "Standardized parameter identifier (PID) according to the OBD standard specified in attribute \"standard\".",
    "Start address for range of target-addresses (including this address).",
    "Start delay timer on power on in seconds. \r\n\r\nThis delay indicates the time at ECU boot power-on time where the Dcm remains in the default session and does not accept a security access.",
    "Start delay timer on power on in seconds. This delay indicates the time after ECU boot power-on where no security access request is accepted.",
    "Start of the offset correction phase within the Network Idle Time (NIT), expressed as the number of macroticks from the start of cycle. Unit: macroticks",
    "Starting point of period in which the element has the denoted life cycle state lcState. If no periodBegin is given then the default period begin of LifeCycleInfoSet is assumed.",
    "Startup configuration that is contained in the StartupConfigSet",
    "States whether the scheduled entities in an LET interval shall use pipelined execution or not i.e. \"permitted pipelining property\"\r\nIf TRUE, then the scheduled entities must implement pipelining.\r\nIf FALSE or undefined, no pipelining applies.",
    "Statically defines the assignment of MAC-Multicast-Addresses, optionally together with VLANs, to this CouplingPort.",
    "String specifying if this configuration parameter is an AUTOSAR standardized configuration parameter or if the parameter is hardware- or vendor-specific.",
    "String specifying if this literal is an AUTOSAR standardized literal or if the literal is vendor-specific.",
    "Sub-level rptContainer definitions of this specific rapid prototyping scenario.",
    "Supplier specific format.",
    "Supported NmNetworkHandles used to control Partial Network Clusters/VLANs.",
    "Supported sub Sdg Class",
    "Switch between separate or single shared timer instance and timer value.\r\n\r\n* true: use shared timer instance and timer value for all security access levels combined.\r\n* false: use separate timer instance and timer values for each security level.",
    "Switch for enabling NmCoordinatorSync (coordination of nested busses) support.",
    "Switch for enabling remote sleep indication support.",
    "Switch for enabling the PDU Rx Indication.",
    "Switch for enabling the Repeat Message Bit Indication.",
    "Switch for enabling the Repeat Message Bit Indication.\r\n\r\nPlease note that this attribute is deprecated and will be removed in future. It is replaced by the channel specific attribute located in NmCluster.",
    "Switch for enabling the processing of FlexRay Hardware aggregated NM-Votes.",
    "Switch for enabling user data support.",
    "Switch off delay for CouplingPorts in seconds. It denotes the delay of switching off couplingPorts after the request to switch off a couplingPort was issued. (e.g. switch off of Ethernet switch ports).",
    "Switch to enable the separated sending of NM-Data. \r\nTrue: enables\r\nFalse: disables",
    "Switch to store the debounce counter value non-volatile or not.\r\n\r\ntrue: debounce counter value shall be stored non-volatile \r\n\r\nfalse: debounce counter value is volatile\r\n\r\nPlease note that this attribute is not relevant for the adaptive platform.",
    "Switching the Payload Preamble bit.",
    "Synchronicity from the viewpoint of clients invoking the service via the BSW Scheduler:\r\n\r\n* true: This calls a synchronous service, i.e. the service is completed when the call returns.\r\n\r\n* false: The service (on semantical level) may not be complete when the call returns.",
    "Synchronicity from the viewpoint of function callers:\r\n\r\n* true: This calls a synchronous service, i.e. the service is completed when the call returns.\r\n\r\n* false: The service (on semantical level) may not be complete when the call returns.",
    "Synchronisation interval used by the time synchronisation server (in seconds).",
    "Synchronization accuracy, treated as zero if not given.",
    "Synchronization source identifier uniquely identifies the source of a stream. The synchronization sources within the same RTP session will be unique.",
    "System that defines the context in which the ImplementationDataTypeElement is defined.",
    "System which describes the rapid prototyping algorithm in the format of AUTOSAR Software Components.",
    "System which describes the software components of the host ECU.",
    "SystemSignal to which the communication resource is assigned",
    "SystemSignalGroup to which the communication resource is assigned",
    "TCP Port configuration.",
    "TCP configuration properties",
    "TCP option kind allowed by this filter.",
    "TP address for 1:n connections.",
    "TTL for Request and Subscribe messages.",
    "Tailorings of the owned and inherited attributes of this Meta Classes",
    "Tailors the attribute of a <<primitive>> data type.",
    "Target destination of the referencing mapping.",
    "Target-configuration of secure communication protocol configuration settings to crypto module entities.",
    "Tcp or Udp Configuration.",
    "TcpPort configuration that is used for Method and Event communication in IP-Unicast case. \r\n\r\nDuring SOME/IP Service Discovery:\r\nPortNumber that is sent in the SD-Offer Message to client (answer on SD-find) or clients (SD-offer).\r\n\r\nMethod:\r\nThis is the destination-port where the server accepts the method call messages (from the clients).\r\nThis is the source-port where the server sends the method response messages (to the client).\r\n\r\nEvent:\r\nThis is the event source-port where the server sends the event messages to the subscribed clients in IP-Unicast case.",
    "TcpPort configuration that is used for Method and Event communication in IP-Unicast case. \r\n\r\nSOME/IP Service Discovery:\r\nPortNumber that is sent in the SD-Offer Message to client (answer on SD-find) or clients (SD-offer).\r\n\r\nMethod:\r\nThis is the destination-port where the server accepts the method call messages (from the clients).\r\nThis is the source-port where the server sends the method response messages (to the client).\r\n\r\nEvent:\r\nThis is the event source-port where the server sends the event messages to the subscribed clients in IP-Unicast case.",
    "TcpTp Configuration.",
    "Test Identifier (TID) according to ISO 15031-5.",
    "The \"collection of ModeDeclarations\" ( = ModeDeclarationGroup) supported by a component",
    "The (untyped) PerInstanceMemory used in this role (e.g. as a Permanent RAM Block for an NVRAM Block).",
    "The 20-bit Flow Label field in the IPv6 header may be used by a source to label sequences of packets for which it requests special handling by the IPv6 routers, such as non-default quality of service. If not set a Flow Label of zero is used to indicate packets that have not been labeled.",
    "The 6-bit Differentiated Service Field in the IP headers may be used for classifying network traffic. If not set a value of zero is used to indicate packets that have not been classified.",
    "The AUTOSAR Meta-Class that may be extended by this SdgClass.",
    "The AbstractEvent (event) whose execution order is restricted by the contraint.",
    "The Appl_Watchdog_Limit shall be an 8-bit value specifying the period for the application watchdog in Appl_Watchdog_Limit times 256 NTUs.",
    "The Autosar or custom specifications that contain that are considered in this Data Exchange Point.",
    "The BSW Trigger.",
    "The BSW mode group prototype.",
    "The BswInternalTriggeringPoint for which the BSW Scheduler using this policy.",
    "The BswModuleEntry called at this point.",
    "The CAN Transport Layer supports half and full duplex channel modes.",
    "The CAN protocol supports two types of frame formats. The standard frame format uses 11-bit identifiers and is defined in the CAN specification 2.0 A. Additionally the extended frame format allows 29-bit identifiers and is defined in the CAN specification 2.0 B.",
    "The COM scheduling time is used in order to be able to calculate the worst case bus timing. The processing period shall be specified AUTOSAR conform in seconds.",
    "The Client Identifier of the transaction handle used for an inter-ECU client server communication is defined by this attribute. If defined the RTE generator shall use this clientId.",
    "The CompositeTypeMapping maps one VariableDataPrototype of the composite data type to a SystemSignal.",
    "The CompositeTypeMapping maps the ApplicationArrayElements and ApplicationRecordElements to Signals of the SignalGroup.",
    "The DataIDList for FUP messages to calculate CRC.",
    "The DataIDList for OFNS messages to calculate CRC.",
    "The DataIDList for OFS messages to calculate CRC.",
    "The DataIDList for SYNC messages to calculate CRC.",
    "The DoIP source address defines the logical address of the tester that starts the communication. The GenericTpConnection is able to define a source address range (without gaps) with the two attributes sourceAddressRangeStart and sourceAddressRangeEnd.  This attribute defines the start of the range.",
    "The DoIP source address defines the logical address of the tester that starts the communication. The GenericTpConnection is able to define a source address range (without gaps) with the two attributes sourceAddressRangeStart and sourceAddressRangeEnd. This attribute defines the end of the range.",
    "The ECU context for a particular timing event. The link is optional, because the EcuInstance can not be defined for events of type TDEventCycleStart.",
    "The ECUMapping contains the mapping of all CommunicationControllers of the ECU.",
    "The ECUMapping contains the mapping of all HW Communication Ports of the ECU.",
    "The EcucDefinitionElement serves as a argument for the formular.",
    "The EcucQuery serves as a argument for the formula.",
    "The EcucQueryExpression points to an EcucDefinitionElement that is used to find an element in the EcucDescription. In order to find the right element in the EcucDescription a search is necessary. If the complete EcucDescription needs to be searched this global reference shall be used. Due to the \"mixedString\" nature of the EcucQueryExpression several references to EcucDefintionElements can be used in one EcucQueryExpression.",
    "The EcucQueryExpression points to an EcucDefinitionElement that is used to find an element in the EcucDescription. In order to find the right element in the EcucDescription a search is necessary. If the search is executed inside of the same module that contains the EcucQuery this local reference shall be used. Due to the \"mixedString\" nature of the EcucQueryExpression several references to EcucDefintionElements can be used in one EcucQueryExpression.",
    "The ExclusiveArea for which the BSW Scheduler using this policy.",
    "The ExecutableEntity whose execution order is restricted by the contraint.",
    "The Expected_Tx_Trigger shall be an eight (8) bit value which limits the number of messages the FSE may try to transmit in one matrix cycle.",
    "The FMFeature that is targeted by this FMFeatureRelation.",
    "The FMFeature whose state is defined by this FMFeatureSelection.",
    "The FlatMap used in the scope of this RootSwCompositionPrototype.",
    "The GlobalTimeGateway is hosted by the referenced EcuInstance.",
    "The GlobalTimeMaster is bound to the CommunicationConnector.",
    "The GlobalTimeSlave is bound to the CommunicationConnector.",
    "The InfoType according to ISO 15031-5",
    "The Initial_Ref_Offset shall be an eight (8) bit value for the initialisation of Ref_Trigger_Offset.",
    "The LIN slave that is target of this assignment. \r\n\r\nPlease note that this reference is redundant to the assignedController reference. \r\n\r\nIn an Ecu Extract of the LinMaster the LinSlave Ecus shall not be available.\r\n\r\nThe information that is described here is necessary in the ECU Extract for the configuration of the LinMaster.",
    "The LIN slaves controller who is target of this assignment. \r\nOptional in case LinConfigurationEntry.assignedLinSlaveConfig exists.",
    "The MACsec confidentiality offset specifies the number of bytes starting from the frame header. MACsec encrypts only the bytes after the offset in a frame.",
    "The Message Type which shall be placed into the SOME/IP header.",
    "The ModeDeclarationGroupPrototype of this mode interface.\r\nThis aggregation contains a variation point although it is not variant. Therefore, this variation point shall not exist in models. See constr_2638.",
    "The ModeDeclarations collected in this ModeDeclarationGroup.",
    "The NM instance identifier is used for reporting of development errors to DET. It must be unique for each NM instance within one ECU.",
    "The Offset of the action point within a minislot. Unit: macroticks",
    "The ParameterDataPrototype of this ParameterInterface.\r\nThis aggregation contains a variation point although it is not variant. Therefore, this variation point shall not exist in models. See constr_2638.",
    "The ParameterDataPrototype to which the ParameterComSpec applies.",
    "The ParameterDataPrototype to which the ParameterRequireComSpec applies.",
    "The ParameterDataPrototype used in this role, e.g. \r\n\r\n* ROM Block of an NVRAM Block. It shall belong to the same SwcInternalBehavior or BswInternalbehavior.\r\n\r\n* In the role signalBasedDiagnostics it has to refer to a ParameterDataPrototype in a ParameterInterface.",
    "The PhysicalChannel on which the Frame is transmitted.",
    "The PhysicalChannel on which the IPdu is transmitted.",
    "The PhysicalChannel on which the ISignal is transmitted.",
    "The PortBlueprint in the context of the mapping",
    "The PortPrototype in the context of the mapping.",
    "The PortPrototypeBlueprint in the context of the mapping.",
    "The PortPrototypes through which this SwComponentType can communicate.\r\n\r\nThe aggregation of PortPrototype is subject to variability with the purpose to support the conditional existence of PortPrototypes.",
    "The Privacy Level helps to identify the Log and Trace content towards the degree of privacy to it.",
    "The RTE event used to receive the data via this buffer.",
    "The RTE generator is forced to assign this value to the corresponding error symbol. Note that for error codes certain ranges are predefined (see RTE specification).",
    "The RTE shall take the value of this attribute for generating the source code representation of this ModeDeclaration.",
    "The RoleBasedPortAssignement defines which client server port of the NvBlockSwComponentType serves for which kind of service or notification. In case of notifications one common callback function is provided by the RTE for each individual kind of notification defined by the \"role\".\r\n\r\nThe aggregation of RoleBasedPortAssignment is subject to variability with the purpose to support the conditional existence of ports.",
    "The RunnableEntity has a ServerCallPoint.\r\nThe aggregation of ServerCallPoint is subject to variability with the purpose to support the conditional existence of client server PortPrototypes or the variant existence of server call points in the implementation.",
    "The SOME/IP major and minor Version of the Service.",
    "The SWC Trigger provided by a particular port.",
    "The SWC mode group prototype provided by a particular port.",
    "The Service Discovery shall delay answers to unicast messages triggered by multicast messages (e.g. Subscribe Eventgroup after Offer Service).",
    "The ServiceDiscovery module is able to activate and deactivate the PDU routing for ClientServerOperations (SOME/IP methods).\r\nThe upper multiplicity of this role has been increased to * due to resolving an atpVariation stereotype. The previous value was 1.",
    "The ServiceDiscovery module is able to activate and deactivate the PDU routing for events.",
    "The ServiceDiscovery module is able to activate and deactivate the PDU routing for events.\r\nThis aggregation contains a variation point although it is not variant. Therefore, this variation point shall not exist in models. See constr_2638.",
    "The ServiceDiscovery module is able to activate and deactivate the PDU routing for receiving events.",
    "The ServiceDiscovery module is able to activate and deactivate the PDU routing for receiving events.\r\nThis aggregation contains a variation point although it is not variant. Therefore, this variation point shall not exist in models. See constr_2638.",
    "The ServiceDiscovery module is able to activate and deactivate the PDU routing from and to TCP/IP-sockets.",
    "The StaticPart and the DynamicPart can be separated in multiple segments within the multiplexed PDU. Therefore the StaticPart and\r\nthe DynamicPart can contain multiple SegmentPositions.",
    "The SwBaseType to be used for the axis. Note that this is not applicable for ApplicationDataTypes. The value shall be ignored.",
    "The SwDataDefProps owned by the CompositeNetworkRepresentation are used to define the network representation of the leaf element of an ApplicationCompositeDataType.",
    "The SwcInternalBehaviors owned by an AtomicSwComponentType can be located in a different physical file. Therefore the aggregation is <<atpSplitable>>.\r\nThe upper multiplicity of this role has been increased to * due to resolving an atpVariation stereotype. The previous value was 1.",
    "The SwcToSwcOperationArguments that shall not take the same way (Signal Path) in the topology.",
    "The SwcToSwcSignal can be transmitted on one of these physical channels.",
    "The SwcToSwcSignal shall not be transmitted on one of these physical channels.",
    "The SwcToSwcSignals that shall not take the same way (Signal Path) in the topology.",
    "The SwcToSwcSignals that shall take the same way (Signal Path) in the topology.",
    "The TP message is accepted independently of the actually used destination address (DA). Otherwise, only the destination address configured as receiver.tpAddress is accepted. Only derived for the receiving ECU.",
    "The TP message is accepted independently of the actually used source address (SA). Otherwise, only the source address configured as transmitter.tpAddress is accepted. Only derived for the receiving ECU.",
    "The TP message is sent with variable destination address (DA). Otherwise, the destination address configured as receiver.tpAddress is always used. Only derived for the transmitting ECU.",
    "The TP message is sent with variable source address (SA). Otherwise, the source address configured as transmitter.tpAddress is always used. Only derived for the transmitting ECU.",
    "The Transmission Mode Selector evaluates the conditions for a subset of signals and decides which transmission mode should be used. In case only one transmission mode is used there is no need for the \"TransmissionModeCondition\" and its sub-structure. In case the transmission mode shall be switched using the COM-API \"Com_SwitchIpduTxMode\" there is no need for the \"TransmissionModeCondition\" and its sub-structure.",
    "The Trigger for which the BSW Scheduler using this policy.",
    "The Trigger of this trigger interface.\r\nThis aggregation contains a variation point although it is not variant. Therefore, this variation point shall not exist in models. See constr_2638.",
    "The UpdateIndicationBit indicates to the receivers that the signal (or the signal group) was updated by the sender. Length is always one bit. The UpdateIndicationBitPosition attribute describes the position of the update bit within the SignalIPdu. For Signals of a ISignalGroup this attribute is irrelevant and shall be ignored. \r\n\r\nNote that the exact bit position of the updateIndicationBitPosition is linked to the value of the attribute packingByteOrder because the method of finding the bit position is different for the values mostSignificantByteFirst and mostSignificantByteLast. This means that if the value of packingByteOrder is changed while the value of updateIndicationBitPosition remains unchanged the exact bit position of updateIndicationBitPosition within the enclosing ISignalIPdu still undergoes a change.\r\n\r\nThis attribute denotes the least significant bit for \"Little Endian\" and the most significant bit for \"Big Endian\" packed signals within the IPdu (see the description of the packingByteOrder attribute). In AUTOSAR the bit counting is always set to \"sawtooth\" and the bit order is set to \"Decreasing\". The bit counting in byte 0 starts with bit 0 (least significant bit). The most significant bit in byte 0 is bit 7.",
    "The VariableAccess for which the data buffer is used.",
    "The VariableDataPrototype of this nv data interface.\r\nThis aggregation contains a variation point although it is not variant. Therefore, this variation point shall not exist in models. See constr_2638.",
    "The VariableDataPrototype the ComSpec applies for.",
    "The VariableDataPrototype used in this role, e.g. \r\n\r\n* Permanent RAM Block of an NVRAM Block which shall belong to the same SwcInternalBehavior or BswInternalBehavior.\r\n\r\n* In the role signalBasedDiagnostics it has to refer to a VariableDataPrototype in a SenderReceiverInterface or a NvDataInterface.",
    "The WaitPoint associated with the RunnableEntity.",
    "The activation point is the source of this event.",
    "The aggregated TlsCryptoCipherSuiteProps provide details for the TLS Cipher Suite.",
    "The aggregation in the role ident provides the ability to make the DiagnosticAbstractParameter identifiable.\r\n\r\nFrom the semantical point of view, the AbstractDiagnosticParameter is considered a first-class Identifiable and therefore the aggregation in the role ident shall always exist (until it may be possible to let AbstractDiagnosticParameter directly inherit from Identifiable).",
    "The aggregation in the role ident provides the ability to make the ExternalTriggeringPoint identifiable.\r\n\r\nFrom the semantical point of view, the ExternalTriggeringPoint is considered a first-class Identifiable and therefore the aggregation in the role ident shall always exist (until it may be possible to let ModeAccessPoint directly inherit from Identifiable).",
    "The aggregation in the role ident provides the ability to make the ModeAccessPoint identifiable.\r\n\r\nFrom the semantical point of view, the ModeAccessPoint is considered a first-class Identifiable and therefore the aggregation in the role ident shall always exist (until it may be possible to let ModeAccessPoint directly inherit from Identifiable).",
    "The aggregation of ExternalTriggeringPoint is subject to variability with the purpose to support the conditional existence of trigger ports or the variant existence of external triggering points in the implementation.",
    "The aggregation of InternalTriggeringPoint is subject to variability with the purpose to support the variant existence of internal triggering points in the implementation.",
    "The aggregation that has to be accepted by the restrictions of this AggregationCondition",
    "The applicable filter algorithm for filtering the value of the corresponding dataElement.",
    "The arTypedPerInstanceMemory for which the BSW Scheduler using this policy",
    "The arguments of an operation that can take the predefined way in the topology.",
    "The arguments sent in one direction (either from client to server or server to client) of the operations that shall take the same signal path.",
    "The assigned entry. It should be an implementedEntry or expectedEntry of the module or cluster that requires the ServiceNeeds.",
    "The associated ServiceNeeds.",
    "The associated variants are considered part of this PredefinedVariant. This means the settings of the included variants are included in the settings of the referencing PredefinedVariant. Nevertheless the included variants might be included in several predefined variants.",
    "The association callbackHeader describes in which header files the function declarations of callback functions are provided to a service module.\r\nWith this information the service module can include the appropriate header files in its configuration files.",
    "The attribute controls whether the enclosing DTC is relevant for OBD.",
    "The attribute defines the mode in which the application is assumed to transmit the respective data.",
    "The attribute describes the intended typical alignment of the DataPrototype. If the attribute is not defined the alignment is determined by the swBaseType size and the memoryAllocationKeywordPolicy of the referenced SwAddrMethod.",
    "The attribute describes the typical alignment of objects within this memory section.",
    "The attribute represents the version of the [ARMetaClass{PersistencyFileStorage}] or [ARMetaClass{PersistencyKeyValueStorage}].",
    "The attribute specifies the time in second a coupling port is switched on to enable the host ECU (ECU that maintains an Ethernet switch) to listen to the network for potential network management requests.",
    "The attribute state represents the current state of the current file according to the configuration management plan. It is a NameToken until possible states are  standardized.",
    "The attribute timeBaseJitter is a mandatory attribute for the master and not used for slaves. \r\n\r\nLIN 2.0 Spec states: \"The jitter value specifies the differences between the maximum and minimum delay from time base start point to the frame header sending start point (falling edge of BREAK signal).\" \r\n\r\nThe jitter shall be specified AUTOSAR conform in seconds.",
    "The attribute timeBaseJitter is a mandatory attribute for the master and not used for slaves. \r\nLIN 2.0 Spec states: \"The jitter value specifies the differences between the maximum and minimum delay from time base start point to the frame header sending start point (falling edge of BREAK signal).\" \r\nThe jitter shall be specified AUTOSAR conform in seconds.",
    "The attribute timeoutCs represents the time (in seconds) which elapses between the transmit request of a CF N-PDU until the transmit request of the next CF N-PDU.",
    "The available EnumerationLiterals of the Enumeration definition. Only applicable if the category of the HwAttributeDef equals Enumeration.",
    "The average heap usage measured. Unit: byte.",
    "The average stack usage measured. Unit: byte.",
    "The baseline of the AUTOSAR standard that is used as a reference within this Data Exchange Point.",
    "The behavior of this implementation.\r\n\r\nThis relation is made as an association because\r\n* it follows the pattern of the SWCT\r\n* since ARElement cannot be split, but we want supply the implementation later, the BswImplementation is not aggregated in BswBehavior",
    "The best case execution time (BCET) defines the minimum amount of time the related executable entity requires for its execution.",
    "The call point invoking the call to which the result belongs.",
    "The call point to be used for retrieving the result.",
    "The call rate of the periodic scheduler to compare the values of the DataIdentifier (DID) or to detect DTC status changes.",
    "The category is a keyword that specializes the semantics of the Describable. It affects the expected existence of attributes and the applicability of constraints.",
    "The category is a keyword that specializes the semantics of the Identifiable. It affects the expected existence of attributes and the applicability of constraints.",
    "The category of a FMFeatureDecomposition defines the type of\r\ndependency that is defined by the FMFeatureDecomposition. There\r\nare four different categories: MANDATORYFEATURE, OPTIONALFEATURE,\r\nALTERNATIVEFEATURE, and MULTIPLEFEATURE.",
    "The category represents the identification of the concrete E2E profile. The applicable values are specified in a semantic constraint and determine the applicable attributes of EndToEndDescription.",
    "The choices available in a EcucChoiceContainerDef.",
    "The cluster drift damping factor used in clock synchronization rate correction in microticks",
    "The communication cycle where the frame described by this timing is sent. If a timing is given in this way the referencing FlexrayCluster shall specify the cycleCountMax as upper bound and point of total repetition.\r\nThis value is incremented at the beginning of each new cycle, ranging from 0 to cycleCountMax, and is reset to 0 after a sequence of cycleCountMax+1 cycles.",
    "The communication cycle where the frame is sent.",
    "The component that containts the referenced ExecutableEntity for the ExecutionTimeConstraint. If the entity is in a basic software module no component shall be provided.",
    "The compuMethod specifies the possible values for the variant criterion serving as an enumerator.",
    "The containers defined within the EcucParamConfContainerDef.",
    "The content of this attribute shall be used to initialize gaps in the memory occupied by a structured data type in the case that an NotAvailableValueSpecification is used. Note that this pattern is only applied during initialization!",
    "The context for the referred element.",
    "The context for the scope of this timing event.",
    "The context in the AUTOSAR Metamodel to which' this reference is allowed to point to.",
    "The data accessed via the BSW Scheduler.",
    "The data element which can take the predefined way in the topology.",
    "The data element which shall not take the predefined way in the topology.",
    "The data elements of this SenderReceiverInterface.\r\nThis aggregation contains a variation point although it is not variant. Therefore, this variation point shall not exist in models. See constr_2638.",
    "The data is received via the BSW Scheduler.",
    "The data is sent via the BSW Scheduler.",
    "The data mappings defined.",
    "The data received over the BSW Scheduler using this policy.",
    "The data sent over the BSW Scheduler using this policy.",
    "The deactivation of indicators per event is defined as healing of a diagnostic event. The operation cycle in which the warning indicator will be switched off is defined here.",
    "The default value consists of a number of elements. Each default value element is represented by the element and the position in an array.",
    "The denominator Dem shall use to compute the ratio.",
    "The direct successor of an executable entity or a group of executable entities.",
    "The distance between two hosts. The hop count n means that n gateways separate the source host from the destination host \r\n(Range 0..255)",
    "The duration of a minislot (dynamic segment). Unit: macroticks.",
    "The duration of a slot in the static segment. Unit: macroticks",
    "The duration of the dynamic slot idle phase in minislots.",
    "The duration of the network idle time in macroticks",
    "The duration of the symbol window. Unit: macroticks",
    "The duration of the time interval within which the event repeatedly occurs. The event occurs at arbitrary points in time within the given time interval.",
    "The duration of the time interval within which the event repeatedly occurs. The event occurs at concrete points in time within the given time interval.",
    "The duration of timer t_TrcvStdbyDelay in seconds. The granularity of this parameter shall be restricted to full FlexRay cycles (cycle). The transceiver status setting to STANDBY shall be delayed by this value.\r\n\r\nNot specifying a value or a value of 0 shall imply that the timer is not used.",
    "The entity which is started by the event.",
    "The entry of another (or the same) BSW module which is called by this entry (usually via C function call). This information allows to set up a model of call chains.\r\n\r\nThe variablity of this association is especially targeted at debug scenarios: It is possible to have one variant calling into the AUTOSAR debug module and another one which doesn't.\r\n\r\nNote that this relation has been marked as obsolete, since the more powerful definition of a callPoint should be used.\r\nThis property was modified due to atpVariation (DirectedAssociationPattern).",
    "The entry to be called.",
    "The entry which is implemented by this module entity.",
    "The estimated execution time.",
    "The event chain that defines the scope of the constraint.",
    "The event chains that are in the scope of the constraint.  Mutually exclusive to [ARMetaClassRole{scopeEvent}{SynchronizationTimingConstraint}], see ([constr_4522]).",
    "The event destination assigns events to none, one or multiple origins.",
    "The event provided by the service.",
    "The events that are in the scope of the constraint.  Mutually exclusive to [ARMetaClassRole{scope}{SynchronizationTimingConstraint}], see ([constr_4522])",
    "The executable entities --- referenced by their events --- that shall finish execution before the synchronization point.",
    "The executable entities --- referenced by their events --- that shall start execution after the synchronization point.",
    "The executable entity for which this execution time is described.",
    "The executable entity for which this stack usage is described.",
    "The executable entity runs completely inside the referenced exclusive area.",
    "The executable entity runs completely inside the referenced exclusive area.\r\nThis property was modified due to atpVariation (DirectedAssociationPattern).",
    "The existence of this aggregation indicates that an authentication is foreseen. The details are clarified by the aggregated class.",
    "The existence of this aggregation specifies that the IdsM shall add a signature to the QSEv messages it sends onto the network. The cryptographic algorithm and key to be used for this signature is further specified by the aggregated meta-class specifically for the Adaptive Platform.",
    "The existence of this aggregation specifies that the IdsM shall add a signature to the QSEv messages it sends onto the network. The cryptographic algorithm and key to be used for this signature is further specified by the aggregated meta-class specifically for the Classic Platform.",
    "The existence of this attribute specifies that the IdsM shall add a timestamp to the QSEv messages it sends onto the network. I.e., if this attribute does not exist, no timestamp shall be added to the QSEv messages.\r\n\r\nThe content of this attribute further specifies the timestamp format as follows:\r\n- \"AUTOSAR\" defines AUTOSAR standardized timestamp format according to the Synchronized Time-Base Manager\r\n- Any other string defines a proprietary timestamp format.\r\n\r\nNote: A string defining a proprietary timestamp format shall be prefixed by a company-specific name fragment to avoid collisions.",
    "The existence of this attribute turns the data instance into an array of data. The attribute determines the size of the array in terms of how many elements the array can take.",
    "The existence of this attribute turns the data instance into an array of data. The attribute determines the size of the array in terms of number of elements.",
    "The existence of this attributes (if bigger than 0) defines the size of an array and declares that this ImplementationDataTypeElement represents the type of each single array element.",
    "The existence of this reference indicates that the ClientComSpec refers to the getter of a Field.",
    "The existence of this reference indicates that the ClientComSpec refers to the setter of a Field.",
    "The existence of this reference indicates that the ServerComSpec refers to the getter of a Field.",
    "The existence of this reference indicates that the ServerComSpec refers to the setter of a Field.",
    "The existence of this reference indicates that the call point is used only in the context of the referred BswDistinguishedPartitions.",
    "The existence of this reference indicates that the usage of the event is limited to the context of the referred BswDistinguishedPartitions.",
    "The existence of this reference indicates that the variable is received resp. sent only in the context of the referred BswDistinguishedPartitions.",
    "The exponent of the physical dimension \"length\".",
    "The exponent of the physical dimension \"luminous intensity\".",
    "The exponent of the physical dimension \"mass\".",
    "The exponent of the physical dimension \"quantity of substance\".",
    "The exponent of the physical dimension \"temperature\".",
    "The exponent of the physical dimension \"time\".",
    "The features of a feature model define a tree. The attribute root points to the root of this tree.",
    "The features that are affected by the dependency defined by the FMFeatureDecomposition.",
    "The field provided by the service.",
    "The first communication cycle where the frame is sent.\r\n\r\nThis value is incremented at the beginning of each new cycle, ranging from 0 to\r\n63, and is reset to 0 after a sequence of 64 cycles.",
    "The first two bytes of the payload segment of the FlexRay frame format for frames transmitted in the dynamic segment can be used as receiver filterable data called the message ID.",
    "The formula that implements the assertion.",
    "The formula that implements the condition.",
    "The frame whose identifier is reset by this assignment.",
    "The frame whose identifier is set by this assignment.",
    "The full duplex mechanisms is enabled if this attribute is set to true. Otherwise half duplex is enabled.",
    "The hardware element (e.g. type of ECU) for which the execution time is specified.",
    "The hardware elements (e.g. the processor) required for this implementation.",
    "The id of the channel. The value shall be unique for each channel.",
    "The implementation type of this argument value.",
    "The implementation type of this argument value. It should not be composite type or a pointer.",
    "The includedDataTypeSet is used by a basic software module for its implementation.",
    "The includedDataTypeSet is used by a software component for its implementation.",
    "The initial mode of the ModeDeclarationGroup. This mode is active before any mode switches occurred.",
    "The initial value applicable for the corresponding ParameterDataPrototype.\r\nThis aggregation contains a variation point although it is not variant. Therefore, this variation point shall not exist in models. See constr_2638.",
    "The initial value owned by the NvComSpec\r\nThis aggregation contains a variation point although it is not variant. Therefore, this variation point shall not exist in models. See constr_2638.",
    "The instance of VariableDataPrototype annotated.",
    "The instance of annotated ModeDeclarationGroupPrototype.",
    "The instance of annotated ParameterDataPrototype.",
    "The instance of annotated trigger.",
    "The instance of nv data annotated.",
    "The integer Value of a freely defined data byte.",
    "The integer value of a freely defined data byte.",
    "The interface that this port provides.",
    "The interface that this port requires.",
    "The interface version the SOME/IP transformer shall use.",
    "The internal behavior implemented by this Implementation.",
    "The inverted condition",
    "The length of dynamic length signals is variable in run-time. Only a maximum length of such a signal is specified in the configuration (attribute length in ISignal element).",
    "The length of the Tx_Enable window shall be a four (4) bit value specifying the length of the time period (1-16 nominal CAN bit times) in which a transmission may be started.",
    "The local address over which the CSI is consumed (udp, tcp or both).\r\nThis property was modified due to atpVariation (DirectedAssociationPattern).",
    "The local address over which the PSI is provided (udp, tcp or both).\r\nThis property was modified due to atpVariation (DirectedAssociationPattern).",
    "The local address over which the Service is consumed.\r\nThis property was modified due to atpVariation (DirectedAssociationPattern).",
    "The local address over which the Service is provided.\r\nThis property was modified due to atpVariation (DirectedAssociationPattern).",
    "The logical DoIP address of the source entity. This optional reference shall only be used for DoIP (Diagnosis over IP).",
    "The logical DoIP address of the target entity. This optional reference shall only be used for DoIP (Diagnosis over IP).",
    "The logical DoIP address.",
    "The logical successor of an executable entity or a group of executable entities.",
    "The lower bound of the expected distance of two consecutive event occurrences.",
    "The lower multiplicity of the specified element.\r\n\r\n0: optional\r\n\r\n1: at least one occurrence\r\n\r\nn: at least n occurrences\r\n\r\natpVariation: [RS_ECUC_00082]",
    "The main purpose of the shortLabel is to contribute to the splitkey of aggregations that are <<atpSplitable>>.",
    "The mapped BswInternalBehavior",
    "The mapped BswModuleEntity",
    "The mapped CP Software Cluster",
    "The mapped CP Software Cluster\r\nThis property was modified due to atpVariation (DirectedAssociationPattern).",
    "The mapped SWC runnable.",
    "The mapped SwcInternalBehavior.",
    "The mapping of ApplicationPartitions to a CpSoftwareCluster.",
    "The mappings of AtomicSoftwareComponent Instances to Implementations.\r\n\r\natpVariation: Derived, because SwcToEcuMapping is variable.",
    "The mappings of SW cluster to ECUs.",
    "The mappings of SW components to ECUs.\r\n\r\natpVariation: SWC shall be mapped to other ECUs.",
    "The max. Synchronization Jump Width value as a percentage of the total bit time. The (Re-)Synchronization Jump Width (SJW) defines how far a resynchronization may move the Sample Point inside the limits defined by the Phase Buffer Segments to compensate for edge phase errors.",
    "The max. value of the sample point as a percentage of the total bit time.",
    "The maximal time an acknowledgement is delayed for transmission in seconds.",
    "The maximum acceptable amount of time (in seconds), Platform Health Management waits for an acknowledgement by State Management after sending the notification.",
    "The maximum allowed age of the signal since it was originally read by a sensor. This is a requirement specified on the receiver side.",
    "The maximum allowed amount of consecutive failed counter checks.",
    "The maximum amount of missing or repeated Data which the receiver does not expect to exceed under normal communication conditions.",
    "The maximum amount of missing or repeated Data which the receiver does not expect to exceed under normal communication conditions.\r\n\r\nCaveat: The E2E wrapper approach involves technologies that are not subjected to the AUTOSAR standard and is superseded by the superior E2E transformer approach (which is fully standardized by AUTOSAR). Hence, new projects (without legacy constraints due to carry-over parts) shall use the fully standardized E2E transformer approach.",
    "The maximum devation of the sporadic event occurrence.\r\nJitter=max |nthPeriod - standardPeriod|",
    "The maximum deviation of the periodic event occurrence.",
    "The maximum deviation of the time interval's starting point from the beginning of the given period. This parameter is only applicable in conjunction with the parameter [ARMetaClassRole{patternPeriod}{BurstPatternEventTriggering}]",
    "The maximum deviation of the time interval's starting point from the beginning of the given period. This parameter is only applicable in conjunction with the parameter [ARMetaClassRole{patternPeriod}{ConcretePatternEventTriggering}].",
    "The maximum execution time.",
    "The maximum heap usage measured. Unit: byte.",
    "The maximum latency between the occurrence of the stimulus and the occurrence of the corresponding response of the associated event chain.",
    "The maximum length of a cryptographic key, that is used by the software-component or module for this configuration.  Unit: bit.",
    "The maximum measured execution time.",
    "The maximum number of DTCs that can be stored as DTCs with change status within one ResponseOnEventSchedulerRate interval.",
    "The maximum number of N-PDUs the CanTp receiver allows the sender to send, before waiting for an authorization to continue transmission of the following N-PDUs. For further details on this parameter value see ISO 15765-2 specification.\r\n\r\nNote: For reasons of buffer length, the CAN Transport Layer can adapt the BS value within the limit of this maximum BS",
    "The maximum number of elements that the array can contain.",
    "The maximum number of event occurrences within the given time interval.\r\nThe event may never occur, or may occur N times between 1 and [ARMetaClassRole{maxNumberOfOccurrences}{BurstPatternEventTriggering}]. \r\nIf the parameter [ARMetaClassRole{minNumberOfOccurrences}{BurstPatternEventTriggering}] is specified then the event occurs at least the number of times specified by [ARMetaClassRole{minNumberOfOccurrences}{BurstPatternEventTriggering}] and at maximum by [ARMetaClassRole{maxNumberOfOccurrences}{BurstPatternEventTriggering}].",
    "The maximum number of events that can be simultaneously configured with sub function onChangeOfDataIdentifier.",
    "The maximum number of events that can be simultaneously configured with sub function onComparisonOfValues.",
    "The maximum number of loops of the kRun cycle.",
    "The maximum number of measurable data bytes allowed for each DID that is used for comparison or data change.",
    "The maximum number of sync nodes allowed in the cluster",
    "The maximum number of times that a node in this cluster is permitted to attempt to start the cluster by initiating schedule synchronization",
    "The maximum offset the target event occurs relatively after the occurrence of the source event.",
    "The maximum simulated execution time.",
    "The maximum stack usage measured. Unit: byte.",
    "The maximum time distance between two consecutive (subsequent) occurrences of the associated event.",
    "The maximum time interval, within which the synchronized events shall occur.  The events may occur in any order\r\nwithin this time interval. The time interval starts at the point-in-time when one of the referenced events occurs.",
    "The measurement & calibration support data belonging to this implementation. The measurement & calibration support data belonging to this implementation. The aggregation is <<atpSplitable>> because in case of an already existing BSW Implementation model, this description will be added later in the process, namely at code generation time.",
    "The method provided by the service.",
    "The mimum offset the target event occurs relatively after the occurrence of the source event.",
    "The min. Synchronization Jump Width value as a percentage of the total bit time. The (Re-)Synchronization Jump Width (SJW) defines how far a resynchronization may move the Sample Point inside the limits defined by the Phase Buffer Segments to compensate for edge phase errors.",
    "The min. value of the sample point as a percentage of the total bit time.",
    "The minimum execution time.",
    "The minimum heap usage measured. Unit: byte.",
    "The minimum latency between the occurrence of the stimulus and the occurrence of the corresponding response of the associated event chain.",
    "The minimum measured execution time.",
    "The minimum number of event occurrences within the given time interval.",
    "The minimum number of received requests that is sufficient to continue the calculation of next cycle. This attribute represents the M in the M-out-of-N verification method.",
    "The minimum simulated execution time.",
    "The minimum stack usage measured. Unit: byte.",
    "The minimum time distance between subsequent consecutive occurrences of the associated event.\r\n\r\nIf the [ARMetaClassRole{minimumInterArrivalTime}{PeriodicEventTriggering}] is less than the\r\n[ARMetaClassRole{period}{PeriodicEventTriggering}] minus the [ARMetaClassRole{jitter}{PeriodicEventTriggering}], then the [ARMetaClassRole{minimumInterArrivalTime}{PeriodicEventTriggering}] has no effect on the properties of the constraint.",
    "The minimum time distance between two consecutive (subsequent) occurrences of the associated event.",
    "The mode declaration group that is accessed by this runnable.",
    "The mode declaration group that is switched by this runnable.",
    "The modes, in which this event is disabled.",
    "The name of the \"C\"-type",
    "The name of the OS category 2 ISR, which is controlled by the referred trigger. This means, that the module manages the category 2 ISR (e.g. according hardware initialization and enabling of ISR). Instead of calling an RTE / SchM API to raise the appropriate events in components or modules receiving the trigger, this ISR directly schedules the triggered ExecutableEntitys. The ISR name is required by the integrator to map the BswEvents and RTEEvents to  this ISR.",
    "The name of the OS task, which is controlled by the referred trigger. This means, that the module uses the trigger condition to directly activate an OS task instead of calling an API of the BswScheduler. The task name is required by the RTE generator resp. BswScheduler to raise the appropriate events in components or modules receiving the trigger.",
    "The name of the protocol used.",
    "The newly assigned NAD value (Byte Position).",
    "The newly assigned NAD value.",
    "The nominal latency between the occurrence of the stimulus and the occurrence of the corresponding response of the associated event chain.",
    "The nominal measured execution time.",
    "The nominal number of microticks in a communication cycle",
    "The nominal simulated execution time.",
    "The nth array element describes the maximum distance that can be observed for a sample of n+1 event occurrences.\r\n\r\nThis is an array with an identical number of elements as for the minimumDistance.",
    "The nth array element describes the minimum distance that can be observed for a sample of n+1 event occurrences.\r\n\r\nThis is an array with an identical number of elements as for the maximumDistance.",
    "The number of base points to be calculated for this axis. This element exists to enable the number of axis points to be stored explicitly, although it could also be described as swGenericAxisParam.\r\n\r\nThis attribute has been deprecated, note that the value of SwAxisIndividual.swMaxAxisPoints shall be taken instead.\r\n\r\nIn case of a generated axis, the number of axis points to be  generated shall be taken from SwAxisIndividual.swMaxAxisPoints.",
    "The number of communication cycles (after the first cycle) whenever the frame described by this timing is sent again.",
    "The number of macroticks in a communication cycle",
    "The number of quanta in the Synchronization Jump Width, SJW. The (Re-)Synchronization Jump Width (SJW) defines how far a resynchronization may move the Sample Point inside the limits defined by the Phase Buffer Segments to compensate for edge phase errors.",
    "The number of static slots in the static segment.",
    "The number of the last minislot in which a transmission can start in the dynamic segment for the respective node",
    "The occurrence expression for this event.",
    "The offset for each occurrence of the event in the specified time interval.  A list of point-in-times in the time interval given by the parameter patternLength at which the event occurs.",
    "The offset of the action point in networks",
    "The operation that is called by this runnable.",
    "The option is valid for generated functions related to communication over this port",
    "The originating port of the timing event",
    "The owned sdgClasses which define the structure of the Sdgs",
    "The owner SoftwareClusterDesign depends on the referenced SoftwareClusterDesign",
    "The parameters defined within the EcucParamConfContainerDef.",
    "The perInstanceParameter for which the BSW Scheduler using this policy.",
    "The period between successive calls to Com_MainFunctionRouteSignals of the AUTOSAR COM module in seconds.",
    "The period between successive calls to Com_MainFunctionRx of the AUTOSAR COM module in seconds.",
    "The period between successive calls to Com_MainFunctionTx of the AUTOSAR COM module in seconds.",
    "The period between successive calls to the Main Function of the ASR TP. Specified in seconds.",
    "The period between successive calls to the Main Function of the AUTOSAR TP. Specified in seconds.",
    "The period between successive calls to the Main Function of the NM Interface in seconds.",
    "The periodic distance between subsequent occurrences of the event.",
    "The port that belongs to the ComponentPrototype in the composition",
    "The port that is located on the outside of the CompositionType",
    "The prefix shall be used by the RTE generator as a prefix for the creation of symbols related to the referenced ModeDeclarationGroups, e.g \r\nRTE_TRANSITION_<ModeDeclarationGroup>.",
    "The prefix used to set the memory section's namespace in the code. The existence of a prefix element supersedes rules for a default prefix (such as the BswModuleDescription's shortName). This allows the user to define several name spaces for memory sections within the scope of one module, cluster or SWC.",
    "The presence of a ParameterAccess implies that a RunnableEntity needs read only access to a ParameterDataPrototype which may either be local or within a PortPrototype.\r\n\r\nThe aggregation of ParameterAccess is subject to variability with the purpose to support the conditional existence of parameter ports and component local parameters as well as the variant existence of ParameterAccess (points) in the implementation.",
    "The presence of a readLocalVariable implies that a RunnableEntity needs read access to a VariableDataPrototype in the role of implicitInterRunnableVariable or explicitInterRunnableVariable.\r\n\r\nThe aggregation of readLocalVariable is subject to variability with the purpose to support the conditional existence of implicitInterRunnableVariable and explicitInterRunnableVariable or the variant existence of readLocalVariable (points) in the implementation.",
    "The presence of a writtenLocalVariable implies that a RunnableEntity needs write access to a VariableDataPrototype in the role of implicitInterRunnableVariable or explicitInterRunnableVariable.\r\n\r\nThe aggregation of writtenLocalVariable is subject to variability with the purpose to support the conditional existence of implicitInterRunnableVariable and explicitInterRunnableVariable or the variant existence of writtenLocalVariable (points) in the implementation.",
    "The primitive attribute that has to be accepted by the restrictions of this PrimitiveAttributeCondition",
    "The probability for the measured lower and upper bound of the confidence interval.",
    "The properties of a communication graph with respect to the utilization of RTE Implementation Plug-in.",
    "The properties of the target data type.",
    "The properties of this AutosarDataType.",
    "The properties of this FlatInstanceDescriptor.",
    "The properties of this ImplementationDataTypeElement.",
    "The provided mode group for which the policy is specified.",
    "The providedClientServerEntry invoked by this event.",
    "The purpose of InstantiationDataDefProps are the refinement of some data def properties of individual instantiations within the context of a NvBlockSwComponentType.\r\n\r\n\r\nThe aggregation of InstantiationDataDefProps is subject to variability with the purpose to support the conditional existence of ports, component internal memory objects and those attributes.",
    "The purpose of a sequence counter is to map a response to the correct request of a known client. This attribute describes the length of the used sequence counter in bits. If the attribute does not exist or its value is set to 0 this means that the sequence counter is not used.\r\n\r\nPlease note that this attribute is deprecated and will be removed in future (Value is fixed to UInt16).",
    "The purpose of sequence counters is to map a response to the correct request of a known client.",
    "The purpose of this attribute is to define whether or not the ECU should send a NRC 0x78 (response pending) before transitioning to the bootloader (in this case the attribute shall be set to \"true\") or if the transition shall be initiated without sending NRC 0x78 (in this case the attribute shall be set to \"false\").",
    "The purpose of this element is to describe the requested quantization of data objects early on in the design process. \r\n\r\nThe resolution ultimately occurs via the conversion formula present (compuMethod), which specifies the transition from the physical world to the standardized world (and vice-versa) (here, \"the slope per bit\" is present implicitly in the conversion formula). \r\n\r\nIn the case of a development phase without a fixed conversion formula, a pre-specification can occur through swIntendedResolution.\r\n\r\nThe resolution is specified in the physical domain according to the property \"unit\".",
    "The purpose of this is that within the context  of a given SwComponentType some data def properties of individual instantiations can be  modified. \r\nThe aggregation of InstantiationDataDefProps is subject to variability with the purpose to support the conditional existence of PortPrototypes and component local memories like \"perInstanceParameter\" or \"arTypedPerInstanceMemory\".",
    "The purpose of this is that within the context of a given SwComponentType some  data def properties of individual instantiations can be modified. \r\n\r\nThe aggregation of InstantiationDataDefProps is subject to variability with the  purpose to support the conditional existence of PortPrototypes",
    "The rapid prototyping support data belonging to this implementation. The aggregtion is <<atpSplitable>> because in case of an already exisiting BSW Implementation model, this description will be added later in the process, namely at code generation time.",
    "The rate based monitored Diagnostic Event.",
    "The readiness to receive events is defined by the ServiceDiscovery of the ConsumedEventGroup. The EventHandler shall know about this announcement to decide about the submission of events. Therefore the EventHandler may be configured with Service-Discovery Client attributes.",
    "The received data.",
    "The received event referenced by [ARMetaClassRole{scope}{AgeConstraint}] should not exceed this upper bound.",
    "The received event referenced by [ARMetaClassRole{scope}{AgeConstraint}] should not precede this lower bound.",
    "The reentrancy level of this ExecutableEntity. See the documentation of the enumeration type ReentrancyLevelEnum for details.\r\n\r\nPlease note that nonReentrant interfaces can have also reentrant or multicoreReentrant implementations, and reentrant interfaces can also have multicoreReentrant implementations.",
    "The reference defines which PhmSupervisions shall be active in this specific SupervisionMode.",
    "The reference identifies the collection of SecurityEvents that can be reported by the Process.",
    "The reference identifies the next higher certificate in the certificate chain.",
    "The reference is set to obsolete. Use ISignal.dataTransformation instead.",
    "The reference that has to be accepted by the restrictions of this ReferenceCondition",
    "The referenced ApplicationPrimitiveDataType represents the primitive data type of the value axis within a compound primitive (e.g. curve, map). It supersedes CompuMethod, Unit, and BaseType.",
    "The referenced Asynchronous Server Call Point defines the asynchronous server call from which the results are returned.",
    "The referenced AsynchronousServerCallResultPoint raises this AsynchronousServerCallReturnsEvent when the asynchronous server call returns.",
    "The referenced BswModuleEntry represents the BswModuleEntry the mapping is dedicated to.",
    "The referenced BswModuleEntry serves as the signature of a function pointer definition. Primary use case: function pointer passed as argument to other function.",
    "The referenced ClientServerInterface represents the client server interface the mapping is dedicated to.",
    "The referenced ClientServerOperation represents the client server operation the mapping is dedicated to.",
    "The referenced Documentation is supposed to provide a description of the purpose of the update.",
    "The referenced ExecutableEntity for the ExecutionTimeConstraint.",
    "The referenced InternalTriggeringPoint raises this InternalTriggerOccurredEvent.",
    "The referenced ModeDeclaration shall be considered the initial state of the context ModeDeclarationGroupPrototype and the corresponding reference ModeDeclarationGroup.initialMode shall be ignored.",
    "The referenced ModeSwitchPoint raises this ModeSwitchedAckEvent when the ModeSwitchPoint has been processed.",
    "The referenced RunnableEntity starts when the corresponding RTEEvent is raised.",
    "The referenced Trigger raises this ExternalTriggerOccurredEvent.",
    "The referenced VariableAccess raises this DataSendCompletedEvent when the explicit write access was successful or an error occurred.",
    "The referenced VariableAccess raises this DataWriteCompletedEvent when the implicit write access was successful or an error occurred.",
    "The referenced VariableDataPrototype raises this DataReceiveErrorEvent when there was an error during the reception.",
    "The referenced VariableDataPrototype raises this DataReceivedEvent when the data has been received.",
    "The referenced [ARMetaClass{ClientServerOperation}] from a [ARMetaClass{ClientServerInterface}].",
    "The referenced [ARMetaClass{ModeDeclarationGroupPrototype}] from a{ModeSwitchInterface}].",
    "The referenced [ARMetaClass{Trigger}] from a [ARMetaClass{TriggerInterface}].",
    "The referenced [ARMetaClass{VariableDataPrototype}] from a [ARMetaClass{SenderReceiverInterface}].",
    "The referenced constant.",
    "The referenced data prototype.",
    "The referenced function group states shall be established for the switch between the already installed and the activated software.",
    "The referenced function group states shall be established for the verification of the activated software.",
    "The referenced mode or the transition between two modes raises this SwcModeSwitchEvent.",
    "The referenced port is the port of the component through which the Dtc fault detction counter is provided to the diagnostic even manager in cas the debounce algorithm is solely within the montifor function.",
    "The referenced timing description event.",
    "The referenced timing event",
    "The references defined within the EcucParamConfContainerDef.",
    "The referred data element.",
    "The related data element can be modified  using a post-build hooking tool. An ENABLED VariableDataPrototype is implicitly READABLE/WRITABLE.",
    "The related data element can be used as input for bypass functionality by RP tool. If rptImplPolicy is not specified then RTE generation shall ensure  at least suitable MC read points are created.",
    "The related data element can be used as output for bypass functionality by RP tool. The data element shall be prepared to rptLevel2 and related write service points are present.",
    "The relationship defines a collection of EthernetWakeupSleepOnDatalineConfig configurations which are available.",
    "The repetitionPeriod specifies the time in seconds that elapses before the pdu can be sent the next time (Minimum repeat gap between two pdus). The repetitionPeriod is optional in case that no repetitions are configured.",
    "The required mode group for which the policy is specified.",
    "The requiredClientServerEntry for which the BSW Scheduler using this policy.",
    "The response event representing the point in time where the event chain is terminated.",
    "The restriction of the attribute value.",
    "The return type belonging to this bswModuleEntry.\r\nThis aggregation contains a variation point although it is not variant. Therefore, this variation point shall not exist in models. See constr_2638.",
    "The role denotes the particular role of the downstream memory location described by this FlatInstanceDescriptor.\r\n\r\nIt applies to use case where one upstream object results in multiple downstream objects, e.g. ModeDeclarationGroupPrototypes which are measurable. In this case the RTE will provide locations for current mode, previous mode and next mode.",
    "The rptHook describes the link between a byPassPoint and the rapid prototyping algorithm.\r\nThe upper multiplicity of this role has been increased to * due to resolving an atpVariation stereotype. The previous value was 1.",
    "The rules on the content of this class are enabled if the condition validates to true.",
    "The runnable has a mode access point.\r\nThe aggregation of ModeAccessPoint is subject to variability with the purpose to support the conditional existence of mode ports or the variant existence of mode access points in the implementation.",
    "The runnable has a mode switch point.\r\nThe aggregation of ModeSwitchPoint is subject to variability with the purpose to support the conditional existence of mode ports or the variant existence of mode switch points in the implementation.",
    "The scaling factor for the time value based on the specified CSE code.",
    "The schedule table can be executed in two different modes.",
    "The scheduling table consists of table entries, which contain Frame slots.",
    "The scope of this timing event.",
    "The selector field is part of a multiplexed IPdu. It consists of contiguous bits. The value of the selector field selects the layout of the multiplexed part of the IPdu.",
    "The sequenceOffset attribute supports the use case where TagWithOptionalValue is aggregated as splitable. If multiple aggregations define the same value of attribute key then the order in which the value collection is merged might be significant. As an example consider the modeling of the $PATH environment variable by means of a meta class TagWithOptionalValue. The sequenceOffset describes the relative position of each contribution in the concatenated value. The contributions are sorted in increasing integer order.",
    "The server call result point admits a runnable to fetch the result of an asynchronous server call.\r\n\r\nThe aggregation of AsynchronousServerCallResultPoint is subject to variability with the purpose to support the conditional existence of client server PortPrototypes and the variant existence of server call result points in the implementation.",
    "The service (in AUTOSAR: BswModuleEntry) is implemented in a way that it either resolves to aninline function or to a standard function depending on conditions set at a later point in time.\r\n\r\nThe following two values are standardized (to be used for code sections only and exclusively to each other):\r\n\r\n* INLINE - The code section is declared with the keyword \"inline\".\r\n\r\n* LOCAL_INLINE  - The code section is declared with the keyword \"static inline\".\r\n\r\nIn both cases (INLINE and LOCAL_INLINE) the inline expansion depends on the compiler. Depending on this, the code section either corresponds to an actual section in memory or is put into the section of the caller.",
    "The service and the port this service is provided.",
    "The set of FMFeatureSelections of this FMFeatureSelectionSet.",
    "The size in bits of the selector field shall be configurable in a range of 1-16 bits. \r\nIn a complete System Description this attribute is mandatory. If a MultiplexedPdu is received by a Pdu Gateway and is not delivered to the IPduM but routed directly to a bus interface then the content of the MulitplexedPdu doesn't need to be described in the System Extract/Ecu Extract. To support this use case the multiplicity is set to 0..1.",
    "The size in bytes of the section.",
    "The size of all length fields (in Bytes) of dynamic length strings in the SOME/IP message. This attribute is valid for all available occurrences of strings in the SOME/IP message.",
    "The size of all length fields (in Bytes) of fixed-size arrays or dynamic size arrays in the SOME/IP message. This attribute is valid for all available occurrences of fixed-size arrays or dynamic size arrays in the SOME/IP message.",
    "The size of all length fields (in Bytes) of structs in the SOME/IP message. This attribute is valid for all available occurrences of structures in the SOME/IP message. For a more fine granular modeling on the level of DataPrototypes the DataPrototypeTransformationProps shall be used.",
    "The size of all length fields (in Bytes) of unions in the SOME/IP message. This attribute is valid for all available occurrences of Unions in the SOME/IP message. For a more fine granular modeling on the level of DataPrototypes the DataPrototypeTransformationProps shall be used.",
    "The size of the entire PID can be greater than the sum of the data elements because padding might be applied. Unit: byte.",
    "The size of the window used to detect wakeups [gdBit].\r\n \r\nRemarks: This parameter maps to FlexRay Protocol 2.1 Rev. A parameter gdWakeupSymbolRxWindow.",
    "The source address defines the logical address of the tester that starts the communication. This element is able to define a source address range (without gaps) with the two attributes sourceAddressRangeStart and sourceAddressRangeEnd.  This attribute defines the end of the range.",
    "The source address defines the logical address of the tester that starts the communication. This element is able to define a source address range (without gaps) with the two attributes sourceAddressRangeStart and sourceAddressRangeEnd.  This attribute defines the start of the range.",
    "The source executable entities cluster containing the executable entities that shall finish execution before the synchronization point.",
    "The source of the TP connection.",
    "The specific resource identification assigned to the temporal and dynamic resource.",
    "The specific type of this latency constraint.",
    "The specific type of this timing event.",
    "The specified artifact needs to exist.",
    "The speficication of the relevant subset of Autosar standardized and custom specifications.",
    "The start of every <cycleRepetition> cycle is targeted by this event.",
    "The startIndex sets the index to the first frame to assign a PID.",
    "The state machine of this firewall interface.\r\nThis aggregation contains a variation point although it is not variant. Therefore, this variation point shall not exist in models. See constr_2638.",
    "The static part of the multiplexed IPdu is the same regardless of the selector field. The static part is optional. \r\n\r\natpVariation: Content of a multiplexed PDU can vary.\r\nThe upper multiplicity of this role has been increased to * due to resolving an atpVariation stereotype. The previous value was 1.",
    "The stimulus event representing the point in time where the event chain is activated.",
    "The symbol describing this ExecutableEntity's entry point.",
    "The symbol describing this RunnableEntity's entry point. This is considered the API of the RunnableEntity and is required during the RTE contract phase.",
    "The symbol to be used as (depending on the concrete case) either a complete replacement or a prefix.",
    "The symbol, if provided, is used by code generators to get a C identifier for the CompuScale. The name will be used as is for the code generation, therefore it needs to be unique within the generation context.",
    "The symbolic value for iteration, or the symbolic values separated by white-spaces, refer to the symbolic values given in swRecordLayoutGroupIndex . The iterators are processed from left to right, in such a manner that they symbolize the loop index from the outside to the inside.\r\n\r\nIt is an error  if the record layout is referenced by an entity which has less number of axis than index names referenced here.",
    "The symbolic value for iteration, or the symbolic values separated by whitespaces, refer to the symbolic values given in swRecordLayoutGroupIndex . \r\n\r\nThe iterators are processed from left to right, in such a manner that they symbolize the loop index from the outside to the inside.\r\n\r\nIt is considered an error if the record layout is referenced by an entity which has less number of axes than index names referenced here.",
    "The target executable entities cluster containing the executable entities that shall start execution after the synchronization point.",
    "The target of the TP connection.",
    "The target of the assignment.",
    "The time distance between the beginnings of subsequent repetitions of the given burst pattern.",
    "The time distance between the beginnings of subsequent repetitions of the given concrete pattern.",
    "The time for which a node will not set the repeat message request bit even in the presence of a repeat message request (in seconds).",
    "The time master priority shall contain a three bit value for the priority of the current time master (the last three bits of the identifier of the reference message). This can be derived from the frame-triggering's triggers.",
    "The timing condition specifies a specific condition.",
    "The timing constraints that belong to a specific timing specification in the role of a timing guarantee.\r\n\r\nIn order to support different timing constraint variants within a timing specification, the aggregation is marked with the stereotype \"atpVariation\".",
    "The timing constraints that belong to a specific timing specification in the role of a timing requirement.\r\n\r\nIn order to support different timing constraint variants within a timing specification, the aggregation is marked with the stereotype \"atpVariation\".",
    "The timing description representing the temporal and dynamic resource.",
    "The timing descriptions that belong to a specific timing specification.\r\n\r\nIn order to support different timing description variants within a timing specification, the aggregation is marked with the stereotype \"atpVariation\".",
    "The timing event that the target event is to be synchronized with.",
    "The timing event which is expected to occur timely after the source event.",
    "The timing resource contains all instance references referred from within a timing condition formula of a timing view.",
    "The trigger associated with this event. The trigger is external to this module.",
    "The trigger taken for the ExternalTriggeringPoint.",
    "The trigger which is directly mastered by this module.\r\n\r\nThere may be several different BswTriggerDirectImplementations mastering the same Trigger. This may be required e.g. due to memory partitioning.",
    "The two components that have to be mapped to different ECUs",
    "The type in the AUTOSAR Metamodel to which instance this reference is allowed to point to.",
    "The type in the AUTOSAR Metamodel to which' instance this reference is allowed to point to.",
    "The type of call associated with this service.",
    "The underlying BswModuleEntry.",
    "The updateIndicationBit specifies the bit location of ContainedIPdu Update-Bit in the Container PDU. It indicates to the receivers that the ContainedIPdu in the ContainerIPdu was updated.",
    "The upper bound of the expected distance of two consecutive event occurrences.",
    "The upper multiplicity of the specified element.\r\n\r\n0: no occurrence (used for VSMD)\r\n\r\n1: at most one occurrence\r\n\r\nm: at most m occurrences\r\n\r\nIf upperMultiplicity is set than upperMultiplicityInfinite shall not be used. \r\n\r\natpVariation: [RS_ECUC_00082]",
    "The upper multiplicity of this role has been increased to * due to resolving an atpVariation stereotype. The previous value was \r\n.",
    "The upper multiplicity of this role has been increased to * due to resolving an atpVariation stereotype. The previous value was -1.",
    "The used length (in bytes) of the referencing frame.\r\nShould not be confused with a static byte length reserved\r\nfor each frame by some platforms (e.g. FlexRay).\r\n\r\nThe frameLength of zero bytes is allowed.\r\n\r\nPlease consider also TPS_SYST_02255.",
    "The vLanIdentifier of the referenced VLAN is the Default-PVID (port VLAN ID). A Port VLAN ID is a default VLAN ID that is assigned to an access CouplingPort to designate the VLAN segment to which this port is connected. Also, if a CouplingPort has not been configured with any VLAN memberships, the virtual switch's Port VLAN ID (pvid) becomes the default VLAN ID for the ports connection.\r\n\r\nThis identifier/tag is added for incoming untagged messages at the port (ingress tagging). For outgoing messages with this identifier, the tag is removed at the port (egress untagging, depending on the VlanMembership.sendActivity).",
    "The value for a single array element. All ValueSpecifications aggregated by ArrayValueSpecification shall have the same structure.",
    "The value for a single record field. This could also be mapped explicitly to a record element of the data type using the shortName of the ValueSpecification. But this would introduce a relationship to the data type that is too strong. As of now, it is only important that the structure of the data type matches the structure of the ValueSpecification independently of the shortNames.",
    "The value makes an assumption about the time offset of the first activation of the RunnableEntity triggered by the mapped TimingEvent relative to the periodic activation of the time base of this TimingEvent. Unit: second.",
    "The value of this attribute influences the shutdown behavior of the FlexRay NM. FrNm switches to bus sleep mode nmReadySleepTime seconds after  the completion of the last repetition cycle containing a NM vote.",
    "The value of this attribute represents the maximum size (unit: bytes) allowed at target-configuration time for the enclosing PersistencyDeployment.",
    "The value of this attribute represents the maximum size allowed at deployment time for the enclosing PersistencyDeployment.",
    "The value of this attribute represents the minimum size (unit: bytes) guaranteed at deployment time for the enclosing PersistencyDeployment.",
    "The value of this attribute represents the minimum size (unit: bytes) required at design time for the enclosing PersistencyInterface.",
    "The value of this attribute represents the minimum size guaranteed at deployment time for the enclosing PersistencyDeployment.",
    "The value of this attribute represents the minimum size required at design time for the enclosing PersistencyInterface.",
    "The value of this attribute represents the size of the meta-data field in bytes.",
    "The value of this attribute shall be taken for generating one display text (specifically the OutVal) within the equivalent of the enclosing [ARMetaClass{CompuMethod}] in A2L.",
    "The value of this attribute shall be taken into account by the RTE generator for programmatically representing a value used for the transition between two statuses.",
    "The value that represents the privacy level and is transported in the Extension Header.",
    "The various BswInternalBehaviors associated with a BswModuleDescription can be distributed over several physical files. Therefore the aggregation is <<atpSplitable>>.",
    "The version of the protocol used.",
    "The way how the size of the array is handled in case of a variable size array.",
    "The way how the size of the array is handled.",
    "The worst case execution time (WCET) defines the maximum amount of time the related executable entity requires for its execution.",
    "There are three inclusion modes how the implicit two-byte Data ID is included in the one-byte CRC:\r\n\r\n* dataIDMode = 0: Two bytes are included in the CRC (double ID configuration) This is used in variant 1A.\r\n* dataIDMode = 1: One of the two bytes byte is included, alternating high and low byte, depending on parity of the counter (alternating ID configuration). For even counter low byte is included; For odd counters the high byte is included. This is used in variant 1B.\r\n* dataIDMode = 2: Only low byte is included, high byte is never used. This is applicable if the IDs in a particular system are 8 bits.\r\n* dataIdMode = 3: The low byte is included in the implicit CRC calculation, the low nibble of the high byte is transmitted along with the data (i.e. it is explicitly included), the high nibble of the high byte is not used. This is applicable for the IDs up to 12 bits.",
    "These are the generated properties resulting from decisions taken by the RTE  generator for the actually implemented data instance. Only those properties are relevant here, which are needed for the measurement and calibration system.",
    "These are the particular data definition properties which shall be applied",
    "These buffers will be used if the IpV6 receives packets from the upper layer that do not fit into the MTU and thus must be fragmented.\r\n\r\nA value of 0 disables tx fragmentation.",
    "These chapters provide additional information about the software component that do not fit in the other chapters.\r\n\r\nNote that this is subject to variation because Chapter aggregations in the role chapter are variant within the documentation in general.",
    "Thi reference identifies the applicable DiagnosticClearConditionGroup.",
    "This ISignal shall be taken to transport the responseError bit.",
    "This PDU will be taken to transmit the global time information from a GlobalTimeMaster to a the associated GlobalTimeSlaves.",
    "This PduTriggering shall be collected inside the ContainerIPdu.",
    "This PduTriggering will be taken to transmit the global time information from a GlobalTimeMaster to a the associated GlobalTimeSlaves.",
    "This PduTriggering will be taken to transmit the global time information from a GlobalTimeMaster to a the associated GlobalTimeSlaves.\r\nThis property was modified due to atpVariation (DirectedAssociationPattern).",
    "This String is used to determine the memory address during final generation of the MC configuration data (e.g. \"A2L\" file) . It shall be the name of the element in the programming language such that it can be identified in linker generated information. \r\n\r\nIn case the McDataInstance is part of composite data in the programming language, the symbol String may include parts denoting the element context, unless the context is given by the symbol attribute of an enclosing McDataInstance. This means in particular for the C language that the \".\" character shall be used as a separator between the name of a \"struct\" variable the name of one of its elements.\r\n\r\nThe symbol can differ from the shortName in case of generated C data declarations.\r\n\r\nIt is an optional attribute since it may be missing in case the instance represents an element (e.g. a single array element) which has no name in the linker map.",
    "This SwComponentType acts as the Type of the RootSwClusterDesignComponentPrototype.",
    "This SwComponentType acts as the Type of the RootSwComponentPrototype.",
    "This additional reference has a supporting role in that it identifies all sending nodes of a given SPN. It is positively possible that a given SPN is sent by more than one node. Even tough the reference targets the DiagnosticJ1939Node the semantics of the reference is bound to the J1939NmNode that is in turn referenced by the DiagnosticJ1939Node.",
    "This adds a documentation to the BSW module.\r\nThe upper multiplicity of this role has been increased to * due to resolving an atpVariation stereotype. The previous value was 1.",
    "This adds a documentation to the SwComponentType.",
    "This adds a documentation to the SwComponentType.\r\nThe upper multiplicity of this role has been increased to * due to resolving an atpVariation stereotype. The previous value was 1.",
    "This adds the ability to add a shortName to DataPrototypeTransformationProps. Please note that the short-name needs to be provided if the splitable mechanism is used.",
    "This adds the ability to add a shortName to TransformationISignalProps. Please note that the short-name needs to be provided if the splitable mechanism is used.",
    "This adds the ability to become referrable to BswServiceDependency.",
    "This adds the ability to become referrable to LinSlaveConfig.",
    "This adds the ability to become referrable to PncMapping.",
    "This adds the ability to become referrable to SocketConnection.",
    "This adds the ability to become referrable to TpConnection.",
    "This aggreation allows for the specification of properties of template arguments",
    "This aggregation allows a brief description about the particular record layout group which can help to identify the entry. In-depth documentation should be added  to the introduction of the surrounding record layout.",
    "This aggregation allows for a brief description about the particular record layout value which can help to identify the entry. In-depth documentation should be added to the introduction of the surrounding record layout.",
    "This aggregation allows for the definition an own namespace for the enclosing CppImplementationDataType.",
    "This aggregation allows for the definition of a namespace of an Allocator.",
    "This aggregation allows for the definition of qualifying properties of the enclosing CppImplementationDataTypeElement.",
    "This aggregation allows for the specification of a dependency.",
    "This aggregation allows for the specification of properties of template arguments",
    "This aggregation allows for the usage of the Diagnostic MonitorMultipleEventPortMapping on the AUTOSAR adaptive platform.",
    "This aggregation allows for the usage of the Diagnostic MonitorMultipleMonitorPortMapping on the AUTOSAR adaptive platform.",
    "This aggregation allows for the usage of the DiagnosticAuthenticationPortMapping on the AUTOSAR adaptive platform.",
    "This aggregation allows for the usage of the DiagnosticClearConditionMapping on the AUTOSAR adaptive platform.",
    "This aggregation allows for the usage of the DiagnosticClearConditionPortMapping on the AUTOSAR adaptive platform.",
    "This aggregation allows for the usage of the DiagnosticClientAuthenticationPortMapping on the AUTOSAR adaptive platform.",
    "This aggregation allows for the usage of the DiagnosticConditionPortMapping on the AUTOSAR adaptive platform.",
    "This aggregation allows for the usage of the DiagnosticEnableConditionPortMapping on the AUTOSAR adaptive platform.",
    "This aggregation allows for the usage of the DiagnosticEventPortMapping on the AUTOSAR adaptive platform.",
    "This aggregation allows for the usage of the DiagnosticGenericUdsPortMapping on the AUTOSAR adaptive platform.",
    "This aggregation allows for the usage of the DiagnosticIndicatorMapping on the AUTOSAR adaptive platform.",
    "This aggregation allows for the usage of the DiagnosticIndicatorPortMapping on the AUTOSAR adaptive platform.",
    "This aggregation allows for the usage of the DiagnosticMemoryDestinationMapping on the AUTOSAR adaptive platform.",
    "This aggregation allows for the usage of the DiagnosticMonitorPortMapping on the AUTOSAR adaptive platform.",
    "This aggregation allows for the usage of the DiagnosticOperationCyclePortMapping on the AUTOSAR adaptive platform.",
    "This aggregation allows for the usage of the DiagnosticSecurityLevelMapping on the AUTOSAR adaptive platform.",
    "This aggregation allows for the usage of the DiagnosticServiceGenericMapping on the AUTOSAR adaptive platform.",
    "This aggregation allows for the usage of the DiagnosticSovdAuthorizationPortMapping on the AUTOSAR adaptive platform.",
    "This aggregation allows for the usage of the DiagnosticSovdBulkDataPortMapping on the AUTOSAR adaptive platform.",
    "This aggregation allows for the usage of the DiagnosticSovdConfigurationPortMapping on the AUTOSAR adaptive platform.",
    "This aggregation allows for the usage of the DiagnosticSovdProximityChallengePortMapping on the AUTOSAR adaptive platform.",
    "This aggregation allows for the usage of the DiagnosticSovdUpdatePortMapping on the AUTOSAR adaptive platform.",
    "This aggregation allows for the usage of the DiagnosticSovdValidationPortMapping on the AUTOSAR adaptive platform.",
    "This aggregation allows for the usage of the DiagnosticStorageConditionPortMapping on the AUTOSAR adaptive platform.",
    "This aggregation allows for the usage of the DiagnosticUploadDownloadPortMapping on the AUTOSAR adaptive platform.",
    "This aggregation allows for the variant definition of the attribute eventObdReadinessGroup.\r\nThe upper multiplicity of this role has been increased to * due to resolving an atpVariation stereotype. The previous value was 1.",
    "This aggregation allows for the variant modeling of the groupIdentifier.\r\nThe upper multiplicity of this role has been increased to * due to resolving an atpVariation stereotype. The previous value was 1.",
    "This aggregation allows to add annotations (yellow pads ...) related to the current data object.",
    "This aggregation allows to assign the properties of Identifiable to the sdg. By this, a shortName etc. can be assigned to the Sdg.",
    "This aggregation allows to express nested special data groups. By this, any structure can be represented in SpeicalData.\r\nThe upper multiplicity of this role has been increased to * due to resolving an atpVariation stereotype. The previous value was 1.",
    "This aggregation allows to protect a method or a field getter or a field setter that is defined inside of the ServiceInterface that is referenced by the ServiceInstance in the role serviceInterface",
    "This aggregation allows to protect an event or a field notifier that is defined inside of the ServiceInterface that is referenced by the ServiceInstance in the role serviceInterface.",
    "This aggregation can be taken to identify a dependency for the enclosing SoftwareActivationDependency.",
    "This aggregation can be taken to identify a dependency for the enclosing SoftwareCluster.",
    "This aggregation can be used to specify the timeouts for launching and terminating the process depending on the StartupConfig.",
    "This aggregation can be used to specify the timeouts for launching and terminating the process.",
    "This aggregation carries the checksums for artifacts contained in the enclosing SoftwareCluster. Please note that the value of these checksums is only applicable at the time of configuration.",
    "This aggregation clarifies the storing of the SoftwarePackage.",
    "This aggregation collects the UcmProcessingSteps that make up the rollout step.",
    "This aggregation contains a representation of ModeDeclarations in the context of a DiagnosticEnvironmentalCondition.",
    "This aggregation contains information about the DoIP logical address.",
    "This aggregation contains the collection of implementation-specific properties necessary to properly build the enclosing Executable.",
    "This aggregation contributes the CAN IDs for the execution of CAN NM on the adaptive platform.",
    "This aggregation contributes the specification of the concrete meta-data item type.\r\nThis aggregation contains a variation point although it is not variant. Therefore, this variation point shall not exist in models. See constr_2638.",
    "This aggregation defines a default timeout in the context of a given Machine with respect to the launching and termination of applications.",
    "This aggregation defines fixed sets of meta-data items associated with dataElements of the enclosing SenderReceiverInterface",
    "This aggregation defines optionally an alternative EventName for the SecurityEventDefinition in case there is a collision of shortNames.",
    "This aggregation defines the attributes used for the correction of time synchronization.",
    "This aggregation defines the configured Time Bases for Time Synchronization.",
    "This aggregation defines the crypto primitive applicable for the enclosing crypto job.",
    "This aggregation defines the namespace of the ApApplicationErrorDomain",
    "This aggregation defines the network connection of the machine.",
    "This aggregation defines the network connection of the machine.\r\nThis aggregation contains a variation point although it is not variant. Therefore, this variation point shall not exist in models. See constr_2638.",
    "This aggregation defines the type of the CppImplementationDataTypeElement and determines whether in C++ the CppImplementationDataTypeElement is defined inside or outside of the enclosing CppImplementationDataType.",
    "This aggregation describes particular hardware attribute definition.",
    "This aggregation describes the contained pins/pin groups.",
    "This aggregation describes the timeout specification with respect to the referenced state.",
    "This aggregation formally defines the bulk Nv Blocks that are provided to the application software by the enclosing NvBlockSwComponentType.",
    "This aggregation handles conflicts. If it yields true then the SoftwareActivationDependency shall not be installed.",
    "This aggregation handles conflicts. If it yields true then the SoftwareCluster shall not be installed.",
    "This aggregation identifies the collection of meta-data contained in the enclosing binary manifest.",
    "This aggregation implements the deployment information for individual methods in a RawDataStreamInterface.",
    "This aggregation is obsolete and will be removed in the future. The connectionGroup aggregation with bundledConnections shall be used instead.\r\n\r\nOld description: Collection of socket connections.",
    "This aggregation is used to configure the applicable verification method implemented in the DeterministicSyncMaster.",
    "This aggregation is used to configure the credentials of the endpoint.",
    "This aggregation is used to configure the credentials of the remote client.",
    "This aggregation is used to configure the credentials of the remote server.",
    "This aggregation is used to define OBD-relevant properties for a Diagnostic Trouble Code\r\nThe upper multiplicity of this role has been increased to * due to resolving an atpVariation stereotype. The previous value was 1.",
    "This aggregation is used to define structured BinaryManifestItemDefinitions.",
    "This aggregation is used to define structured BinaryManifestItems.",
    "This aggregation is used to describe subElements of a DltArgument that defines a Structure.",
    "This aggregation is used to describe the connection facilities of a hardware element. Note that hardware element has no pins but only pingroups.",
    "This aggregation is used to describe the unicast credentials for external (i.e. with a tester) communication of the enclosing SOVD gateway.",
    "This aggregation is used to identify the AutosarDataPrototype to be taken for sourcing an external replacement in the out-of-range and invalidValue handling.\r\nThis aggregation contains a variation point although it is not variant. Therefore, this variation point shall not exist in models. See constr_2638.",
    "This aggregation is used to specify the diagnostic address.",
    "This aggregation provides a collection of replacement rules for data types used in the context of the enclosing PersistencyKeyValueStorageInterface.",
    "This aggregation provides support for nested iterations. For example, if a map is to be handled, then we might have two nested SwRecordLayoutGroups, one for the x-axis and one for the y-axis. The inner iteration runs faster.",
    "This aggregation provides the ability to configure the necessary driver notifications.",
    "This aggregation provides the ability to define TLS-related properties for the enclosing SocketRawDataStreamMapping.",
    "This aggregation provides the ability to define resource consumption boundaries on a per-process-startup-config basis.",
    "This aggregation provides the ability to refer to ImplementationDataTypeElements as optional elements in the contect of a ServiceInterface.",
    "This aggregation provides the ability to refer to ImplementationDataTypeElements as optional elements in the context of a ServiceInterface.",
    "This aggregation provides the ability toassign a TLV data ID  to ImplementationDataTypeElements as optional elements in the context of a ServiceInterface.",
    "This aggregation represens the definition of per-state-timeouts in the context of the enclosing machine.",
    "This aggregation represenst the ability to create nested resource levels.",
    "This aggregation represenst the diagnostic-related configuration of a SoftwareCluster.",
    "This aggregation represents (through further references) the SecurityEventDefinitions to be mapped to an IdsmInstance with additional mapping-dependent properties.",
    "This aggregation represents a collection of certificate evaluation configurations.",
    "This aggregation represents a concrete collections of PhysicalDimensionMappings in the context of one PhysicalDimensionMappingSet.",
    "This aggregation represents a hardware pin in a hardware pin group.\r\nThe upper multiplicity of this role has been increased to * due to resolving an atpVariation stereotype. The previous value was 1.",
    "This aggregation represents a nested hardware pin group.\r\nThe upper multiplicity of this role has been increased to * due to resolving an atpVariation stereotype. The previous value was 1.",
    "This aggregation represents a particular hardware attribute value.",
    "This aggregation represents an unordered collection of references to RunnableEntities which shall be considered in the ExecutionOrderConstraint. The role does not imply that the collection of references itself shall be ordered.",
    "This aggregation represents the UcmDescriptions to be considered in the context of the VehiclePackage.",
    "This aggregation represents the ability to assign a specific value to the crypto key as part of the system description. This value can then be taken for the development of the respective ECU.\r\nThis aggregation contains a variation point although it is not variant. Therefore, this variation point shall not exist in models. See constr_2638.",
    "This aggregation represents the ability to define an initial value for the value side of the key-value pair. Please note that it does not make sense to configure an initial value if the [ARMetaClass{PersistencyDeploymentElement}].[ARMetaClassRole{updateStrategy}{PersistencyDeploymentElement}] is set to the value [ARMetaClassRole{delete}{PersistencyElementLevelUpdateStrategyEnum}].\r\nThis aggregation contains a variation point although it is not variant. Therefore, this variation point shall not exist in models. See constr_2638.",
    "This aggregation represents the ability to define the order of manufacturer and supplier validations in diagnostic management.",
    "This aggregation represents the ability to provide a value that is either numerical or text which existence is subject to variability.\r\nThe upper multiplicity of this role has been increased to * due to resolving an atpVariation stereotype. The previous value was 1.",
    "This aggregation represents the actual bulk NVBlock.\r\nThis aggregation contains a variation point although it is not variant. Therefore, this variation point shall not exist in models. See constr_2638.",
    "This aggregation represents the actual recovery action\r\nThis aggregation contains a variation point although it is not variant. Therefore, this variation point shall not exist in models. See constr_2638.",
    "This aggregation represents the aggregation filter in the filter chain.",
    "This aggregation represents the artifact locations that are relevant in the context of the enclosing SoftwareCluster",
    "This aggregation represents the capability of the enclosing RawStreamingDataInterface to access incoming data on the communication channel.",
    "This aggregation represents the capability of the enclosing RawStreamingDataInterface to close the communication channel.",
    "This aggregation represents the capability of the enclosing RawStreamingDataInterface to send data down the communication channel.",
    "This aggregation represents the capability of the enclosing RawStreamingDataInterface to set up the communication channel.",
    "This aggregation represents the chosen approaches to handle redundancy for the various use cases implemented by subclasses",
    "This aggregation represents the chosen approaches to handle redundancy.",
    "This aggregation represents the collectioin of resources owned by the enclosing REST service.",
    "This aggregation represents the collection of DiagnosticClearConditions that belong to the DiagnosticClearConditionGroup.",
    "This aggregation represents the collection of PersistencyDataElements in the context of the enclosing Persistency KeyValueStorageInterface.",
    "This aggregation represents the collection of PersistencyDataElements in the context of the enclosing PersistencyKeyValueDatabaseInterface.",
    "This aggregation represents the collection of PersistencyFileProxys in the context of the enclosing PersistencyFileProxyInterface.",
    "This aggregation represents the collection of PersistencyFileStorages in the context of the enclosing PersistencyFileStorageInterface.",
    "This aggregation represents the collection of TlVDataTidDefinitions aggregated by the TlvDataIdDefinitionSet",
    "This aggregation represents the collection of URIs relevant for the enclosing PersistencyDeployment.",
    "This aggregation represents the collection of applicable resource needs for the design of deterministic clients.",
    "This aggregation represents the collection of binary manifest handles owned by the enclosing binary manifest resource.",
    "This aggregation represents the collection of binary manifest resource definitions that belong to the enclosing CpSoftwareClusterBinaryManifestDescriptor.",
    "This aggregation represents the collection of command-line arguments applicable to the enclosing StartupConfig.",
    "This aggregation represents the collection of containers aggregated directly by the functional cluster configuration definition.",
    "This aggregation represents the collection of crypto jobs defined in the context of the enclosing crypto module instantiation.",
    "This aggregation represents the collection of crypto key slots defined in the context of the enclosing crypto module instantiation.",
    "This aggregation represents the collection of crypto primitives in the context of the enclosing crypto driver.",
    "This aggregation represents the collection of crypto service mappings in the context of the enclosing SystemMapping.",
    "This aggregation represents the collection of diagnostic addresses that apply for the SoftwareCluster.",
    "This aggregation represents the collection of elements in the container.",
    "This aggregation represents the collection of endpoints on the resource level.",
    "This aggregation represents the collection of enumerators for the enclosing string property.",
    "This aggregation represents the collection of enumerators that are part of the enumeration.",
    "This aggregation represents the collection of environment variables that shall be added to the environment defined on the level of the enclosing Machine.\r\nThis aggregation contains a variation point although it is not variant. Therefore, this variation point shall not exist in models. See constr_2638.",
    "This aggregation represents the collection of environment variables that shall be added to the respective Process's environment prior to launch.\r\nThis aggregation contains a variation point although it is not variant. Therefore, this variation point shall not exist in models. See constr_2638.",
    "This aggregation represents the collection of files aggregated by the PersistencyFileArray.",
    "This aggregation represents the collection of files aggregated by the PersistencyFileStorage.",
    "This aggregation represents the collection of formula\r\nparts that can be combined by logical operators.",
    "This aggregation represents the collection of formula parts that can be combined by logical operators.",
    "This aggregation represents the collection of function groups of the enclosing Machine.\r\nThe upper multiplicity of this role has been increased to * due to resolving an atpVariation stereotype. The previous value was -1.",
    "This aggregation represents the collection of function groups.\r\nThis aggregation contains a variation point although it is not variant. Therefore, this variation point shall not exist in models. See constr_2638.",
    "This aggregation represents the collection of key slot usages in the context of the enclosing CryptoKeySlotUserDesign.",
    "This aggregation represents the collection of mappings from crypto job to crypto need defined in the context of the enclosing crypto module instantiation.",
    "This aggregation represents the collection of mappings from crypto primitive to crypto primitive in the context of the crypto module instantiation.",
    "This aggregation represents the collection of non-obligatory properties of the element level in a REST service.",
    "This aggregation represents the collection of provided resources in the enclosing binary manifest.",
    "This aggregation represents the collection of rate limitation filters for security events in the enclosing SecurityFilterSet.",
    "This aggregation represents the collection of required resources in the enclosing binary manifest.",
    "This aggregation represents the collection of resources in the enclosing resource pool.",
    "This aggregation represents the collection of rules applicable for the error request.",
    "This aggregation represents the collection of rules applicable for the trigger request.",
    "This aggregation represents the collection of service points associated with the enclosing RptSuportData",
    "This aggregation represents the collection of sub-containers of the enclosing container. By using this aggregation arbitrary nested structures of containers can be created.",
    "This aggregation represents the collection of supported cipher suites.",
    "This aggregation represents the collection of tlvDataIds defined in the enclosing context.",
    "This aggregation represents the collection of traffic limitation filters for security events in the enclosing SecurityFilterSet.",
    "This aggregation represents the collectionof optional elements within the scope of the enclosing ServiceInterface.\r\nThe upper multiplicity of this role has been increased to * due to resolving an atpVariation stereotype. The previous value was -1.",
    "This aggregation represents the concrete kind of argument to be used.",
    "This aggregation represents the configuration of a local TCP port number.",
    "This aggregation represents the configuration of a local unicast UDP port number.",
    "This aggregation represents the configuration of a remote raw data stream client that communicates via unicast over UDP.",
    "This aggregation represents the configuration of multicast credentials for communication with a remote raw data stream client.",
    "This aggregation represents the configuration of multicast credentials for communication with a remote raw data stream server.",
    "This aggregation represents the control mask record consisting of single bits.",
    "This aggregation represents the definition of a default value for a binary manifest handle or an auxiliaryField.\r\n\r\nThis value shall be taken if no connection for this resource is possible.",
    "This aggregation represents the definition of a value for a binary manifest handle or an auxiliaryField.\r\n\r\nThis value shall be taken to establish a connection.",
    "This aggregation represents the definition of an initial value for the PersistencyDataElement referenced by the enclosing PersistencyDataProvidedComSpec",
    "This aggregation represents the definition of an initial value for the PersistencyDataElement referenced by the enclosing PersistencyDataRequiredComSpec\r\nThis aggregation contains a variation point although it is not variant. Therefore, this variation point shall not exist in models. See constr_2638.",
    "This aggregation represents the definition of endpoints on the object level.",
    "This aggregation represents the definition of optional context data for security events.\r\nThe upper multiplicity of this role has been increased to * due to resolving an atpVariation stereotype. The previous value was 1.",
    "This aggregation represents the definition of the base element type of the array property",
    "This aggregation represents the definition of the compare value against which the value taken from the application software shall be compared.\r\nThis aggregation contains a variation point although it is not variant. Therefore, this variation point shall not exist in models. See constr_2638.",
    "This aggregation represents the definition of the formula for the StateManagementRequestRule",
    "This aggregation represents the definition transmission props in the context of the enclosing SenderComSpec.",
    "This aggregation represents the design of the software inside the SwClusterDesign terms of the communication endpoints.",
    "This aggregation represents the elements of a resource.",
    "This aggregation represents the existence of an actual state machine.\r\nThis aggregation contains a variation point although it is not variant. Therefore, this variation point shall not exist in models. See constr_2638.",
    "This aggregation represents the included ModeDeclarationGroups",
    "This aggregation represents the initial values for the elements of the ApplicationAssocMapValueSpecification.",
    "This aggregation represents the initialization of the key part of an AssociativeElementValueSpecification.\r\nThis aggregation contains a variation point although it is not variant. Therefore, this variation point shall not exist in models. See constr_2638.",
    "This aggregation represents the initialization of the value part of an AssociativeElementValueSpecification.\r\nThis aggregation contains a variation point although it is not variant. Therefore, this variation point shall not exist in models. See constr_2638.",
    "This aggregation represents the internal behavior of the AdaptiveApplicationSwComponentType for the AUTOSAR adaptive platform.",
    "This aggregation represents the internal behavior of the AdaptiveApplicationSwComponentType for the AUTOSAR adaptive platform.\r\nThe upper multiplicity of this role has been increased to * due to resolving an atpVariation stereotype. The previous value was 1.",
    "This aggregation represents the key slots for which a key slot design is created in the context of the enclosing machine design.",
    "This aggregation represents the key slots that are allocated by the CryptoProvider.",
    "This aggregation represents the key-value-pairs owned by the enclosing PersistencyKeyValueDatabase",
    "This aggregation represents the key-value-pairs owned by the enclosing [ARMetaClass{PersistencyKeyValueStorage}].",
    "This aggregation represents the ordered collection of the parts of the SoftwareClusterDependencyFormula.",
    "This aggregation represents the ordered definition of meta-data items.",
    "This aggregation represents the reference value against which the value obtained from request shall be compared to.\r\nThis aggregation contains a variation point although it is not variant. Therefore, this variation point shall not exist in models. See constr_2638.",
    "This aggregation represents the sampling filter in the filter chain.",
    "This aggregation represents the sequence of activities to be carried out in the context of the respective UCM.",
    "This aggregation represents the setting of the get method.",
    "This aggregation represents the setting of the get method.\r\nThis aggregation contains a variation point although it is not variant. Therefore, this variation point shall not exist in models. See constr_2638.",
    "This aggregation represents the settings of DDS-RPC services associated with a Service Interface to handle methods and field getters and setters when using DDS as the underlying network binding.",
    "This aggregation represents the settings of the get method\r\nThis aggregation contains a variation point although it is not variant. Therefore, this variation point shall not exist in models. See constr_2638.",
    "This aggregation represents the settings of the notifier.",
    "This aggregation represents the settings of the notifier.\r\nThis aggregation contains a variation point although it is not variant. Therefore, this variation point shall not exist in models. See constr_2638.",
    "This aggregation represents the settings of the set method",
    "This aggregation represents the settings of the set method\r\nThis aggregation contains a variation point although it is not variant. Therefore, this variation point shall not exist in models. See constr_2638.",
    "This aggregation represents the settings of the set method.",
    "This aggregation represents the single point of access to the reference to one specific DiagnosticParameterElement.",
    "This aggregation represents the state filter in the event chain.",
    "This aggregation represents the state requests handled by the state manager.",
    "This aggregation represents the state switch notifications handled by the state manager.",
    "This aggregation represents the threshold filter in the filter chain.",
    "This aggregation specifies the collection of handle definitions in the context of the enclosing binary manifest resource definitions.",
    "This aggregation supports structured requirements embedded in a documentation block.\r\nThe upper multiplicity of this role has been increased to * due to resolving an atpVariation stereotype. The previous value was 1.",
    "This aggregation supports the configuration of the authentication of diagnostic clients.",
    "This aggregation supports the further qualification of the enclosing CpSoftwareClusterCommunicationRecource by means of additional attributes depending on the nature of the CpSoftwareClusterCommunicationRecource.",
    "This aggregation will be used if the element is  composite.",
    "This aggregation will be used if the element is composite.",
    "This aggregaton is used to specify the diagnsotic address.",
    "This aggrgation represents the collection of accepted encodings.",
    "This allows a mapping between an SWC and  a BSW behavior to be attached to an implementation description (for AUTOSAR Service, ECU Abstraction and Complex Driver Components).  It is up to the methodology to define whether this reference has to be set for the Swc- or BswImplementtion or for both.",
    "This allows denote instance and access specific properties, mainly input values and common axis.",
    "This allows for referencing FibexElements that need to be considered in the context of a SoftwareCluster.",
    "This allows for specifying whether or not the enclosing ModeDeclarationGroupPrototype can be measured at run-time.",
    "This allows for the specification of which UnitGroups are relevant in the context of referencing SwComponentType.",
    "This allows for the text-table translation of individual elements of a composite data type.",
    "This allows to define instantiation specific properties for RTE Events, in particular for instance specific scheduling.",
    "This allows to denote information about the current revision of the object. \r\n\r\nNote that information about previous revisions can also be logged here. The entries shall be sorted descendant by date in order to reflect the history. Therefore the most recent entry representing the current version is denoted first.",
    "This allows to denote the intended type within blueprints. It shall be replaced by a proper type when deriving Interfaces from the Blueprint.\r\nUse instead BluePrintPolicySingle.\r\nThis property was modified due to atpVariation (DirectedAssociationPattern).",
    "This allows to describe shortly the purpose of the variation point.",
    "This allows to have intersections in the values in order to support specific rendering (eg. using stylesheets). For tools it is important that the v values are always processed in the same (flattened) order and the tool is able to interpret it without respecting vg.",
    "This allows to place an arbitrary reference to a traceable object in documentation.",
    "This allows to represent the importance of the requirement.",
    "This allows to specify a replacement text which shall be rendered if showContent is selected.",
    "This allows to specify additional informationabout a service argument. Note that this is only a documentation block such that it can be represented in a table cell.",
    "This allows to specify the instance specific implementation details of the class attributes.",
    "This allows to specify the value as VariationPoint. It is distinguished to non variant for sake of compatibility to ASAM CDF 2.0.",
    "This associates a communication graph to a specific RTE Implementation Plug-in handling cross Software Cluster communication.",
    "This associates a communication graph to a specific RTE Implementation Plug-in handling local Software Cluster communication or communication in a non-cluster ECU.",
    "This association allows to refer to a base type in case a specific encoding is intended. If no base type is referred, the base type referenced initially in the corresponding DataPrototype is to be used.",
    "This association allows to reuse an already existing caption.",
    "This association allows to specify record layout groups to iterate over generic axis parameters. For example, if the generic axis parameter is an array, the record layout group will iterate over this array. \r\n\r\nObviously, the axis referred to by swRecordLayoutGroupAxis shall be a generic axis in which the referenced SwGenericAxisType is aggregated.",
    "This association allows to support reusable \"sub\"-record layouts. In particular, the contents of the referenced record layout shall be used as if the record layout group in the referenced record layout was aggregated in the current record layout group. \r\n\r\nSo, semantically it would be equivalent to replace the particular association with an aggregation of the  swRecordLayoutGroup of the referenced SwRecordLayout.",
    "This association applies a particular (usually small) set of objects (e.g. a singular package). Main usage is, if one does not want to create a collection specifically for access control.",
    "This association connects two hardware elements.",
    "This association connects two hardware pin groups.",
    "This association connects two hardware pins.",
    "This association contains the network configuration that shall be applied to an instance of an IDS entity.",
    "This association denotes an ECUC parameter definition. The such referenced parameters are subject of the build action input/output.\r\n\r\nNote that the reference to the definition denotes the right for a build action to read and/or write values for the given definition and all contained definitions.",
    "This association denotes the ImplementationDataType of a data declaration via its aggregated SwDataDefProps. It is used whenever a data declaration is not directly referring to a base type. Especially\r\n\r\n* redefinition of an ImplementationDataType via a \"typedef\" to another ImplementationDatatype\r\n* the target type of a pointer (see SwPointerTargetProps), if it does not refer to a base type directly\r\n* the data type of an array or record element within an ImplementationDataType, if it does not refer to a base type directly\r\n* the data type of an SwServiceArg, if it does not refer to a base type directly",
    "This association implements the concept of an array element. That is, in some cases it is necessary to be able to identify single array elements, e.g. as input values for an interpolation routine.",
    "This association indicates that the considered objects are the ones being derived from the associated blueprint.",
    "This association indicates that this module specific (abstract) memory section is part of an overall SwAddrMethod, referred by the upstream declarations (e.g. calibration parameters, data element prototypes, code entities) which share a common addressing strategy. This can be evaluated for the ECU configuration of the build support. \r\n\r\nThis association shall always be declared by the Implementation description of the module or component, which allocates the memory in its code. This means in case of data prototypes which are allocated by the RTE, that the software components only declare the grouping of its data prototypes to SwAddrMethods, and the generated Implementation Description of the RTE actually sets up this association.",
    "This association is used to assign an optional HwType which contains the common attribute values for all occurences of this HwDescriptionEntity. \r\nNote that HwTypes can not be redefined and therefore shall not have a hwType reference.",
    "This association is used to establish hierarchies of EOCEER Groups and References.",
    "This association is used to establish hierarchies of hw elements. Note that one particular HwElement can be target of this association only once. I.e. multiple instantiation of the same HwElement is not supported (at any hierarchy level).\r\nThis property was modified due to atpVariation (DirectedAssociationPattern).",
    "This association references the TimingDescriptionEventChain that plays the role of a LET interval the executable entities in the group are assigned to.\r\n\r\n[ARTraceRefExt{constr_4554}] applies.",
    "This association references the specific instance of the SW-C prototype.",
    "This association represents the ability to trace on the same specification level. This supports for example the of acceptance tests.",
    "This association represents the ability to trace to upstream requirements / constraints. This supports for example  the bottom up tracing \r\n\r\nProjectObjectives <- MainRequirements <- Features <- RequirementSpecs <- BSW/AI",
    "This association represents the definition of the particular hardware attribute value.",
    "This association represents the physical dimension to which the unit belongs to. Note that only values with units of the same physical dimensions might be converted.",
    "This association selects the variant criterion whose value is specified.",
    "This association specifies a set of follow up actions.",
    "This association specifies a set of predecessors. These actions shall be finished before but necessarily immediately after the given action..\r\n\r\nThese actions need to be performed in the specified order.",
    "This association specifies the basis of all relative references with the base equals shortLabel.",
    "This association specifies the physical unit of the defined hardware attribute. This is optional due to the fact that there are textual attributes.",
    "This association supports the case that a value from a generic axis definition shall be stored. This value is denoted by a particular generic axis parameter type.",
    "This association to ImplementationDataType shall be taken as an implementation hint by the RTE generator.",
    "This attribute  specifies the lower multiplicity of the respective model element.",
    "This attribute  specifies the master language of the document or the document fragment. The master language is the one in which the document is maintained and from which the other languages are derived from. In particular in case of inconsistencies, the information in the master language is priority.",
    "This attribute  specifies the upper multiplicity of the respective model element.",
    "This attribute Enables/Disables the transmission of Destination Unreachable Messages.",
    "This attribute allows distinguishing log/trace messages from different instances of the same SW-C.",
    "This attribute allows distinguishing log/trace messages from different instances of the same SW-C. It is required if sessionIdSupport of the aggregating DltConfig is True.",
    "This attribute allows for a verbal description of the applicable cryptographic key. The goal is to pass a hint for the integrator about how to treat the corresponding service use case.",
    "This attribute allows for assigning a specific writing strategy for an incoming AutosarDataPrototype.\r\nThis aggregation contains a variation point although it is not variant. Therefore, this variation point shall not exist in models. See constr_2638.",
    "This attribute allows for constraining the scope of the corresponding communication. For example, it possible to express whether the communication is intended to cross the boundary of an ECU or whether it is intended not to cross the boundary of a single partition.",
    "This attribute allows for defining the position of the enclosing ExecutableEntityActivationReason in the activation vector.",
    "This attribute allows for the definition of a non-formal dependency to the target SoftwareClusterDesign.",
    "This attribute allows for the definition of further qualification of the semantics of a PortPrototype.",
    "This attribute allows for the description of a non-formal dependency condition.",
    "This attribute allows for the explanations of changes since the previous version. The list of changes might require the creation of multiple paragraphs of test.",
    "This attribute allows for the inclusion of the full text of a license of the enclosing SoftwareCluster. In many cases open source licenses require the inclusion of the full license text to any software that is released under the respective license.",
    "This attribute allows for the specification of the parameter size. This information is relevant if there is a gap between one diagnostic parameter and the following diagnostic parameter (or the tail of the telegram). The unit is bit and the values shall be multiples of 8.",
    "This attribute allows for the specification of the position of the enclosing role in a bitfield of roles.",
    "This attribute allows to attach classification to the Keyword such as MEAN, ACTION, CONDITION, INDEX, PREPOSITION",
    "This attribute allows to configure a tcp port number.",
    "This attribute allows to configure a udp port number that is used for reception and transmission of UdpNm messages.",
    "This attribute allows to configure a udp port number.",
    "This attribute allows to define a set of engineering objects as pattern based search applied to the filetype of the individual Engineering objects.",
    "This attribute allows to define a set of engineering objects as pattern based search applied to the shortLabel of the individual Engineering objects.",
    "This attribute allows to denote a particular role of the collection. Note that the applicable semantics shall be mutually agreed between the two parties.",
    "This attribute allows to denote a particular role of the collection. Note that the applicable semantics shall be mutually agreed between the two parties.\r\n\r\nIn particular it denotes the role of element in the context of sourceElement.",
    "This attribute allows to denote the type of requirement to denote for example is it an \"enhancement\", \"new feature\" etc.",
    "This attribute allows to set a log level Threshold for Log Level filtering.",
    "This attribute allows to set the initial log reporting level for a logTraceProcessId (ApplicationId).",
    "This attribute attributes a symbolic name to the iterator of the superimposed record layout group. This can be referenced as a loop index in contained SwRecordLayoutV elements.",
    "This attribute can be taken to contribute to the creation of symbolic name values.",
    "This attribute can be taken to control how the respective CppImplementationDataType is contributed to the language binding.",
    "This attribute can be taken to define the maximum deviation between the local time and the time obtained from SYNC message that triggers a correction of the time drift caused by the hardware on the local node.",
    "This attribute can be used to define a specific format that the value of the string property shall be conform with.",
    "This attribute can be used to define a value which is added to or subtracted from the value of a DataPrototype when using up/down keys while calibrating.",
    "This attribute can be used to describe a version information for the enclosing SoftwareCluster.",
    "This attribute can be used to describe the applicationId that is used in the log and trace message in more detail.",
    "This attribute can be used to describe the contextId that is used in the log and trace message in more detail.",
    "This attribute can be used to describe the logTraceProcessId that is used in the log and trace message in more detail.",
    "This attribute can be used to describe the version of the Communication Matrix which was used to derive the ECU Configuration.",
    "This attribute can be used to provide information about the format used to create the certificate",
    "This attribute can be used to specify the array size if the enclosing CppImplementationDataType has array semantics.",
    "This attribute can be used to specify the update strategy of the respective PersistencyDeploymentElement.",
    "This attribute can be used to specify the update strategy of the respective PersistencyFileProxy.",
    "This attribute can be used to specify the update strategy of the respective PersistencyInterface as a whole.",
    "This attribute can be used to specify the update strategy of the respective PersistencyInterfaceElement.",
    "This attribute can be used to support the mapping of bit field to bit field, boolean values to bit fields, and vice versa. The attribute defines the bit mask for the first element of the TextTableMapping.",
    "This attribute can be used to support the mapping of bit field to bit field, boolean values to bit fields, and vice versa. The attribute defines the bit mask for the second element of the TextTableMapping.",
    "This attribute can be used together with the lowerCanId attribute to define a range of CanIds.",
    "This attribute can be used together with the upperCanId attribute to define a range of CanIds.",
    "This attribute captures the format used to represent the graphic.",
    "This attribute carries the homologation information that may be specific for a given country.",
    "This attribute carries the identification of the target's class. This way, the possible reference targets can be restricted on the \"definition\" side of the target-configuration. This is necessary to preserve the intended semantics of the foreign reference.",
    "This attribute carries the identification of the target's class. This way, the possible reference targets can be restricted on the \"definition\" side of the target-configuration. This is necessary to preserve the intended semantics of the instance reference.",
    "This attribute carries the ordered list (separated by whitespace) of identification of context classes. This way, the possible reference targets can be restricted on the \"definition\" side of the target-configuration. This is necessary to preserve the intended semantics of the instance reference.",
    "This attribute clarifies the validity of the eventWindow",
    "This attribute clarifies whether and where the referenced SoftwarePackage is stored.",
    "This attribute clarifies whether the address value shall be interpreted as a physical or a functional address.",
    "This attribute configures how the content of the memory is affected by an active ControlDTCSetting or not: \r\n* If the attribute is set to '''true''', the user-defined fault memory is '''not''' updated if ControlDTCSetting is off. \r\n* If the attribute is set to '''false''', the user defined fault memory is updated even if ControlDTCSetting is off.",
    "This attribute configures the length of the time interval in seconds for dropping security events if the number of all processed security events exceeds the configurable threshold within the respective time interval.",
    "This attribute configures the length of the time interval in seconds for dropping security events if the size of all processed security events exceeds the configurable threshold within the respective time interval.",
    "This attribute configures the threshold for dropping security events if the number of all processed security events exceeds the threshold in the respective time interval.",
    "This attribute configures the threshold for dropping security events if the size of all processed security events exceeds the threshold in the respective time interval.",
    "This attribute configures the threshold number, i.e. how many security events in the configured time frame are dropped before subsequent events start to pass the filter.",
    "This attribute configures the time interval in seconds for one threshold filter operation.",
    "This attribute contains a list of applicable subfunctions for all DiagnosticDynamicallyDefineDataIdentifier that reference the DiagnosticDynamicallyDefineDataIdentifierClass.",
    "This attribute contains the applicable safety policy for the enclosing SoftwarePackageStep.",
    "This attribute contains the name of the pin according to the packaging of the hardware element (e.g. A03).",
    "This attribute contains the physical pin number.",
    "This attribute contains the value of the DTC status availability mask.",
    "This attribute contributes a string value to be taken as the slug reference that represents the PortPrototype level of a REST service.",
    "This attribute controls how data is processed according to the possible values of ProcessingKindEnum.",
    "This attribute controls how invalidation is applied to the dataElement.",
    "This attribute controls how out-of-range values shall be dealt with.",
    "This attribute controls how persistent data can be accessed.",
    "This attribute controls how the information about the array size shall be interpreted.",
    "This attribute controls how values that are out of the specified range are handled according to the values of HandleOutOfRangeEnum.",
    "This attribute controls the behavior of how authentication affects the ability to launch for each Executable.",
    "This attribute controls the behavior of how the ratio is calculated.",
    "This attribute controls the behavior of the SoftwareCluster in terms of installation.",
    "This attribute controls the behavior of the corresponding RPortPrototype with respect to the question whether it can deal with asynchronous mode switch requests, i.e. if set to true, the RPortPrototype is able to deal with an asynchronous mode switch request.",
    "This attribute controls the behavior with respect to stopping and restarting. The corresponding AtomicSwComponentType may either not support stop and restart, or support only stop, or support both stop and restart.",
    "This attribute controls the behavior with respect to the handling of timeouts.",
    "This attribute controls the direction into which the mapped SystemSignal is communicated with respect to the kind of PortPrototype used as the context element of the DataMapping.",
    "This attribute controls the implementation of the payload of an array. It shall only be used if the enclosing ImplementationDataType constitutes an array.",
    "This attribute controls the kind of DataTransformation to be applied.",
    "This attribute controls the meaning of the value of the array size.",
    "This attribute controls the possibility to access the content of the CryptoCertificateSlot by Find() interfaces of the X509 Provider.",
    "This attribute controls the presentation of the related data for measurement and calibration tools.",
    "This attribute controls the provision of return values for RTE APIs that correspond to the enclosing access point.",
    "This attribute controls the scope in which the redundancy handling is applied.",
    "This attribute controls the semantics of the arraysize for the array representing the string in an ImplementationDataType. \r\n\r\nIt is there to support a safe conversion between ApplicationDatatype and ImplementationDatatype, even for variable length strings as required e.g. for Support of SAE J1939.",
    "This attribute controls the startup behavior of the OS/ARTI Adapter.",
    "This attribute controls the update behavior of the enclosing DiagnosticTestResult.",
    "This attribute controls whether a notification semantics is foreseen to this field.",
    "This attribute controls whether application code is entitled to check whether the value of the corresponding VariableDataPrototype has been updated.",
    "This attribute controls whether approval is required for the driver notification.",
    "This attribute controls whether interaction requires the software-component to react synchronously on a request or whether it processes the request in background but still the DCM has to issue the call again to eventually obtain the result of the request.",
    "This attribute controls whether qualified reportings of the referenced security event shall be stored persistently by the mapped IdsmInstance or not.",
    "This attribute controls whether read access is foreseen to this field.",
    "This attribute controls whether the cryptographic key is shared with at least one user.",
    "This attribute controls whether the reporting of the security event shall be done by means of the smart sensor API.",
    "This attribute controls whether write access is foreseen to this field.",
    "This attribute define the maximum counts of retries to subscribe to an Eventgroup. If the value is set to 0 no retry shall be done. If the value is set to 255 the retry shall be done as along as the Eventgroup is requested and no SubscribeEventGroupAck was received.",
    "This attribute defines a crypto algorithm restriction (kAlgIdAny means without restriction). The algorithm can be specified partially: family & length, mode, padding.\r\n\r\nFuture Crypto Providers can support some crypto algorithms that are not well known/ standardized today, therefore AUTOSAR doesn't provide a concrete\r\nlist of crypto algorithms' identifiers and doesn't suppose usage of numerical identifiers. Instead of this a provider supplier should provide string names of supported algorithms\r\nin accompanying documentation. The name of a crypto algorithm shall follow the rules defined in the specification of cryptography for Adaptive Platform.",
    "This attribute defines a crypto algorithm restriction (kAlgIdAny means without restriction). The algorithm can be specified partially: family & length, mode, padding.\r\n\r\nFuture Crypto Providers can support some crypto algorithms that are not well known/ standardized today, therefore AUTOSAR doesn't provide a concrete list of crypto algorithms' identifiers and doesn't suppose usage of numerical identifiers. Instead of this a provider supplier should provide string names of supported algorithms in accompanying documentation. The name of a crypto algorithm shall follow the rules defined in the specification of cryptography for Adaptive Platform.",
    "This attribute defines a defaultAction in case that the VehicleMode is not yet set.",
    "This attribute defines a factor that specifies the time period for the Freshness Timestamp. It holds a multiplication factor that specifies the concrete meaning of a Freshness Timestamp increment by one on basis of microseconds.",
    "This attribute defines a numerical identifier for the Secured I-PDU.",
    "This attribute defines a record number for a freeze frame record.",
    "This attribute defines a transport layer independent ServiceInstanceId.",
    "This attribute defines a unique numerical identifier for the referenced ServiceInterface element.",
    "This attribute defines a value set in the header of an Internet Protocol (IP) packet that tells network devices the maximum number of router hops the packet can make before it is discarded. The TTL value is a counter that is decremented by 1 every time the packet passes through a router.",
    "This attribute defines by how long before the expiration of saRekeyTime will be rekeyed.",
    "This attribute defines for which operations the KeySlot may be used.",
    "This attribute defines general DDS Security communication properties applicable to the DDS domain(s) in which the subject operates.",
    "This attribute defines how DoIp Entitiy Identification is retrieved.",
    "This attribute defines how critical/severe the referenced security event is.\r\nPlease note that currently, the severity level meanings of specific integer values is not specified by AUTOSAR but left to the party responsible for the IDS system design (e.g. the OEM).",
    "This attribute defines how invalidation is applied to the ISignals received in the context of this ISignalPort.",
    "This attribute defines how much faster the calculations within one DeterministicClient::WaitForActivation cycle can be finished if numberOfWorkers are physically available, i.e. if enough cores were available on the machine to perform parallel execution of all workers (sequential runtime / parallelized runtime).",
    "This attribute defines how often a process shall be restarted if the start fails.\r\n\r\nnumberOfRestartAttempts = \"0\" OR Attribute not existing, start once\r\n\r\nnumberOfRestartAttempts = \"1\",  start a second time",
    "This attribute defines how the Port Access Entity (PAE) is started:\r\n\r\n* true := Autostart\r\n\r\n* false := Manual Start",
    "This attribute defines how the access restriction to the Service Instance is defined.",
    "This attribute defines how the event debounce algorithm will behave, if a related enable condition is not fulfilled or ControlDTCSetting of the related event is disabled.",
    "This attribute defines how the local participant should be identified for authentication.",
    "This attribute defines how the management of the RAM Block status is controlled.",
    "This attribute defines how the referenced target EcucContainerDef is described.",
    "This attribute defines how the remote participant should be identified for authentication.",
    "This attribute defines if Process is permitted to create child Processes. When setting this parameter to true two things should be kept in mind: 1) safety and security implication of this configuration, 2) the fact that Process will assume management responsibilities for child Processes (i.e. it will be responsible for terminating Processes that it creates).",
    "This attribute defines if the operation cycles is automatically re-started during Dem_PreInit.",
    "This attribute defines if the optional VIN/GID synchronization status is used additionally in the vehicle identification/announcement.",
    "This attribute defines in percentage by how long before the expiration of ikeReauthTime and ikeRekeyTime will be rekeyed/reauthenticated.\r\n\r\nDefault: 10%",
    "This attribute defines option name.",
    "This attribute defines option value.",
    "This attribute defines over which Transport Layer Protocol this event is intended to be sent.",
    "This attribute defines over which Transport Layer Protocol this method is intended to be sent.",
    "This attribute defines over which Transport Layer Protocol(s) this Method is intended to be sent.",
    "This attribute defines over which Transport Layer Protocol(s) this event is intended to be sent.",
    "This attribute defines over which Transport Layer Protocol(s) this method is intended to be sent.",
    "This attribute defines requirements on the data consistency mechanism in the cross cluster communication. If the attribute is not set, the default value consistencyMechanismRequired applies.",
    "This attribute defines that all processes that are referenced via the ExecutionDependency shall be launched and shall reach a certain ProcessState before the referencing process is started.",
    "This attribute defines the  key-server priority.",
    "This attribute defines the CDD that transmits or receives the UserDefinedIPdu. If several CDDs are defined this attribute is used to distinguish between them.",
    "This attribute defines the CDD that transmits or receives the UserDefinedPdu. If several CDDs are defined this attribute is used to distinguish between them.",
    "This attribute defines the CanId on the targetChannel.",
    "This attribute defines the ID of the security sensor that detects the referenced security event.",
    "This attribute defines the IKE authentication method that is used locally and is expected on the remote side.",
    "This attribute defines the IPv4 address of the remote peer to allow a static service connection between Service Provider and Service Consumer.",
    "This attribute defines the IPv6 address of the remote peer to allow a static service connection between Service Provider and Service Consumer.",
    "This attribute defines the Id of the Freshness Value for the Integrity Check Value (ICV) calculation and verification.",
    "This attribute defines the Id of the Freshness Value.",
    "This attribute defines the Id of the Freshness Value.\r\nThe Freshness Value might be a normal counter or a time value.",
    "This attribute defines the Id of the Secondary Freshness Value. The Secondary Freshness Value might be a normal counter or a time value.\r\nPlease note that this attribute is for documentation only to allow the configuration of required freshness value manager and no upstream mapping is defined for it.",
    "This attribute defines the MACsec capability.",
    "This attribute defines the PSK identity that is sent from the client to the server to indicate which PreSharedKey will be used for the handshake.",
    "This attribute defines the TCP Session timeout in seconds",
    "This attribute defines the TX period in seconds",
    "This attribute defines the VLAN frame priority for SOME/IP messages  that are resulting from this ProvidedSomeipServiceInstance (Method and Event communication).\r\nValues from 0 (best effort) to 7 (highest) are allowed.",
    "This attribute defines the VLAN frame priority for Service Discovery messages that result  from RequiredSomeipServiceInstances that are referncing this SomeipSdClientServiceInstanceConfig (Find, SubscribeEventGroup, StopSubscribeEventgroup).\r\nValues from 0 (best effort) to 7 (highest) are allowed.",
    "This attribute defines the VLAN frame priority for Service Discovery messages that result from ProvidedSomeipServiceInstances that are referencing the SomeipSdServerServiceInstanceConfig (OfferService, StopOfferService, SubscribeEventGroupAck).\r\nValues from 0 (best effort) to 7 (highest) are allowed.",
    "This attribute defines the VLAN frame priority for messages on the Socket defined by the udpPort and the multicast IP address.\r\nValues from 0 (best effort) to 7 (highest) are allowed.",
    "This attribute defines the VLAN frame priority where values from 0 (best effort) to 7 (highest) are allowed.",
    "This attribute defines the absolute time after which an IKE SA will be reauthenticated.\r\n\r\n0 means reauthentication is disabled.",
    "This attribute defines the absolute time after which an IKE SA will be rekeyed.\r\n\r\n0 means rekey is disabled.",
    "This attribute defines the absolute time after which an IPsec SA will be rekeyed.\r\n\r\n0 means rekey is disabled.",
    "This attribute defines the acceptable amount of aliveReferenceCycles with incorrect/failed AliveSupervision.",
    "This attribute defines the action to be taken in the step of processing the enclosing SoftwarePackage.",
    "This attribute defines the additional number of authentication attempts that are to be carried out when the generation of the authentication information failed for a given SecuredIPdu. If zero is set than only one authentication attempt is done.",
    "This attribute defines the additional number of authentication attempts that are to be carried out when the generation of the authentication information failed for a given message. If zero is set than only one authentication attempt is done.",
    "This attribute defines the additional number of authentication build attempts that are to be carried out when the generation of the authentication information failed for a given message. If zero is set then only one authentication attempt is done.",
    "This attribute defines the applicable RptProfiles for the specific RptContainer. If not any references to a specific RptProfile is defined, all RptProfiles defined in the RapidPrototypingScenario are applicable.",
    "This attribute defines the approach when the freeze frame record is stored/updated.\r\n\r\ntrue: FreezeFrame record is captured every time.\r\n\r\nfalse: FreezeFrame record is only captured for new event memory entries.",
    "This attribute defines the authentication algorithm used for MAC generation and verification.",
    "This attribute defines the beginning offset (in bits) of the Array representation of the Signal Group (including CRC, counter and application\r\nsignal group) in the IPdu. This attribute is mandatory and the dataOffset shall always be defined.",
    "This attribute defines the bus mirroring protocol that is used in the BusMirrorChannelMapping",
    "This attribute defines the bypassing of signature authentication or MAC verification in the receiving ECU.\r\nIf not defined or set to true the signature authentication or MAC verification shall be performed for the SecuredIPdu. \r\nIf set to false the signature authentication or MAC verification shall not be performed for the SecuredIPdu.",
    "This attribute defines the byte offset in the datagram (start byte of the Ethernet frame, i.e. offset 0 corresponds to the first byte of the destination MAC address).",
    "This attribute defines the byteValue (0..255) in the datagram.",
    "This attribute defines the capacity of the queue for rate limitation (leaky-bucket Algorithm).",
    "This attribute defines the common name (CN) of the certificate of the remote peer.",
    "This attribute defines the complete length in bits of the Freshness Value.",
    "This attribute defines the complete length in bits of the Freshness Value. As long as the key doesn't change the counter shall not overflow. The length of the counter shall be determined based on the expected life time of the corresponding key and frequency of usage of the counter.",
    "This attribute defines the consideration of the fault confirmation process for the occurrence counter.",
    "This attribute defines the cryptographic algorithm that needs to be supported.",
    "This attribute defines the cryptographic algorithm to be used for providing authentication information in QSEv messages. The content of this attribute shall comply to the \"Cryptographic Primitives Naming Convention\".",
    "This attribute defines the cryptographic algorithm used for hashing, encryption, decryption, signature/MAC verification, or MAC generation.",
    "This attribute defines the cryptographic identity of the subject.",
    "This attribute defines the cycle time of the function CanSM_MainFunction in seconds.",
    "This attribute defines the default reporting mode for the referenced security event.",
    "This attribute defines the destination MAC Address that is used to calculate the ICV (Integrity Check Value).",
    "This attribute defines the destination file to which the logging information is passed.",
    "This attribute defines the destination of log messages provided by the process.",
    "This attribute defines the direction in which the traffic is monitored. If this attribute is not set a bidirectional traffic monitoring is assumed.",
    "This attribute defines the duration of the bus-off event check in seconds.",
    "This attribute defines the duration of the bus-off recovery time in level 1 (short recovery time) in seconds.",
    "This attribute defines the duration of the bus-off recovery time in level 2 (long recovery time) in seconds.",
    "This attribute defines the format returned by Dem_DcmGetTranslationType and does not relate to/influence the supported Dem functionality.",
    "This attribute defines the hash of the storage used in case of verification.",
    "This attribute defines the identifier for the DoIPInterface.",
    "This attribute defines the interval in seconds to re-trigger a subscription to a Eventgroup, if a retry to subscribe to a Eventgroup is configured (subscribeEventgroupRetryMax > 0).",
    "This attribute defines the length in bits of the Freshness Value to be included in the payload of the Secured I-PDU. This length is specific to the least significant bits of the complete Freshness Counter. If the attribute is 0 no Freshness Value is included in the Secured I-PDU.",
    "This attribute defines the length in bits of the Freshness Value to be included in the payload of the secured message.",
    "This attribute defines the length in bits of the authentic PDU data that is passed to the SWC that verifies and generates the Freshness.",
    "This attribute defines the length in bits of the authentication code to be included in the payload of the authenticated Message.",
    "This attribute defines the length in bits of the authentication code to be included in the payload of the authenticated Pdu.",
    "This attribute defines the length in bytes of the area within the payload Pdu which will be secured.",
    "This attribute defines the length of the used client identifier in bits.  If the attribute does not exist or its value is set to 0 this means that the client identifier is not used.\r\n\r\nPlease note that this attribute is deprecated and will be removed in future (Value is fixed to UInt16).",
    "This attribute defines the lower limit of the parameter. This means that the value of the parameter shall never be less than the defined lower limit.",
    "This attribute defines the maximal number of TCP Sessions that are allowed to be established.",
    "This attribute defines the maximal number of clients the Server is able to deal with in case of Service Discovery.",
    "This attribute defines the maximal number of wait frames to be sent for a pending connection. Range is 0..255.",
    "This attribute defines the maximum allowed difference between local time and fallback time of the time base in seconds.",
    "This attribute defines the maximum number of FlowControl N-PDUs with FlowState \"WAIT\".",
    "This attribute defines the maximum number of flow control PDUs that can be consecutively be transmitted by a receiver.",
    "This attribute defines the maximum number of retries (if retry is configured for the particular channel).",
    "This attribute defines the maximum number of time the UCM module instantiation shall attempt a retry.",
    "This attribute defines the maximum number of trying to send a frame when a TIMEOUT AR occurs (depending on whether retry is configured).",
    "This attribute defines the maximum number of trying to send a frame when a TIMEOUT AS occurs (depending on whether retry is configured).",
    "This attribute defines the maximum permissible gradient for an adjustable object (curve, map or cuboid) with respect to a specific axis.\r\nMaxGrad  =  maximum( absolute((Value i,k - Value i-1,k)/(Axis Point i - Axis Point i-1)) )",
    "This attribute defines the maximum shutdown time (in seconds) of a connected and coordinated NM-Cluster.",
    "This attribute defines the maximum time interval in which the application shall expect the servers's response (time between the sending of the call invocation until the arrival of the server's response).",
    "This attribute defines the minimum amount of time between two succeeding CFs of a 1:1 segmented transmission in seconds. Valid values are 0, 100µs, 200µs .. 900µs, 1ms, 2ms .. 127ms. The value can be changed at runtime using the FrArTp_ChangeParameter interface.\r\n\r\nThe minimumSeparationTime shall be an integer multiple of the cycle length multiplied with the multiplexing factor, i.e. minimumSeparationTime = n * cycle * m, where n is an integer >=0, cycle is FlexrayCluster.cycle, and m is the cycle multiplexor of those cycles where PDUs of the PDU pool are scheduled.\r\n\r\nPlease note: Due to the scheduling strategies of FrTp, minimumSeparationTime can only be kept to a degree defined by the maximum temporal distance of the PDUs of a PDU pool within one FlexRay cycle.\r\n\r\nRange: 0 .. 0.127",
    "This attribute defines the minimum amount of time between two succeeding CFs of a 1:n segmented transmission in seconds. Valid values are 0, 100µs, 200µs ... 900µs, 1ms, 2ms .. 127ms. The value can be changed at runtime using the FrArTp_ChangeParameter interface.\r\n\r\nminimumMulticastSeparationTime shall be an integer multiple of the cycle length multiplied with the multiplexing factor, i.e. minimumMulticastSeparationTime = n * cycle * m, where n is an integer >= 0, cycle is FlexrayCluster.cycle, and m is the cycle multiplexor of those cycles where PDUs of the PDU pool are scheduled. \r\nPlease note: Due to the scheduling strategies of FrTp, minimumMulticastSeparationTime can only be kept to a degree defined by the maximum temporal distance of the PDUs of a PDU pool within one FlexRay cycle.\r\n\r\nRange: 0 .. 0.127",
    "This attribute defines the minimum interval between two consecutive transmissions of the respective data the application is assumed to ensure.",
    "This attribute defines the minimum queue size for received containers.",
    "This attribute defines the minimum queue size for transmitted containers.",
    "This attribute defines the multicast IPv4 address to allow a static service connection between Service Provider and Service Consumers.",
    "This attribute defines the multicast IPv6 address to allow a static service connection between Service Provider and Service Consumers.",
    "This attribute defines the name of the ECU for use within the Dlt protocol.",
    "This attribute defines the name of the count profile used to determine the AccessCount.value numbers.",
    "This attribute defines the networkId of the communication channel.",
    "This attribute defines the node ID when the PLCA mode for 10BASE-T1S is used.",
    "This attribute defines the number of Freshness Counter re-synchronization attempts when a verification failed for a Secured I-PDU. If the value is zero, there will be no additional verification attempt to synchronize with a potentially better fitting Freshness Counter value. This attribute is only applicable if useFreshnessTimestamp is FALSE.",
    "This attribute defines the number of according freeze frame records, which can maximal be stored for this event. Therefore all these freeze frame records have the same freeze frame class.",
    "This attribute defines the number of consecutive CFs between two FCs (block size). Valid values are 1 .. 16 when retry is activated, and 0 .. 255 otherwise.",
    "This attribute defines the number of failure cycles for the WarningIndicatorOnCriteria. Please note that this attribute is not relevant for the Adaptive Platform.",
    "This attribute defines the number of failure cycles for the event based fault confirmation.",
    "This attribute defines the number of healing cycles for the WarningIndicatorOffCriteria",
    "This attribute defines the number of operation cycles with a failed result before a confirmed DTC is set to 1. The semantic of this attribute is a by \"1\" increased value compared to the confirmation threshold of the \"trip counter\" mentioned in ISO 14229-1 in figure D.4. A value of \"1\" defines the immediate confirmation of the DTC along with the first reported failed. This is also sometimes called \"zero trip DTC\". A value of \"2\" defines a DTC confirmation in the operation cycle after the first occurred failed. A value of \"2\" is typically used in the US for OBD DTC confirmation.",
    "This attribute defines the number of vehicle announcement messages on IP address assignment. Represents parameter A_DoIP_Announce_Num of ISO 13400-2:2012.",
    "This attribute defines the numeric value which Execution Management and Platform Health Management reports to State Management if the Process terminates unexpectedly or violates its supervision. It shall give further error information for error recovery.",
    "This attribute defines the numerical identification of the security event subject to target-configuration.",
    "This attribute defines the order of the bytes of the Pdu and the packing into the Frame. \r\nPlease consider that [constr_3246] and [constr_3222] are restricting the usage of this attribute.",
    "This attribute defines the order of the bytes of the segment and the packing into the MultiplexedIPdu. \r\nPlease consider that [constr_3247] and [constr_3224] are restricting the usage of this attribute.",
    "This attribute defines the order of the bytes of the selectorField and the packing into the MultiplexedIPdu. Please consider that [constr_3247] and [constr_3223] are restricting the usage of this attribute. \r\n\r\n\r\nIn a complete System Description this attribute is mandatory. If a MultiplexedPdu is received by a Pdu Gateway and is not delivered to the IPduM but routed directly to a bus interface then the content of the MulitplexedPdu doesn't need to be described in the System Extract/Ecu Extract. To support this use case the multiplicity is set to 0..1.",
    "This attribute defines the outOfRangeHandling for received and sent signals.",
    "This attribute defines the output rate that describes how many packets leave the queue per second (leaky-bucket Algorithm).",
    "This attribute defines the path to the file that is used as output sink.",
    "This attribute defines the period in which the application is assumed to transmit the respective data.",
    "This attribute defines the period in which the application shall check for updated data.\r\n\r\nThis attribute is used for the configuration of the E2E protection, but may also indicate a general data reception period.",
    "This attribute defines the period in which the application shall check for updated data. This attribute is used for the configuration of the E2E protection, but may also indicate a general data reception period.",
    "This attribute defines the point in time where a schedule table switch is performed. If this attribute is set to false or not present, the schedule table shall be switched after the current entry of the active schedule table is ended. If this attribute is enabled, the schedule table shall be switched when message transmission or reception within an entry has been completed, ensured by status checks for transmission and reception.",
    "This attribute defines the port behavior.",
    "This attribute defines the preemptability of the task.",
    "This attribute defines the primary trigger to allocate an event memory entry.",
    "This attribute defines the priority for a particular communication connection. For more details see the SWS Diagnostics specification.",
    "This attribute defines the priority of a task as a relative value, i.e. the values show only the relative ordering of the tasks.",
    "This attribute defines the priority of the IPSecRule (SPD entry). The processing of entries is based on priority, starting with the highest priority \"0\".",
    "This attribute defines the relevant IP protocol used in the Security Policy Database (SPD) entry.",
    "This attribute defines the relevant IP protocol.",
    "This attribute defines the resulting UDS status byte for the related event, which shall not be cleared according to the ClearEventAllowed callback",
    "This attribute defines the retry strategy of the UCM Master for the case that the block is inconsistent.",
    "This attribute defines the retry strategy of the UCM Master for the case that the service is busy.",
    "This attribute defines the retry strategy of the UCMMaster for the case that one (or more) UCM is not available on the network.",
    "This attribute defines the retry strategy of the UcmMaster for the case that the update session is rejected.",
    "This attribute defines the role of the keySlot assignment.",
    "This attribute defines the size of each dimension for compound primitives\r\nCURVE, MAP, CUBOID, CUBE_4, CUBE_5, COM_AXIS, RES_AXIS, VAL_BLK.\r\n\r\nFor each dimension one value has to be defined, e.g. one in case of COM_AXIS and two or more in case of MAP.",
    "This attribute defines the size of the header which is inserted into the SecuredIPdu. If this attribute is set to anything but noHeader, the SecuredIPdu contains the Secured I-PDU Header to indicate the length of the AuthenticIPdu. The AuthenticIPdu contains the original payload, i.e. the secured data.",
    "This attribute defines the software version of the UCM on this platform.\r\n\r\nNote that the definition of the ucmSoftwareVersion is required if the ability of the SoftwarePackage to require a minimum version of the UCM is utilized.",
    "This attribute defines the software version of the UCM on this platform.\r\n\r\nNote that the definition of the version is required if the ability of the SoftwarePackage to require a minimum version of the UCM is utilized.",
    "This attribute defines the source MAC Address that is used to calculate the ICV (Integrity Check Value).",
    "This attribute defines the start position (offset in byte) of the area within the payload Pdu which will be secured.",
    "This attribute defines the target network management state that is requested by state management.",
    "This attribute defines the tcpPort of the remote peer to allow a static service connection between Service Provider and Service Consumer.",
    "This attribute defines the termination behavior of the Process.",
    "This attribute defines the time (in seconds) between two retry attempts.",
    "This attribute defines the time (in seconds) that the authentication state is maintained in default-session if there is no communication from the authenticated client.",
    "This attribute defines the time in seconds between receiving the last CF of a block or an FF-x (or SF-x) and sending out an FC or AF.",
    "This attribute defines the time in seconds between the sending of two consecutive frames or between a consecutive frame and a flow control (for Transmit Cancellation) or between reception of an flow control or Acknowledgement Frame and sending of the next consecutive frame or a  flow control (for Transmit Cancellation).",
    "This attribute defines the time interval after which the application shall assume that the to be received data reception has timed out, i.e. the respective data has not been received for that amount of time.",
    "This attribute defines the time that the authentication state is maintained in default-session if there is no communication from the authenticated client.",
    "This attribute defines the timeout  in seconds for waiting for response to an Alive Check request before the connection is considered to be disconnected. Represents parameter T_TCP_AliveCheck of ISO 13400-2:2012.",
    "This attribute defines the timeout for transmission of Sync and Follow_Up messages on Master ports in absence of reception of Sync and Follow_Up messages on Slave port.",
    "This attribute defines the timeout in seconds for maximum inactivity of a TCP socket connection before the DoIP module will close the according socket connection. Represents parameter T_TCP_General_Inactivity of ISO 13400-2:2012",
    "This attribute defines the timeout in seconds for waiting for an FC or AF on the sender side in a 1:1 connection.",
    "This attribute defines the timeout in seconds used for initial inactivity of a connected TCP socket connection directly after socket connection. Represents parameter T_TCP_Initial_Inactivity of ISO 13400-2:2012",
    "This attribute defines the timeout value for waiting for a CF or FF-x (in case of retry) after receiving the last CF or after sending an FC or AF on the receiver side. Specified in seconds.",
    "This attribute defines the timeout value in seconds for waiting for a CF or FF-x (in case of retry) after receiving the last CF or after sending an FC or AF on the receiver side.",
    "This attribute defines the type of a RoutingGroup. There are RoutingGroups that activate the data path for unicast or multicast events of an event group. And there are RoutingGroups that activate the data path for initial events that are triggered, namely events that are sent out on the server side after a client got subscribed.\r\n\r\nPlease note that this attribute is only valid for event communication (Sender Receiver communication) and shall be omitted in MethodActivationRoutingGroups.",
    "This attribute defines the type of a RoutingGroup. There are RoutingGroups that activate the data path for unicast or multicast events of an event group. And there are RoutingGroups that activate the data path for initial events that are triggered, namely events that are sent out on the server side after a client got subscribed.\r\nPlease note that this attribute is only valid for event communication (Sender Receiver communication) and shall be omitted in MethodActivationRoutingGroups.",
    "This attribute defines the type of assigning freeze frame record numbers for event-specific freeze frame records.",
    "This attribute defines the type of the connection.",
    "This attribute defines the udpPort of the remote peer to allow a static service connection between Service Provider and Service Consumer.",
    "This attribute defines the udpPort used for the multicast communication.",
    "This attribute defines the unique Id for the DltMessage.",
    "This attribute defines the upper limit of the parameter. This means that the value of the parameter shall never be greater than the defined upper limit.",
    "This attribute defines the use-case for this ISignalIPduGroup (e.g. diagnostic, debugging etc.). For example, in a diagnostic mode all IPdus - which are not involved in diagnostic - are disabled. The use cases are not limited to a fixed enumeration and can be specified as a string.",
    "This attribute defines the use-case for this PduRIPduGroup. For example, in a diagnostic mode all IPdus - which are not involved in diagnostic - are disabled. The use cases are not limited to a fixed enumeration and can be specified as a string.",
    "This attribute defines the waiting time in seconds for sending first vehicle announcement message after IP address assignment. Represents parameter A_DoIP_Announce_Wait of ISO 13400-2:2012",
    "This attribute defines the waiting time in seconds for sending subsequent vehicle announcement messages. Represents parameter A_DoIP_Announce_Interval of ISO 13400-2:2012",
    "This attribute defines what to do if the peer is considered dead. \r\n\r\nIf not configured \"restart\" shall be assumed.",
    "This attribute defines when an extended data record is captured.\r\n\r\ntrue: This extended data record is captured every time.\r\n\r\nfalse: This extended data record is only captured for new event memory entries.",
    "This attribute defines whether a buffer is used in case that the output sink is the console.",
    "This attribute defines whether a configured EID at vehicle identification response/vehicle announcement is used or the MAC address. \r\nTRUE: Use MAC Address instead of EID for Vehicle identification/announcement. \r\nFALSE: Use configured EID for vehicle identification/announcement.",
    "This attribute defines whether a derivedCertificate is accepted (true) or not (false).",
    "This attribute defines whether a shadow copy of this Key Slot shall be allocated to enable rollback of a failed Key Slot update campaign (see interface BeginTransaction).",
    "This attribute defines whether a shadow copy of this KeySlot shall be allocated to enable rollback of a failed KeySlot update campaign (see interface BeginTransaction).",
    "This attribute defines whether a timestamp shall be added to the Dlt messages or not.",
    "This attribute defines whether additional monitor data shall be added to the reporting of events.",
    "This attribute defines whether restrictions on the number of updates are defined or not.\r\n\r\n* false: no restriction is placed on the number of updates.\r\n\r\n* true: restrictions are placed on the number of updates with the attribute maxNumberOfAllowedUpdates.",
    "This attribute defines whether segmentation within a 1:n connection is allowed or not.",
    "This attribute defines whether the CppImplementationDataTypeElement in C++ is an embedded type element inside of the enclosing CppImplementationDataType (true) or whether the CppImplementationDataTypeElement is defined outside and referenced by a type reference (false).",
    "This attribute defines whether the Dem has access to a \"ClearEventAllowed\" callback.",
    "This attribute defines whether the DltArgument is a predefinedText (Static Data).",
    "This attribute defines whether the Pdu has dynamic length (true) or not (false). Please note that the usage of this attribute is restricted by [constr_3448].",
    "This attribute defines whether the ServiceInterface element shall verify its security credentials during reception.",
    "This attribute defines whether the StateManagement is based on TCP flags or not.",
    "This attribute defines whether the Transformer has an internal state or not.",
    "This attribute defines whether the application has write-access to the CryptoCertificate (true) or only read-access (false).",
    "This attribute defines whether the argument is mandatory or whether it could be left out.",
    "This attribute defines whether the argument is optional or not. If set to true, the argument can be omitted from the payload of a DLT message.",
    "This attribute defines whether the associated RAM Block shall be stored immediately if the written value is different to the value stored in the associated RAM Block(s) during or after execution of the according SW-C RunnableEntity.",
    "This attribute defines whether the echo reply is only transmitted in case that the incoming ICMPv6 Echo Request (Pings) fits the MTU of the respective interface, i.e. can be transmitted without IPv6 fragmentation.",
    "This attribute defines whether the keySlot is exclusively used by the Application; or whether it is used by Stack Services and managed by a Key Manager Application.",
    "This attribute defines whether the length of the DltArgument is variable (determined at runtime) or not.",
    "This attribute defines whether the member type of the CppImplementationDataTypeElement in C++ is an embedded type element inside of the enclosing struct (true) or whether the type declaration is defined outside of the struct.",
    "This attribute defines whether the network interface \r\n* is started \"on-demand\" when an activation line is sensed or \r\n* is always available.",
    "This attribute defines whether the response to the EcuReset service shall be transmitted before or after the actual reset.",
    "This attribute defines whether the sessionId is used or not.",
    "This attribute defines whether this DltLogSink supports non-Verbose Dlt messages. If disabled only verbose mode messages shall be used.",
    "This attribute defines whether this channel supports non-Verbose Dlt messages. If disabled only verbose mode messages  shall be used.",
    "This attribute defines whether this iSignal is an array that results in a UINT8_N / UINT8_DYN ComSignalType in the COM configuration or a primitive type.",
    "This attribute defines whether this method is a fire&forget method (true) or not (false).",
    "This attribute defines whther the MAC of the network interface is used as eid.\r\nTrue: MAC is used\r\nFalse: eid needs to be configured manually by DoIpInstantiation.eid.",
    "This attribute defines, whether support for event displacement is enabled or not, and which displacement strategy is followed.",
    "This attribute defines, whether the aging and displacement mechanism shall be applied to the \"TestFailedSinceLastClear\" status bits.",
    "This attribute defines, whether the aging and displacement mechanism shall be applied to the \"TestFailedSinceLastClear\" status bits.\r\n\r\n'''begin restrict to AP'''\r\nOn the adaptive platform, the value of this attribute can be different for each DiagnosticMemoryDestination.\r\n'''begin restrict to AP'''\r\n'''begin restrict to CP'''\r\nOn the classic platform, the value of this attribute has to be identical for each DiagnosticMemoryDestination.\r\n'''begin restrict to CP'''",
    "This attribute defines, whether the confirmed bit is reset or not while an event memory entry will be displaced.",
    "This attribute defines, whether the pending bit is reset or not while an event memory entry will be displaced. In order to be compliant to ISO 14229-1 [1], this parameter needs to be set to \"false\".",
    "This attribute denotes if the current ReferenceBase is the default. Note that there can only be one default reference base within a package.",
    "This attribute denotes the level of security which is touched by the diagnostic object. The higher the level the more relevance for the security exists.\r\n\r\nThis level shall be mapped to the security level in the ECU.",
    "This attribute denotes the maximum block size (unit: bytes) used in the UCM implementation.",
    "This attribute denotes the semantics in particular in terms of the corresponding A2L-Keyword. This is to support the mapping of the more general record layouts in AUTOSAR/MSR to the specific A2l keywords. \r\n\r\nIt is possible to express the specific semantics of A2l recordlayout keywords in swRecordlayoutGroup but not always vice versa. Therefore the mapping is provided in this optional attribute.",
    "This attribute denotes the semantics in particular in terms of the corresponding A2L-Keyword. This is to support the mapping of the more general record layouts in AUTOSAR/MSR to the specific A2l keywords. It is possible to express the specifc semantics of A2l recordlayout keywords in swRecordlayoutGroup but not always vice versa. Therefore the mapping is provided in this optional attribute.",
    "This attribute denotes the semantics in particular in terms of the corresponding A2L-Keyword. This is to support the mapping of the more general record layouts in AUTOSAR/MSR to the specific A2l keywords. It is possible to express the specific semantics of A2l RecordLayout keywords in swRecordlayoutGroup but not always vice versa. Therefore the mapping is provided in this optional attribute.",
    "This attribute denotes whether the SoftwarePackage is only able to update but not for initial installation.",
    "This attribute describes how a the specific cryptographic key is created.",
    "This attribute describes the IP V4 address of the remote server.",
    "This attribute describes the IP V6 address of the remote server.",
    "This attribute describes the TCP port used for the raw data streaming.",
    "This attribute describes the UDP Port used for multicast raw data stream transmission.",
    "This attribute describes the UDP Port used for the raw data streaming.",
    "This attribute describes the affection of the event by the Dem PTO handling. \r\n\r\ntrue: the event is affected by the Dem PTO handling.\r\n\r\nfalse: the event is not affected by the Dem PTO handling.",
    "This attribute describes the alignment of the memory object in bits. E.g. \"8\" specifies, that the object in question is aligned to a byte while \"32\" specifies that it is aligned four byte. If the value is set to \"0\" the meaning shall be interpreted as \"unspecified\".",
    "This attribute describes the bitposition of a Pdu within a Frame. \r\n\r\nPlease note that the absolute position of the Pdu in the Frame is determined by the definition of the packingByteOrder attribute. If Big Endian is specified, the start position indicates the bit position of the most significant bit in the Frame. If Little Endian is specified, the start position indicates the bit position of the least significant bit in the Frame. The bit counting in byte 0 starts with bit 0 (least significant bit). The most significant bit in byte 0 is bit 7.\r\n\r\nThe Pdus are byte aligned in a Frame and only the values  0, 8, 16, 24,... (for little endian) and  7, 15, 23, ... (for big endian) are allowed.",
    "This attribute describes the buildType of a module and/or platform implementation.",
    "This attribute describes the category of a constraint. One of its functions is in the area of constraint violation, where it can be used from a certain level, to produce error messages.\r\n\r\nThe lower the level, the more stringent the check. \r\n\r\nUsed to distinguish hard or soft limits.",
    "This attribute describes the declaration of such a base type in the native programming language, primarily in the Programming language C. This can then be used by a code generator to include the necessary declarations into a header file. For example\r\n\r\nBaseType with\r\n   shortName: \"MyUnsignedInt\"\r\n   nativeDeclaration: \"unsigned short\"\r\n\r\nResults in\r\n\r\n  typedef unsigned short MyUnsignedInt;\r\n\r\nIf the attribute is not defined the referring ImplementationDataTypes will not be generated as a typedef by RTE.\r\n\r\nIf a nativeDeclaration type is given it shall fulfill the characteristic given by basetypeEncoding and baseTypeSize.\r\n\r\nThis is required to ensure the consistent handling and interpretation by software components, RTE, COM and MCM systems.",
    "This attribute describes the declaration of such a base type in the native programming language, primarliy in the Programming language C. This can then be used by a code generator to include the necessary delcations into a header file. For example\r\n\r\nBaseType with\r\n   shortName: \"MyUnsignedInt\"\r\n   nativeDeclaration: \"unsigned short\"\r\n\r\nResults in\r\n\r\ntypedef unsigned short MyUnsignedInt;\r\n\r\nIf the attribute is not defined the referring ImplementationDataTypes will not be generated as a typedef by RTE.\r\n\r\nIf a nativeDeclaration type is given it shall fulfill the characteristic given\r\nby basetypeEncoding and baseTypeSize. This is required to ensure the consistent handling and interpretation by software components, RTE, COM and MCM systems.",
    "This attribute describes the direction of the mapping.",
    "This attribute describes the function of the pin (e.g. CLK for Clock).",
    "This attribute describes the hard deadline when an IPsec SA becomes invalid in percentage. \r\n\r\nExample: saOverTime * saRekeyTime. \r\n\r\nDefault: 110%",
    "This attribute describes the hard deadline when an SA becomes invalid in percentage. \r\n\r\nExample: ikeOverTime of max(ikeReauthTime, ikeRekeyTime). \r\n\r\nDefault: 10 %",
    "This attribute describes the inclusion mode that is used to include the implicit Data ID in the one-byte CRC.",
    "This attribute describes the inclusion mode that is used to include the implicit two-byte Data ID in the one-byte CRC.",
    "This attribute describes the interval to check the liveness of a peer actively using IKEv2 INFORMATIONAL exchanges. Active DPD checking is only enforced if no IKE or ESP/AH packet has been received for the configured DPD delay.\r\n\r\nIn not configured the value \"5 minutes\" shall be assumed.",
    "This attribute describes the kind of values to be stored. More details see below.",
    "This attribute describes the kind of values to be stored. More details see below. The standardized values foreseen for this attribute are defined in [TPS_SWCT_01489].",
    "This attribute describes the length in bytes of one SOME/IP segment into which the Method Call Message will be divided. \r\nThis length field includes 8 bytes for the Request ID, Protocol Version, Interface Version, Message Type and Return Code and 4 additional SOME/IP TP bytes.\r\n\r\nIf this attribute is set to a value and the data length is larger than maximumSegmentLengthRequest then the corresponding SOME/IP message will be segmented into smaller parts that are transmitted over the network.",
    "This attribute describes the length in bytes of one SOME/IP segment into which the Method Return Message will be divided. \r\nThis length field includes 8 bytes for the Request ID, Protocol Version, Interface Version, Message Type and Return Code and 4 additional SOME/IP TP bytes.\r\n\r\nIf this attribute is set to a value and the data length is larger than maximumSegmentLengthResponse then the corresponding SOME/IP message will be segmented into smaller parts that are transmitted over the network.",
    "This attribute describes the length in bytes of the SOME/IP segment. This includes 8 bytes for the Request ID, Protocol Version, Interface Version, Message Type and Return Code and 4 additional SOME/IP TP bytes.\r\n\r\nIf this attribute is set to a value and the data length is larger than \r\nmaximumSegmentLength then the corresponding SOME/IP message will be segmented into smaller parts that are transmitted over the network.",
    "This attribute describes the length of the CRC/Hash in the unit bits.",
    "This attribute describes the length of the cryptographic key in bits.",
    "This attribute describes the location of the artifact.",
    "This attribute describes the lower limit of the property's value.",
    "This attribute describes the maximum allowed absolute value of the rate deviation value [unit: ppm].",
    "This attribute describes the maximum updates that are allowed to the slot.",
    "This attribute describes the message Type",
    "This attribute describes the minimum timer resolution (TimeValue of one tick) that is required by the Executable.",
    "This attribute describes the number of upper-header bits to be shifted.\r\n\r\nvalue = 0 or not present: shift of upper header is NOT performed.\r\n\r\nvalue > 0: the E2E Transformer on the protect-side, takes the first upperHeaderBitsToShift bits from the upper buffer (e.g. SOME/IP header part generated by SOME/IP transformer) and shifts them towards the lower bytes and bits within the Data[] for the length of the E2E header (e.g. 12 bytes in case of E2E Profile 4). This means the shift distance is fixed - it depends on the E2E header size - what is configured here is the number of bits that are to be shifted. This option is defined because the Some/IP header generated by SOME/IP transformer shall be, due to compatibility between non-protected and E2E-protected communication, at the same position, which is before E2E header.",
    "This attribute describes the period in which the applications are assumed to process E2E-protected messages. The middleware does not use this attribute at all.",
    "This attribute describes the period in which the applications are assumed to transmit the respective data.",
    "This attribute describes the port number of the port used for TCP communication.",
    "This attribute describes the port number of the port used for UDP communication.",
    "This attribute describes the position in the source file in which this log message was called.",
    "This attribute describes the size of the length field (in Bytes) that will be put in front of a Structure in the SOME/IP message.",
    "This attribute describes the size of the length field (in Bytes) that will be put in front of a Union in the SOME/IP message.",
    "This attribute describes the size of the length field (in Bytes) that will be put in front of the referenced Array in the SOME/IP message.",
    "This attribute describes the size of the length field (in Bytes) that will be put in front of the referenced String in the SOME/IP message.",
    "This attribute describes the source file in which this log message was called.",
    "This attribute describes the supported timer granularity (TimeValue of one tick).",
    "This attribute describes the timeout for the situation that the time synchronization gets lost in the scope of the time domain.",
    "This attribute describes the upper limit of the property's value.",
    "This attribute describes where the enclosing cryptographic key shall be stored. AUTOSAR reserves specific values for this attributes but it is possible to insert custom values as well.",
    "This attribute describes whether a part of AuthenticPdu contained in a SecuredIPdu shall be passed on to the SWC that verifies and generates the Freshness. The part of the Authentic-PDU is defined by the authDataFreshnessStartPosition and authDataFreshnessLength.",
    "This attribute describes whether the CAN FD option is activated or not. If this attribute is TRUE this frame can be sent/received as CAN FD frame. Otherwise it has to be CAN 2.0 compliant.",
    "This attribute describes whether the Prestorage of FreezeFrames is supported by the assigned event or not.\r\n\r\ntrue: Prestorage of FreezeFrames is supported\r\n\r\nfFalse:  Prestorage of FreezeFrames is not supported",
    "This attribute describes whether the executable is preloaded into the memory.",
    "This attribute describes whether the key content type can be changed (true) or not (false), e.g. changing the key from symmetric to RSA.",
    "This attribute describes whether the key slot content is allowed to be exported or not.",
    "This attribute determines if dedicated or exclusive mapping is used.",
    "This attribute determines in which direction IPdus that are contained in this IPduGroup will be transmitted (communication direction can be either In or Out).",
    "This attribute determines the length of the MetaDataItem at run-time.",
    "This attribute determines the point in time, when the data actually is captured.",
    "This attribute determines the time when the notification about the DTC operation shall be executed. This attribute is only relevant for the configuration of the ClearDtcNotification.",
    "This attribute determines whether the capturing of environment data is done synchronously inside the report API function or whether the capturing shall be done asynchronously, i.e. after the report API function already terminated.",
    "This attribute determines which protocol is used by the client to obtain the IP Address information. \r\nIf this attribute is not set to none the value determines the service used by the client to obtain the IP Address information for the SocketConnection. If this attribute is set to none the client used the statically configured IP Address information.",
    "This attribute determines which protocol is used by the client to obtain the Port information. If this attribute is not set to none the value determines the service used by the client to obtain the Port information for the SocketConnection. If this attribute is set to none the client uses the statically configured Port information.",
    "This attribute determines, if the referenced port supports temporarily setting of I/O value to a specific value provided by the diagnostic tester.",
    "This attribute determines, if the referenced port supports temporary freezing of I/O value.",
    "This attribute enables (TRUE) or disables (FALSE) support of the ARP Packet Queue according to IETF RFC 1122, section 2.3.2.2.",
    "This attribute enables or disables transmission of ICMP echo reply message in case of a ICMP echo reception.",
    "This attribute enables the support of the Passive Mode.",
    "This attribute enables/disables Log&Trace for the communication on the referenced Port of the referenced process. \r\nTrue: Log&Trace is enabled.\r\nFalse: Log&Trace is disabled.",
    "This attribute fixes the maximum number of event entries in the fault memory.",
    "This attribute further specifies the DTC in terms of its semantics.",
    "This attribute gives a hint about how (in terms of the AUTOSAR workflow) the model element comes into existence.",
    "This attribute gives an indication about the storage that has to be available on the target.",
    "This attribute gives the index of the axis of which values that are stored in the record. swRecordVIndex refers to the symbolic names of the iterators for which the axis value shall be stored in the record. \r\n\r\nIn case of nested iterators (mainly for multidimensional objects) the iterator names are specified as whitespace-separated names. \r\n\r\nThese symbolic names relate to swRecordLayoutGroupIndex. The iterators are processed from left to right in such a manner that they symbolize the loop index from the outside to the inside. \r\n\r\nIt is considered an error if more components are specified than axes exist in the related ApplicationDataType.",
    "This attribute governs the action to be taken after the installation of the SoftwareCluster completed.",
    "This attribute has the ability to control whether the node configuration command 'Assign NAD' is supported.",
    "This attribute has the ability to decide whether the node configuration command 'Save Configuration' is supported.",
    "This attribute has the ability to specify the error code value within the enclosing AdaptivePlatformApplicationError.",
    "This attribute has the status \"removed\" and shall not be used any longer.\r\n\r\nOld description:\r\nThis parameter is only relevant when having retry activated. It limits the maximal buffer size the FrTp can choose in order to limit the amount of Tx buffer that will be requested at the sender side in a segmented transfer. Unit: byte.",
    "This attribute has the status \"removed\" and shall not be used any longer. \r\n\r\nOld description:\r\nChannel identification number of the corresponding channel. Must be unique over all NmClusters.",
    "This attribute holds filename part of the storage location for the PersistencyFile, e.g. file on the file system.",
    "This attribute holds filename part of the storage location for the PersistencyFileProxy, e.g. file on the file system.",
    "This attribute holds the DoIP logical address.",
    "This attribute holds the absolute path to the represented file on the file system.",
    "This attribute holds the filename part of the storage location, e.g. file on the file system.",
    "This attribute holds the storage location for the PersistencyFileArray, e.g. a directory on the file system.",
    "This attribute holds the storage location for the PersistencyFileStorage, e.g. a directory on the file system.",
    "This attribute holds the storage location for the PersistencyKeyValueDatabase / PersistencyFile, e.g. file on the file system.",
    "This attribute holds the storage location for the PersistencyKeyValueStorage, e.g. file on the file system.",
    "This attribute holds the storage location for the concrete subclass of PersistencyDeployment, e.g. file on the file system.",
    "This attribute identifies Id of the organization that provides the packager generating the SoftwarePackage.",
    "This attribute identifies a Port of an Application executed in a process for tracing (ContextId).",
    "This attribute identifies a central place for the mapped Process to store the list of available storages and version information.",
    "This attribute identifies the Channel for usage within the Log And Trace protocol.",
    "This attribute identifies the DDS Domain the Client application shall join.",
    "This attribute identifies the DDS Domain the Service Instance shall join.",
    "This attribute identifies the LogChannel for usage within the Log And Trace protocol.",
    "This attribute identifies the SW-C/BSW module in the log and trace message.",
    "This attribute identifies the algorithm family that is used to execute the CRC/Hash.",
    "This attribute identifies the applicable bit mask on the side of the Nv Block.",
    "This attribute identifies the applicable bit mask on the side of the PortPrototype.",
    "This attribute identifies the configuration of prepare rollback retries initiated by the Ucm Subordinate.",
    "This attribute identifies the configuration of prepare update retries initiated by the Ucm Subordinate.",
    "This attribute identifies the configuration of verify update retries initiated by the Ucm Subordinate.",
    "This attribute identifies the contract version in which the previousDataType was used.",
    "This attribute identifies the error category.",
    "This attribute identifies the maximum supported version of the UCM Master for this VehiclePackage.",
    "This attribute identifies the maximum supported version of the UCM for this SoftwarePackage.",
    "This attribute identifies the minimum supported version of the UCM Master for this VehiclePackage.",
    "This attribute identifies the minimum supported version of the UCM for this SoftwarePackage.",
    "This attribute identifies the origin of the annotation. It is an arbitrary string since it can be an individual's name as well as the name of a tool or even the name of a process step.",
    "This attribute identifies the priority of the cipher suite. Range: 1..65535. Lower values represent higher priorities.",
    "This attribute identifies the process in the log and trace message (ApplicationId).",
    "This attribute identifies the repository where the VehiclePackage is stored.",
    "This attribute identifies the semantics of the compare operator.",
    "This attribute identifies the software package at configuration time, out of the context of an AUTOSAR model.",
    "This attribute identifies the version of the Executable in which the previousDataType was used.",
    "This attribute identifies the version of the included SoftwareCluster for which the enclosing SoftwarePackage can be used as a delta update",
    "This attribute indicates (if set to true) that the upper multiplicity is set to \"infinite\".",
    "This attribute indicates that Strings in the SOME/IP\r\nmessage shall NOT be serialized according to the SOME/IP\r\nspecification for Strings.\r\n\r\nIf this attribute is set to true, BOM and null-termination shall NOT be added in the serialization for Strings in the payload.\r\nIf this attribute is set to false (or not set) BOM and null-termination shall be added in the serialization for Strings in the payload according to the SOME/IP specification for Strings.\r\n\r\nNOTE! This attribute is not future safe, and will be removed in an upcoming AUTOSAR release!\"",
    "This attribute indicates that Strings in the SOME/IP\r\nmessage shall NOT be serialized according to the SOME/IP specification for Strings. \r\n\r\nIf this attribute is set to true, BOM and null-termination shall NOT be added in the serialization for Strings in the payload.\r\n\r\nIf this attribute is set to false (or not set)  BOM and null-termination shall be added in the serialization for Strings in the payload according to the SOME/IP specification for Strings.\r\n\r\nNOTE! This attribute is not future safe, and will be removed in an upcoming AUTOSAR release!",
    "This attribute indicates that the CppImplementationDataType shall be considered a variadic template.",
    "This attribute indicates that the enclosing DiagnosticParameterElement represents an array and configures the array size in terms of the number of elements of the array.",
    "This attribute indicates that the implementation of the enclosing Executable is required to access resources provided by the synchronized time base functional cluster.",
    "This attribute indicates the applicable denominator condition.",
    "This attribute indicates the file type which shall used for the engineering object. Note that an engineering object may deliver multiple representations of the same artifact. This attribute can select one of the provided representations.",
    "This attribute indicates the intended logging behavior of the enclosing Executable.",
    "This attribute indicates the kind of the diagnostic event according to the SWS Diagnostic Event Manger for which the DiagnosticInfo is requested.\r\n\r\nThis attribute applies for the UDS diagnostics use case.",
    "This attribute indicates the kind of the diagnostic monitor according to the SWS Diagnostic Event Manger. \r\n\r\nThis attribute applies for the UDS diagnostics use case.",
    "This attribute indicates the minimum time of the stand-by sequence the server will remain in the power-down sequence. The unit is seconds.",
    "This attribute indicates the role the NM Coordinator will have on this channel.",
    "This attribute indicates the settings for the acceptance of updates to the Dem.",
    "This attribute indicates the size in bytes of the DiagnosticDataIdentifier.",
    "This attribute indicates to the connected SensorActuatorSwComponentType whether the VariableDataPrototype can be used to generate pulse test sequences using the IoHwAbstraction layer",
    "This attribute indicates whether Strings in the SOME/IP message shall be processed according to the SOME/IP specification for Strings. This attribute has been introduced due to compatibility reasons for AUTOSAR before R4.3. If this attribute is set to true Strings in the payload shall be handled according to the SOME/IP specification on Strings.\r\nIf this attribute is set to false (or not set) no special handling for Strings in the payload shall be performed.",
    "This attribute indicates whether the ComponentClustering mapping constraint applies to different ECUs, partitions or cores. If this attribute is not specified then mappingScopeEcu shall be assumed.",
    "This attribute indicates whether the ComponentSeparation mapping constraint applies to different ECUs, partitions or cores. If this attribute is not specified then mappingScopeEcu shall be assumed.",
    "This attribute indicates whether the ECU makes any contribution to the OBD.",
    "This attribute indicates whether the connection of the enclosing BinaryManifestResource is mandatory.",
    "This attribute indicates whether the elements of a collection of the enclosing model element carry an index value to allow for the identification of order. \r\n\r\nIn other words, the order is not established on the syntactical level by the appearance in the ARXML files but on a semantic level by evaluating the value of the index attribute.",
    "This attribute indicates whether the enclosing BinaryManifestResource supports multiple notifiers sets.",
    "This attribute indicates whether the enclosing role is considered a default role.",
    "This attribute indicates which service of the NvM for the NvBlock shall be requested.",
    "This attribute indicates, that the resource is mandatory to operate the Software Cluster.\r\nIf the resource is not provided on the machine the connection process of any Software Cluster requiring this resource gets aborted.",
    "This attribute introduces the ability to specify further intended properties of the MemorySection in with the related objects shall be placed. \r\n\r\nThese properties are handled as to be selected. The intended options are mentioned in the list. \r\n\r\nIn the Memory Mapping configuration, this option list is used to determine an appropriate MemMapAddressingModeSet.",
    "This attribute is applicable only if the DiagnosticValueNeeds is aggregated within a BswModuleDependency.\r\n\r\nThis attribute controls whether the data can be read and written or whether it is to be handled read-only.",
    "This attribute is applicable only if the DiagnosticValueNeeds is aggregated within a BswModuleDependency.\r\n\r\nThis attribute controls whether the data length of the data is fixed.",
    "This attribute is applicable only if the DiagnosticValueNeeds is aggregated within a BswModuleDependency.\r\n\r\nThis attribute represents the length of data (in bytes) provided for this particular PID signal.",
    "This attribute is applicable only if the ServiceNeeds is aggregated within BswModuleDependency.\r\n\r\nThis attribute represents the length of data (in bytes) provided for this InfoType.",
    "This attribute is applicable only if the ServiceNeeds is aggregated within BswModuleDependency.\r\n\r\nThis attribute represents the length of data (in bytes) provided for this particular PID signal.",
    "This attribute is deprecated and is replaced by the attribute \"baudrate\". \r\n\r\nOld description: Channels speed in kbps.",
    "This attribute is deprecated and will be removed in future.",
    "This attribute is deprecated and will be removed in future.\r\nnmReadySleepTime in the FlexrayCommunicationConnector shall be used instead to influence the shutdown behavior of the FlexRay Nm.\r\n\r\nOld description:\r\nNumbers of repetitions in the ready sleep state before NM switches to bus sleep mode. On a value of \"1\", the NM-State Machine will leave the Ready Sleep State after one NM Repetition Cycle with no \"keep awake\" votes.",
    "This attribute is deprecated and will be removed in future. It is replaced by EthernetCommunicationConnector.maximumTransmissionUnit.\r\n\r\nOld description:\r\nThis attribute specifies the maximum transmission unit in bytes.",
    "This attribute is deprecated and will be removed in future. It is replaced by the aggregated ApplicationEndpoint.",
    "This attribute is deprecated and will be removed in future. It is replaced by the aggregated NetworkEndpoint.",
    "This attribute is intended to specify the context under which the AclPemission is applicable. The values are subject to mutual agreement between the involved stakeholders.\r\n\r\nFor examples the values can be the names of binding times.",
    "This attribute is only relevant in case that ICMP (Internet Control Message Protocol) is used. It specifies the default Time-to-live value of outgoing ICMP packets.",
    "This attribute is only used on the client side of the configuration for the purpose of stating the accepted compression algorithm.",
    "This attribute is only valid if the attribute category is set to STRUCTURE.\r\n\r\nIf set to true, this attribute indicates that the ImplementationDataType has been created with the intention to define at least one element of the structure as optional.",
    "This attribute is removed and left in for backward compatibility. Use bgcolor instead.",
    "This attribute is responsible for clarifying the validity of the accessPermission reference.",
    "This attribute is used to configure for which minor version of the SomeIp ServiceInterface the Service Discovery will search.\r\nValue can be set to a number that represents the Minor Version of the searched service or to ANY.",
    "This attribute is used to configure the MACsec replay protection.",
    "This attribute is used to configure the notification state.",
    "This attribute is used to control the existence of the V2X stack on the given EcuInstance.",
    "This attribute is used to control the generation of function prototypes. If set to \"RTE\", the RTE generates the  function prototypes in the Module Interlink Header File.",
    "This attribute is used to control which part of the AUTOSAR toolchain is supposed to trigger data type definitions.",
    "This attribute is used to declare native qualifiers of the programming language which can neither be deduced from the baseType (e.g. because the data object describes a pointer) nor from other more abstract attributes. Examples are qualifiers like \"volatile\", \"strict\" or \"enum\" of the C-language. All such declarations have to be put into one string.",
    "This attribute is used to define EtherTypes that are bypassed by MACsec.\r\nThe providedEtherType will not be MACsec protected.",
    "This attribute is used to define VLAN-IDs that are bypassed by MACsec.\r\nThe provided VLAN-IDs will not be MACsec protected. (VLAN-ID 0 is interpreted as no-VLAN --> Bypass untagged traffic)",
    "This attribute is used to define the identifier the CAN NM frame shall use on the CAN network.",
    "This attribute is used to define the identifier this frame shall use on the CAN network.",
    "This attribute is used to define the maximum allowed deviation in seconds from the expected timestamp for which a SecuredIPdu is still deemed authentic. \r\nPlease note that this attribute is for documentation only to allow the configuration of required freshness value manager and no upstream mapping is defined for it.",
    "This attribute is used to denote the component to which the group in question applies. Thus, the record layout supports structured objects. \r\n\r\nThis secures independence from the sequence of components, because they can be referred to via name.",
    "This attribute is used to describe specific mapping scenarios, e.g. the mappings:\r\n* AR_AbstractSystemDescription_SystemDescription\r\n* AR_SystemDescription_SystemExtract",
    "This attribute is used to describe the position of the RteEvent in the OsTask as a relative value, i.e. the values show only the relative position of the RteEvent in the OsTask.",
    "This attribute is used to describe the position of the appTaskProxy in an ecuTaskProxy as a relative value, i.e. the values show only the relative position of the appTaskProxy in the ecuTaskProxy.",
    "This attribute is used to distinguish between SWC and BSW events.",
    "This attribute is used to distinguish the optional support of the Max data size element of a diagnostic entity status response.",
    "This attribute is used to enable anycast addressing (i.e. to one of multiple receivers).",
    "This attribute is used to group log and trace messages produced by a SW-C/BSW modules to distinguish functionality (representing e.g. a library of the adaptive foundation linked into the application).",
    "This attribute is used to group log and trace messages produced by an application to distinguish functionality.",
    "This attribute is used to identify (if applicable) the corresponding severity class of an WWH-OBD DTC.",
    "This attribute is used to identify the actual DMx message, e.g 1 means DM01, etc.",
    "This attribute is used to identify the name of the BSW module in whose executional context a security event can occur. The set of BSW module names is standardized by AUTOSAR.",
    "This attribute is used to identify the name of the application in whose executional context a security event can occur. This application can be, for example, a name of a Software Component (for CP) or a Software Cluster name (for AP).",
    "This attribute is used to identify the name of the functional cluster in whose executional context a security event can occur. The set of functional cluster names is standardized by AUTOSAR.",
    "This attribute is used to indicate the intended buffer locking behavior.",
    "This attribute is used to indicate what kind of filtering/debouncing has been put to the signal in the IoHwAbstraction layer. \r\n\r\nrawData means that no modification of the signal has been applied. This is the default value\r\ndebounceData means that the signal is a mean value\r\nwaitTimeData means that the signal is delivered by a GET operation after a certain amount of time",
    "This attribute is used to order the elements and allows an assignment of Pids to\r\nConfigurableFrames that are defined in the slave.",
    "This attribute is used to order the frame_PIDs. The values of index shall be unique within one AssignFrameIdRange.",
    "This attribute is used to provide a source identification in the context of reporting security events..",
    "This attribute is used to refer to external events that are related to hardware I/O, like physical sensors and actuators, at Virtual Functional Bus (VFB) level.",
    "This attribute is used to specify the component qualifier for the usage in an SOVD query.",
    "This attribute is used to specify the dimensions of a value block (VAL_BLK) for the case that that value block has more than one dimension. \r\n\r\nThe dimensions given in this attribute are ordered such that the first entry represents the first dimension, the second entry represents the second dimension, and so on. \r\n\r\nFor one-dimensional value blocks the attribute swValueBlockSize shall be used and this attribute shall not exist.",
    "This attribute is used to specify the intention of the developer of the enclosing software-component in terms of whether the respective PortPrototype shall be use to search for a specific service instance or all instances of the given service.\r\n\r\nPlease note that the value of this attribute does not create a binding contract. The actual search behavior is defined as part of the service instance manifest.",
    "This attribute is used to specify the priority in the load balancing option of SOME/IP that is added to the OfferService.\r\n\r\nWhen a client searches for all service instances of a service, the client shall choose the service instance with highest priority if one is defined.",
    "This attribute is used to specify the role (if applicable) in which the DiagnosticEcuInstance supports OBD.",
    "This attribute is used to specify the search behavior.",
    "This attribute is used to specify the weight in the load balancing option of SOME/IP that is added to the OfferService.\r\n\r\nWhen a client searches for all service instances of a service, the client shall choose the service instance with highest priority if one is defined. If several service instances exist with the highest priority the service instance shall be chosen based on the weights of the service instances.",
    "This attribute may only be used for the definition of custom services. The values shall not overlap with existing standardized service IDs.",
    "This attribute names the maximum amount of space available for persistent data handled by the Persistency of installed packages. The UCM needs to figure out from traversing the minimum storage requirement from existing PersistencyDeployments whether specific packages can be installed from the perspective of available storage space. \r\n\r\nNote that the minimum storage requirement of PersistencyDeployment needs to include space for the handling of the storage, which shall be calculated by the tooling that creates the manifest information inside the package.",
    "This attribute offers the possibility to provide additional information with respect to the mapping.",
    "This attribute provides  the information whether the definition of the configuration element is standardized by AUTOSAR or whether it represents a vendor-specific configuration element.",
    "This attribute provides a categorization of the bulk data.",
    "This attribute provides a code label which is used in the implementation of the hook.\r\nFor example this can be an C function name or the name of data definition.",
    "This attribute provides an estimation about how long the campaign based on the VehiclePackage is going to take.",
    "This attribute provides an estimation about how long the operation of the SoftwarePackage is going to take for its transfer, processing and activation when updated standalone (not within an update campaign)",
    "This attribute provides an identifier which shall be used in a MCD System to display the Rpt Hook.",
    "This attribute provides an upper limit for the number of notifiers for this resource.",
    "This attribute provides further details about the nature of the applied service.",
    "This attribute provides options for the configuration of the reaction to a violated safety condition.",
    "This attribute provides the ability to control the mode in which the application software is notified about the result of authentication attempts.",
    "This attribute provides the ability to define a timeout value for a method call.",
    "This attribute provides the ability to further specify the access to the ServiceInterface.field from a design perspective.",
    "This attribute provides the ability to further specify the access to the ServiceInterface.field.",
    "This attribute provides the ability to specify the size of the enclosing BinaryManifestResourceDefinition.",
    "This attribute provides the identity hint for a pre-shared key.",
    "This attribute provides the information how long (in seconds) the Security Association (SA) defined by this IPSecRule shall be used.",
    "This attribute provides the key identification.",
    "This attribute reflects how far the referenced objects are part of the collection.",
    "This attribute represent the description of the family of the applicable crypto algorithm.",
    "This attribute represents a collection of diagnostic properties that are shared among the entire DiagnosticContributionSet.",
    "This attribute represents a description of the family (e.g. AES) of crypto algorithm implemented by the crypto primitive.",
    "This attribute represents a description of the family (e.g. AES) of crypto algorithm implemented by the crypto service use case.",
    "This attribute represents a description of the family of crypto algorithm used to generate public key and signature of the cryptographic certificate.",
    "This attribute represents a description of the mode of the crypto algorithm implemented by the crypto primitive.",
    "This attribute represents a fixed compare value taken to evaluate the compare condition.\r\nThis aggregation contains a variation point although it is not variant. Therefore, this variation point shall not exist in models. See constr_2638.",
    "This attribute represents a further description of the secondary family of crypto algorithm implemented by the crypto primitive. \r\n\r\nThe secondary family is needed for the specification of the hash algorithm for a signature check, e.g. using RSA.",
    "This attribute represents a list of textual safety conditions (e.g.: close the driver window) that need to be fulfilled before the rollout step can proceed and need to be maintained while the campaign's rolloutQualification is executed.",
    "This attribute represents a meta-class for which the global referencing is supported via this reference base.",
    "This attribute represents a numerical value assigned to the specific core. The value can be taken e.g. for use in a bitmask.",
    "This attribute represents a requirement towards the redundancy of storage.",
    "This attribute represents a textual identification of the target platform.",
    "This attribute represents a unique numerical identifier identifying the source of a certain transmission. In case of C/S communication, this ID uniquely identifies the client.\r\n\r\nNote: ID is used for protection against masquerading. The details concerning the maximum number of values (this information is specific for each E2E profile) applicable for this attribute are controlled by a semantic constraint that depends on the category of the EndToEndProtection.",
    "This attribute represents a version information. Please note that the structure of the version information is not restricted by the ASAM SOVD standard and therefore the structure of the content of this attribute cannot be constrained further in the scope of AUTOSAR.",
    "This attribute represents the \"M\" coordinate in the \"M out  of N\" scheme.",
    "This attribute represents the \"N\" coordinate in the \"M out  of N\" scheme.",
    "This attribute represents the CommunicationConnector taken for socket-based data communication.",
    "This attribute represents the IPv4 address for the case that IPv4 is used for communication between the SOVD gateway and a client.",
    "This attribute represents the IPv6 address for the case that IPv6 is used for communication between the SOVD gateway and a client.",
    "This attribute represents the URI of the artifact on which the checksum shall be computed.",
    "This attribute represents the URI that identifies the initial content of the PersistencyFile.",
    "This attribute represents the Unique Diagnostic Trouble Code value for J1939 (consisting of SPN and FMI).",
    "This attribute represents the ability to add further attributes to the definition of a specific sub-node channel that is subject to the diagnostic service \"communication control\".",
    "This attribute represents the ability to assign a value to an enumerator.",
    "This attribute represents the ability to control the setting of the wire type for TLV encoding. \r\n\r\nIf the attribute is set to true then wire type 5-7 shall be used. \r\n\r\nIf the attribute does not exist or is set to false then wire type 4 shall be used.",
    "This attribute represents the ability to declare the enclosing ApplicationRecordElement as optional. This means the that, at runtime, the ApplicationRecordElement may or may not have a valid value and shall therefore be ignored. \r\n\r\nThe underlying runtime software provides means to set the ApplicationRecordElement as not valid at the sending end of a communication and determine its validity at the receiving end.",
    "This attribute represents the ability to declare the enclosing CppImplementationDataTypeElement as optional. This means the that, at runtime, the CppImplementationDataTypeElement may or may not have a valid value and shall therefore be ignored. \r\n\r\nThe underlying runtime software provides means to set the CppImplementationDataTypeElement as not valid at the sending end of a communication and determine its validity at the receiving end.",
    "This attribute represents the ability to declare the enclosing ImplementationDataTypeElement as optional. This means that, at runtime, the ImplementationDataTypeElement may or may not have a valid value and shall therefore be ignored.\r\n\r\nThe underlying runtime software provides means to set the CppImplementationDataTypeElement as not valid at the sending end of a communication and determine its validity at the receiving end.",
    "This attribute represents the ability to define a role for the reference to another element.",
    "This attribute represents the ability to define a status mask for the triggering of an ROE response on the change of a DTC.",
    "This attribute represents the ability to define the maximum length of the certificate in bytes.",
    "This attribute represents the ability to define the scheduling policy for the initial thread of the application.",
    "This attribute represents the ability to define the time in seconds the service find is valid.  \r\nNote! The TTL value for FindService entries is not used and shall be ignored by the server service.  This configuration is only kept for backward compatibility. Default value if not specified shall be 0xFFFFFF.",
    "This attribute represents the ability to define whether this diagnostic session allows to jump to Bootloader (OEM Bootloader or System Supplier Bootloader). \r\n\r\nIf this diagnostic session doesn't allow to jump to Bootloader the value JumpToBootLoaderEnum.noBoot shall be chosen.",
    "This attribute represents the ability to define which bit of the support info byte is representing this part of the PID.",
    "This attribute represents the ability to describe the SOME/IP service ID that is offered.",
    "This attribute represents the ability to describe the SOME/IP service ID that is searched.",
    "This attribute represents the ability to describe the required service instance ID.",
    "This attribute represents the ability to provide a numerical value. The latest binding time of the VariationPoint shall be preCompileTime.",
    "This attribute represents the ability to provide a textual value.",
    "This attribute represents the ability to specify a TLV data-id for the serialization of a specific DataPrototype in the context of a (potentially deeply-nested) composite  data structure for the case that the data structure has optional elements.\r\n\r\nThis value does not represent the entire value of the tag, e.g. the wire-type is not included (because it can be derived from the information about the underlying AutosarDataType).",
    "This attribute represents the ability to specify a UDP or TCP Port number.",
    "This attribute represents the ability to specify a tag-id for the serialization of a specific DataPrototype in the context of a (potentially deeply-nested) composite  data structure.",
    "This attribute represents the ability to specify non-formal socket options that might only be valid for specific platforms. AUTOSAR does not define a standardized meaning for the possible values of this attribute.",
    "This attribute represents the ability to specify the algorithm family of the crypto need.",
    "This attribute represents the ability to specify the algorithm family of the crypto primitive.",
    "This attribute represents the ability to specify the algorithm family of the key slot.",
    "This attribute represents the ability to specify the algorithm mode of the crypto primitive.",
    "This attribute represents the ability to specify the length in bits of the key slot.",
    "This attribute represents the ability to specify the length in bits on which the crypto primitive is operating.",
    "This attribute represents the address value of the enclosing pointer value.",
    "This attribute represents the alias name. It is modeled as string because the alias name is used outside of AUTOSAR and therefore no naming conventions can be applied within AUTOSAR.",
    "This attribute represents the amount of time that the execution of the StateManagementActionItemList  is supposed to go to sleep.",
    "This attribute represents the applicable test identifier.",
    "This attribute represents the behavior of the Failure Mode Indicator.",
    "This attribute represents the bit number of the bit in the control mask record. Bit number 0 is the most significant bit (MSB) in the first byte of the CEMR in the network presentation.",
    "This attribute represents the category of the periodic rate.",
    "This attribute represents the collection of diagnostic addresses the SoftwareCluster occupies.",
    "This attribute represents the concrete NRC value that shall be returned if the condition fails.",
    "This attribute represents the concrete numerical identification for the enclosing SPN.",
    "This attribute represents the concrete operator (supported operators: and, or) of the condition formula.",
    "This attribute represents the configuration of a TCP port number.",
    "This attribute represents the configuration of a UDP port number.",
    "This attribute represents the configuration of the minimum time window in seconds for the aggregation filter.",
    "This attribute represents the configuration of the sampling filter, i.e. it configures the parameter \"n\" that controls how many events (n-1) shall be dropped after a sampled event until a new sample is created.",
    "This attribute represents the contract version that is used to determine whether the Persistency configuration experienced structural changes and is also used for the check for data type compatibility.",
    "This attribute represents the cycle time for execution of a DeterministicClient activation cycle.",
    "This attribute represents the definition of a chain of transformers that are supposed to be executed according to the order of being referenced from DataTransformation.",
    "This attribute represents the definition of an upper bound for the handling of files at run-time in the context of the enclosing FunctionalClusterInteractsWithPersistencyDeploymentMapping.",
    "This attribute represents the definition of an upper bound for the handling of files at run-time in the context of the enclosing PersistencyFileProxyInterface.",
    "This attribute represents the definition of an upper bound for the handling of files at run-time in the context of the enclosing PersistencyFileStorageInterface.",
    "This attribute represents the definition of the default value for the enclosing parameter. The default value applies if the parameter is instantiated on the \"value\" side without assigning a dedicated value to it.",
    "This attribute represents the definition of the persistency access of all kinds of persisted data at run-time in the context of the enclosing FunctionalClusterInteractsWithPersistencyDeploymentMapping.",
    "This attribute represents the definition of the value of the TlvDataId",
    "This attribute represents the description of the actual semantics of the corresponding evaluation ID.",
    "This attribute represents the description of the type of cryptographic object.",
    "This attribute represents the diagnostic event that is related to the diagnostic test result.",
    "This attribute represents the diagnostic event that is related to the diagnostic test result.\r\nThis property was modified due to atpVariation (DirectedAssociationPattern).",
    "This attribute represents the exponent of the physical dimension \"electric current\".",
    "This attribute represents the expressed capability of the client. The client may decide to claim that existing resources of a ServiceInterface are expressly not used by this specific client. The conceptual background of this claim may be driven by security, safety, etc.",
    "This attribute represents the expressed capability of the receiver. The receiver may decide to claim that existing resources of a ServiceInterface are expressly not used by this specific receiver. The conceptual background of this claim may be driven by security, safety, etc.",
    "This attribute represents the expressed capability of the sender. The sender may decide to claim that existing resources of a ServiceInterface are expressly not used by this specific sender. The conceptual background of this claim may be driven by security, safety, etc.",
    "This attribute represents the expressed intent of the client. The client may decide to claim that existing resources of a ServiceInterface are expressly not used by this specific client. The conceptual background of this claim may be driven by security, safety, etc.",
    "This attribute represents the expressed intent of the receiver. The receiver may decide to claim that existing resources of a ServiceInterface are expressly not used by this specific receiver. The conceptual background of this claim may be driven by security, safety, etc.",
    "This attribute represents the expressed intent of the sender. The sender may decide to claim that existing resources of a ServiceInterface are expressly not used by this specific sender. The conceptual background of this claim may be driven by security, safety, etc.",
    "This attribute represents the formula part of the DiagnosticEnvironmentalCondition.",
    "This attribute represents the identification number that is associated with the enclosing DiagnosticEvent and allows to identify it when placed into a snapshot record or extended data record storage. \r\n\r\nThis value can be reported as internal data element in snapshot records or extended data records.",
    "This attribute represents the identification of the underlying cryptographic algorithm.",
    "This attribute represents the index value of an element of a collection where the \"logical\" position of the element in the collection carries a dedicated semantics",
    "This attribute represents the initial NAD.",
    "This attribute represents the length of the Array representation of the Signal Group/VariableDataPrototype including CRC and Counter in bits.",
    "This attribute represents the local hostname of the SOVD server to be used during the execution of the DNS-SD protocol.",
    "This attribute represents the mask to apply to the source address of a client's request.",
    "This attribute represents the maximum number of allowed DIDs in a single instance of DiagnosticReadDataByIdentifier.",
    "This attribute represents the name of the file if it is created newly. Note that engineering object resolves category + ShortLabel indicate mainly to refer to an existing file. If the file is created newly, the filename can either be determined by built in policy or predefined here. \r\n\r\nNote that extensions shall part of file name even if it could be derived from fileType.",
    "This attribute represents the normalized runtime consumption on the target system within one DeterministicClient::WaitForActivation cycle, assuming the \"worst-case\" runtime where the workers would be executed sequentially.",
    "This attribute represents the number of determined accesses",
    "This attribute represents the number of deterministic clients that are connected to the deterministic sync master. this attribute represents the N in the M-out-of-N verification method.",
    "This attribute represents the numerical function id of the J1939 controller application.",
    "This attribute represents the numerical identification of the defined security event. The identification shall be unique within the scope of the IDS.",
    "This attribute represents the numerical identifier of a PhysicalChannel on system level scope.",
    "This attribute represents the numerical value used for the identification of the context data element.",
    "This attribute represents the pattern which shall be used to build the shortName of the derived elements. As of now it is modeled as a String.  In general it should follow the pattern:\r\n\r\n  pattern = (placeholder | namePart)*\r\n  placeholder = \"{\" namePart \"}\"\r\n  namePart = identifier | \"_\"\r\n\r\nThis is subject to be refined in subsequent versions.\r\n\r\nNote that this is marked as obsolete. Use the xml attribute namePattern instead as it applies to Identifier and CIdentifier (shortName, symbol etc.)",
    "This attribute represents the platform the element is assigned to.",
    "This attribute represents the platform the requirement is assigned to.",
    "This attribute represents the port number reserved for service discovery.",
    "This attribute represents the related diagnostic monitored identifier.",
    "This attribute represents the setting of the content (i.e. MIME) type of the bulk data. Please note that the number of supported content types is not restricted by the ASAM SOVD standard and therefore it is unfortunately not possible to constrain the possible settings of this attribute.",
    "This attribute represents the substitution value applicable in the case of a timeout.\r\nThis aggregation contains a variation point although it is not variant. Therefore, this variation point shall not exist in models. See constr_2638.",
    "This attribute represents the supported information associated with the DiagnosticDataIdentifier.",
    "This attribute represents the symbol associated with the binary manifest handle.",
    "This attribute represents the unique identification of the UcmIdentifier.",
    "This attribute represents the value of InfoType (see SAE J1979-DA).",
    "This attribute represents the value of a version against which the comparison shall be executed.",
    "This attribute represents the value of the TCP port applicable for this mapping.",
    "This attribute represents the value of the enter timeout in seconds.",
    "This attribute represents the value of the exit timeout in seconds.",
    "This attribute represents the value of the generic axis parameter.",
    "This attribute represents the value of the id of the corresponding CP software cluster.",
    "This attribute represents the value of the id of the corresponding CP software cluster. \r\nThis id is assigned by an integrator, but may also be copied from CpSoftwareCluster.softwareClusterId if available.",
    "This attribute represents the value of the numerical parameter.",
    "This attribute represents the value of the refined activation period.",
    "This attribute represents the value of the textual parameter.",
    "This attribute represents the value to exactly match after applying the mask to the source address of a client's request.",
    "This attribute represents the version number of the first predecessor  of the object.",
    "This attribute represents the version number of the object.",
    "This attribute represents the version number of the second predecessor of the object.\r\n\r\nThis attribute is used if the object is the result of a merge process in which two branches are merged in to one new revision.",
    "This attribute restricts the traffic monitoring and defines a start value for the local port range.",
    "This attribute restricts the traffic monitoring and defines a start value for the local port range.\r\n\r\nIf this attribute is not set then this rule shall be effective for all local ports.\r\n\r\nPlease note that port ranges are currently not supported in the AUTOSAR AP's operating system backend. If AP systems are involved, each IPsec rule may only contain a single port.",
    "This attribute restricts the traffic monitoring and defines a start value for the remote port range.",
    "This attribute restricts the traffic monitoring and defines a start value for the remote port range.\r\n\r\nIf this attribute is not set then this rule shall be effective for all local ports.\r\n\r\nPlease note that port ranges are currently not supported in the AUTOSAR AP's operating system backend. If AP systems are involved, each IPsec rule may only contain a single port.",
    "This attribute restricts the traffic monitoring and defines an end value for the local port range.",
    "This attribute restricts the traffic monitoring and defines an end value for the local port range.\r\n\r\nIf this attribute is not set then this rule shall be effective for all local ports.\r\n\r\nPlease note that port ranges are currently not supported in the AUTOSAR AP's operating system backend. If AP systems are involved, each IPsec rule may only contain a single port.",
    "This attribute restricts the traffic monitoring and defines an end value for the remote port range.",
    "This attribute restricts the traffic monitoring and defines an end value for the remote port range.\r\n\r\nIf this attribute is not set then this rule shall be effective for all local ports.\r\n\r\nPlease note that port ranges are currently not supported in the AUTOSAR AP's operating system backend. If AP systems are involved, each IPsec rule may only contain a single port.",
    "This attribute restricts the traffic monitoring to tcp and a defined local port.\r\nLocalPort = 0 means ANY.",
    "This attribute restricts the traffic monitoring to tcp and a defined remote port.\r\nLocalPort = 0 means ANY.",
    "This attribute restricts the traffic monitoring to udp and a defined local port.\r\nLocalPort = 0 means ANY.",
    "This attribute restricts the traffic monitoring to udp and a defined remote port.\r\nLocalPort = 0 means ANY.",
    "This attribute sets the behavior of the Port Access Entity in case MACsec does not succeed.",
    "This attribute shall be taken to define an identifier for the IUMPR group. \r\n\r\nPlease note that the value of this identifier is driven by regulations outside the scope of AUTOSAR and can therefore not be limited to the set of characters suitable for a shortName.",
    "This attribute shall be taken to define an identifier for the IUMPR group. Please note that the value of this identifier is driven by regulations outside the scope of AUTOSAR and can therefore not be limited to the set of characters suitable for a shortName.",
    "This attribute shall be taken to verbally describe the nature of the custom trigger.",
    "This attribute shall be used to contribute further clarification regarding the semantics of the enclosing CppTemplateArgument.",
    "This attribute shall be used to define a custom sub-function number if none of the standardized values of category shall be used.",
    "This attribute shall be used to define the value of a manually override of the automatic generated handle Id value.",
    "This attribute shall be used to determine the wire type in the context of using the TLV encoding.",
    "This attribute shall be used to set an idle timeout period for the enclosing LinPhysicalChannel.",
    "This attribute shall be used to specify the update strategy of the respective PersistencyDeployment as a whole.",
    "This attribute shall exist if the InstanceRef points to a DataPrototype typed by an ApplicationDataType.",
    "This attribute shall exist if the InstanceRef points to a DataPrototype typed by an ImplementationDataType.",
    "This attribute shall only be used for the case that an instanceRef is required. The attribute identifies the ordered collection of the type of context elements within the instanceRef.",
    "This attribute shall only be used for the case that an instanceRef is required. The attribute identifies the type of the target element within the instanceRef.",
    "This attribute shall only be used in the implementation of diagnostic routines to support the case where input and output arguments are allocated in a shared buffer and  might unintentionally overwrite input arguments by tentative write operations to output arguments.\r\n\r\nThis situation can happen during sliced execution or while output parameters are arrays (call by reference). The value true means that the ClientServerOperation is aware of the usage of a shared buffer and takes precautions to avoid unintentional overwrite of input arguments. \r\n\r\nIf the attribute does not exist or is set to false the ClientServerOperation does not have to consider the usage of a shared buffer.",
    "This attribute shall only have a meaning for dynamic arrays and shall be taken as a sanity check: the number filled in the attribute shall be identical to the number of ArrayValueSpecification.element. \r\n\r\nIf the attribute does not exist it means that no partial initialization is intended.",
    "This attribute specializes the semantics of the enclosing SoftwareClusterDependencyFormula.",
    "This attribute specifies a 1-byte value which identifies the corresponding basic vehicle / system function which reports the DTC. This parameter\r\nis necessary for the report of severity information.",
    "This attribute specifies a name which can be used e.g. when ECU code is generated from the record layout group.",
    "This attribute specifies a name which can be used e.g. when ECU code is generated from the record layout value.",
    "This attribute specifies a timeout in seconds for the validity of ARP requests. After the transmission of an ARP request the TcpIp shall skip the transmission of any further ARP requests to the same destination within a duration of tcpIpArpRequestTimeout seconds. (IETF RFC 1122, section 2.3.2.1).",
    "This attribute specifies an abbreviated name of a keyword. This abbreviation may e.g. be used for constructing valid shortNames according to  the AUTOSAR naming conventions. \r\n\r\nUnlike shortName, it may contain any name token. E.g. it may consist of digits only.",
    "This attribute specifies an identifying shortName for the PncMapping. It shall be unique in the System scope.",
    "This attribute specifies an identifying shortName for the SocketConnection. It shall be unique within its context.",
    "This attribute specifies an unique identifier for an extended data record.",
    "This attribute specifies how many proxy instances may be created at this RPort.",
    "This attribute specifies if the EcuInstance is acting as a passive communication slave on the connected PhysicalChannel. This is used for EthernetCommunicationControllers that use Ethernet hardware which supports wake-up and sleep on the network (e.g. Open Alliance TC10 compliant Ethernet hardware).",
    "This attribute specifies if the defined attribute value is required to be provided.",
    "This attribute specifies the  time in seconds Auto-IP waits at startup, before beginning with ARP probing. This delay is used to give DHCP time to acquire a lease in case a DHCP server is present.",
    "This attribute specifies the DTC format.",
    "This attribute specifies the Event OBD Readiness group for PID $01 and PID $41 computation. This attribute is only applicable for emission-related ECUs.",
    "This attribute specifies the Event OBD Readiness group for PID $01 and PID $41 computation. This attribute is only applicable for emission-related ECUs.\r\nThe upper multiplicity of this role has been increased to * due to resolving an atpVariation stereotype. The previous value was 1.",
    "This attribute specifies the actual numerical value to be used in the binary manifest handle.",
    "This attribute specifies the address of the enclosing addressable object.",
    "This attribute specifies the byte order of the base type.",
    "This attribute specifies the byte position of the\r\nelement within the default value",
    "This attribute specifies the direction of the argument prototype.",
    "This attribute specifies the end point for the iteration. Negative values are also possible, i.e. the value -4 counts up to the fourth value from the end. If this property is not there, the iteration ends at \"-1\" which is the last element.\r\n\r\nNote that depending on the arraySizeSemantics of SwTextProps the iteration ends at the value specified in swMaxTextSize.",
    "This attribute specifies the filler character for the current record layout, in the form of hex digits. It is also used to specify the fix value for e.g. FIXRIGHTDIFF.",
    "This attribute specifies the generator which is used to generate the image. \r\n\r\nUse case is that when editing a documentation, a figure (to be delivered by the  modeling tool) is inserted by the authoring tool as reference (this is the role  of graphic). But the real figure maybe injected during document processing. To  be able to recognize this situation, this attribute can be applied.",
    "This attribute specifies the guard value of the enclosing binary manifest resource.",
    "This attribute specifies the iteration axis number for a SwRecordLayoutGroup. The current record layout group then refers exactly to the axis with this number. This means that the values are taken by iterating along the thus referenced axis.",
    "This attribute specifies the iterator index for the point in the axis from which a record layout group is commenced. \r\n\r\nNegative values are also possible, i.e. the value -4 counts from the fourth value from the end. If this property is missing, the iteration starts with '1'.",
    "This attribute specifies the local Key identifier of the stored Key used to generate or verify a MAC. The keyId shall be unique per Ecu.",
    "This attribute specifies the lower limit of the property value.",
    "This attribute specifies the maximum transmission unit in bytes.",
    "This attribute specifies the monotony constraint for an adjustable object (curve, map or cuboid) with respect to a specific axis. This information can be used by MCD  system to verify whether the monotony constraint is fulfilled and to prevent from changes violating the constraint.",
    "This attribute specifies the number of authentication build attempts.",
    "This attribute specifies the number of gratuitous ARP replies which shall be sent on assignment of a new IP address.",
    "This attribute specifies the numerical value (e.g. 0, 1) of the enumeration entry. The numericalValue marks an index on M2 level. It is not used in C-Code or at runtime. The numericalValue is only given to be able to calculate a value that represents the enumerator literal in a numerical expression.",
    "This attribute specifies the period in seconds of this task in case of a cyclically activated task.\r\nPlease note that this attribute is informative and not directly relevant for the AUTOSAR OS. But the attribute value can be mapped into the OS configuration to support configuration work flows using a fixed set of OsTasks.",
    "This attribute specifies the primary trigger to allocate an event memory entry.",
    "This attribute specifies the rapid prototyping control of the executable",
    "This attribute specifies the resolution of a given value on a physical basis.",
    "This attribute specifies the size of neighbor cache or ARP table in units of entries.",
    "This attribute specifies the step width for the iterator index that is used for the current record layout group. \r\n\r\nNote that negative values are also possible, in case of the starting point is higher than the endpoint. If the property is missing, the step width is \"1\".",
    "This attribute specifies the style how the command line options appear in the command line.",
    "This attribute specifies the symbol of the addressable object.",
    "This attribute specifies the symbolic value (e.g. in, out) of the enumeration entry.",
    "This attribute specifies the time until first transmission of this I-PDU. This attribute defines the time between Com_IpduGroupStart and the first transmission of the cyclic part of this transmission request for this I-PDU.",
    "This attribute specifies the timeout in seconds after which an unused ARP entry is removed.",
    "This attribute specifies the timeout in seconds between the Pdu receive indication of the Transport Layer to the FlexRay Interface and the corresponding Pdu transmission of the FlexRay Interface on the receiver side.",
    "This attribute specifies the timeout in seconds to transmit the next ConsecutiveFrame NPdu or the last frame NPdu after receiving the flow control frame (CTS) from the sender side.",
    "This attribute specifies the type of the filter.",
    "This attribute specifies the value of the meta-data field.",
    "This attribute specifies time when an unexpected link down is evaluated as link down and indicated to the AUTOSAR communication stack.",
    "This attribute specifies whether a RunnableEntity accessing a PortPrototype that is referenced by this PortAPIOption shall be able to forward a status code to the transformer chain.",
    "This attribute specifies whether for the corresponding VariableDataPrototype the \"never received\" flag is available. If yes, the RTE is supposed to assume that initially the VariableDataPrototype has not been received before.\r\nAfter the first reception of the corresponding VariableDataPrototype the flag is cleared.\r\n\r\n* If the value of this attribute is set to \"true\" the flag is required. \r\n* If set to \"false\", the RTE shall not support the \"never received\" functionality for the corresponding VariableDataPrototype.",
    "This attribute specifies whether the Freshness Value is generated through individual Freshness Counters or by a Timestamps. The value is set to TRUE when Timestamps are used.",
    "This attribute specifies whether the J1939Nm Bsw module is used or not. If this attribute is set to false then the J1939Nm configuration shall not be derived from the system description. But even in this case the nmNodeId might still be necessary for the J1939Rm and J1939Tp.",
    "This attribute specifies whether the enclosing InterpolationRoutine is considered the default in the context (defined by the System Template) of a given collection InterpolationRoutineMapping that owns the enclosing InterpolationRoutine.",
    "This attribute specifies whether the shortName of the referenced templateType is used in the code generation and the type declaration is defined outside of the enclosing CppImplementationDataType (true) or whether the type definition is embedded inside of the enclosing CppImplementationDataType and the shortName is ignored (false).",
    "This attribute specifies whether the template argument shall be translated into the name of the referenced CppImplementationDataType or whether it shall be filled with the data type definition behind the name.",
    "This attribute specifies whether this configuration container is an AUTOSAR standardized container or whether it is vendor-specific.",
    "This attribute specifies which axis is specified by the containing SwCalprmAxis.\r\n\r\nFor example in a curve this is usually \"1\". In a map this is \"1\" or \"2\".",
    "This attribute specifies which functional cluster the Process is affiliated with.",
    "This attribute states the timeout between the PDU transmit request for the first PDU of the group used in the current connection of the Transport Layer to the Can Interface and the corresponding confirmation of the Can Interface (when having sent the last PDU of the group used in this connection) on the sender side (SF-x, FF-x, CF or FC (in case of Transmit Cancellation)). Specified in seconds.",
    "This attribute states the timeout between the PDU transmit request for the first PDU of the group used in the current connection of the Transport Layer to the FlexRay Interface and the corresponding confirmation of the FlexRay Interface (when having sent the last PDU of the group used in this connection) on the sender side (SF-x, FF-x, CF or FC (in case of Transmit Cancellation)). Specified in seconds.",
    "This attribute states the timeout between the PDU transmit request of the Transport Layer to the Can Interface and the corresponding confirmation of the Can Interface on the receiver side (for FC or AF). Specified in seconds.",
    "This attribute states the timeout in seconds between the PDU transmit request for the first PDU of the group used in the current connection of the Transport Layer to the FlexRay Interface and the corresponding confirmation of the FlexRay Interface (when having sent the last PDU of the group used in this connection) on the sender side (SF-x, FF-x, CF).",
    "This attribute states the timeout in seconds between the PDU transmit request of the Transport Layer to the FlexRay Interface and the corresponding confirmation of the FlexRay Interface on the receiver side (for FC or AF).",
    "This attribute states whether Transmit Cancellation is supported on this ECU.\r\n\r\nPlease note that this attribute is deprecated and will be removed in future.",
    "This attribute states whether Transmit Cancellation is supported on this channel. When not set, the value of this attribute may be specified by the ECU integrator.\r\n\r\nPlease note that this attribute is deprecated and will be removed in future.",
    "This attribute supports the configuration of the maximum number of parallel transfers that the Ucm on the enclosing Machine is allowed to create.",
    "This attribute supports the definition of an encoding of the corresponding physical files.\r\n\r\nThe possible values of this attribute may be partially standardized by AUTOSAR. But it is also possible to extend the set of values in a custom way (provided that the custom values use a notation that ensures the absence of clashes with further extensions of the standardized values, e.g. by using a company-specific prefix).",
    "This attribute supports the definition of the applicable version of TLS.",
    "This attribute, when set to value queued, allows for a queued processing of Triggers.",
    "This attribute, when set to value queued, specifies a queued processing of the internal trigger event.",
    "This attributes carries the serialized checksum of the corresponding artifact.",
    "This attributes defines the CipherSuite name. e.g. \r\n\"TLS_RSA_WITH_RC4_128_MD5\".",
    "This attributes defines the default trace status.",
    "This attributes defines whether the context data of the first or last time-aggregated security event shall be used for the resulting qualified security event.",
    "This attributes described the component qualifier used to compose an SOVD query.",
    "This attributes indicates whether the specific DiagnosticDataIdentifier represents the vehicle identification.",
    "This attributes represents the ID of the certificate evaluation.",
    "This attributes represents the concrete type of the\r\ncomparison.",
    "This attributes represents the concrete type of the comparison.",
    "This can be used to identify particular value specifications for human readers, for example elements of a record type.",
    "This category specifies the particular axis types: \r\n\r\n* STD_AXIS \r\n* COM_AXIS \r\n* RES_AXIS  (swArraysize necessary)",
    "This category specifies the particular axis types: \r\n \r\n* STD_AXIS \r\n* COM_AXIS  \r\n* RES_AXIS  (swArraysize necessary)",
    "This collection of containers represents the content of the enclosing choice container.",
    "This collection represents the sub-elements on the next lower level.",
    "This collection represents the subElements on the top level.",
    "This collection specifies which features are supported by the RunnableEntitys which access a PortPrototype that it referenced by this PortAPIOption.",
    "This condition acts as Binding Function for the VariationPoint.",
    "This condition acts as Binding Function for the VariationPoint.\r\nNote that the multiplicity is 0..1 in order to support pure postBuild variants.",
    "This configuration switch defines whether DDDID definition is handled as non-volatile information or not.",
    "This container consists of all transformer chains which can be used for transformation of data communication.",
    "This contains a sloppy reference to the Autosar compatible identifier of the element (EcucId).",
    "This controls the creation of the enhanced mode API that returns information about the previous mode and the next mode. If set to \"true\" the enhanced mode API is supposed to be generated. For more details please refer to the SWS_RTE.",
    "This controls the creation of the enhanced mode API that returns information about the previous mode and the next mode. If set to TRUE the enhanced mode API is supposed to be generated. For more details please refer to the SWS_RTE.",
    "This covers the case that the diagnosis event debounce algorithm is alread known to be implemented in an particular Basic software module entry.",
    "This defines a value for the attribute that is referred to in the role definition.\r\n\r\nNote that a FMFeatureSelection cannot include two FMAttributeValues that refer to the same FMAttributeDef in the role definition.",
    "This defines how the argument type of the servers RunnableEntity is implemented.\r\n\r\nIf the attribute is not defined this has the same semantics as if the attribute is set to the value useArgumentType for primitive arguments and structures.",
    "This defines the attributes of the given feature.",
    "This defines the need to execute the reverse DataTransformation <Mip>_Inv_<transformerId> functions of the transformation chain when communicating from the DataPrototypeMapping.secondDataPrototype to the DataPrototypeMapping.firstDataPrototype.",
    "This defines the scope of a BswCompositionTiming. All corresponding timing descriptions and constraints shall be defined within this scope.",
    "This defines the scope of a BswModuleTiming. All corresponding timing descriptions and constraints shall be defined within this scope.",
    "This defines the scope of a ExecutableTiming. All corresponding timing descriptions and constraints shall be defined within this scope.",
    "This defines the scope of a MachineTiming. All corresponding timing descriptions and constraints shall be defined within this scope.",
    "This defines the scope of a ServiceTiming. All corresponding timing descriptions and constraints shall be defined within this scope.",
    "This defines the scope of a SwcTiming. All corresponding timing descriptions and constraints shall be defined within this scope.\r\n\r\nNote! The reason for the cardinality of 0..1 is to ensure backward compatibility.",
    "This defines the scope of a SystemTiming. All corresponding timing descriptions and constraints shall be defined within this scope.",
    "This defines the scope of a VfbTiming. All corresponding timing descriptions and constraints shall be defined within this scope.",
    "This defines the scope of an EcuTiming. All corresponding timing descriptions and constraints shall be defined within this scope.",
    "This denotes a formal blueprintCondition. This shall be not in contradiction with blueprintCondition or formalBlueprintGenerator. It is recommended only to use one of the two.",
    "This denotes an Action which is to be executed as part of the dynamic action set.",
    "This denotes an object by its definition. For example the right to manipulate the value of a particular ecuc parameter is denoted by reference to the definition of the parameter.\r\n\r\nNote that this can also be a reference to a Standard Module Definition. Therefore it is stereotyped by atpUriDef.",
    "This denotes an object to which the AclPermission applies.",
    "This denotes an operation which is granted by the given AclPermission.",
    "This denotes the accessed variable.",
    "This denotes the data definition properties of the system constant. This supports to express the limits and optionally a conversion within the internal to physical values by a compu method.",
    "This denotes the data which are modified by the action.",
    "This denotes the default life cycle state. To be used in all LifeCycleInfo elements within the LifeCycleInfoSet if no life cycle state is stated there explicitly. I.e. the defaultLcState can be overwritten in LifeCycleInfo elements.",
    "This denotes the delivery artifacts for the entity for reference purposes.",
    "This denotes the domain in which the engineering object is stored. This allows to indicate various segments in the repository keeping the engineering objects. The domain may segregate companies, as well as automotive domains. Details need to be defined by the Methodology.\r\n\r\nAttribute is optional to support a default domain.",
    "This denotes the domain in which the engineering object is stored. This allows to indicate various segments in the repostirory keeping the engineering objects. The domain may segregate companies, as well as automotive domains. Details need to be defined by the Methodology.\r\n\r\nAttribute is optional to support a default domain.",
    "This denotes the imposition time applicable to the current applicability info set.",
    "This denotes the life cycle states applicable to the current life cycle info set.",
    "This denotes the name of the rule of the RuleBasedValueSpecification. The rule determines the calculation specification according which the arguments are used to calculated the values.",
    "This denotes the particular imposition time assigned to the element.",
    "This denotes the particular standard name to the assigned element.",
    "This denotes the particular state assigned to the object.\r\nIf no lcState is given then the default life cycle state of LifeCycleInfoSet is assumed.",
    "This denotes the reference bases for the package. This is the basis for all relative references within the package. The base needs to be selected according to the base attribute within the references.",
    "This denotes the requirement identifier to which the object can be linked to.\r\n\r\nNote that with the implementation of a generic tracing concept in AUTOSAR this attribute might become obsolete.",
    "This denotes the requirement identifier to which the object can be linked to.\r\nNote that with a generic tracing concept in AUTOSAR this might superseded.",
    "This denotes the role (individual or even organization) for which the AclPermission. is granted.",
    "This denotes the role of the engineering object in the development cycle. \r\nCategories are such as\r\n\r\n* SWSRC for source code\r\n* SWOBJ for object code\r\n* SWHDR for a C-header file\r\n\r\nFurther roles need to be defined via Methodology.",
    "This denotes the type of diagnostic routine which is implemented by the referenced server port.",
    "This describes the applicable Post Service Points for a RTEEvent / BswEvent of a bypassed ExecutableEntity.",
    "This describes the applicable Pre Service Points for a RTEEvent / BswEvent of a bypassed ExecutableEntity.",
    "This describes the context in which the event of the executable entity is executed.",
    "This describes the hook with the means of another AUTOSAR system.\r\nThis aggregation contains a variation point although it is not variant. Therefore, this variation point shall not exist in models. See constr_2638.",
    "This describes the relevant use cases. Note that formal references to use cases should be done in the trace relation.",
    "This describes the standard name applied to the current applicability info set.",
    "This describes whether the entry is concrete or abstract.\r\nIf the attribute is missing the entry is considered as concrete.",
    "This element assigns a category to the parent element. It is intended to specialize the usage and/or the content of the object. Such a specialization may also impose particular semantic constraints on the entire substructure.\r\n\r\nSee also Identifiable.",
    "This element assigns a category to the parent element. The category is intended to specialize the usage and/or the content identifiable object. Such a specialization may also impose particular semantic constraints on the entire substructure (not only the identifiable itself).",
    "This element attributes a symbolic name to the iterator of the superimposed record layout group. This can be referenced as a loop index in contained SwRecordLayoutV elements.",
    "This element collects DoIP properties that are network interface specific.",
    "This element contains a commentary in text form.",
    "This element contains calibration instructions and hints for a calibration engineer.\r\nThe upper multiplicity of this role has been increased to * due to resolving an atpVariation stereotype. The previous value was \r\n.",
    "This element contains calibration instructions and hints for a calibration engineer.\r\nThis aggregation contains a variation point although it is not variant. Therefore, this variation point shall not exist in models. See constr_2638.",
    "This element contains general information about diagnostics issues within the component.\r\nThe upper multiplicity of this role has been increased to * due to resolving an atpVariation stereotype. The previous value was \r\n.",
    "This element contains general information about diagnostics issues within the component.\r\nThis aggregation contains a variation point although it is not variant. Therefore, this variation point shall not exist in models. See constr_2638.",
    "This element contains information regarding the software maintenance of the component.\r\nThe upper multiplicity of this role has been increased to * due to resolving an atpVariation stereotype. The previous value was \r\n.",
    "This element contains information regarding the software maintenance of the component.\r\nThis aggregation contains a variation point although it is not variant. Therefore, this variation point shall not exist in models. See constr_2638.",
    "This element contains suggestions and hints for the test of the software functionality of this software component.\r\nThe upper multiplicity of this role has been increased to * due to resolving an atpVariation stereotype. The previous value was \r\n.",
    "This element contains suggestions and hints for the test of the software functionality of this software component.\r\nThis aggregation contains a variation point although it is not variant. Therefore, this variation point shall not exist in models. See constr_2638.",
    "This element contains the definition of the physical functionality of this software component. This definition is more or less formal and is intended to be delivered from modeling tools.\r\nThis aggregation contains a variation point although it is not variant. Therefore, this variation point shall not exist in models. See constr_2638.",
    "This element contains the definition of the physical functionality of this software component. This definition is more or less formal and is intended to be delivered from modeling tools. \r\nThe upper multiplicity of this role has been increased to * due to resolving an atpVariation stereotype. The previous value was \r\n.",
    "This element contains the textual description of the software functionality of this software component. Expert should write this description.\r\nThe upper multiplicity of this role has been increased to * due to resolving an atpVariation stereotype. The previous value was \r\n.",
    "This element contains the textual description of the software functionality of this software component. Expert should write this description.\r\nThis aggregation contains a variation point although it is not variant. Therefore, this variation point shall not exist in models. See constr_2638.",
    "This element defines a reference to a DataPrototype in the context of a ClientServerInterface.",
    "This element defines a reference to a DataPrototype in the context of a PortInterface.",
    "This element defines a reference to a DataPrototype in the context of a SenderReceiverInterface.",
    "This element defines a reference to a DataPrototype in the context of a ServiceInterface.",
    "This element defines a rule expression against which the network traffic is matched.",
    "This element defines an egress rule expression against which the network traffic is matched.",
    "This element defines an ingress rule expression against which the network traffic is matched.",
    "This element describes the formula with which the dependencies between the participating objects are defined.",
    "This element describes the instance specific implementation details of a class attribute which manifests itself as a calibration parameter.",
    "This element describes the instance specific implementation details of a class attribute which manifests itself as a class instance.",
    "This element describes the instance specific implementation details of a class attribute which manifests itself as a variable.",
    "This element describes the prototype declaration of a class attribute, which appears in the form of a class.",
    "This element describes the prototype declaration of a class attribute, which appears in the form of a variable.",
    "This element describes the prototype declaration of a class attribute, which is used as a calibration parameter.",
    "This element describes the tool version which was used to generate the corresponding xfile. Kept as a string, since no specific syntax can be specified.",
    "This element describes the tool which was used to generate the corresponding Xfile . Kept as a string since no specifc syntax can be provided to denote a tool.",
    "This element describes the tool which was used to generate the corresponding Xfile . Kept as a string since no specific syntax can be provided to denote a tool.",
    "This element distinguishes virtual objects. Virtual objects do not appear in the memory, their derivation is much more dependent on other objects and hence they shall have a swDataDependency .",
    "This element is the same as function here as in a HTML document i.e. it forces a line break.",
    "This element is used to configure for which version (major version/minor version) of the SomeIp Service the Service Discovery will search.",
    "This element records the documentation requested by CARB.\r\nThe upper multiplicity of this role has been increased to * due to resolving an atpVariation stereotype. The previous value was \r\n.",
    "This element records the documentation requested by CARB.\r\nThis aggregation contains a variation point although it is not variant. Therefore, this variation point shall not exist in models. See constr_2638.",
    "This element represents the ability to refer to the internal structure of an AutosarDataPrototype  which is typed by an ImplementationDatatype in the context of a PortInterface.",
    "This element represents the ability to refer to the internal structure of an AutosarDataPrototype  which is typed by an ImplementationDatatype in the context of a ServiceInterface.",
    "This element represents the ability to:\r\n* refer to a DataPrototype in the context of a ServiceInterface.\r\n* refer to the internal structure of a DataPrototype in which is typed by an ApplicationDatatype\r\nthe context of a ServiceInterface.",
    "This element specifies a reference target which can be scattered throughout the text.",
    "This element specifies a region in an image map. Image maps enable authors to specify regions in an object (e.g. a graphic) and to assign a specific activity to each region (e.g. load a document, launch a program etc.).",
    "This element specifies a short name for the particular scale. The name can for example be used to derive a programming language identifier.",
    "This element specifies a short name for the scaleConstr. This can for example be used to create more specific messages of a constraint checker. The constraints cannot be associated in the meta-model, therefore shortLabel is somehow a substitute for shortName.",
    "This element specifies an argument within an MsrQuery.",
    "This element specifies the frequency in which the object involved shall be or is called or calculated.  This timing can be collected from the task in which write access processes to the variable run. But this cannot be done by the MCD system. \r\n\r\nSo this attribute can be used in an early phase to express the desired refresh timing and later on to specify the real refresh timing.",
    "This element specifies the identification or heading of a formula.",
    "This element specifies the maximum slope that may be used in curves and maps.",
    "This element specifies the maximum slope that may be used in maps and curves.",
    "This element specifies the monotony characteristics of the current internal or physical limits. The following table shows the monotony characteristics which are to be filled through the corresponding values. \r\n\r\nIf the element has no contents or if it is omitted, \"noMonotony\" is the default content.",
    "This element specifies the name of the MSR-QUERY triggered.",
    "This element specifies the release date of the external document if applicable.",
    "This element specifies the release date of the external standard if applicable.",
    "This element specifies the table heading.",
    "This element specifies the title of an illustration.",
    "This element was generated/modified due to an atpVariation stereotype.",
    "This element was generated/modified due to an atpVariation stereotype.\r\nApplicable for: ARPackage.arPackage\r\nApplicable for: AUTOSAR.arPackage",
    "This element was generated/modified due to an atpVariation stereotype.\r\nApplicable for: ARPackage.element\r\nNot Applicable for: DiagnosticMasterToSlaveEventMappingSet.masterToSlaveEventMapping\r\nNot Applicable for: FlexrayArTpChannel.pduPool",
    "This element was generated/modified due to an atpVariation stereotype.\r\nApplicable for: AbstractServiceInstance.capabilityRecord\r\nNot Applicable for: Machine.environmentVariable\r\nNot Applicable for: ProvidedSomeipServiceInstance.capabilityRecord\r\nNot Applicable for: RequiredSomeipServiceInstance.capabilityRecord\r\nNot Applicable for: SdClientConfig.capabilityRecord\r\nNot Applicable for: SdServerConfig.capabilityRecord\r\nNot Applicable for: StartupConfig.environmentVariable",
    "This element was generated/modified due to an atpVariation stereotype.\r\nApplicable for: AbstractServiceInstance.methodActivationRoutingGroup\r\nNot Applicable for: ConsumedEventGroup.pduActivationRoutingGroup\r\nNot Applicable for: EventHandler.pduActivationRoutingGroup",
    "This element was generated/modified due to an atpVariation stereotype.\r\nApplicable for: AccessCountSet.accessCount",
    "This element was generated/modified due to an atpVariation stereotype.\r\nApplicable for: AdaptiveApplicationSwComponentType.internalBehavior",
    "This element was generated/modified due to an atpVariation stereotype.\r\nApplicable for: AliasNameSet.aliasName",
    "This element was generated/modified due to an atpVariation stereotype.\r\nApplicable for: ApplicationInterface.attribute\r\nApplicable for: ServiceInterface.field",
    "This element was generated/modified due to an atpVariation stereotype.\r\nApplicable for: ApplicationInterface.command\r\nApplicable for: ClientServerInterface.operation\r\nApplicable for: ServiceInterface.method\r\nNot Applicable for: DiagnosticDataElementInterface.read\r\nNot Applicable for: DiagnosticDataIdentifierInterface.read\r\nNot Applicable for: DiagnosticDataIdentifierInterface.write\r\nNot Applicable for: DiagnosticRoutineInterface.requestResult\r\nNot Applicable for: DiagnosticRoutineInterface.start\r\nNot Applicable for: DiagnosticRoutineInterface.stop\r\nNot Applicable for: PhmRecoveryActionInterface.recovery",
    "This element was generated/modified due to an atpVariation stereotype.\r\nApplicable for: ApplicationInterface.indication\r\nApplicable for: BswInternalBehavior.arTypedPerInstanceMemory\r\nApplicable for: BswModuleDescription.providedData\r\nApplicable for: BswModuleDescription.requiredData\r\nApplicable for: InternalBehavior.staticMemory\r\nApplicable for: ServiceInterface.event\r\nApplicable for: SwcInternalBehavior.arTypedPerInstanceMemory\r\nApplicable for: SwcInternalBehavior.explicitInterRunnableVariable\r\nApplicable for: SwcInternalBehavior.implicitInterRunnableVariable\r\nNot Applicable for: BulkNvDataDescriptor.bulkNvBlock\r\nNot Applicable for: NvBlockDescriptor.ramBlock\r\nNot Applicable for: NvDataInterface.nvData\r\nNot Applicable for: SenderReceiverInterface.dataElement",
    "This element was generated/modified due to an atpVariation stereotype.\r\nApplicable for: ApplicationRecordDataType.element",
    "This element was generated/modified due to an atpVariation stereotype.\r\nApplicable for: ArrayValueSpecification.element\r\nApplicable for: RecordValueSpecification.field\r\nNot Applicable for: ApplicationAssocMapElementValueSpecification.key\r\nNot Applicable for: ApplicationAssocMapElementValueSpecification.value\r\nNot Applicable for: CalibrationParameterValue.applInitValue\r\nNot Applicable for: CalibrationParameterValue.implInitValue\r\nNot Applicable for: CompositeRuleBasedValueSpecification.argument\r\nNot Applicable for: ConstantSpecification.valueSpec\r\nNot Applicable for: CryptoServiceKey.developmentValue\r\nNot Applicable for: DiagnosticEnvDataCondition.compareValue\r\nNot Applicable for: DiagnosticEnvDataElementCondition.compareValue\r\nNot Applicable for: FieldSenderComSpec.initValue\r\nNot Applicable for: ISignal.initValue\r\nNot Applicable for: ISignal.receptionDefaultValue\r\nNot Applicable for: ISignal.timeoutSubstitutionValue\r\nNot Applicable for: MetaDataItem.metaDataItemType\r\nNot Applicable for: NonqueuedReceiverComSpec.initValue\r\nNot Applicable for: NonqueuedReceiverComSpec.timeoutSubstitutionValue\r\nNot Applicable for: NonqueuedSenderComSpec.initValue\r\nNot Applicable for: NvProvideComSpec.ramBlockInitValue\r\nNot Applicable for: NvProvideComSpec.romBlockInitValue\r\nNot Applicable for: NvRequireComSpec.initValue\r\nNot Applicable for: ParameterDataPrototype.initValue\r\nNot Applicable for: ParameterProvideComSpec.initValue\r\nNot Applicable for: ParameterRequireComSpec.initValue\r\nNot Applicable for: PersistencyDataRequiredComSpec.initValue\r\nNot Applicable for: PersistencyKeyValuePair.initValue\r\nNot Applicable for: PortDefinedArgumentValue.value\r\nNot Applicable for: PortPrototypeBlueprintInitValue.value\r\nNot Applicable for: SomeipEventDeployment.eventReceptionDefaultValue\r\nNot Applicable for: StateManagementCompareCondition.compareValue\r\nNot Applicable for: SwDataDefPropsContent.invalidValue\r\nNot Applicable for: UserDefinedEventDeployment.eventReceptionDefaultValue\r\nNot Applicable for: VariableDataPrototype.initValue",
    "This element was generated/modified due to an atpVariation stereotype.\r\nApplicable for: AtomicSwComponentType.internalBehavior",
    "This element was generated/modified due to an atpVariation stereotype.\r\nApplicable for: BswImplementation.debugInfo",
    "This element was generated/modified due to an atpVariation stereotype.\r\nApplicable for: BswInternalBehavior.bswPerInstanceMemoryPolicy",
    "This element was generated/modified due to an atpVariation stereotype.\r\nApplicable for: BswInternalBehavior.clientPolicy",
    "This element was generated/modified due to an atpVariation stereotype.\r\nApplicable for: BswInternalBehavior.distinguishedPartition",
    "This element was generated/modified due to an atpVariation stereotype.\r\nApplicable for: BswInternalBehavior.entity",
    "This element was generated/modified due to an atpVariation stereotype.\r\nApplicable for: BswInternalBehavior.event",
    "This element was generated/modified due to an atpVariation stereotype.\r\nApplicable for: BswInternalBehavior.exclusiveAreaPolicy",
    "This element was generated/modified due to an atpVariation stereotype.\r\nApplicable for: BswInternalBehavior.internalTriggeringPoint",
    "This element was generated/modified due to an atpVariation stereotype.\r\nApplicable for: BswInternalBehavior.internalTriggeringPointPolicy",
    "This element was generated/modified due to an atpVariation stereotype.\r\nApplicable for: BswInternalBehavior.modeReceiverPolicy",
    "This element was generated/modified due to an atpVariation stereotype.\r\nApplicable for: BswInternalBehavior.modeSenderPolicy",
    "This element was generated/modified due to an atpVariation stereotype.\r\nApplicable for: BswInternalBehavior.parameterPolicy",
    "This element was generated/modified due to an atpVariation stereotype.\r\nApplicable for: BswInternalBehavior.perInstanceParameter\r\nApplicable for: InternalBehavior.constantMemory\r\nApplicable for: SwcInternalBehavior.perInstanceParameter\r\nApplicable for: SwcInternalBehavior.sharedParameter\r\nNot Applicable for: NvBlockDescriptor.romBlock\r\nNot Applicable for: ParameterInterface.parameter",
    "This element was generated/modified due to an atpVariation stereotype.\r\nApplicable for: BswInternalBehavior.receptionPolicy",
    "This element was generated/modified due to an atpVariation stereotype.\r\nApplicable for: BswInternalBehavior.releasedTriggerPolicy",
    "This element was generated/modified due to an atpVariation stereotype.\r\nApplicable for: BswInternalBehavior.schedulerNamePrefix",
    "This element was generated/modified due to an atpVariation stereotype.\r\nApplicable for: BswInternalBehavior.sendPolicy",
    "This element was generated/modified due to an atpVariation stereotype.\r\nApplicable for: BswInternalBehavior.serviceDependency",
    "This element was generated/modified due to an atpVariation stereotype.\r\nApplicable for: BswInternalBehavior.triggerDirectImplementation",
    "This element was generated/modified due to an atpVariation stereotype.\r\nApplicable for: BswModuleDescription.bswModuleDependency",
    "This element was generated/modified due to an atpVariation stereotype.\r\nApplicable for: BswModuleDescription.bswModuleDocumentation\r\nApplicable for: SwComponentType.swComponentDocumentation",
    "This element was generated/modified due to an atpVariation stereotype.\r\nApplicable for: BswModuleDescription.providedClientServerEntry\r\nApplicable for: BswModuleDescription.requiredClientServerEntry",
    "This element was generated/modified due to an atpVariation stereotype.\r\nApplicable for: BswModuleDescription.providedModeGroup\r\nApplicable for: BswModuleDescription.requiredModeGroup\r\nNot Applicable for: FirewallStateSwitchInterface.firewallStateMachine\r\nNot Applicable for: FunctionGroupSet.functionGroup\r\nNot Applicable for: ModeSwitchInterface.modeGroup\r\nNot Applicable for: Process.processStateMachine\r\nNot Applicable for: StateManagementStateNotification.stateMachine",
    "This element was generated/modified due to an atpVariation stereotype.\r\nApplicable for: BswModuleDescription.releasedTrigger\r\nApplicable for: BswModuleDescription.requiredTrigger\r\nApplicable for: ServiceInterface.trigger\r\nNot Applicable for: TriggerInterface.trigger",
    "This element was generated/modified due to an atpVariation stereotype.\r\nApplicable for: BswModuleEntity.callPoint",
    "This element was generated/modified due to an atpVariation stereotype.\r\nApplicable for: BswModuleEntity.dataReceivePoint\r\nApplicable for: BswModuleEntity.dataSendPoint",
    "This element was generated/modified due to an atpVariation stereotype.\r\nApplicable for: BswModuleEntry.argument\r\nNot Applicable for: BswModuleEntry.returnType",
    "This element was generated/modified due to an atpVariation stereotype.\r\nApplicable for: BswServiceDependency.assignedData\r\nApplicable for: SwcServiceDependency.assignedData\r\nNot Applicable for: NvBlockDescriptor.writingStrategy\r\nNot Applicable for: NvBlockDescriptor.writingStrategyRole",
    "This element was generated/modified due to an atpVariation stereotype.\r\nApplicable for: BswServiceDependency.assignedEntryRole",
    "This element was generated/modified due to an atpVariation stereotype.\r\nApplicable for: BuildActionManifest.buildAction",
    "This element was generated/modified due to an atpVariation stereotype.\r\nApplicable for: BuildActionManifest.buildActionEnvironment",
    "This element was generated/modified due to an atpVariation stereotype.\r\nApplicable for: BulkNvDataDescriptor.nvBlockDataMapping\r\nApplicable for: NvBlockDescriptor.nvBlockDataMapping",
    "This element was generated/modified due to an atpVariation stereotype.\r\nApplicable for: CalibrationParameterValueSet.calibrationParameterValue",
    "This element was generated/modified due to an atpVariation stereotype.\r\nApplicable for: CanTpConfig.tpAddress",
    "This element was generated/modified due to an atpVariation stereotype.\r\nApplicable for: CanTpConfig.tpChannel",
    "This element was generated/modified due to an atpVariation stereotype.\r\nApplicable for: CanTpConfig.tpConnection",
    "This element was generated/modified due to an atpVariation stereotype.\r\nApplicable for: CanTpConfig.tpEcu",
    "This element was generated/modified due to an atpVariation stereotype.\r\nApplicable for: CanTpConfig.tpNode",
    "This element was generated/modified due to an atpVariation stereotype.\r\nApplicable for: ChapterOrMsrQuery.chapter\r\nApplicable for: SwComponentDocumentation.chapter\r\nApplicable for: System.systemDocumentation\r\nNot Applicable for: MsrQueryResultChapter.chapter\r\nNot Applicable for: SwComponentDocumentation.swCalibrationNotes\r\nNot Applicable for: SwComponentDocumentation.swCarbDoc\r\nNot Applicable for: SwComponentDocumentation.swDiagnosticsNotes\r\nNot Applicable for: SwComponentDocumentation.swFeatureDef\r\nNot Applicable for: SwComponentDocumentation.swFeatureDesc\r\nNot Applicable for: SwComponentDocumentation.swMaintenanceNotes\r\nNot Applicable for: SwComponentDocumentation.swTestDesc",
    "This element was generated/modified due to an atpVariation stereotype.\r\nApplicable for: ClientIdDefinitionSet.clientIdDefinition",
    "This element was generated/modified due to an atpVariation stereotype.\r\nApplicable for: ClientServerInterfaceToBswModuleEntryBlueprintMapping.operationMapping",
    "This element was generated/modified due to an atpVariation stereotype.\r\nApplicable for: ClientServerInterfaceToBswModuleEntryBlueprintMapping.portDefinedArgumentBlueprint",
    "This element was generated/modified due to an atpVariation stereotype.\r\nApplicable for: ClientServerOperation.argument",
    "This element was generated/modified due to an atpVariation stereotype.\r\nApplicable for: CommunicationClusterContent.physicalChannel",
    "This element was generated/modified due to an atpVariation stereotype.\r\nApplicable for: CommunicationConnector.ecuCommPortInstance",
    "This element was generated/modified due to an atpVariation stereotype.\r\nApplicable for: CompositionSwComponentType.component",
    "This element was generated/modified due to an atpVariation stereotype.\r\nApplicable for: CompositionSwComponentType.connector",
    "This element was generated/modified due to an atpVariation stereotype.\r\nApplicable for: CompositionSwComponentType.instantiationRTEEventProps",
    "This element was generated/modified due to an atpVariation stereotype.\r\nApplicable for: CompuScales.compuScale\r\nNot Applicable for: BufferProperties.bufferComputation",
    "This element was generated/modified due to an atpVariation stereotype.\r\nApplicable for: ConsistencyNeeds.dpgDoesNotRequireCoherency\r\nApplicable for: ConsistencyNeeds.dpgRequiresCoherency",
    "This element was generated/modified due to an atpVariation stereotype.\r\nApplicable for: ConsistencyNeeds.regDoesNotRequireStability\r\nApplicable for: ConsistencyNeeds.regRequiresStability",
    "This element was generated/modified due to an atpVariation stereotype.\r\nApplicable for: ConsistencyNeedsBlueprintSet.consistencyNeeds\r\nApplicable for: SwComponentType.consistencyNeeds",
    "This element was generated/modified due to an atpVariation stereotype.\r\nApplicable for: ConsumedServiceInstance.consumedEventGroup",
    "This element was generated/modified due to an atpVariation stereotype.\r\nApplicable for: CouplingElement.couplingElementDetails",
    "This element was generated/modified due to an atpVariation stereotype.\r\nApplicable for: CouplingElement.couplingPort\r\nNot Applicable for: EthernetCommunicationControllerContent.couplingPort",
    "This element was generated/modified due to an atpVariation stereotype.\r\nApplicable for: CouplingPort.macAddressVlanAssignment",
    "This element was generated/modified due to an atpVariation stereotype.\r\nApplicable for: CpSoftwareCluster.swComponentAssignment",
    "This element was generated/modified due to an atpVariation stereotype.\r\nApplicable for: CpSoftwareClusterMappingSet.portElementToComResourceMapping\r\nApplicable for: SystemMapping.portElementToComResourceMapping",
    "This element was generated/modified due to an atpVariation stereotype.\r\nApplicable for: CpSoftwareClusterMappingSet.resourceToApplicationPartitionMapping\r\nApplicable for: SystemMapping.resourceToApplicationPartitionMapping",
    "This element was generated/modified due to an atpVariation stereotype.\r\nApplicable for: CpSoftwareClusterMappingSet.softwareClusterToResourceMapping\r\nApplicable for: SystemMapping.softwareClusterToResourceMapping",
    "This element was generated/modified due to an atpVariation stereotype.\r\nApplicable for: CpSoftwareClusterMappingSet.swcToApplicationPartitionMapping\r\nApplicable for: SystemMapping.swcToApplicationPartitionMapping\r\nNot Applicable for: SwComponentMappingConstraints.swcToApplicationPartitionMapping",
    "This element was generated/modified due to an atpVariation stereotype.\r\nApplicable for: DataPrototypeGroup.dataPrototypeGroup",
    "This element was generated/modified due to an atpVariation stereotype.\r\nApplicable for: DataPrototypeGroup.implicitDataAccess",
    "This element was generated/modified due to an atpVariation stereotype.\r\nApplicable for: DataTransformationSet.dataTransformation",
    "This element was generated/modified due to an atpVariation stereotype.\r\nApplicable for: DataTransformationSet.transformationTechnology",
    "This element was generated/modified due to an atpVariation stereotype.\r\nApplicable for: DdsCpConsumedServiceInstance.consumedDdsOperation\r\nApplicable for: DdsCpProvidedServiceInstance.providedDdsOperation",
    "This element was generated/modified due to an atpVariation stereotype.\r\nApplicable for: DdsCpConsumedServiceInstance.consumedDdsServiceEvent\r\nApplicable for: DdsCpProvidedServiceInstance.providedDdsServiceInstanceEvent",
    "This element was generated/modified due to an atpVariation stereotype.\r\nApplicable for: DefList.defItem",
    "This element was generated/modified due to an atpVariation stereotype.\r\nApplicable for: DiagnosticAbstractParameter.dataElement",
    "This element was generated/modified due to an atpVariation stereotype.\r\nApplicable for: DiagnosticCommonPropsContent.debounceAlgorithmProps",
    "This element was generated/modified due to an atpVariation stereotype.\r\nApplicable for: DiagnosticDataIdentifier.dataElement\r\nApplicable for: DiagnosticParameterIdentifier.dataElement\r\nNot Applicable for: DiagnosticExtendedDataRecord.recordElement\r\nNot Applicable for: DiagnosticInfoType.dataElement\r\nNot Applicable for: DiagnosticRequestRoutineResults.request\r\nNot Applicable for: DiagnosticRequestRoutineResults.response\r\nNot Applicable for: DiagnosticStartRoutine.request\r\nNot Applicable for: DiagnosticStartRoutine.response\r\nNot Applicable for: DiagnosticStopRoutine.request\r\nNot Applicable for: DiagnosticStopRoutine.response",
    "This element was generated/modified due to an atpVariation stereotype.\r\nApplicable for: DiagnosticEvent.connectedIndicator",
    "This element was generated/modified due to an atpVariation stereotype.\r\nApplicable for: DiagnosticIumprGroup.iumprGroupIdentifier",
    "This element was generated/modified due to an atpVariation stereotype.\r\nApplicable for: DiagnosticTroubleCodeObd.eventReadinessGroup\r\nApplicable for: DiagnosticTroubleCodeUds.eventReadinessGroup",
    "This element was generated/modified due to an atpVariation stereotype.\r\nApplicable for: DiagnosticTroubleCodeProps.obdProps",
    "This element was generated/modified due to an atpVariation stereotype.\r\nApplicable for: DltEcu.application",
    "This element was generated/modified due to an atpVariation stereotype.\r\nApplicable for: DocumentationBlock.defList",
    "This element was generated/modified due to an atpVariation stereotype.\r\nApplicable for: DocumentationBlock.figure",
    "This element was generated/modified due to an atpVariation stereotype.\r\nApplicable for: DocumentationBlock.formula\r\nNot Applicable for: EcucConditionSpecification.informalFormula\r\nNot Applicable for: EcucDerivationSpecification.informalFormula",
    "This element was generated/modified due to an atpVariation stereotype.\r\nApplicable for: DocumentationBlock.labeledList",
    "This element was generated/modified due to an atpVariation stereotype.\r\nApplicable for: DocumentationBlock.list",
    "This element was generated/modified due to an atpVariation stereotype.\r\nApplicable for: DocumentationBlock.note",
    "This element was generated/modified due to an atpVariation stereotype.\r\nApplicable for: DocumentationBlock.p",
    "This element was generated/modified due to an atpVariation stereotype.\r\nApplicable for: DocumentationBlock.structuredReq",
    "This element was generated/modified due to an atpVariation stereotype.\r\nApplicable for: DocumentationBlock.trace",
    "This element was generated/modified due to an atpVariation stereotype.\r\nApplicable for: DocumentationBlock.verbatim\r\nNot Applicable for: BlueprintFormula.verbatim\r\nNot Applicable for: MlFigure.verbatim\r\nNot Applicable for: MlFormula.verbatim",
    "This element was generated/modified due to an atpVariation stereotype.\r\nApplicable for: EcuInstance.commController\r\nNot Applicable for: MachineDesign.communicationController",
    "This element was generated/modified due to an atpVariation stereotype.\r\nApplicable for: EcuInstance.connector\r\nNot Applicable for: MachineDesign.communicationConnector",
    "This element was generated/modified due to an atpVariation stereotype.\r\nApplicable for: EcuInstance.ecuInstanceProps",
    "This element was generated/modified due to an atpVariation stereotype.\r\nApplicable for: EcucContainerValue.parameterValue",
    "This element was generated/modified due to an atpVariation stereotype.\r\nApplicable for: EcucContainerValue.referenceValue",
    "This element was generated/modified due to an atpVariation stereotype.\r\nApplicable for: EcucContainerValue.subContainer\r\nApplicable for: EcucModuleConfigurationValues.container",
    "This element was generated/modified due to an atpVariation stereotype.\r\nApplicable for: EndToEndProtection.endToEndProtectionISignalIPdu",
    "This element was generated/modified due to an atpVariation stereotype.\r\nApplicable for: EndToEndProtection.endToEndProtectionVariablePrototype",
    "This element was generated/modified due to an atpVariation stereotype.\r\nApplicable for: EndToEndProtectionSet.endToEndProtection",
    "This element was generated/modified due to an atpVariation stereotype.\r\nApplicable for: ErrorTracerNeeds.tracedFailure",
    "This element was generated/modified due to an atpVariation stereotype.\r\nApplicable for: EthernetClusterContent.couplingPortConnection",
    "This element was generated/modified due to an atpVariation stereotype.\r\nApplicable for: FlatMap.instance",
    "This element was generated/modified due to an atpVariation stereotype.\r\nApplicable for: FlexrayArTpConfig.tpAddress\r\nApplicable for: FlexrayTpConfig.tpAddress\r\nApplicable for: J1939TpConfig.tpAddress\r\nApplicable for: LinTpConfig.tpAddress",
    "This element was generated/modified due to an atpVariation stereotype.\r\nApplicable for: FlexrayArTpConfig.tpChannel",
    "This element was generated/modified due to an atpVariation stereotype.\r\nApplicable for: FlexrayArTpConfig.tpNode",
    "This element was generated/modified due to an atpVariation stereotype.\r\nApplicable for: FlexrayTpConfig.pduPool",
    "This element was generated/modified due to an atpVariation stereotype.\r\nApplicable for: FlexrayTpConfig.tpConnection",
    "This element was generated/modified due to an atpVariation stereotype.\r\nApplicable for: FlexrayTpConfig.tpConnectionControl",
    "This element was generated/modified due to an atpVariation stereotype.\r\nApplicable for: FlexrayTpConfig.tpEcu",
    "This element was generated/modified due to an atpVariation stereotype.\r\nApplicable for: FlexrayTpConfig.tpNode",
    "This element was generated/modified due to an atpVariation stereotype.\r\nApplicable for: Frame.pduToFrameMapping",
    "This element was generated/modified due to an atpVariation stereotype.\r\nApplicable for: Gateway.frameMapping",
    "This element was generated/modified due to an atpVariation stereotype.\r\nApplicable for: Gateway.iPduMapping",
    "This element was generated/modified due to an atpVariation stereotype.\r\nApplicable for: Gateway.signalMapping",
    "This element was generated/modified due to an atpVariation stereotype.\r\nApplicable for: GlobalTimeDomain.gateway",
    "This element was generated/modified due to an atpVariation stereotype.\r\nApplicable for: GlobalTimeDomain.globalTimeDomainProperty\r\nNot Applicable for: GlobalTimeDomain.globalTimeDomainProps",
    "This element was generated/modified due to an atpVariation stereotype.\r\nApplicable for: GlobalTimeDomain.globalTimeMaster\r\nNot Applicable for: GlobalTimeDomain.master",
    "This element was generated/modified due to an atpVariation stereotype.\r\nApplicable for: GlobalTimeDomain.slave",
    "This element was generated/modified due to an atpVariation stereotype.\r\nApplicable for: HwDescriptionEntity.hwAttributeValue",
    "This element was generated/modified due to an atpVariation stereotype.\r\nApplicable for: HwElement.hwElementConnection",
    "This element was generated/modified due to an atpVariation stereotype.\r\nApplicable for: HwElement.hwPinGroup\r\nApplicable for: HwPinGroupContent.hwPinGroup",
    "This element was generated/modified due to an atpVariation stereotype.\r\nApplicable for: HwElementConnector.hwPinConnection\r\nApplicable for: HwPinGroupConnector.hwPinConnection",
    "This element was generated/modified due to an atpVariation stereotype.\r\nApplicable for: HwElementConnector.hwPinGroupConnection",
    "This element was generated/modified due to an atpVariation stereotype.\r\nApplicable for: HwPinGroupContent.hwPin",
    "This element was generated/modified due to an atpVariation stereotype.\r\nApplicable for: IEEE1722TpAcfBus.acfPart",
    "This element was generated/modified due to an atpVariation stereotype.\r\nApplicable for: IEEE1722TpAcfConnection.acfTransportedBus",
    "This element was generated/modified due to an atpVariation stereotype.\r\nApplicable for: ISignalIPdu.iPduTimingSpecification",
    "This element was generated/modified due to an atpVariation stereotype.\r\nApplicable for: ISignalIPdu.iSignalToPduMapping\r\nNot Applicable for: NmPdu.iSignalToIPduMapping",
    "This element was generated/modified due to an atpVariation stereotype.\r\nApplicable for: ISignalIPdu.pduCounter",
    "This element was generated/modified due to an atpVariation stereotype.\r\nApplicable for: ISignalIPdu.pduReplication",
    "This element was generated/modified due to an atpVariation stereotype.\r\nApplicable for: Implementation.generatedArtifact\r\nApplicable for: Implementation.requiredArtifact\r\nApplicable for: Implementation.requiredGeneratorTool",
    "This element was generated/modified due to an atpVariation stereotype.\r\nApplicable for: ImplementationDataType.subElement\r\nApplicable for: ImplementationDataTypeElement.subElement\r\nNot Applicable for: BswDebugInfo.localDebugData",
    "This element was generated/modified due to an atpVariation stereotype.\r\nApplicable for: InternalBehavior.exclusiveArea",
    "This element was generated/modified due to an atpVariation stereotype.\r\nApplicable for: InternalBehavior.exclusiveAreaNestingOrder",
    "This element was generated/modified due to an atpVariation stereotype.\r\nApplicable for: J1939TpConfig.tpConnection",
    "This element was generated/modified due to an atpVariation stereotype.\r\nApplicable for: J1939TpConfig.tpNode",
    "This element was generated/modified due to an atpVariation stereotype.\r\nApplicable for: LabeledList.labeledItem",
    "This element was generated/modified due to an atpVariation stereotype.\r\nApplicable for: LinPhysicalChannel.scheduleTable",
    "This element was generated/modified due to an atpVariation stereotype.\r\nApplicable for: LinTpConfig.tpConnection",
    "This element was generated/modified due to an atpVariation stereotype.\r\nApplicable for: LinTpConfig.tpNode",
    "This element was generated/modified due to an atpVariation stereotype.\r\nApplicable for: List.item",
    "This element was generated/modified due to an atpVariation stereotype.\r\nApplicable for: LogAndTraceMessageCollectionSet.dltMessage\r\nNot Applicable for: DltMessageCollectionSet.dltMessage",
    "This element was generated/modified due to an atpVariation stereotype.\r\nApplicable for: McDataInstance.subElement\r\nApplicable for: McSupportData.mcParameterInstance\r\nApplicable for: McSupportData.mcVariableInstance",
    "This element was generated/modified due to an atpVariation stereotype.\r\nApplicable for: McSupportData.emulationSupport",
    "This element was generated/modified due to an atpVariation stereotype.\r\nApplicable for: ModeDeclarationGroup.modeDeclaration",
    "This element was generated/modified due to an atpVariation stereotype.\r\nApplicable for: MultiplexedIPdu.dynamicPart",
    "This element was generated/modified due to an atpVariation stereotype.\r\nApplicable for: MultiplexedIPdu.staticPart",
    "This element was generated/modified due to an atpVariation stereotype.\r\nApplicable for: NmCluster.nmNode",
    "This element was generated/modified due to an atpVariation stereotype.\r\nApplicable for: NmConfig.nmCluster",
    "This element was generated/modified due to an atpVariation stereotype.\r\nApplicable for: NmConfig.nmClusterCoupling",
    "This element was generated/modified due to an atpVariation stereotype.\r\nApplicable for: NmConfig.nmIfEcu",
    "This element was generated/modified due to an atpVariation stereotype.\r\nApplicable for: NvBlockDescriptor.clientServerPort\r\nApplicable for: SwcServiceDependency.assignedPort",
    "This element was generated/modified due to an atpVariation stereotype.\r\nApplicable for: NvBlockDescriptor.instantiationDataDefProps\r\nApplicable for: ParameterSwComponentType.instantiationDataDefProps\r\nApplicable for: SwcInternalBehavior.instantiationDataDefProps",
    "This element was generated/modified due to an atpVariation stereotype.\r\nApplicable for: NvBlockDescriptor.modeSwitchEventTriggeredActivity",
    "This element was generated/modified due to an atpVariation stereotype.\r\nApplicable for: NvBlockSwComponentType.bulkNvDataDescriptor",
    "This element was generated/modified due to an atpVariation stereotype.\r\nApplicable for: NvBlockSwComponentType.nvBlockDescriptor",
    "This element was generated/modified due to an atpVariation stereotype.\r\nApplicable for: PhysicalChannel.frameTriggering",
    "This element was generated/modified due to an atpVariation stereotype.\r\nApplicable for: PhysicalChannel.iSignalTriggering",
    "This element was generated/modified due to an atpVariation stereotype.\r\nApplicable for: PhysicalChannel.pduTriggering",
    "This element was generated/modified due to an atpVariation stereotype.\r\nApplicable for: PortInterfaceMappingSet.portInterfaceMapping",
    "This element was generated/modified due to an atpVariation stereotype.\r\nApplicable for: ProvidedServiceInstance.eventHandler",
    "This element was generated/modified due to an atpVariation stereotype.\r\nApplicable for: RapidPrototypingScenario.rptContainer\r\nApplicable for: RptContainer.rptContainer",
    "This element was generated/modified due to an atpVariation stereotype.\r\nApplicable for: ResourceConsumption.accessCountSet",
    "This element was generated/modified due to an atpVariation stereotype.\r\nApplicable for: ResourceConsumption.executionTime",
    "This element was generated/modified due to an atpVariation stereotype.\r\nApplicable for: ResourceConsumption.heapUsage",
    "This element was generated/modified due to an atpVariation stereotype.\r\nApplicable for: ResourceConsumption.memorySection",
    "This element was generated/modified due to an atpVariation stereotype.\r\nApplicable for: ResourceConsumption.sectionNamePrefix",
    "This element was generated/modified due to an atpVariation stereotype.\r\nApplicable for: ResourceConsumption.stackUsage",
    "This element was generated/modified due to an atpVariation stereotype.\r\nApplicable for: RptComponent.rptExecutableEntity",
    "This element was generated/modified due to an atpVariation stereotype.\r\nApplicable for: RptContainer.byPassPoint\r\nNot Applicable for: ApmcInstanceReferenceValue.value\r\nNot Applicable for: ApmcUpstreamDocInstanceReferenceValue.value\r\nNot Applicable for: ApmcUriInstanceReferenceValue.value\r\nNot Applicable for: Collection.collectedInstance\r\nNot Applicable for: Collection.sourceInstance\r\nNot Applicable for: DocumentationContext.feature\r\nNot Applicable for: EcucInstanceReferenceValue.value\r\nNot Applicable for: FlatInstanceDescriptor.ecuExtractReference\r\nNot Applicable for: FlatInstanceDescriptor.upstreamReference\r\nNot Applicable for: RptHook.rptArHook\r\nNot Applicable for: SecurityEventReportInstanceValue.object\r\nNot Applicable for: ViewMap.firstElementInstance\r\nNot Applicable for: ViewMap.secondElementInstance",
    "This element was generated/modified due to an atpVariation stereotype.\r\nApplicable for: RptContainer.rptHook",
    "This element was generated/modified due to an atpVariation stereotype.\r\nApplicable for: RptExecutableEntity.rptExecutableEntityEvent",
    "This element was generated/modified due to an atpVariation stereotype.\r\nApplicable for: RptExecutableEntity.rptRead\r\nApplicable for: RptExecutableEntity.rptWrite\r\nNot Applicable for: McDataInstance.mcDataAssignment\r\nNot Applicable for: RptComponent.mcDataAssignment\r\nNot Applicable for: RptExecutableEntityEvent.mcDataAssignment",
    "This element was generated/modified due to an atpVariation stereotype.\r\nApplicable for: RptSupportData.rptComponent",
    "This element was generated/modified due to an atpVariation stereotype.\r\nApplicable for: RptSupportData.rptServicePoint",
    "This element was generated/modified due to an atpVariation stereotype.\r\nApplicable for: RuleArguments.vtf\r\nApplicable for: SwValues.vtf",
    "This element was generated/modified due to an atpVariation stereotype.\r\nApplicable for: RuleBasedValueSpecification.arguments",
    "This element was generated/modified due to an atpVariation stereotype.\r\nApplicable for: RunnableEntity.asynchronousServerCallResultPoint",
    "This element was generated/modified due to an atpVariation stereotype.\r\nApplicable for: RunnableEntity.dataReadAccess\r\nApplicable for: RunnableEntity.dataReceivePointByArgument\r\nApplicable for: RunnableEntity.dataReceivePointByValue\r\nApplicable for: RunnableEntity.dataSendPoint\r\nApplicable for: RunnableEntity.dataWriteAccess\r\nApplicable for: RunnableEntity.readLocalVariable\r\nApplicable for: RunnableEntity.writtenLocalVariable\r\nNot Applicable for: ReceiverComSpec.replaceWith",
    "This element was generated/modified due to an atpVariation stereotype.\r\nApplicable for: RunnableEntity.externalTriggeringPoint",
    "This element was generated/modified due to an atpVariation stereotype.\r\nApplicable for: RunnableEntity.internalTriggeringPoint",
    "This element was generated/modified due to an atpVariation stereotype.\r\nApplicable for: RunnableEntity.modeAccessPoint",
    "This element was generated/modified due to an atpVariation stereotype.\r\nApplicable for: RunnableEntity.modeSwitchPoint",
    "This element was generated/modified due to an atpVariation stereotype.\r\nApplicable for: RunnableEntity.parameterAccess",
    "This element was generated/modified due to an atpVariation stereotype.\r\nApplicable for: RunnableEntity.serverCallPoint",
    "This element was generated/modified due to an atpVariation stereotype.\r\nApplicable for: RunnableEntityGroup.runnableEntity",
    "This element was generated/modified due to an atpVariation stereotype.\r\nApplicable for: RunnableEntityGroup.runnableEntityGroup",
    "This element was generated/modified due to an atpVariation stereotype.\r\nApplicable for: SdgContents.sdg\r\nNot Applicable for: AdminData.sdg\r\nNot Applicable for: BuildActionEnvironment.sdg\r\nNot Applicable for: BuildActionInvocator.sdg\r\nNot Applicable for: BuildActionIoElement.sdg\r\nNot Applicable for: FileInfoComment.sdg\r\nNot Applicable for: RptHook.sdg\r\nNot Applicable for: VariationPoint.sdg",
    "This element was generated/modified due to an atpVariation stereotype.\r\nApplicable for: SecurityEventContextDataDefinition.contextDataElement\r\nNot Applicable for: SecurityEventContextDataElement.nestedContextData",
    "This element was generated/modified due to an atpVariation stereotype.\r\nApplicable for: SecurityEventContextMapping.mappedSecurityEvent",
    "This element was generated/modified due to an atpVariation stereotype.\r\nApplicable for: SecurityEventContextProps.contextData",
    "This element was generated/modified due to an atpVariation stereotype.\r\nApplicable for: ServiceDependency.assignedDataType",
    "This element was generated/modified due to an atpVariation stereotype.\r\nApplicable for: ServiceInstanceCollectionSet.serviceInstance\r\nNot Applicable for: ApplicationEndpoint.consumedServiceInstance\r\nNot Applicable for: ApplicationEndpoint.providedServiceInstance",
    "This element was generated/modified due to an atpVariation stereotype.\r\nApplicable for: ServiceInterfaceDeployment.eventDeployment\r\nNot Applicable for: DdsFieldDeployment.notifier\r\nNot Applicable for: SomeipFieldDeployment.notifier\r\nNot Applicable for: UserDefinedFieldDeployment.notifier",
    "This element was generated/modified due to an atpVariation stereotype.\r\nApplicable for: ServiceInterfaceDeployment.fieldDeployment",
    "This element was generated/modified due to an atpVariation stereotype.\r\nApplicable for: ServiceInterfaceDeployment.methodDeployment\r\nNot Applicable for: SomeipFieldDeployment.get\r\nNot Applicable for: SomeipFieldDeployment.set\r\nNot Applicable for: UserDefinedFieldDeployment.get\r\nNot Applicable for: UserDefinedFieldDeployment.set",
    "This element was generated/modified due to an atpVariation stereotype.\r\nApplicable for: SoAdConfig.connection\r\nNot Applicable for: SocketConnectionBundle.bundledConnection",
    "This element was generated/modified due to an atpVariation stereotype.\r\nApplicable for: SoAdConfig.connectionBundle",
    "This element was generated/modified due to an atpVariation stereotype.\r\nApplicable for: SoAdConfig.logicAddress",
    "This element was generated/modified due to an atpVariation stereotype.\r\nApplicable for: SoAdConfig.socketAddress",
    "This element was generated/modified due to an atpVariation stereotype.\r\nApplicable for: SocketAddress.staticSocketConnection",
    "This element was generated/modified due to an atpVariation stereotype.\r\nApplicable for: SubElementMapping.firstElement\r\nApplicable for: SubElementMapping.secondElement",
    "This element was generated/modified due to an atpVariation stereotype.\r\nApplicable for: SwComponentType.port",
    "This element was generated/modified due to an atpVariation stereotype.\r\nApplicable for: SwComponentType.portGroup",
    "This element was generated/modified due to an atpVariation stereotype.\r\nApplicable for: SwcBswMapping.runnableMapping",
    "This element was generated/modified due to an atpVariation stereotype.\r\nApplicable for: SwcBswMapping.synchronizedModeGroup",
    "This element was generated/modified due to an atpVariation stereotype.\r\nApplicable for: SwcBswMapping.synchronizedTrigger",
    "This element was generated/modified due to an atpVariation stereotype.\r\nApplicable for: SwcImplementation.perInstanceMemorySize",
    "This element was generated/modified due to an atpVariation stereotype.\r\nApplicable for: SwcInternalBehavior.event",
    "This element was generated/modified due to an atpVariation stereotype.\r\nApplicable for: SwcInternalBehavior.exclusiveAreaPolicy",
    "This element was generated/modified due to an atpVariation stereotype.\r\nApplicable for: SwcInternalBehavior.perInstanceMemory",
    "This element was generated/modified due to an atpVariation stereotype.\r\nApplicable for: SwcInternalBehavior.portAPIOption",
    "This element was generated/modified due to an atpVariation stereotype.\r\nApplicable for: SwcInternalBehavior.runnable",
    "This element was generated/modified due to an atpVariation stereotype.\r\nApplicable for: SwcInternalBehavior.serviceDependency\r\nNot Applicable for: AdaptiveSwcInternalBehavior.serviceDependency",
    "This element was generated/modified due to an atpVariation stereotype.\r\nApplicable for: System.j1939SharedAddressCluster",
    "This element was generated/modified due to an atpVariation stereotype.\r\nApplicable for: System.mapping",
    "This element was generated/modified due to an atpVariation stereotype.\r\nApplicable for: System.rootSoftwareComposition",
    "This element was generated/modified due to an atpVariation stereotype.\r\nApplicable for: SystemMapping.applicationPartitionToEcuPartitionMapping",
    "This element was generated/modified due to an atpVariation stereotype.\r\nApplicable for: SystemMapping.comManagementMapping",
    "This element was generated/modified due to an atpVariation stereotype.\r\nApplicable for: SystemMapping.cryptoServiceMapping",
    "This element was generated/modified due to an atpVariation stereotype.\r\nApplicable for: SystemMapping.dataMapping",
    "This element was generated/modified due to an atpVariation stereotype.\r\nApplicable for: SystemMapping.ddsISignalToTopicMapping",
    "This element was generated/modified due to an atpVariation stereotype.\r\nApplicable for: SystemMapping.ecuResourceMapping",
    "This element was generated/modified due to an atpVariation stereotype.\r\nApplicable for: SystemMapping.mappingConstraint",
    "This element was generated/modified due to an atpVariation stereotype.\r\nApplicable for: SystemMapping.pncMapping",
    "This element was generated/modified due to an atpVariation stereotype.\r\nApplicable for: SystemMapping.resourceEstimation",
    "This element was generated/modified due to an atpVariation stereotype.\r\nApplicable for: SystemMapping.signalPathConstraint",
    "This element was generated/modified due to an atpVariation stereotype.\r\nApplicable for: SystemMapping.softwareClusterToApplicationPartitionMapping\r\nNot Applicable for: CpSoftwareClusterMappingSet.softwareClusterToApplicationPartitionMapping",
    "This element was generated/modified due to an atpVariation stereotype.\r\nApplicable for: SystemMapping.swClusterMapping",
    "This element was generated/modified due to an atpVariation stereotype.\r\nApplicable for: SystemMapping.swImplMapping",
    "This element was generated/modified due to an atpVariation stereotype.\r\nApplicable for: SystemMapping.swMapping",
    "This element was generated/modified due to an atpVariation stereotype.\r\nApplicable for: SystemMapping.systemSignalGroupToComResourceMapping",
    "This element was generated/modified due to an atpVariation stereotype.\r\nApplicable for: SystemMapping.systemSignalToComResourceMapping",
    "This element was generated/modified due to an atpVariation stereotype.\r\nApplicable for: TDCpSoftwareClusterMappingSet.tdCpSoftwareClusterResourceToTdMapping",
    "This element was generated/modified due to an atpVariation stereotype.\r\nApplicable for: TDCpSoftwareClusterMappingSet.tdCpSoftwareClusterToTdMapping",
    "This element was generated/modified due to an atpVariation stereotype.\r\nApplicable for: Tbody.row",
    "This element was generated/modified due to an atpVariation stereotype.\r\nApplicable for: TimingExtension.timingClock",
    "This element was generated/modified due to an atpVariation stereotype.\r\nApplicable for: TimingExtension.timingClockSyncAccuracy",
    "This element was generated/modified due to an atpVariation stereotype.\r\nApplicable for: TimingExtension.timingCondition",
    "This element was generated/modified due to an atpVariation stereotype.\r\nApplicable for: TimingExtension.timingDescription",
    "This element was generated/modified due to an atpVariation stereotype.\r\nApplicable for: TimingExtension.timingGuarantee\r\nApplicable for: TimingExtension.timingRequirement",
    "This element was generated/modified due to an atpVariation stereotype.\r\nApplicable for: TimingExtensionResource.timingArgument\r\nNot Applicable for: TDEventOccurrenceExpression.argument",
    "This element was generated/modified due to an atpVariation stereotype.\r\nApplicable for: TimingExtensionResource.timingMode\r\nNot Applicable for: TDEventOccurrenceExpression.mode",
    "This element was generated/modified due to an atpVariation stereotype.\r\nApplicable for: TimingExtensionResource.timingVariable\r\nNot Applicable for: TDEventOccurrenceExpression.variable",
    "This element was generated/modified due to an atpVariation stereotype.\r\nApplicable for: TopicContent.table\r\nNot Applicable for: TraceableTable.table",
    "This element was generated/modified due to an atpVariation stereotype.\r\nApplicable for: TopicOrMsrQuery.topic1\r\nNot Applicable for: MsrQueryResultTopic1.topic1",
    "This element was generated/modified due to an atpVariation stereotype.\r\nApplicable for: TransformationTechnology.transformationDescription",
    "This establishes a subschapter.\r\nThe upper multiplicity of this role has been increased to * due to resolving an atpVariation stereotype. The previous value was 1.",
    "This establishes the reference in Autosar style",
    "This explicitly specifies, that the upper multiplicity is NOT restricted. Note: The use of 'upperMultiplicityInfinite' and 'upperMultiplicity' is mutual exclusive.",
    "This flag is set if the PortInterface is to be used for\r\ncommunication between an\r\n* ApplicationSwComponentType or\r\n* ServiceProxySwComponentType or\r\n* SensorActuatorSwComponentType or\r\n* ComplexDeviceDriverSwComponentType\r\n* ServiceSwComponentType\r\n* EcuAbstractionSwComponentType\r\n\r\nand a ServiceSwComponentType (namely an\r\nAUTOSAR Service) located on the same ECU.\r\nOtherwise the flag is not set.",
    "This flag is set if the PortInterface is to be used for communication between an\r\n* ApplicationSwComponentType or\r\n* ServiceProxySwComponentType or\r\n* SensorActuatorSwComponentType or\r\n* ComplexDeviceDriverSwComponentType\r\n* ServiceSwComponentType\r\n* EcuAbstractionSwComponentType\r\n\r\nand a ServiceSwComponentType (namely an AUTOSAR Service) located on the same ECU. Otherwise the flag is not set.",
    "This group of RunnableEntities does not require stability with respect to the implicit communication behavior.",
    "This group of RunnableEntities requires stability with respect to the implicit communication behavior, i.e. all read and write access to VariableDataPrototypes in the DataPrototypeGroup by the RunnableEntitys of the RunnableEntityGroup need to be handled in a stable manner.",
    "This group of VariableDataPrototypes does not require coherency with respect to the implicit communication behavior.",
    "This group of VariableDataPrototypes requires coherency with respect to the implicit communication behavior, i.e. all read and write access to VariableDataPrototypes in the DataPrototypeGroup by the RunnableEntitys of the RunnableEntityGroup need to be handled in a coherent manner.",
    "This identifies the J1939Clusters that share a common address space",
    "This identifies the PPortPrototype for which the AbstractDoIpPortMapping is applicable.",
    "This identifies the RPortPrototype for which the AbstractDoIpPortMapping is applicable.",
    "This identifies the applicable protocol.",
    "This identifies the mapped security event.",
    "This identifies the related attribute of a BlueprintPolicy. For navigation over the model a subset of xpath expressions is used.",
    "This identifies the rootSoftwareComposition if the instanceRef is modelled in the System context.",
    "This indicates an engineering object. The AclPermission relates to all objects in this partial model.\r\n\r\nThis also implies that the other objects in this set shall be placed in the specified engineering object. \r\n\r\nNote that semantic constraints apply with respect to <<atpSplitable>>",
    "This indicates that the call point is located at the deepest level inside one or more ExclusiveAreas that are nested in the given order.",
    "This indicates that the referenced query shall return a string.",
    "This indicates that the related operations are also implied. Therefore the permission is also granted for this operation.",
    "This indicates that the relevant objects are specified via a collection.",
    "This indicates that the target of the applicable reference can be resolved via the non-qualified shortName. This requires that the shortName of the target is unique within the package referenced in the reference base.\r\n\r\nThe default is false.\r\n\r\nNote that the reference base also maintains a list of elements which may be referenced using a \"global Reference\".",
    "This indicates that this base is established by the current package. In this case  the association \"package\" can be derived as the qualified shortName of the enclosing package. \r\n\r\nIf  the value of baseIsThisPackage is set to true then one of the following shall be true:\r\n\r\n* target of the association \"package\" shall be the enclosing package.\r\n* association \"package\" is omitted.",
    "This indicates the scope of applied permissions: explicit, descendant, dependent;",
    "This indicates whether the corresponding dataElement shall be transmitted using end-to-end protection.",
    "This indicates whether the corresponding dataElement shall be transmitted using end-to-end protection.\r\n\r\nCaveat: The E2E wrapper approach involves technologies that are not subjected to the AUTOSAR standard and is superseded by the superior E2E transformer approach (which is fully standardized by AUTOSAR). Hence, new projects (without legacy constraints due to carry-over parts) shall use the fully standardized E2E transformer approach.",
    "This instance ref denotes the Timing Event for which the period shall be refined on an instance level.",
    "This instance ref supports the use case that a particular instance is part of the collection.\r\nThis aggregation contains a variation point although it is not variant. Therefore, this variation point shall not exist in models. See constr_2638.",
    "This instance reference is used if the calibration parameter is either imported via a port or is part of a composite data structure.",
    "This instanceRef identifies an AtpFeature outside of the target-configuration that sparked the existence of the owner of the reference.\r\n\r\nThe referenced model element does not need to exist in the current model scope. The reference itself carries a semantics of being an identifying factor, even without the target element to exist.\r\nThis aggregation contains a variation point although it is not variant. Therefore, this variation point shall not exist in models. See constr_2638.",
    "This instanceRef identifies an AtpFeature outside of the target-configuration that sparked the existence of the owner of the reference.\r\nThis aggregation contains a variation point although it is not variant. Therefore, this variation point shall not exist in models. See constr_2638.",
    "This instanceRef identifies an AtpFeature outside of the target-configuration.\r\nThis aggregation contains a variation point although it is not variant. Therefore, this variation point shall not exist in models. See constr_2638.",
    "This instanceRef identifies the DataPrototype that is supposed to be accessed in the context of the operation argument.",
    "This instanceRef identifies the PPortPrototype on which the service shall be offered.",
    "This instanceRef identifies the PPortPrototype over which the notification is to be conveyed.",
    "This instanceRef identifies the PortPrototype from which the relevant information for the environment condition can be obtained. This InstanceRef is only relevant for the adaptive platform.",
    "This instanceRef identifies the PortPrototype over which the security event is reported.",
    "This instanceRef identifies the RPortPrototype on which the service shall be found.",
    "This instanceRef represent the ability to access a data element owned by the application software on the AUTOSAR classic platform.",
    "This is a RTEEvent specified for the particular SwcInternalBehavior.\r\n\r\nThe aggregation of RTEEvent is subject to variability with the purpose to support the conditional existence of RTE events. Note: the number of RTE events might vary due to the conditional existence of PortPrototypes using DataReceivedEvents or due to different scheduling needs of algorithms.",
    "This is a RunnableEntity specified for the particular SwcInternalBehavior.\r\n\r\nThe aggregation of RunnableEntity is subject to variability with the purpose to support the conditional existence of RunnableEntities. Note: the number of RunnableEntities might vary due to the conditional existence of PortPrototypes using DataReceivedEvents or due to different scheduling needs of algorithms.",
    "This is a context in case there are subelements with explicit types. The reference has to be ordered to properly reflect the nested structure.",
    "This is a cross reference.",
    "This is a crossreference within a verbatim text. The attributes may disturb the arrangement of the text. It is subject to the author to keep this under control.",
    "This is a foot note within a paragraph.",
    "This is a formula in the definition block.\r\nThe upper multiplicity of this role has been increased to * due to resolving an atpVariation stereotype. The previous value was 1.",
    "This is a keyword identifying the mathematical method to be applied for interpolation. The keyword needs to be related to the interpolation routine which needs to be invoked.",
    "This is a list of statuses which shall trigger the RecoveryNotification of this HealthChannelExternalStatus.",
    "This is a non variant Value. It is provided for sake of Compatibility to ASAM CDF.",
    "This is a parameter table within a chapter.",
    "This is a particular numerical value without variation.",
    "This is a particular row in a table.",
    "This is a refeernce to a standard.",
    "This is a reference to a foreign model element. Note that it is not modeled as an association because it should also be able to refer also to non AUTOSAR models.",
    "This is a reference to a generic model element. Note that it is not modeled as an association because it should also be able to refer also to non AUTOSAR models.",
    "This is a reference to a printable external document.",
    "This is a revision label denoting a particular version of the engineering object.",
    "This is a sample item. This sample is used by a rendering system to measure out the width of indentation. Since this depends on the particular fontsize etc. the indentation cannot be specified e.g. in mm.",
    "This is a target ImplementationDataTypeElement in case that the rootDataPrototype is composite and the target is a subElement of the rootDataPrototype.",
    "This is a target ImplementationDataTypeElement in case that the rootDataPrototype is composite and the target of ImplementationCompositeDataTypeSubElementInSwcRef is a subElement of the rootDataPrototype.",
    "This is a technical term.",
    "This is an URL which allows to represent users or organizations taking the particular role.",
    "This is an element in the collection. Note that Collection itself is collectable. Therefore collections can be nested.\r\n\r\nIn case of category=\"RELATION\" this represents the target end of the relation.",
    "This is an identifiable object which is part of the context of the documentation.",
    "This is an index entry.",
    "This is argument and properties of the DocumentationBlock query.",
    "This is argument and properties of the chapter query.",
    "This is argument and properties of the paragraph query.",
    "This is argument and properties of the topic query.",
    "This is attributes characterizes the kind of dependency",
    "This is emphasis text.",
    "This is emphasized text",
    "This is emphasized text.",
    "This is emphsized text. Note that in verbatim, the attribute font should not be considered since verbatim is always rendered as monospace font.",
    "This is is one particular postbuild variant criterion/value pair being part of the PostBuildVariantSet.",
    "This is one entry in the definition list.",
    "This is one entry in the list of numerical values",
    "This is one particular EcucDestinationUriDef.",
    "This is one particular EcucQuery used in the calculation formula.",
    "This is one particular EndToEndProtection.",
    "This is one particular argument value used in the expression formula.",
    "This is one particular association between an ApplicationDataType and its AbstractImplementationDataType.",
    "This is one particular association between an ModeDeclarationGroup and its AbstractImplementationDataType.",
    "This is one particular chapter in the query result.\r\nThis aggregation contains a variation point although it is not variant. Therefore, this variation point shall not exist in models. See constr_2638.",
    "This is one particular interpolation routine which is mapped to the record layout.",
    "This is one particular keyword in the keyword set.",
    "This is one particular mapping accociation of a ServiceInstance to a number of ISignalTriggerings,",
    "This is one particular mode used in the expression formula.",
    "This is one particular paragraph.\r\nThe upper multiplicity of this role has been increased to * due to resolving an atpVariation stereotype. The previous value was 1.",
    "This is one particular rule within the data constraints.",
    "This is one particular scale which contributes to the data constraints.",
    "This is one particular special data element.",
    "This is one particular timing description event used in the expression formula.",
    "This is one particular value of a system constant.",
    "This is one particular variable value used in the expression formula.",
    "This is one step in the navigation path specified by the instance ref.",
    "This is only applicable in SET operations. If it is enabled, the IoHwAbstraction layer will monitor the result of the operation and issue an diagnostic signal. This means especially, that an additional client-server port has to be created. Tools can use this information to cross-check whether for each data-element in a SET operation with FailureMonitoring enabled an additional port is created\r\n\r\nThe referenced port monitors a failure in the to be monitored VariableDataPrototype of the IoHwAbstraction layer. The referenced port has to be another port of the same Actuator or Sensor Component.",
    "This is subscript text.",
    "This is superscript text",
    "This is superscript text.",
    "This is supposed to represent a reference to a BswServiceDependency. the latter is not derived from Referrable and therefore this detour needs to be implemented to still let BswServiceDependency become the target of a reference.",
    "This is the EcucQuery used in the calculation formula or the condition formula.",
    "This is the PortInterface that contains the rootDataPrototype.",
    "This is the RTEEvent this WaitPoint is waiting for.",
    "This is the Software Component Prototype providing/receiving the referenced DataPrototype.",
    "This is the SystemSignal taken to transport the Trigger over the network.",
    "This is the base type of one character in the string. In particular this baseType denotes the intended encoding of the characters in the string  on level of ApplicationDataType.",
    "This is the collection of SwComponentPrototypeAssignments",
    "This is the compuMethod which is expected for the axis. It is used in early stages if the particular input-value is not yet available.",
    "This is the content of the documentation related to the specified contexts.",
    "This is the context in a compositeDataType.",
    "This is the context of the particular documentation.",
    "This is the corresponding AbstractImplementationDataType.",
    "This is the corresponding AbstractImplementationDataType. It shall be modeled along the idea of an \"unsigned integer-like\" data type.",
    "This is the corresponding ApplicationDataType",
    "This is the corresponding ModeDeclarationGroup.",
    "This is the criterion which needs to match the value in order to make the PostbuildVariantCondition to be true.",
    "This is the data prototype for which the init value applies",
    "This is the dataElement associated with the DiagnosticDataIdentifier.",
    "This is the datatype of the calibration parameter providing the shared axis.",
    "This is the datatype of the input value for the axis. This allows to define e.g. a type of curve, where the input value is finalized at the access point.",
    "This is the denominator of the expression.",
    "This is the expression describing the dependency on a specific condition.",
    "This is the expression formula which is used to describe the occurrence expression.",
    "This is the factor for the conversion from SI Units to units. \r\n\r\nThe inverse is used for conversion from units to SI Units.",
    "This is the full qualified name of the model element",
    "This is the headline for the annotation.",
    "This is the init value for the particular data prototype.",
    "This is the init value for the particular data prototype.\r\nThis aggregation contains a variation point although it is not variant. Therefore, this variation point shall not exist in models. See constr_2638.",
    "This is the initial value specification structured according to the ApplicationDataType\r\nThis aggregation contains a variation point although it is not variant. Therefore, this variation point shall not exist in models. See constr_2638.",
    "This is the initial value specification structured according to the ImplementationDataType\r\nThis aggregation contains a variation point although it is not variant. Therefore, this variation point shall not exist in models. See constr_2638.",
    "This is the interface for which the blueprint is defined. It may be a blueprint itself  or a standardized PortInterface",
    "This is the inverse value of the constraint. This supports the case that the scale is not reversible per se.",
    "This is the label of the item.",
    "This is the long name in one particular language.",
    "This is the main part of the table segment, called the table body.",
    "This is the measurement unit. Note that due to the fact that Prm is also available outside of MSRSW / AUTOSAR, this is not a formal reference  to a unit.",
    "This is the name of an individual or an organization who issued the current revision of the document or document fragment.",
    "This is the name of the interpolation method which is implemented by the referenced bswModuleEntry. It corresponds to swInterpolationMethod in SwDataDefProps.",
    "This is the name of the reference base. By this name, particular references can denote the applicable base.",
    "This is the numerator of the rational expression.",
    "This is the numerical identifier used to identify the DiagnosticAbstractDataIdentifier in the scope of diagnostic workflow",
    "This is the numerical identifier used to identify the DiagnosticParameterIdentifier in the scope of diagnostic workflow (see SAE J1979-DA).",
    "This is the numerical identifier used to identify the DiagnosticRoutine in the scope of diagnostic workflow",
    "This is the numerical identifier used to identify the DiagnosticSession in the scope of diagnostic workflow",
    "This is the offset for the conversion from and to siUnits.",
    "This is the paragraph content in one partiucular language.",
    "This is the particular value of a system constant. It is specified as Numerical. Further restrictions may apply by the definition of the system constant.\r\n\r\nThe value attribute defines the internal value of the SwSystemconst as it is processed  in the Formula Language.",
    "This is the particular value of the post-build variant criterion.",
    "This is the physical unit of the Physical values for which the CompuMethod applies.",
    "This is the plain text in one particular language.",
    "This is the port providing the parameter or the entry point to the parameter structure.",
    "This is the port providing the variable or the entry point to the variable structure.",
    "This is the port providing/receiving the referenced DataPrototype.",
    "This is the port providing/receiving the root of the AutosarDataPrototype.",
    "This is the port providing/receiving the root of the variable",
    "This is the postBuildVariantCriterionValueSet contributing to the predefinded variant.",
    "This is the reference to the instanceRef definition.",
    "This is the role of the assigned BswModuleEntry in the given context. The attribute is required (for example) because different kind of callbacks may be associated with the same ServiceNeeds (e.g. end-notification vs. error-notification).\r\n\r\nThe value shall be the role name of a configurable function call (usually a callback) as standardized in the Software Specification of the related AUTOSAR Service.",
    "This is the role of the assigned Port in the given context.\r\n\r\nThe value shall be a shortName of the Blueprint of a PortInterface as standardized in the Software Specification of the related AUTOSAR Service.",
    "This is the role of the assigned data in the given context. \r\n\r\nPossible values need to be specified on M1 level. Additionally the TPS Software Component Template provides a list of applicable roles for various service dependencies and service use cases in chapter 13 \"Service Dependencies and Service Use Cases\" (e.g., ramBlock in case of the needs for a permanent RAM block).",
    "This is the role of the assignment data type in the given context.\r\nThe upper multiplicity of this role has been increased to * due to resolving an atpVariation stereotype. The previous value was 1.",
    "This is the role of the associated data type in the given context.",
    "This is the scheduling priority requested by the application itself.",
    "This is the session value for P2*ServerMax in seconds (per Session Control).\r\n\r\nThe AUTOSAR configuration standard is to use SI units, so this parameter is defined as a float value in seconds.",
    "This is the session value for P2ServerMax in seconds (per Session Control).\r\n\r\nThe AUTOSAR configuration standard is to use SI units, so this parameter is defined as a float value in seconds.",
    "This is the set of post build variant conditions which all  shall be fulfilled in order to (postbuild) bind the variation point.",
    "This is the short name of the engineering object.",
    "This is the short name of the engineering object. Note that it is modeled as NameToken and not as Identifier since in ASAM-CC it is also a NameToken.",
    "This is the software cluster that provides the temporal and dynamic resource.",
    "This is the software cluster that requests the temporal and dynamic resource.",
    "This is the system constant to which the value applies.",
    "This is the target of the instance ref.",
    "This is the target of the instance ref. Note that it shall be one of ApplicationCompositeElementDataPrototype of VariableDataPrototype.",
    "This is the target parameter element. Note that this must be nested in ParameterDataPrototype.\r\nThe target must be one of ParameterDataPrototype, ApplicationCompositeElementDataPrototype.",
    "This is the target reference to a subElement that is defined inside of the rootDataPrototype.",
    "This is the text of the annotation.",
    "This is the top level package in an AUTOSAR model.",
    "This is the top level record layout group.",
    "This is the unit to which the physical constraints relate to. In particular, it is the physical unit of the specified limits.",
    "This is the value itself.",
    "This is the value itself.\r\n\r\nNote that vt uses the | operator to separate the values for the different bitfield masks in case that the semantics of the related DataPrototype is described by means of a BITFIELD_TEXTTABLE in the associated CompuMethod.",
    "This is the value of a textual parameter",
    "This is the value of the special data.",
    "This is the version info of the ModuleDef ECUC Parameter definition to which this values conform to / are based on.\r\n\r\nFor the Definition of ModuleDef ECUC Parameters the AdminData shall be used to express the semantic changes. The compatibility rules between the definition and value revision labels is up to the module's vendor.",
    "This is used if the target variable is inside of variableDataPrototype typed by an ImplementationDataType.",
    "This is used to create particular topics within a chapter. A topic is similar to a subchapter, but cannot be nested and will not appear in the table of contents of the document.\r\nThe upper multiplicity of this role has been increased to * due to resolving an atpVariation stereotype. The previous value was 1.",
    "This is used to describe the specific event type of a TDEventFrameEthernet.",
    "This ist the context in a compositeDataType.",
    "This ist the set of Systemconstant Values contributing to the predefined variant.",
    "This label allows to give the valueGroup a particular name. It can be used if the Values are rendered as a table.",
    "This label can be used to superseed the default label specified by the noteType attribute. It is in particular useful for noteType=\"other\".",
    "This logical operator can be used to relate the results of different SoftwareClusterDependencyParts.",
    "This mapping allows for the text-table translation between the physicalProps defined for the SystemSignal and a receiving DataPrototype that is defined in the PortPrototype.",
    "This mapping allows for the text-table translation between the sending DataPrototype that is defined in the PortPrototype and the physicalProps defined for the SystemSignal.",
    "This mapping identifies a PortPrototype typed by a DiagnosticValidationInterface in which a manufacturer/supplier-specific check is executed.",
    "This means that the executable entity can enter/leave the referenced exclusive area through explicit API calls.",
    "This means that the executable entity can enter/leave the referenced exclusive area through explicit API calls.\r\nThis property was modified due to atpVariation (DirectedAssociationPattern).",
    "This meta-class has the ability to represent a crypto service use case.",
    "This meta-class represents the PortPrototype part of the mapping from crypto need to PortPrototype.",
    "This meta-class represents the ability to map a server PortPrototype to a Ethernet-based communication channel.",
    "This meta-class represents the crypto need part of the mapping from crypto need to PortPrototype.",
    "This metaclass represents one particular variant which was evaluated. LowerMultiplicity is set to 0 to support a stepwise approach.",
    "This min or max has not to be mismatched with the min- and max for data-value in a compu-method. For example, this annotation\r\nshows when the result of the calculation performed in a RunnableEntity owned by one AtomicSwComponentType is transmitted to another AtomicSwComponentType whose RunnableEntity will use this value as a limit, e.g. the max.power which can be used by that software-component, or the current min. slip.",
    "This optional aggregation is used to describe NmUserData that is transmitted in the NmPdu.  The counting of the startPosition starts at the beginning of the NmPdu regardless whether Cbv or Nid are used.\r\nThis aggregation contains a variation point although it is not variant. Therefore, this variation point shall not exist in models. See constr_2638.",
    "This optional reference defines the remoteSubject that is allowed to access the defined Object via the Grant.",
    "This parameter defines the maximum number of retries (if retry is configured for the particular channel).",
    "This parameter defines the maximum number of trying to get a buffer (Transmit / Receive)",
    "This parameter defines the maximum number of trying to send a frame when a TIMEOUT AR occurs (depending on whether retry is configured).",
    "This parameter defines the maximum number of trying to send a frame when a TIMEOUT AS occurs (depending on whether retry is configured)",
    "This parameter defines the maximum number of trying to send a frame when the FrIf returns an error",
    "This parameter defines the number of PDUs that shall be reserved for this connection when it is active. The range is 1-255.",
    "This parameter defines the order of the bytes of the signal and the packing into the SignalIPdu. The byte ordering \"Little Endian\" (MostSignificantByteLast), \"Big Endian\" (MostSignificantByteFirst) and \"Opaque\" can be selected. For opaque data endianness conversion shall be configured to Opaque.\r\nThe value of this attribute impacts the absolute position of the signal into the SignalIPdu (see the startPosition attribute description). \r\n\r\nFor an ISignalGroup the packingByteOrder is irrelevant and shall be ignored.",
    "This parameter defines the time in seconds which the NM Coordination algorithm shall delay the release of the referenced cluster.",
    "This parameter defines the time of waiting for the next try to get a Tx or Rx buffer.\r\n\r\nThis parameter is equivalent to the temporal distance between two FC.WT N-Pdus in case the buffer request returns busy.\r\n\r\nSpecified in seconds.",
    "This parameter defines the time of waiting for the next try to send. Specified in seconds.",
    "This parameter defines the timeout for waiting for an FC or AF on the sender side in an 1:1 connection. Specified in seconds.",
    "This parameter defines the timeout in seconds for waiting for an FC or AF on the sender side in a 1:1 connection.",
    "This parameter defines the timeout value for waiting for a CF or FF-x (in case of retry) after receiving the last CF or after sending an FC or AF on the receiver side. Specified in seconds.",
    "This parameter defines the timeout value in seconds for waiting for a CF or FF-x (in case of retry) after receiving the last CF or after sending an FC or AF on the receiver side. Specified in seconds.",
    "This parameter defines the timout for waiting for an FC or AF on the sender side in an 1:1 connection. Specified in seconds.",
    "This parameter defines the type of acknowledgement which is used for the specific channel.",
    "This parameter is necessary to describe the bitposition of a signal within an SignalIPdu.\r\nIt denotes the least significant bit for \"Little Endian\" and the most significant bit for \"Big Endian\" packed signals within the IPdu (see the description of the packingByteOrder attribute). In AUTOSAR the bit counting is always set to \"sawtooth\" and the bit order is set to \"Decreasing\". The bit counting in byte 0 starts with bit 0 (least significant bit). The most significant bit in byte 0 is bit 7.\r\n\r\nPlease note that the way the bytes will be actually sent on the bus does not impact this representation: they will always be seen by the software as a byte array.\r\n\r\nIf a mapping for the ISignalGroup is defined, this attribute is irrelevant and shall be ignored.",
    "This parameter is necessary to describe the position of the selector field within the IPdu.\r\n\r\nNote that the absolute position of the selectorField in the MultiplexedIPdu is determined by the definition of the selectorFieldByteOrder attribute of the Multiplexed Pdu. If Big Endian is specified, the start position indicates the bit position of the most significant bit in the IPdu. If Little Endian is specified, the start position indicates the bit position of the least significant bit in the IPdu. In AUTOSAR the bit counting is always set to \"sawtooth\" and the bit order is set to \"Decreasing\". The bit counting in byte 0 starts with bit 0 (least significant bit). The most significant bit in byte 0 is bit 7.\r\n\r\nIn a complete System Description this attribute is mandatory. If a MultiplexedPdu is received by a Pdu Gateway and is not delivered to the IPduM but routed directly to a bus interface then the content of the MulitplexedPdu doesn't need to be described in the System Extract/Ecu Extract. To support this use case the multiplicity is set to 0..1.",
    "This parameter is used to activate/deactivate the permanent storage of the \"TestFailed\" status bits.\r\n\r\ntrue: storage activated \r\n\r\nfalse: storage deactivated",
    "This parameter is used to activate/deactivate the permanent storage of the \"TestFailed\" status bits.\r\n\r\ntrue: storage activated \r\n\r\nfalse: storage deactivated\r\n\r\n'''begin restrict to AP'''\r\nOn the adaptive platform, this attribute shall always be set to true. \r\n'''begin restrict to AP'''",
    "This parameter limits the number of N-Pdus the sender is allowed to transmit within a FlexRay cycle.",
    "This parameter shall be set to indicate if the sleep of this network can be absolutely decided by the local node only and that no other nodes can oppose that decision.",
    "This parameter states the timeout between the PDU transmit request of the Transport Layer to the FlexRay Interface and the corresponding confirmation of the FlexRay Interface on the receiver side (for FC or AF). Specified in seconds.",
    "This property allows to explicitly assign the axis contents to a particular axis. It is specified by numbers where 1 corresponds to the x-axis.\r\nIt is also possible to derive the axis association from the sequence of the parent.",
    "This property allows to keep special data which is not represented by the standard model. It can be utilized to keep e.g. tool specific data.\r\nThis aggregation contains a variation point although it is not variant. Therefore, this variation point shall not exist in models. See constr_2638.",
    "This property allows to specify data definition properties in order to support the definition of e.g. computation formulae and data constraints.",
    "This property allows to specify data definition properties which apply on data prototype level.",
    "This property can be used to specify an output value for a conversion formula, if the value to be converted lies outside the plausibility limit. Although this is possible for all conversion formulae, it is especially valid for variables with tabular conversion formulae.",
    "This property denotes the one particular change which was performed on the object.",
    "This property describes how a number is to be rendered e.g. in documents or in a measurement and calibration system.",
    "This property represents one particular modification in comparison to its predecessor.",
    "This property represents the rationale for the particular change.",
    "This property specifies how the axis values shall be displayed e.g. in documents or in measurement and calibration tools.",
    "This property specifies the category of a particular axis.",
    "This property specifies the languages which are provided in the document. Therefore it should only be specified in the top level admin data. For each language provided in the document there is one entry in MultilanguagePlainText. The content of each entry can be used for illustration of the language. The used language itself depends on the language attribute in the entry.",
    "This property specifies, how the physical value shall be displayed e.g. in documents or measurement and calibration tools.",
    "This property was modified due to atpVariation (DirectedAssociationPattern).",
    "This provides a name to the particular variation point to support the RTE generator. It is necessary for supporting splitable aggregations and if binding time is later than codeGenerationTime, as well as some RTE conditions. It needs to be unique with in the enclosing Identifiables with the same ShortName.",
    "This provides the ability to add information why the value is set like it is.",
    "This reefrence identifies the layout of the WWH-OBD freeze frame.",
    "This referencce identifies the target container.",
    "This reference adds further execution characteristics for deterministic clients.",
    "This reference allows to configure a tcp port number.",
    "This reference allows to configure a udp port number.",
    "This reference assigns a TLV data ID to an element of an ApplicationRecordDataType  in the context of an argument to a method defined in the context of an enclosing ServiceInterface.",
    "This reference assigns a TLV datat ID to an element of an ApplicationRecordDataType of an event or a field  in the context of the enclosing ServiceInterface.",
    "This reference assigns a set of ConsumedServiceInstances to the ConsumedProvidedServiceInstanceGroup.\r\nThis property was modified due to atpVariation (DirectedAssociationPattern).",
    "This reference assigns a set of ProvidedServiceInstances to the ConsumedProvidedServiceInstanceGroup.\r\nThis property was modified due to atpVariation (DirectedAssociationPattern).",
    "This reference assigns a tlvDataId to a given argument of a ClientServerOperation.",
    "This reference associates the definition of a TLV data id with a given AbstractImplementationDataTypeElement.",
    "This reference associates the definition of a TLV data id with a given ApplicationRecordElement.",
    "This reference associates the definition of a TLV data id with a given CppImplementationDataTypeElement.",
    "This reference attributes a user of the enclosing crypto key slot design.",
    "This reference attributes an owner of the enclosing crypto key slot design.",
    "This reference can be taken to assign a CompuMethod of category TEXTTABLE  to the array. The texttable entries associate a textual value to an index number such that the element with that index number is represented by a symbolic name.",
    "This reference can be taken to identify the MachineDesign for which the final SoftwareCluster shall be developed.",
    "This reference can be taken to identify the machine for which the final SoftwareCluster shall be developed.",
    "This reference can be used in an early design phase to associate an element of a diagnostic extract with an existing provided CPSoftwareCluster.",
    "This reference can be used in an early design phase to associate an element of a diagnostic extract with an existing requested CPSoftwareCluster.",
    "This reference collects DiagnosticIumpr to a DiagnosticIumprDenominatorGroup.",
    "This reference collects DiagnosticIumpr to a DiagnosticIumprGroup.",
    "This reference contains the link to a function identifier within the FiM which is used by the monitor before delivering a result.",
    "This reference contributes to the identification of the context data element.\r\nThis property was modified due to atpVariation (DirectedAssociationPattern).",
    "This reference defines a remote multicast Address (IP Address, Port) that is used in a static configuration to setup the communication path between a service provider and service consumer.\r\nThis reference shall ONLY be used if the remote address is determined from the configuration and not at runtime from the Service Discovery.",
    "This reference defines a type reference.",
    "This reference defines an authentic local NetworkEndpoint in terms of IAM configuration.",
    "This reference defines an authentic remote NetworkEndpoint in terms of IAM configuration.",
    "This reference defines the BlockState in the collection BlockStateSet.",
    "This reference defines the GlobalTime Consumer which is synchronized with this Time Base.",
    "This reference defines the GlobalTime Provider which is synchronized with this Time Base.",
    "This reference defines the GlobalTimeMaster which is synchronized with this Time Base.",
    "This reference defines the GlobalTimeSlave which is synchronized with this Time Base.",
    "This reference defines the IdsmInstance onto which the security events are mapped.\r\nThis property was modified due to atpVariation (DirectedAssociationPattern).",
    "This reference defines the application mode request to be performed for one specific applicationModeMachine.",
    "This reference defines the authentication algorithm used for MAC generation and verification.",
    "This reference defines the filter chain to be applied to each of the referenced security events (depending on the reporting mode).\r\nThis property was modified due to atpVariation (DirectedAssociationPattern).",
    "This reference defines the function group mode request to be performed for one specific functionGroup.",
    "This reference defines the local TlsSecureComProps that are relevant for IAM.",
    "This reference defines the mode request to be performed for one specific machineModeMachine.",
    "This reference defines the multicast address or a multicast address resource where the events of the event group are received.\r\n\r\nIf the multicast address is determined via configuration and not at runtime via service discovery this reference points to the multicast address over which the events will be received.\r\n\r\nIf the multicast address is determined at runtime via service discovery this reference shall be used to define the necessary local multicast address resources, i.e. RAM space in the TcpIp module in which the multicast address is stored at runtime. Please note that in this case the referenced address may be defined as ANY UDP port and ANY IP address since the multicast address will be received at runtime. If several multicast addresses are considered to be used the ConsumedEventGroup shall point to different ApplicationEndpoint objects to reserve the necessary resources in the configuration.\r\nThis property was modified due to atpVariation (DirectedAssociationPattern).",
    "This reference defines the need to execute the DataTransformation <Mip>_<transformerId> functions of the transformation chain when communicating from the DataPrototypeMapping.firstDataPrototype to the DataPrototypeMapping.secondDataPrototype. \r\n\r\nThis reference also specifies the reverse DataTransformation <Mip>_Inv_<transformerId> functions of the transformation chain (i.e. from the DataPrototypeMapping.secondDataPrototype to the DataPrototypeMapping.firstDataPrototype) if the referenced DataTransformation is symmetric, i.e. attribute DataTransformation.dataTransformationKind is set to symmetric.",
    "This reference defines the order in which validations created by manufacturer are executed.",
    "This reference defines the order in which validations created by supplier are executed.",
    "This reference defines the order in which validations of SOVD requests are executed.",
    "This reference defines the remote address where the service provider is located. \r\nThis reference shall ONLY be used if the remote address is determined from the configuration and not at runtime from the Service Discovery.\r\nThis property was modified due to atpVariation (DirectedAssociationPattern).",
    "This reference defines the remote addresses of service consumers. \r\nThis reference shall ONLY be used if the remote address of the clients is determined from the configuration and not at runtime.\r\nThis property was modified due to atpVariation (DirectedAssociationPattern).",
    "This reference defines the remote multicast address of Service consumers.\r\n\r\nThis reference shall ONLY be used if the remote multicast address of the clients is determined from the configuration and not at runtime.\r\nThis property was modified due to atpVariation (DirectedAssociationPattern).",
    "This reference defines the remote multicast address of the Service provider.\r\n\r\nThis reference shall ONLY be used if the remote multicast address of the server is determined from the configuration and not at runtime.\r\nThis property was modified due to atpVariation (DirectedAssociationPattern).",
    "This reference defines the remote multicast subscribed addresses of service consumers. This reference shall ONLY be used if the remote address of the clients is determined from the configuration and not at runtime.\r\nThis property was modified due to atpVariation (DirectedAssociationPattern).",
    "This reference defines the remote unicast address of the Service provider.\r\n\r\nThis reference shall ONLY be used if the remote unicast address of the server is determined from the configuration and not at runtime.\r\nThis property was modified due to atpVariation (DirectedAssociationPattern).",
    "This reference defines the remote unicast addresses of Service consumers.\r\n\r\nThis reference shall ONLY be used if the remote unicast address of the clients is determined from the configuration and not at runtime.\r\nThis property was modified due to atpVariation (DirectedAssociationPattern).",
    "This reference defines the security event that is mapped and enriched by SecurityEventMappingProps with mapping dependent properties.\r\nThis property was modified due to atpVariation (DirectedAssociationPattern).",
    "This reference defines which DataPrototypes trigger the onChange transmission of the data.",
    "This reference dennotes the cryptographic primitives for providing authentication information in QSEv messages.",
    "This reference denoted data constraints applicable to the generic axis parameter.",
    "This reference denotes the assumed current state for the given compare rule for trigger values.",
    "This reference denotes the cryptographic key to be used by the cryptographic algorithm for providing authentication information in QSEv messages.",
    "This reference goes to context DataPrototypes. It is only required if indirections in the definition of the respective ImplementationDataType exist.",
    "This reference goes to either the event, field, or method argument in the role of a root element of a composite data structure typed by an ImplementationDataType.",
    "This reference goes to the SPN that shall be associated with a SystemSignal.",
    "This reference goes to the SystemSignal that shall be associated with an SPN.",
    "This reference has the status \"removed\" and is replaced by the SwcToApplicationPartitionMapping and ApplicationPartitionToEcuPartitionMapping.\r\n\r\nOld description:\r\nAn optional mapping of SWCs to Partitions. \r\nWith this mapping an OEM has the option to predefine an allocation in the System Design phase. The final and complete assignment is described in the OS Configuration.",
    "This reference identifes the applicable access permission.",
    "This reference identifes the corresponding collection of DiagnosticContributionSet.",
    "This reference identifies AdaptiveModuleInstantiations that need to be included with the SoftwareCluster in order to establish infrastructure required for the installation of the SoftwareCluster.",
    "This reference identifies AdaptivePlatformApplicationErrors as a possible error raised by the enclosing ClientServerOperation.",
    "This reference identifies an element of an ApplicationRecordDataType as an optional sub-element in the context of an argument to a method defined in the context of an enclosing ServiceInterface.",
    "This reference identifies an element of an ApplicationRecordDataType as an optional sub-element of an event or a field  in the context of the enclosing ServiceInterface.",
    "This reference identifies both the ModeDeclarationGroupPrototype and the\r\nModeDeclaration for the specific mode comparison.",
    "This reference identifies both the ModeDeclarationGroupPrototype and the ModeDeclaration for the specific mode comparison.",
    "This reference identifies model elements that are required to complete the manifest content.",
    "This reference identifies one or more PlatformHealthManagementContributions in the context of a PhmContributionToMachineMapping.",
    "This reference identifies optional arguments in the context of a ClientServerOperation.",
    "This reference identifies out arguments that shall have a meaning only if an error occurs.",
    "This reference identifies the  collection of applicable DiagnosticAuthRole",
    "This reference identifies the AbstractImplementationData Types that shall be supported for storing in a key-value storage in addition to the types already determined from tha aggregation of PersistencyDataElement.",
    "This reference identifies the AbstractImplementationDataTypes that shall be supported for storing in a key-value data base in addition to the types already referenced as PersistencyDataElement.",
    "This reference identifies the AdaptivePlatformServiceInstances for which the grant applies.",
    "This reference identifies the ClientServerOperation to be executed as part of a PHM recovery.",
    "This reference identifies the ComEventGrantDesign that the enclosing ComEventGrant was created from.",
    "This reference identifies the ComFieldGrantDesign that the enclosing ComFieldGrant was created from.",
    "This reference identifies the ComFindServiceGrantDesign that the enclosing ComFindServiceGrant was created from.",
    "This reference identifies the ComMethodGrantDesign that the enclosing ComMethodGrant was created from.",
    "This reference identifies the ComOfferServiceGrantDesign that the enclosing ComOfferServiceGrant was created from.",
    "This reference identifies the ComTriggerGrantDesign that the enclosing ComTriggerGrant was created from",
    "This reference identifies the CpSoftwareCluster to which the enclosing CpSoftwareClusterBinaryManifestDescriptor belongs,\r\n\r\nThe CpSoftwareClusterBinaryManifestDescriptor is defined in an integration phase while the referenced CpSoftwareCluster represents a design element. Therefore, it makes sense to use a reference rather than an aggregation in the relation of the two meta-classes.",
    "This reference identifies the CpSoftwareClusterResource (on design level)  that corresponds to the BinaryManifestResource (on integration level).",
    "This reference identifies the CryptoKeySlotDesign from which the referencing CryptoKeySlot was derived.",
    "This reference identifies the CryptoServiceQueue the processing of this SecOcCryptoServiceMapping shall be performed in.",
    "This reference identifies the DiagnosticContributionSet that is applicable for the referencing SoftwareCluster.",
    "This reference identifies the DiagnosticTroubleCodeUds that are relevant for the mapping.",
    "This reference identifies the DoIp logical address that shall be used to contact the diagnostic management in the SoftwareCluster derived from the enclosing SoftwareClusterDesign.",
    "This reference identifies the EcuInstance in which the resource pool is defined.",
    "This reference identifies the EcuInstance whose security events (of any type) shall be limited by the specific class of filters.\r\nThis property was modified due to atpVariation (DirectedAssociationPattern).",
    "This reference identifies the InterpolationRoutineMappingSets that are relevant in the context of the enclosing System.",
    "This reference identifies the Machine in the context of the PhmContributionToMachineMapping.",
    "This reference identifies the Machine in the context of the ProcessToMachineMapping.",
    "This reference identifies the MachineDesign in the context of the ProcessDesignToMachineDesignMapping.",
    "This reference identifies the ModeDeclarationGroup that defines the individual states that  that can be switched to.",
    "This reference identifies the ModeDeclarationGroup that shall be used in the API of the StateClientInterface.",
    "This reference identifies the PortPrototype over which the function group state switch shall be communicated.",
    "This reference identifies the PortPrototype to be addressed as part of a PHM recovery.",
    "This reference identifies the Process in the context of the ProcessToMachineMapping.",
    "This reference identifies the Process of the state client",
    "This reference identifies the ProcessDesign in the context of the ProcessDesignToMachineDesignMapping.",
    "This reference identifies the RawDataStreamGrantDesign that the enclosing RawDataStreamEventGrant was created from.",
    "This reference identifies the SoftwareActivationDependency to which the dependency/conflict applies.",
    "This reference identifies the SoftwareCluster that belongs to the SoftwarePackage. The nature of this relation is actually more like an aggregation than a reference. But the relation is still modelled as a reference because two ARElements cannot aggregate each other.",
    "This reference identifies the SoftwareCluster to which the dependency applies.",
    "This reference identifies the SoftwareCluster to which the dependency/conflict applies.",
    "This reference identifies the SoftwarePackage to be pre-activated in the enclosing SoftwarePackageStep.",
    "This reference identifies the SoftwarePackage to be processed in the enclosing SoftwarePackageStep.",
    "This reference identifies the SoftwarePackage to be verified in the enclosing SoftwarePackageStep.",
    "This reference identifies the SoftwarePackage(s) to be transferred in the enclosing SoftwarePackageStep.",
    "This reference identifies the SwcModeSwitchEvent that triggers the activity.",
    "This reference identifies the TlvDataIdDefinitions relevant for the enclosing SOMEIPTransformationISignalProps",
    "This reference identifies the TlvDataIdDefinitions relevant for the enclosing SOMEIPTransformationISignalProps.",
    "This reference identifies the TlvDataIdDefinitions relevant for the enclosing TransformationPropsToServiceInterfaceMapping.",
    "This reference identifies the UCM for which the rollout step applies.",
    "This reference identifies the [ARMetaClass{PhysicalDimensionMappingSet}] that is applicable in the context of the enclosing [ARMetaClass{CompositionSwComponentType}]. The [ARMetaClass{PhysicalDimensionMapping}]s contained in the [ARMetaClass{PhysicalDimensionMappingSet}] shall be taken into account for the assessment of the compatibility of [ARMetaClass{PhysicalDimension}]s in the context of creation of a [ARMetaClass{PortInterfaceMapping}] in the scope of the [ARMetaClass{CompositionSwComponentType}].",
    "This reference identifies the action item with which the state management wants to interact with network management.",
    "This reference identifies the applicable AdaptivePlatformServiceInstance for which the grant applies.",
    "This reference identifies the applicable CryptoKeySlotUsageDesign on system design level.",
    "This reference identifies the applicable CryptoKeySlotUserDesign on system design level.",
    "This reference identifies the applicable CryptoProvider.",
    "This reference identifies the applicable DeterministicSyncMaster.",
    "This reference identifies the applicable DiagnosticAuthTransmitCertificate service instance (via the aggregation in the role certificateEvaluation).",
    "This reference identifies the applicable DiagnosticFunctionIdentifier.",
    "This reference identifies the applicable DiagnosticIumpr.",
    "This reference identifies the applicable EthernetRawDataStream to which the enclosing EthernetRawDataStreamGrant shall apply.",
    "This reference identifies the applicable Grants for this CmModuleInstantiation.",
    "This reference identifies the applicable Grants for this IamModuleInstantiation.",
    "This reference identifies the applicable NmNetworkHandle in the context of the mapping.",
    "This reference identifies the applicable PPortPrototype from which that data is obtained. The reference has the ability to point into the component hierarchy (under possible consideration of the rootSoftwareComposition).",
    "This reference identifies the applicable PPortPrototype in the context of the SwClusterDesign.",
    "This reference identifies the applicable PersistencyDeployment.",
    "This reference identifies the applicable PortPrototype for the function group state change.",
    "This reference identifies the applicable PortPrototype in the context of an enclosing Executable.",
    "This reference identifies the applicable PortPrototype in the context on an Executable.",
    "This reference identifies the applicable PortPrototype in the scope of the SwClusterDesign.",
    "This reference identifies the applicable PortPrototype on application design level.",
    "This reference identifies the applicable ProcessDesign.",
    "This reference identifies the applicable RPortPrototype in the context of the SwClusterDesign.",
    "This reference identifies the applicable RawDataStreamDeployment.",
    "This reference identifies the applicable RawDataStreamInterface.",
    "This reference identifies the applicable RecoveryNotification to be mapped.",
    "This reference identifies the applicable RecoveryViaApplicationAction.",
    "This reference identifies the applicable SOVD method.",
    "This reference identifies the applicable SoftwareClusterDiagnosticDeploymentProps that are applicable for the referencing SoftwareCluster.",
    "This reference identifies the applicable SwcServiceDependency. The reference has the ability to point into the component hierarchy (under possible consideration of the rootSoftwareComposition).",
    "This reference identifies the applicable TlsCryptoServiceMapping that adds the ability for TLS-based encryption on the enclosing ApplicationEndpoint.",
    "This reference identifies the applicable UcmModuleInstantiation.",
    "This reference identifies the applicable allocator.",
    "This reference identifies the applicable certificate used for a local authentication.",
    "This reference identifies the applicable certificate used for a remote authentication.",
    "This reference identifies the applicable collection of test identifiers for setting up a request message for mode 0x06.",
    "This reference identifies the applicable crypto key.",
    "This reference identifies the applicable crypto primitive for the authentication.",
    "This reference identifies the applicable cryptograhic key used for authentication.",
    "This reference identifies the applicable cryptographic key if the handshake is based on the existence of a pre-shared key (PSK)",
    "This reference identifies the applicable cryptographic key.",
    "This reference identifies the applicable data identifier,",
    "This reference identifies the applicable deployment within the context of an AdaptivePlatformServiceInstance for\r\nwhich the grant applies.",
    "This reference identifies the applicable deployment within the context of an AdaptivePlatformServiceInstance for which the grant applies.",
    "This reference identifies the applicable diagnostic SOVD service instance.",
    "This reference identifies the applicable diagnostic event.",
    "This reference identifies the applicable function group for which the state change shall be executed.",
    "This reference identifies the applicable local certificate.",
    "This reference identifies the applicable network handle.",
    "This reference identifies the applicable rate limitation filter for all security events on the related EcuInstance.\r\nThis property was modified due to atpVariation (DirectedAssociationPattern).",
    "This reference identifies the applicable remote certificate.",
    "This reference identifies the applicable security level for the security access.",
    "This reference identifies the applicable service instance.",
    "This reference identifies the applicable test identifier for setting up a request message for mode 0x06.",
    "This reference identifies the applicable time base resource.",
    "This reference identifies the applicable time base resource.\r\nThis property was modified due to atpVariation (DirectedAssociationPattern).",
    "This reference identifies the applicable traffic limitation filter for all security events on the related EcuInstance.\r\nThis property was modified due to atpVariation (DirectedAssociationPattern).",
    "This reference identifies the authenticationRole applicable for the enclosing DiagnosticAccessPermission.",
    "This reference identifies the authenticationRole applicable for the enclosing DiagnosticMemoryDestinationUserDefined.",
    "This reference identifies the certificate that represents the packager's signature.",
    "This reference identifies the certificate that represents the vendor's signature.",
    "This reference identifies the client functional cluster that wants to use persistency.",
    "This reference identifies the collection of ArtifactChecksums associated with the corresponding CryptoProvider.",
    "This reference identifies the collection of communication connectors used by the SOVD module instantiation for vehicle-internal communication.",
    "This reference identifies the collection of diagnostic events that can be reported by the mapped functional cluster.",
    "This reference identifies the collection of function group states in the context of the mapping.",
    "This reference identifies the collection of functional clusters that are configured (partially) in the enclosing AmpcSoftwareClusterDefinition.",
    "This reference identifies the collection of functional clusters that are configured (partially) in the enclosing AmpcValueCollection.",
    "This reference identifies the corresponding ProcessDesign that gives context to the GrantDesing.",
    "This reference identifies the corresponding RawDataStreamInterface,",
    "This reference identifies the corresponding SecurityEventDefinition.",
    "This reference identifies the corresponding SoftwareClusterDesign.",
    "This reference identifies the corresponding collection of DiagnosticContributionSet.",
    "This reference identifies the corresponding diagnostic event.",
    "This reference identifies the corresponding method.",
    "This reference identifies the crypto profile applicable to  the usage (send, receive) of the also referenced SecuredIPdu. \r\n\r\nObviously, this reference is only applicable if the Pdutriggering also references a SecuredIPdu in the role iPdu.",
    "This reference identifies the crypto service primitive for the execution of encryption.",
    "This reference identifies the crypto service primitive for the generation and verification of MACs.",
    "This reference identifies the crypto service primitives for the generation and verification of signatures during the key exchange algorithm.",
    "This reference identifies the current data type for an existing key-value-pair in the context of the enclosing PersistencyKeyValueStorageInterface.",
    "This reference identifies the data element that carries the information about the reporting mode.",
    "This reference identifies the data type of the specific template argument required for the language binding.",
    "This reference identifies the dataElement for which the ordered list of meta-data items is defined.",
    "This reference identifies the definition of the report instance.",
    "This reference identifies the definition of the security event.",
    "This reference identifies the dependent SoftwareClusterDesign.",
    "This reference identifies the description of the applicable crypto certificate.",
    "This reference identifies the deterministic sync master in the scope of the mapping.",
    "This reference identifies the funtion group step that shall become active after the action step terminates.",
    "This reference identifies the host configuration of the remote end.",
    "This reference identifies the impacted ProcessDesign for this mapping. This allows for mapping multiple services to the same PortPrototype on an Executable by also referencing different ProcessDesigns.",
    "This reference identifies the individual (i.e. per cipher suite) crypto service primitive for the execution of key exchange during the handshake phase.",
    "This reference identifies the instance of the PortPrototype to which the elements of the URI shall be defined.",
    "This reference identifies the layout of legislated freeze frames used for emission related diagnostics over the UDS protocol such as OBDonUDS or WWH-OBD.\r\nThis property was modified due to atpVariation (DirectedAssociationPattern).",
    "This reference identifies the layout of the WWH-OBD freeze frame.\r\nThis property was modified due to atpVariation (DirectedAssociationPattern).",
    "This reference identifies the mapped CpSoftwareClusterResource.",
    "This reference identifies the mapped DiagnosticEvent.",
    "This reference identifies the mapped DiagnosticFunctionIdentifier.",
    "This reference identifies the mapped PortPrototype in the application software.",
    "This reference identifies the mapped RPortPrototype in the application software.",
    "This reference identifies the mapped security event.",
    "This reference identifies the mapped subfunction of a DiagnosticRoutine.",
    "This reference identifies the meta-class that defines the attributes for the IdsM configuration on a specific machine.",
    "This reference identifies the method to which the deployment information shall apply.",
    "This reference identifies the model element that is represented by the artifact.",
    "This reference identifies the multicast IP address used for service discovery.",
    "This reference identifies the network management handle that is affected by the interaction with the state management.",
    "This reference identifies the network management handle that wants to interact with state management.",
    "This reference identifies the particular DataPrototype (defined in the context of a composite ParameterDataPrototype) on which the swDataDefProps shall be applied.",
    "This reference identifies the particular DataPrototype (defined in the context of a composite VariableDataPrototype) on which the swDataDefProps shall be applied.",
    "This reference identifies the previous data type in a key-value-pair existing in the context of the enclosing PersistencyKeyValueStorageInterface.",
    "This reference identifies the process applicable for the state management",
    "This reference identifies the process in which context the security event is reported.",
    "This reference identifies the process in which the application runs",
    "This reference identifies the process in which the application runs.",
    "This reference identifies the qualification of the applicable security event",
    "This reference identifies the relevant TimeBaseResource.",
    "This reference identifies the relevant UcmModuleInstantiation.",
    "This reference identifies the reporting functional cluster.",
    "This reference identifies the reporting persistency deployment.",
    "This reference identifies the respective CommunicationConnector for which the collection of security events can be reported.\r\nThis property was modified due to atpVariation (DirectedAssociationPattern).",
    "This reference identifies the shared (i.e. applicable for each of the aggregated cipher suites) crypto service primitive for the execution of key exchange during the handshake phase.",
    "This reference identifies the shared(i.e. applicable for each of the aggregated cipher suites) crypto service primitive for the execution of key exchange during the handshake phase.",
    "This reference identifies the state for which the referencing action list applies.",
    "This reference identifies the state machine that shall be started when the enclosing action list item is executed.",
    "This reference identifies the state machine that shall be stopped when the enclosing action list item is executed.",
    "This reference identifies the state management state request that is involved in the interaction with the network management.",
    "This reference identifies the state to be switched to if the condition is fulfilled.",
    "This reference identifies the target container.",
    "This reference identifies the target model element that exists outside the target-configuration, i.e. in the design model.",
    "This reference identifies the target model element that exists outside the target-configuration, i.e. in the design model. \r\n\r\nThe referenced model element does not need to exist in the current model scope. The reference itself carries a semantics of being an identifying factor, even without the target element to exist.",
    "This reference identifies the time base consumer in the scope of the mapping.",
    "This reference identifies the vehicle description.",
    "This reference implements the concrete relation of container configuration on the \"value\" side to container configuration on the \"definition\" side in the abstract structure of the machine configuration model.",
    "This reference implements the concrete relation of container element configuration on the \"value\" side to container element  configuration on the \"definition\" side in the abstract structure of the machine configuration model.",
    "This reference implements the concrete relation of functional cluster configuration on the \"value\" side to functional cluster configuration on the \"definition\" side in the abstract structure of the machine configuration model.",
    "This reference includes an element with IDS related definitions into the IdsDesign.\r\nThis property was modified due to atpVariation (DirectedAssociationPattern).",
    "This reference indicates a collection of cores onto which the mapped process shall be executing.",
    "This reference indicates a collection of cores onto which the mapped process shall not be executing.",
    "This reference indicates that a DataTransformation is intended in the context of the ClientServerOperationMapping.",
    "This reference indicates the checkpoints belonging to the Supervised Entity.\r\nThis property was modified due to atpVariation (DirectedAssociationPattern).",
    "This reference is deprecated and will be removed in future. \r\n\r\nOld description: Reference to an IPdu that is mapped to a socket connection.",
    "This reference is obsolete and will be removed in the future. The clientPort reference shall be used instead.\r\n\r\nOld description: Remote Port for TCP/UDP connection. May be different for each Frame or use the same remote port. In second case headerId attribute needs to be considered.",
    "This reference is obsolete and will be removed in the future. The serverPort reference in SocketConnectionBundle shall be used instead.\r\n\r\nOld description: Local Port for TCP/UDP connection.",
    "This reference is used if the variable is local to the current component. It would also be possible to use the instance refence here.\r\nSuch an instance ref would not have a contextElement, since the current instance is the context.\r\nBut the local instance is a special case which may provide further optimization. Therefore an explicit reference is provided for this case.",
    "This reference is used in the McSupport file to express the final instance of group axis etc. It is not allowed to use this outside of an McDataInstance.\r\n\r\nThe referenced mcDataInstance shall be originated from a ParameterDataPrototype.",
    "This reference is used in the McSupport file to express the final instance of input values etc. It is not allowed to use this outside of an McDataInstance.\r\n\r\nThe referenced mcDataInstance shall be originated from a VariableDataPrototype.",
    "This reference is used to describe the data exchange between DoIp and the PduR.",
    "This reference is used to describe the hardware resources of the machine.",
    "This reference is used to describe theRemoteSubjects local IPSecRules.",
    "This reference is used to describe to which time base the Log and Trace module has access. From the Time Base Resource the Log and Trace module gets the needed information to generate the time stamp.",
    "This reference is used to identify a remote node by means of the certificate.",
    "This reference is used to identify a remote node by means of the preshared Key.",
    "This reference is used to identify the applicable TCP secure com properties for the external communication of the enclosing SOVD server.",
    "This reference is used to identify the applicable UDP secure com properties for the external communication of the enclosing SOVD server.",
    "This reference is used to identify the applicable secure com properties for the external communication of the enclosing SOVD gateway.",
    "This reference is used to identify the sub-SoftwareClusterDesigns of an \"umbrella\" SoftwareClusterDesign.",
    "This reference is used to identify the sub-SoftwareClusters of an \"umbrella\" SoftwareCluster.",
    "This reference is used to reference the AutosarDataPrototype to be taken for sourcing an external replacement in the out-of-range handling.",
    "This reference lists the fallback order of Ucms that can take over the master role if the master goes down.",
    "This reference maps the Mode Management PortGroup partial network to communication channels.",
    "This reference maps the Partial Network Cluster to a set of PdurIpduGroups.",
    "This reference maps the partial network to a communication channel.",
    "This reference points to the PortPrototype providing/receiving the root of the parameter.",
    "This reference points to the properties of a TLS Signature Scheme.",
    "This reference points to the sourceFrame with sourceCanId on the sourceChannel.",
    "This reference points to the target ImplementationDataElement inside a composite ImplementationDataType",
    "This reference points to the target ImplementationDataTypeElement.",
    "This reference points to the target record element.",
    "This reference points to uploadable design elements that have been identified as relevant in the context of the enclosing SoftwareClusterDesign.",
    "This reference points to uploadable elements that have been identified as relevant in the context of the enclosing SoftwareClusterDesign.",
    "This reference points to uploadable elements that have been identified as relevant in the context of the enclosing SoftwareClusterRequirement.",
    "This reference provides the ability to define TLS-related properties for the enclosing SocketRawDataStreamMapping.",
    "This reference represent the ProcessDesigns contained in the enclosing SoftwareCluster.",
    "This reference represent the element that is linked to the system triggered event.",
    "This reference represent the processes contained in the enclosing SoftwareCluster.",
    "This reference represents both the ModeDeclarationGroupPrototype and the ModeDeclaration relevant for the mode comparison.",
    "This reference represents the CommunicationConnector taken for Mac-based data communication.",
    "This reference represents the DiagnosticEvent that corresponds to the IUMPR computation.",
    "This reference represents the ExclusiveArea for which the policy applies.",
    "This reference represents the PersistencyDeploymentElement where the time value shall be stored in and retrieved from.",
    "This reference represents the ability to define constraints regarding the reference to another element, i.e. the reference identifies the element to which the reference is allowed to refer.",
    "This reference represents the ability to define data transformation props specifically for a SOME/IP serialization.",
    "This reference represents the ability to refer to an entire group of ApApplicationErrors as one model element instead of having to refer to all the represented ApApplicationErrors separately.",
    "This reference represents the access permission of the owning routine subfunction.",
    "This reference represents the affected DiagnosticDataElement.",
    "This reference represents the affected Persistency PortPrototype",
    "This reference represents the affected event.",
    "This reference represents the affected trigger.",
    "This reference represents the applicable DiagnosticDataElement.",
    "This reference represents the applicable DiagnosticDataIdentfiier.",
    "This reference represents the collection of ARElements that are required for the completeness of the definition of the SoftwareCluster.",
    "This reference represents the collection of ApApplicationError represented by the enclosing ApApplicationErrorSet",
    "This reference represents the collection of DiagnosticDataElements that are controlled by this bit of the control mask record.",
    "This reference represents the collection of actual files aggregated by the PersistencyFileArray.",
    "This reference represents the collection of fibexElements that are required for the completeness of the definition of the SoftwareCluster.",
    "This reference represents the collection of model elements that cannot derive from UploadablePackageElement and  that are required for the completeness of the definition of the SoftwareCluster.",
    "This reference represents the collection of model elements that cannot derive from UploadablePackageElement and  that contribute to the completeness of the definition of the SoftwareCluster.",
    "This reference represents the controlled FID",
    "This reference represents the crypto driver in the context of the mapping of two crypto primitives.",
    "This reference represents the crypto job in the context of the mapping of two crypto primitives.",
    "This reference represents the data type applicable for the value of the key-value pair.",
    "This reference represents the definition of the diagnostic extract applicable to the referencing SoftwareCluster",
    "This reference represents the error domain of the ApApplicationError.",
    "This reference represents the identifcaction of all requirements applicable for the enclosing software cluster.",
    "This reference represents the identification of all SoftwareClusterDesigns applicable for the enclosing SoftwareCluster.",
    "This reference represents the identification of the design-time representation for the DltLogChannel that owns the reference.",
    "This reference represents the identification of the design-time representation for the Process that owns the reference.",
    "This reference represents the identification of the design-time representation for the ProcessToMachineMapping that owns the reference.",
    "This reference represents the mapped CryptoKeySlot.",
    "This reference represents the mapped DltLogChannel.",
    "This reference represents the mapped PersistencyDeployment.",
    "This reference represents the mapped PortPrototype.",
    "This reference represents the mapped TimeBaseProvider.",
    "This reference represents the mapped array of files.",
    "This reference represents the mapped cryptoCertificate.",
    "This reference represents the mapped cryptoKeySlot.",
    "This reference represents the mapped cryptoProvider.",
    "This reference represents the mapped file storage.",
    "This reference represents the mapped key-value storage.",
    "This reference represents the process required as context for the mapping.",
    "This reference represents the process required for context of the mapping.",
    "This reference represents the related diagnostic data element.",
    "This reference represents the semantics that all available channels shall be affected. It is still necessary to refer to individual CommunicatuionClusters because there could be private CommunicationClusters in the System Extract that are not subject to the service \"communication control\".\r\n\r\nBy referring to the applicable CommunicationClusters it can be made sure that only the affected CommunicationClusters are accessed.",
    "This reference represents the semantics that all available channels shall be affected. It is still necessary to refer to individual EthernetPhysicalChannels because there could be private VLANs (and thus private EthernetPhysicalChannels) in the System Extract that are not subject to the service \"communication control\".\r\n\r\nBy referring to the applicable EthernetPhysicalChannels it can be made sure that only the affected EthernetPhysicalChannels are accessed.",
    "This reference represents the source end of the ApplicationError mapping.",
    "This reference represents the target end of the ApplicationError mapping",
    "This reference represents the way of grouping diagnostic events into a summary event in the context of the Fim.",
    "This reference shall be defined to define a type reference (a.k.a. typedef).",
    "This reference shall be used if an ISignal is transported on the PhysicalChannel. This reference forms an XOR relationship with the ISignalTriggering-ISignalGroup reference.",
    "This reference shall be used if an ISignalGroup is transported on the PhysicalChannel. This reference forms an XOR relationship with the ISignalTriggering-ISignal reference.",
    "This reference shall be used if the referenced object can directly be referenced using a flat reference.",
    "This reference shall be used of the target of the reference can only be identified by an instanceRef.\r\nThis aggregation contains a variation point although it is not variant. Therefore, this variation point shall not exist in models. See constr_2638.",
    "This reference specifies an association between the ServiceNeeeds and a PortGroup, for example to request a communication mode which applies for communication via these ports. The referred PortGroup shall be local to this atomic SWC, but via the links between the PortGroups, a tool can evaluate this information such that all the ports linked via this port group on the same ECU can be found.",
    "This reference substantiates that abstract reference in the role serviceClass for this specific concrete class.\r\n\r\nThereby, the reference represents the ability to access shared attributes among all DiagnosticClearResteEmissionRelatedInfo in the given context.",
    "This reference substantiates that abstract reference in the role serviceClass for this specific concrete class.\r\n\r\nThereby, the reference represents the ability to access shared attributes among all DiagnosticRequesVehicleInfo in the given context.",
    "This reference substantiates that abstract reference in the role serviceClass for this specific concrete class.\r\n\r\nThereby, the reference represents the ability to access shared attributes among all DiagnosticRequestControlOfOnBoardDevice in the given context.",
    "This reference substantiates that abstract reference in the role serviceClass for this specific concrete class.\r\n\r\nThereby, the reference represents the ability to access shared attributes among all DiagnosticRequestCurrentPowertrainData in the given context.",
    "This reference substantiates that abstract reference in the role serviceClass for this specific concrete class.\r\n\r\nThereby, the reference represents the ability to access shared attributes among all DiagnosticRequestEmissionRelatedDTC in the given context.",
    "This reference substantiates that abstract reference in the role serviceClass for this specific concrete class.\r\n\r\nThereby, the reference represents the ability to access shared attributes among all DiagnosticRequestEmissionRelatedDTCPermanentStatus in the given context.",
    "This reference substantiates that abstract reference in the role serviceClass for this specific concrete class.\r\n\r\nThereby, the reference represents the ability to access shared attributes among all DiagnosticRequestOnBoardMonitoringTestResults in the given context.",
    "This reference substantiates that abstract reference in the role serviceClass for this specific concrete class.\r\n\r\nThereby, the reference represents the ability to access shared attributes among all DiagnosticRequestPowertrainFreezeFrameData in the given context.",
    "This reference substantiates that abstract reference in the role serviceClass for this specific concrete class. \r\n\r\nThereby,  the reference represents the ability to access shared attributes among all DiagnosticReadDataByIdentifier in the given context.",
    "This reference substantiates that abstract reference in the role serviceClass for this specific concrete class. \r\n\r\nThereby,  the reference represents the ability to access shared attributes among all DiagnosticResponseOnEvent in the given context.",
    "This reference substantiates that abstract reference in the role serviceClass for this specific concrete class. \r\n\r\nThereby,  the reference represents the ability to access shared attributes among all DiagnosticWriteDataByIdentifier in the given context.",
    "This reference substantiates that abstract reference in the role serviceClass for this specific concrete class. \r\n\r\nThereby, the reference represents the ability to access shared attributes among all DiagnosticClearDiagnosticInformation in the given context.",
    "This reference substantiates that abstract reference in the role serviceClass for this specific concrete class. \r\n\r\nThereby, the reference represents the ability to access shared attributes among all DiagnosticComControl in the given context.",
    "This reference substantiates that abstract reference in the role serviceClass for this specific concrete class. \r\n\r\nThereby, the reference represents the ability to access shared attributes among all DiagnosticControlDTCSetting in the given context.",
    "This reference substantiates that abstract reference in the role serviceClass for this specific concrete class. \r\n\r\nThereby, the reference represents the ability to access shared attributes among all DiagnosticDataTransfer in the given context.",
    "This reference substantiates that abstract reference in the role serviceClass for this specific concrete class. \r\n\r\nThereby, the reference represents the ability to access shared attributes among all DiagnosticDynamicallyDefineDataIdentifier in the given context.",
    "This reference substantiates that abstract reference in the role serviceClass for this specific concrete class. \r\n\r\nThereby, the reference represents the ability to access shared attributes among all DiagnosticEcuReset in the given context.",
    "This reference substantiates that abstract reference in the role serviceClass for this specific concrete class. \r\n\r\nThereby, the reference represents the ability to access shared attributes among all DiagnosticIOControl in the given context.",
    "This reference substantiates that abstract reference in the role serviceClass for this specific concrete class. \r\n\r\nThereby, the reference represents the ability to access shared attributes among all DiagnosticReadDTCInformation in the given context.",
    "This reference substantiates that abstract reference in the role serviceClass for this specific concrete class. \r\n\r\nThereby, the reference represents the ability to access shared attributes among all DiagnosticReadDataByPeriodicID in the given context.",
    "This reference substantiates that abstract reference in the role serviceClass for this specific concrete class. \r\n\r\nThereby, the reference represents the ability to access shared attributes among all DiagnosticReadMemoryByAddresst in the given context.",
    "This reference substantiates that abstract reference in the role serviceClass for this specific concrete class. \r\n\r\nThereby, the reference represents the ability to access shared attributes among all DiagnosticReadScalingDataByIdentifier in the given context.",
    "This reference substantiates that abstract reference in the role serviceClass for this specific concrete class. \r\n\r\nThereby, the reference represents the ability to access shared attributes among all DiagnosticRequestDownload in the given context.",
    "This reference substantiates that abstract reference in the role serviceClass for this specific concrete class. \r\n\r\nThereby, the reference represents the ability to access shared attributes among all DiagnosticRequestFileTransfer in the given context.",
    "This reference substantiates that abstract reference in the role serviceClass for this specific concrete class. \r\n\r\nThereby, the reference represents the ability to access shared attributes among all DiagnosticRequestUpload in the given context.",
    "This reference substantiates that abstract reference in the role serviceClass for this specific concrete class. \r\n\r\nThereby, the reference represents the ability to access shared attributes among all DiagnosticRoutineControl in the given context.",
    "This reference substantiates that abstract reference in the role serviceClass for this specific concrete class. \r\n\r\nThereby, the reference represents the ability to access shared attributes among all DiagnosticSecurityAccess in the given context.",
    "This reference substantiates that abstract reference in the role serviceClass for this specific concrete class. \r\n\r\nThereby, the reference represents the ability to access shared attributes among all DiagnosticSessionControl in the given context.",
    "This reference substantiates that abstract reference in the role serviceClass for this specific concrete class. \r\n\r\nThereby, the reference represents the ability to access shared attributes among all DiagnosticTransferExit in the given context.",
    "This reference substantiates that abstract reference in the role serviceClass for this specific concrete class. \r\n\r\nThereby, the reference represents the ability to access shared attributes among all DiagnosticWritememoryByAddress in the given context.",
    "This reference supports the configuration of the authentication of diagnostic clients.",
    "This references a variable which is provided by a port and/or which is part of a CompositeDataType.",
    "This references point to the properties of elliptic curves.",
    "This references the TransformationComSpecProps which define  port-specific configuration for data transformation.",
    "This references the TransformationComSpecProps which define port-specific configuration for data transformation.",
    "This references the dedicated element the particular imposition time is assigned to.",
    "This refers to a mode declaration.",
    "This refers to a particular  feature (instance in the M0 model) to which is the context of the documentation.\r\nThis aggregation contains a variation point although it is not variant. Therefore, this variation point shall not exist in models. See constr_2638.",
    "This refers to a specific mode declaration in the given context.",
    "This refers to a system constant. The internal (coded) value of the system constant shall be used.",
    "This refers to a timing condition that is part of an expression describing the dependency on a specific condition.",
    "This refers to a timing event.",
    "This refers to a variable.",
    "This refers to an argument of an operation call.",
    "This refers to an instance reference of a mode declaration.",
    "This refers to an instance reference of a variable.",
    "This refers to an instance reference of an argument of an operation call.",
    "This refers to the AutosarDataPrototype which is typed by the ImplementationDatatype. The targetDataPrototype and all defined contextDataPrototypes can be found within this rootDataPrototype.",
    "This refers to the AutosarDataPrototype which is typed by the implementationDatatype. This rootDataPrototype represents the target of this InstanceRef if no targetDataPrototype is defined. If a targetDataPrototype is defined this rootDataPrototype defines the AutosarDataPrototype in which the target can be found.",
    "This refers to the ParameterDataPrototype typed by the implementationDataType in which the target can be found.",
    "This refers to the VariableDataPrototype typed by the ImplementationDatatype in which the target can be found.",
    "This refers to the applicable DiagnosticRoutine.",
    "This refers to the dataPrototype which is typed by theApplicationDatatype in which which the target can be found.",
    "This refers to the definition of this attribute.",
    "This refers to the record layout which is mapped to interpolation routines.",
    "This refrence represents the PersistencyDataElement for which the PersistencyDataProvidedComSpec applies.",
    "This refrence represents the PersistencyDataElement for which the PersistencyDataRequiredComSpec applies.",
    "This relation indicates, that the target element is part of a \"struct\" which is given by the source element. This information will be used by the final generator to set up the correct addressing scheme.",
    "This relationship defines to which cluster the CouplingElement belongs.",
    "This relationship defines which channel element belongs to which cluster. A channel shall be assigned to exactly one cluster, whereas a cluster may have one or more channels.",
    "This represent the applicable functionGroup.",
    "This represent the applicable functionGroupMode.",
    "This represent the applicable functionGroupState.",
    "This represent the applicable machineMode.",
    "This represent the applicable modeDeclaration that represents an ApplicationState.",
    "This represent the applicable modeDeclaration that represents an ProcessState.",
    "This represents  version and state of a standard. Kept as a string.",
    "This represents a CompositeNetworkRepresentation defined in the context of a ReceiverComSpec. The purpose of this aggregation is to be able to specify the network representation of leaf elements of ApplicationCompositeDataTypes.",
    "This represents a CompositeNetworkRepresentation defined in the context of a SenderComSpec.",
    "This represents a Data identifier for the diagnostic value.\r\nThis allows to predefine the DID number if the a function developer has received a particular requirement from the OEM or from a standardization body.",
    "This represents a Data identifier for the diagnostic value.\r\nThis allows to predefine the DID number if the responsible function developer has received a particular requirement from the OEM or from a standardization body.",
    "This represents a DiagnosticCommonElement considered in the context of the DiagnosticContributionSet\r\nThis property was modified due to atpVariation (DirectedAssociationPattern).",
    "This represents a DiagnosticDataElement required to execute the respective diagnostic service in the context of the diagnostic service mapping,",
    "This represents a Parameter within AUTOSAR. Note that the Datatype of the referenced ParameterDataPrototype shall be an ApplicationDataType of category VALUE.",
    "This represents a build action environment.",
    "This represents a collection of DiagnosticFunctionInhibitSource that contribute to the configuration of the enclosing DiagnosticFunctionIdentiferInhibit.",
    "This represents a collection of RunnableEntitys that belong to the enclosing RunnableEntityGroup.",
    "This represents a collection of VariableDataPrototypes that belong to the enclosing DataPrototypeGroup",
    "This represents a context ApplicationCompositeDataPrototype",
    "This represents a definition list in the documentation block.\r\nThe upper multiplicity of this role has been increased to * due to resolving an atpVariation stereotype. The previous value was 1.",
    "This represents a description that documents how the blueprint generator shall be resolved when deriving objects from blueprints.",
    "This represents a description that documents how the variation point shall be resolved when deriving objects from the blueprint by using ARMQL.\r\n\r\nNote that variationPoints are not allowed within a formalBlueprintGenerator.",
    "This represents a description that documents how the variation point shall be resolved when deriving objects from the blueprint.\r\n\r\nNote that variationPoints are not allowed within a blueprintCondition.",
    "This represents a figure in the documentation block.\r\nThe upper multiplicity of this role has been increased to * due to resolving an atpVariation stereotype. The previous value was 1.",
    "This represents a flag for the existence of the ResetToDefault operation in the service interface.",
    "This represents a formal term in the expression based on the extended language.",
    "This represents a general but brief (one paragraph) description what the object in question is about. It is only one paragraph! Desc is intended to be collected into overview tables. This property helps a human reader to identify the object in question.\r\n\r\nMore elaborate documentation, (in particlar how the object is built or used) should go to \"introduction\".",
    "This represents a general but brief (one paragraph) description what the object in question is about. It is only one paragraph! Desc is intended to be collected into overview tables. This property helps a human reader to identify the object in question.\r\n\r\nMore elaborate documentation, (in particular how the object is built or used) should go to \"introduction\".",
    "This represents a general but brief (one paragraph) description what the object in question is about. It is only one paragraph! This property helps a human reader to identify the object in question.",
    "This represents a general but brief (one paragraph) description what the special data in question is about. It is only one paragraph! Desc is intended to be collected into overview tables. This property helps a human reader to identify the special data in question.",
    "This represents a general data structure  intended to denote parameters for the BuildAction.\r\nThis aggregation contains a variation point although it is not variant. Therefore, this variation point shall not exist in models. See constr_2638.",
    "This represents a general data structure  intended to denote parameters for the BuildActionEnvironment.\r\nThis aggregation contains a variation point although it is not variant. Therefore, this variation point shall not exist in models. See constr_2638.",
    "This represents a labeled list.\r\nThe upper multiplicity of this role has been increased to * due to resolving an atpVariation stereotype. The previous value was 1.",
    "This represents a note in the text flow.\r\nThe upper multiplicity of this role has been increased to * due to resolving an atpVariation stereotype. The previous value was 1.",
    "This represents a numerical hardware attribute value.",
    "This represents a numerical identifier that is included in the CRC calculation. This dataId is used for call and response.\r\n\r\nNote: ID is used for protection against masquerading. The details concerning the maximum number of values (this information is specific for each E2E profile) applicable for this\r\nattribute are controlled by a semantic constraint that depends on the category of the EndToEndProtection.",
    "This represents a numerical value for the RuleBasedValueSpecification which may subject to variability. The latest binding time of the VariationPoint shall be preCompileTime.",
    "This represents a numerical value for the RuleBasedValueSpecification.",
    "This represents a particular action in the build chain.",
    "This represents a particular blueprint map in the set.",
    "This represents a particular blueprint of consistencyNeeds. Note that it is",
    "This represents a particular element which is evaluated in context of the EvaluatedVariants. The approvalStatus applies to this element (and all of its descendants). In other words, the referenced elements are those that were considered when the predefined variant was evaluated.",
    "This represents a possibility to provide a structured comment in an AUTOSAR file.",
    "This represents a reasonable Diagnostic Trouble Code for which the DiagnosticInfo is requested.",
    "This represents a reasonable Diagnostic Trouble Code.\r\n\r\nThis allows to predefine the Diagnostic Trouble Code, e.g. if the function developer has received a particular requirement from the OEM or from a standardization body.\r\n\r\nThis attribute applies for the OBD diagnostics use case.",
    "This represents a reasonable Diagnostic Trouble Code.\r\n\r\nThis allows to predefine the Diagnostic Trouble Code, e.g. if the function developer has received a particular requirement from the OEM or from a standardization body.\r\n\r\nThis attribute applies for the UDS diagnostics use case.",
    "This represents a reasonable Diagnostic Trouble Code.\r\nThis allows to predefine the Diagnostic Trouble Code if the a function developer has received a particular requirement from the OEM or from a standardization body.",
    "This represents a reasonable Diagnostic Trouble Code.\r\nThis allows to predefine the Diagnostic Trouble Code, e.g. if the a function developer has received a particular requirement from the OEM or from a standardization body.\r\n\r\nThis attribute applies for the OBD diagnostics use case.",
    "This represents a reasonable Diagnostic Trouble Code.\r\nThis allows to predefine the Diagnostic Trouble Code, e.g. if the a function developer has received a particular requirement from the OEM or from a standardization body.\r\n\r\nThis attribute applies for the UDS diagnostics use case.",
    "This represents a reference to a context PortPrototype.",
    "This represents a reference to an external file which usually cannot be printed.",
    "This represents a routine identifier for the diagnostic routine.\r\nThis allows to predefine the RID number if the a function developer has received a particular requirement from the OEM or from a standardization body.",
    "This represents a specific scenario of how ExclusiveAreas can be used in terms of the nesting order.",
    "This represents a sub package within an ARPackage, thus allowing for an unlimited package hierarchy.",
    "This represents a symbolic label for the lower bound for addresses of the memory segment.",
    "This represents a symbolic label for the upper bound for addresses of the memory segment.",
    "This represents a table with a traceable table.\r\nThis aggregation contains a variation point although it is not variant. Therefore, this variation point shall not exist in models. See constr_2638.",
    "This represents a table within a topic.\r\nThe upper multiplicity of this role has been increased to * due to resolving an atpVariation stereotype. The previous value was 1.",
    "This represents a technical term in verbatim. Note that it's the responibility of the user not to take a tt that would add additional character to the text (such as SgmlElement).",
    "This represents a textual constant in the computation method.",
    "This represents a textual hardware attribute value.",
    "This represents a textual value for the RuleBasedValueSpecification.",
    "This represents a traceable table within a topic.",
    "This represents a unique numerical identifier for the referenced event or field notifier that is included in the CRC calculation.\r\n\r\nNote: ID is used for protection against masquerading. The details concerning the\r\nmaximum number of values (this information is specific for each E2E profile) applicable for this\r\nattribute are controlled by a semantic constraint that depends on the category of the\r\nEndToEndProtection.",
    "This represents a unique numerical identifier identifying the source of a certain transmission. In case of C/S communication, this ID uniquely identifies the client.\r\n\r\nNote: ID is used for protection against masquerading. The details concerning the maximum number of values (this information is specific for each E2E profile) applicable for this attribute are controlled by a semantic constraint that depends on the category of the EndToEndProtection.",
    "This represents a unique numerical identifier. \r\n\r\nNote: ID is used for protection against masquerading. The details concerning the maximum number of values (this information is specific for each E2E profile) applicable for this attribute are controlled by a semantic constraint that depends on the category of the EndToEndProtection.",
    "This represents an \"Alias LongName\".",
    "This represents an allocator taken to create the C++ data type.",
    "This represents an artifact applicable to the build action.",
    "This represents an informal remark. Note that this is not modeled as annotation, since these remark is still essential part of the requirement.",
    "This represents an informal specification of conflicts.",
    "This represents an informal specification of dependencies. Note that upstream tracing should be formalized in the property trace provided by the superclass Traceable.",
    "This represents an informal specification of the supporting material.",
    "This represents an informal term in the expression as verbatim text. Note that the result of this is same as formula keyword \"undefined\".\r\nThis aggregation contains a variation point although it is not variant. Therefore, this variation point shall not exist in models. See constr_2638.",
    "This represents an introduction on the Autosar file. It is intended for example to represent disclaimers and legal notes.",
    "This represents automatically contributed chapters provided by an msrquery.",
    "This represents automatically contributed contents provided by an msrquery in the context of DocumentationBlock.",
    "This represents automatically contributed contents provided by an msrquery.",
    "This represents automatically contributed topics provided by an msrquery.",
    "This represents document number of an external document that is referenced. Kept as a string.",
    "This represents further remarks about the particular parameter characteristics.",
    "This represents introductory documentation about the IPdu mapping.",
    "This represents introductory documentation about the ISignal mapping.",
    "This represents introductory documentation about the data mapping.",
    "This represents introductory documentation about the ecu resource estimation",
    "This represents introductory documentation about the frame mapping.",
    "This represents introductory documentation about the mapping constraint.",
    "This represents introductory documentation about the schedule table entry.",
    "This represents introductory documentation about the signal path constraint.",
    "This represents more information about how the object in question is built or is used. Therefore it is a DocumentationBlock.",
    "This represents numbered or unnumbered list.\r\nThe upper multiplicity of this role has been increased to * due to resolving an atpVariation stereotype. The previous value was 1.",
    "This represents numbered or unnumbered list. \r\nThe upper multiplicity of this role has been increased to * due to resolving an atpVariation stereotype. The previous value was 1.",
    "This represents one command-line argument to be processed by the executable software.",
    "This represents one particular connection between two hardware elements.",
    "This represents one particular connection between two hardware pin groups.",
    "This represents one particular connection between two hardware pins. The connected pins shall match the connection provided by the parent hwPinGroup Connection.",
    "This represents one particular connection between two hardware pins. This connection shall be used if pin-to-pin-connection is to be described but no description of the connection between the hierarchical composition of HwPinGroups (using HwPinGroupConnector) is required.",
    "This represents one particular information set.",
    "This represents one particular item in the labeled list.",
    "This represents one particular life cycle information.",
    "This represents one particular parameter in the table.",
    "This represents one particular table cell. It is an entry in the table.",
    "This represents one particular topic in the query result.\r\nThis aggregation contains a variation point although it is not variant. Therefore, this variation point shall not exist in models. See constr_2638.",
    "This represents one particular unit in the UnitGroup.",
    "This represents one particular verbatim text.\r\nThe upper multiplicity of this role has been increased to * due to resolving an atpVariation stereotype. The previous value was 1.",
    "This represents one scale within the compu method.",
    "This represents one scale within the compu method. Note that it contains a Variationpoint in order to support blueprints of enumerations.",
    "This represents single CalibrationParameterValues in the CalibrationParameterValueSet.",
    "This represents that access permission defined for the specific DiagnosticMemoryIdentifier.",
    "This represents that applicable PostBuoldVariantCondition in the context of aVariationPointProxy.",
    "This represents that leaf element of an application composite data type.",
    "This represents the \"delete\" method primitive.",
    "This represents the \"get\" method primitive.",
    "This represents the \"post\" method primitive.",
    "This represents the ClientServerOperation for which the transformer can raise this TransformerHardErrorEvent.",
    "This represents the ClientServerOperation that the ClientServerAnnotation corresponds to.",
    "This represents the ClientServerOperation which shall be invoked.",
    "This represents the DTCSettingType defined by ISO 14229-1. The pre-defined values are 1 (ON) and 2 (OFF).",
    "This represents the DiagnosticConnection that is taken for handling the data transmission for the enclosing DiagnosticServiceTable.\r\n\r\nIt is possible to refer to more than one diagnosticConnections in order to support more than one diagnostic tester.\r\nThis property was modified due to atpVariation (DirectedAssociationPattern).",
    "This represents the DiagnosticDataElement for which the access is further qualified by the DiagnosticDemProvidedDataMapping.",
    "This represents the DiagnosticDataElement for which the access is further qualified by the DiagnosticProvidedDataMapping.dataProvider.",
    "This represents the DiagnosticJ1939Node to which the J1939 expanded freeze frame is associated.",
    "This represents the DiagnosticJ1939Node to which the J1939 freeze frame is associated.",
    "This represents the ID of the GlobalTimeDomain used in the network messages sent on behalf of global time management.",
    "This represents the IdsM functional cluster.",
    "This represents the ImplementationDataType that this subject to the extension.",
    "This represents the ImplementationDataTypeElement to extend.",
    "This represents the ModeDeclaration that is considered the error mode in the context of the enclosing ModeDeclarationGroup.",
    "This represents the ModeDeclarationGroupPrototype for which the error behavior of the mode manager applies.",
    "This represents the ModeDeclarationGroupPrototype for which this SwcModeManagerErrorEvent is raised in case of an error.",
    "This represents the OBD DTC referenced in the mapping between UDS and OBD DTCs.",
    "This represents the PID associated with this instance of the OBD mode 0x01 service.",
    "This represents the PID associated with this instance of the OBD mode 0x02 service.",
    "This represents the PortInterface used to type the PRPortPrototype",
    "This represents the PortPrototype in which the target Trigger is located.",
    "This represents the PortPrototype that is contained in the InstanceRef.",
    "This represents the RPortPrototype in the application software that is issuing the request for state change.",
    "This represents the SwComponentPrototype (which is typically typed by a CompositionSwComponentType) that corresponds to the J1939ControllerApplication.",
    "This represents the SymbolProps for the AtomicSwComponentType.",
    "This represents the SymbolProps for the ImplementationDataType.",
    "This represents the SymbolProps used for the definition of a hierarchical namespace applicable for the generation of code artifacts out of the definition of a ServiceInterface.",
    "This represents the Trigger for which the transformer can raise this TransformerHardErrorEvent.",
    "This represents the Trigger that shall be used to trigger RunnableEntities deployed to a remote ECU.",
    "This represents the UDS DTC referenced in the mapping between UDS and OBD DTCs.",
    "This represents the URL of the external file.",
    "This represents the URL of the standard.",
    "This represents the ability to add additional attributes to the case that only specific channels are supposed to be considered,",
    "This represents the ability to allocate RAM at specific memory sections, for example, to support the RAM Block recovery strategy by mapping to uninitialized RAM.",
    "This represents the ability to define nested groups of RunnableEntitys.",
    "This represents the ability to define nested groups of VariableDataPrototypes.",
    "This represents the ability to define the error behavior expected by the mode manager in case of errors on the mode user side (e.g. terminated mode user).",
    "This represents the ability to define the policy in terms of which default model shall apply in case an error occurs.",
    "This represents the ability to define whether the usage of PortInterface ServiceRequestNotification has the characteristics of being initiated by a manufacturer or by a supplier.",
    "This represents the ability to express that global elements live in various packages which do not have a common ancestor package. Packages mentioned by  ReferenceBase.globalInPackage are used in addition to the one in ReferenceBase.package.",
    "This represents the ability to further specify the access within the Dem.",
    "This represents the ability to further specify the data provider.",
    "This represents the ability to point into the component hiearchy (under possible consideration of the rootSoftwareComposition)",
    "This represents the ability to point into the component hiearchy of an adaptive AUTOSAR model (under possible consideration of the rootSoftwareComposition)",
    "This represents the ability to point into the component hierarchy (under possible consideration of the rootSoftwareComposition)",
    "This represents the ability to point into the component hierarchy (under possible consideration of the rootSoftwareComposition).",
    "This represents the ability to refer to an AtomicSwComponentType that is available without the definition of how it will be embedded into the component hierarchy.",
    "This represents the ability to request the result of a running routine.",
    "This represents the ability to start a routine",
    "This represents the ability to stop a running routine.",
    "This represents the actual EcuInstance to which the information contained in the DiagnosticEcuInstance contribute.",
    "This represents the actual debounce algorithm.",
    "This represents the administrative data for the describable object.",
    "This represents the administrative data for the identifiable object.",
    "This represents the administrative data of an Autosar file.",
    "This represents the affected CommunicationCluster in the role specificChannel",
    "This represents the affected CommunicationCluster in the role subNodeChannel",
    "This represents the affected CpSoftwareClusterResource.",
    "This represents the affected specific EthernetPhysicalChannel.",
    "This represents the affected sub-node EthernetPhysicalChannel.",
    "This represents the alias event applicable for the referencing inhibition source.",
    "This represents the applicable DiagnosticDynamicDataIdentfier.",
    "This represents the applicable DiagnosticEventWindows",
    "This represents the applicable DiagnosticSessions",
    "This represents the applicable EcuInstance for this DiagnosticServiceTable.",
    "This represents the applicable PostBuildVariantCriterion in the context of a VariationPointProxy.\r\n\r\nNote that the technical details how to access the particular postBuildValueAccess are still considered internal to the RTE and are consequently not standardized.",
    "This represents the applicable aging cycle.\r\nThis property was modified due to atpVariation (DirectedAssociationPattern).",
    "This represents the applicable payload that corresponds\r\nto the referenced DataPrototype in the role mappedData\r\nElement.",
    "This represents the applicable payload that corresponds to the referenced DataPrototype in the role mappedDataElement or (in case of a usage on the adaptive platform) mappedApDataElement.",
    "This represents the applicable payload that corresponds to the referenced DataPrototype in the role mappedDataElement.",
    "This represents the applicable subNode number. The value corresponds to the request message parameter nodeIdentificationNumber of diagnostic service CommunicationControl (0x28).",
    "This represents the applicable subnet number (which is an arbitrary number ranging from 1..14)",
    "This represents the arguments for the RuleBasedValueSpecification.\r\nThe upper multiplicity of this role has been increased to * due to resolving an atpVariation stereotype. The previous value was 1.",
    "This represents the artifacts which are created by the processor.",
    "This represents the artifacts which are read by the processor.",
    "This represents the associated DiagnosticSecurityLevels",
    "This represents the associated DiagnosticSessions",
    "This represents the associated ImplementationDataType.",
    "This represents the associated SOVD lock.",
    "This represents the associated freeze-frame.",
    "This represents the available mappings of ModeDeclarations in the context ot this ModeDeclarationGroupPrototype.",
    "This represents the avaliable ModeTransitions of the ModeDeclarationGroup",
    "This represents the axis values of a Compound Primitive Data Type (curve or map).\r\n\r\nThe first swAxisCont describes the x-axis, the second swAxisCont describes the y-axis, the third swAxisCont describes the z-axis. In addition to this, the axis can be denoted in swAxisIndex.",
    "This represents the base number of the DTC group.",
    "This represents the bitOffset of the DiagnosticParameter. The value of the bitOffset shall always be interpreted as relative to the start of the enclosing DiagnosticDataIdentifier, DiagnosticParameterIdentifier, or DiagnosticRoutineSubfunction.",
    "This represents the caption of the parameter table.",
    "This represents the category of the RuleBasedValueSpecification",
    "This represents the category of the parent object.",
    "This represents the characteristics of one parameter under one particular condition.",
    "This represents the collection of ApplicationErrors defined in the context of the enclosing ServiceInterface.",
    "This represents the collection of CommunicationClusters that shall implement the GlobalTimeDomain in terms of communication of global time information.",
    "This represents the collection of ConsistencyNeeds owned by the enclosing SwComponentType.",
    "This represents the collection of DiagnosticAccessPermissions that allow for the execution of the referencing DiagnosticServiceClass.",
    "This represents the collection of DiagnosticAccessPermissions that allow for the execution of the referencing DiagnosticServiceInstance..",
    "This represents the collection of DiagnosticMasterToSlaveEventMapping aggregated at the enclosing DiagnosticMasterToSlaveEventMappingSet\r\nThis aggregation contains a variation point although it is not variant. Therefore, this variation point shall not exist in models. See constr_2638.",
    "This represents the collection of DiagnosticResponseOnEventTriggers defined in the context of the enclosing DiagnosticResponseOnEvent.",
    "This represents the collection of DiagnosticServiceInstances to be considered in the scope of this DiagnosticServiceTable,",
    "This represents the collection of DiagnosticServiceInstances to be considered in the scope of this DiagnosticServiceTable.\r\nThis property was modified due to atpVariation (DirectedAssociationPattern).",
    "This represents the collection of DiagnosticServiceTables to be considered in the scope of this DiagnosticContributionSet.\r\nThis property was modified due to atpVariation (DirectedAssociationPattern).",
    "This represents the collection of DiagnosticTroubleCodes defined by this DiagnosticTroubleCodeGroup.\r\nThis property was modified due to atpVariation (DirectedAssociationPattern).",
    "This represents the collection of E2EProfileConfigurations aggregated at the E2EProfileConfigurationSet.",
    "This represents the collection of EcuInstances that are affected by the DiagnosticContributionSet.",
    "This represents the collection of ModeDeclarationMappings owned by the enclosing ModeDeclarationMappingSet.",
    "This represents the collection of ModeSwitchEventTriggeredActivities related to the enclosing NvBlockDescriptor.",
    "This represents the collection of ProcessDesignToMachineDesignMappings of the enclosing ProcessDesignToMachineDesignMappingSet.",
    "This represents the collection of ProcessToMachineMappings of the enclosing ProcessToMachineMappingSet.",
    "This represents the collection of ResourceGroups owned by the enclosing OsModuleImplementation.",
    "This represents the collection of SPNs that make the J1939 Freeze Frame.",
    "This represents the collection of SPNs that make the expanded J1939 Freeze Frame.",
    "This represents the collection of SecureComProps aggregated at the SecureComPropsSet.",
    "This represents the collection of ServiceInterfaceElementMappings aggregated at the ServiceInterfaceElementMappingSet",
    "This represents the collection of ServiceInterfaceMappings owned by  the ServiceInterfaceMappingSet.",
    "This represents the collection of SwcServiceDependencys owned by AdaptiveInternalBehavior.\r\nThis aggregation contains a variation point although it is not variant. Therefore, this variation point shall not exist in models. See constr_2638.",
    "This represents the collection of action item lists defined in the context of the enclosing state management module.",
    "This represents the collection of action items in the context of the action item list.",
    "This represents the collection of aggregated ValueSpecifications for compound primitive data type. The last ValueSpecification in the collection shall be taken to execute the filling rule.",
    "This represents the collection of aggregated ValueSpecifications. The last ValueSpecification in the collection shall be taken to execute the filling rule.\r\nThis aggregation contains a variation point although it is not variant. Therefore, this variation point shall not exist in models. See constr_2638.",
    "This represents the collection of applicable DiagnosticConnections for this DiagnosticProtocol.\r\nThis property was modified due to atpVariation (DirectedAssociationPattern).",
    "This represents the collection of commands or function calls (with optional data arguments) defined in the context of an ApplicationInterface.",
    "This represents the collection of context ApplicationRecordElements.",
    "This represents the collection of cores owned by the enclosing processor.",
    "This represents the collection of events defined in the context of a ServiceInterface.",
    "This represents the collection of fields defined in the context of a ServiceInterface.",
    "This represents the collection of indication or events (with optional data argument) defined in the context of an ApplicationInterface.",
    "This represents the collection of methods defined in the context of a ServiceInterface.",
    "This represents the collection of potential reference targets.",
    "This represents the collection of processors owned by the enclosing machine.",
    "This represents the collection of sub-elements of the enclosing CppImplementationDataType",
    "This represents the collection of system triggered events for the enclosing resource.",
    "This represents the collection of triggers defined in the context of a ServiceInterface.",
    "This represents the collections of slaves of the GlobalTimeDomain.\r\nA GlobalTimeDomain may have no GlobalTimeDomain.slaves, e.g. when it propagates its time directly to sub domains.",
    "This represents the command to invocate the processor. Note that this is a generic string which can be interpreted properly in the processor environment.\r\n\r\nNote that it is optional due to the fact that some actions are hardwired in the environment and do not need an explicit command.\r\n\r\nOn the other hand the properties of an invocator can be complex and not standardized.",
    "This represents the composite ServiceInterface.",
    "This represents the computation from physical values to the internal values.",
    "This represents the computing resource needs of a DeterministicClient::WaitForActivation kInit cycle.",
    "This represents the computing resource needs of a DeterministicClient::WaitForActivation kRun cycle.",
    "This represents the computing resource needs of a DeterministicClient::WaitForNextActivation kInit cycle.",
    "This represents the computing resource needs of a DeterministicClient::WaitForNextActivation kRun cycle.",
    "This represents the configuration of TLS applicable for the mapping.",
    "This represents the context of an applicable payload that corresponds to the referenced DataPrototype in the role mappedDataElement.",
    "This represents the corresponding \"class\", i.e. this meta-class provides properties that are shared among all instances of applicable sub-classes of DiagnosticServiceInstance.\r\n\r\nThe subclasses that affected by this pattern implement references to the applicable \"class\"-role that substantiate this abstract reference.",
    "This represents the corresponding ClientServerOperation.",
    "This represents the corresponding DiagnosticDataIdentifier",
    "This represents the corresponding DiagnosticDataIdentifier.",
    "This represents the corresponding data type.",
    "This represents the corresponding function identifier.",
    "This represents the crypto job part of the mapping from crypto need to crypto job.",
    "This represents the crypto need part of the mapping from crypto need to crypto job.",
    "This represents the data associated with the enclosing DiagnosticInfoType.\r\nThis aggregation contains a variation point although it is not variant. Therefore, this variation point shall not exist in models. See constr_2638.",
    "This represents the data carried by the DiagnosticParameterIdentifier.",
    "This represents the dataElement in the application software of an adaptive AUTOSAR application that is accessed for diagnostic purpose.",
    "This represents the dataElement in the application software that is accessed for diagnostic purpose. This role is applicable on the classic platform.",
    "This represents the date when the requirement was initiated.",
    "This represents the decision whether aging is allowed for this DiagnosticEvent.",
    "This represents the decision whether aging is allowed for this DiagnosticTroubleCodeProps.",
    "This represents the decision whether the DTCSettingControlOptionRecord (see ISO 14229-1) is in general supported in the request message.",
    "This represents the default value of the attribute.",
    "This represents the definition of the error behavior expected by the mode user in case of errors on the mode manager side (e.g. terminated mode manager).",
    "This represents the definition part of the DefItem.",
    "This represents the delay time after a failed security access. Unit: second.",
    "This represents the derived interface.",
    "This represents the description of a collection of periodic rates in which the service can be executed.",
    "This represents the diagnostic-related properties of an entire ECU.",
    "This represents the display name which is used for the physical unit of the axis.",
    "This represents the entered model of the ModeTransition.",
    "This represents the entry point for references into a CompositeDataType.",
    "This represents the environment which is required to use the specified Processor.",
    "This represents the environmental conditions associated with the access permission.",
    "This represents the event group applicable for the referencing inhibition source.",
    "This represents the exited mode of the ModeTransition",
    "This represents the fact that the scale is a constant. The use case is mainly a non interpolated scale. It is a simplification of the fact that a constant scale can also be expressed as rational function of order 0.",
    "This represents the first ApplicationError in the context of the ClientServerApplicationErrorMapping.",
    "This represents the first ModeDeclaration of the ModeDeclarationMapping. This reference has the multiplicity 0 ..* to support use cases where e.g. one mode of the mode user is mapped to several modes of the mode manager.",
    "This represents the first PhysicalDimension of the enclosing PhysicalDimensionMapping.",
    "This represents the first element referenced in the scope of the mapping.\r\nThe upper multiplicity of this role has been increased to * due to resolving an atpVariation stereotype. The previous value was 1.",
    "This represents the footer of the table segment. This segment is printed at the end of the table or before a page break.",
    "This represents the formal definition of a an argument to a RunnableEntity.",
    "This represents the formal description of the memory segment to which the DiagnosticMemoryByAddress applies.",
    "This represents the freeze frame layout as a set of DIDs.",
    "This represents the freeze frame layout as a set of DIDs.\r\nThis property was modified due to atpVariation (DirectedAssociationPattern).",
    "This represents the general description of the requirement.",
    "This represents the heading of the table section. The heading is usually repeated at the beginning of each new page.",
    "This represents the hiearchy of SwComponentPrototypes that creates a context within the instanceRef.",
    "This represents the identification of a UCM.",
    "This represents the identification of the memory segment.",
    "This represents the identifier of the user-defined memory.",
    "This represents the indent sample in one particular language.",
    "This represents the info type associated with the mode 0x09 service.",
    "This represents the initial status of the enclosing DiagnosticResponseOnEventTrigger.",
    "This represents the initial value of the RAM Block that corresponds to the referenced variable.\r\nThis aggregation contains a variation point although it is not variant. Therefore, this variation point shall not exist in models. See constr_2638.",
    "This represents the initial value of the ROM block that corresponds to the referenced variable.\r\nThis aggregation contains a variation point although it is not variant. Therefore, this variation point shall not exist in models. See constr_2638.",
    "This represents the intended namespace of the C++ data type",
    "This represents the interface blueprint. Note that this interface needs to live in a package of category BLUEPRINT.",
    "This represents the key slots to which the referencing crypto job applies.",
    "This represents the linked DiagnosticDataIdentifier.",
    "This represents the lower bound for addresses of the memory segment.",
    "This represents the mapped DiagnosticJ1939Node.",
    "This represents the mapped FID.",
    "This represents the mapped SwComponentPrototype.",
    "This represents the mapped blueprint.",
    "This represents the mapping of a PortBlueprint to the derived PortPrototypes.",
    "This represents the mapping of an Interface to the derived Interface.",
    "This represents the master diagnostic event.",
    "This represents the master of the global time gateway.",
    "This represents the maximum number of data identifiers that can be included in one request.",
    "This represents the maximum number of periodic data identifiers that can be scheduled in parallel.",
    "This represents the maximum number of source elements of the dynamically created DID.",
    "This represents the method to read the content of a diagnostic data identifier.\r\nThis aggregation contains a variation point although it is not variant. Therefore, this variation point shall not exist in models. See constr_2638.",
    "This represents the method to read the content of an element of a diagnostic data identifier.\r\nThis aggregation contains a variation point although it is not variant. Therefore, this variation point shall not exist in models. See constr_2638.",
    "This represents the method to write the content of an element of a diagnostic data identifier.",
    "This represents the method to write the contents of a diagnostic data identifier.\r\nThis aggregation contains a variation point although it is not variant. Therefore, this variation point shall not exist in models. See constr_2638.",
    "This represents the minimum delta between the time value in two sync messages for which the sync loss flag is set.",
    "This represents the nested structure of SwComponentPrototypes.",
    "This represents the network ID for the J1939 cluster.",
    "This represents the number of failed security accesses after which the delay time is activated.",
    "This represents the numerical id associated with the diagnostic test identifier.",
    "This represents the numerical id of the DiagnosticTestIdentifier (see SAE J1979-DA).",
    "This represents the numerical measurement Id",
    "This represents the numerical value.",
    "This represents the object which was derived from the blueprint.",
    "This represents the offset of the Follow-Up message with respect to the SYNC message",
    "This represents the owned SubelementMapping.",
    "This represents the parameter that is initialized by the CalibrationParameterValue.",
    "This represents the particular EndToEndDescription.",
    "This represents the particular conditions under which the parameter characteristic is valid.",
    "This represents the period for cyclic writing of NvData to store the associated RAM Block.",
    "This represents the period of the DiagnosticPeriodicRate in seconds.",
    "This represents the period. Unit: seconds",
    "This represents the person, organization or authority which issued the requirement.",
    "This represents the physical unit of the input value of the axis. It is provided to support the case that the particular input variable is not yet known.",
    "This represents the physical unit of the provided values.",
    "This represents the position of the supportInfo in the PID. Unit: byte.",
    "This represents the primary Function Inhibition Identifier used for inhibition of the diagnostic monitor. The FID might either inhibit the monitoring of a symptom or the reporting of detected faults.",
    "This represents the primary Function Inhibition Identifier used for the rate based monitor. This is an optional attribute.",
    "This represents the priority of the diagnostic protocol in comparison to other diagnostic protocols.\r\nLower numeric values represent higher protocol priority:\r\n* 0 - Highest protocol priority\r\n* 255 - Lowest protocol priority",
    "This represents the provided outer delegation PortPrototype of the PassThroughSwConnector.",
    "This represents the publisher of an external document that is being referenced. Kept as a string.",
    "This represents the rationale of the requirement.",
    "This represents the receiver. Note that 1:n communication is supported for this use case.",
    "This represents the reference to a Variable in an Autosar system. Note that the target of the reference within AutosarVariableRef shall be typed by a  primitive data type",
    "This represents the reference to one or several events of one ServiceInterface.",
    "This represents the reference to one or several fields of one ServiceInterface.",
    "This represents the reference to one or several method calls of one ServiceInterface.",
    "This represents the reference to one or several method return of one ServiceInterface.",
    "This represents the reference to one or several methods of one ServiceInterface.",
    "This represents the reference to one or several triggers of one ServiceInterface.",
    "This represents the reference to the \"virtual Ecu\" to which the enclosing DiagnosticJ1939Node is associated.",
    "This represents the reference to the RootSwCompositiontype representing a context of the InstanceRef.",
    "This represents the reference to the actual diagnostic event.",
    "This represents the reference to the actual summary event.",
    "This represents the reference to the alias event.",
    "This represents the reference to the alias summary event.",
    "This represents the reference to the applicable PortInterface",
    "This represents the reference to the applicable Serialization properties.",
    "This represents the reference to the applicable ServiceInterface.",
    "This represents the reference to the applicable dataTypemappingSet",
    "This represents the reference to the diagnostic event.",
    "This represents the reference to the event group",
    "This represents the reference to the inhibition source.",
    "This represents the reference to the relevant positions of a standard. Kept as a string.",
    "This represents the referenced ApplicationCompositeDataPrototype.",
    "This represents the referenced ImplementationDataTypeElement.",
    "This represents the referenced ModeDeclarationGroup.",
    "This represents the referenced PerInstanceMemory.",
    "This represents the referenced implementationDataTypeElement.",
    "This represents the regular expression which shall be used to validate the \r\nstring parameter value.",
    "This represents the regular expression which shall be used to validate the string parameter value.",
    "This represents the related DiagnosticJ1939Node.",
    "This represents the related dataElement of the DiagnosticParameter\r\nThe upper multiplicity of this role has been increased to * due to resolving an atpVariation stereotype. The previous value was 1.",
    "This represents the releated SPN.",
    "This represents the request parameters.\r\nThis aggregation contains a variation point although it is not variant. Therefore, this variation point shall not exist in models. See constr_2638.",
    "This represents the request result method of the diagnostic routine.\r\nThis aggregation contains a variation point although it is not variant. Therefore, this variation point shall not exist in models. See constr_2638.",
    "This represents the required outer delegation PortPrototype of the PassThroughSwConnector.",
    "This represents the response parameters.\r\nThis aggregation contains a variation point although it is not variant. Therefore, this variation point shall not exist in models. See constr_2638.",
    "This represents the result of the query.",
    "This represents the rollout qualification.",
    "This represents the root SwCompositionPrototype of the Executable. This aggregation is required (in contrast  to a direct reference of a SwComponentType) in order to support the definition of instanceRefs in Executable context.",
    "This represents the routine info byte. The info byte contains a manufacturer-specific value (for the identification of record identifiers) that is reported to the tester. \r\n\r\nOther use cases for this attribute are mentioned in ISO 27145 and ISO 26021.",
    "This represents the rule based value specification for the array or compound primitive (CURVE, MAP, CUBOID, CUBE_4, CUBE_5, VAL_BLK).",
    "This represents the rule based value specification for the array.",
    "This represents the rule based value specification for the axis of a compound primitive (curve, map).",
    "This represents the second ApplicationError in the context of the ClientServerApplicationErrorMapping.",
    "This represents the second ModeDeclaration of the ModeDeclarationMapping.",
    "This represents the second element referenced in the scope of the mapping.\r\nThe upper multiplicity of this role has been increased to * due to resolving an atpVariation stereotype. The previous value was 1.",
    "This represents the secondary Function Inhibition Identifier used for inhibition of the diagnostic monitor. Any of the FID inhibitions leads to an inhibition of the\r\nmonitoring of a symptom or the reporting of detected faults.",
    "This represents the secondary Function Inhibition Identifier used for the rate based monitor. This is an optional attribute. Any of the FID inhibitions leads to an inhibition of the IUMPR calculation",
    "This represents the sender.\r\n\r\nCan be optional if an ecu extract is provided and the sender is part of the extract.",
    "This represents the service instance that needs to be considered in this diagnostics service mapping.",
    "This represents the service table applicable for the given diagnostic protocol.\r\nThis property was modified due to atpVariation (DirectedAssociationPattern).",
    "This represents the set of ExclusiveAreaNestingOrder owned by the InternalBehavior.",
    "This represents the set of ExclusiveAreaNestingOrders recognized by this ExecutableEntity.",
    "This represents the set of attributes defined in the context of an Abstract Platform ApplicationInterface.",
    "This represents the set of context components. The association is ordered because it needs to respect the nesting order.",
    "This represents the shortLabel of the parent object. This allows to specify the output position in a hierarchically organized system.",
    "This represents the single master of a GlobalTimeDomain.\r\nA GlobalTimeDomain may have no GlobalTimeDomain.master, e.g. when it gets its time from a GPS receiver.\r\nThe upper multiplicity of this role has been increased to * due to resolving an atpVariation stereotype. The previous value was 1.",
    "This represents the single master of a GlobalTimeDomain.\r\nA GlobalTimeDomain may have no GlobalTimeDomain.master, e.g. when it gets its time from a GPS receiver.\r\nThis aggregation contains a variation point although it is not variant. Therefore, this variation point shall not exist in models. See constr_2638.",
    "This represents the size of a Value Block",
    "This represents the size of the AccessDataRecord used in GetSeed. Unit:byte.",
    "This represents the size of the security key. Unit: byte.",
    "This represents the size of the security seed. Unit: byte.",
    "This represents the size of the supportInfo within the PID. Unit: byte.",
    "This represents the slave diagnostic event.",
    "This represents the slave of the GlobalTimeGateway.",
    "This represents the specified data size for the request message. Unit: byte.",
    "This represents the specified data size for the response message. Unit:byte.",
    "This represents the start method of the diagnostic routine.\r\nThis aggregation contains a variation point although it is not variant. Therefore, this variation point shall not exist in models. See constr_2638.",
    "This represents the stop method of the diagnostic routine.\r\nThis aggregation contains a variation point although it is not variant. Therefore, this variation point shall not exist in models. See constr_2638.",
    "This represents the subtitle of the standard.",
    "This represents the supported information associated with the DiagnosticParameterIdentifier.",
    "This represents the symbol to be generated into the actual signature on the level of the C programming language.",
    "This represents the target RunnableEntity.",
    "This represents the target Trigger.",
    "This represents the target VariableDataPrototype.",
    "This represents the target association of the InstanceRef.",
    "This represents the target of the InstanceRef",
    "This represents the target reference of an applicable payload that corresponds to the referenced DataPrototype in the role mappedDataElement.",
    "This represents the test Id for the mode 0x08.",
    "This represents the text in one particular language.",
    "This represents the unit and scaling Id of the diagnostic test result.",
    "This represents the upper bound for addresses of the memory segment.",
    "This represents the value for the confirmation timeout. Unit: seconds.",
    "This represents the value of the inhibition mask behavior.",
    "This represents the value of this attribute.",
    "This represents the values of a Compound Primitive Data Type.",
    "This represents the values of an array or Compound Primitive Data Type.",
    "This represents the values of textual data elements (Strings). Note that vt uses the | to separate the values for the different bitfield masks in case that the semantics of the related DataPrototype is described by means of a BITFIELD_TEXTTABLE in the associated CompuMethod.",
    "This represents the variable for which the ComSpec is specified.",
    "This represents traceable text in the documentation block. This allows to specify requirements/constraints in any documentation block.\r\n\r\nThe kind of the trace is specified in the category.\r\nThe upper multiplicity of this role has been increased to * due to resolving an atpVariation stereotype. The previous value was 1.",
    "This represents version and state of the external document. Kept as a string.",
    "This represnts the absolute value of the parameter.",
    "This represnts the maximum value of the parameter.",
    "This represnts the minimum value of the parameter.",
    "This represnts the tolerance of the parameter in the same units as the paramter: E.g. Tmperature= 50 +- 0.5 grad.",
    "This represnts the typical value of the parameter.",
    "This role indicates whether the blueprintable element will be modifiable or not modifiable.",
    "This role indicates whether the blueprintable element will be modifiable or not motifiable.",
    "This role offers the possibility to give additional information to the policy.",
    "This rootDataPrototype defines the AutosarDataPrototype in which the target can be found.",
    "This rpresents the reference to the relevant positions of a standard. Kept as a string.",
    "This self-aggregation supports the desription of nested context data.\r\nThis aggregation contains a variation point although it is not variant. Therefore, this variation point shall not exist in models. See constr_2638.",
    "This serves as part of the split key in case of more than one EndToEndProtectionVariablePrototype is aggregated in the bound model.",
    "This size represents the size of the compressed SoftwarePackage.",
    "This special data group allows to denote specific data. The structure is subject of mutual agreement.\r\nThis aggregation contains a variation point although it is not variant. Therefore, this variation point shall not exist in models. See constr_2638.",
    "This specifies a BswModuleEntry which implements the current interpolation method for the given record layout.",
    "This specifies a single shortName (fragment) which is part of the composed shortName.",
    "This specifies an ExclusiveArea for this InternalBehavior. The exclusiveArea is local to the component resp. module.\r\nThe aggregation of ExclusiveAreas is subject to variability.\r\nNote: the number of ExclusiveAreas might vary due to the conditional existence of RunnableEntities or BswModuleEntities.",
    "This specifies an identifying shortName for the object. It needs to be unique within its context and is intended for humans but even more for technical reference.",
    "This specifies how the Referrable.shortName is composed of several shortNameFragments.",
    "This specifies how the physical units of the current value set shall be displayed in documents or in user interfaces of tools.",
    "This specifies how the unit shall be displayed in documents or in user interfaces of tools.The displayName corresponds to the Unit.Display in an ASAM MCD-2MC file.",
    "This specifies how to invoke a build action in the given environment.",
    "This specifies instance specific data definition properties.",
    "This specifies one particular column specification in the table. There shall be one entry for each column.",
    "This specifies one particular mapping of recordlayout and its matching interpolationRoutines.",
    "This specifies that the considered objects as instances of the denoted meta class.",
    "This specifies the PortDefinedArguments used in the mapping between the ClientServerInterface and the BswModuleEntry.",
    "This specifies the URL of the external document.",
    "This specifies the category of the target:\r\n\r\n* In case of a data pointer, it shall specify the category of the referenced data.\r\n\r\n* In case of a function pointer, it could be used to denote the category of the referenced BswModuleEntry.",
    "This specifies the coefficients of the rational formula.",
    "This specifies the computation from internal values to physical values.",
    "This specifies the date and time, when the object in question was released",
    "This specifies the init values for the dataElements in the particular PortBlueprint.",
    "This specifies the init values for the dataElements in the particular PortPrototypeBlueprint.",
    "This specifies the intended audience for the diagnostic object. Note that this is not only for the documentation but also subsequent audience specific implementation.",
    "This specifies the list of actions to be performed at the beginning of the process.",
    "This specifies the long name of the object. Long name is targeted to human readers and acts like a headline.",
    "This specifies the long name of the object. The role is longName1 for compatibiilty to ASAM FSX",
    "This specifies the lower limit of the ClientIdRange.",
    "This specifies the lower limit of the constraint.",
    "This specifies the lower limit of the scale.",
    "This specifies the maximum message length for the particular channel.",
    "This specifies the monotony constraints on the data object. Note that this applies only to curves and maps.",
    "This specifies the operations used in the mapping between the ClientServerInterface and the BswModuleEntry.",
    "This specifies the particular programm code which implements the computation method.",
    "This specifies the properties of the axes in case of a curve or map etc. This is mainly applicable to calibration parameters.",
    "This specifies the role of fragment to define e.g. the order of the fragments.",
    "This specifies the set of action which shall be performed after all other actions in the manifest were performed.",
    "This specifies the upper limit defined by the constraint.",
    "This specifies the upper limit of a of the scale.",
    "This specifies the upper limit of a the scale.",
    "This specifies the upper limit of the ClientIdRange.",
    "This specifies the upper limit of the constraint.",
    "This specifies whether a RunnableEntity accessing a PortPrototype that is referenced by this PortAPIOption shall specifically handle transformer errors or not.",
    "This specifies whether or not Sfs, FCs and the last CF shall be padded to 8 bytes length in case it contains less payload.\r\n\r\ntrue:\r\nThe N-PDU received uses padding for SF, FC and the last CF. (N-PDU length is always 8 bytes)\r\n\r\nfalse:\r\nThe N-PDU received does not use padding for SF, CF and the last CF. (N-PDU length is dynamic)",
    "This specifies, how an object of the current BaseType is encode eg. in an ECU in a message sequence.",
    "This specifies, how an object of the current BaseType is encoded, e.g. in an ECU within a message sequence.",
    "This specifiesx the data definition properties for the class attributes which manifests itself as calibration parameter",
    "This specifiesx the data definition properties for the class attributes which manifests itself as class instance.",
    "This specifiesx the data definition properties for the class attributes which manifests itself as variable.",
    "This supports the optional case that the process represents a platform module.",
    "This switch activates  the check of the remote subject.",
    "This switch activates the policy enforcement in Communication Management on local applications.",
    "This switch determines if the respective UdpNm channel is active or not. Indicates whether a particular UdpNm channel shall be initialized (TRUE) or not (FALSE).\r\nIf this parameter is set to FALSE the respective NM instance shall not be used during runtime.",
    "This switch indicates whether or not the BSW module is allowed to report the related Events before Dem_Init().",
    "This the text in one particular language.",
    "This threshold defines the count of bus-offs until the bus-off recovery switches from level 1 (short recovery time) to level 2 (long recovery time).",
    "This turns the argument of the service to an array.",
    "This value activates or deactivates the counter jump-down behavior.",
    "This value activates or deactivates the counter jump-up behavior.",
    "This value acts as Binding Function for the VariationPoint.",
    "This value defines the event-specific limit that indicates the \"failed\" counter status.",
    "This value defines the event-specific limit that indicates the \"passed\" counter status.",
    "This value determines the start position in bits of the\r\nAuthentic PDU that shall be passed on to the SWC that\r\nverifies and generates the Freshness. The bit counting is done according to TPS_SYST_01068.",
    "This value is determined by an appropriate combination of the range, the unit as well as the data-elements type, i.e. (ecuSignalRange.upperLimit-ecuSignalRange.lowerLimit) / (2^datatypelength - 1)",
    "This value represents the event-specific delay indicating the \"failed\" status.",
    "This value represents the event-specific delay indicating the \"passed\" status.",
    "This value represents the initial value of the internal debounce counter if the counting direction changes from decrementing to incrementing.",
    "This value represents the initial value of the internal debounce counter if the counting direction changes from incrementing to decrementing.",
    "This value shall be taken to decrement the internal debounce counter.",
    "This value shall be taken to increment the internal debounce counter.",
    "This would be 0x01, 0x03, 0x05, ...\r\n\r\nThe sendKey id can be computed by adding 1 to the requestSeedId",
    "Threshold concerning vClockCorrectionFailedCounter. Defines the number of consecutive even/odd Cycle pairs with missing clock correction terms that will cause the protocol to transition from the POC:normal active or POC:normal passive state into the POC:halt state.",
    "Threshold concerning vClockCorrectionFailedCounter. Defines the number of consecutive even/odd Cycle pairs with missing clock correction terms that will cause the protocol to transition from the POC:normal active state to the POC:normal passive state.",
    "Threshold for calculated Pdelay. If a measured Pdelay exceeds pdelayLatencyThreshold, the measured Pdelay value is discarded.",
    "Threshold for the correction method. Deviations below this value will be corrected by a linear reduction over a defined timespan. Values equal and greater than this value will be corrected by immediately setting the correct time and rate in form of a jump. Unit: seconds.",
    "Threshold for the correction method. Deviations below this value will be corrected by a linear reduction over a defined timespan. Values equal- and greater than this value will be corrected by immediately setting the correct time- and rate in form of a jump.",
    "Threshold to allocate an event memory entry and to capture the Freeze Frame.",
    "Threshold to allocate an event memory entry and to capture the Freeze Frame. Unit: none (attribute represents a counter value).",
    "Threshold value of IPduCounter algorithm. See AUTOSAR COM Spec for more details.",
    "Ths reference represents the respective state for which the PerStateTimeout is defined.",
    "Ths represents the publisher of an external document that is being referenced. Kept as a string.",
    "Time (in seconds) until transmission of the next ConsecutiveFrame N-PDU / LastFrame N-PDU.",
    "Time (in seconds) until transmission of the next ConsecutiveFrame NPdu / LastFrame NPdu.",
    "Time (in seconds) until transmission of the next FlowControl N-PDU.",
    "Time base is mandatory for the master. It is not used for slaves. \r\n\r\nLIN 2.0 Spec states: \"The time_base value specifies the used time base in the master node to generate the maximum allowed frame transfer time.\" \r\n\r\nThe time base shall be specified AUTOSAR conform in seconds.",
    "Time base is mandatory for the master. It is not used for slaves. \r\nLIN 2.0 Spec states: \"The time_base value specifies the used time base in the master node to generate the maximum allowed frame transfer time.\" \r\nThe time base shall be specified AUTOSAR conform in seconds.",
    "Time for the server to keep a diagnostic session other than the default session active while not receiving any diagnostic request message.",
    "Time for transmission of the LIN frame (any N-PDU) on the sender side. Specified in seconds.",
    "Time in seconds after which the collection of source frames into the destination frame is stopped and the frame is sent at the latest. \r\nIf omitted, destination frames are only sent when full or when the time stamp overflows.",
    "Time in seconds before the WaitPoint times out and the blocking wait call returns with an error indicating the timeout.",
    "Time in seconds before the server call times out and returns with an error message. It depends on the call type (synchronous or asynchronous) how this is reported.",
    "Time in seconds the PNC state machine shall wait in PNC_PREPARE_SLEEP.",
    "Time in seconds to trigger the rekey of an in use SAK (Static Secure Association key). If set to 0, the rekey will not be triggered after a time span.",
    "Time interval in seconds to store the time base value periodically to persistence.",
    "Time interval used to define the base of the rate policy.",
    "Time period at which the Alive Supervision mechanism compares the amount of received Alive Indications for the SupervisionCheckpoint against the expectedAliveIndications.",
    "Time span used to calculate the rate deviation. Unit: seconds.",
    "Time to live. Shall be a positive value (sInt32).",
    "Time to wait in [s] for sending subsequent vehicle announcement messages. Represents parameter A_DoIP_Announce_Interval of ISO 13400-2:2019.",
    "Timeout for Remote Sleep Indication in seconds. It defines the time how long it shall take to recognize that all other nodes are ready to sleep.",
    "Timeout for Repeat Message State in seconds. Defines the time how long the NM shall stay in the Repeat Message State.",
    "Timeout for bus calm down phase in seconds. It denotes the time how long the CanNm shall stay in the Prepare Bus-Sleep Mode before transition into Bus-Sleep Mode shall take place.",
    "Timeout in [s] before an unacknowledged TCP segment is sent again. If the timeout is disabled, no TCP segments shall be retransmitted.",
    "Timeout in [s] for maximum inactivity of a TCP socket connection before the DoIP module will close the according socket connection. Represents parameter T_TCP_General_Inactivity of ISO 13400-2:2019.",
    "Timeout in [s] for waiting for a response to an Alive Check request before the connection is considered to be disconnected. Represents parameter T_TCP_AliveCheck of ISO 13400-2:2019.",
    "Timeout in [s] to complete a remotely initiated TCP connection establishment, i.e. maximum time waiting in SYN-RECEIVED for a confirming connection request acknowledgement after having both received and sent a connection request.",
    "Timeout in [s] to receive a FIN from the remote node (after this node has initiated connection termination), i.e. maximum time waiting in FINWAIT-2 for a connection termination request from the remote TCP.",
    "Timeout in [s] used for initial inactivity of a connected TCP socket connection directly after socket connection. Represents parameter T_TCP_Initial_Inactivity of ISO 13400-2:2019.",
    "Timeout in seconds to enable the controlled port in case onFailPermissiveMode is set to Timeout.",
    "Timeout of a NM message in seconds. It determines how long the NM shall wait with notification of transmission failure while communication errors occur on the bus.",
    "Timeout of a NmPdu in seconds. It determines how long the NM shall wait with notification of transmission failure while communication errors occur on the bus.",
    "Timeout of an NmPdu in seconds. It determines how long the NM shall wait with notification of transmission failure while communication errors occur on the bus.",
    "Timeout value for Pdelay_Resp and Pdelay_Resp_Follow_Up after a Pdelay_Req has been transmitted resp. a Pdelay_Resp has been received. A value of 0 or not defining this attribute deactivates this timeout observation.",
    "Timer for the transmission in bit time to evaluate if a Transmission Opportunity is yield or not.",
    "Timer to monitor the successful reception of segments (in seconds) in SOME/IP for the Method Call.",
    "Timer to monitor the successful reception of segments (in seconds) in SOME/IP for the Method Response.",
    "Timer to monitor the successful reception of segments (in seconds) in SOME/IP.",
    "Timer to monitor the successful reception. It is started when the first NPdu is received, restarted after reception of intermediate NPdus, and is stopped when the last NPdu has been received.",
    "Timing Specification if the COM Transmission Mode is false.  \r\nThe Transmission Mode Selector is defined to be false, if all Conditions evaluate to false.",
    "Timing Specification if the COM Transmission Mode is true.  \r\nThe Transmission Mode Selector is defined to be true, if at least one Condition evaluates to true.",
    "Timing specification for Com IPdus (Transmission Modes).  \r\nThis information is mandatory for the sender in a System Extract. This information may be omitted on receivers in a System Extract.\r\n\r\natpVariation: The timing of a Pdu can vary.\r\nThe upper multiplicity of this role has been increased to * due to resolving an atpVariation stereotype. The previous value was 1.",
    "To describe a frames identifier on the communication system, usually with a fixed identifierValue. For LinSporadicFrames the attribute shall be ignored.",
    "To distinguish LIN slaves that are used twice or more within the same cluster.",
    "To express an infinite number of occurrences of this element this attribute has to be set to true. \r\n\r\nIf upperMultiplicityInfinite is set than upperMultiplicity shall not be used.\r\n\r\natpVariation: [RS_ECUC_00082]",
    "Top-level rptContainer definitions of this specific rapid prototyping scenario.",
    "Transformer specific configuration properties.",
    "Transformer that is used in a transformer chain for transformation of data communication.",
    "Transport Layer Protocol configuration for a ServiceInstance that is mapped to a CommunicationConnector of a Machine.",
    "Transport Layer independent ServiceInstanceId.",
    "Transport Protocol dependent Address.",
    "TransportLayerIndependentInstanceId is an alternative to a PortPrototype in case that a component model is not used. It contains the same configuration properties as a PortPrototype and therefore aggregates the PortPrototypeProps element.",
    "Trigger for which the transformer can trigger this TransformerHardErrorEvent",
    "Trigger instance qualifying the communication resource.",
    "Trigger type for this time window.",
    "Type of Acknowledgement.",
    "Type of checksum that the frame is using.\r\nThis attribute is optional because in case of sporadic frames it should not be set.",
    "Type of relationship that refers to the abstract BswModuleEntry. \r\nPlease notice that in this case the bswEntryRelationshipType shall be set to drivedFrom.",
    "Type of relationship that refers to the concrete BswModuleEntry",
    "Type of resource identification scheme.",
    "Type of the instance.",
    "UDP configuration properties",
    "URI to be called.",
    "Udp Port configuration.",
    "UdpPort configuration that is used for Event communication in the IP-Multicast case.\r\n\r\nDuring SOME/IP Service Discovery: Send in the SD-SubscribeEventGroupAck Message to client (answer to SD-SubscribeEventGroup).\r\n\r\nEvent: This is the destination-port where the server sends the multicast event messages if the multicastThreshold is exceeded.",
    "UdpPort configuration that is used for Event communication in the IP-Multicast case.\r\n\r\nDuring SOME/IP Service Discovery: Send in the SD-SubscribeEventGroupAck Message to client (answer to SD-SubscribeEventGroup).\r\n\r\nEvent: This is the destination-port where the server sends the multicast event messages if the multicastThreshold of the corresponding SomeipProvidedEventGroup is exceeded.",
    "UdpPort configuration that is used for Event communication in the IP-Multicast case.\r\n\r\nSOME/IP Service Discovery: Send in the SD-SubscribeEventGroupAck Message to client (answer to SD-SubscribeEventGroup). \r\n\r\nEvent: This is the destination-port where the server sends the multicast event messages if the mulicastThreshold of the corresponding ProvidedEventGroupInSomeipServiceInstance is exceeded.",
    "UdpPort configuration that is used for Method and Event communication in IP-Unicast case. \r\n\r\nDuring SOME/IP Service Discovery:\r\nPortNumber that is sent in the SD-Offer Message to client (answer on SD-find) or clients (SD-offer).\r\n\r\nMethod:\r\nThis is the destination-port where the server accepts the method call messages (from the clients).\r\nThis is the source-port where the server sends the method response messages (to the client).\r\n\r\nEvent:\r\nThis is the event source-port where the server sends the event messages to the subscribed clients in IP-Unicast case.",
    "UdpPort configuration that is used for Method and Event communication in IP-Unicast case. \r\n\r\nSOME/IP Service Discovery:\r\nPortNumber that is sent in the SD-Offer Message to client (answer on SD-find) or clients (SD-offer).\r\n\r\nMethod:\r\nThis is the destination-port where the server accepts the method call messages (from the clients).\r\nThis is the source-port where the server sends the method response messages (to the client).\r\n\r\nEvent:\r\nThis is the event source-port where the server sends the event messages to the subscribed clients in IP-Unicast case.",
    "Unique Diagnostic Trouble Code value for OBD.",
    "Unique Diagnostic Trouble Code value for UDS.",
    "Unique ID (Range: 0 ... 65535)  representing the service point.",
    "Unique Id part of the Stream Id.",
    "Unique Identifier that identifies the EventGroup in SOME/IP. This Identifier is sent as Eventgroup ID in SOME/IP Service Discovery messages.",
    "Unique Identifier that identifies the ServiceInterface in DDS. This Identifier is encoded in the USER_DATA QoS of the DomainParticipant associated with the Service Instance and its value is propagated by DDS Discovery messages.",
    "Unique Identifier that identifies the ServiceInterface in SOME/IP. This Identifier is sent as Service ID in SOME/IP Service Discovery messages.",
    "Unique Identifier within a ServiceInterface that identifies the Event in SOME/IP. This Identifier is sent as part of the Message ID in SOME/IP messages.",
    "Unique Identifier within a ServiceInterface that identifies the Method in SOME/IP. This Identifier is sent as part of the Message ID in SOME/IP messages.",
    "Unique number of the (virtual or physical) machine to which the Software Cluster is mapped.",
    "Unit and scaling ID according to ISO 15031-5.",
    "Unit measuring all times and providing a constant of the whole network. For level 1, this is always the CAN bit time. Unit: seconds.",
    "Unit measuring all times and providing a constant of the whole network. For level 1, this is always the CAN bit time. Unit: µs.",
    "Upper CAN Identifier of a receive CAN L-PDU for identifier range definition.",
    "Upper bound for the time to wait in [s] for sending first vehicle announcement message after IP address assignment. Represents parameter A_DoIP_Announce_Wait of ISO 13400-2:2019. The value of this timing shall be determined randomly in the closed interval [0..maxInitialVehicleAnnouncementTime].",
    "Upper bound of the DdsDomainRange.",
    "Upper limit for the start up and wake up listen timeout in the presence of noise. Expressed as a multiple of the cluster constant pdListenTimeout. Unit microticks",
    "Upper limit of the Collision Avoidance Symbol (CAS) acceptance window. Unit:bitDuration",
    "Upper range of IP addresses to be issued to DHCP clients. IPv6 Address. Notation: FFFF:...:FFFF.",
    "Upper range of IP addresses to be issued to DHCP clients. Pv4 Address. Notation: 255.255.255.255.",
    "Used CalibrationParameterValueSet for instance specific initialization of calibration parameters.",
    "Used to activate or deactivate the control bit vector support for a Fr Nm Channel.",
    "Used to activate or deactivate the repeat message bit support for a Fr Nm Channel.",
    "Used to define whether the value element for this definition shall be provided with an index.",
    "Used to support the specification of ordering of parameter values.",
    "VLAN Configuration.",
    "Value calculated via a system constant. This element is included in every case where parameters should be generated from numerical values during compile time (not runtime!). \r\n\r\nThus for example, the influence of the cylinder number on conversion formulae can be introduced in a repeatable manner.",
    "Value element of the map that stores the content associated to a key.",
    "Value for the startup listen timeout and wakeup listen timeout. Although this is a node local parameter, the real time equivalent of this value should be the same for all nodes in the cluster. Unit: Microticks",
    "Value in seconds of the performance requirement for (N_Br + N_Ar). N_Br is the elapsed time between the receiving indication of a FF or CF or the transmit confirmation of a FC, until the transmit request of the next FC.",
    "Value of first DataPrototype provided similar to a numerical ValueSpecification which is intended to be assigned to a Primitive data element.\r\nNote that the numerical value is a variant, it can be computed by a formula.",
    "Value of second DataPrototype provided similar to a numerical  ValueSpecification which is intended to be assigned to a Primitive data element.\r\nNote that the numerical value is a variant, it can be computed by a formula.",
    "Value of the N_AS timeout. Unit: seconds.",
    "Value of the parameter, not subject to variant handling.",
    "Value to compare with",
    "Value to match masked original CAN IDs.",
    "Value to specify the lower boundary",
    "Value to specify the upper boundary",
    "Value used by the receiver to calculate the difference between primary time reference point and secondary time reference point. Unit: Microticks (pDecodingCorrection)",
    "Value used to compensate for reception delays on channel A Unit: Microticks. This optional parameter shall only be filled out if channel A is used.",
    "Value used to compensate for reception delays on channel B. Unit: Microticks. This optional parameter shall only be filled out if channel B is used.",
    "Value used to fill data on the receiver side, if less then expected data is received.\r\n\r\nThe value is expected to cover the entire expected ISignal network payload.\r\nThis aggregation contains a variation point although it is not variant. Therefore, this variation point shall not exist in models. See constr_2638.",
    "Value used to fill the Event data on the receiver side, if less data than expected is received. The value is expected to cover the entire expected event network payload.\r\n\r\nThe value specification is supposed to take the order of serialized representation of the data on the network, as opposed to the order of elements in a data type description.\r\nThis aggregation contains a variation point although it is not variant. Therefore, this variation point shall not exist in models. See constr_2638.",
    "Value used to fill the Event data on the receiver side, if less data than expected is received. The value is expected to cover the entire expected event network payload. \r\n\r\nThe value specification is supposed to take the order of serialized representation of the data on the network, as opposed to the order of elements in a data type description.\r\nThis aggregation contains a variation point although it is not variant. Therefore, this variation point shall not exist in models. See constr_2638.",
    "Value which is subject to variant handling.\r\n\r\natpVariation: [RS_ECUC_00080]",
    "VariableDataPrototype instance qualifying the communication resource",
    "Variables used for comparison in an MCD process.",
    "Vehicle System Instance field of the NAME of this node.",
    "Vehicle System field of the NAME of this node.",
    "Vendor ID of this Implementation according to the\r\nAUTOSAR vendor list.",
    "Vendor ID of this Implementation according to the AUTOSAR vendor list",
    "Vendor of compiler.",
    "Vendor of linker.",
    "Version number of the Ecu Extract.",
    "Version number of the System Description.",
    "Version number of the context data. For more details see the IDSM protocol specfication.",
    "Version of the AUTOSAR Release on which this implementation is based. The numbering contains three levels (major, minor, revision) which are defined by AUTOSAR.",
    "Version of the AUTOSAR Release the element referred to is part of.  \r\n\r\nThe numbering contains three levels (major, minor, revision) which are defined by AUTOSAR.",
    "Version of the Adaptive Autosar Application",
    "Version of the IEEE1722TP stream.",
    "Version of the executable.",
    "Version of the implemented protocol.",
    "Version of the product within the period.",
    "Version of the used Discovery protocol.",
    "Version of the used remoting Technology.",
    "Version of the used serialization technology.",
    "Version specifier for a communication protocol.",
    "Version specifier for a communication protocol.\r\nProtocol version of the LinMaster and the LinSlaves may be different.",
    "Via this aggregation it is possible to describe the properties of the data that is obtained from the application for the environmental condition.",
    "Via this reference a connection between the VFB View and the Ethernet EventGroups can be created.",
    "Via this reference a connection between the VFB View and the Ethernet EventHandlers can be created.",
    "Via this reference a connection between the VFB View and the Ethernet Services can be created.",
    "ViewMaps that are collected by the ViewMapSet.",
    "Virtual CAN network ID of a CAN XL message.",
    "Virtual Function Cluster to be mapped onto a Partial Network Cluster. This reference is optional in case that the System Description doesn't use a complete Software Component Description (VFB View). This supports the inclusion of legacy systems.",
    "WaitForActivation cycle (which mostly cannot be parallelized), after the main usage of the worker pool has ended.",
    "We assume that there is exactly one top-level composition that includes all  Component instances  of the system.",
    "When this timeout expires the ContainerIPdu is sent out. The respective timer is started when the first Ipdu is put into the ContainerIPdu.\r\nThis attribute is ignored on receiver side.",
    "When this timeout expires the IEEE1722Tp ACF message is triggered for sending. The respective timer is started when the first Pdu is put into the IEEE1722Tp ACF message.\r\n\r\nDefined in seconds.",
    "Where FlexRay counts the slots in the static segment, TTCAN requires explicit Tx and Rx time marks.",
    "With the aggregation of SwDataDefProps an ISignal specifies how it is represented on the network. This representation follows a particular policy. Note that this causes some redundancy which is intended and can be used to support flexible development methodology as well as subsequent integrity checks. \r\n\r\nIf the policy \"networkRepresentationFromComSpec\" is chosen the network representation from the ComSpec that is aggregated by the PortPrototype shall be used. \r\nIf the \"override\" policy is chosen the requirements specified in the PortInterface and in the ComSpec are not fulfilled by the networkRepresentationProps. \r\nIn case the System Description doesn't use a complete Software Component Description (VFB View) the \"legacy\" policy can be chosen.",
    "With this aggregation SocketConnectionIpduIdentifier elements are assigned to all SocketConnections that are available in this SocketConnetionBundle.",
    "With this reference it is possible to identify which ConsumedProvidedServiceInstanceGroups are applicable for which ECUInstance.\r\nThis property was modified due to atpVariation (DirectedAssociationPattern).",
    "With this reference it is possible to identify which ISignalIPduGroups are applicable for which CommunicationConnector/ ECU. \r\n\r\nOnly top level ISignalIPduGroups shall be referenced by an EcuInstance. If an ISignalIPduGroup contains other ISignalIPduGroups than these contained ISignalIPduGroups shall not be referenced by the EcuInstance. Contained ISignalIPduGroups are associated to an EcuInstance via the top level ISignalIPduGroup.",
    "With this reference it is possible to identify which PduR IPdu Groups are applicable for which CommunicationConnector/ ECU.",
    "With this switch Transmit Cancellation can be turned on or off for this channel.\r\n\r\nPlease note that this attribute is deprecated and will be removed in future.",
    "With this switch Tx Cancellation can be turned on or off. Please note that the Rx Cancellation is always enabled.",
    "With this switch Tx and Rx Cancellation can be turned on or off.",
    "Worst case heap consumption. Unit: byte.",
    "Worst case stack consumption. Unit: byte.",
    "[ARMetaClass{PortPrototype}] on which the TimingEvent occurs",
    "[ARMetaClass{SwConnector}]s have the principal ability to establish a connection among [ARMetaClass{PortPrototype}]s. They can have many roles in the context of a [ARMetaClass{CompositionSwComponentType}]. Details are refined by subclasses.\r\n\r\nThe aggregation of [ARMetaClass{SwConnector}]s is subject to variability with the purpose to support variant data flow.\r\n\r\n'''begin restrict to CP AP'''\r\nThe aggregation is marked as atpSplitable in order to allow the extension of the ECU extract with [ARMetaClass{AssemblySwConnector}]s between [ARMetaClass{ApplicationSwComponentType}]s and [ARMetaClass{ServiceSwComponentType}]s during the ECU integration.\r\n'''end restrict to CP AP'''",
    "[ARMetaClass{TimingDescriptionEvent}] to be constrained.",
    "byPassPoint describes the required preparation of the host ECU. At a byPassPoint  the host ECU shall be capable to communicate with a RPT System in order to support the execution of the rapid prototyping algorithms with the original data calculated by the host system and to replace dedicated results of  the host system by the results of the rapid prototyping algorithm.",
    "defines the bit in the SupportInfo byte, which represents the PID DataElement\r\npidSize / position / size. Unit: byte.",
    "describes the alignment of the memory object in bits. E.g. \"1\" specifies, that the object in question is aligned to a byte while \"32\" specifies that it is aligned four byte.",
    "hierarchical tree(s) of Software Components belonging to this CP Software Cluster. This reference is used to describe the belonging SWCs if the CP Software Cluster is described in the context of a System,",
    "indicates, if a specification element is relevant for this data exchange point. \r\nIt is relevant if inScope==true. \r\nIt is not relevant or don't care if inScope=false.",
    "list of traced failures",
    "local TcpPort that will be used by the ServiceInstance for the communication.",
    "local UdpPort that will be used by the ServiceInstance for the communication.",
    "maps SwComponentPrototypes in a CP Software Cluster to ApplicationPartitions",
    "maps a communication resource to CP Software Clusters",
    "maps a service resource to CP Software Clusters",
    "port on which the TimingEvent shall apply",
    "port on which the TimingEvent shall apply (in the context of an AUTOSAR blueprint)",
    "read access to a variable",
    "receive NM Pdu.",
    "reference to a custom defined specification.",
    "reference to an ApplicationDataType that describes the scaling of the data reported by the software-component to the Dem.",
    "reference to busses (via NmNodes) that are coordinated by the NmCoordinator.",
    "remote Unicast or Multicast IPv4 Address",
    "remote Unicast or Multicast IPv6 Address",
    "remote tcpPort",
    "remote udpPort",
    "specifies the destination meta-class of the reference.",
    "state represents the current state of the current file according to the configuration management plan. It is a nameToken until possible states are  standardized.",
    "swValuesPhys represents the values in the physical domain.",
    "syscString indicates that the referenced system constant shall be evaluated as a string according to [TPS_SWCT_01431].",
    "tailoring to the Autosar Exchange Data Format\r\nThe subset and tailoring of the templates specifications (Meta-Classes, Attributes, Sdgs, Constraints, SpecItems)",
    "the specific properties if the data object is a text object.",
    "this attribute controls the execution state reporting behavior of the enclosing Executable.",
    "this indicates the scope of the referenced objects.",
    "this is subscript text",
    "this is the TeX representation of TeX formula. A TeX formula can be processed by a TeX or a LaTeX processor.",
    "this is the factor for the convesion from and to siUnits.",
    "this is the list of polynomial factors. Note that the first vf represents the power=0.  The polynomial is v[0] * x^0 + v[1] * x^1 ...",
    "this is the name of an individual or an organization wo issued thie current revision of the document or document fragment.",
    "this is the offset for the convesion from and to siUnits.",
    "this reference can be taken to identify the TimingEvent to be used by the RTE for implementing a cyclic writing strategy for this block",
    "this reference identifies the definition of the BinaryManifestResource. The definition provides configuration information that is shared among all BinaryManifestResources that refer to the BinaryManifestResourceDefinition.",
    "this reference is used to identify the applicable execution error",
    "this represents a formula defined as C-Code.",
    "this represents a formula using only text and white-space. It can be used to denote the formula in a kind of pseudo code or whatever appears approprate.\r\nThis aggregation contains a variation point although it is not variant. Therefore, this variation point shall not exist in models. See constr_2638.",
    "this represents a particular list item. Note that this is again a documentation block.Therefore lists can be arbitrarily nested. It is discouraged to have a very deep nesting.",
    "this rpresents the semantic and mathematical descriptions which are processed by a math-processor.",
    "this specifies the properties of a generic axis if applicable.",
    "transmit NM Pdu",
    "true/false: supervision activation status of SupervisedEntity shall be enabled/disabled at start.",
    "true: data of this NVRAM Block are write protected for normal operation (but protection can be disabled)\r\n\r\nfalse: no restriction",
    "true: software-component shall be allowed to deactivate supervision of this SupervisedEntity\r\n\r\nfalse:  software-component shall be not allowed to deactivate supervision of this SupervisedEntity",
    "write access to a variable",
];
